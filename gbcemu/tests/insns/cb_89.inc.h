    TEST(gbcemu, opcode_cb_89) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 89 0000
        gbc.setState(0x1d58, 0x36d8, 0xb0, 0xb02b, 0x59b8, 0x537a, 0x1, 0x1);
        gbc.writeMem(0x1d58, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x36d8);
        EXPECT(gbc.pc(), 0x1d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0001
        gbc.setState(0x6abb, 0x89f1, 0xe290, 0x258d, 0xef62, 0x756d, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x89f1);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0002
        gbc.setState(0x8b4d, 0xb7c5, 0x9790, 0x9704, 0xac65, 0x97c, 0x1, 0x0);
        gbc.writeMem(0x8b4d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb7c5);
        EXPECT(gbc.pc(), 0x8b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b4d), 0xcb);
        EXPECT(gbc.readMem(0x8b4e), 0x89);
        // CB 89 0003
        gbc.setState(0xafbc, 0xaa9a, 0x5370, 0x1393, 0xe21c, 0x6722, 0x1, 0x1);
        gbc.writeMem(0xafbc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xaa9a);
        EXPECT(gbc.pc(), 0xafbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbc), 0xcb);
        EXPECT(gbc.readMem(0xafbd), 0x89);
        // CB 89 0004
        gbc.setState(0xee96, 0xa0ef, 0xfa60, 0x24f5, 0xf2f8, 0x8aab, 0x0, 0x1);
        gbc.writeMem(0xee96, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa0ef);
        EXPECT(gbc.pc(), 0xee98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee96), 0xcb);
        EXPECT(gbc.readMem(0xee97), 0x89);
        // CB 89 0005
        gbc.setState(0x54a1, 0x80b8, 0x9880, 0xd6c5, 0x3e02, 0x952a, 0x0, 0x0);
        gbc.writeMem(0x54a1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x80b8);
        EXPECT(gbc.pc(), 0x54a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0006
        gbc.setState(0xb929, 0xd801, 0x4610, 0x8216, 0xdfc0, 0xc49d, 0x1, 0x0);
        gbc.writeMem(0xb929, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd801);
        EXPECT(gbc.pc(), 0xb92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb929), 0xcb);
        EXPECT(gbc.readMem(0xb92a), 0x89);
        // CB 89 0007
        gbc.setState(0x2a2f, 0x324f, 0x9fa0, 0x8205, 0x8b59, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0x2a2f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x324f);
        EXPECT(gbc.pc(), 0x2a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0008
        gbc.setState(0x4711, 0x5e3c, 0x22e0, 0x707, 0x6273, 0x6046, 0x1, 0x1);
        gbc.writeMem(0x4711, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5e3c);
        EXPECT(gbc.pc(), 0x4713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0009
        gbc.setState(0x948f, 0x2e76, 0xd060, 0xebc4, 0xe9ad, 0x325e, 0x1, 0x1);
        gbc.writeMem(0x948f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2e76);
        EXPECT(gbc.pc(), 0x9491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948f), 0xcb);
        EXPECT(gbc.readMem(0x9490), 0x89);
        // CB 89 000A
        gbc.setState(0xbf13, 0x80b9, 0x7ec0, 0xa2e4, 0x5403, 0x93ea, 0x1, 0x1);
        gbc.writeMem(0xbf13, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x80b9);
        EXPECT(gbc.pc(), 0xbf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf13), 0xcb);
        EXPECT(gbc.readMem(0xbf14), 0x89);
        // CB 89 000B
        gbc.setState(0x1ac5, 0x1a57, 0xa090, 0x3289, 0xb37, 0xe9c9, 0x1, 0x0);
        gbc.writeMem(0x1ac5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1a57);
        EXPECT(gbc.pc(), 0x1ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 000C
        gbc.setState(0x40b3, 0xe6c, 0x6630, 0x2fe0, 0xb2b4, 0x56ac, 0x0, 0x1);
        gbc.writeMem(0x40b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe6c);
        EXPECT(gbc.pc(), 0x40b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 000E
        gbc.setState(0x4a3e, 0xe51, 0x3dd0, 0x809, 0xf31f, 0xb184, 0x1, 0x1);
        gbc.writeMem(0x4a3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe51);
        EXPECT(gbc.pc(), 0x4a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 000F
        gbc.setState(0x30ad, 0x128f, 0x14d0, 0x90c6, 0x3591, 0x69b7, 0x1, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x128f);
        EXPECT(gbc.pc(), 0x30af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0010
        gbc.setState(0xa044, 0x8e8c, 0xc270, 0x420b, 0x9f14, 0x580, 0x1, 0x1);
        gbc.writeMem(0xa044, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8e8c);
        EXPECT(gbc.pc(), 0xa046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa044), 0xcb);
        EXPECT(gbc.readMem(0xa045), 0x89);
        // CB 89 0011
        gbc.setState(0xe580, 0x51db, 0x6380, 0x19cf, 0xf1b9, 0xca5b, 0x0, 0x0);
        gbc.writeMem(0xe580, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x51db);
        EXPECT(gbc.pc(), 0xe582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe580), 0xcb);
        EXPECT(gbc.readMem(0xe581), 0x89);
        // CB 89 0012
        gbc.setState(0x4db6, 0x9964, 0xe4f0, 0x8983, 0x3367, 0x4fe1, 0x0, 0x1);
        gbc.writeMem(0x4db6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9964);
        EXPECT(gbc.pc(), 0x4db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0014
        gbc.setState(0x3f6f, 0x8d57, 0xaf80, 0x79af, 0x3462, 0x59d7, 0x0, 0x1);
        gbc.writeMem(0x3f6f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8d57);
        EXPECT(gbc.pc(), 0x3f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0015
        gbc.setState(0x10a3, 0x3d7d, 0xc780, 0x46be, 0x69f8, 0x5fcf, 0x1, 0x1);
        gbc.writeMem(0x10a3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3d7d);
        EXPECT(gbc.pc(), 0x10a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0016
        gbc.setState(0x6082, 0xb3ce, 0x4570, 0xfe38, 0xab8b, 0xaaa, 0x0, 0x1);
        gbc.writeMem(0x6082, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb3ce);
        EXPECT(gbc.pc(), 0x6084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0017
        gbc.setState(0xa19d, 0xabb4, 0xa210, 0x6798, 0x8dd5, 0x34c6, 0x1, 0x0);
        gbc.writeMem(0xa19d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xabb4);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19d), 0xcb);
        EXPECT(gbc.readMem(0xa19e), 0x89);
        // CB 89 0018
        gbc.setState(0xdd0f, 0xb11d, 0xe700, 0xd208, 0x4fd4, 0x4fb8, 0x1, 0x0);
        gbc.writeMem(0xdd0f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb11d);
        EXPECT(gbc.pc(), 0xdd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd0f), 0xcb);
        EXPECT(gbc.readMem(0xdd10), 0x89);
        // CB 89 0019
        gbc.setState(0x12ec, 0x5bf1, 0x6b80, 0x16e2, 0xe898, 0x9cb6, 0x0, 0x0);
        gbc.writeMem(0x12ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5bf1);
        EXPECT(gbc.pc(), 0x12ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 001A
        gbc.setState(0xce59, 0x17ba, 0xd340, 0x7feb, 0x4c13, 0xc4e1, 0x1, 0x0);
        gbc.writeMem(0xce59, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x17ba);
        EXPECT(gbc.pc(), 0xce5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce59), 0xcb);
        EXPECT(gbc.readMem(0xce5a), 0x89);
        // CB 89 001B
        gbc.setState(0x2be4, 0x15d6, 0x1c90, 0x6ba4, 0x27ee, 0xfc49, 0x0, 0x0);
        gbc.writeMem(0x2be4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x15d6);
        EXPECT(gbc.pc(), 0x2be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 001C
        gbc.setState(0x1958, 0x1a14, 0xba70, 0xbd86, 0x83fb, 0xc704, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1a14);
        EXPECT(gbc.pc(), 0x195a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 001D
        gbc.setState(0xee77, 0xd416, 0xeb0, 0x15fe, 0x1491, 0xc69b, 0x1, 0x1);
        gbc.writeMem(0xee77, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd416);
        EXPECT(gbc.pc(), 0xee79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee77), 0xcb);
        EXPECT(gbc.readMem(0xee78), 0x89);
        // CB 89 001E
        gbc.setState(0xc99c, 0x2cc7, 0xf2e0, 0x7238, 0xafa4, 0xa560, 0x1, 0x0);
        gbc.writeMem(0xc99c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2cc7);
        EXPECT(gbc.pc(), 0xc99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99c), 0xcb);
        EXPECT(gbc.readMem(0xc99d), 0x89);
        // CB 89 0020
        gbc.setState(0x95b3, 0x1842, 0xdbb0, 0xb691, 0x49f4, 0x9917, 0x0, 0x1);
        gbc.writeMem(0x95b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1842);
        EXPECT(gbc.pc(), 0x95b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b3), 0xcb);
        EXPECT(gbc.readMem(0x95b4), 0x89);
        // CB 89 0021
        gbc.setState(0xb483, 0xd93f, 0xe390, 0xf643, 0xae7c, 0xd90, 0x1, 0x1);
        gbc.writeMem(0xb483, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd93f);
        EXPECT(gbc.pc(), 0xb485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb483), 0xcb);
        EXPECT(gbc.readMem(0xb484), 0x89);
        // CB 89 0022
        gbc.setState(0xba5b, 0x8d65, 0x1ed0, 0xbc05, 0x6e31, 0x9c33, 0x1, 0x1);
        gbc.writeMem(0xba5b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8d65);
        EXPECT(gbc.pc(), 0xba5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba5b), 0xcb);
        EXPECT(gbc.readMem(0xba5c), 0x89);
        // CB 89 0023
        gbc.setState(0x27ae, 0x9ba1, 0x2700, 0x80b, 0xe87, 0xd16f, 0x0, 0x1);
        gbc.writeMem(0x27ae, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9ba1);
        EXPECT(gbc.pc(), 0x27b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0024
        gbc.setState(0xa645, 0x7e02, 0x2d10, 0x6472, 0xae2d, 0x3511, 0x1, 0x1);
        gbc.writeMem(0xa645, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7e02);
        EXPECT(gbc.pc(), 0xa647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa645), 0xcb);
        EXPECT(gbc.readMem(0xa646), 0x89);
        // CB 89 0025
        gbc.setState(0x401, 0x5b12, 0xea80, 0x3bad, 0x45ff, 0x481d, 0x1, 0x1);
        gbc.writeMem(0x401, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5b12);
        EXPECT(gbc.pc(), 0x403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0026
        gbc.setState(0x92c9, 0x19f8, 0x4390, 0xeb19, 0x9373, 0xb7a6, 0x1, 0x0);
        gbc.writeMem(0x92c9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x19f8);
        EXPECT(gbc.pc(), 0x92cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c9), 0xcb);
        EXPECT(gbc.readMem(0x92ca), 0x89);
        // CB 89 0027
        gbc.setState(0xb50e, 0x1ce6, 0xd370, 0xded6, 0x5144, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0xb50e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1ce6);
        EXPECT(gbc.pc(), 0xb510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50e), 0xcb);
        EXPECT(gbc.readMem(0xb50f), 0x89);
        // CB 89 0028
        gbc.setState(0x9b35, 0x4ab3, 0x54f0, 0x65d1, 0x830a, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x9b35, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4ab3);
        EXPECT(gbc.pc(), 0x9b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b35), 0xcb);
        EXPECT(gbc.readMem(0x9b36), 0x89);
        // CB 89 002A
        gbc.setState(0x8093, 0x1f84, 0xf1b0, 0xf6a7, 0x23f3, 0x77fb, 0x0, 0x1);
        gbc.writeMem(0x8093, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1f84);
        EXPECT(gbc.pc(), 0x8095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8093), 0xcb);
        EXPECT(gbc.readMem(0x8094), 0x89);
        // CB 89 002B
        gbc.setState(0x28b6, 0x865f, 0x5470, 0x9441, 0x7714, 0x61df, 0x1, 0x1);
        gbc.writeMem(0x28b6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x865f);
        EXPECT(gbc.pc(), 0x28b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 002C
        gbc.setState(0xebba, 0xf844, 0x56d0, 0xe8b6, 0xd369, 0xb86b, 0x0, 0x0);
        gbc.writeMem(0xebba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf844);
        EXPECT(gbc.pc(), 0xebbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebba), 0xcb);
        EXPECT(gbc.readMem(0xebbb), 0x89);
        // CB 89 002D
        gbc.setState(0x1c31, 0x9d5f, 0xb140, 0xac8c, 0xda3d, 0x33e8, 0x0, 0x1);
        gbc.writeMem(0x1c31, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9d5f);
        EXPECT(gbc.pc(), 0x1c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 002E
        gbc.setState(0x8aad, 0xf06e, 0x4720, 0x7c53, 0xdbfa, 0x8a4a, 0x0, 0x1);
        gbc.writeMem(0x8aad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf06e);
        EXPECT(gbc.pc(), 0x8aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aad), 0xcb);
        EXPECT(gbc.readMem(0x8aae), 0x89);
        // CB 89 002F
        gbc.setState(0xa11b, 0x355a, 0xf040, 0x12a1, 0x2b01, 0xdaeb, 0x1, 0x0);
        gbc.writeMem(0xa11b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x355a);
        EXPECT(gbc.pc(), 0xa11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11b), 0xcb);
        EXPECT(gbc.readMem(0xa11c), 0x89);
        // CB 89 0030
        gbc.setState(0x3b94, 0xf52d, 0xecd0, 0x728d, 0x4acf, 0x9fb7, 0x1, 0x0);
        gbc.writeMem(0x3b94, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf52d);
        EXPECT(gbc.pc(), 0x3b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0032
        gbc.setState(0x11d, 0xb053, 0xeff0, 0x94d2, 0xae10, 0x6bbf, 0x1, 0x0);
        gbc.writeMem(0x11d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb053);
        EXPECT(gbc.pc(), 0x11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0033
        gbc.setState(0xdea3, 0x5a94, 0x8cf0, 0x630a, 0xf66b, 0x7815, 0x0, 0x0);
        gbc.writeMem(0xdea3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5a94);
        EXPECT(gbc.pc(), 0xdea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea3), 0xcb);
        EXPECT(gbc.readMem(0xdea4), 0x89);
        // CB 89 0034
        gbc.setState(0xa484, 0xc9fb, 0x960, 0x591c, 0xa57, 0x706c, 0x0, 0x0);
        gbc.writeMem(0xa484, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc9fb);
        EXPECT(gbc.pc(), 0xa486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa484), 0xcb);
        EXPECT(gbc.readMem(0xa485), 0x89);
        // CB 89 0035
        gbc.setState(0x6f01, 0x4d39, 0xadd0, 0x8ba6, 0xd2bf, 0x58d0, 0x1, 0x1);
        gbc.writeMem(0x6f01, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4d39);
        EXPECT(gbc.pc(), 0x6f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0036
        gbc.setState(0x86db, 0x5d96, 0xd7a0, 0x8539, 0xb8d5, 0x2042, 0x1, 0x0);
        gbc.writeMem(0x86db, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5d96);
        EXPECT(gbc.pc(), 0x86dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86db), 0xcb);
        EXPECT(gbc.readMem(0x86dc), 0x89);
        // CB 89 0037
        gbc.setState(0xe25e, 0xa616, 0x2270, 0x4eae, 0xba10, 0x2536, 0x0, 0x0);
        gbc.writeMem(0xe25e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa616);
        EXPECT(gbc.pc(), 0xe260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25e), 0xcb);
        EXPECT(gbc.readMem(0xe25f), 0x89);
        // CB 89 0038
        gbc.setState(0x265, 0x3b1d, 0xf7a0, 0x6b13, 0x52fe, 0x4837, 0x1, 0x0);
        gbc.writeMem(0x265, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3b1d);
        EXPECT(gbc.pc(), 0x267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0039
        gbc.setState(0x3814, 0x5868, 0x9330, 0xba3b, 0x8d99, 0xb96f, 0x0, 0x0);
        gbc.writeMem(0x3814, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5868);
        EXPECT(gbc.pc(), 0x3816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 003A
        gbc.setState(0x9bc7, 0xcc4d, 0xbc30, 0xdd3a, 0xaede, 0xfcc7, 0x1, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcc4d);
        EXPECT(gbc.pc(), 0x9bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc7), 0xcb);
        EXPECT(gbc.readMem(0x9bc8), 0x89);
        // CB 89 003B
        gbc.setState(0x855, 0xb781, 0x9c50, 0xdf4d, 0xcad2, 0x3d5a, 0x0, 0x0);
        gbc.writeMem(0x855, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb781);
        EXPECT(gbc.pc(), 0x857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 003C
        gbc.setState(0x3af9, 0x5875, 0xf7e0, 0x17b5, 0xdee3, 0x2af8, 0x0, 0x0);
        gbc.writeMem(0x3af9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5875);
        EXPECT(gbc.pc(), 0x3afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 003D
        gbc.setState(0xe159, 0xe3b0, 0x2a10, 0x95ca, 0xf92c, 0xf155, 0x0, 0x0);
        gbc.writeMem(0xe159, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe3b0);
        EXPECT(gbc.pc(), 0xe15b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe159), 0xcb);
        EXPECT(gbc.readMem(0xe15a), 0x89);
        // CB 89 003E
        gbc.setState(0x18dc, 0x9ada, 0xa1e0, 0x22f0, 0x29c2, 0x89e1, 0x0, 0x1);
        gbc.writeMem(0x18dc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9ada);
        EXPECT(gbc.pc(), 0x18de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 003F
        gbc.setState(0xab36, 0xa584, 0x2b80, 0x1c4f, 0x693f, 0x1409, 0x0, 0x0);
        gbc.writeMem(0xab36, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa584);
        EXPECT(gbc.pc(), 0xab38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab36), 0xcb);
        EXPECT(gbc.readMem(0xab37), 0x89);
        // CB 89 0040
        gbc.setState(0xa3f5, 0xa0a8, 0x5aa0, 0xacef, 0xc9ee, 0x287, 0x1, 0x0);
        gbc.writeMem(0xa3f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa0a8);
        EXPECT(gbc.pc(), 0xa3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f5), 0xcb);
        EXPECT(gbc.readMem(0xa3f6), 0x89);
        // CB 89 0041
        gbc.setState(0xdc47, 0xee87, 0xa450, 0x8a28, 0xb824, 0xed4, 0x1, 0x1);
        gbc.writeMem(0xdc47, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xee87);
        EXPECT(gbc.pc(), 0xdc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc47), 0xcb);
        EXPECT(gbc.readMem(0xdc48), 0x89);
        // CB 89 0042
        gbc.setState(0xbd6, 0xa47, 0x5ec0, 0xfb4b, 0x7881, 0xaf4d, 0x1, 0x1);
        gbc.writeMem(0xbd6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa47);
        EXPECT(gbc.pc(), 0xbd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0043
        gbc.setState(0x3eba, 0xb445, 0xae0, 0x8dd7, 0x33c9, 0xe1b, 0x0, 0x1);
        gbc.writeMem(0x3eba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb445);
        EXPECT(gbc.pc(), 0x3ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0044
        gbc.setState(0x7a14, 0x61d0, 0x890, 0x1e8a, 0x2525, 0x70f6, 0x1, 0x1);
        gbc.writeMem(0x7a14, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x61d0);
        EXPECT(gbc.pc(), 0x7a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0045
        gbc.setState(0x267c, 0x1a73, 0x6dd0, 0x3757, 0x5999, 0x58d0, 0x1, 0x0);
        gbc.writeMem(0x267c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1a73);
        EXPECT(gbc.pc(), 0x267e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0046
        gbc.setState(0xb38, 0xe1f0, 0xa9b0, 0x16ce, 0xdf7, 0xe856, 0x0, 0x1);
        gbc.writeMem(0xb38, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe1f0);
        EXPECT(gbc.pc(), 0xb3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0047
        gbc.setState(0x8a08, 0x6cf2, 0x30e0, 0xe1a8, 0x2482, 0xd69f, 0x0, 0x0);
        gbc.writeMem(0x8a08, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6cf2);
        EXPECT(gbc.pc(), 0x8a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a08), 0xcb);
        EXPECT(gbc.readMem(0x8a09), 0x89);
        // CB 89 0048
        gbc.setState(0x2c19, 0x22b8, 0x19f0, 0xbed5, 0xf254, 0xa734, 0x1, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x22b8);
        EXPECT(gbc.pc(), 0x2c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0049
        gbc.setState(0x36d1, 0x5c32, 0xfd90, 0xb95d, 0x35ac, 0x8034, 0x1, 0x1);
        gbc.writeMem(0x36d1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5c32);
        EXPECT(gbc.pc(), 0x36d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 004A
        gbc.setState(0xce1, 0xff91, 0xb7b0, 0xf924, 0xc855, 0x35a9, 0x1, 0x0);
        gbc.writeMem(0xce1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xff91);
        EXPECT(gbc.pc(), 0xce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 004B
        gbc.setState(0x1a7d, 0x94a3, 0xdf80, 0x19e3, 0xdb1, 0x8013, 0x0, 0x0);
        gbc.writeMem(0x1a7d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x94a3);
        EXPECT(gbc.pc(), 0x1a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 004C
        gbc.setState(0x5784, 0xf32e, 0xb4e0, 0xd45f, 0xeaac, 0x4ac4, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf32e);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 004D
        gbc.setState(0xef66, 0xfa0b, 0x4b90, 0xbb16, 0xa5dd, 0x7298, 0x1, 0x0);
        gbc.writeMem(0xef66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfa0b);
        EXPECT(gbc.pc(), 0xef68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef66), 0xcb);
        EXPECT(gbc.readMem(0xef67), 0x89);
        // CB 89 004E
        gbc.setState(0xd05, 0xb166, 0xb590, 0x454e, 0x5ec, 0x616a, 0x1, 0x1);
        gbc.writeMem(0xd05, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb166);
        EXPECT(gbc.pc(), 0xd07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0050
        gbc.setState(0xdf74, 0x7173, 0xf750, 0xd5d1, 0xd677, 0xb95c, 0x0, 0x1);
        gbc.writeMem(0xdf74, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7173);
        EXPECT(gbc.pc(), 0xdf76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf74), 0xcb);
        EXPECT(gbc.readMem(0xdf75), 0x89);
        // CB 89 0051
        gbc.setState(0x25d0, 0xab40, 0x8d10, 0xdb12, 0x23f7, 0x40ad, 0x0, 0x1);
        gbc.writeMem(0x25d0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xab40);
        EXPECT(gbc.pc(), 0x25d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0052
        gbc.setState(0x80a0, 0x4f12, 0xb3a0, 0x4e4d, 0x2a79, 0xd6a3, 0x1, 0x1);
        gbc.writeMem(0x80a0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4f12);
        EXPECT(gbc.pc(), 0x80a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a0), 0xcb);
        EXPECT(gbc.readMem(0x80a1), 0x89);
        // CB 89 0054
        gbc.setState(0x4667, 0x97de, 0x4100, 0xe5b0, 0x888b, 0x800f, 0x1, 0x1);
        gbc.writeMem(0x4667, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x97de);
        EXPECT(gbc.pc(), 0x4669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0055
        gbc.setState(0x4894, 0xd46e, 0x1550, 0xc8b, 0x3ed7, 0xb913, 0x1, 0x1);
        gbc.writeMem(0x4894, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd46e);
        EXPECT(gbc.pc(), 0x4896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0056
        gbc.setState(0xd2e3, 0x9c48, 0x2e20, 0x2476, 0x9159, 0xd487, 0x1, 0x1);
        gbc.writeMem(0xd2e3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9c48);
        EXPECT(gbc.pc(), 0xd2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e3), 0xcb);
        EXPECT(gbc.readMem(0xd2e4), 0x89);
        // CB 89 0057
        gbc.setState(0x4dbe, 0x22d8, 0xa9b0, 0x2e79, 0x614, 0x74a, 0x0, 0x0);
        gbc.writeMem(0x4dbe, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x22d8);
        EXPECT(gbc.pc(), 0x4dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0058
        gbc.setState(0x72c2, 0x9cf3, 0xf290, 0xe39a, 0x3b97, 0x3ea7, 0x1, 0x0);
        gbc.writeMem(0x72c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9cf3);
        EXPECT(gbc.pc(), 0x72c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0059
        gbc.setState(0x9931, 0x8bbf, 0xb5d0, 0xf05f, 0xe410, 0x1d0e, 0x1, 0x0);
        gbc.writeMem(0x9931, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8bbf);
        EXPECT(gbc.pc(), 0x9933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9931), 0xcb);
        EXPECT(gbc.readMem(0x9932), 0x89);
        // CB 89 005A
        gbc.setState(0x4660, 0x6ca0, 0x3550, 0x3a91, 0x718d, 0xeacb, 0x0, 0x1);
        gbc.writeMem(0x4660, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6ca0);
        EXPECT(gbc.pc(), 0x4662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 005B
        gbc.setState(0x7330, 0x96, 0x5dc0, 0xf96f, 0xf3d, 0x8534, 0x1, 0x0);
        gbc.writeMem(0x7330, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x96);
        EXPECT(gbc.pc(), 0x7332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 005C
        gbc.setState(0xb9d8, 0x6faa, 0x94b0, 0x21a8, 0x1a39, 0x10cd, 0x1, 0x0);
        gbc.writeMem(0xb9d8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6faa);
        EXPECT(gbc.pc(), 0xb9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d8), 0xcb);
        EXPECT(gbc.readMem(0xb9d9), 0x89);
        // CB 89 005D
        gbc.setState(0xa698, 0x869, 0x98b0, 0x16dd, 0x7b63, 0x4fcc, 0x1, 0x0);
        gbc.writeMem(0xa698, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x869);
        EXPECT(gbc.pc(), 0xa69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa698), 0xcb);
        EXPECT(gbc.readMem(0xa699), 0x89);
        // CB 89 005E
        gbc.setState(0xc2df, 0xa281, 0x42a0, 0x8f8, 0x69e6, 0x9ade, 0x0, 0x0);
        gbc.writeMem(0xc2df, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa281);
        EXPECT(gbc.pc(), 0xc2e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2df), 0xcb);
        EXPECT(gbc.readMem(0xc2e0), 0x89);
        // CB 89 005F
        gbc.setState(0x3feb, 0xdb4f, 0x6230, 0xbc70, 0x433f, 0x1ebe, 0x0, 0x1);
        gbc.writeMem(0x3feb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdb4f);
        EXPECT(gbc.pc(), 0x3fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0060
        gbc.setState(0x1173, 0xf74f, 0x29b0, 0xf055, 0x686, 0xbcf, 0x1, 0x0);
        gbc.writeMem(0x1173, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf74f);
        EXPECT(gbc.pc(), 0x1175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0061
        gbc.setState(0xd17f, 0x5aaf, 0x72d0, 0x4036, 0x5791, 0x6de7, 0x1, 0x1);
        gbc.writeMem(0xd17f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5aaf);
        EXPECT(gbc.pc(), 0xd181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd17f), 0xcb);
        EXPECT(gbc.readMem(0xd180), 0x89);
        // CB 89 0062
        gbc.setState(0x217a, 0x5338, 0x7810, 0xc19c, 0x4484, 0x125d, 0x1, 0x0);
        gbc.writeMem(0x217a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5338);
        EXPECT(gbc.pc(), 0x217c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0063
        gbc.setState(0x3679, 0xe0ff, 0xbb50, 0xa6a, 0xc369, 0x6cda, 0x1, 0x0);
        gbc.writeMem(0x3679, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe0ff);
        EXPECT(gbc.pc(), 0x367b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0064
        gbc.setState(0x6e16, 0x470f, 0x3d80, 0xfb70, 0x74fc, 0x7086, 0x0, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x470f);
        EXPECT(gbc.pc(), 0x6e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0066
        gbc.setState(0xcc35, 0x7fd9, 0x9140, 0xab97, 0xf18b, 0xbc, 0x1, 0x1);
        gbc.writeMem(0xcc35, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7fd9);
        EXPECT(gbc.pc(), 0xcc37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc35), 0xcb);
        EXPECT(gbc.readMem(0xcc36), 0x89);
        // CB 89 0067
        gbc.setState(0xe35c, 0x30ec, 0x1cf0, 0x501f, 0x7c74, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0xe35c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x30ec);
        EXPECT(gbc.pc(), 0xe35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35c), 0xcb);
        EXPECT(gbc.readMem(0xe35d), 0x89);
        // CB 89 0068
        gbc.setState(0xac89, 0xbc42, 0xee70, 0xe2a6, 0x2faf, 0x1a5d, 0x0, 0x1);
        gbc.writeMem(0xac89, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbc42);
        EXPECT(gbc.pc(), 0xac8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac89), 0xcb);
        EXPECT(gbc.readMem(0xac8a), 0x89);
        // CB 89 0069
        gbc.setState(0xb28a, 0x9b9d, 0x7760, 0x2084, 0xad98, 0x6f7a, 0x0, 0x0);
        gbc.writeMem(0xb28a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9b9d);
        EXPECT(gbc.pc(), 0xb28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb28a), 0xcb);
        EXPECT(gbc.readMem(0xb28b), 0x89);
        // CB 89 006A
        gbc.setState(0x62d5, 0xd660, 0x3a10, 0x492d, 0xb394, 0x1cac, 0x1, 0x1);
        gbc.writeMem(0x62d5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd660);
        EXPECT(gbc.pc(), 0x62d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 006B
        gbc.setState(0xcf49, 0x40f2, 0x41e0, 0xb9e4, 0x7cc7, 0x992d, 0x1, 0x1);
        gbc.writeMem(0xcf49, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x40f2);
        EXPECT(gbc.pc(), 0xcf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf49), 0xcb);
        EXPECT(gbc.readMem(0xcf4a), 0x89);
        // CB 89 006C
        gbc.setState(0x112f, 0x4662, 0x42c0, 0xbbe6, 0x3e51, 0xa836, 0x0, 0x0);
        gbc.writeMem(0x112f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4662);
        EXPECT(gbc.pc(), 0x1131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 006D
        gbc.setState(0xe16c, 0xaed, 0xb060, 0x443d, 0x68aa, 0xf4cb, 0x0, 0x0);
        gbc.writeMem(0xe16c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xaed);
        EXPECT(gbc.pc(), 0xe16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16c), 0xcb);
        EXPECT(gbc.readMem(0xe16d), 0x89);
        // CB 89 006E
        gbc.setState(0xe78b, 0xf966, 0x9120, 0x5a55, 0x46f, 0xba10, 0x1, 0x0);
        gbc.writeMem(0xe78b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf966);
        EXPECT(gbc.pc(), 0xe78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78b), 0xcb);
        EXPECT(gbc.readMem(0xe78c), 0x89);
        // CB 89 006F
        gbc.setState(0x7aba, 0x45ea, 0x4010, 0x1f90, 0x2b08, 0x1574, 0x1, 0x0);
        gbc.writeMem(0x7aba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x45ea);
        EXPECT(gbc.pc(), 0x7abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0070
        gbc.setState(0x8cd0, 0x8149, 0xb410, 0x2a95, 0x47b7, 0x8e24, 0x0, 0x0);
        gbc.writeMem(0x8cd0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8149);
        EXPECT(gbc.pc(), 0x8cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd0), 0xcb);
        EXPECT(gbc.readMem(0x8cd1), 0x89);
        // CB 89 0071
        gbc.setState(0x1e65, 0x62e8, 0x44f0, 0x73b3, 0xba91, 0x2114, 0x1, 0x1);
        gbc.writeMem(0x1e65, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x62e8);
        EXPECT(gbc.pc(), 0x1e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0072
        gbc.setState(0x8682, 0xbf2c, 0xbb40, 0x147e, 0xbab2, 0x93ea, 0x1, 0x1);
        gbc.writeMem(0x8682, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbf2c);
        EXPECT(gbc.pc(), 0x8684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8682), 0xcb);
        EXPECT(gbc.readMem(0x8683), 0x89);
        // CB 89 0074
        gbc.setState(0x22cc, 0x4249, 0x6430, 0x687b, 0xec75, 0x29d9, 0x1, 0x0);
        gbc.writeMem(0x22cc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4249);
        EXPECT(gbc.pc(), 0x22ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0075
        gbc.setState(0xcca, 0xbe1f, 0x270, 0xf837, 0x739e, 0x4e1, 0x0, 0x1);
        gbc.writeMem(0xcca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbe1f);
        EXPECT(gbc.pc(), 0xccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0076
        gbc.setState(0x46e, 0x7e8d, 0x9410, 0x2a4c, 0xe22c, 0x959a, 0x0, 0x0);
        gbc.writeMem(0x46e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7e8d);
        EXPECT(gbc.pc(), 0x470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0077
        gbc.setState(0x607f, 0xb55f, 0x3a80, 0xc262, 0x24e7, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x607f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb55f);
        EXPECT(gbc.pc(), 0x6081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0078
        gbc.setState(0xa8f5, 0x1122, 0x8d70, 0xddce, 0x1284, 0xeddf, 0x0, 0x0);
        gbc.writeMem(0xa8f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1122);
        EXPECT(gbc.pc(), 0xa8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f5), 0xcb);
        EXPECT(gbc.readMem(0xa8f6), 0x89);
        // CB 89 0079
        gbc.setState(0xd1bd, 0x8ce8, 0x8680, 0x96ce, 0x8df2, 0x9389, 0x0, 0x0);
        gbc.writeMem(0xd1bd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8ce8);
        EXPECT(gbc.pc(), 0xd1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bd), 0xcb);
        EXPECT(gbc.readMem(0xd1be), 0x89);
        // CB 89 007A
        gbc.setState(0x8f47, 0xbea8, 0x44d0, 0x36b8, 0xbf0e, 0x5b18, 0x0, 0x1);
        gbc.writeMem(0x8f47, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbea8);
        EXPECT(gbc.pc(), 0x8f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f47), 0xcb);
        EXPECT(gbc.readMem(0x8f48), 0x89);
        // CB 89 007B
        gbc.setState(0x9fea, 0x4bae, 0x97d0, 0x2e0e, 0x3a1a, 0x52b7, 0x0, 0x1);
        gbc.writeMem(0x9fea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4bae);
        EXPECT(gbc.pc(), 0x9fec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fea), 0xcb);
        EXPECT(gbc.readMem(0x9feb), 0x89);
        // CB 89 007C
        gbc.setState(0xddd, 0x5baf, 0x6190, 0x339a, 0x3977, 0x9e70, 0x1, 0x1);
        gbc.writeMem(0xddd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5baf);
        EXPECT(gbc.pc(), 0xddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 007D
        gbc.setState(0xe31a, 0xb2b2, 0x5070, 0x9f65, 0xa3c8, 0xc446, 0x0, 0x0);
        gbc.writeMem(0xe31a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb2b2);
        EXPECT(gbc.pc(), 0xe31c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe31a), 0xcb);
        EXPECT(gbc.readMem(0xe31b), 0x89);
        // CB 89 007E
        gbc.setState(0xe6df, 0xb062, 0xede0, 0x5382, 0xd85a, 0x4c10, 0x0, 0x0);
        gbc.writeMem(0xe6df, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb062);
        EXPECT(gbc.pc(), 0xe6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6df), 0xcb);
        EXPECT(gbc.readMem(0xe6e0), 0x89);
        // CB 89 007F
        gbc.setState(0xa25a, 0x50ce, 0x7d00, 0x9cf8, 0x1973, 0xa454, 0x0, 0x0);
        gbc.writeMem(0xa25a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x50ce);
        EXPECT(gbc.pc(), 0xa25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa25a), 0xcb);
        EXPECT(gbc.readMem(0xa25b), 0x89);
        // CB 89 0080
        gbc.setState(0x7143, 0x89f8, 0xdc10, 0xbc34, 0x38e1, 0x3b81, 0x0, 0x1);
        gbc.writeMem(0x7143, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x89f8);
        EXPECT(gbc.pc(), 0x7145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0081
        gbc.setState(0xefbd, 0xedba, 0x5b40, 0x10f, 0xed89, 0x9de, 0x0, 0x0);
        gbc.writeMem(0xefbd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xedba);
        EXPECT(gbc.pc(), 0xefbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefbd), 0xcb);
        EXPECT(gbc.readMem(0xefbe), 0x89);
        // CB 89 0082
        gbc.setState(0x3681, 0x4851, 0x75b0, 0xa822, 0xa4b1, 0x8a2e, 0x1, 0x1);
        gbc.writeMem(0x3681, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4851);
        EXPECT(gbc.pc(), 0x3683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0083
        gbc.setState(0x6e8e, 0x45f9, 0x1c0, 0x2ad9, 0x8c93, 0x86cb, 0x0, 0x1);
        gbc.writeMem(0x6e8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x45f9);
        EXPECT(gbc.pc(), 0x6e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0085
        gbc.setState(0xd042, 0xd3a6, 0x5860, 0x5122, 0x2472, 0x5a21, 0x0, 0x0);
        gbc.writeMem(0xd042, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd3a6);
        EXPECT(gbc.pc(), 0xd044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd042), 0xcb);
        EXPECT(gbc.readMem(0xd043), 0x89);
        // CB 89 0086
        gbc.setState(0x16fa, 0x9023, 0xed70, 0x9fe2, 0x2d86, 0xded9, 0x1, 0x0);
        gbc.writeMem(0x16fa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9023);
        EXPECT(gbc.pc(), 0x16fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0087
        gbc.setState(0x5ed7, 0xb322, 0x91e0, 0xfbc6, 0x4d03, 0x8414, 0x0, 0x0);
        gbc.writeMem(0x5ed7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb322);
        EXPECT(gbc.pc(), 0x5ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0088
        gbc.setState(0x90f4, 0x3bab, 0xea30, 0x5e71, 0xa28b, 0x1db6, 0x1, 0x0);
        gbc.writeMem(0x90f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3bab);
        EXPECT(gbc.pc(), 0x90f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f4), 0xcb);
        EXPECT(gbc.readMem(0x90f5), 0x89);
        // CB 89 0089
        gbc.setState(0x30e, 0xd49f, 0xe930, 0xc47f, 0xa6f2, 0x32c5, 0x1, 0x1);
        gbc.writeMem(0x30e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd49f);
        EXPECT(gbc.pc(), 0x310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 008A
        gbc.setState(0x43b3, 0xe8fe, 0xa6b0, 0x56d3, 0xcf86, 0xd04e, 0x1, 0x0);
        gbc.writeMem(0x43b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe8fe);
        EXPECT(gbc.pc(), 0x43b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 008B
        gbc.setState(0xc202, 0xc9e1, 0xcdc0, 0xdfff, 0x2e32, 0xa71f, 0x0, 0x1);
        gbc.writeMem(0xc202, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc9e1);
        EXPECT(gbc.pc(), 0xc204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc202), 0xcb);
        EXPECT(gbc.readMem(0xc203), 0x89);
        // CB 89 008C
        gbc.setState(0xde1d, 0x38b3, 0xc200, 0xa32a, 0x6eb6, 0x480, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x38b3);
        EXPECT(gbc.pc(), 0xde1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1d), 0xcb);
        EXPECT(gbc.readMem(0xde1e), 0x89);
        // CB 89 008D
        gbc.setState(0x95b2, 0x73e7, 0xee10, 0x36a0, 0x41ab, 0x3924, 0x1, 0x0);
        gbc.writeMem(0x95b2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x73e7);
        EXPECT(gbc.pc(), 0x95b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b2), 0xcb);
        EXPECT(gbc.readMem(0x95b3), 0x89);
        // CB 89 008E
        gbc.setState(0x621b, 0xa12c, 0x9310, 0x8a5e, 0xe312, 0xa10c, 0x1, 0x0);
        gbc.writeMem(0x621b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa12c);
        EXPECT(gbc.pc(), 0x621d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 008F
        gbc.setState(0xe192, 0xd0ec, 0xe8a0, 0xd4e8, 0xffca, 0x529d, 0x0, 0x0);
        gbc.writeMem(0xe192, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd0ec);
        EXPECT(gbc.pc(), 0xe194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe192), 0xcb);
        EXPECT(gbc.readMem(0xe193), 0x89);
        // CB 89 0091
        gbc.setState(0x2786, 0x7e24, 0xbee0, 0x5526, 0x589, 0xe238, 0x0, 0x0);
        gbc.writeMem(0x2786, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7e24);
        EXPECT(gbc.pc(), 0x2788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0092
        gbc.setState(0xa6d6, 0x3ade, 0xedd0, 0xa9f6, 0xd03d, 0xa703, 0x0, 0x1);
        gbc.writeMem(0xa6d6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3ade);
        EXPECT(gbc.pc(), 0xa6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d6), 0xcb);
        EXPECT(gbc.readMem(0xa6d7), 0x89);
        // CB 89 0093
        gbc.setState(0x2c52, 0x9d06, 0x4bb0, 0x21d3, 0x428f, 0x7473, 0x0, 0x0);
        gbc.writeMem(0x2c52, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9d06);
        EXPECT(gbc.pc(), 0x2c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0094
        gbc.setState(0x3bd4, 0x627d, 0x4c90, 0x3340, 0x6c4b, 0x522d, 0x1, 0x1);
        gbc.writeMem(0x3bd4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x627d);
        EXPECT(gbc.pc(), 0x3bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0095
        gbc.setState(0x4112, 0x9863, 0xea60, 0xf814, 0x3d09, 0x4e4d, 0x0, 0x1);
        gbc.writeMem(0x4112, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9863);
        EXPECT(gbc.pc(), 0x4114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0096
        gbc.setState(0x8d11, 0xca4c, 0x4170, 0xf0f2, 0xc3d9, 0xc142, 0x1, 0x0);
        gbc.writeMem(0x8d11, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xca4c);
        EXPECT(gbc.pc(), 0x8d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d11), 0xcb);
        EXPECT(gbc.readMem(0x8d12), 0x89);
        // CB 89 0097
        gbc.setState(0x2501, 0x213d, 0x6860, 0x3780, 0x53d4, 0x89fb, 0x0, 0x1);
        gbc.writeMem(0x2501, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x213d);
        EXPECT(gbc.pc(), 0x2503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0098
        gbc.setState(0xd07d, 0x5c70, 0x2a10, 0x75de, 0xc7bc, 0xec77, 0x1, 0x0);
        gbc.writeMem(0xd07d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5c70);
        EXPECT(gbc.pc(), 0xd07f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07d), 0xcb);
        EXPECT(gbc.readMem(0xd07e), 0x89);
        // CB 89 0099
        gbc.setState(0x2a5d, 0x390, 0xa8e0, 0x5c53, 0xd55a, 0x9fcd, 0x1, 0x1);
        gbc.writeMem(0x2a5d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x390);
        EXPECT(gbc.pc(), 0x2a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 009A
        gbc.setState(0x8c5b, 0x29a7, 0x2030, 0xee3d, 0x28f2, 0xeb59, 0x0, 0x1);
        gbc.writeMem(0x8c5b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x29a7);
        EXPECT(gbc.pc(), 0x8c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5b), 0xcb);
        EXPECT(gbc.readMem(0x8c5c), 0x89);
        // CB 89 009B
        gbc.setState(0x4f6e, 0xeef3, 0x8cc0, 0xc48d, 0x9571, 0xe30a, 0x0, 0x0);
        gbc.writeMem(0x4f6e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xeef3);
        EXPECT(gbc.pc(), 0x4f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 009C
        gbc.setState(0x6dcb, 0xaf02, 0xa4c0, 0x3cd8, 0x2803, 0x427a, 0x0, 0x1);
        gbc.writeMem(0x6dcb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xaf02);
        EXPECT(gbc.pc(), 0x6dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 009D
        gbc.setState(0x4cbd, 0xc408, 0x8ed0, 0x5237, 0x1487, 0x992c, 0x1, 0x0);
        gbc.writeMem(0x4cbd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc408);
        EXPECT(gbc.pc(), 0x4cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 009E
        gbc.setState(0x6f60, 0xf05c, 0x6450, 0x15dd, 0x174a, 0x6256, 0x0, 0x1);
        gbc.writeMem(0x6f60, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf05c);
        EXPECT(gbc.pc(), 0x6f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 009F
        gbc.setState(0xbde8, 0x6e85, 0xce60, 0xa2f9, 0xab50, 0xa49b, 0x1, 0x0);
        gbc.writeMem(0xbde8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6e85);
        EXPECT(gbc.pc(), 0xbdea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde8), 0xcb);
        EXPECT(gbc.readMem(0xbde9), 0x89);
        // CB 89 00A0
        gbc.setState(0x4b6a, 0x679f, 0x7d40, 0x3597, 0x236f, 0xd3c0, 0x1, 0x1);
        gbc.writeMem(0x4b6a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x679f);
        EXPECT(gbc.pc(), 0x4b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00A1
        gbc.setState(0x471b, 0x2fee, 0x1070, 0x66a5, 0x11f2, 0x2b12, 0x1, 0x1);
        gbc.writeMem(0x471b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2fee);
        EXPECT(gbc.pc(), 0x471d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00A2
        gbc.setState(0x8698, 0xb142, 0x54b0, 0x88e6, 0x4e5b, 0xedbe, 0x1, 0x0);
        gbc.writeMem(0x8698, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0x869a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8698), 0xcb);
        EXPECT(gbc.readMem(0x8699), 0x89);
        // CB 89 00A3
        gbc.setState(0xa1b5, 0x71ad, 0xa1c0, 0x1593, 0xd05b, 0x7adb, 0x1, 0x1);
        gbc.writeMem(0xa1b5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x71ad);
        EXPECT(gbc.pc(), 0xa1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b5), 0xcb);
        EXPECT(gbc.readMem(0xa1b6), 0x89);
        // CB 89 00A4
        gbc.setState(0xc03a, 0xddfb, 0x3470, 0x7d9e, 0x7c4c, 0x63e6, 0x0, 0x1);
        gbc.writeMem(0xc03a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xddfb);
        EXPECT(gbc.pc(), 0xc03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc03a), 0xcb);
        EXPECT(gbc.readMem(0xc03b), 0x89);
        // CB 89 00A5
        gbc.setState(0xa06d, 0x5a7e, 0x2910, 0x6a04, 0x70c0, 0x9574, 0x0, 0x0);
        gbc.writeMem(0xa06d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5a7e);
        EXPECT(gbc.pc(), 0xa06f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa06d), 0xcb);
        EXPECT(gbc.readMem(0xa06e), 0x89);
        // CB 89 00A6
        gbc.setState(0xcac4, 0x7363, 0xa0e0, 0xbce, 0x23a0, 0x572e, 0x1, 0x0);
        gbc.writeMem(0xcac4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7363);
        EXPECT(gbc.pc(), 0xcac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac4), 0xcb);
        EXPECT(gbc.readMem(0xcac5), 0x89);
        // CB 89 00A7
        gbc.setState(0x3374, 0x3de5, 0x1510, 0x4be1, 0xd2e8, 0x7c0a, 0x1, 0x0);
        gbc.writeMem(0x3374, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3de5);
        EXPECT(gbc.pc(), 0x3376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00A8
        gbc.setState(0xe52d, 0xbb6b, 0xbe10, 0x43b2, 0xe783, 0x4409, 0x0, 0x1);
        gbc.writeMem(0xe52d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbb6b);
        EXPECT(gbc.pc(), 0xe52f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52d), 0xcb);
        EXPECT(gbc.readMem(0xe52e), 0x89);
        // CB 89 00A9
        gbc.setState(0x6809, 0x263a, 0x4980, 0x1d91, 0x3ce4, 0x7345, 0x1, 0x0);
        gbc.writeMem(0x6809, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0x680b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00AA
        gbc.setState(0x8ed6, 0xd9ee, 0x7240, 0x80a2, 0xd972, 0x9356, 0x1, 0x0);
        gbc.writeMem(0x8ed6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd9ee);
        EXPECT(gbc.pc(), 0x8ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed6), 0xcb);
        EXPECT(gbc.readMem(0x8ed7), 0x89);
        // CB 89 00AB
        gbc.setState(0x7535, 0xee3f, 0x7e70, 0x3cd, 0x27fa, 0xcbf7, 0x0, 0x0);
        gbc.writeMem(0x7535, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xee3f);
        EXPECT(gbc.pc(), 0x7537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00AC
        gbc.setState(0x2a1a, 0x1792, 0x2d10, 0xc1a9, 0xdc07, 0x51ec, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1792);
        EXPECT(gbc.pc(), 0x2a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00AD
        gbc.setState(0xa3ec, 0xffc3, 0x5990, 0x3f0f, 0xfe4, 0xa4e2, 0x1, 0x1);
        gbc.writeMem(0xa3ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xffc3);
        EXPECT(gbc.pc(), 0xa3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ec), 0xcb);
        EXPECT(gbc.readMem(0xa3ed), 0x89);
        // CB 89 00AE
        gbc.setState(0x95b6, 0x2704, 0x9950, 0x267c, 0x685c, 0x5d6f, 0x0, 0x0);
        gbc.writeMem(0x95b6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2704);
        EXPECT(gbc.pc(), 0x95b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b6), 0xcb);
        EXPECT(gbc.readMem(0x95b7), 0x89);
        // CB 89 00B0
        gbc.setState(0xc6c7, 0xfa83, 0x5630, 0xc3b0, 0x2e9d, 0x256e, 0x1, 0x0);
        gbc.writeMem(0xc6c7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfa83);
        EXPECT(gbc.pc(), 0xc6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c7), 0xcb);
        EXPECT(gbc.readMem(0xc6c8), 0x89);
        // CB 89 00B1
        gbc.setState(0xdd54, 0x270a, 0x3e10, 0x8184, 0x521c, 0x902d, 0x1, 0x1);
        gbc.writeMem(0xdd54, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x270a);
        EXPECT(gbc.pc(), 0xdd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd54), 0xcb);
        EXPECT(gbc.readMem(0xdd55), 0x89);
        // CB 89 00B2
        gbc.setState(0x1d0b, 0x766c, 0x5c0, 0x960e, 0x1cf5, 0x2040, 0x1, 0x0);
        gbc.writeMem(0x1d0b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x766c);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00B3
        gbc.setState(0x15f2, 0x991c, 0xdcc0, 0x7204, 0xe9ca, 0x1e48, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x991c);
        EXPECT(gbc.pc(), 0x15f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00B4
        gbc.setState(0x5a1c, 0x9761, 0x31b0, 0x8ae3, 0xfd, 0xae06, 0x0, 0x1);
        gbc.writeMem(0x5a1c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9761);
        EXPECT(gbc.pc(), 0x5a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00B5
        gbc.setState(0x7ee8, 0xb22b, 0xd5e0, 0x3048, 0xee86, 0xa9de, 0x0, 0x0);
        gbc.writeMem(0x7ee8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb22b);
        EXPECT(gbc.pc(), 0x7eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00B6
        gbc.setState(0xc214, 0xab16, 0xe30, 0xde2f, 0xacb, 0xb98b, 0x1, 0x0);
        gbc.writeMem(0xc214, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xab16);
        EXPECT(gbc.pc(), 0xc216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc214), 0xcb);
        EXPECT(gbc.readMem(0xc215), 0x89);
        // CB 89 00B7
        gbc.setState(0x9e93, 0xe20c, 0x9910, 0x3d71, 0xd275, 0x73e7, 0x1, 0x1);
        gbc.writeMem(0x9e93, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe20c);
        EXPECT(gbc.pc(), 0x9e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e93), 0xcb);
        EXPECT(gbc.readMem(0x9e94), 0x89);
        // CB 89 00B8
        gbc.setState(0x54ec, 0x92f, 0x2330, 0x805b, 0xe945, 0x6fb6, 0x1, 0x1);
        gbc.writeMem(0x54ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x92f);
        EXPECT(gbc.pc(), 0x54ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00B9
        gbc.setState(0x1f05, 0xcdc1, 0x6940, 0x5b52, 0x9f77, 0x6193, 0x1, 0x1);
        gbc.writeMem(0x1f05, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcdc1);
        EXPECT(gbc.pc(), 0x1f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00BA
        gbc.setState(0x6b7b, 0xdda2, 0x3bc0, 0x11a8, 0x2b66, 0x84e8, 0x1, 0x0);
        gbc.writeMem(0x6b7b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdda2);
        EXPECT(gbc.pc(), 0x6b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00BB
        gbc.setState(0xd24f, 0xf21b, 0x4400, 0xd839, 0xfbe6, 0x885d, 0x1, 0x1);
        gbc.writeMem(0xd24f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf21b);
        EXPECT(gbc.pc(), 0xd251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24f), 0xcb);
        EXPECT(gbc.readMem(0xd250), 0x89);
        // CB 89 00BC
        gbc.setState(0xa8d1, 0xf005, 0xa6d0, 0xf6da, 0x87be, 0xc8ee, 0x0, 0x1);
        gbc.writeMem(0xa8d1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf005);
        EXPECT(gbc.pc(), 0xa8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d1), 0xcb);
        EXPECT(gbc.readMem(0xa8d2), 0x89);
        // CB 89 00BD
        gbc.setState(0xc690, 0xea9d, 0x8350, 0xa851, 0x7f7e, 0xf06a, 0x0, 0x0);
        gbc.writeMem(0xc690, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xea9d);
        EXPECT(gbc.pc(), 0xc692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc690), 0xcb);
        EXPECT(gbc.readMem(0xc691), 0x89);
        // CB 89 00BE
        gbc.setState(0x7d8c, 0xa84, 0x3960, 0x9a3b, 0xedf9, 0xcf63, 0x1, 0x1);
        gbc.writeMem(0x7d8c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa84);
        EXPECT(gbc.pc(), 0x7d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00BF
        gbc.setState(0x7700, 0xebbf, 0x5e50, 0xd596, 0x6b25, 0x3079, 0x0, 0x0);
        gbc.writeMem(0x7700, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0x7702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00C0
        gbc.setState(0x7317, 0xa9ca, 0xa6b0, 0x6b39, 0xbb86, 0x4f9c, 0x0, 0x1);
        gbc.writeMem(0x7317, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa9ca);
        EXPECT(gbc.pc(), 0x7319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00C1
        gbc.setState(0xd229, 0xf244, 0x7620, 0x8968, 0xf4c3, 0xcc35, 0x1, 0x0);
        gbc.writeMem(0xd229, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf244);
        EXPECT(gbc.pc(), 0xd22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd229), 0xcb);
        EXPECT(gbc.readMem(0xd22a), 0x89);
        // CB 89 00C2
        gbc.setState(0x61f8, 0x48ba, 0x2900, 0x20ae, 0xbe3e, 0xecae, 0x0, 0x1);
        gbc.writeMem(0x61f8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0x61fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00C3
        gbc.setState(0x3475, 0xce5c, 0x9960, 0xcfe4, 0x396c, 0x2c83, 0x0, 0x0);
        gbc.writeMem(0x3475, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xce5c);
        EXPECT(gbc.pc(), 0x3477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00C4
        gbc.setState(0xca42, 0x94b4, 0xa1e0, 0xcec0, 0x6cb0, 0x178c, 0x0, 0x0);
        gbc.writeMem(0xca42, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x94b4);
        EXPECT(gbc.pc(), 0xca44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca42), 0xcb);
        EXPECT(gbc.readMem(0xca43), 0x89);
        // CB 89 00C5
        gbc.setState(0x7e5f, 0x239a, 0xbc40, 0xaaf2, 0x9088, 0x8f4e, 0x0, 0x1);
        gbc.writeMem(0x7e5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x239a);
        EXPECT(gbc.pc(), 0x7e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00C6
        gbc.setState(0x4478, 0xe874, 0xbea0, 0x1ea3, 0xe8a2, 0xcd27, 0x0, 0x1);
        gbc.writeMem(0x4478, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe874);
        EXPECT(gbc.pc(), 0x447a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00C7
        gbc.setState(0x46e6, 0x7dad, 0x6d50, 0xf553, 0x6f, 0xab61, 0x1, 0x0);
        gbc.writeMem(0x46e6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7dad);
        EXPECT(gbc.pc(), 0x46e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00C8
        gbc.setState(0x876e, 0x9205, 0x39e0, 0xcdda, 0xec26, 0x9928, 0x1, 0x0);
        gbc.writeMem(0x876e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9205);
        EXPECT(gbc.pc(), 0x8770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876e), 0xcb);
        EXPECT(gbc.readMem(0x876f), 0x89);
        // CB 89 00C9
        gbc.setState(0x7b75, 0x8758, 0x2ee0, 0xcaa5, 0xfb4c, 0xafc5, 0x0, 0x0);
        gbc.writeMem(0x7b75, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8758);
        EXPECT(gbc.pc(), 0x7b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00CA
        gbc.setState(0x68, 0xa8af, 0xb830, 0xee71, 0xb855, 0x54b8, 0x0, 0x0);
        gbc.writeMem(0x68, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa8af);
        EXPECT(gbc.pc(), 0x6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00CB
        gbc.setState(0xc827, 0x4643, 0xc0c0, 0x4508, 0xf547, 0x890b, 0x1, 0x0);
        gbc.writeMem(0xc827, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4643);
        EXPECT(gbc.pc(), 0xc829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc827), 0xcb);
        EXPECT(gbc.readMem(0xc828), 0x89);
        // CB 89 00CC
        gbc.setState(0xc504, 0xcbbf, 0x2870, 0xc244, 0x1c75, 0x6ec2, 0x0, 0x1);
        gbc.writeMem(0xc504, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcbbf);
        EXPECT(gbc.pc(), 0xc506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc504), 0xcb);
        EXPECT(gbc.readMem(0xc505), 0x89);
        // CB 89 00CD
        gbc.setState(0xed52, 0x2302, 0x1fa0, 0x7c12, 0x8d81, 0xcfb1, 0x1, 0x0);
        gbc.writeMem(0xed52, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2302);
        EXPECT(gbc.pc(), 0xed54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed52), 0xcb);
        EXPECT(gbc.readMem(0xed53), 0x89);
        // CB 89 00CE
        gbc.setState(0xa79c, 0x87d4, 0x9210, 0x796f, 0x2523, 0x62cf, 0x0, 0x1);
        gbc.writeMem(0xa79c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x87d4);
        EXPECT(gbc.pc(), 0xa79e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79c), 0xcb);
        EXPECT(gbc.readMem(0xa79d), 0x89);
        // CB 89 00CF
        gbc.setState(0x3253, 0xcadc, 0xcdc0, 0xc4ab, 0xcd67, 0x688b, 0x1, 0x0);
        gbc.writeMem(0x3253, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcadc);
        EXPECT(gbc.pc(), 0x3255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00D0
        gbc.setState(0xe7ec, 0xbfcd, 0x9de0, 0x6311, 0x5ac2, 0x69, 0x0, 0x1);
        gbc.writeMem(0xe7ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbfcd);
        EXPECT(gbc.pc(), 0xe7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ec), 0xcb);
        EXPECT(gbc.readMem(0xe7ed), 0x89);
        // CB 89 00D1
        gbc.setState(0x5eaf, 0x5def, 0x9b30, 0x98d, 0x23d0, 0x8585, 0x0, 0x0);
        gbc.writeMem(0x5eaf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5def);
        EXPECT(gbc.pc(), 0x5eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00D2
        gbc.setState(0x2848, 0x64e5, 0xd0e0, 0x12e9, 0xa898, 0x95b8, 0x0, 0x1);
        gbc.writeMem(0x2848, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x64e5);
        EXPECT(gbc.pc(), 0x284a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00D3
        gbc.setState(0x7e77, 0x6618, 0x380, 0x43fa, 0xb06c, 0xb9ca, 0x1, 0x0);
        gbc.writeMem(0x7e77, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6618);
        EXPECT(gbc.pc(), 0x7e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00D4
        gbc.setState(0x7f53, 0xebfa, 0x85b0, 0x65be, 0x3f05, 0xadb6, 0x0, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xebfa);
        EXPECT(gbc.pc(), 0x7f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00D5
        gbc.setState(0x6a3e, 0xd81f, 0x8c20, 0x4944, 0x6e7d, 0x6a87, 0x0, 0x1);
        gbc.writeMem(0x6a3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd81f);
        EXPECT(gbc.pc(), 0x6a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00D6
        gbc.setState(0x614, 0xfdbd, 0xa2a0, 0x3916, 0xc5d7, 0xb581, 0x1, 0x0);
        gbc.writeMem(0x614, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfdbd);
        EXPECT(gbc.pc(), 0x616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00D7
        gbc.setState(0x7fe3, 0x68f7, 0x92d0, 0x4125, 0x39d3, 0xa87c, 0x1, 0x0);
        gbc.writeMem(0x7fe3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x68f7);
        EXPECT(gbc.pc(), 0x7fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00D8
        gbc.setState(0xb121, 0x5d95, 0xab60, 0x7728, 0x140f, 0x61da, 0x1, 0x1);
        gbc.writeMem(0xb121, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5d95);
        EXPECT(gbc.pc(), 0xb123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb121), 0xcb);
        EXPECT(gbc.readMem(0xb122), 0x89);
        // CB 89 00D9
        gbc.setState(0x1409, 0xad22, 0x45f0, 0x323, 0xa7d9, 0xbdd4, 0x0, 0x1);
        gbc.writeMem(0x1409, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xad22);
        EXPECT(gbc.pc(), 0x140b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00DA
        gbc.setState(0xe29c, 0x9a53, 0xb680, 0x8151, 0xa98, 0xd5ca, 0x1, 0x0);
        gbc.writeMem(0xe29c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9a53);
        EXPECT(gbc.pc(), 0xe29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe29c), 0xcb);
        EXPECT(gbc.readMem(0xe29d), 0x89);
        // CB 89 00DB
        gbc.setState(0x6b41, 0xaf6c, 0xfee0, 0x107d, 0xa433, 0x121e, 0x0, 0x1);
        gbc.writeMem(0x6b41, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xaf6c);
        EXPECT(gbc.pc(), 0x6b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00DC
        gbc.setState(0x24ab, 0xc290, 0xdd50, 0x69ce, 0x922c, 0xec24, 0x0, 0x1);
        gbc.writeMem(0x24ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc290);
        EXPECT(gbc.pc(), 0x24ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00DD
        gbc.setState(0x1f1e, 0xea, 0x8680, 0x54fc, 0x51c3, 0xdfbe, 0x0, 0x1);
        gbc.writeMem(0x1f1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xea);
        EXPECT(gbc.pc(), 0x1f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00DE
        gbc.setState(0x361a, 0x3103, 0x6110, 0x7e19, 0x425a, 0xb2bc, 0x1, 0x0);
        gbc.writeMem(0x361a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3103);
        EXPECT(gbc.pc(), 0x361c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00DF
        gbc.setState(0x4445, 0x3c72, 0x22d0, 0x1361, 0x3cd0, 0xda90, 0x0, 0x0);
        gbc.writeMem(0x4445, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3c72);
        EXPECT(gbc.pc(), 0x4447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00E0
        gbc.setState(0x79ff, 0xdd63, 0x2390, 0x1f2a, 0x886b, 0x2713, 0x1, 0x0);
        gbc.writeMem(0x79ff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdd63);
        EXPECT(gbc.pc(), 0x7a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00E1
        gbc.setState(0x6cf5, 0x8c77, 0xfec0, 0xc9dd, 0x402a, 0x3dad, 0x0, 0x0);
        gbc.writeMem(0x6cf5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8c77);
        EXPECT(gbc.pc(), 0x6cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00E2
        gbc.setState(0xdb39, 0x9dd7, 0xace0, 0x8014, 0x800a, 0x4ae0, 0x1, 0x0);
        gbc.writeMem(0xdb39, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9dd7);
        EXPECT(gbc.pc(), 0xdb3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb39), 0xcb);
        EXPECT(gbc.readMem(0xdb3a), 0x89);
        // CB 89 00E3
        gbc.setState(0xcd59, 0xb2d2, 0xebe0, 0x3701, 0x511c, 0x97c2, 0x1, 0x0);
        gbc.writeMem(0xcd59, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb2d2);
        EXPECT(gbc.pc(), 0xcd5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd59), 0xcb);
        EXPECT(gbc.readMem(0xcd5a), 0x89);
        // CB 89 00E4
        gbc.setState(0xe1de, 0x58d2, 0x3740, 0xb5cd, 0x964e, 0x77ba, 0x1, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x58d2);
        EXPECT(gbc.pc(), 0xe1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1de), 0xcb);
        EXPECT(gbc.readMem(0xe1df), 0x89);
        // CB 89 00E5
        gbc.setState(0xb917, 0xa1cc, 0x20, 0x19a7, 0xd4ed, 0xd87b, 0x0, 0x0);
        gbc.writeMem(0xb917, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa1cc);
        EXPECT(gbc.pc(), 0xb919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb917), 0xcb);
        EXPECT(gbc.readMem(0xb918), 0x89);
        // CB 89 00E6
        gbc.setState(0x9bbf, 0x9b3a, 0x4a70, 0x6269, 0x1371, 0xa230, 0x1, 0x0);
        gbc.writeMem(0x9bbf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0x9bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbf), 0xcb);
        EXPECT(gbc.readMem(0x9bc0), 0x89);
        // CB 89 00E7
        gbc.setState(0xdb5a, 0x59f3, 0x79a0, 0x9a1a, 0xf30d, 0xbb26, 0x0, 0x1);
        gbc.writeMem(0xdb5a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x59f3);
        EXPECT(gbc.pc(), 0xdb5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5a), 0xcb);
        EXPECT(gbc.readMem(0xdb5b), 0x89);
        // CB 89 00E8
        gbc.setState(0x733e, 0x8aaa, 0x8a00, 0x9cb7, 0x50d8, 0xa229, 0x1, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8aaa);
        EXPECT(gbc.pc(), 0x7340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00E9
        gbc.setState(0xda8a, 0x63cc, 0x22e0, 0x754, 0xf474, 0x296d, 0x0, 0x1);
        gbc.writeMem(0xda8a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x63cc);
        EXPECT(gbc.pc(), 0xda8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8a), 0xcb);
        EXPECT(gbc.readMem(0xda8b), 0x89);
        // CB 89 00EA
        gbc.setState(0x3ef5, 0xad89, 0x80, 0x7011, 0xe808, 0xded3, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xad89);
        EXPECT(gbc.pc(), 0x3ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00EB
        gbc.setState(0xbf1e, 0xdfd7, 0x3cc0, 0x957, 0x939c, 0xda45, 0x1, 0x1);
        gbc.writeMem(0xbf1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdfd7);
        EXPECT(gbc.pc(), 0xbf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1e), 0xcb);
        EXPECT(gbc.readMem(0xbf1f), 0x89);
        // CB 89 00EC
        gbc.setState(0xe362, 0x2959, 0x8a00, 0x73, 0xc017, 0x7656, 0x0, 0x0);
        gbc.writeMem(0xe362, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2959);
        EXPECT(gbc.pc(), 0xe364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe362), 0xcb);
        EXPECT(gbc.readMem(0xe363), 0x89);
        // CB 89 00ED
        gbc.setState(0xde01, 0x3a5b, 0x1560, 0x3c7c, 0x7cd9, 0x83cc, 0x1, 0x0);
        gbc.writeMem(0xde01, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3a5b);
        EXPECT(gbc.pc(), 0xde03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde01), 0xcb);
        EXPECT(gbc.readMem(0xde02), 0x89);
        // CB 89 00EE
        gbc.setState(0xd680, 0x9ca0, 0xd980, 0xf20, 0xfc46, 0xb977, 0x1, 0x1);
        gbc.writeMem(0xd680, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9ca0);
        EXPECT(gbc.pc(), 0xd682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd680), 0xcb);
        EXPECT(gbc.readMem(0xd681), 0x89);
        // CB 89 00EF
        gbc.setState(0x4a6b, 0xb0bd, 0x3360, 0xf958, 0xc148, 0x42c1, 0x1, 0x1);
        gbc.writeMem(0x4a6b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb0bd);
        EXPECT(gbc.pc(), 0x4a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 00F0
        gbc.setState(0xaf25, 0x564, 0x9800, 0xaef0, 0xddfb, 0xfad1, 0x1, 0x1);
        gbc.writeMem(0xaf25, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x564);
        EXPECT(gbc.pc(), 0xaf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf25), 0xcb);
        EXPECT(gbc.readMem(0xaf26), 0x89);
        // CB 89 00F1
        gbc.setState(0xe562, 0x1dba, 0xafd0, 0xf6be, 0xb1a2, 0xad4, 0x0, 0x1);
        gbc.writeMem(0xe562, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1dba);
        EXPECT(gbc.pc(), 0xe564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe562), 0xcb);
        EXPECT(gbc.readMem(0xe563), 0x89);
        // CB 89 00F2
        gbc.setState(0xebb, 0x7866, 0x9730, 0x549c, 0xf3da, 0x4c5b, 0x1, 0x1);
        gbc.writeMem(0xebb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7866);
        EXPECT(gbc.pc(), 0xebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00F3
        gbc.setState(0xbd87, 0x3d03, 0x6360, 0x2a5e, 0x14d3, 0x346, 0x0, 0x0);
        gbc.writeMem(0xbd87, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3d03);
        EXPECT(gbc.pc(), 0xbd89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd87), 0xcb);
        EXPECT(gbc.readMem(0xbd88), 0x89);
        // CB 89 00F4
        gbc.setState(0xcd56, 0x9a5f, 0xb920, 0xf59, 0x391a, 0xec42, 0x1, 0x1);
        gbc.writeMem(0xcd56, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9a5f);
        EXPECT(gbc.pc(), 0xcd58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd56), 0xcb);
        EXPECT(gbc.readMem(0xcd57), 0x89);
        // CB 89 00F5
        gbc.setState(0xeeff, 0x9227, 0xf110, 0x4c24, 0x9ce9, 0xd34a, 0x1, 0x1);
        gbc.writeMem(0xeeff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9227);
        EXPECT(gbc.pc(), 0xef01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeff), 0xcb);
        EXPECT(gbc.readMem(0xef00), 0x89);
        // CB 89 00F6
        gbc.setState(0x33a2, 0x2677, 0x7af0, 0x8565, 0xa9c5, 0x68df, 0x0, 0x0);
        gbc.writeMem(0x33a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2677);
        EXPECT(gbc.pc(), 0x33a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00F7
        gbc.setState(0xb4dc, 0x193a, 0x16a0, 0x8a76, 0xf0e, 0xdc0, 0x0, 0x1);
        gbc.writeMem(0xb4dc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x193a);
        EXPECT(gbc.pc(), 0xb4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4dc), 0xcb);
        EXPECT(gbc.readMem(0xb4dd), 0x89);
        // CB 89 00F8
        gbc.setState(0x8288, 0xb3d0, 0x41f0, 0x7de1, 0xaacb, 0xa953, 0x1, 0x1);
        gbc.writeMem(0x8288, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb3d0);
        EXPECT(gbc.pc(), 0x828a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8288), 0xcb);
        EXPECT(gbc.readMem(0x8289), 0x89);
        // CB 89 00F9
        gbc.setState(0xa1a9, 0xf994, 0xb0e0, 0xfe12, 0x621e, 0xaebf, 0x0, 0x1);
        gbc.writeMem(0xa1a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf994);
        EXPECT(gbc.pc(), 0xa1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a9), 0xcb);
        EXPECT(gbc.readMem(0xa1aa), 0x89);
        // CB 89 00FA
        gbc.setState(0x1523, 0x25ea, 0xf1b0, 0x9a43, 0xede6, 0x2740, 0x1, 0x0);
        gbc.writeMem(0x1523, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x25ea);
        EXPECT(gbc.pc(), 0x1525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00FB
        gbc.setState(0x8665, 0xfc88, 0xcd30, 0xddc7, 0xa24d, 0xeb07, 0x0, 0x1);
        gbc.writeMem(0x8665, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfc88);
        EXPECT(gbc.pc(), 0x8667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8665), 0xcb);
        EXPECT(gbc.readMem(0x8666), 0x89);
        // CB 89 00FC
        gbc.setState(0x602d, 0x9a3f, 0xf850, 0x658b, 0x49cd, 0x6bc2, 0x1, 0x0);
        gbc.writeMem(0x602d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9a3f);
        EXPECT(gbc.pc(), 0x602f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 00FD
        gbc.setState(0xba87, 0xaae5, 0x8f20, 0xf42e, 0x1565, 0x54fb, 0x1, 0x0);
        gbc.writeMem(0xba87, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaae5);
        EXPECT(gbc.pc(), 0xba89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba87), 0xcb);
        EXPECT(gbc.readMem(0xba88), 0x89);
        // CB 89 00FE
        gbc.setState(0xb9aa, 0x62a8, 0xfa30, 0x3f3b, 0x67b0, 0x15b0, 0x0, 0x1);
        gbc.writeMem(0xb9aa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x62a8);
        EXPECT(gbc.pc(), 0xb9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9aa), 0xcb);
        EXPECT(gbc.readMem(0xb9ab), 0x89);
        // CB 89 00FF
        gbc.setState(0x5f06, 0x53c0, 0xfcf0, 0x141e, 0xa147, 0x2bba, 0x1, 0x1);
        gbc.writeMem(0x5f06, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x53c0);
        EXPECT(gbc.pc(), 0x5f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0100
        gbc.setState(0x2c43, 0xb0cf, 0xd130, 0x61c2, 0x91f4, 0x2cb4, 0x1, 0x0);
        gbc.writeMem(0x2c43, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb0cf);
        EXPECT(gbc.pc(), 0x2c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0101
        gbc.setState(0x6760, 0xdcd6, 0xf870, 0x216a, 0x92bd, 0xc66c, 0x0, 0x0);
        gbc.writeMem(0x6760, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdcd6);
        EXPECT(gbc.pc(), 0x6762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0102
        gbc.setState(0x8fa0, 0x20ba, 0x310, 0xcf8d, 0xdca7, 0x5092, 0x1, 0x1);
        gbc.writeMem(0x8fa0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x20ba);
        EXPECT(gbc.pc(), 0x8fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa0), 0xcb);
        EXPECT(gbc.readMem(0x8fa1), 0x89);
        // CB 89 0103
        gbc.setState(0xcbb8, 0x8801, 0xbb70, 0x2500, 0x25ff, 0x45f3, 0x1, 0x1);
        gbc.writeMem(0xcbb8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8801);
        EXPECT(gbc.pc(), 0xcbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb8), 0xcb);
        EXPECT(gbc.readMem(0xcbb9), 0x89);
        // CB 89 0104
        gbc.setState(0xed1b, 0x433c, 0xbc60, 0x3f4f, 0x632f, 0x9587, 0x0, 0x1);
        gbc.writeMem(0xed1b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x433c);
        EXPECT(gbc.pc(), 0xed1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1b), 0xcb);
        EXPECT(gbc.readMem(0xed1c), 0x89);
        // CB 89 0105
        gbc.setState(0x5927, 0xc166, 0xdab0, 0x3898, 0xee09, 0x1083, 0x0, 0x0);
        gbc.writeMem(0x5927, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc166);
        EXPECT(gbc.pc(), 0x5929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0106
        gbc.setState(0x6f88, 0x7d3b, 0x2fa0, 0xde54, 0x8ab2, 0xf274, 0x1, 0x1);
        gbc.writeMem(0x6f88, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7d3b);
        EXPECT(gbc.pc(), 0x6f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0107
        gbc.setState(0xa745, 0x6323, 0x94a0, 0xbdf7, 0x600c, 0xab7b, 0x1, 0x1);
        gbc.writeMem(0xa745, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6323);
        EXPECT(gbc.pc(), 0xa747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa745), 0xcb);
        EXPECT(gbc.readMem(0xa746), 0x89);
        // CB 89 0108
        gbc.setState(0xc11b, 0x2e75, 0xfc20, 0xe75d, 0xb87a, 0xa7ba, 0x0, 0x0);
        gbc.writeMem(0xc11b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2e75);
        EXPECT(gbc.pc(), 0xc11d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11b), 0xcb);
        EXPECT(gbc.readMem(0xc11c), 0x89);
        // CB 89 0109
        gbc.setState(0xd1e0, 0x82b7, 0xa3e0, 0xd997, 0x61be, 0x90f1, 0x1, 0x1);
        gbc.writeMem(0xd1e0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x82b7);
        EXPECT(gbc.pc(), 0xd1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e0), 0xcb);
        EXPECT(gbc.readMem(0xd1e1), 0x89);
        // CB 89 010A
        gbc.setState(0xebfd, 0xdd5d, 0xc10, 0xc3e5, 0x7f21, 0x645c, 0x1, 0x0);
        gbc.writeMem(0xebfd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdd5d);
        EXPECT(gbc.pc(), 0xebff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfd), 0xcb);
        EXPECT(gbc.readMem(0xebfe), 0x89);
        // CB 89 010B
        gbc.setState(0xc4fb, 0x8453, 0xd80, 0xd523, 0x427, 0x9193, 0x0, 0x0);
        gbc.writeMem(0xc4fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8453);
        EXPECT(gbc.pc(), 0xc4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fb), 0xcb);
        EXPECT(gbc.readMem(0xc4fc), 0x89);
        // CB 89 010C
        gbc.setState(0x11e2, 0xefc8, 0x5490, 0xd1ac, 0x375e, 0x1b30, 0x0, 0x0);
        gbc.writeMem(0x11e2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xefc8);
        EXPECT(gbc.pc(), 0x11e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 010F
        gbc.setState(0x9483, 0x47ee, 0x5740, 0xa56c, 0xfe48, 0xc1db, 0x1, 0x1);
        gbc.writeMem(0x9483, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x47ee);
        EXPECT(gbc.pc(), 0x9485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9483), 0xcb);
        EXPECT(gbc.readMem(0x9484), 0x89);
        // CB 89 0110
        gbc.setState(0x96ed, 0xb45d, 0x4490, 0xf0c8, 0xd3ad, 0xb5fb, 0x0, 0x1);
        gbc.writeMem(0x96ed, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb45d);
        EXPECT(gbc.pc(), 0x96ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ed), 0xcb);
        EXPECT(gbc.readMem(0x96ee), 0x89);
        // CB 89 0111
        gbc.setState(0xe7d3, 0x677c, 0xb900, 0xdb0b, 0xf060, 0x7235, 0x0, 0x0);
        gbc.writeMem(0xe7d3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x677c);
        EXPECT(gbc.pc(), 0xe7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d3), 0xcb);
        EXPECT(gbc.readMem(0xe7d4), 0x89);
        // CB 89 0112
        gbc.setState(0x2523, 0x5894, 0x3b70, 0xaba7, 0xe324, 0x9cdc, 0x0, 0x0);
        gbc.writeMem(0x2523, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5894);
        EXPECT(gbc.pc(), 0x2525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0113
        gbc.setState(0x2c5, 0x3ba8, 0x7f40, 0xbe01, 0xea7b, 0x2a2, 0x1, 0x0);
        gbc.writeMem(0x2c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3ba8);
        EXPECT(gbc.pc(), 0x2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0115
        gbc.setState(0x55b, 0xac61, 0xf440, 0x7fb1, 0xdb6f, 0xe46, 0x0, 0x1);
        gbc.writeMem(0x55b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xac61);
        EXPECT(gbc.pc(), 0x55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0116
        gbc.setState(0x700f, 0xb47a, 0xdd30, 0xe33b, 0xac50, 0x4861, 0x1, 0x0);
        gbc.writeMem(0x700f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb47a);
        EXPECT(gbc.pc(), 0x7011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0117
        gbc.setState(0x6e46, 0x63fc, 0xe5f0, 0x36a6, 0x222a, 0xd277, 0x1, 0x1);
        gbc.writeMem(0x6e46, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x63fc);
        EXPECT(gbc.pc(), 0x6e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0118
        gbc.setState(0x4f59, 0x746d, 0xfbc0, 0x4dab, 0x5401, 0xe17a, 0x1, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x746d);
        EXPECT(gbc.pc(), 0x4f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0119
        gbc.setState(0xc975, 0x22b6, 0xb7b0, 0xd5da, 0xdcf6, 0x5322, 0x0, 0x1);
        gbc.writeMem(0xc975, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x22b6);
        EXPECT(gbc.pc(), 0xc977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc975), 0xcb);
        EXPECT(gbc.readMem(0xc976), 0x89);
        // CB 89 011A
        gbc.setState(0xc9fb, 0x1273, 0xf0b0, 0x4afc, 0x860d, 0x89e6, 0x1, 0x0);
        gbc.writeMem(0xc9fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1273);
        EXPECT(gbc.pc(), 0xc9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9fb), 0xcb);
        EXPECT(gbc.readMem(0xc9fc), 0x89);
        // CB 89 011B
        gbc.setState(0xda6, 0x9f33, 0xc5c0, 0x6ef0, 0x9580, 0x868e, 0x0, 0x0);
        gbc.writeMem(0xda6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9f33);
        EXPECT(gbc.pc(), 0xda8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 011C
        gbc.setState(0xcd54, 0x5513, 0xaa40, 0x3484, 0x33f4, 0xd923, 0x1, 0x1);
        gbc.writeMem(0xcd54, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5513);
        EXPECT(gbc.pc(), 0xcd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd54), 0xcb);
        EXPECT(gbc.readMem(0xcd55), 0x89);
        // CB 89 011D
        gbc.setState(0xcb, 0x1299, 0x240, 0x2f2c, 0x3660, 0xa894, 0x1, 0x1);
        gbc.writeMem(0xcb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1299);
        EXPECT(gbc.pc(), 0xcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 011E
        gbc.setState(0xd4a4, 0x7c64, 0xa2a0, 0xd229, 0xc920, 0x8023, 0x0, 0x0);
        gbc.writeMem(0xd4a4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7c64);
        EXPECT(gbc.pc(), 0xd4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a4), 0xcb);
        EXPECT(gbc.readMem(0xd4a5), 0x89);
        // CB 89 011F
        gbc.setState(0xe82f, 0xb540, 0xe8a0, 0x4d81, 0x1a30, 0xa66, 0x1, 0x1);
        gbc.writeMem(0xe82f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb540);
        EXPECT(gbc.pc(), 0xe831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82f), 0xcb);
        EXPECT(gbc.readMem(0xe830), 0x89);
        // CB 89 0120
        gbc.setState(0x7e9c, 0xa719, 0x16f0, 0x844a, 0x5e58, 0x2a54, 0x0, 0x0);
        gbc.writeMem(0x7e9c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa719);
        EXPECT(gbc.pc(), 0x7e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0121
        gbc.setState(0xc684, 0x1cf0, 0xa100, 0x1652, 0x549, 0xf5c4, 0x1, 0x0);
        gbc.writeMem(0xc684, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1cf0);
        EXPECT(gbc.pc(), 0xc686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc684), 0xcb);
        EXPECT(gbc.readMem(0xc685), 0x89);
        // CB 89 0122
        gbc.setState(0xec5b, 0x3209, 0x7ac0, 0x8faa, 0xb942, 0xcdf1, 0x1, 0x0);
        gbc.writeMem(0xec5b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3209);
        EXPECT(gbc.pc(), 0xec5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5b), 0xcb);
        EXPECT(gbc.readMem(0xec5c), 0x89);
        // CB 89 0123
        gbc.setState(0x551c, 0x6f51, 0x2d20, 0xdfb4, 0xdb24, 0x5ae3, 0x1, 0x0);
        gbc.writeMem(0x551c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6f51);
        EXPECT(gbc.pc(), 0x551e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0124
        gbc.setState(0x7348, 0xd97c, 0x30c0, 0xe01b, 0xe798, 0x463b, 0x1, 0x1);
        gbc.writeMem(0x7348, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd97c);
        EXPECT(gbc.pc(), 0x734a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0125
        gbc.setState(0xc78f, 0x1b96, 0xeca0, 0x1f11, 0x1a2a, 0x8237, 0x1, 0x0);
        gbc.writeMem(0xc78f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1b96);
        EXPECT(gbc.pc(), 0xc791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78f), 0xcb);
        EXPECT(gbc.readMem(0xc790), 0x89);
        // CB 89 0126
        gbc.setState(0x63b6, 0xecf0, 0x87a0, 0x8a6b, 0xd616, 0x3599, 0x0, 0x0);
        gbc.writeMem(0x63b6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xecf0);
        EXPECT(gbc.pc(), 0x63b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0127
        gbc.setState(0x6ad6, 0xec7b, 0x1690, 0x9e06, 0xcb5c, 0x15ea, 0x0, 0x0);
        gbc.writeMem(0x6ad6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xec7b);
        EXPECT(gbc.pc(), 0x6ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0129
        gbc.setState(0x868a, 0x6927, 0xcb20, 0x2db0, 0xaaf1, 0xc7ac, 0x0, 0x1);
        gbc.writeMem(0x868a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6927);
        EXPECT(gbc.pc(), 0x868c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868a), 0xcb);
        EXPECT(gbc.readMem(0x868b), 0x89);
        // CB 89 012A
        gbc.setState(0x5df7, 0xb263, 0xedb0, 0xc84, 0xd57c, 0xd59d, 0x0, 0x1);
        gbc.writeMem(0x5df7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb263);
        EXPECT(gbc.pc(), 0x5df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 012C
        gbc.setState(0xcc6b, 0xeb2a, 0x1830, 0x4e0d, 0xd764, 0x8495, 0x1, 0x1);
        gbc.writeMem(0xcc6b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xeb2a);
        EXPECT(gbc.pc(), 0xcc6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6b), 0xcb);
        EXPECT(gbc.readMem(0xcc6c), 0x89);
        // CB 89 012D
        gbc.setState(0xa46, 0x52f9, 0xb160, 0xb429, 0xaf8c, 0x7af8, 0x1, 0x0);
        gbc.writeMem(0xa46, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x52f9);
        EXPECT(gbc.pc(), 0xa48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 012E
        gbc.setState(0x9554, 0xdead, 0xf4d0, 0x8f1f, 0x3940, 0xd9fa, 0x0, 0x1);
        gbc.writeMem(0x9554, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdead);
        EXPECT(gbc.pc(), 0x9556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9554), 0xcb);
        EXPECT(gbc.readMem(0x9555), 0x89);
        // CB 89 012F
        gbc.setState(0xf25, 0xc0c8, 0x9760, 0xac6a, 0xddea, 0x1352, 0x1, 0x1);
        gbc.writeMem(0xf25, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc0c8);
        EXPECT(gbc.pc(), 0xf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0130
        gbc.setState(0x9a17, 0x6ad3, 0xcbf0, 0xb910, 0x3e1a, 0xeb89, 0x1, 0x0);
        gbc.writeMem(0x9a17, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6ad3);
        EXPECT(gbc.pc(), 0x9a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a17), 0xcb);
        EXPECT(gbc.readMem(0x9a18), 0x89);
        // CB 89 0131
        gbc.setState(0xb921, 0x1d3, 0xccd0, 0xf745, 0xde5a, 0x98f, 0x1, 0x1);
        gbc.writeMem(0xb921, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1d3);
        EXPECT(gbc.pc(), 0xb923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb921), 0xcb);
        EXPECT(gbc.readMem(0xb922), 0x89);
        // CB 89 0132
        gbc.setState(0x1252, 0x1b64, 0x4e40, 0xdebb, 0xa278, 0xeac2, 0x0, 0x1);
        gbc.writeMem(0x1252, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1b64);
        EXPECT(gbc.pc(), 0x1254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0133
        gbc.setState(0xa6fd, 0xf714, 0x64d0, 0xcb2c, 0x69ca, 0x978a, 0x1, 0x0);
        gbc.writeMem(0xa6fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf714);
        EXPECT(gbc.pc(), 0xa6ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6fd), 0xcb);
        EXPECT(gbc.readMem(0xa6fe), 0x89);
        // CB 89 0134
        gbc.setState(0x4a1e, 0x100d, 0x9290, 0x3d83, 0x3867, 0x1e4, 0x1, 0x0);
        gbc.writeMem(0x4a1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x100d);
        EXPECT(gbc.pc(), 0x4a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0135
        gbc.setState(0x69a3, 0x506e, 0xe940, 0xeae7, 0xa04e, 0x9e03, 0x0, 0x1);
        gbc.writeMem(0x69a3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x506e);
        EXPECT(gbc.pc(), 0x69a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0136
        gbc.setState(0xd024, 0x25e9, 0x360, 0x4740, 0x8c20, 0x2248, 0x1, 0x0);
        gbc.writeMem(0xd024, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x25e9);
        EXPECT(gbc.pc(), 0xd026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd024), 0xcb);
        EXPECT(gbc.readMem(0xd025), 0x89);
        // CB 89 0137
        gbc.setState(0xd34e, 0x9dde, 0xee00, 0xa818, 0x8baf, 0x81f0, 0x1, 0x0);
        gbc.writeMem(0xd34e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9dde);
        EXPECT(gbc.pc(), 0xd350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd34e), 0xcb);
        EXPECT(gbc.readMem(0xd34f), 0x89);
        // CB 89 0138
        gbc.setState(0xe0c2, 0x9e11, 0x6e40, 0x16f9, 0xfe8d, 0x4c19, 0x0, 0x0);
        gbc.writeMem(0xe0c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9e11);
        EXPECT(gbc.pc(), 0xe0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c2), 0xcb);
        EXPECT(gbc.readMem(0xe0c3), 0x89);
        // CB 89 0139
        gbc.setState(0xc445, 0xa1c6, 0x2b30, 0x146e, 0x4bd8, 0xd4cf, 0x1, 0x0);
        gbc.writeMem(0xc445, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa1c6);
        EXPECT(gbc.pc(), 0xc447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc445), 0xcb);
        EXPECT(gbc.readMem(0xc446), 0x89);
        // CB 89 013A
        gbc.setState(0xe12e, 0xe0e7, 0x1d00, 0x3acb, 0x5da, 0x70ad, 0x0, 0x1);
        gbc.writeMem(0xe12e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe0e7);
        EXPECT(gbc.pc(), 0xe130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe12e), 0xcb);
        EXPECT(gbc.readMem(0xe12f), 0x89);
        // CB 89 013B
        gbc.setState(0x83a1, 0x846c, 0x5710, 0xc6e1, 0xa279, 0x637b, 0x1, 0x1);
        gbc.writeMem(0x83a1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x846c);
        EXPECT(gbc.pc(), 0x83a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a1), 0xcb);
        EXPECT(gbc.readMem(0x83a2), 0x89);
        // CB 89 013D
        gbc.setState(0x8778, 0x7597, 0x8360, 0xdbb4, 0x721a, 0x8c7c, 0x0, 0x0);
        gbc.writeMem(0x8778, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7597);
        EXPECT(gbc.pc(), 0x877a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8778), 0xcb);
        EXPECT(gbc.readMem(0x8779), 0x89);
        // CB 89 013E
        gbc.setState(0x7b9b, 0xdb79, 0xb300, 0xbbd4, 0x1039, 0x8045, 0x0, 0x1);
        gbc.writeMem(0x7b9b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdb79);
        EXPECT(gbc.pc(), 0x7b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 013F
        gbc.setState(0xb537, 0x6dce, 0x9610, 0x1e44, 0x4967, 0x949c, 0x0, 0x0);
        gbc.writeMem(0xb537, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6dce);
        EXPECT(gbc.pc(), 0xb539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb537), 0xcb);
        EXPECT(gbc.readMem(0xb538), 0x89);
        // CB 89 0140
        gbc.setState(0x547c, 0x719d, 0x8180, 0x2bfd, 0xa96c, 0xc956, 0x1, 0x1);
        gbc.writeMem(0x547c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x719d);
        EXPECT(gbc.pc(), 0x547e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0141
        gbc.setState(0x7e4, 0x28bc, 0x7750, 0xa2c4, 0xd15d, 0x70ea, 0x1, 0x1);
        gbc.writeMem(0x7e4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x28bc);
        EXPECT(gbc.pc(), 0x7e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0142
        gbc.setState(0xc5fa, 0xb0a, 0x3bb0, 0x8e28, 0xff04, 0x3268, 0x1, 0x1);
        gbc.writeMem(0xc5fa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb0a);
        EXPECT(gbc.pc(), 0xc5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5fa), 0xcb);
        EXPECT(gbc.readMem(0xc5fb), 0x89);
        // CB 89 0145
        gbc.setState(0xe85b, 0xac51, 0x2b80, 0x17f8, 0x5d16, 0x98a7, 0x1, 0x1);
        gbc.writeMem(0xe85b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xac51);
        EXPECT(gbc.pc(), 0xe85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe85b), 0xcb);
        EXPECT(gbc.readMem(0xe85c), 0x89);
        // CB 89 0146
        gbc.setState(0x2c5, 0x9715, 0x4660, 0xb56d, 0x3455, 0xf1ba, 0x1, 0x1);
        gbc.writeMem(0x2c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9715);
        EXPECT(gbc.pc(), 0x2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0148
        gbc.setState(0xa90, 0xba9e, 0x1450, 0x22ab, 0xb82e, 0x8abd, 0x1, 0x0);
        gbc.writeMem(0xa90, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xba9e);
        EXPECT(gbc.pc(), 0xa92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0149
        gbc.setState(0x4702, 0x3cef, 0x2a30, 0x5c65, 0xd0d1, 0x30dc, 0x1, 0x1);
        gbc.writeMem(0x4702, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3cef);
        EXPECT(gbc.pc(), 0x4704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 014B
        gbc.setState(0x3e8, 0xfc32, 0x3b90, 0x9d0c, 0x7ac9, 0x4607, 0x1, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfc32);
        EXPECT(gbc.pc(), 0x3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 014C
        gbc.setState(0x4927, 0x1d4e, 0x6860, 0x8a8e, 0x8769, 0x10e3, 0x0, 0x1);
        gbc.writeMem(0x4927, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1d4e);
        EXPECT(gbc.pc(), 0x4929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 014D
        gbc.setState(0x92ba, 0x72b8, 0xbee0, 0x1024, 0xe4f9, 0x3945, 0x1, 0x0);
        gbc.writeMem(0x92ba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x72b8);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ba), 0xcb);
        EXPECT(gbc.readMem(0x92bb), 0x89);
        // CB 89 014F
        gbc.setState(0xeb6f, 0x5dcf, 0x2eb0, 0x65da, 0xfd57, 0xfe27, 0x1, 0x0);
        gbc.writeMem(0xeb6f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5dcf);
        EXPECT(gbc.pc(), 0xeb71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6f), 0xcb);
        EXPECT(gbc.readMem(0xeb70), 0x89);
        // CB 89 0150
        gbc.setState(0x7ecf, 0x8677, 0x89e0, 0xbb0a, 0xb07d, 0xb519, 0x0, 0x0);
        gbc.writeMem(0x7ecf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8677);
        EXPECT(gbc.pc(), 0x7ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0152
        gbc.setState(0xcce6, 0x9d4a, 0xf7b0, 0x7e06, 0xcb9f, 0x8fa0, 0x1, 0x0);
        gbc.writeMem(0xcce6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9d4a);
        EXPECT(gbc.pc(), 0xcce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce6), 0xcb);
        EXPECT(gbc.readMem(0xcce7), 0x89);
        // CB 89 0153
        gbc.setState(0x8a69, 0x9d77, 0x9110, 0xf94f, 0x9312, 0x4a73, 0x1, 0x0);
        gbc.writeMem(0x8a69, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9d77);
        EXPECT(gbc.pc(), 0x8a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a69), 0xcb);
        EXPECT(gbc.readMem(0x8a6a), 0x89);
        // CB 89 0154
        gbc.setState(0x6311, 0xb925, 0xb680, 0xb455, 0xb3b6, 0xb1db, 0x1, 0x0);
        gbc.writeMem(0x6311, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb925);
        EXPECT(gbc.pc(), 0x6313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0155
        gbc.setState(0x5339, 0x7590, 0x6390, 0x734b, 0xd5b2, 0x57a3, 0x1, 0x0);
        gbc.writeMem(0x5339, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7590);
        EXPECT(gbc.pc(), 0x533b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0156
        gbc.setState(0x4039, 0xd801, 0xe4f0, 0x2ffd, 0x9843, 0x9196, 0x0, 0x0);
        gbc.writeMem(0x4039, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd801);
        EXPECT(gbc.pc(), 0x403b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0157
        gbc.setState(0xb52b, 0xbe1b, 0xd430, 0xfd5e, 0x3182, 0x48b2, 0x1, 0x0);
        gbc.writeMem(0xb52b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbe1b);
        EXPECT(gbc.pc(), 0xb52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52b), 0xcb);
        EXPECT(gbc.readMem(0xb52c), 0x89);
        // CB 89 0158
        gbc.setState(0xe606, 0x5482, 0x1100, 0x6e3b, 0xdd8, 0x7648, 0x1, 0x0);
        gbc.writeMem(0xe606, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5482);
        EXPECT(gbc.pc(), 0xe608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe606), 0xcb);
        EXPECT(gbc.readMem(0xe607), 0x89);
        // CB 89 0159
        gbc.setState(0x369, 0xc055, 0x6980, 0xca10, 0x911a, 0xd3bf, 0x0, 0x1);
        gbc.writeMem(0x369, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc055);
        EXPECT(gbc.pc(), 0x36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 015A
        gbc.setState(0x1eb9, 0x513a, 0xcdb0, 0xeafd, 0xf7a1, 0xc8bf, 0x1, 0x0);
        gbc.writeMem(0x1eb9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x513a);
        EXPECT(gbc.pc(), 0x1ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 015B
        gbc.setState(0xac68, 0x6ba3, 0xf280, 0x3f79, 0x5f03, 0x14a3, 0x0, 0x0);
        gbc.writeMem(0xac68, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6ba3);
        EXPECT(gbc.pc(), 0xac6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac68), 0xcb);
        EXPECT(gbc.readMem(0xac69), 0x89);
        // CB 89 015C
        gbc.setState(0x94b5, 0x99e4, 0x1650, 0xdd7a, 0xd951, 0x413e, 0x0, 0x0);
        gbc.writeMem(0x94b5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x99e4);
        EXPECT(gbc.pc(), 0x94b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b5), 0xcb);
        EXPECT(gbc.readMem(0x94b6), 0x89);
        // CB 89 015D
        gbc.setState(0x93bf, 0x6d20, 0x5370, 0xca43, 0xcd2, 0x9ac8, 0x0, 0x1);
        gbc.writeMem(0x93bf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6d20);
        EXPECT(gbc.pc(), 0x93c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93bf), 0xcb);
        EXPECT(gbc.readMem(0x93c0), 0x89);
        // CB 89 015E
        gbc.setState(0x6d42, 0x9ed1, 0xfc70, 0x76dd, 0x68d4, 0x20c8, 0x1, 0x1);
        gbc.writeMem(0x6d42, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9ed1);
        EXPECT(gbc.pc(), 0x6d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 015F
        gbc.setState(0x88c1, 0x8e25, 0x9bd0, 0x6baf, 0x2ac8, 0x547f, 0x0, 0x1);
        gbc.writeMem(0x88c1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8e25);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0xcb);
        EXPECT(gbc.readMem(0x88c2), 0x89);
        // CB 89 0160
        gbc.setState(0x84ca, 0xb818, 0xe9b0, 0xdca9, 0x7091, 0xc92b, 0x1, 0x0);
        gbc.writeMem(0x84ca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb818);
        EXPECT(gbc.pc(), 0x84cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ca), 0xcb);
        EXPECT(gbc.readMem(0x84cb), 0x89);
        // CB 89 0161
        gbc.setState(0x4853, 0x6033, 0x7430, 0x8fb7, 0x6295, 0xae88, 0x1, 0x0);
        gbc.writeMem(0x4853, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6033);
        EXPECT(gbc.pc(), 0x4855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0162
        gbc.setState(0x764a, 0x3563, 0x1590, 0xd0b7, 0x51c4, 0xc9a6, 0x1, 0x0);
        gbc.writeMem(0x764a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3563);
        EXPECT(gbc.pc(), 0x764c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0163
        gbc.setState(0x46a9, 0xe36a, 0x35b0, 0x2090, 0xf8f6, 0x3e3d, 0x0, 0x1);
        gbc.writeMem(0x46a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe36a);
        EXPECT(gbc.pc(), 0x46ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0164
        gbc.setState(0xa451, 0x389c, 0xedc0, 0xa4bf, 0xb11f, 0xaca4, 0x0, 0x1);
        gbc.writeMem(0xa451, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0xa453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa451), 0xcb);
        EXPECT(gbc.readMem(0xa452), 0x89);
        // CB 89 0165
        gbc.setState(0x2c2d, 0xb3f2, 0x9e50, 0x2bb5, 0x5e8d, 0xd25a, 0x1, 0x1);
        gbc.writeMem(0x2c2d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb3f2);
        EXPECT(gbc.pc(), 0x2c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0166
        gbc.setState(0x4f78, 0xf4cc, 0x8850, 0x80ae, 0xc4f2, 0x559a, 0x1, 0x0);
        gbc.writeMem(0x4f78, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf4cc);
        EXPECT(gbc.pc(), 0x4f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0167
        gbc.setState(0x7bc, 0x3864, 0x4e90, 0x7d76, 0x6297, 0x40c0, 0x1, 0x1);
        gbc.writeMem(0x7bc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3864);
        EXPECT(gbc.pc(), 0x7be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0168
        gbc.setState(0x3740, 0x358a, 0xf400, 0xef31, 0xb99e, 0x6969, 0x0, 0x0);
        gbc.writeMem(0x3740, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x358a);
        EXPECT(gbc.pc(), 0x3742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0169
        gbc.setState(0x662, 0x2529, 0x4d00, 0xce4, 0x505a, 0xab0, 0x0, 0x0);
        gbc.writeMem(0x662, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2529);
        EXPECT(gbc.pc(), 0x664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 016A
        gbc.setState(0xe529, 0xd452, 0x3340, 0xa837, 0xe5d, 0x1db8, 0x0, 0x1);
        gbc.writeMem(0xe529, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd452);
        EXPECT(gbc.pc(), 0xe52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe529), 0xcb);
        EXPECT(gbc.readMem(0xe52a), 0x89);
        // CB 89 016B
        gbc.setState(0xa8f0, 0x7503, 0x640, 0xfa08, 0xe0ed, 0x5c02, 0x1, 0x1);
        gbc.writeMem(0xa8f0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7503);
        EXPECT(gbc.pc(), 0xa8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f0), 0xcb);
        EXPECT(gbc.readMem(0xa8f1), 0x89);
        // CB 89 016C
        gbc.setState(0x30f2, 0x4092, 0x38b0, 0x5672, 0x401, 0x52d5, 0x1, 0x1);
        gbc.writeMem(0x30f2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4092);
        EXPECT(gbc.pc(), 0x30f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 016D
        gbc.setState(0x28fd, 0x824b, 0x53b0, 0x33de, 0xc20c, 0x8da3, 0x0, 0x1);
        gbc.writeMem(0x28fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x824b);
        EXPECT(gbc.pc(), 0x28ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 016F
        gbc.setState(0x5295, 0x81a4, 0xf980, 0x19ef, 0x44b4, 0x63a6, 0x1, 0x0);
        gbc.writeMem(0x5295, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x81a4);
        EXPECT(gbc.pc(), 0x5297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0170
        gbc.setState(0x25fa, 0xeb72, 0xb00, 0x6d55, 0x79b5, 0x2eb6, 0x0, 0x0);
        gbc.writeMem(0x25fa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xeb72);
        EXPECT(gbc.pc(), 0x25fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0171
        gbc.setState(0x86c3, 0x95e7, 0xab50, 0x353b, 0xf701, 0xe464, 0x1, 0x1);
        gbc.writeMem(0x86c3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x95e7);
        EXPECT(gbc.pc(), 0x86c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c3), 0xcb);
        EXPECT(gbc.readMem(0x86c4), 0x89);
        // CB 89 0172
        gbc.setState(0xb7e9, 0xa0cf, 0xe840, 0x1df, 0xa0de, 0x2bd4, 0x1, 0x0);
        gbc.writeMem(0xb7e9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa0cf);
        EXPECT(gbc.pc(), 0xb7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e9), 0xcb);
        EXPECT(gbc.readMem(0xb7ea), 0x89);
        // CB 89 0174
        gbc.setState(0xb06a, 0x7820, 0x160, 0xdab3, 0xfd93, 0xa43, 0x0, 0x1);
        gbc.writeMem(0xb06a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7820);
        EXPECT(gbc.pc(), 0xb06c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06a), 0xcb);
        EXPECT(gbc.readMem(0xb06b), 0x89);
        // CB 89 0175
        gbc.setState(0x4332, 0xaf8f, 0xb520, 0xca92, 0x5a3b, 0x3c74, 0x1, 0x0);
        gbc.writeMem(0x4332, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xaf8f);
        EXPECT(gbc.pc(), 0x4334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0176
        gbc.setState(0xa86d, 0x4e1d, 0x14a0, 0xb780, 0x5470, 0x7bff, 0x1, 0x1);
        gbc.writeMem(0xa86d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4e1d);
        EXPECT(gbc.pc(), 0xa86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86d), 0xcb);
        EXPECT(gbc.readMem(0xa86e), 0x89);
        // CB 89 0177
        gbc.setState(0x8640, 0x559b, 0xe080, 0xfea2, 0x577, 0x38ff, 0x0, 0x0);
        gbc.writeMem(0x8640, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x559b);
        EXPECT(gbc.pc(), 0x8642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8640), 0xcb);
        EXPECT(gbc.readMem(0x8641), 0x89);
        // CB 89 0178
        gbc.setState(0x2de9, 0x91ff, 0xe450, 0xd5f4, 0x29fb, 0x9dd6, 0x1, 0x1);
        gbc.writeMem(0x2de9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x91ff);
        EXPECT(gbc.pc(), 0x2deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0179
        gbc.setState(0x822f, 0xfed1, 0xfb10, 0x1989, 0x9ec4, 0x6713, 0x0, 0x1);
        gbc.writeMem(0x822f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfed1);
        EXPECT(gbc.pc(), 0x8231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822f), 0xcb);
        EXPECT(gbc.readMem(0x8230), 0x89);
        // CB 89 017A
        gbc.setState(0x3d62, 0xb624, 0x21e0, 0x4b4f, 0x952d, 0x7c1c, 0x1, 0x0);
        gbc.writeMem(0x3d62, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb624);
        EXPECT(gbc.pc(), 0x3d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 017B
        gbc.setState(0x9876, 0xa822, 0x5210, 0x53bc, 0xe25, 0xfabf, 0x0, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa822);
        EXPECT(gbc.pc(), 0x9878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9876), 0xcb);
        EXPECT(gbc.readMem(0x9877), 0x89);
        // CB 89 017C
        gbc.setState(0x914e, 0x22cd, 0xe540, 0x74ee, 0x2412, 0xfda, 0x0, 0x1);
        gbc.writeMem(0x914e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x22cd);
        EXPECT(gbc.pc(), 0x9150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914e), 0xcb);
        EXPECT(gbc.readMem(0x914f), 0x89);
        // CB 89 017D
        gbc.setState(0x8bdc, 0x2b03, 0x9430, 0x315b, 0x2623, 0xbc7e, 0x1, 0x1);
        gbc.writeMem(0x8bdc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2b03);
        EXPECT(gbc.pc(), 0x8bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bdc), 0xcb);
        EXPECT(gbc.readMem(0x8bdd), 0x89);
        // CB 89 017E
        gbc.setState(0xbd20, 0x206f, 0x300, 0xa1ad, 0xc4cb, 0xae3c, 0x1, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x206f);
        EXPECT(gbc.pc(), 0xbd22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd20), 0xcb);
        EXPECT(gbc.readMem(0xbd21), 0x89);
        // CB 89 017F
        gbc.setState(0x8d0f, 0x9e5e, 0x2cc0, 0x1844, 0x9980, 0xd060, 0x0, 0x1);
        gbc.writeMem(0x8d0f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9e5e);
        EXPECT(gbc.pc(), 0x8d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0f), 0xcb);
        EXPECT(gbc.readMem(0x8d10), 0x89);
        // CB 89 0180
        gbc.setState(0xd181, 0x84b6, 0xf260, 0x6829, 0xe6b2, 0x6b2d, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x84b6);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd181), 0xcb);
        EXPECT(gbc.readMem(0xd182), 0x89);
        // CB 89 0181
        gbc.setState(0x9a21, 0xcc62, 0x3c10, 0xafa2, 0xa857, 0x282b, 0x1, 0x0);
        gbc.writeMem(0x9a21, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcc62);
        EXPECT(gbc.pc(), 0x9a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a21), 0xcb);
        EXPECT(gbc.readMem(0x9a22), 0x89);
        // CB 89 0182
        gbc.setState(0x9ce9, 0xc791, 0x8910, 0xe5d7, 0x87af, 0x1043, 0x1, 0x1);
        gbc.writeMem(0x9ce9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc791);
        EXPECT(gbc.pc(), 0x9ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce9), 0xcb);
        EXPECT(gbc.readMem(0x9cea), 0x89);
        // CB 89 0183
        gbc.setState(0xdfcd, 0x641d, 0x7140, 0x3230, 0x457c, 0xc931, 0x1, 0x0);
        gbc.writeMem(0xdfcd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x641d);
        EXPECT(gbc.pc(), 0xdfcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfcd), 0xcb);
        EXPECT(gbc.readMem(0xdfce), 0x89);
        // CB 89 0184
        gbc.setState(0x3bf4, 0xa403, 0x3c80, 0x6590, 0x40b8, 0x6ca9, 0x1, 0x1);
        gbc.writeMem(0x3bf4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa403);
        EXPECT(gbc.pc(), 0x3bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0185
        gbc.setState(0x9291, 0xa1eb, 0x8a90, 0xca9e, 0xe9d7, 0x19f2, 0x0, 0x0);
        gbc.writeMem(0x9291, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa1eb);
        EXPECT(gbc.pc(), 0x9293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9291), 0xcb);
        EXPECT(gbc.readMem(0x9292), 0x89);
        // CB 89 0186
        gbc.setState(0x67d2, 0xe841, 0x6eb0, 0xd8d, 0x54d8, 0x5a45, 0x0, 0x1);
        gbc.writeMem(0x67d2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe841);
        EXPECT(gbc.pc(), 0x67d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0187
        gbc.setState(0xb7e3, 0xadf8, 0x2330, 0x42ca, 0xce48, 0x697a, 0x1, 0x1);
        gbc.writeMem(0xb7e3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xadf8);
        EXPECT(gbc.pc(), 0xb7e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e3), 0xcb);
        EXPECT(gbc.readMem(0xb7e4), 0x89);
        // CB 89 0188
        gbc.setState(0x86f6, 0xf520, 0x79c0, 0x95d8, 0xd827, 0xf3a1, 0x0, 0x1);
        gbc.writeMem(0x86f6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf520);
        EXPECT(gbc.pc(), 0x86f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f6), 0xcb);
        EXPECT(gbc.readMem(0x86f7), 0x89);
        // CB 89 0189
        gbc.setState(0xd2e5, 0xdb99, 0xfdc0, 0x4647, 0xdb44, 0x9daa, 0x0, 0x0);
        gbc.writeMem(0xd2e5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdb99);
        EXPECT(gbc.pc(), 0xd2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e5), 0xcb);
        EXPECT(gbc.readMem(0xd2e6), 0x89);
        // CB 89 018A
        gbc.setState(0x49a2, 0xe560, 0x7320, 0xe8cc, 0x6346, 0x13ab, 0x0, 0x0);
        gbc.writeMem(0x49a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe560);
        EXPECT(gbc.pc(), 0x49a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 018B
        gbc.setState(0x69ef, 0x86f5, 0x5c50, 0xe99a, 0xee9c, 0x3204, 0x0, 0x1);
        gbc.writeMem(0x69ef, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x86f5);
        EXPECT(gbc.pc(), 0x69f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 018C
        gbc.setState(0x463a, 0x42c0, 0x1100, 0x666, 0xb52f, 0xa7ca, 0x1, 0x1);
        gbc.writeMem(0x463a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x42c0);
        EXPECT(gbc.pc(), 0x463c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 018D
        gbc.setState(0xa2ef, 0x37e5, 0xa620, 0xcfea, 0xb4e1, 0x71af, 0x1, 0x1);
        gbc.writeMem(0xa2ef, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x37e5);
        EXPECT(gbc.pc(), 0xa2f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ef), 0xcb);
        EXPECT(gbc.readMem(0xa2f0), 0x89);
        // CB 89 018E
        gbc.setState(0xaca3, 0x8844, 0x81f0, 0xf77b, 0xa2f8, 0x1294, 0x1, 0x1);
        gbc.writeMem(0xaca3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8844);
        EXPECT(gbc.pc(), 0xaca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca3), 0xcb);
        EXPECT(gbc.readMem(0xaca4), 0x89);
        // CB 89 018F
        gbc.setState(0x2094, 0xe391, 0x47c0, 0xf85c, 0x3cf0, 0xd83a, 0x1, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe391);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0190
        gbc.setState(0x646c, 0x3d1, 0x7b70, 0x8fdd, 0xa844, 0x996b, 0x1, 0x1);
        gbc.writeMem(0x646c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3d1);
        EXPECT(gbc.pc(), 0x646e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0191
        gbc.setState(0xdf5f, 0x5cde, 0xcd10, 0x3186, 0xb04, 0xbaf, 0x0, 0x0);
        gbc.writeMem(0xdf5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5cde);
        EXPECT(gbc.pc(), 0xdf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5f), 0xcb);
        EXPECT(gbc.readMem(0xdf60), 0x89);
        // CB 89 0192
        gbc.setState(0x7f33, 0x65a1, 0x9d40, 0xd528, 0x8ac9, 0xcad6, 0x0, 0x0);
        gbc.writeMem(0x7f33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x65a1);
        EXPECT(gbc.pc(), 0x7f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0193
        gbc.setState(0x2a5, 0xf86, 0x7610, 0x2a2a, 0x2260, 0xe04, 0x1, 0x0);
        gbc.writeMem(0x2a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf86);
        EXPECT(gbc.pc(), 0x2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0194
        gbc.setState(0x6189, 0x165a, 0xd30, 0x9b65, 0xc817, 0x6227, 0x1, 0x0);
        gbc.writeMem(0x6189, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x165a);
        EXPECT(gbc.pc(), 0x618b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0195
        gbc.setState(0xdd2b, 0x99fc, 0x6890, 0x1b19, 0xf7d7, 0x7503, 0x1, 0x1);
        gbc.writeMem(0xdd2b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x99fc);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2b), 0xcb);
        EXPECT(gbc.readMem(0xdd2c), 0x89);
        // CB 89 0197
        gbc.setState(0xa98, 0x3ff6, 0xfe70, 0xdd21, 0x9d22, 0xac70, 0x1, 0x0);
        gbc.writeMem(0xa98, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3ff6);
        EXPECT(gbc.pc(), 0xa9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0198
        gbc.setState(0xbfc9, 0x3f39, 0xf550, 0xa6a, 0x2b07, 0x78dd, 0x1, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3f39);
        EXPECT(gbc.pc(), 0xbfcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc9), 0xcb);
        EXPECT(gbc.readMem(0xbfca), 0x89);
        // CB 89 0199
        gbc.setState(0xe61a, 0x63bb, 0x2930, 0xcb20, 0x270d, 0xc068, 0x1, 0x1);
        gbc.writeMem(0xe61a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x63bb);
        EXPECT(gbc.pc(), 0xe61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61a), 0xcb);
        EXPECT(gbc.readMem(0xe61b), 0x89);
        // CB 89 019A
        gbc.setState(0x5944, 0xbed9, 0x76e0, 0x479f, 0x18f1, 0x5ee9, 0x0, 0x0);
        gbc.writeMem(0x5944, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbed9);
        EXPECT(gbc.pc(), 0x5946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 019B
        gbc.setState(0xa705, 0xc4a4, 0x55e0, 0xcfec, 0xb25f, 0xb3ed, 0x0, 0x1);
        gbc.writeMem(0xa705, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc4a4);
        EXPECT(gbc.pc(), 0xa707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa705), 0xcb);
        EXPECT(gbc.readMem(0xa706), 0x89);
        // CB 89 019C
        gbc.setState(0x2e8e, 0x4285, 0x8ae0, 0x6a22, 0xcb55, 0x420, 0x1, 0x1);
        gbc.writeMem(0x2e8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4285);
        EXPECT(gbc.pc(), 0x2e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 019D
        gbc.setState(0x731f, 0xc177, 0x81e0, 0x90d4, 0xe614, 0x193e, 0x0, 0x0);
        gbc.writeMem(0x731f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc177);
        EXPECT(gbc.pc(), 0x7321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 019E
        gbc.setState(0x6f78, 0x8453, 0x1ef0, 0x6ad8, 0x1089, 0x78ae, 0x0, 0x1);
        gbc.writeMem(0x6f78, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8453);
        EXPECT(gbc.pc(), 0x6f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 019F
        gbc.setState(0x5e2b, 0x2003, 0x8480, 0x19bf, 0x4b79, 0x6f87, 0x1, 0x0);
        gbc.writeMem(0x5e2b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2003);
        EXPECT(gbc.pc(), 0x5e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01A1
        gbc.setState(0xdb4b, 0x83dd, 0x4db0, 0xbf92, 0x1ca8, 0x6037, 0x0, 0x1);
        gbc.writeMem(0xdb4b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x83dd);
        EXPECT(gbc.pc(), 0xdb4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb4b), 0xcb);
        EXPECT(gbc.readMem(0xdb4c), 0x89);
        // CB 89 01A2
        gbc.setState(0x27be, 0xbc9c, 0x4d00, 0x55b0, 0x4429, 0x3986, 0x1, 0x0);
        gbc.writeMem(0x27be, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbc9c);
        EXPECT(gbc.pc(), 0x27c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01A3
        gbc.setState(0xae1a, 0x37ef, 0x7df0, 0x1ab2, 0xce63, 0x35cd, 0x0, 0x0);
        gbc.writeMem(0xae1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x37ef);
        EXPECT(gbc.pc(), 0xae1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1a), 0xcb);
        EXPECT(gbc.readMem(0xae1b), 0x89);
        // CB 89 01A4
        gbc.setState(0x7c2, 0x5ebe, 0x8fd0, 0x5076, 0x2ed0, 0x4d6f, 0x1, 0x0);
        gbc.writeMem(0x7c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5ebe);
        EXPECT(gbc.pc(), 0x7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01A5
        gbc.setState(0x31d9, 0x92fa, 0x8130, 0x8e40, 0xd404, 0xb7bc, 0x0, 0x0);
        gbc.writeMem(0x31d9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x92fa);
        EXPECT(gbc.pc(), 0x31db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01A6
        gbc.setState(0x6bdc, 0xbdb4, 0x4ca0, 0xc8a1, 0xac12, 0xf63e, 0x0, 0x0);
        gbc.writeMem(0x6bdc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbdb4);
        EXPECT(gbc.pc(), 0x6bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01A7
        gbc.setState(0x507e, 0xe04f, 0xea90, 0xf870, 0x5f1e, 0x9961, 0x1, 0x1);
        gbc.writeMem(0x507e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe04f);
        EXPECT(gbc.pc(), 0x5080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01A8
        gbc.setState(0x460a, 0x57fc, 0xcf0, 0xb1d6, 0xb746, 0xb3e5, 0x0, 0x1);
        gbc.writeMem(0x460a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x57fc);
        EXPECT(gbc.pc(), 0x460c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01A9
        gbc.setState(0xadae, 0x521c, 0x9080, 0x5ac4, 0x609f, 0x93de, 0x0, 0x1);
        gbc.writeMem(0xadae, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x521c);
        EXPECT(gbc.pc(), 0xadb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadae), 0xcb);
        EXPECT(gbc.readMem(0xadaf), 0x89);
        // CB 89 01AB
        gbc.setState(0x2896, 0x982, 0x6490, 0xedfc, 0x1e4a, 0x1031, 0x1, 0x0);
        gbc.writeMem(0x2896, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x982);
        EXPECT(gbc.pc(), 0x2898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01AD
        gbc.setState(0x60a8, 0x49e5, 0x7740, 0xe276, 0x8389, 0xae9f, 0x0, 0x0);
        gbc.writeMem(0x60a8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x49e5);
        EXPECT(gbc.pc(), 0x60aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01AE
        gbc.setState(0x80cc, 0x5b11, 0x6420, 0x79aa, 0x8485, 0x449c, 0x0, 0x0);
        gbc.writeMem(0x80cc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5b11);
        EXPECT(gbc.pc(), 0x80ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80cc), 0xcb);
        EXPECT(gbc.readMem(0x80cd), 0x89);
        // CB 89 01AF
        gbc.setState(0x7df2, 0x19c4, 0xf180, 0xd61a, 0xedf8, 0x4679, 0x1, 0x1);
        gbc.writeMem(0x7df2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x19c4);
        EXPECT(gbc.pc(), 0x7df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01B0
        gbc.setState(0x1eb9, 0xc97e, 0x1a10, 0xf096, 0xcf81, 0x7064, 0x1, 0x0);
        gbc.writeMem(0x1eb9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc97e);
        EXPECT(gbc.pc(), 0x1ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01B1
        gbc.setState(0x760c, 0x4a3e, 0x90f0, 0xebca, 0x1121, 0xe93a, 0x1, 0x0);
        gbc.writeMem(0x760c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4a3e);
        EXPECT(gbc.pc(), 0x760e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01B2
        gbc.setState(0x44d7, 0x43f4, 0x2af0, 0x91c2, 0x62f2, 0x40f, 0x1, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x43f4);
        EXPECT(gbc.pc(), 0x44d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01B3
        gbc.setState(0x7ba3, 0x2d41, 0xc7b0, 0xb2c, 0x962, 0x5aa9, 0x1, 0x1);
        gbc.writeMem(0x7ba3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2d41);
        EXPECT(gbc.pc(), 0x7ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01B4
        gbc.setState(0x2ec3, 0x6c35, 0x9fa0, 0x3fac, 0xf55e, 0x671, 0x1, 0x1);
        gbc.writeMem(0x2ec3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6c35);
        EXPECT(gbc.pc(), 0x2ec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01B5
        gbc.setState(0xba08, 0x5f85, 0x4a70, 0x41c2, 0x408, 0x2acd, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5f85);
        EXPECT(gbc.pc(), 0xba0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba08), 0xcb);
        EXPECT(gbc.readMem(0xba09), 0x89);
        // CB 89 01B6
        gbc.setState(0xcf5f, 0x28c3, 0x5fa0, 0x3def, 0xb188, 0x3b83, 0x0, 0x0);
        gbc.writeMem(0xcf5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x28c3);
        EXPECT(gbc.pc(), 0xcf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5f), 0xcb);
        EXPECT(gbc.readMem(0xcf60), 0x89);
        // CB 89 01B7
        gbc.setState(0x1507, 0x1d87, 0x8130, 0xc7fb, 0x7263, 0x94e6, 0x0, 0x1);
        gbc.writeMem(0x1507, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1d87);
        EXPECT(gbc.pc(), 0x1509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01B8
        gbc.setState(0x5ec6, 0x9e36, 0x2cd0, 0xe00e, 0x8f0f, 0x9d87, 0x0, 0x1);
        gbc.writeMem(0x5ec6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9e36);
        EXPECT(gbc.pc(), 0x5ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01B9
        gbc.setState(0x1836, 0x6e00, 0xbf0, 0x9049, 0x38b5, 0xefb1, 0x0, 0x1);
        gbc.writeMem(0x1836, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6e00);
        EXPECT(gbc.pc(), 0x1838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01BA
        gbc.setState(0x29f0, 0x9f34, 0xd0a0, 0x8e5c, 0xde7b, 0xef95, 0x1, 0x1);
        gbc.writeMem(0x29f0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9f34);
        EXPECT(gbc.pc(), 0x29f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01BB
        gbc.setState(0x6a8a, 0x56f4, 0x4440, 0x7e26, 0xef1d, 0xa54b, 0x1, 0x1);
        gbc.writeMem(0x6a8a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x56f4);
        EXPECT(gbc.pc(), 0x6a8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01BC
        gbc.setState(0xb29d, 0x9da8, 0xd8e0, 0x497, 0xa02, 0x41f9, 0x1, 0x0);
        gbc.writeMem(0xb29d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9da8);
        EXPECT(gbc.pc(), 0xb29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29d), 0xcb);
        EXPECT(gbc.readMem(0xb29e), 0x89);
        // CB 89 01BD
        gbc.setState(0x1481, 0x187c, 0xb760, 0xf9a3, 0xd6e5, 0xd227, 0x0, 0x0);
        gbc.writeMem(0x1481, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x187c);
        EXPECT(gbc.pc(), 0x1483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01BE
        gbc.setState(0x353e, 0xc4f4, 0xb410, 0xbb7, 0x16e9, 0xf9c4, 0x0, 0x0);
        gbc.writeMem(0x353e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc4f4);
        EXPECT(gbc.pc(), 0x3540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01BF
        gbc.setState(0x25b3, 0x930b, 0xf2b0, 0xdc73, 0x434b, 0xd120, 0x1, 0x0);
        gbc.writeMem(0x25b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x930b);
        EXPECT(gbc.pc(), 0x25b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01C0
        gbc.setState(0x8b8e, 0x293c, 0x75f0, 0xa765, 0xcae2, 0xa899, 0x0, 0x0);
        gbc.writeMem(0x8b8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x293c);
        EXPECT(gbc.pc(), 0x8b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8e), 0xcb);
        EXPECT(gbc.readMem(0x8b8f), 0x89);
        // CB 89 01C1
        gbc.setState(0xa2b5, 0x2358, 0x830, 0x55b8, 0xbd2c, 0xc2a1, 0x1, 0x0);
        gbc.writeMem(0xa2b5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2358);
        EXPECT(gbc.pc(), 0xa2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b5), 0xcb);
        EXPECT(gbc.readMem(0xa2b6), 0x89);
        // CB 89 01C2
        gbc.setState(0x8458, 0x673d, 0x5730, 0x327b, 0x4add, 0xcaa, 0x1, 0x1);
        gbc.writeMem(0x8458, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x673d);
        EXPECT(gbc.pc(), 0x845a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8458), 0xcb);
        EXPECT(gbc.readMem(0x8459), 0x89);
        // CB 89 01C3
        gbc.setState(0x5cd2, 0x597d, 0x3b90, 0xa131, 0xcfbd, 0x8adb, 0x1, 0x1);
        gbc.writeMem(0x5cd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x597d);
        EXPECT(gbc.pc(), 0x5cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01C4
        gbc.setState(0xbad, 0x304f, 0x91a0, 0x80e3, 0x7b50, 0xac8c, 0x0, 0x0);
        gbc.writeMem(0xbad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x304f);
        EXPECT(gbc.pc(), 0xbaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01C5
        gbc.setState(0x4ea, 0xc61, 0x4e80, 0x1a78, 0x6666, 0xd68f, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc61);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01C6
        gbc.setState(0xcdd2, 0xe96c, 0x93b0, 0x4a39, 0x9791, 0x173a, 0x1, 0x1);
        gbc.writeMem(0xcdd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe96c);
        EXPECT(gbc.pc(), 0xcdd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd2), 0xcb);
        EXPECT(gbc.readMem(0xcdd3), 0x89);
        // CB 89 01C7
        gbc.setState(0x188c, 0xe9a8, 0x90a0, 0x657d, 0x9d4e, 0x4639, 0x1, 0x1);
        gbc.writeMem(0x188c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe9a8);
        EXPECT(gbc.pc(), 0x188e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01C8
        gbc.setState(0xc20f, 0x8345, 0xc350, 0x36fb, 0x40d4, 0x9416, 0x1, 0x0);
        gbc.writeMem(0xc20f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8345);
        EXPECT(gbc.pc(), 0xc211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc20f), 0xcb);
        EXPECT(gbc.readMem(0xc210), 0x89);
        // CB 89 01CA
        gbc.setState(0x49de, 0x470d, 0xa2d0, 0x89f6, 0x49d6, 0xc12a, 0x1, 0x0);
        gbc.writeMem(0x49de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x470d);
        EXPECT(gbc.pc(), 0x49e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01CB
        gbc.setState(0x4b4b, 0x4f88, 0x9920, 0x9d53, 0xd8b0, 0x89f6, 0x1, 0x0);
        gbc.writeMem(0x4b4b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4f88);
        EXPECT(gbc.pc(), 0x4b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01CC
        gbc.setState(0x908f, 0xe035, 0xab30, 0xf553, 0xe369, 0xed9d, 0x0, 0x1);
        gbc.writeMem(0x908f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe035);
        EXPECT(gbc.pc(), 0x9091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x908f), 0xcb);
        EXPECT(gbc.readMem(0x9090), 0x89);
        // CB 89 01CD
        gbc.setState(0xa1f5, 0x15bd, 0x5b20, 0xd3d5, 0x61c3, 0x6166, 0x1, 0x0);
        gbc.writeMem(0xa1f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x15bd);
        EXPECT(gbc.pc(), 0xa1f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f5), 0xcb);
        EXPECT(gbc.readMem(0xa1f6), 0x89);
        // CB 89 01CE
        gbc.setState(0x1168, 0xddf4, 0xc4f0, 0xf212, 0x36f7, 0x6211, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xddf4);
        EXPECT(gbc.pc(), 0x116a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01CF
        gbc.setState(0xb409, 0x67c9, 0xc580, 0x9852, 0xcb98, 0xc59e, 0x1, 0x0);
        gbc.writeMem(0xb409, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x67c9);
        EXPECT(gbc.pc(), 0xb40b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb409), 0xcb);
        EXPECT(gbc.readMem(0xb40a), 0x89);
        // CB 89 01D0
        gbc.setState(0x2417, 0x7bfa, 0xcd80, 0xeadf, 0xe6ae, 0x8189, 0x0, 0x1);
        gbc.writeMem(0x2417, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7bfa);
        EXPECT(gbc.pc(), 0x2419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01D1
        gbc.setState(0xcd2a, 0xe275, 0xcab0, 0x2ab4, 0xa70d, 0x4ae0, 0x0, 0x0);
        gbc.writeMem(0xcd2a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe275);
        EXPECT(gbc.pc(), 0xcd2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2a), 0xcb);
        EXPECT(gbc.readMem(0xcd2b), 0x89);
        // CB 89 01D2
        gbc.setState(0x95, 0x763d, 0x6470, 0xdf84, 0x31f3, 0x6309, 0x1, 0x0);
        gbc.writeMem(0x95, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x763d);
        EXPECT(gbc.pc(), 0x97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01D3
        gbc.setState(0x9bdb, 0x678d, 0xbfe0, 0xa490, 0x165b, 0x99d8, 0x1, 0x0);
        gbc.writeMem(0x9bdb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x678d);
        EXPECT(gbc.pc(), 0x9bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdb), 0xcb);
        EXPECT(gbc.readMem(0x9bdc), 0x89);
        // CB 89 01D4
        gbc.setState(0x3732, 0x671d, 0x3d30, 0xf97, 0x47cb, 0xb953, 0x1, 0x0);
        gbc.writeMem(0x3732, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x671d);
        EXPECT(gbc.pc(), 0x3734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01D5
        gbc.setState(0x5ca4, 0x8e4f, 0x6750, 0xd681, 0x712c, 0xb6c6, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8e4f);
        EXPECT(gbc.pc(), 0x5ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01D6
        gbc.setState(0x3c3, 0x168a, 0x5f30, 0xd4f7, 0xef53, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0x3c3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x168a);
        EXPECT(gbc.pc(), 0x3c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01D7
        gbc.setState(0xd5ca, 0x10e9, 0x6a60, 0x4dec, 0x6332, 0x378f, 0x1, 0x1);
        gbc.writeMem(0xd5ca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x10e9);
        EXPECT(gbc.pc(), 0xd5cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ca), 0xcb);
        EXPECT(gbc.readMem(0xd5cb), 0x89);
        // CB 89 01D8
        gbc.setState(0x9402, 0x2d11, 0x6e70, 0xf840, 0xc4f4, 0x3c94, 0x0, 0x1);
        gbc.writeMem(0x9402, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2d11);
        EXPECT(gbc.pc(), 0x9404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9402), 0xcb);
        EXPECT(gbc.readMem(0x9403), 0x89);
        // CB 89 01DA
        gbc.setState(0x1ff7, 0x8eca, 0x8610, 0x192d, 0xb032, 0x9112, 0x1, 0x1);
        gbc.writeMem(0x1ff7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8eca);
        EXPECT(gbc.pc(), 0x1ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01DB
        gbc.setState(0x2855, 0x5194, 0x8db0, 0x609a, 0xf44, 0x55e6, 0x0, 0x1);
        gbc.writeMem(0x2855, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5194);
        EXPECT(gbc.pc(), 0x2857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01DC
        gbc.setState(0x1031, 0x3844, 0x7420, 0xb16b, 0xd79e, 0xd571, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3844);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01DD
        gbc.setState(0x207f, 0xe088, 0xd460, 0x8092, 0xcbeb, 0xcac5, 0x0, 0x1);
        gbc.writeMem(0x207f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe088);
        EXPECT(gbc.pc(), 0x2081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01DE
        gbc.setState(0xd64a, 0xdb03, 0x1e30, 0xeda8, 0xe9f3, 0xa29d, 0x1, 0x0);
        gbc.writeMem(0xd64a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdb03);
        EXPECT(gbc.pc(), 0xd64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64a), 0xcb);
        EXPECT(gbc.readMem(0xd64b), 0x89);
        // CB 89 01DF
        gbc.setState(0x1a0, 0x2119, 0x4a10, 0x9cc4, 0xaf3, 0x3386, 0x0, 0x0);
        gbc.writeMem(0x1a0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2119);
        EXPECT(gbc.pc(), 0x1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01E0
        gbc.setState(0x6db4, 0xda70, 0xc80, 0x9f72, 0x7832, 0x8c0c, 0x0, 0x1);
        gbc.writeMem(0x6db4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xda70);
        EXPECT(gbc.pc(), 0x6db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01E1
        gbc.setState(0x749b, 0x3f55, 0x1b40, 0xd008, 0x1c38, 0xba5b, 0x0, 0x0);
        gbc.writeMem(0x749b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3f55);
        EXPECT(gbc.pc(), 0x749d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01E2
        gbc.setState(0x8e12, 0xd065, 0xa2b0, 0x4b7d, 0xf79a, 0x1564, 0x0, 0x1);
        gbc.writeMem(0x8e12, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd065);
        EXPECT(gbc.pc(), 0x8e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e12), 0xcb);
        EXPECT(gbc.readMem(0x8e13), 0x89);
        // CB 89 01E3
        gbc.setState(0xaad9, 0xb19f, 0x5bb0, 0xc91c, 0x8a16, 0x8ba9, 0x0, 0x1);
        gbc.writeMem(0xaad9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb19f);
        EXPECT(gbc.pc(), 0xaadb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad9), 0xcb);
        EXPECT(gbc.readMem(0xaada), 0x89);
        // CB 89 01E4
        gbc.setState(0x75f4, 0xd7ce, 0xc80, 0x85df, 0x8d4, 0x5f78, 0x1, 0x1);
        gbc.writeMem(0x75f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd7ce);
        EXPECT(gbc.pc(), 0x75f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01E5
        gbc.setState(0x2351, 0xb2b2, 0x1460, 0x713, 0xe55c, 0x72ea, 0x1, 0x1);
        gbc.writeMem(0x2351, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb2b2);
        EXPECT(gbc.pc(), 0x2353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01E6
        gbc.setState(0x9660, 0x30ed, 0x6730, 0x92b5, 0x1cdc, 0xe87e, 0x0, 0x1);
        gbc.writeMem(0x9660, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x30ed);
        EXPECT(gbc.pc(), 0x9662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9660), 0xcb);
        EXPECT(gbc.readMem(0x9661), 0x89);
        // CB 89 01E7
        gbc.setState(0xd7cc, 0x37f8, 0x8e40, 0xa135, 0x36ea, 0x72c7, 0x0, 0x1);
        gbc.writeMem(0xd7cc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x37f8);
        EXPECT(gbc.pc(), 0xd7ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7cc), 0xcb);
        EXPECT(gbc.readMem(0xd7cd), 0x89);
        // CB 89 01E8
        gbc.setState(0xeefa, 0x3239, 0x8350, 0x6e47, 0x10e0, 0x5a12, 0x1, 0x1);
        gbc.writeMem(0xeefa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3239);
        EXPECT(gbc.pc(), 0xeefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefa), 0xcb);
        EXPECT(gbc.readMem(0xeefb), 0x89);
        // CB 89 01E9
        gbc.setState(0xbbc, 0x8c8d, 0xec70, 0xb809, 0xc571, 0x24e, 0x1, 0x0);
        gbc.writeMem(0xbbc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8c8d);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01EA
        gbc.setState(0xa6e7, 0xed92, 0x3c80, 0x2928, 0xec1c, 0xca6a, 0x1, 0x1);
        gbc.writeMem(0xa6e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xed92);
        EXPECT(gbc.pc(), 0xa6e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e7), 0xcb);
        EXPECT(gbc.readMem(0xa6e8), 0x89);
        // CB 89 01EB
        gbc.setState(0x463d, 0xde, 0xfc70, 0xd2fe, 0x5d1c, 0xefcb, 0x0, 0x0);
        gbc.writeMem(0x463d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xde);
        EXPECT(gbc.pc(), 0x463f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01ED
        gbc.setState(0xeab4, 0x60c5, 0x4850, 0x48ef, 0x608e, 0x381d, 0x1, 0x1);
        gbc.writeMem(0xeab4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x60c5);
        EXPECT(gbc.pc(), 0xeab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab4), 0xcb);
        EXPECT(gbc.readMem(0xeab5), 0x89);
        // CB 89 01EE
        gbc.setState(0x748a, 0x159b, 0x1210, 0x5d90, 0xa517, 0x1dd7, 0x0, 0x0);
        gbc.writeMem(0x748a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x159b);
        EXPECT(gbc.pc(), 0x748c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01EF
        gbc.setState(0x19e8, 0x33e7, 0xbe50, 0x72b2, 0x907b, 0x1a33, 0x1, 0x0);
        gbc.writeMem(0x19e8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x33e7);
        EXPECT(gbc.pc(), 0x19ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01F0
        gbc.setState(0x3484, 0x79b5, 0x1850, 0x67b2, 0x3612, 0xbaa, 0x1, 0x0);
        gbc.writeMem(0x3484, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x79b5);
        EXPECT(gbc.pc(), 0x3486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01F1
        gbc.setState(0x2e54, 0x250f, 0xc420, 0xb03f, 0x16a6, 0xd3b0, 0x1, 0x0);
        gbc.writeMem(0x2e54, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x250f);
        EXPECT(gbc.pc(), 0x2e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01F2
        gbc.setState(0xc622, 0xe71c, 0x42c0, 0x9325, 0xef2a, 0xf789, 0x0, 0x0);
        gbc.writeMem(0xc622, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe71c);
        EXPECT(gbc.pc(), 0xc624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc622), 0xcb);
        EXPECT(gbc.readMem(0xc623), 0x89);
        // CB 89 01F3
        gbc.setState(0x8a89, 0xc096, 0xa7b0, 0x56d9, 0xc8c4, 0x9767, 0x1, 0x1);
        gbc.writeMem(0x8a89, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc096);
        EXPECT(gbc.pc(), 0x8a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a89), 0xcb);
        EXPECT(gbc.readMem(0x8a8a), 0x89);
        // CB 89 01F4
        gbc.setState(0x35dc, 0xc46d, 0x7920, 0x3818, 0x17d, 0x15b6, 0x1, 0x1);
        gbc.writeMem(0x35dc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc46d);
        EXPECT(gbc.pc(), 0x35de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01F5
        gbc.setState(0x83c7, 0xad49, 0xe910, 0x80bb, 0x48a8, 0x5b4a, 0x1, 0x1);
        gbc.writeMem(0x83c7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xad49);
        EXPECT(gbc.pc(), 0x83c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c7), 0xcb);
        EXPECT(gbc.readMem(0x83c8), 0x89);
        // CB 89 01F6
        gbc.setState(0x12f2, 0xe4a, 0xbb90, 0xc912, 0xa433, 0x6583, 0x1, 0x1);
        gbc.writeMem(0x12f2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe4a);
        EXPECT(gbc.pc(), 0x12f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01F7
        gbc.setState(0x8cca, 0x6106, 0x4f00, 0x3450, 0xa002, 0xb50a, 0x0, 0x1);
        gbc.writeMem(0x8cca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6106);
        EXPECT(gbc.pc(), 0x8ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cca), 0xcb);
        EXPECT(gbc.readMem(0x8ccb), 0x89);
        // CB 89 01F8
        gbc.setState(0x98ec, 0x8321, 0x8560, 0x1d0e, 0xdec4, 0x8349, 0x1, 0x0);
        gbc.writeMem(0x98ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8321);
        EXPECT(gbc.pc(), 0x98ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ec), 0xcb);
        EXPECT(gbc.readMem(0x98ed), 0x89);
        // CB 89 01F9
        gbc.setState(0x6f2c, 0xd87a, 0xf020, 0x42f, 0xa9a5, 0x52a8, 0x1, 0x1);
        gbc.writeMem(0x6f2c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd87a);
        EXPECT(gbc.pc(), 0x6f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 01FA
        gbc.setState(0xde86, 0xf2b7, 0xbcd0, 0x5e25, 0xe34b, 0xb6e3, 0x0, 0x1);
        gbc.writeMem(0xde86, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf2b7);
        EXPECT(gbc.pc(), 0xde88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde86), 0xcb);
        EXPECT(gbc.readMem(0xde87), 0x89);
        // CB 89 01FB
        gbc.setState(0x61e6, 0x9802, 0xca30, 0xf5a8, 0x7ebf, 0xa221, 0x0, 0x1);
        gbc.writeMem(0x61e6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9802);
        EXPECT(gbc.pc(), 0x61e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 01FC
        gbc.setState(0xdbe8, 0x63a, 0x2ab0, 0x9b39, 0x1618, 0xdba5, 0x1, 0x1);
        gbc.writeMem(0xdbe8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x63a);
        EXPECT(gbc.pc(), 0xdbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe8), 0xcb);
        EXPECT(gbc.readMem(0xdbe9), 0x89);
        // CB 89 01FD
        gbc.setState(0xa133, 0xff8e, 0x5aa0, 0xfa99, 0x611e, 0x98fd, 0x1, 0x0);
        gbc.writeMem(0xa133, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xff8e);
        EXPECT(gbc.pc(), 0xa135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa133), 0xcb);
        EXPECT(gbc.readMem(0xa134), 0x89);
        // CB 89 01FE
        gbc.setState(0x63b0, 0xd868, 0x7210, 0xac76, 0x24dd, 0xa8be, 0x0, 0x1);
        gbc.writeMem(0x63b0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd868);
        EXPECT(gbc.pc(), 0x63b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0200
        gbc.setState(0xacc8, 0xd5f1, 0xa040, 0x55bf, 0xf1c, 0x31a1, 0x0, 0x1);
        gbc.writeMem(0xacc8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd5f1);
        EXPECT(gbc.pc(), 0xacca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc8), 0xcb);
        EXPECT(gbc.readMem(0xacc9), 0x89);
        // CB 89 0201
        gbc.setState(0x660b, 0xb97f, 0x1590, 0x816a, 0xda57, 0xbd9a, 0x0, 0x0);
        gbc.writeMem(0x660b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb97f);
        EXPECT(gbc.pc(), 0x660d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0202
        gbc.setState(0x94ab, 0x5920, 0x1940, 0x189, 0x5f98, 0x3216, 0x1, 0x0);
        gbc.writeMem(0x94ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5920);
        EXPECT(gbc.pc(), 0x94ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ab), 0xcb);
        EXPECT(gbc.readMem(0x94ac), 0x89);
        // CB 89 0203
        gbc.setState(0x447f, 0xca7b, 0xd3b0, 0x28c1, 0x45ce, 0x1f76, 0x1, 0x1);
        gbc.writeMem(0x447f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xca7b);
        EXPECT(gbc.pc(), 0x4481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0204
        gbc.setState(0x8d23, 0x733e, 0x3b80, 0x1491, 0xfc04, 0xa03f, 0x0, 0x0);
        gbc.writeMem(0x8d23, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x733e);
        EXPECT(gbc.pc(), 0x8d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d23), 0xcb);
        EXPECT(gbc.readMem(0x8d24), 0x89);
        // CB 89 0205
        gbc.setState(0x3a0a, 0x31f9, 0x100, 0x76f0, 0x21b, 0xebae, 0x1, 0x1);
        gbc.writeMem(0x3a0a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x31f9);
        EXPECT(gbc.pc(), 0x3a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0206
        gbc.setState(0xb73a, 0x5ccf, 0xf320, 0x2120, 0x647f, 0x984b, 0x1, 0x0);
        gbc.writeMem(0xb73a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5ccf);
        EXPECT(gbc.pc(), 0xb73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73a), 0xcb);
        EXPECT(gbc.readMem(0xb73b), 0x89);
        // CB 89 0207
        gbc.setState(0x85ba, 0x6010, 0x29f0, 0xe056, 0xcbd7, 0xedbb, 0x0, 0x1);
        gbc.writeMem(0x85ba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6010);
        EXPECT(gbc.pc(), 0x85bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ba), 0xcb);
        EXPECT(gbc.readMem(0x85bb), 0x89);
        // CB 89 0208
        gbc.setState(0xafff, 0x6a5e, 0x3c60, 0xf510, 0xbb4f, 0xe008, 0x1, 0x0);
        gbc.writeMem(0xafff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6a5e);
        EXPECT(gbc.pc(), 0xb001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafff), 0xcb);
        EXPECT(gbc.readMem(0xb000), 0x89);
        // CB 89 0209
        gbc.setState(0x98c5, 0x723, 0xc1a0, 0x4f90, 0xde25, 0x77c8, 0x1, 0x1);
        gbc.writeMem(0x98c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x723);
        EXPECT(gbc.pc(), 0x98c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c5), 0xcb);
        EXPECT(gbc.readMem(0x98c6), 0x89);
        // CB 89 020B
        gbc.setState(0xd185, 0x8ad7, 0x5920, 0xec69, 0x9f84, 0x9bf0, 0x1, 0x1);
        gbc.writeMem(0xd185, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8ad7);
        EXPECT(gbc.pc(), 0xd187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd185), 0xcb);
        EXPECT(gbc.readMem(0xd186), 0x89);
        // CB 89 020C
        gbc.setState(0x505c, 0x34d4, 0x5da0, 0x3058, 0x20dc, 0x367d, 0x1, 0x1);
        gbc.writeMem(0x505c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x34d4);
        EXPECT(gbc.pc(), 0x505e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 020D
        gbc.setState(0x714e, 0x9d3e, 0x6b60, 0x8062, 0xf28a, 0xf8e, 0x1, 0x0);
        gbc.writeMem(0x714e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9d3e);
        EXPECT(gbc.pc(), 0x7150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 020F
        gbc.setState(0x236, 0x75d8, 0xf590, 0xf403, 0xd64e, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x236, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x75d8);
        EXPECT(gbc.pc(), 0x238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0211
        gbc.setState(0x4b42, 0x100e, 0x1290, 0xc27, 0x7f2, 0xe726, 0x1, 0x1);
        gbc.writeMem(0x4b42, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x100e);
        EXPECT(gbc.pc(), 0x4b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0213
        gbc.setState(0x1cea, 0x934b, 0xa0b0, 0xcb53, 0xdbdc, 0x2935, 0x0, 0x0);
        gbc.writeMem(0x1cea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x934b);
        EXPECT(gbc.pc(), 0x1cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0214
        gbc.setState(0x966b, 0xdf97, 0xbd80, 0xd043, 0xa986, 0x10ee, 0x0, 0x1);
        gbc.writeMem(0x966b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdf97);
        EXPECT(gbc.pc(), 0x966d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966b), 0xcb);
        EXPECT(gbc.readMem(0x966c), 0x89);
        // CB 89 0215
        gbc.setState(0xa249, 0xb54a, 0x11e0, 0x6e6f, 0x2b68, 0xf509, 0x1, 0x0);
        gbc.writeMem(0xa249, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb54a);
        EXPECT(gbc.pc(), 0xa24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa249), 0xcb);
        EXPECT(gbc.readMem(0xa24a), 0x89);
        // CB 89 0216
        gbc.setState(0x6a, 0x5a63, 0x1590, 0x74a3, 0xd5e1, 0xd7ec, 0x1, 0x0);
        gbc.writeMem(0x6a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5a63);
        EXPECT(gbc.pc(), 0x6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0217
        gbc.setState(0xe270, 0x6497, 0x4e90, 0xf8b5, 0x5716, 0x56cc, 0x1, 0x0);
        gbc.writeMem(0xe270, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0xe272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe270), 0xcb);
        EXPECT(gbc.readMem(0xe271), 0x89);
        // CB 89 0218
        gbc.setState(0xcbe9, 0x5b15, 0x65c0, 0xf662, 0x34cf, 0xfafc, 0x1, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5b15);
        EXPECT(gbc.pc(), 0xcbeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe9), 0xcb);
        EXPECT(gbc.readMem(0xcbea), 0x89);
        // CB 89 0219
        gbc.setState(0xac92, 0x2789, 0x5390, 0xce6d, 0xe750, 0x4eae, 0x1, 0x0);
        gbc.writeMem(0xac92, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2789);
        EXPECT(gbc.pc(), 0xac94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac92), 0xcb);
        EXPECT(gbc.readMem(0xac93), 0x89);
        // CB 89 021A
        gbc.setState(0xa797, 0x3cfb, 0xa630, 0xf06d, 0xc60a, 0x1acb, 0x0, 0x1);
        gbc.writeMem(0xa797, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3cfb);
        EXPECT(gbc.pc(), 0xa799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa797), 0xcb);
        EXPECT(gbc.readMem(0xa798), 0x89);
        // CB 89 021B
        gbc.setState(0xd201, 0x81c0, 0x65e0, 0xdb0a, 0x670, 0x8a50, 0x1, 0x1);
        gbc.writeMem(0xd201, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x81c0);
        EXPECT(gbc.pc(), 0xd203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd201), 0xcb);
        EXPECT(gbc.readMem(0xd202), 0x89);
        // CB 89 021C
        gbc.setState(0x2674, 0x93e8, 0xc30, 0xfd32, 0x4fda, 0x898a, 0x0, 0x0);
        gbc.writeMem(0x2674, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x93e8);
        EXPECT(gbc.pc(), 0x2676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 021D
        gbc.setState(0xaf81, 0xd823, 0x5260, 0x2e0, 0x9fb8, 0x2559, 0x0, 0x1);
        gbc.writeMem(0xaf81, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd823);
        EXPECT(gbc.pc(), 0xaf83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf81), 0xcb);
        EXPECT(gbc.readMem(0xaf82), 0x89);
        // CB 89 021E
        gbc.setState(0xba3d, 0x47e0, 0x5460, 0xf2b, 0x3faa, 0xd666, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x47e0);
        EXPECT(gbc.pc(), 0xba3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba3d), 0xcb);
        EXPECT(gbc.readMem(0xba3e), 0x89);
        // CB 89 021F
        gbc.setState(0x7972, 0x49f0, 0xfd00, 0xbe23, 0xb8e4, 0x55ca, 0x1, 0x0);
        gbc.writeMem(0x7972, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x49f0);
        EXPECT(gbc.pc(), 0x7974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0220
        gbc.setState(0x5fe9, 0xb193, 0x1a10, 0x426d, 0x6a04, 0xcd2c, 0x0, 0x1);
        gbc.writeMem(0x5fe9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb193);
        EXPECT(gbc.pc(), 0x5feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0222
        gbc.setState(0x394a, 0xc4d1, 0x40a0, 0x7f8, 0x21a5, 0x2fcb, 0x0, 0x0);
        gbc.writeMem(0x394a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc4d1);
        EXPECT(gbc.pc(), 0x394c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0223
        gbc.setState(0x2852, 0x5300, 0x3510, 0x3d3e, 0xa8d3, 0xd966, 0x1, 0x0);
        gbc.writeMem(0x2852, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5300);
        EXPECT(gbc.pc(), 0x2854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0225
        gbc.setState(0xc1a9, 0x714, 0x86c0, 0x76f0, 0x6329, 0x8eb0, 0x0, 0x0);
        gbc.writeMem(0xc1a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x714);
        EXPECT(gbc.pc(), 0xc1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a9), 0xcb);
        EXPECT(gbc.readMem(0xc1aa), 0x89);
        // CB 89 0226
        gbc.setState(0xd127, 0xb8f2, 0xf000, 0x8d86, 0x48f1, 0x2637, 0x1, 0x0);
        gbc.writeMem(0xd127, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb8f2);
        EXPECT(gbc.pc(), 0xd129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd127), 0xcb);
        EXPECT(gbc.readMem(0xd128), 0x89);
        // CB 89 0227
        gbc.setState(0x3e3c, 0x47f, 0x6ad0, 0x8251, 0x25d3, 0x33e0, 0x0, 0x0);
        gbc.writeMem(0x3e3c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x47f);
        EXPECT(gbc.pc(), 0x3e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0228
        gbc.setState(0xd3b3, 0x8567, 0x3530, 0x1a10, 0xf249, 0x9dd1, 0x0, 0x0);
        gbc.writeMem(0xd3b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8567);
        EXPECT(gbc.pc(), 0xd3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b3), 0xcb);
        EXPECT(gbc.readMem(0xd3b4), 0x89);
        // CB 89 0229
        gbc.setState(0x4655, 0xf83b, 0x5a90, 0x6893, 0x2216, 0x1fd4, 0x1, 0x1);
        gbc.writeMem(0x4655, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf83b);
        EXPECT(gbc.pc(), 0x4657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 022A
        gbc.setState(0x13ec, 0xa5c2, 0x8ae0, 0x25e0, 0x6d4, 0xc0b1, 0x1, 0x1);
        gbc.writeMem(0x13ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa5c2);
        EXPECT(gbc.pc(), 0x13ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 022B
        gbc.setState(0xbef5, 0xb8b8, 0xc440, 0xd9bb, 0xcdc3, 0xea27, 0x0, 0x0);
        gbc.writeMem(0xbef5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb8b8);
        EXPECT(gbc.pc(), 0xbef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef5), 0xcb);
        EXPECT(gbc.readMem(0xbef6), 0x89);
        // CB 89 022C
        gbc.setState(0x9e1a, 0x3391, 0x7930, 0xadef, 0x6845, 0xea68, 0x1, 0x1);
        gbc.writeMem(0x9e1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3391);
        EXPECT(gbc.pc(), 0x9e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1a), 0xcb);
        EXPECT(gbc.readMem(0x9e1b), 0x89);
        // CB 89 022D
        gbc.setState(0xcf9d, 0x7c0, 0xd660, 0x8520, 0xc45b, 0xea70, 0x1, 0x1);
        gbc.writeMem(0xcf9d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7c0);
        EXPECT(gbc.pc(), 0xcf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9d), 0xcb);
        EXPECT(gbc.readMem(0xcf9e), 0x89);
        // CB 89 022E
        gbc.setState(0xce33, 0x9ba3, 0x2920, 0x4f63, 0xda3e, 0x19df, 0x1, 0x1);
        gbc.writeMem(0xce33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9ba3);
        EXPECT(gbc.pc(), 0xce35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce33), 0xcb);
        EXPECT(gbc.readMem(0xce34), 0x89);
        // CB 89 022F
        gbc.setState(0x6ea5, 0x4151, 0xe750, 0x353c, 0x3407, 0x9b, 0x0, 0x0);
        gbc.writeMem(0x6ea5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4151);
        EXPECT(gbc.pc(), 0x6ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0230
        gbc.setState(0x5b2c, 0x736b, 0x8340, 0x7687, 0x211b, 0xe5e, 0x0, 0x0);
        gbc.writeMem(0x5b2c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x736b);
        EXPECT(gbc.pc(), 0x5b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0231
        gbc.setState(0x11c3, 0x83c6, 0xcfb0, 0xba68, 0xcc23, 0xa1f2, 0x0, 0x1);
        gbc.writeMem(0x11c3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x83c6);
        EXPECT(gbc.pc(), 0x11c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0232
        gbc.setState(0xbd82, 0xffbf, 0xed80, 0x4aae, 0x4e8f, 0x423e, 0x0, 0x0);
        gbc.writeMem(0xbd82, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xffbf);
        EXPECT(gbc.pc(), 0xbd84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd82), 0xcb);
        EXPECT(gbc.readMem(0xbd83), 0x89);
        // CB 89 0234
        gbc.setState(0xa2ec, 0xd121, 0x1dc0, 0x4f1f, 0x9af, 0x598, 0x0, 0x0);
        gbc.writeMem(0xa2ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd121);
        EXPECT(gbc.pc(), 0xa2ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ec), 0xcb);
        EXPECT(gbc.readMem(0xa2ed), 0x89);
        // CB 89 0235
        gbc.setState(0x1194, 0x9013, 0x5e50, 0x2f2d, 0xc588, 0xb5c9, 0x1, 0x1);
        gbc.writeMem(0x1194, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9013);
        EXPECT(gbc.pc(), 0x1196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0237
        gbc.setState(0x3812, 0xf4b5, 0x8f90, 0x635f, 0xb379, 0x5c67, 0x1, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf4b5);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0238
        gbc.setState(0x1b8e, 0x36f3, 0x90f0, 0x9c0, 0xa385, 0x9421, 0x0, 0x1);
        gbc.writeMem(0x1b8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0x1b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0239
        gbc.setState(0x6756, 0x867, 0xabd0, 0x1348, 0xdf1c, 0xd546, 0x0, 0x1);
        gbc.writeMem(0x6756, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x867);
        EXPECT(gbc.pc(), 0x6758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 023A
        gbc.setState(0xdf30, 0x7b1a, 0x1760, 0xd077, 0xe59a, 0x45e9, 0x0, 0x1);
        gbc.writeMem(0xdf30, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7b1a);
        EXPECT(gbc.pc(), 0xdf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf30), 0xcb);
        EXPECT(gbc.readMem(0xdf31), 0x89);
        // CB 89 023B
        gbc.setState(0xda5c, 0x6a4e, 0x6db0, 0x9760, 0x8152, 0x1310, 0x1, 0x1);
        gbc.writeMem(0xda5c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6a4e);
        EXPECT(gbc.pc(), 0xda5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda5c), 0xcb);
        EXPECT(gbc.readMem(0xda5d), 0x89);
        // CB 89 023C
        gbc.setState(0xd8bc, 0xee3a, 0x4a40, 0x6ccc, 0xf4d5, 0xd0f8, 0x0, 0x1);
        gbc.writeMem(0xd8bc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xee3a);
        EXPECT(gbc.pc(), 0xd8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8bc), 0xcb);
        EXPECT(gbc.readMem(0xd8bd), 0x89);
        // CB 89 023D
        gbc.setState(0x9e6e, 0x8af9, 0xa810, 0x7495, 0x3a2c, 0xc3c2, 0x1, 0x1);
        gbc.writeMem(0x9e6e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8af9);
        EXPECT(gbc.pc(), 0x9e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6e), 0xcb);
        EXPECT(gbc.readMem(0x9e6f), 0x89);
        // CB 89 023E
        gbc.setState(0x1097, 0xbaf7, 0x5b00, 0xfb6c, 0xa3f5, 0x51da, 0x1, 0x1);
        gbc.writeMem(0x1097, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbaf7);
        EXPECT(gbc.pc(), 0x1099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 023F
        gbc.setState(0x9b71, 0x952, 0x62a0, 0xf2e0, 0xa1d9, 0x2c72, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x952);
        EXPECT(gbc.pc(), 0x9b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b71), 0xcb);
        EXPECT(gbc.readMem(0x9b72), 0x89);
        // CB 89 0240
        gbc.setState(0x5581, 0x5d3f, 0x6030, 0x749b, 0xb797, 0x220f, 0x0, 0x1);
        gbc.writeMem(0x5581, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5d3f);
        EXPECT(gbc.pc(), 0x5583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0241
        gbc.setState(0x4f7c, 0x6423, 0x9bf0, 0xea7, 0x8045, 0x720b, 0x1, 0x1);
        gbc.writeMem(0x4f7c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6423);
        EXPECT(gbc.pc(), 0x4f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0242
        gbc.setState(0xb402, 0xe423, 0x2ac0, 0xb336, 0x3fee, 0x9d36, 0x1, 0x1);
        gbc.writeMem(0xb402, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe423);
        EXPECT(gbc.pc(), 0xb404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb402), 0xcb);
        EXPECT(gbc.readMem(0xb403), 0x89);
        // CB 89 0244
        gbc.setState(0x4b06, 0xb3dd, 0xbde0, 0x599d, 0x23be, 0xf743, 0x0, 0x1);
        gbc.writeMem(0x4b06, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb3dd);
        EXPECT(gbc.pc(), 0x4b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0245
        gbc.setState(0x599, 0x4551, 0x49a0, 0x7156, 0x7a4c, 0x36f0, 0x0, 0x0);
        gbc.writeMem(0x599, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4551);
        EXPECT(gbc.pc(), 0x59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0246
        gbc.setState(0xdc9, 0x2a22, 0xea20, 0xe854, 0xe8be, 0x764f, 0x1, 0x0);
        gbc.writeMem(0xdc9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0xdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0247
        gbc.setState(0xb0fd, 0x93ec, 0x4a80, 0x1319, 0x5bdc, 0xb3e, 0x0, 0x1);
        gbc.writeMem(0xb0fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x93ec);
        EXPECT(gbc.pc(), 0xb0ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fd), 0xcb);
        EXPECT(gbc.readMem(0xb0fe), 0x89);
        // CB 89 0248
        gbc.setState(0x120f, 0x5794, 0x5ee0, 0x4e08, 0x31db, 0x6d14, 0x1, 0x1);
        gbc.writeMem(0x120f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5794);
        EXPECT(gbc.pc(), 0x1211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0249
        gbc.setState(0x2d41, 0xb770, 0x8ee0, 0xe80c, 0x8489, 0x4938, 0x0, 0x1);
        gbc.writeMem(0x2d41, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb770);
        EXPECT(gbc.pc(), 0x2d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 024A
        gbc.setState(0xd9c8, 0x59cf, 0x8b30, 0x29ee, 0x7f9f, 0x9c84, 0x0, 0x0);
        gbc.writeMem(0xd9c8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x59cf);
        EXPECT(gbc.pc(), 0xd9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c8), 0xcb);
        EXPECT(gbc.readMem(0xd9c9), 0x89);
        // CB 89 024B
        gbc.setState(0xd643, 0xa2da, 0x5750, 0x1712, 0x5e43, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0xd643, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa2da);
        EXPECT(gbc.pc(), 0xd645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd643), 0xcb);
        EXPECT(gbc.readMem(0xd644), 0x89);
        // CB 89 024C
        gbc.setState(0x5639, 0x9332, 0x920, 0xe3b0, 0xde98, 0x36e5, 0x1, 0x0);
        gbc.writeMem(0x5639, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9332);
        EXPECT(gbc.pc(), 0x563b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 024D
        gbc.setState(0x7408, 0xd250, 0xe6b0, 0x3a7a, 0xe52e, 0x53e4, 0x1, 0x1);
        gbc.writeMem(0x7408, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd250);
        EXPECT(gbc.pc(), 0x740a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 024E
        gbc.setState(0xbe2b, 0x8605, 0xb6f0, 0x4f37, 0xc3eb, 0xc1ac, 0x0, 0x1);
        gbc.writeMem(0xbe2b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0xbe2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2b), 0xcb);
        EXPECT(gbc.readMem(0xbe2c), 0x89);
        // CB 89 024F
        gbc.setState(0x1bde, 0xb63d, 0xc4a0, 0x6053, 0x3803, 0xbcb1, 0x1, 0x1);
        gbc.writeMem(0x1bde, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb63d);
        EXPECT(gbc.pc(), 0x1be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0250
        gbc.setState(0x96df, 0x9543, 0x7b00, 0xab7, 0xff61, 0x4bef, 0x1, 0x0);
        gbc.writeMem(0x96df, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9543);
        EXPECT(gbc.pc(), 0x96e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96df), 0xcb);
        EXPECT(gbc.readMem(0x96e0), 0x89);
        // CB 89 0251
        gbc.setState(0xddc9, 0x1524, 0xe400, 0xa2f3, 0x3e4b, 0x99dd, 0x0, 0x1);
        gbc.writeMem(0xddc9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1524);
        EXPECT(gbc.pc(), 0xddcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc9), 0xcb);
        EXPECT(gbc.readMem(0xddca), 0x89);
        // CB 89 0252
        gbc.setState(0x3086, 0x6d74, 0x54b0, 0xeced, 0xe935, 0x408d, 0x0, 0x1);
        gbc.writeMem(0x3086, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6d74);
        EXPECT(gbc.pc(), 0x3088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0253
        gbc.setState(0xe266, 0xe5c8, 0xc5f0, 0x3e5a, 0xa46b, 0x3708, 0x0, 0x1);
        gbc.writeMem(0xe266, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe5c8);
        EXPECT(gbc.pc(), 0xe268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe266), 0xcb);
        EXPECT(gbc.readMem(0xe267), 0x89);
        // CB 89 0254
        gbc.setState(0x9ee6, 0xf53c, 0xc870, 0xd23c, 0xaf9a, 0xa775, 0x0, 0x1);
        gbc.writeMem(0x9ee6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf53c);
        EXPECT(gbc.pc(), 0x9ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee6), 0xcb);
        EXPECT(gbc.readMem(0x9ee7), 0x89);
        // CB 89 0255
        gbc.setState(0x67e2, 0x53f7, 0xfa10, 0xfe24, 0x1d11, 0x5078, 0x0, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x53f7);
        EXPECT(gbc.pc(), 0x67e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0256
        gbc.setState(0xcd47, 0x7991, 0x5df0, 0x129e, 0xc6c4, 0x23d6, 0x0, 0x1);
        gbc.writeMem(0xcd47, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7991);
        EXPECT(gbc.pc(), 0xcd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd47), 0xcb);
        EXPECT(gbc.readMem(0xcd48), 0x89);
        // CB 89 0257
        gbc.setState(0x4b24, 0xe5e7, 0xe280, 0xd02d, 0xf629, 0xbeed, 0x1, 0x1);
        gbc.writeMem(0x4b24, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe5e7);
        EXPECT(gbc.pc(), 0x4b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0258
        gbc.setState(0xdebf, 0xddf9, 0x3310, 0xb6d4, 0x1559, 0x7220, 0x0, 0x0);
        gbc.writeMem(0xdebf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xddf9);
        EXPECT(gbc.pc(), 0xdec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebf), 0xcb);
        EXPECT(gbc.readMem(0xdec0), 0x89);
        // CB 89 0259
        gbc.setState(0x6076, 0xc46e, 0xca20, 0x3451, 0x2aaf, 0xec7d, 0x1, 0x1);
        gbc.writeMem(0x6076, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc46e);
        EXPECT(gbc.pc(), 0x6078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 025A
        gbc.setState(0x6fc5, 0x7918, 0xe0c0, 0x47d9, 0x3dd3, 0xbfa4, 0x1, 0x1);
        gbc.writeMem(0x6fc5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7918);
        EXPECT(gbc.pc(), 0x6fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 025B
        gbc.setState(0x361e, 0xfcfa, 0xcc90, 0x77da, 0x8ba0, 0xaa, 0x1, 0x0);
        gbc.writeMem(0x361e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfcfa);
        EXPECT(gbc.pc(), 0x3620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 025D
        gbc.setState(0x121, 0xfc26, 0x1a0, 0xab82, 0xe247, 0xd89b, 0x1, 0x1);
        gbc.writeMem(0x121, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0x123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 025E
        gbc.setState(0x58b4, 0x6d6c, 0x5830, 0x19a1, 0xd4af, 0xe2c6, 0x1, 0x0);
        gbc.writeMem(0x58b4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6d6c);
        EXPECT(gbc.pc(), 0x58b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 025F
        gbc.setState(0x4fe3, 0xb500, 0xcbb0, 0x4c99, 0x6fe0, 0x8756, 0x0, 0x1);
        gbc.writeMem(0x4fe3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb500);
        EXPECT(gbc.pc(), 0x4fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0260
        gbc.setState(0x35cb, 0xc3a9, 0x94f0, 0x42d0, 0xb299, 0xfe9c, 0x0, 0x1);
        gbc.writeMem(0x35cb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc3a9);
        EXPECT(gbc.pc(), 0x35cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0261
        gbc.setState(0x9f40, 0x62fe, 0x2480, 0x6b66, 0xc661, 0xecf2, 0x1, 0x0);
        gbc.writeMem(0x9f40, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x62fe);
        EXPECT(gbc.pc(), 0x9f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f40), 0xcb);
        EXPECT(gbc.readMem(0x9f41), 0x89);
        // CB 89 0262
        gbc.setState(0xccac, 0xe0ec, 0x6e70, 0x1a50, 0x6ef7, 0x177d, 0x1, 0x0);
        gbc.writeMem(0xccac, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe0ec);
        EXPECT(gbc.pc(), 0xccae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccac), 0xcb);
        EXPECT(gbc.readMem(0xccad), 0x89);
        // CB 89 0263
        gbc.setState(0x75f7, 0xcba, 0x6b90, 0x7b1e, 0x1877, 0xbb14, 0x0, 0x1);
        gbc.writeMem(0x75f7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcba);
        EXPECT(gbc.pc(), 0x75f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0264
        gbc.setState(0xa391, 0xf7da, 0x4610, 0x309, 0xc0f3, 0x8fca, 0x0, 0x1);
        gbc.writeMem(0xa391, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf7da);
        EXPECT(gbc.pc(), 0xa393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa391), 0xcb);
        EXPECT(gbc.readMem(0xa392), 0x89);
        // CB 89 0265
        gbc.setState(0x36a2, 0x8b81, 0xb4e0, 0xc277, 0xf75a, 0xf341, 0x1, 0x0);
        gbc.writeMem(0x36a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8b81);
        EXPECT(gbc.pc(), 0x36a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0266
        gbc.setState(0x70aa, 0xdd8d, 0x89c0, 0xb52b, 0x3ada, 0x9c7a, 0x0, 0x0);
        gbc.writeMem(0x70aa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdd8d);
        EXPECT(gbc.pc(), 0x70ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0267
        gbc.setState(0x7925, 0x7418, 0xb9f0, 0xbcea, 0xeb86, 0x1f35, 0x0, 0x1);
        gbc.writeMem(0x7925, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7418);
        EXPECT(gbc.pc(), 0x7927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0268
        gbc.setState(0x2c85, 0x2efb, 0x69a0, 0x44b9, 0xbef1, 0xdb13, 0x0, 0x1);
        gbc.writeMem(0x2c85, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2efb);
        EXPECT(gbc.pc(), 0x2c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 026A
        gbc.setState(0xb77d, 0x22a4, 0x47c0, 0x665d, 0xf658, 0x5ff2, 0x0, 0x1);
        gbc.writeMem(0xb77d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x22a4);
        EXPECT(gbc.pc(), 0xb77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77d), 0xcb);
        EXPECT(gbc.readMem(0xb77e), 0x89);
        // CB 89 026C
        gbc.setState(0xe354, 0x5fef, 0x59c0, 0x475e, 0xff85, 0xb43d, 0x0, 0x1);
        gbc.writeMem(0xe354, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5fef);
        EXPECT(gbc.pc(), 0xe356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe354), 0xcb);
        EXPECT(gbc.readMem(0xe355), 0x89);
        // CB 89 026E
        gbc.setState(0xeaee, 0x664e, 0x1fe0, 0x2994, 0x2290, 0x507d, 0x1, 0x0);
        gbc.writeMem(0xeaee, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x664e);
        EXPECT(gbc.pc(), 0xeaf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaee), 0xcb);
        EXPECT(gbc.readMem(0xeaef), 0x89);
        // CB 89 026F
        gbc.setState(0x2e69, 0x9bf3, 0x3d20, 0xde2c, 0xe255, 0xb02f, 0x0, 0x0);
        gbc.writeMem(0x2e69, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9bf3);
        EXPECT(gbc.pc(), 0x2e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0270
        gbc.setState(0xb3bf, 0x80e3, 0xf0c0, 0xcf93, 0xdb66, 0xbc5, 0x0, 0x0);
        gbc.writeMem(0xb3bf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x80e3);
        EXPECT(gbc.pc(), 0xb3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3bf), 0xcb);
        EXPECT(gbc.readMem(0xb3c0), 0x89);
        // CB 89 0271
        gbc.setState(0x6fc4, 0xcf26, 0xcf60, 0x8f16, 0xc000, 0x1307, 0x1, 0x1);
        gbc.writeMem(0x6fc4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcf26);
        EXPECT(gbc.pc(), 0x6fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0272
        gbc.setState(0x21ed, 0x255f, 0x2c90, 0xb0f9, 0x434f, 0x5f67, 0x0, 0x0);
        gbc.writeMem(0x21ed, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x255f);
        EXPECT(gbc.pc(), 0x21ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0273
        gbc.setState(0x307e, 0x3d3b, 0x6aa0, 0xbf0d, 0x8be1, 0x61dd, 0x1, 0x1);
        gbc.writeMem(0x307e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3d3b);
        EXPECT(gbc.pc(), 0x3080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0274
        gbc.setState(0x12e0, 0x142f, 0xe820, 0xda9c, 0x8f3f, 0x2ac5, 0x0, 0x0);
        gbc.writeMem(0x12e0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x142f);
        EXPECT(gbc.pc(), 0x12e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0275
        gbc.setState(0x2bff, 0xd072, 0xeae0, 0xa006, 0x98c9, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x2bff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd072);
        EXPECT(gbc.pc(), 0x2c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0276
        gbc.setState(0x427, 0x3951, 0x200, 0xa684, 0xe0c, 0x3f51, 0x1, 0x1);
        gbc.writeMem(0x427, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3951);
        EXPECT(gbc.pc(), 0x429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0278
        gbc.setState(0x984e, 0x1932, 0x3330, 0x4575, 0x1af7, 0xf886, 0x1, 0x1);
        gbc.writeMem(0x984e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1932);
        EXPECT(gbc.pc(), 0x9850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984e), 0xcb);
        EXPECT(gbc.readMem(0x984f), 0x89);
        // CB 89 0279
        gbc.setState(0xa76d, 0x22bd, 0xdab0, 0xb6dc, 0xf3d3, 0xa445, 0x0, 0x1);
        gbc.writeMem(0xa76d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x22bd);
        EXPECT(gbc.pc(), 0xa76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76d), 0xcb);
        EXPECT(gbc.readMem(0xa76e), 0x89);
        // CB 89 027A
        gbc.setState(0x3af2, 0x3ca8, 0xd760, 0xcea2, 0x2aaa, 0x8777, 0x1, 0x1);
        gbc.writeMem(0x3af2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3ca8);
        EXPECT(gbc.pc(), 0x3af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 027B
        gbc.setState(0x60db, 0x810c, 0xca60, 0xbaaa, 0xcebe, 0xb6a, 0x0, 0x0);
        gbc.writeMem(0x60db, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x810c);
        EXPECT(gbc.pc(), 0x60dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 027C
        gbc.setState(0x2b32, 0xe4ea, 0xe8d0, 0x2f02, 0x6cf1, 0xf0bf, 0x1, 0x0);
        gbc.writeMem(0x2b32, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe4ea);
        EXPECT(gbc.pc(), 0x2b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 027D
        gbc.setState(0x13bb, 0x96f4, 0x8330, 0x4bca, 0x8e2b, 0xd346, 0x1, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x96f4);
        EXPECT(gbc.pc(), 0x13bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 027E
        gbc.setState(0x8d66, 0x5eec, 0x6e30, 0x8faf, 0xedd2, 0x5cd2, 0x0, 0x1);
        gbc.writeMem(0x8d66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5eec);
        EXPECT(gbc.pc(), 0x8d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d66), 0xcb);
        EXPECT(gbc.readMem(0x8d67), 0x89);
        // CB 89 027F
        gbc.setState(0x2683, 0x466c, 0x7320, 0xd324, 0x4d81, 0x687d, 0x0, 0x0);
        gbc.writeMem(0x2683, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x466c);
        EXPECT(gbc.pc(), 0x2685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0280
        gbc.setState(0x82d2, 0x54a0, 0x8d20, 0x29fd, 0x48b9, 0x3ec3, 0x1, 0x0);
        gbc.writeMem(0x82d2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x54a0);
        EXPECT(gbc.pc(), 0x82d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d2), 0xcb);
        EXPECT(gbc.readMem(0x82d3), 0x89);
        // CB 89 0281
        gbc.setState(0x9658, 0x4806, 0x40a0, 0xa8ea, 0x7e2c, 0x7e40, 0x0, 0x0);
        gbc.writeMem(0x9658, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4806);
        EXPECT(gbc.pc(), 0x965a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9658), 0xcb);
        EXPECT(gbc.readMem(0x9659), 0x89);
        // CB 89 0282
        gbc.setState(0x4fe7, 0x327d, 0x3050, 0xc663, 0xd6a0, 0x72a, 0x1, 0x0);
        gbc.writeMem(0x4fe7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x327d);
        EXPECT(gbc.pc(), 0x4fe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0283
        gbc.setState(0x91ce, 0x35ec, 0x4b40, 0xa0fc, 0x929d, 0x978c, 0x1, 0x1);
        gbc.writeMem(0x91ce, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x35ec);
        EXPECT(gbc.pc(), 0x91d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ce), 0xcb);
        EXPECT(gbc.readMem(0x91cf), 0x89);
        // CB 89 0284
        gbc.setState(0x6bed, 0x30cb, 0xeba0, 0xa447, 0x1180, 0x1158, 0x0, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x30cb);
        EXPECT(gbc.pc(), 0x6bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0285
        gbc.setState(0x2ec9, 0x207a, 0x580, 0x45d2, 0x77a9, 0xcd76, 0x0, 0x0);
        gbc.writeMem(0x2ec9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x207a);
        EXPECT(gbc.pc(), 0x2ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0286
        gbc.setState(0xa26a, 0xbe5a, 0x7d50, 0x21a7, 0x2032, 0xde7a, 0x1, 0x1);
        gbc.writeMem(0xa26a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbe5a);
        EXPECT(gbc.pc(), 0xa26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa26a), 0xcb);
        EXPECT(gbc.readMem(0xa26b), 0x89);
        // CB 89 0287
        gbc.setState(0xc3cb, 0xeecd, 0xf850, 0x5726, 0x4be7, 0xd0bf, 0x1, 0x0);
        gbc.writeMem(0xc3cb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xeecd);
        EXPECT(gbc.pc(), 0xc3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3cb), 0xcb);
        EXPECT(gbc.readMem(0xc3cc), 0x89);
        // CB 89 0288
        gbc.setState(0x95ab, 0xe0b8, 0x2aa0, 0xf172, 0x7b65, 0x1ba2, 0x1, 0x1);
        gbc.writeMem(0x95ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe0b8);
        EXPECT(gbc.pc(), 0x95ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ab), 0xcb);
        EXPECT(gbc.readMem(0x95ac), 0x89);
        // CB 89 0289
        gbc.setState(0x9744, 0x6ba5, 0xca00, 0x3326, 0x3427, 0xe621, 0x0, 0x0);
        gbc.writeMem(0x9744, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6ba5);
        EXPECT(gbc.pc(), 0x9746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9744), 0xcb);
        EXPECT(gbc.readMem(0x9745), 0x89);
        // CB 89 028A
        gbc.setState(0xc101, 0xb561, 0x5720, 0xa6f8, 0xd957, 0x7220, 0x1, 0x1);
        gbc.writeMem(0xc101, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb561);
        EXPECT(gbc.pc(), 0xc103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc101), 0xcb);
        EXPECT(gbc.readMem(0xc102), 0x89);
        // CB 89 028B
        gbc.setState(0x581c, 0x7af7, 0x2b20, 0x9d74, 0x4de, 0x5300, 0x1, 0x0);
        gbc.writeMem(0x581c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7af7);
        EXPECT(gbc.pc(), 0x581e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 028C
        gbc.setState(0xe57, 0xf1ac, 0xa890, 0x4e24, 0xf7e8, 0x1855, 0x0, 0x0);
        gbc.writeMem(0xe57, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf1ac);
        EXPECT(gbc.pc(), 0xe59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 028D
        gbc.setState(0x3ffb, 0x9f50, 0xa4b0, 0xb07, 0xdc0b, 0x7f95, 0x0, 0x1);
        gbc.writeMem(0x3ffb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9f50);
        EXPECT(gbc.pc(), 0x3ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 028E
        gbc.setState(0xed2c, 0x1974, 0xae90, 0xaa70, 0x9ee4, 0xa981, 0x0, 0x0);
        gbc.writeMem(0xed2c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1974);
        EXPECT(gbc.pc(), 0xed2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2c), 0xcb);
        EXPECT(gbc.readMem(0xed2d), 0x89);
        // CB 89 028F
        gbc.setState(0x902, 0x2dc5, 0x8f70, 0x238c, 0x543b, 0xab65, 0x0, 0x0);
        gbc.writeMem(0x902, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2dc5);
        EXPECT(gbc.pc(), 0x904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0290
        gbc.setState(0x2a20, 0x481c, 0xe410, 0x2913, 0x54a, 0x250b, 0x0, 0x1);
        gbc.writeMem(0x2a20, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x481c);
        EXPECT(gbc.pc(), 0x2a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0291
        gbc.setState(0x9ce2, 0x2967, 0x7b80, 0x9785, 0x402d, 0xf80, 0x1, 0x1);
        gbc.writeMem(0x9ce2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2967);
        EXPECT(gbc.pc(), 0x9ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce2), 0xcb);
        EXPECT(gbc.readMem(0x9ce3), 0x89);
        // CB 89 0292
        gbc.setState(0xcc66, 0x79ae, 0x97c0, 0x4312, 0x2c2d, 0xb568, 0x1, 0x0);
        gbc.writeMem(0xcc66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x79ae);
        EXPECT(gbc.pc(), 0xcc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc66), 0xcb);
        EXPECT(gbc.readMem(0xcc67), 0x89);
        // CB 89 0293
        gbc.setState(0x2f31, 0x58a5, 0xd200, 0x9571, 0x8a90, 0x2316, 0x1, 0x1);
        gbc.writeMem(0x2f31, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x58a5);
        EXPECT(gbc.pc(), 0x2f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0294
        gbc.setState(0x73fb, 0x3ce7, 0x8690, 0xa1ba, 0xc5c3, 0xb882, 0x0, 0x1);
        gbc.writeMem(0x73fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3ce7);
        EXPECT(gbc.pc(), 0x73fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0295
        gbc.setState(0x291d, 0xeb3f, 0x98c0, 0xda7c, 0xc864, 0x6625, 0x0, 0x0);
        gbc.writeMem(0x291d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xeb3f);
        EXPECT(gbc.pc(), 0x291f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0296
        gbc.setState(0xe6a9, 0x2507, 0xbe00, 0x2997, 0x846b, 0xe18b, 0x1, 0x0);
        gbc.writeMem(0xe6a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2507);
        EXPECT(gbc.pc(), 0xe6ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a9), 0xcb);
        EXPECT(gbc.readMem(0xe6aa), 0x89);
        // CB 89 0297
        gbc.setState(0xd84b, 0xc1e8, 0xb950, 0xe113, 0xb684, 0xf122, 0x0, 0x0);
        gbc.writeMem(0xd84b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc1e8);
        EXPECT(gbc.pc(), 0xd84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84b), 0xcb);
        EXPECT(gbc.readMem(0xd84c), 0x89);
        // CB 89 0298
        gbc.setState(0x76e2, 0x7cd1, 0xd9e0, 0xd7a, 0x82f0, 0xc9cd, 0x0, 0x0);
        gbc.writeMem(0x76e2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7cd1);
        EXPECT(gbc.pc(), 0x76e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0299
        gbc.setState(0x702f, 0xe74d, 0x3940, 0xe5dd, 0xd506, 0x8cca, 0x0, 0x0);
        gbc.writeMem(0x702f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe74d);
        EXPECT(gbc.pc(), 0x7031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 029A
        gbc.setState(0x1d15, 0x941, 0x740, 0xdacb, 0x473, 0x6751, 0x0, 0x1);
        gbc.writeMem(0x1d15, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x941);
        EXPECT(gbc.pc(), 0x1d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 029B
        gbc.setState(0x30c1, 0xa35c, 0x9dd0, 0xc098, 0x688, 0xa4cd, 0x0, 0x1);
        gbc.writeMem(0x30c1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa35c);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 029C
        gbc.setState(0xde75, 0xbea9, 0x9e50, 0x11fb, 0x3827, 0xf9fc, 0x1, 0x1);
        gbc.writeMem(0xde75, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbea9);
        EXPECT(gbc.pc(), 0xde77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde75), 0xcb);
        EXPECT(gbc.readMem(0xde76), 0x89);
        // CB 89 029D
        gbc.setState(0xd9e0, 0xb28d, 0x2550, 0xfb2, 0x7797, 0x7857, 0x0, 0x1);
        gbc.writeMem(0xd9e0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb28d);
        EXPECT(gbc.pc(), 0xd9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e0), 0xcb);
        EXPECT(gbc.readMem(0xd9e1), 0x89);
        // CB 89 029E
        gbc.setState(0x3e85, 0xcba9, 0x2550, 0x9043, 0x937d, 0xe11c, 0x1, 0x0);
        gbc.writeMem(0x3e85, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcba9);
        EXPECT(gbc.pc(), 0x3e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 029F
        gbc.setState(0x3ae9, 0xbd12, 0x5b00, 0xe9b1, 0x9723, 0xa437, 0x1, 0x0);
        gbc.writeMem(0x3ae9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbd12);
        EXPECT(gbc.pc(), 0x3aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02A0
        gbc.setState(0x444e, 0x8783, 0x2900, 0x76f1, 0x2597, 0x8d0, 0x0, 0x0);
        gbc.writeMem(0x444e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8783);
        EXPECT(gbc.pc(), 0x4450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02A1
        gbc.setState(0x9770, 0x20f6, 0x41d0, 0xb201, 0x73f7, 0x5090, 0x1, 0x1);
        gbc.writeMem(0x9770, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x20f6);
        EXPECT(gbc.pc(), 0x9772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9770), 0xcb);
        EXPECT(gbc.readMem(0x9771), 0x89);
        // CB 89 02A2
        gbc.setState(0xab6b, 0x331a, 0xb7e0, 0xcda8, 0x9101, 0x7ecb, 0x0, 0x1);
        gbc.writeMem(0xab6b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x331a);
        EXPECT(gbc.pc(), 0xab6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6b), 0xcb);
        EXPECT(gbc.readMem(0xab6c), 0x89);
        // CB 89 02A3
        gbc.setState(0xaf2, 0xa095, 0x8e80, 0x2a54, 0xef56, 0xb3df, 0x0, 0x1);
        gbc.writeMem(0xaf2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa095);
        EXPECT(gbc.pc(), 0xaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02A4
        gbc.setState(0x3945, 0x77f1, 0xe960, 0xdda, 0x93d2, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x77f1);
        EXPECT(gbc.pc(), 0x3947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02A5
        gbc.setState(0x1ad6, 0x6d1, 0xb9e0, 0x7715, 0x4411, 0x3a, 0x0, 0x0);
        gbc.writeMem(0x1ad6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6d1);
        EXPECT(gbc.pc(), 0x1ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02A6
        gbc.setState(0x544, 0xed9c, 0x22b0, 0xa876, 0x7c03, 0x2a7e, 0x1, 0x1);
        gbc.writeMem(0x544, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xed9c);
        EXPECT(gbc.pc(), 0x546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02A7
        gbc.setState(0x4cfe, 0x3492, 0x5630, 0xa43d, 0xdfe0, 0x969f, 0x1, 0x0);
        gbc.writeMem(0x4cfe, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3492);
        EXPECT(gbc.pc(), 0x4d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02A8
        gbc.setState(0xc8b0, 0x986, 0x9520, 0x6a5f, 0x1082, 0xa1ab, 0x1, 0x1);
        gbc.writeMem(0xc8b0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x986);
        EXPECT(gbc.pc(), 0xc8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b0), 0xcb);
        EXPECT(gbc.readMem(0xc8b1), 0x89);
        // CB 89 02A9
        gbc.setState(0x6a8b, 0x6702, 0x7920, 0x16b, 0x6927, 0x54c3, 0x0, 0x0);
        gbc.writeMem(0x6a8b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6702);
        EXPECT(gbc.pc(), 0x6a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02AA
        gbc.setState(0xadc4, 0x548c, 0x16a0, 0x5fdf, 0x92ca, 0x8077, 0x1, 0x0);
        gbc.writeMem(0xadc4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x548c);
        EXPECT(gbc.pc(), 0xadc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc4), 0xcb);
        EXPECT(gbc.readMem(0xadc5), 0x89);
        // CB 89 02AB
        gbc.setState(0x9a5d, 0x2519, 0x5370, 0x978, 0xc524, 0x9378, 0x1, 0x0);
        gbc.writeMem(0x9a5d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2519);
        EXPECT(gbc.pc(), 0x9a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5d), 0xcb);
        EXPECT(gbc.readMem(0x9a5e), 0x89);
        // CB 89 02AC
        gbc.setState(0xe509, 0x5a05, 0x6060, 0xa3f6, 0xe124, 0x866d, 0x1, 0x1);
        gbc.writeMem(0xe509, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5a05);
        EXPECT(gbc.pc(), 0xe50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe509), 0xcb);
        EXPECT(gbc.readMem(0xe50a), 0x89);
        // CB 89 02AD
        gbc.setState(0x401f, 0x747, 0xfea0, 0xaee4, 0x74ca, 0xdcd2, 0x0, 0x0);
        gbc.writeMem(0x401f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x747);
        EXPECT(gbc.pc(), 0x4021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02AE
        gbc.setState(0x4066, 0x403c, 0x54d0, 0x57a9, 0x5888, 0xf122, 0x0, 0x0);
        gbc.writeMem(0x4066, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x403c);
        EXPECT(gbc.pc(), 0x4068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02AF
        gbc.setState(0x28c4, 0x3ba5, 0x4710, 0xb39e, 0x9195, 0x6821, 0x1, 0x1);
        gbc.writeMem(0x28c4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3ba5);
        EXPECT(gbc.pc(), 0x28c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02B0
        gbc.setState(0xef9c, 0xe1b4, 0x56a0, 0xd812, 0xfc66, 0x752f, 0x1, 0x1);
        gbc.writeMem(0xef9c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe1b4);
        EXPECT(gbc.pc(), 0xef9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef9c), 0xcb);
        EXPECT(gbc.readMem(0xef9d), 0x89);
        // CB 89 02B1
        gbc.setState(0x405f, 0x2c5d, 0x4e80, 0x566e, 0x90b7, 0x18f8, 0x0, 0x0);
        gbc.writeMem(0x405f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2c5d);
        EXPECT(gbc.pc(), 0x4061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02B2
        gbc.setState(0xa03b, 0x13d2, 0x4cf0, 0xfbf8, 0xea6e, 0x8454, 0x1, 0x0);
        gbc.writeMem(0xa03b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x13d2);
        EXPECT(gbc.pc(), 0xa03d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03b), 0xcb);
        EXPECT(gbc.readMem(0xa03c), 0x89);
        // CB 89 02B3
        gbc.setState(0xb25f, 0x49cf, 0x4270, 0x4f43, 0xb90c, 0xc17f, 0x0, 0x0);
        gbc.writeMem(0xb25f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x49cf);
        EXPECT(gbc.pc(), 0xb261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25f), 0xcb);
        EXPECT(gbc.readMem(0xb260), 0x89);
        // CB 89 02B4
        gbc.setState(0x910e, 0x7547, 0xb330, 0xdeee, 0xcf53, 0xb720, 0x1, 0x1);
        gbc.writeMem(0x910e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7547);
        EXPECT(gbc.pc(), 0x9110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910e), 0xcb);
        EXPECT(gbc.readMem(0x910f), 0x89);
        // CB 89 02B5
        gbc.setState(0xe265, 0x118c, 0x9d20, 0xefd1, 0x9a76, 0x2daf, 0x1, 0x1);
        gbc.writeMem(0xe265, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x118c);
        EXPECT(gbc.pc(), 0xe267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe265), 0xcb);
        EXPECT(gbc.readMem(0xe266), 0x89);
        // CB 89 02B6
        gbc.setState(0x195b, 0x4efa, 0x6980, 0xae90, 0xf581, 0xabcf, 0x1, 0x1);
        gbc.writeMem(0x195b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4efa);
        EXPECT(gbc.pc(), 0x195d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02B7
        gbc.setState(0x373e, 0x963c, 0x8550, 0xff5a, 0x3ceb, 0x4c44, 0x0, 0x1);
        gbc.writeMem(0x373e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x963c);
        EXPECT(gbc.pc(), 0x3740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02B8
        gbc.setState(0x8dda, 0x5e21, 0xbb20, 0x54b, 0x88be, 0x6233, 0x0, 0x1);
        gbc.writeMem(0x8dda, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5e21);
        EXPECT(gbc.pc(), 0x8ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dda), 0xcb);
        EXPECT(gbc.readMem(0x8ddb), 0x89);
        // CB 89 02B9
        gbc.setState(0xa0b0, 0xd62f, 0x2da0, 0xd77, 0xa50a, 0x48be, 0x0, 0x0);
        gbc.writeMem(0xa0b0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd62f);
        EXPECT(gbc.pc(), 0xa0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b0), 0xcb);
        EXPECT(gbc.readMem(0xa0b1), 0x89);
        // CB 89 02BA
        gbc.setState(0x9673, 0x9de5, 0x79b0, 0x421d, 0x29fc, 0x5eac, 0x0, 0x1);
        gbc.writeMem(0x9673, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9de5);
        EXPECT(gbc.pc(), 0x9675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9673), 0xcb);
        EXPECT(gbc.readMem(0x9674), 0x89);
        // CB 89 02BB
        gbc.setState(0xdb74, 0xf3e8, 0x74d0, 0x21c2, 0xb266, 0xa80a, 0x0, 0x1);
        gbc.writeMem(0xdb74, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf3e8);
        EXPECT(gbc.pc(), 0xdb76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb74), 0xcb);
        EXPECT(gbc.readMem(0xdb75), 0x89);
        // CB 89 02BC
        gbc.setState(0x5ebf, 0xb12f, 0xdb40, 0x9148, 0xc5d6, 0xc390, 0x1, 0x0);
        gbc.writeMem(0x5ebf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb12f);
        EXPECT(gbc.pc(), 0x5ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02BD
        gbc.setState(0xc370, 0x2ffc, 0xb570, 0x7aaf, 0x9c38, 0x636f, 0x1, 0x0);
        gbc.writeMem(0xc370, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2ffc);
        EXPECT(gbc.pc(), 0xc372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc370), 0xcb);
        EXPECT(gbc.readMem(0xc371), 0x89);
        // CB 89 02BE
        gbc.setState(0xd64d, 0x83a, 0x51d0, 0x9535, 0xeae6, 0x72ea, 0x0, 0x0);
        gbc.writeMem(0xd64d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x83a);
        EXPECT(gbc.pc(), 0xd64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64d), 0xcb);
        EXPECT(gbc.readMem(0xd64e), 0x89);
        // CB 89 02BF
        gbc.setState(0xeed4, 0x6f30, 0xfec0, 0x8cb0, 0x7a24, 0x6485, 0x0, 0x0);
        gbc.writeMem(0xeed4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6f30);
        EXPECT(gbc.pc(), 0xeed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed4), 0xcb);
        EXPECT(gbc.readMem(0xeed5), 0x89);
        // CB 89 02C0
        gbc.setState(0xc102, 0x104d, 0xa2d0, 0xcaf5, 0xedc6, 0xb5d9, 0x0, 0x1);
        gbc.writeMem(0xc102, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x104d);
        EXPECT(gbc.pc(), 0xc104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc102), 0xcb);
        EXPECT(gbc.readMem(0xc103), 0x89);
        // CB 89 02C1
        gbc.setState(0x8eae, 0x8213, 0x43c0, 0xdb2d, 0x6e68, 0xf554, 0x0, 0x0);
        gbc.writeMem(0x8eae, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8213);
        EXPECT(gbc.pc(), 0x8eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eae), 0xcb);
        EXPECT(gbc.readMem(0x8eaf), 0x89);
        // CB 89 02C2
        gbc.setState(0x9210, 0x72d0, 0xc070, 0xdb2d, 0xa2d5, 0x2097, 0x1, 0x1);
        gbc.writeMem(0x9210, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x72d0);
        EXPECT(gbc.pc(), 0x9212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9210), 0xcb);
        EXPECT(gbc.readMem(0x9211), 0x89);
        // CB 89 02C3
        gbc.setState(0xbf2, 0x4e10, 0x6c80, 0xb4ac, 0x2583, 0x3de1, 0x0, 0x1);
        gbc.writeMem(0xbf2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4e10);
        EXPECT(gbc.pc(), 0xbf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02C4
        gbc.setState(0xaadd, 0xd0fd, 0xd110, 0x3bd2, 0xad2, 0x5704, 0x0, 0x1);
        gbc.writeMem(0xaadd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd0fd);
        EXPECT(gbc.pc(), 0xaadf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaadd), 0xcb);
        EXPECT(gbc.readMem(0xaade), 0x89);
        // CB 89 02C5
        gbc.setState(0x9a33, 0xb20e, 0x1010, 0xc7cb, 0x305a, 0xd71c, 0x0, 0x0);
        gbc.writeMem(0x9a33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb20e);
        EXPECT(gbc.pc(), 0x9a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a33), 0xcb);
        EXPECT(gbc.readMem(0x9a34), 0x89);
        // CB 89 02C6
        gbc.setState(0x4e16, 0xc863, 0xafc0, 0x81db, 0x414a, 0xcc7, 0x1, 0x1);
        gbc.writeMem(0x4e16, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc863);
        EXPECT(gbc.pc(), 0x4e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02C7
        gbc.setState(0x704e, 0xdcf2, 0x8fe0, 0x1108, 0x9700, 0xdbd2, 0x1, 0x1);
        gbc.writeMem(0x704e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdcf2);
        EXPECT(gbc.pc(), 0x7050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02C8
        gbc.setState(0xd957, 0x9d04, 0x9fa0, 0x3e1f, 0xb8d, 0x567f, 0x0, 0x0);
        gbc.writeMem(0xd957, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9d04);
        EXPECT(gbc.pc(), 0xd959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd957), 0xcb);
        EXPECT(gbc.readMem(0xd958), 0x89);
        // CB 89 02C9
        gbc.setState(0x83d, 0x235, 0x2d90, 0x3371, 0x7902, 0x429e, 0x1, 0x1);
        gbc.writeMem(0x83d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x235);
        EXPECT(gbc.pc(), 0x83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02CA
        gbc.setState(0x1710, 0x9246, 0x8fa0, 0x12a0, 0x45b2, 0xbec6, 0x1, 0x1);
        gbc.writeMem(0x1710, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9246);
        EXPECT(gbc.pc(), 0x1712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02CB
        gbc.setState(0x6e98, 0x28bc, 0x1260, 0x105b, 0xcac5, 0x6f7e, 0x0, 0x0);
        gbc.writeMem(0x6e98, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x28bc);
        EXPECT(gbc.pc(), 0x6e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02CC
        gbc.setState(0x3e, 0x8b69, 0x7750, 0x7aeb, 0x43b5, 0x2249, 0x1, 0x0);
        gbc.writeMem(0x3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8b69);
        EXPECT(gbc.pc(), 0x40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02CD
        gbc.setState(0x3bf8, 0xc9d, 0x52c0, 0xccfe, 0xc5e4, 0x8417, 0x0, 0x1);
        gbc.writeMem(0x3bf8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc9d);
        EXPECT(gbc.pc(), 0x3bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02CE
        gbc.setState(0x42a5, 0x85c9, 0x3230, 0xc067, 0xeb66, 0xeb83, 0x0, 0x1);
        gbc.writeMem(0x42a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x85c9);
        EXPECT(gbc.pc(), 0x42a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02CF
        gbc.setState(0xc2e4, 0x40bd, 0x9240, 0x97f0, 0xbb2a, 0xb1e6, 0x0, 0x0);
        gbc.writeMem(0xc2e4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x40bd);
        EXPECT(gbc.pc(), 0xc2e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e4), 0xcb);
        EXPECT(gbc.readMem(0xc2e5), 0x89);
        // CB 89 02D0
        gbc.setState(0x271a, 0x32c8, 0xb430, 0xfaab, 0xf9f1, 0x54e8, 0x1, 0x1);
        gbc.writeMem(0x271a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x32c8);
        EXPECT(gbc.pc(), 0x271c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02D1
        gbc.setState(0xda7e, 0xfa95, 0xe500, 0xb652, 0x6728, 0x4e77, 0x0, 0x1);
        gbc.writeMem(0xda7e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfa95);
        EXPECT(gbc.pc(), 0xda80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7e), 0xcb);
        EXPECT(gbc.readMem(0xda7f), 0x89);
        // CB 89 02D2
        gbc.setState(0xe68f, 0x4f5e, 0x4620, 0x21ee, 0xf745, 0x2073, 0x1, 0x1);
        gbc.writeMem(0xe68f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4f5e);
        EXPECT(gbc.pc(), 0xe691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68f), 0xcb);
        EXPECT(gbc.readMem(0xe690), 0x89);
        // CB 89 02D3
        gbc.setState(0xc484, 0x6c2b, 0x5970, 0xce8, 0xcc6e, 0x5d51, 0x0, 0x0);
        gbc.writeMem(0xc484, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6c2b);
        EXPECT(gbc.pc(), 0xc486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc484), 0xcb);
        EXPECT(gbc.readMem(0xc485), 0x89);
        // CB 89 02D4
        gbc.setState(0xb93c, 0x54f5, 0xf360, 0x9ddd, 0xe4eb, 0xc61f, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x54f5);
        EXPECT(gbc.pc(), 0xb93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93c), 0xcb);
        EXPECT(gbc.readMem(0xb93d), 0x89);
        // CB 89 02D5
        gbc.setState(0x919d, 0x8522, 0xdf70, 0xb4bc, 0x7cd1, 0xbcc3, 0x1, 0x1);
        gbc.writeMem(0x919d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8522);
        EXPECT(gbc.pc(), 0x919f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x919d), 0xcb);
        EXPECT(gbc.readMem(0x919e), 0x89);
        // CB 89 02D6
        gbc.setState(0xdc0e, 0x4af5, 0xc7b0, 0xf6b8, 0xfbde, 0x35bc, 0x0, 0x0);
        gbc.writeMem(0xdc0e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4af5);
        EXPECT(gbc.pc(), 0xdc10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0e), 0xcb);
        EXPECT(gbc.readMem(0xdc0f), 0x89);
        // CB 89 02D7
        gbc.setState(0x98de, 0xc62c, 0x1ba0, 0x24f9, 0x10b4, 0x82de, 0x1, 0x1);
        gbc.writeMem(0x98de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc62c);
        EXPECT(gbc.pc(), 0x98e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98de), 0xcb);
        EXPECT(gbc.readMem(0x98df), 0x89);
        // CB 89 02D8
        gbc.setState(0xc374, 0x7d95, 0x5c10, 0x5990, 0x4176, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0xc374, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7d95);
        EXPECT(gbc.pc(), 0xc376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc374), 0xcb);
        EXPECT(gbc.readMem(0xc375), 0x89);
        // CB 89 02D9
        gbc.setState(0xaaea, 0xc14f, 0x17a0, 0x23c7, 0x4aaa, 0xa390, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc14f);
        EXPECT(gbc.pc(), 0xaaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaea), 0xcb);
        EXPECT(gbc.readMem(0xaaeb), 0x89);
        // CB 89 02DA
        gbc.setState(0xd698, 0x86d6, 0x8fb0, 0xde6b, 0x1100, 0xd043, 0x1, 0x0);
        gbc.writeMem(0xd698, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x86d6);
        EXPECT(gbc.pc(), 0xd69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd698), 0xcb);
        EXPECT(gbc.readMem(0xd699), 0x89);
        // CB 89 02DB
        gbc.setState(0x3b3, 0x1b2b, 0x7770, 0x2d3a, 0x153c, 0xb0f7, 0x0, 0x1);
        gbc.writeMem(0x3b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1b2b);
        EXPECT(gbc.pc(), 0x3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02DC
        gbc.setState(0x7737, 0x5704, 0x17b0, 0xd984, 0xbf15, 0xee0, 0x1, 0x0);
        gbc.writeMem(0x7737, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5704);
        EXPECT(gbc.pc(), 0x7739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02DD
        gbc.setState(0x4973, 0x7d50, 0x20b0, 0x732a, 0x424d, 0xe09f, 0x1, 0x0);
        gbc.writeMem(0x4973, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7d50);
        EXPECT(gbc.pc(), 0x4975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02DE
        gbc.setState(0xbfa2, 0x12b0, 0x6b60, 0x5498, 0x2014, 0x5c67, 0x1, 0x1);
        gbc.writeMem(0xbfa2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x12b0);
        EXPECT(gbc.pc(), 0xbfa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa2), 0xcb);
        EXPECT(gbc.readMem(0xbfa3), 0x89);
        // CB 89 02DF
        gbc.setState(0x7a73, 0xe172, 0xa580, 0x6a4, 0x25fb, 0x22bd, 0x0, 0x0);
        gbc.writeMem(0x7a73, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe172);
        EXPECT(gbc.pc(), 0x7a75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02E0
        gbc.setState(0xd665, 0xe395, 0x6500, 0xb250, 0x91e6, 0xf69, 0x1, 0x1);
        gbc.writeMem(0xd665, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe395);
        EXPECT(gbc.pc(), 0xd667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd665), 0xcb);
        EXPECT(gbc.readMem(0xd666), 0x89);
        // CB 89 02E1
        gbc.setState(0x7f7b, 0x3b1b, 0xb450, 0x364d, 0x47b, 0x8cc5, 0x1, 0x1);
        gbc.writeMem(0x7f7b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b1b);
        EXPECT(gbc.pc(), 0x7f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02E2
        gbc.setState(0xba0c, 0xd124, 0xabb0, 0xd075, 0x622, 0x4504, 0x0, 0x1);
        gbc.writeMem(0xba0c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd124);
        EXPECT(gbc.pc(), 0xba0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0c), 0xcb);
        EXPECT(gbc.readMem(0xba0d), 0x89);
        // CB 89 02E3
        gbc.setState(0xe465, 0x191b, 0x5380, 0x6ad8, 0xcd7, 0x6856, 0x0, 0x0);
        gbc.writeMem(0xe465, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x191b);
        EXPECT(gbc.pc(), 0xe467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe465), 0xcb);
        EXPECT(gbc.readMem(0xe466), 0x89);
        // CB 89 02E4
        gbc.setState(0x89c9, 0x79f5, 0x3950, 0xed65, 0xa14a, 0xf5f9, 0x1, 0x0);
        gbc.writeMem(0x89c9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x79f5);
        EXPECT(gbc.pc(), 0x89cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c9), 0xcb);
        EXPECT(gbc.readMem(0x89ca), 0x89);
        // CB 89 02E5
        gbc.setState(0x2880, 0x682c, 0x8e00, 0xf647, 0xeda3, 0xb250, 0x0, 0x1);
        gbc.writeMem(0x2880, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x682c);
        EXPECT(gbc.pc(), 0x2882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02E6
        gbc.setState(0x437a, 0x1f42, 0x9900, 0xf8f6, 0xab7e, 0x5b89, 0x0, 0x1);
        gbc.writeMem(0x437a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1f42);
        EXPECT(gbc.pc(), 0x437c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02E7
        gbc.setState(0xe823, 0x66c0, 0x6030, 0xb5e8, 0x75ff, 0x69a3, 0x0, 0x1);
        gbc.writeMem(0xe823, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x66c0);
        EXPECT(gbc.pc(), 0xe825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe823), 0xcb);
        EXPECT(gbc.readMem(0xe824), 0x89);
        // CB 89 02E8
        gbc.setState(0xae92, 0x338e, 0xce60, 0xb1cd, 0x29db, 0x53d, 0x1, 0x1);
        gbc.writeMem(0xae92, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x338e);
        EXPECT(gbc.pc(), 0xae94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae92), 0xcb);
        EXPECT(gbc.readMem(0xae93), 0x89);
        // CB 89 02E9
        gbc.setState(0xe371, 0xf20a, 0xab30, 0xdd9a, 0xb7c6, 0xc403, 0x1, 0x0);
        gbc.writeMem(0xe371, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf20a);
        EXPECT(gbc.pc(), 0xe373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe371), 0xcb);
        EXPECT(gbc.readMem(0xe372), 0x89);
        // CB 89 02EB
        gbc.setState(0xd1ab, 0x4cc4, 0x8380, 0x42d9, 0x54c6, 0xc85, 0x0, 0x1);
        gbc.writeMem(0xd1ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4cc4);
        EXPECT(gbc.pc(), 0xd1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ab), 0xcb);
        EXPECT(gbc.readMem(0xd1ac), 0x89);
        // CB 89 02EC
        gbc.setState(0x3234, 0x6327, 0xaff0, 0x5410, 0xf04d, 0xf96f, 0x1, 0x1);
        gbc.writeMem(0x3234, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6327);
        EXPECT(gbc.pc(), 0x3236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02ED
        gbc.setState(0xc55c, 0x2192, 0xf610, 0xfb9f, 0x1f12, 0xe815, 0x0, 0x1);
        gbc.writeMem(0xc55c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2192);
        EXPECT(gbc.pc(), 0xc55e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc55c), 0xcb);
        EXPECT(gbc.readMem(0xc55d), 0x89);
        // CB 89 02EE
        gbc.setState(0x651, 0xb8e2, 0xf890, 0xc359, 0x3b1e, 0x3773, 0x0, 0x0);
        gbc.writeMem(0x651, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb8e2);
        EXPECT(gbc.pc(), 0x653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02EF
        gbc.setState(0x465d, 0x7c6e, 0x180, 0x8ab4, 0x9166, 0x5e8c, 0x0, 0x0);
        gbc.writeMem(0x465d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7c6e);
        EXPECT(gbc.pc(), 0x465f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02F0
        gbc.setState(0x5e99, 0x985a, 0xe580, 0xc327, 0xe1f2, 0x59ac, 0x0, 0x0);
        gbc.writeMem(0x5e99, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x985a);
        EXPECT(gbc.pc(), 0x5e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02F1
        gbc.setState(0xce45, 0x45bc, 0xdff0, 0x4bef, 0x33a8, 0xcca4, 0x1, 0x0);
        gbc.writeMem(0xce45, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x45bc);
        EXPECT(gbc.pc(), 0xce47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce45), 0xcb);
        EXPECT(gbc.readMem(0xce46), 0x89);
        // CB 89 02F2
        gbc.setState(0x4c5, 0x6fbb, 0xde90, 0x4340, 0xdbc, 0xa659, 0x1, 0x1);
        gbc.writeMem(0x4c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6fbb);
        EXPECT(gbc.pc(), 0x4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02F3
        gbc.setState(0xa191, 0xb175, 0x9a20, 0xe419, 0x6c33, 0xd2d8, 0x1, 0x1);
        gbc.writeMem(0xa191, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb175);
        EXPECT(gbc.pc(), 0xa193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa191), 0xcb);
        EXPECT(gbc.readMem(0xa192), 0x89);
        // CB 89 02F4
        gbc.setState(0x7d4c, 0x256b, 0x1170, 0x4c55, 0x1e88, 0xcb1d, 0x1, 0x0);
        gbc.writeMem(0x7d4c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x256b);
        EXPECT(gbc.pc(), 0x7d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02F5
        gbc.setState(0x341f, 0x3a27, 0x5f10, 0xc84e, 0xdfb, 0x8934, 0x1, 0x1);
        gbc.writeMem(0x341f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3a27);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02F6
        gbc.setState(0x86f4, 0xab80, 0xd770, 0xc670, 0x654b, 0xf146, 0x0, 0x1);
        gbc.writeMem(0x86f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xab80);
        EXPECT(gbc.pc(), 0x86f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f4), 0xcb);
        EXPECT(gbc.readMem(0x86f5), 0x89);
        // CB 89 02F7
        gbc.setState(0x8162, 0x56e8, 0x3760, 0xcab5, 0x22dc, 0x56e, 0x0, 0x0);
        gbc.writeMem(0x8162, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x56e8);
        EXPECT(gbc.pc(), 0x8164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8162), 0xcb);
        EXPECT(gbc.readMem(0x8163), 0x89);
        // CB 89 02F8
        gbc.setState(0x262f, 0x8302, 0x18a0, 0xa5e7, 0xb8a2, 0x2e38, 0x0, 0x1);
        gbc.writeMem(0x262f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8302);
        EXPECT(gbc.pc(), 0x2631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02F9
        gbc.setState(0x8212, 0xafc0, 0x4ec0, 0xe862, 0x47a5, 0xb317, 0x0, 0x0);
        gbc.writeMem(0x8212, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xafc0);
        EXPECT(gbc.pc(), 0x8214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8212), 0xcb);
        EXPECT(gbc.readMem(0x8213), 0x89);
        // CB 89 02FA
        gbc.setState(0x5a9c, 0xe5fc, 0x4370, 0xf2af, 0xa2d1, 0xaca0, 0x1, 0x0);
        gbc.writeMem(0x5a9c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe5fc);
        EXPECT(gbc.pc(), 0x5a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 02FB
        gbc.setState(0xccd0, 0x3ac4, 0x5d70, 0xb054, 0xacbf, 0x7680, 0x0, 0x1);
        gbc.writeMem(0xccd0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3ac4);
        EXPECT(gbc.pc(), 0xccd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd0), 0xcb);
        EXPECT(gbc.readMem(0xccd1), 0x89);
        // CB 89 02FD
        gbc.setState(0x20ad, 0xe814, 0x7820, 0x268e, 0xcaf5, 0x2952, 0x1, 0x0);
        gbc.writeMem(0x20ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe814);
        EXPECT(gbc.pc(), 0x20af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 02FE
        gbc.setState(0xae08, 0x3b96, 0x7760, 0x84d1, 0xef98, 0x175f, 0x0, 0x0);
        gbc.writeMem(0xae08, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3b96);
        EXPECT(gbc.pc(), 0xae0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae08), 0xcb);
        EXPECT(gbc.readMem(0xae09), 0x89);
        // CB 89 02FF
        gbc.setState(0x630, 0xcce2, 0x24c0, 0xf1, 0xaa3, 0xd04b, 0x0, 0x0);
        gbc.writeMem(0x630, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcce2);
        EXPECT(gbc.pc(), 0x632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0300
        gbc.setState(0x53cf, 0x306a, 0xd80, 0x884d, 0x9475, 0x8049, 0x1, 0x1);
        gbc.writeMem(0x53cf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x306a);
        EXPECT(gbc.pc(), 0x53d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0301
        gbc.setState(0x344b, 0x55cc, 0xaf20, 0x6555, 0xc145, 0x328e, 0x1, 0x1);
        gbc.writeMem(0x344b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x55cc);
        EXPECT(gbc.pc(), 0x344d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0302
        gbc.setState(0x1ca8, 0x943e, 0xe1b0, 0xb0a, 0x705, 0x72df, 0x0, 0x0);
        gbc.writeMem(0x1ca8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x943e);
        EXPECT(gbc.pc(), 0x1caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0303
        gbc.setState(0xa5a, 0xc675, 0xaba0, 0x9242, 0x1609, 0x5668, 0x0, 0x0);
        gbc.writeMem(0xa5a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc675);
        EXPECT(gbc.pc(), 0xa5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0304
        gbc.setState(0xed10, 0xf87f, 0xa860, 0xf064, 0xb13, 0x3be3, 0x1, 0x0);
        gbc.writeMem(0xed10, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf87f);
        EXPECT(gbc.pc(), 0xed12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed10), 0xcb);
        EXPECT(gbc.readMem(0xed11), 0x89);
        // CB 89 0305
        gbc.setState(0xb85e, 0x7ac9, 0x3160, 0x3a3c, 0x2cf3, 0x35e6, 0x1, 0x1);
        gbc.writeMem(0xb85e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7ac9);
        EXPECT(gbc.pc(), 0xb860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb85e), 0xcb);
        EXPECT(gbc.readMem(0xb85f), 0x89);
        // CB 89 0306
        gbc.setState(0x64e7, 0xd861, 0xc230, 0xb280, 0xd664, 0x3c39, 0x1, 0x1);
        gbc.writeMem(0x64e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd861);
        EXPECT(gbc.pc(), 0x64e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0307
        gbc.setState(0x2ac6, 0xeea0, 0x5b50, 0xb052, 0x4ddc, 0xad90, 0x1, 0x0);
        gbc.writeMem(0x2ac6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xeea0);
        EXPECT(gbc.pc(), 0x2ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0308
        gbc.setState(0x4be2, 0xbbaa, 0x6e60, 0xf1d0, 0x225a, 0x8a48, 0x0, 0x0);
        gbc.writeMem(0x4be2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbbaa);
        EXPECT(gbc.pc(), 0x4be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 030A
        gbc.setState(0x917e, 0x3fb4, 0x6f40, 0xcee7, 0xdc5e, 0x5e2e, 0x0, 0x1);
        gbc.writeMem(0x917e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3fb4);
        EXPECT(gbc.pc(), 0x9180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917e), 0xcb);
        EXPECT(gbc.readMem(0x917f), 0x89);
        // CB 89 030C
        gbc.setState(0xd0d6, 0x882e, 0x97e0, 0xb73b, 0x19ab, 0xd592, 0x1, 0x1);
        gbc.writeMem(0xd0d6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x882e);
        EXPECT(gbc.pc(), 0xd0d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d6), 0xcb);
        EXPECT(gbc.readMem(0xd0d7), 0x89);
        // CB 89 030D
        gbc.setState(0x904c, 0xa923, 0xbfa0, 0x66a9, 0x4144, 0xf38d, 0x1, 0x1);
        gbc.writeMem(0x904c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa923);
        EXPECT(gbc.pc(), 0x904e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904c), 0xcb);
        EXPECT(gbc.readMem(0x904d), 0x89);
        // CB 89 030E
        gbc.setState(0x4781, 0x88de, 0x6ad0, 0x6b2d, 0x6fe9, 0xd0ac, 0x1, 0x1);
        gbc.writeMem(0x4781, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x88de);
        EXPECT(gbc.pc(), 0x4783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 030F
        gbc.setState(0x290f, 0xdd40, 0x7580, 0x9650, 0x353b, 0xa95a, 0x1, 0x1);
        gbc.writeMem(0x290f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdd40);
        EXPECT(gbc.pc(), 0x2911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0310
        gbc.setState(0x1d88, 0xdb5a, 0x1620, 0xf4d1, 0x16c7, 0xd5f6, 0x0, 0x0);
        gbc.writeMem(0x1d88, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdb5a);
        EXPECT(gbc.pc(), 0x1d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0311
        gbc.setState(0x1219, 0xaf54, 0xec20, 0xb8b9, 0x2149, 0x3c42, 0x0, 0x1);
        gbc.writeMem(0x1219, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xaf54);
        EXPECT(gbc.pc(), 0x121b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0312
        gbc.setState(0x7e4e, 0x904e, 0x5420, 0x549f, 0xc852, 0xad80, 0x1, 0x1);
        gbc.writeMem(0x7e4e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x904e);
        EXPECT(gbc.pc(), 0x7e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0313
        gbc.setState(0xc620, 0x9efe, 0xef40, 0x784, 0xbe98, 0x75c7, 0x1, 0x1);
        gbc.writeMem(0xc620, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9efe);
        EXPECT(gbc.pc(), 0xc622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc620), 0xcb);
        EXPECT(gbc.readMem(0xc621), 0x89);
        // CB 89 0314
        gbc.setState(0x3027, 0x70b7, 0x5cd0, 0x99f3, 0x2952, 0x9c44, 0x1, 0x0);
        gbc.writeMem(0x3027, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x70b7);
        EXPECT(gbc.pc(), 0x3029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0315
        gbc.setState(0x823e, 0xf24a, 0x18d0, 0xfa8a, 0x7f5b, 0xc5db, 0x1, 0x0);
        gbc.writeMem(0x823e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf24a);
        EXPECT(gbc.pc(), 0x8240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x823e), 0xcb);
        EXPECT(gbc.readMem(0x823f), 0x89);
        // CB 89 0316
        gbc.setState(0x9430, 0x2354, 0x6940, 0x2f6a, 0x7d07, 0x6290, 0x0, 0x0);
        gbc.writeMem(0x9430, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2354);
        EXPECT(gbc.pc(), 0x9432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9430), 0xcb);
        EXPECT(gbc.readMem(0x9431), 0x89);
        // CB 89 0317
        gbc.setState(0xdd60, 0x4790, 0x6b40, 0x3fe, 0xa88f, 0x4514, 0x1, 0x0);
        gbc.writeMem(0xdd60, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4790);
        EXPECT(gbc.pc(), 0xdd62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd60), 0xcb);
        EXPECT(gbc.readMem(0xdd61), 0x89);
        // CB 89 0318
        gbc.setState(0x392f, 0x26b4, 0x2350, 0x727c, 0x60af, 0x5f5d, 0x0, 0x1);
        gbc.writeMem(0x392f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x26b4);
        EXPECT(gbc.pc(), 0x3931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0319
        gbc.setState(0x163e, 0xaaa, 0xa790, 0x9324, 0xd5f3, 0x40f3, 0x1, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xaaa);
        EXPECT(gbc.pc(), 0x1640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 031A
        gbc.setState(0x609f, 0xbee1, 0x4ed0, 0xca5d, 0x358, 0x94f6, 0x1, 0x1);
        gbc.writeMem(0x609f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbee1);
        EXPECT(gbc.pc(), 0x60a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 031B
        gbc.setState(0xa18d, 0x2f66, 0xb050, 0x3112, 0x92a6, 0x70fc, 0x1, 0x0);
        gbc.writeMem(0xa18d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2f66);
        EXPECT(gbc.pc(), 0xa18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18d), 0xcb);
        EXPECT(gbc.readMem(0xa18e), 0x89);
        // CB 89 031C
        gbc.setState(0x610c, 0xbc89, 0xdcb0, 0x99fb, 0xfbb0, 0x85cd, 0x0, 0x0);
        gbc.writeMem(0x610c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbc89);
        EXPECT(gbc.pc(), 0x610e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 031D
        gbc.setState(0x25f4, 0x9283, 0x750, 0x9171, 0xf61b, 0x2e39, 0x0, 0x1);
        gbc.writeMem(0x25f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9283);
        EXPECT(gbc.pc(), 0x25f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 031E
        gbc.setState(0x77ca, 0x9de2, 0xc0b0, 0x4a7a, 0xac05, 0xd8b2, 0x0, 0x1);
        gbc.writeMem(0x77ca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9de2);
        EXPECT(gbc.pc(), 0x77cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 031F
        gbc.setState(0x897e, 0xbd83, 0x5860, 0xc574, 0x4303, 0x30bc, 0x1, 0x0);
        gbc.writeMem(0x897e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbd83);
        EXPECT(gbc.pc(), 0x8980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897e), 0xcb);
        EXPECT(gbc.readMem(0x897f), 0x89);
        // CB 89 0320
        gbc.setState(0x2531, 0x234e, 0xb0a0, 0x98ef, 0x387c, 0xf3c4, 0x1, 0x1);
        gbc.writeMem(0x2531, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x234e);
        EXPECT(gbc.pc(), 0x2533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0321
        gbc.setState(0x3220, 0xa550, 0xc540, 0xbb5b, 0x7c12, 0x7d46, 0x0, 0x1);
        gbc.writeMem(0x3220, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa550);
        EXPECT(gbc.pc(), 0x3222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0322
        gbc.setState(0x331c, 0x1f1b, 0xfa60, 0x638b, 0xc8d7, 0x122a, 0x1, 0x1);
        gbc.writeMem(0x331c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1f1b);
        EXPECT(gbc.pc(), 0x331e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0323
        gbc.setState(0xa88e, 0x83e1, 0xd200, 0x775, 0x3b81, 0xa7ad, 0x1, 0x1);
        gbc.writeMem(0xa88e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x83e1);
        EXPECT(gbc.pc(), 0xa890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88e), 0xcb);
        EXPECT(gbc.readMem(0xa88f), 0x89);
        // CB 89 0324
        gbc.setState(0x8476, 0x71ae, 0x95c0, 0x6ddc, 0x697, 0xc3fe, 0x1, 0x0);
        gbc.writeMem(0x8476, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x71ae);
        EXPECT(gbc.pc(), 0x8478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8476), 0xcb);
        EXPECT(gbc.readMem(0x8477), 0x89);
        // CB 89 0325
        gbc.setState(0x5071, 0x8d19, 0x5e80, 0xd6d9, 0x7ac1, 0xd18b, 0x1, 0x1);
        gbc.writeMem(0x5071, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8d19);
        EXPECT(gbc.pc(), 0x5073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0326
        gbc.setState(0xaa7c, 0x24da, 0x7860, 0x88c9, 0x907a, 0x4707, 0x1, 0x0);
        gbc.writeMem(0xaa7c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x24da);
        EXPECT(gbc.pc(), 0xaa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7c), 0xcb);
        EXPECT(gbc.readMem(0xaa7d), 0x89);
        // CB 89 0327
        gbc.setState(0x4718, 0x689f, 0x7580, 0xae2b, 0x7bf9, 0x202e, 0x1, 0x1);
        gbc.writeMem(0x4718, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x689f);
        EXPECT(gbc.pc(), 0x471a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0329
        gbc.setState(0xa2a5, 0xc4af, 0xd680, 0x50ec, 0xb42f, 0xd93d, 0x1, 0x1);
        gbc.writeMem(0xa2a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc4af);
        EXPECT(gbc.pc(), 0xa2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a5), 0xcb);
        EXPECT(gbc.readMem(0xa2a6), 0x89);
        // CB 89 032A
        gbc.setState(0x7015, 0x1cc7, 0xb80, 0x393d, 0xfca4, 0xed10, 0x0, 0x0);
        gbc.writeMem(0x7015, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1cc7);
        EXPECT(gbc.pc(), 0x7017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 032B
        gbc.setState(0xc56a, 0x5479, 0x9050, 0x86d6, 0xa218, 0xe03b, 0x0, 0x1);
        gbc.writeMem(0xc56a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5479);
        EXPECT(gbc.pc(), 0xc56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56a), 0xcb);
        EXPECT(gbc.readMem(0xc56b), 0x89);
        // CB 89 032D
        gbc.setState(0x1ce1, 0x75e3, 0x7510, 0xf8a3, 0x81c9, 0xcba, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x75e3);
        EXPECT(gbc.pc(), 0x1ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 032E
        gbc.setState(0xb577, 0xa2de, 0x51d0, 0xf45e, 0x5aa2, 0x540d, 0x0, 0x1);
        gbc.writeMem(0xb577, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa2de);
        EXPECT(gbc.pc(), 0xb579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb577), 0xcb);
        EXPECT(gbc.readMem(0xb578), 0x89);
        // CB 89 032F
        gbc.setState(0x367, 0xea9c, 0x9760, 0x4c3d, 0x1972, 0xd7a3, 0x0, 0x0);
        gbc.writeMem(0x367, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xea9c);
        EXPECT(gbc.pc(), 0x369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0330
        gbc.setState(0x50de, 0x19fb, 0xa1f0, 0x4667, 0xaffd, 0x7c2e, 0x0, 0x0);
        gbc.writeMem(0x50de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x19fb);
        EXPECT(gbc.pc(), 0x50e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0331
        gbc.setState(0x3311, 0x2b96, 0x2490, 0x6331, 0x368f, 0xca65, 0x0, 0x0);
        gbc.writeMem(0x3311, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2b96);
        EXPECT(gbc.pc(), 0x3313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0332
        gbc.setState(0xbca7, 0x3022, 0xd6e0, 0xf84a, 0x1f18, 0x6c76, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3022);
        EXPECT(gbc.pc(), 0xbca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca7), 0xcb);
        EXPECT(gbc.readMem(0xbca8), 0x89);
        // CB 89 0333
        gbc.setState(0x3fe1, 0xb32d, 0x610, 0xddb1, 0xecef, 0x67ef, 0x1, 0x1);
        gbc.writeMem(0x3fe1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb32d);
        EXPECT(gbc.pc(), 0x3fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0334
        gbc.setState(0x6ccd, 0xcfcf, 0xcb60, 0x3eeb, 0x1197, 0x595f, 0x0, 0x1);
        gbc.writeMem(0x6ccd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcfcf);
        EXPECT(gbc.pc(), 0x6ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0335
        gbc.setState(0x136e, 0xef37, 0x7390, 0xe7f7, 0x5322, 0x382d, 0x1, 0x0);
        gbc.writeMem(0x136e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xef37);
        EXPECT(gbc.pc(), 0x1370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0336
        gbc.setState(0xc7a, 0xbb2d, 0x46e0, 0xace3, 0xa215, 0x3809, 0x1, 0x0);
        gbc.writeMem(0xc7a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbb2d);
        EXPECT(gbc.pc(), 0xc7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0338
        gbc.setState(0x64b, 0xf796, 0x1880, 0xac09, 0xe9d, 0xb73b, 0x0, 0x1);
        gbc.writeMem(0x64b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf796);
        EXPECT(gbc.pc(), 0x64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0339
        gbc.setState(0x54f8, 0xf9bf, 0xbe20, 0xf1aa, 0xfaa5, 0x235c, 0x1, 0x1);
        gbc.writeMem(0x54f8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf9bf);
        EXPECT(gbc.pc(), 0x54fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 033A
        gbc.setState(0x4cd2, 0x27e5, 0xe020, 0xf687, 0xe006, 0x62d, 0x1, 0x0);
        gbc.writeMem(0x4cd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x27e5);
        EXPECT(gbc.pc(), 0x4cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 033B
        gbc.setState(0xc328, 0xf3d9, 0x1520, 0xef67, 0xeed, 0x25b, 0x1, 0x0);
        gbc.writeMem(0xc328, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf3d9);
        EXPECT(gbc.pc(), 0xc32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc328), 0xcb);
        EXPECT(gbc.readMem(0xc329), 0x89);
        // CB 89 033C
        gbc.setState(0x7f3f, 0xa62f, 0xf3e0, 0x4bcf, 0xc6f7, 0x8bb0, 0x0, 0x0);
        gbc.writeMem(0x7f3f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa62f);
        EXPECT(gbc.pc(), 0x7f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 033D
        gbc.setState(0x2a2e, 0x745e, 0xacc0, 0xb3a9, 0xc7f, 0x73c, 0x0, 0x1);
        gbc.writeMem(0x2a2e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x745e);
        EXPECT(gbc.pc(), 0x2a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 033E
        gbc.setState(0x897a, 0xa932, 0xd2a0, 0x2303, 0xd3c0, 0x5fb5, 0x1, 0x1);
        gbc.writeMem(0x897a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa932);
        EXPECT(gbc.pc(), 0x897c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897a), 0xcb);
        EXPECT(gbc.readMem(0x897b), 0x89);
        // CB 89 033F
        gbc.setState(0xd544, 0xa9c0, 0xe3d0, 0x830d, 0xc054, 0x10b5, 0x1, 0x1);
        gbc.writeMem(0xd544, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa9c0);
        EXPECT(gbc.pc(), 0xd546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd544), 0xcb);
        EXPECT(gbc.readMem(0xd545), 0x89);
        // CB 89 0340
        gbc.setState(0x8848, 0x4e0c, 0x2e50, 0x4706, 0xfb59, 0x4505, 0x1, 0x1);
        gbc.writeMem(0x8848, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4e0c);
        EXPECT(gbc.pc(), 0x884a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8848), 0xcb);
        EXPECT(gbc.readMem(0x8849), 0x89);
        // CB 89 0341
        gbc.setState(0x988a, 0xf1da, 0x8000, 0x5508, 0x8c71, 0x7e20, 0x0, 0x1);
        gbc.writeMem(0x988a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf1da);
        EXPECT(gbc.pc(), 0x988c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988a), 0xcb);
        EXPECT(gbc.readMem(0x988b), 0x89);
        // CB 89 0342
        gbc.setState(0xd721, 0xedb9, 0xc30, 0xd605, 0x39d3, 0x2f77, 0x1, 0x0);
        gbc.writeMem(0xd721, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xedb9);
        EXPECT(gbc.pc(), 0xd723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd721), 0xcb);
        EXPECT(gbc.readMem(0xd722), 0x89);
        // CB 89 0343
        gbc.setState(0xe7af, 0x6b72, 0x5990, 0xb698, 0x8690, 0xe635, 0x1, 0x0);
        gbc.writeMem(0xe7af, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6b72);
        EXPECT(gbc.pc(), 0xe7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7af), 0xcb);
        EXPECT(gbc.readMem(0xe7b0), 0x89);
        // CB 89 0344
        gbc.setState(0x5d31, 0xfb2a, 0x3ca0, 0x87c2, 0x7735, 0x196a, 0x1, 0x1);
        gbc.writeMem(0x5d31, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfb2a);
        EXPECT(gbc.pc(), 0x5d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0345
        gbc.setState(0xa0ef, 0xcbca, 0xbf10, 0xbc2, 0x5441, 0x9e1a, 0x1, 0x1);
        gbc.writeMem(0xa0ef, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcbca);
        EXPECT(gbc.pc(), 0xa0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ef), 0xcb);
        EXPECT(gbc.readMem(0xa0f0), 0x89);
        // CB 89 0346
        gbc.setState(0x5923, 0xd6b, 0x3c50, 0x6a34, 0x6fa0, 0xa286, 0x1, 0x1);
        gbc.writeMem(0x5923, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd6b);
        EXPECT(gbc.pc(), 0x5925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0347
        gbc.setState(0x6d64, 0xcfd8, 0x79f0, 0xb087, 0xf797, 0x11a5, 0x1, 0x0);
        gbc.writeMem(0x6d64, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcfd8);
        EXPECT(gbc.pc(), 0x6d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0348
        gbc.setState(0xe7d5, 0xe8bf, 0xe1d0, 0x7935, 0xefed, 0x5283, 0x1, 0x0);
        gbc.writeMem(0xe7d5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe8bf);
        EXPECT(gbc.pc(), 0xe7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d5), 0xcb);
        EXPECT(gbc.readMem(0xe7d6), 0x89);
        // CB 89 0349
        gbc.setState(0x72d3, 0xacb, 0xc2f0, 0x283c, 0x4ff3, 0x44ae, 0x0, 0x0);
        gbc.writeMem(0x72d3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xacb);
        EXPECT(gbc.pc(), 0x72d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 034B
        gbc.setState(0xcabc, 0x30d2, 0xdbb0, 0x7494, 0xdc0e, 0xb491, 0x0, 0x1);
        gbc.writeMem(0xcabc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x30d2);
        EXPECT(gbc.pc(), 0xcabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcabc), 0xcb);
        EXPECT(gbc.readMem(0xcabd), 0x89);
        // CB 89 034C
        gbc.setState(0x1ad7, 0xbe23, 0x4780, 0x4e3e, 0xe9f5, 0x73bf, 0x0, 0x1);
        gbc.writeMem(0x1ad7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbe23);
        EXPECT(gbc.pc(), 0x1ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 034E
        gbc.setState(0x5290, 0x1fe7, 0x8b80, 0xe4e3, 0xab10, 0x400a, 0x1, 0x0);
        gbc.writeMem(0x5290, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1fe7);
        EXPECT(gbc.pc(), 0x5292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 034F
        gbc.setState(0xdf9, 0x8c03, 0x2f40, 0x92a9, 0xe77e, 0x53ae, 0x0, 0x1);
        gbc.writeMem(0xdf9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8c03);
        EXPECT(gbc.pc(), 0xdfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0350
        gbc.setState(0xb8f3, 0x52bb, 0xe630, 0xb494, 0x779f, 0x6b63, 0x1, 0x1);
        gbc.writeMem(0xb8f3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x52bb);
        EXPECT(gbc.pc(), 0xb8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f3), 0xcb);
        EXPECT(gbc.readMem(0xb8f4), 0x89);
        // CB 89 0351
        gbc.setState(0x36c4, 0x5d00, 0x9e70, 0xc1b4, 0x677f, 0xd650, 0x1, 0x1);
        gbc.writeMem(0x36c4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5d00);
        EXPECT(gbc.pc(), 0x36c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0352
        gbc.setState(0x2b7a, 0xa806, 0xa670, 0x6810, 0x8fc0, 0xe729, 0x1, 0x0);
        gbc.writeMem(0x2b7a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa806);
        EXPECT(gbc.pc(), 0x2b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0353
        gbc.setState(0xe476, 0xcea9, 0x84a0, 0x3431, 0x414, 0x1032, 0x1, 0x1);
        gbc.writeMem(0xe476, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcea9);
        EXPECT(gbc.pc(), 0xe478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe476), 0xcb);
        EXPECT(gbc.readMem(0xe477), 0x89);
        // CB 89 0354
        gbc.setState(0x3c67, 0x34c6, 0x4cc0, 0x27a8, 0xa40a, 0x1d27, 0x1, 0x1);
        gbc.writeMem(0x3c67, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x34c6);
        EXPECT(gbc.pc(), 0x3c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0355
        gbc.setState(0xaf6a, 0xf583, 0xfb00, 0x18ff, 0xe27e, 0x2f7f, 0x1, 0x0);
        gbc.writeMem(0xaf6a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf583);
        EXPECT(gbc.pc(), 0xaf6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6a), 0xcb);
        EXPECT(gbc.readMem(0xaf6b), 0x89);
        // CB 89 0356
        gbc.setState(0xcba3, 0x1456, 0xadb0, 0x361b, 0x1709, 0x3f40, 0x0, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1456);
        EXPECT(gbc.pc(), 0xcba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba3), 0xcb);
        EXPECT(gbc.readMem(0xcba4), 0x89);
        // CB 89 0357
        gbc.setState(0x1ba5, 0xc345, 0xe780, 0x3e44, 0x1665, 0xa5eb, 0x0, 0x1);
        gbc.writeMem(0x1ba5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc345);
        EXPECT(gbc.pc(), 0x1ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0358
        gbc.setState(0x2ab3, 0x9706, 0x1780, 0x1458, 0x8d9d, 0x7d3d, 0x1, 0x1);
        gbc.writeMem(0x2ab3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9706);
        EXPECT(gbc.pc(), 0x2ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0359
        gbc.setState(0xdc22, 0x759c, 0x2a70, 0x65bd, 0x7e63, 0xc157, 0x0, 0x1);
        gbc.writeMem(0xdc22, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x759c);
        EXPECT(gbc.pc(), 0xdc24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc22), 0xcb);
        EXPECT(gbc.readMem(0xdc23), 0x89);
        // CB 89 035A
        gbc.setState(0xbf81, 0x3cef, 0xbd80, 0x902e, 0x5bb6, 0x257d, 0x0, 0x1);
        gbc.writeMem(0xbf81, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3cef);
        EXPECT(gbc.pc(), 0xbf83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf81), 0xcb);
        EXPECT(gbc.readMem(0xbf82), 0x89);
        // CB 89 035B
        gbc.setState(0x7cd9, 0xf884, 0xa5d0, 0xee52, 0x8d21, 0xa92a, 0x1, 0x1);
        gbc.writeMem(0x7cd9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf884);
        EXPECT(gbc.pc(), 0x7cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 035C
        gbc.setState(0xdfaa, 0xcee6, 0xba20, 0xab19, 0x35d8, 0xdd5f, 0x1, 0x1);
        gbc.writeMem(0xdfaa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcee6);
        EXPECT(gbc.pc(), 0xdfac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfaa), 0xcb);
        EXPECT(gbc.readMem(0xdfab), 0x89);
        // CB 89 035D
        gbc.setState(0xb432, 0xa4ab, 0x5750, 0xd983, 0x4ce8, 0x3fe9, 0x0, 0x0);
        gbc.writeMem(0xb432, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa4ab);
        EXPECT(gbc.pc(), 0xb434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb432), 0xcb);
        EXPECT(gbc.readMem(0xb433), 0x89);
        // CB 89 035E
        gbc.setState(0x520e, 0xfaf0, 0xed00, 0xe937, 0xdde2, 0xfebd, 0x0, 0x1);
        gbc.writeMem(0x520e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfaf0);
        EXPECT(gbc.pc(), 0x5210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 035F
        gbc.setState(0x72b9, 0xee49, 0xb720, 0x64ff, 0x68c2, 0x2dd1, 0x1, 0x1);
        gbc.writeMem(0x72b9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xee49);
        EXPECT(gbc.pc(), 0x72bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0360
        gbc.setState(0xb568, 0x6ea0, 0x98f0, 0x8031, 0x4c1a, 0xb668, 0x0, 0x0);
        gbc.writeMem(0xb568, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6ea0);
        EXPECT(gbc.pc(), 0xb56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb568), 0xcb);
        EXPECT(gbc.readMem(0xb569), 0x89);
        // CB 89 0361
        gbc.setState(0xb118, 0x8542, 0x8ed0, 0x3851, 0x5fc8, 0x6cab, 0x0, 0x0);
        gbc.writeMem(0xb118, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8542);
        EXPECT(gbc.pc(), 0xb11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb118), 0xcb);
        EXPECT(gbc.readMem(0xb119), 0x89);
        // CB 89 0363
        gbc.setState(0xcac8, 0x2ded, 0x34d0, 0x87f9, 0x75a5, 0xae89, 0x0, 0x1);
        gbc.writeMem(0xcac8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2ded);
        EXPECT(gbc.pc(), 0xcaca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac8), 0xcb);
        EXPECT(gbc.readMem(0xcac9), 0x89);
        // CB 89 0364
        gbc.setState(0x4b2f, 0x859b, 0xdbf0, 0xa5c7, 0x6a04, 0x33f5, 0x0, 0x0);
        gbc.writeMem(0x4b2f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x859b);
        EXPECT(gbc.pc(), 0x4b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0365
        gbc.setState(0x9f5f, 0x24aa, 0xfca0, 0xfdd4, 0x125, 0xf6b8, 0x1, 0x1);
        gbc.writeMem(0x9f5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x24aa);
        EXPECT(gbc.pc(), 0x9f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5f), 0xcb);
        EXPECT(gbc.readMem(0x9f60), 0x89);
        // CB 89 0366
        gbc.setState(0x84c6, 0x53cd, 0x2800, 0x8e72, 0x77fd, 0xa464, 0x1, 0x0);
        gbc.writeMem(0x84c6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x53cd);
        EXPECT(gbc.pc(), 0x84c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c6), 0xcb);
        EXPECT(gbc.readMem(0x84c7), 0x89);
        // CB 89 0367
        gbc.setState(0xbef0, 0x8988, 0x6a80, 0xc92d, 0x9b86, 0x368b, 0x0, 0x1);
        gbc.writeMem(0xbef0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8988);
        EXPECT(gbc.pc(), 0xbef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef0), 0xcb);
        EXPECT(gbc.readMem(0xbef1), 0x89);
        // CB 89 0368
        gbc.setState(0x7253, 0x209e, 0x24b0, 0xc366, 0x48da, 0x405a, 0x0, 0x1);
        gbc.writeMem(0x7253, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x209e);
        EXPECT(gbc.pc(), 0x7255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0369
        gbc.setState(0x21ad, 0xa6ab, 0xc610, 0x740a, 0xe17a, 0x6f3, 0x0, 0x1);
        gbc.writeMem(0x21ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa6ab);
        EXPECT(gbc.pc(), 0x21af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 036A
        gbc.setState(0xc21d, 0xa7ae, 0x3dd0, 0x58e7, 0xf70b, 0x3a76, 0x1, 0x1);
        gbc.writeMem(0xc21d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa7ae);
        EXPECT(gbc.pc(), 0xc21f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21d), 0xcb);
        EXPECT(gbc.readMem(0xc21e), 0x89);
        // CB 89 036B
        gbc.setState(0x4129, 0x3e96, 0xc070, 0x803c, 0xa8ce, 0x6bbb, 0x0, 0x1);
        gbc.writeMem(0x4129, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3e96);
        EXPECT(gbc.pc(), 0x412b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 036C
        gbc.setState(0x9676, 0xb092, 0x1680, 0x3bc0, 0xbf32, 0xa396, 0x1, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb092);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9676), 0xcb);
        EXPECT(gbc.readMem(0x9677), 0x89);
        // CB 89 036D
        gbc.setState(0xa775, 0x346b, 0x1a80, 0x12a6, 0xe89e, 0xe908, 0x1, 0x0);
        gbc.writeMem(0xa775, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x346b);
        EXPECT(gbc.pc(), 0xa777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa775), 0xcb);
        EXPECT(gbc.readMem(0xa776), 0x89);
        // CB 89 036E
        gbc.setState(0x9d4d, 0x830d, 0x2fb0, 0xec37, 0x6bbd, 0x3a2, 0x0, 0x1);
        gbc.writeMem(0x9d4d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x830d);
        EXPECT(gbc.pc(), 0x9d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d4d), 0xcb);
        EXPECT(gbc.readMem(0x9d4e), 0x89);
        // CB 89 036F
        gbc.setState(0x94f6, 0xf7f6, 0xaf90, 0xfe74, 0x451, 0xab6d, 0x0, 0x0);
        gbc.writeMem(0x94f6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf7f6);
        EXPECT(gbc.pc(), 0x94f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f6), 0xcb);
        EXPECT(gbc.readMem(0x94f7), 0x89);
        // CB 89 0370
        gbc.setState(0x29a5, 0xbb14, 0xff10, 0x7762, 0x6827, 0xa675, 0x0, 0x0);
        gbc.writeMem(0x29a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbb14);
        EXPECT(gbc.pc(), 0x29a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0371
        gbc.setState(0xdd1d, 0xcecf, 0x2e30, 0xea38, 0x2866, 0x9044, 0x0, 0x1);
        gbc.writeMem(0xdd1d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcecf);
        EXPECT(gbc.pc(), 0xdd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1d), 0xcb);
        EXPECT(gbc.readMem(0xdd1e), 0x89);
        // CB 89 0372
        gbc.setState(0x9a2a, 0x96fd, 0x4830, 0xba4f, 0xf3d7, 0xff97, 0x0, 0x0);
        gbc.writeMem(0x9a2a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x96fd);
        EXPECT(gbc.pc(), 0x9a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2a), 0xcb);
        EXPECT(gbc.readMem(0x9a2b), 0x89);
        // CB 89 0373
        gbc.setState(0x8a1e, 0x2674, 0x86d0, 0x4810, 0xd7c4, 0x6b6f, 0x0, 0x1);
        gbc.writeMem(0x8a1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2674);
        EXPECT(gbc.pc(), 0x8a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1e), 0xcb);
        EXPECT(gbc.readMem(0x8a1f), 0x89);
        // CB 89 0374
        gbc.setState(0xa689, 0x8bc8, 0xf800, 0x4d67, 0x5f95, 0xde5b, 0x0, 0x0);
        gbc.writeMem(0xa689, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8bc8);
        EXPECT(gbc.pc(), 0xa68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa689), 0xcb);
        EXPECT(gbc.readMem(0xa68a), 0x89);
        // CB 89 0375
        gbc.setState(0x2edf, 0x8042, 0xcd30, 0xf3a5, 0x5f33, 0x6c45, 0x0, 0x1);
        gbc.writeMem(0x2edf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8042);
        EXPECT(gbc.pc(), 0x2ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0376
        gbc.setState(0x168f, 0xb9bd, 0x6d00, 0x6b55, 0xd450, 0xa944, 0x0, 0x1);
        gbc.writeMem(0x168f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb9bd);
        EXPECT(gbc.pc(), 0x1691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0378
        gbc.setState(0x3d3b, 0x16ee, 0xc150, 0xeef, 0x26e4, 0xeb29, 0x0, 0x1);
        gbc.writeMem(0x3d3b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x16ee);
        EXPECT(gbc.pc(), 0x3d3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0379
        gbc.setState(0xa2fb, 0x1393, 0xc570, 0x1c6b, 0xbd6e, 0xd00d, 0x1, 0x1);
        gbc.writeMem(0xa2fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1393);
        EXPECT(gbc.pc(), 0xa2fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fb), 0xcb);
        EXPECT(gbc.readMem(0xa2fc), 0x89);
        // CB 89 037A
        gbc.setState(0x1828, 0xc12c, 0xd510, 0x3b2e, 0x4b81, 0xa729, 0x0, 0x0);
        gbc.writeMem(0x1828, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc12c);
        EXPECT(gbc.pc(), 0x182a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 037B
        gbc.setState(0x804b, 0x29e8, 0x79d0, 0x659e, 0x26b4, 0xce56, 0x1, 0x0);
        gbc.writeMem(0x804b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x29e8);
        EXPECT(gbc.pc(), 0x804d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804b), 0xcb);
        EXPECT(gbc.readMem(0x804c), 0x89);
        // CB 89 037C
        gbc.setState(0x1a17, 0x2bc1, 0xa4f0, 0xffd8, 0x3abc, 0x41e7, 0x1, 0x0);
        gbc.writeMem(0x1a17, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2bc1);
        EXPECT(gbc.pc(), 0x1a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 037E
        gbc.setState(0x9bbb, 0xeaf8, 0x6870, 0xc682, 0x91d, 0x330e, 0x0, 0x1);
        gbc.writeMem(0x9bbb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0x9bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbb), 0xcb);
        EXPECT(gbc.readMem(0x9bbc), 0x89);
        // CB 89 037F
        gbc.setState(0x9d8c, 0xe249, 0x3da0, 0x395e, 0x65cd, 0xa4c, 0x0, 0x1);
        gbc.writeMem(0x9d8c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe249);
        EXPECT(gbc.pc(), 0x9d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8c), 0xcb);
        EXPECT(gbc.readMem(0x9d8d), 0x89);
        // CB 89 0380
        gbc.setState(0xb9e7, 0xf74e, 0x1da0, 0x4ed7, 0xe440, 0x2ced, 0x0, 0x1);
        gbc.writeMem(0xb9e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf74e);
        EXPECT(gbc.pc(), 0xb9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e7), 0xcb);
        EXPECT(gbc.readMem(0xb9e8), 0x89);
        // CB 89 0381
        gbc.setState(0xaa43, 0xb69b, 0x2eb0, 0xdb68, 0xdb35, 0xddac, 0x1, 0x1);
        gbc.writeMem(0xaa43, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb69b);
        EXPECT(gbc.pc(), 0xaa45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa43), 0xcb);
        EXPECT(gbc.readMem(0xaa44), 0x89);
        // CB 89 0382
        gbc.setState(0xd07a, 0xb55c, 0x65a0, 0xeeea, 0x513, 0xaa53, 0x1, 0x1);
        gbc.writeMem(0xd07a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb55c);
        EXPECT(gbc.pc(), 0xd07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd07a), 0xcb);
        EXPECT(gbc.readMem(0xd07b), 0x89);
        // CB 89 0383
        gbc.setState(0x8780, 0xd7b3, 0xeee0, 0x9a0e, 0xe2aa, 0xacd6, 0x1, 0x1);
        gbc.writeMem(0x8780, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd7b3);
        EXPECT(gbc.pc(), 0x8782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8780), 0xcb);
        EXPECT(gbc.readMem(0x8781), 0x89);
        // CB 89 0384
        gbc.setState(0xb637, 0x769d, 0x9df0, 0x1ad6, 0xbacd, 0x5597, 0x1, 0x0);
        gbc.writeMem(0xb637, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x769d);
        EXPECT(gbc.pc(), 0xb639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb637), 0xcb);
        EXPECT(gbc.readMem(0xb638), 0x89);
        // CB 89 0385
        gbc.setState(0x880e, 0x44b9, 0x94d0, 0xa2ec, 0xa0f4, 0x3c95, 0x1, 0x0);
        gbc.writeMem(0x880e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x44b9);
        EXPECT(gbc.pc(), 0x8810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880e), 0xcb);
        EXPECT(gbc.readMem(0x880f), 0x89);
        // CB 89 0386
        gbc.setState(0xbf72, 0x6de4, 0x7340, 0x3b8b, 0x776e, 0x2161, 0x1, 0x1);
        gbc.writeMem(0xbf72, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6de4);
        EXPECT(gbc.pc(), 0xbf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf72), 0xcb);
        EXPECT(gbc.readMem(0xbf73), 0x89);
        // CB 89 0387
        gbc.setState(0x9b1a, 0x9099, 0xb680, 0x82c, 0x5409, 0xd7c1, 0x1, 0x0);
        gbc.writeMem(0x9b1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9099);
        EXPECT(gbc.pc(), 0x9b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b1a), 0xcb);
        EXPECT(gbc.readMem(0x9b1b), 0x89);
        // CB 89 0388
        gbc.setState(0xa148, 0xaa14, 0x8be0, 0x3367, 0x726a, 0x1344, 0x1, 0x0);
        gbc.writeMem(0xa148, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaa14);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa148), 0xcb);
        EXPECT(gbc.readMem(0xa149), 0x89);
        // CB 89 0389
        gbc.setState(0x635f, 0x9a7b, 0x2410, 0x1035, 0xcdc2, 0xa438, 0x0, 0x0);
        gbc.writeMem(0x635f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9a7b);
        EXPECT(gbc.pc(), 0x6361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 038A
        gbc.setState(0xa027, 0xdcc3, 0x8da0, 0x6cd7, 0xb810, 0xed3a, 0x1, 0x1);
        gbc.writeMem(0xa027, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdcc3);
        EXPECT(gbc.pc(), 0xa029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa027), 0xcb);
        EXPECT(gbc.readMem(0xa028), 0x89);
        // CB 89 038B
        gbc.setState(0x38a2, 0x4b40, 0xc1b0, 0x4d9f, 0xe590, 0xf4f3, 0x0, 0x0);
        gbc.writeMem(0x38a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4b40);
        EXPECT(gbc.pc(), 0x38a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 038C
        gbc.setState(0x8f5, 0x42e4, 0x2b20, 0x4c2f, 0xe348, 0xf258, 0x1, 0x0);
        gbc.writeMem(0x8f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x42e4);
        EXPECT(gbc.pc(), 0x8f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 038D
        gbc.setState(0xb7f9, 0x91f1, 0x3100, 0xeeb1, 0x5356, 0x740f, 0x0, 0x0);
        gbc.writeMem(0xb7f9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x91f1);
        EXPECT(gbc.pc(), 0xb7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f9), 0xcb);
        EXPECT(gbc.readMem(0xb7fa), 0x89);
        // CB 89 038E
        gbc.setState(0xcd3b, 0xee42, 0xb140, 0xbba4, 0xbf71, 0xc0aa, 0x1, 0x0);
        gbc.writeMem(0xcd3b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xee42);
        EXPECT(gbc.pc(), 0xcd3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3b), 0xcb);
        EXPECT(gbc.readMem(0xcd3c), 0x89);
        // CB 89 038F
        gbc.setState(0x3089, 0x44ed, 0xb0c0, 0x248, 0x9de8, 0x91b2, 0x1, 0x1);
        gbc.writeMem(0x3089, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x44ed);
        EXPECT(gbc.pc(), 0x308b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0391
        gbc.setState(0x9659, 0x33f8, 0x8550, 0xe61a, 0xee1d, 0xdd1a, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x33f8);
        EXPECT(gbc.pc(), 0x965b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9659), 0xcb);
        EXPECT(gbc.readMem(0x965a), 0x89);
        // CB 89 0392
        gbc.setState(0x2b2d, 0xead0, 0xb500, 0x4edb, 0xf4b4, 0x6ea6, 0x1, 0x0);
        gbc.writeMem(0x2b2d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xead0);
        EXPECT(gbc.pc(), 0x2b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0393
        gbc.setState(0xb028, 0x55ce, 0xbea0, 0x7910, 0x8637, 0xd50e, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x55ce);
        EXPECT(gbc.pc(), 0xb02a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb028), 0xcb);
        EXPECT(gbc.readMem(0xb029), 0x89);
        // CB 89 0395
        gbc.setState(0x9c6, 0xc723, 0x9dd0, 0x4a73, 0xf70, 0x83b0, 0x1, 0x1);
        gbc.writeMem(0x9c6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc723);
        EXPECT(gbc.pc(), 0x9c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 0396
        gbc.setState(0xb014, 0xc426, 0xd040, 0x65e1, 0xe027, 0xfd05, 0x1, 0x0);
        gbc.writeMem(0xb014, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc426);
        EXPECT(gbc.pc(), 0xb016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb014), 0xcb);
        EXPECT(gbc.readMem(0xb015), 0x89);
        // CB 89 0397
        gbc.setState(0xedd6, 0x29e, 0xc830, 0xd40b, 0xf1ed, 0x3d73, 0x1, 0x1);
        gbc.writeMem(0xedd6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x29e);
        EXPECT(gbc.pc(), 0xedd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd6), 0xcb);
        EXPECT(gbc.readMem(0xedd7), 0x89);
        // CB 89 0398
        gbc.setState(0x25c1, 0xb429, 0x3680, 0x51a8, 0x42dd, 0x4077, 0x1, 0x1);
        gbc.writeMem(0x25c1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb429);
        EXPECT(gbc.pc(), 0x25c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 0399
        gbc.setState(0x5cd7, 0xc1f6, 0x9d80, 0xfd24, 0xa83, 0xc891, 0x0, 0x0);
        gbc.writeMem(0x5cd7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc1f6);
        EXPECT(gbc.pc(), 0x5cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 039A
        gbc.setState(0xe4a3, 0xea57, 0xa330, 0x8d94, 0x7094, 0x5971, 0x0, 0x1);
        gbc.writeMem(0xe4a3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xea57);
        EXPECT(gbc.pc(), 0xe4a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a3), 0xcb);
        EXPECT(gbc.readMem(0xe4a4), 0x89);
        // CB 89 039B
        gbc.setState(0xce33, 0x38d8, 0xc4d0, 0x163a, 0x28f9, 0xa36, 0x1, 0x0);
        gbc.writeMem(0xce33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x38d8);
        EXPECT(gbc.pc(), 0xce35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce33), 0xcb);
        EXPECT(gbc.readMem(0xce34), 0x89);
        // CB 89 039C
        gbc.setState(0x2940, 0x1d44, 0x8b20, 0x9537, 0xd044, 0x1ffd, 0x1, 0x1);
        gbc.writeMem(0x2940, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1d44);
        EXPECT(gbc.pc(), 0x2942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 039D
        gbc.setState(0xc694, 0x6c07, 0x91e0, 0x2edd, 0x5c34, 0x6b80, 0x1, 0x0);
        gbc.writeMem(0xc694, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6c07);
        EXPECT(gbc.pc(), 0xc696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc694), 0xcb);
        EXPECT(gbc.readMem(0xc695), 0x89);
        // CB 89 039E
        gbc.setState(0xbf66, 0x9193, 0x1e50, 0x607d, 0x8fb0, 0xe612, 0x0, 0x0);
        gbc.writeMem(0xbf66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9193);
        EXPECT(gbc.pc(), 0xbf68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf66), 0xcb);
        EXPECT(gbc.readMem(0xbf67), 0x89);
        // CB 89 03A0
        gbc.setState(0x2f74, 0x1705, 0x5040, 0x418c, 0xb7d1, 0x5ca, 0x0, 0x0);
        gbc.writeMem(0x2f74, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1705);
        EXPECT(gbc.pc(), 0x2f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03A1
        gbc.setState(0x9f6f, 0xfd81, 0x4900, 0xbe11, 0xba6d, 0x545d, 0x1, 0x1);
        gbc.writeMem(0x9f6f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfd81);
        EXPECT(gbc.pc(), 0x9f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f6f), 0xcb);
        EXPECT(gbc.readMem(0x9f70), 0x89);
        // CB 89 03A2
        gbc.setState(0xb555, 0xcbb9, 0x9a80, 0xd731, 0xf37c, 0xc422, 0x0, 0x1);
        gbc.writeMem(0xb555, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcbb9);
        EXPECT(gbc.pc(), 0xb557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb555), 0xcb);
        EXPECT(gbc.readMem(0xb556), 0x89);
        // CB 89 03A3
        gbc.setState(0xd8e1, 0xadaf, 0x9810, 0xbbe6, 0x2369, 0xa51c, 0x1, 0x0);
        gbc.writeMem(0xd8e1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xadaf);
        EXPECT(gbc.pc(), 0xd8e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e1), 0xcb);
        EXPECT(gbc.readMem(0xd8e2), 0x89);
        // CB 89 03A4
        gbc.setState(0x6cdd, 0x1770, 0xc470, 0xe51b, 0x1a01, 0x95c3, 0x1, 0x0);
        gbc.writeMem(0x6cdd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1770);
        EXPECT(gbc.pc(), 0x6cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03A6
        gbc.setState(0x44fe, 0xc954, 0xea50, 0xcdba, 0x26ab, 0x2abb, 0x0, 0x0);
        gbc.writeMem(0x44fe, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc954);
        EXPECT(gbc.pc(), 0x4500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03A8
        gbc.setState(0x64f8, 0x37e3, 0xda0, 0xd2b4, 0x5b4a, 0xd073, 0x0, 0x0);
        gbc.writeMem(0x64f8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x37e3);
        EXPECT(gbc.pc(), 0x64fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03A9
        gbc.setState(0x7d3c, 0x5bdd, 0xda40, 0xca12, 0x6f31, 0x3588, 0x0, 0x1);
        gbc.writeMem(0x7d3c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5bdd);
        EXPECT(gbc.pc(), 0x7d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03AA
        gbc.setState(0x26eb, 0x570e, 0xfa20, 0x9cea, 0x484b, 0x4e19, 0x0, 0x0);
        gbc.writeMem(0x26eb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x570e);
        EXPECT(gbc.pc(), 0x26ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03AB
        gbc.setState(0xb3fd, 0x3015, 0x7ee0, 0x2fe, 0x4209, 0x92a7, 0x1, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3015);
        EXPECT(gbc.pc(), 0xb3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fd), 0xcb);
        EXPECT(gbc.readMem(0xb3fe), 0x89);
        // CB 89 03AC
        gbc.setState(0x84, 0x9e3b, 0x6b10, 0x37c5, 0x3d6e, 0xb6a2, 0x0, 0x0);
        gbc.writeMem(0x84, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9e3b);
        EXPECT(gbc.pc(), 0x86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03AD
        gbc.setState(0x66fc, 0xf3d9, 0xbb70, 0x9fc, 0x19e9, 0x504f, 0x0, 0x1);
        gbc.writeMem(0x66fc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf3d9);
        EXPECT(gbc.pc(), 0x66fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03AE
        gbc.setState(0x6cc3, 0x5cff, 0x3b70, 0xc319, 0x20d0, 0x4f39, 0x0, 0x1);
        gbc.writeMem(0x6cc3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5cff);
        EXPECT(gbc.pc(), 0x6cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03AF
        gbc.setState(0x548d, 0xb818, 0xfef0, 0xae0e, 0x1da2, 0x41cf, 0x0, 0x0);
        gbc.writeMem(0x548d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb818);
        EXPECT(gbc.pc(), 0x548f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03B1
        gbc.setState(0x4746, 0xd41e, 0x7030, 0x17b3, 0x9e96, 0x1e23, 0x0, 0x0);
        gbc.writeMem(0x4746, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd41e);
        EXPECT(gbc.pc(), 0x4748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03B2
        gbc.setState(0xe926, 0xcdf5, 0xea70, 0x2286, 0x7b99, 0x5957, 0x1, 0x0);
        gbc.writeMem(0xe926, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcdf5);
        EXPECT(gbc.pc(), 0xe928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe926), 0xcb);
        EXPECT(gbc.readMem(0xe927), 0x89);
        // CB 89 03B3
        gbc.setState(0xdf30, 0x9b47, 0xf3d0, 0xd960, 0xe113, 0x66f9, 0x0, 0x0);
        gbc.writeMem(0xdf30, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9b47);
        EXPECT(gbc.pc(), 0xdf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf30), 0xcb);
        EXPECT(gbc.readMem(0xdf31), 0x89);
        // CB 89 03B4
        gbc.setState(0xde65, 0x99f9, 0x1030, 0x7fba, 0xb58a, 0xf18e, 0x0, 0x1);
        gbc.writeMem(0xde65, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x99f9);
        EXPECT(gbc.pc(), 0xde67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde65), 0xcb);
        EXPECT(gbc.readMem(0xde66), 0x89);
        // CB 89 03B5
        gbc.setState(0x6641, 0xd485, 0xb1e0, 0x3a94, 0xdd09, 0x89a9, 0x0, 0x0);
        gbc.writeMem(0x6641, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd485);
        EXPECT(gbc.pc(), 0x6643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03B6
        gbc.setState(0xd9ad, 0xbe98, 0x33f0, 0xeb5a, 0x6bb7, 0xc82c, 0x0, 0x1);
        gbc.writeMem(0xd9ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbe98);
        EXPECT(gbc.pc(), 0xd9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ad), 0xcb);
        EXPECT(gbc.readMem(0xd9ae), 0x89);
        // CB 89 03B7
        gbc.setState(0xc30f, 0xd324, 0x9320, 0xa67c, 0x195b, 0x72cf, 0x0, 0x0);
        gbc.writeMem(0xc30f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd324);
        EXPECT(gbc.pc(), 0xc311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30f), 0xcb);
        EXPECT(gbc.readMem(0xc310), 0x89);
        // CB 89 03B8
        gbc.setState(0x42ee, 0xd247, 0xb1e0, 0x8fa9, 0x552b, 0x249a, 0x1, 0x1);
        gbc.writeMem(0x42ee, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd247);
        EXPECT(gbc.pc(), 0x42f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03B9
        gbc.setState(0x7371, 0xeaa, 0xfc60, 0x90aa, 0xb23f, 0x8ae5, 0x0, 0x0);
        gbc.writeMem(0x7371, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xeaa);
        EXPECT(gbc.pc(), 0x7373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03BA
        gbc.setState(0xcaa3, 0xc9d0, 0x7df0, 0xf814, 0xd232, 0x5899, 0x0, 0x0);
        gbc.writeMem(0xcaa3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc9d0);
        EXPECT(gbc.pc(), 0xcaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa3), 0xcb);
        EXPECT(gbc.readMem(0xcaa4), 0x89);
        // CB 89 03BB
        gbc.setState(0x8567, 0xc13a, 0x3760, 0xb11c, 0x35f0, 0x5385, 0x1, 0x1);
        gbc.writeMem(0x8567, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc13a);
        EXPECT(gbc.pc(), 0x8569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8567), 0xcb);
        EXPECT(gbc.readMem(0x8568), 0x89);
        // CB 89 03BC
        gbc.setState(0x7344, 0xb8c8, 0x650, 0x4f7d, 0xa935, 0x503c, 0x1, 0x0);
        gbc.writeMem(0x7344, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb8c8);
        EXPECT(gbc.pc(), 0x7346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03BD
        gbc.setState(0x2bc2, 0xa511, 0xaa30, 0x991f, 0xde19, 0x33dd, 0x0, 0x1);
        gbc.writeMem(0x2bc2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa511);
        EXPECT(gbc.pc(), 0x2bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03BE
        gbc.setState(0x35ce, 0xc19, 0xdb80, 0x27e5, 0x635e, 0x6cee, 0x0, 0x1);
        gbc.writeMem(0x35ce, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc19);
        EXPECT(gbc.pc(), 0x35d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03BF
        gbc.setState(0x8efa, 0xfd, 0xa570, 0xcce7, 0xeebe, 0x58a2, 0x0, 0x1);
        gbc.writeMem(0x8efa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfd);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0x89);
        // CB 89 03C0
        gbc.setState(0x4a1c, 0xb4af, 0xe140, 0x2104, 0x635a, 0xcb63, 0x1, 0x1);
        gbc.writeMem(0x4a1c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb4af);
        EXPECT(gbc.pc(), 0x4a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03C1
        gbc.setState(0x17d9, 0x859, 0x99b0, 0x62a8, 0xf7a4, 0xd8cf, 0x1, 0x1);
        gbc.writeMem(0x17d9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x859);
        EXPECT(gbc.pc(), 0x17db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03C2
        gbc.setState(0xd5c, 0x1387, 0x8c50, 0xa302, 0x4491, 0xc9e7, 0x1, 0x1);
        gbc.writeMem(0xd5c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1387);
        EXPECT(gbc.pc(), 0xd5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03C3
        gbc.setState(0x56eb, 0x24e4, 0xe700, 0x6923, 0x4545, 0x73c3, 0x0, 0x1);
        gbc.writeMem(0x56eb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x24e4);
        EXPECT(gbc.pc(), 0x56ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03C4
        gbc.setState(0xe82f, 0xa15f, 0x3bc0, 0xaa35, 0x5607, 0xd5ae, 0x1, 0x1);
        gbc.writeMem(0xe82f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa15f);
        EXPECT(gbc.pc(), 0xe831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82f), 0xcb);
        EXPECT(gbc.readMem(0xe830), 0x89);
        // CB 89 03C5
        gbc.setState(0x869d, 0x85cf, 0xc010, 0x2a62, 0x3ea4, 0xc289, 0x0, 0x1);
        gbc.writeMem(0x869d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x85cf);
        EXPECT(gbc.pc(), 0x869f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x869d), 0xcb);
        EXPECT(gbc.readMem(0x869e), 0x89);
        // CB 89 03C6
        gbc.setState(0xd670, 0xa02b, 0xece0, 0xa45, 0x159b, 0x76d1, 0x0, 0x0);
        gbc.writeMem(0xd670, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa02b);
        EXPECT(gbc.pc(), 0xd672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd670), 0xcb);
        EXPECT(gbc.readMem(0xd671), 0x89);
        // CB 89 03C7
        gbc.setState(0x4c2, 0x52f, 0x87a0, 0xe43, 0x505f, 0x5328, 0x1, 0x0);
        gbc.writeMem(0x4c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x52f);
        EXPECT(gbc.pc(), 0x4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03C8
        gbc.setState(0x969f, 0xcbb5, 0x310, 0x41cb, 0x8dc1, 0xd695, 0x1, 0x1);
        gbc.writeMem(0x969f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xcbb5);
        EXPECT(gbc.pc(), 0x96a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969f), 0xcb);
        EXPECT(gbc.readMem(0x96a0), 0x89);
        // CB 89 03C9
        gbc.setState(0x3bd2, 0x1e2, 0xc260, 0xeaf8, 0x3702, 0x5995, 0x0, 0x1);
        gbc.writeMem(0x3bd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1e2);
        EXPECT(gbc.pc(), 0x3bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03CA
        gbc.setState(0xebd3, 0xf59b, 0x5650, 0x9802, 0x2dae, 0xe8fe, 0x0, 0x1);
        gbc.writeMem(0xebd3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf59b);
        EXPECT(gbc.pc(), 0xebd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd3), 0xcb);
        EXPECT(gbc.readMem(0xebd4), 0x89);
        // CB 89 03CB
        gbc.setState(0x6656, 0xb77f, 0xdeb0, 0xadb7, 0x336f, 0xe47a, 0x0, 0x1);
        gbc.writeMem(0x6656, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb77f);
        EXPECT(gbc.pc(), 0x6658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03CC
        gbc.setState(0x55cd, 0x6646, 0xa130, 0xed4c, 0xb84b, 0x787e, 0x0, 0x1);
        gbc.writeMem(0x55cd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6646);
        EXPECT(gbc.pc(), 0x55cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03CD
        gbc.setState(0x5ee8, 0x11e2, 0x9720, 0xac7c, 0x7d66, 0x7716, 0x0, 0x1);
        gbc.writeMem(0x5ee8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x11e2);
        EXPECT(gbc.pc(), 0x5eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03CE
        gbc.setState(0x7142, 0xf726, 0x53b0, 0x10ed, 0x4c4d, 0x3d18, 0x0, 0x0);
        gbc.writeMem(0x7142, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf726);
        EXPECT(gbc.pc(), 0x7144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03CF
        gbc.setState(0x9d11, 0xd70d, 0x6c90, 0xccc8, 0x6f5, 0xcc4b, 0x1, 0x0);
        gbc.writeMem(0x9d11, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd70d);
        EXPECT(gbc.pc(), 0x9d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d11), 0xcb);
        EXPECT(gbc.readMem(0x9d12), 0x89);
        // CB 89 03D0
        gbc.setState(0x9b30, 0x6913, 0x3640, 0xb4d9, 0x5302, 0x55f3, 0x1, 0x1);
        gbc.writeMem(0x9b30, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6913);
        EXPECT(gbc.pc(), 0x9b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b30), 0xcb);
        EXPECT(gbc.readMem(0x9b31), 0x89);
        // CB 89 03D2
        gbc.setState(0x59a9, 0x8ec1, 0x4db0, 0xc3d4, 0x98e8, 0x30e2, 0x1, 0x1);
        gbc.writeMem(0x59a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8ec1);
        EXPECT(gbc.pc(), 0x59ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03D3
        gbc.setState(0x8a1a, 0x3842, 0x2a30, 0x1126, 0x386a, 0xb215, 0x1, 0x0);
        gbc.writeMem(0x8a1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3842);
        EXPECT(gbc.pc(), 0x8a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1a), 0xcb);
        EXPECT(gbc.readMem(0x8a1b), 0x89);
        // CB 89 03D4
        gbc.setState(0x6fe3, 0x635b, 0xdf70, 0xd9af, 0xa40b, 0x859b, 0x0, 0x0);
        gbc.writeMem(0x6fe3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x635b);
        EXPECT(gbc.pc(), 0x6fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03D5
        gbc.setState(0xb679, 0xe355, 0x2dc0, 0x1bc9, 0x406a, 0x6a3c, 0x0, 0x0);
        gbc.writeMem(0xb679, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe355);
        EXPECT(gbc.pc(), 0xb67b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb679), 0xcb);
        EXPECT(gbc.readMem(0xb67a), 0x89);
        // CB 89 03D6
        gbc.setState(0x9ef6, 0xa981, 0x9c50, 0x2d2e, 0x6c43, 0x43e1, 0x1, 0x1);
        gbc.writeMem(0x9ef6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa981);
        EXPECT(gbc.pc(), 0x9ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef6), 0xcb);
        EXPECT(gbc.readMem(0x9ef7), 0x89);
        // CB 89 03D7
        gbc.setState(0x6c1a, 0x47ee, 0x3bd0, 0x40ae, 0xf7d3, 0x83e6, 0x1, 0x0);
        gbc.writeMem(0x6c1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x47ee);
        EXPECT(gbc.pc(), 0x6c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03D8
        gbc.setState(0x5d81, 0x9a28, 0x100, 0xae02, 0xdafa, 0x6827, 0x1, 0x1);
        gbc.writeMem(0x5d81, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9a28);
        EXPECT(gbc.pc(), 0x5d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 89 03D9
        gbc.setState(0xa930, 0x3b6d, 0x39c0, 0xdb47, 0xc1eb, 0x9cc0, 0x1, 0x0);
        gbc.writeMem(0xa930, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3b6d);
        EXPECT(gbc.pc(), 0xa932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa930), 0xcb);
        EXPECT(gbc.readMem(0xa931), 0x89);
        // CB 89 03DA
        gbc.setState(0x3a7f, 0x1788, 0x64f0, 0x4ab1, 0xd836, 0xa159, 0x1, 0x0);
        gbc.writeMem(0x3a7f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1788);
        EXPECT(gbc.pc(), 0x3a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03DB
        gbc.setState(0x9c3e, 0x439d, 0x6850, 0x117f, 0x1ca1, 0x8d1c, 0x1, 0x0);
        gbc.writeMem(0x9c3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x439d);
        EXPECT(gbc.pc(), 0x9c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3e), 0xcb);
        EXPECT(gbc.readMem(0x9c3f), 0x89);
        // CB 89 03DD
        gbc.setState(0x7296, 0x59cb, 0x6610, 0x1bba, 0xb1e9, 0x34a6, 0x1, 0x1);
        gbc.writeMem(0x7296, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x59cb);
        EXPECT(gbc.pc(), 0x7298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03DE
        gbc.setState(0xac, 0xb9c8, 0xfb70, 0x5f9e, 0x24a3, 0x3239, 0x1, 0x1);
        gbc.writeMem(0xac, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb9c8);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03E1
        gbc.setState(0xadbd, 0xfc26, 0x99f0, 0xdd9e, 0xe257, 0x6415, 0x0, 0x0);
        gbc.writeMem(0xadbd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0xadbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbd), 0xcb);
        EXPECT(gbc.readMem(0xadbe), 0x89);
        // CB 89 03E2
        gbc.setState(0x9679, 0xf1d1, 0x9820, 0x8b30, 0x115d, 0x7741, 0x1, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf1d1);
        EXPECT(gbc.pc(), 0x967b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9679), 0xcb);
        EXPECT(gbc.readMem(0x967a), 0x89);
        // CB 89 03E3
        gbc.setState(0xa72d, 0xc8e8, 0xc2a0, 0x6a46, 0xc4c9, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0xa72d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc8e8);
        EXPECT(gbc.pc(), 0xa72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72d), 0xcb);
        EXPECT(gbc.readMem(0xa72e), 0x89);
        // CB 89 03E4
        gbc.setState(0xe0c4, 0x9b92, 0x3f00, 0xd484, 0xaed9, 0x6787, 0x1, 0x1);
        gbc.writeMem(0xe0c4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9b92);
        EXPECT(gbc.pc(), 0xe0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c4), 0xcb);
        EXPECT(gbc.readMem(0xe0c5), 0x89);
        // CB 89 03E5
        gbc.setState(0x649e, 0xcfcb, 0x3f70, 0xa2f3, 0x8ca4, 0x3bbb, 0x1, 0x0);
        gbc.writeMem(0x649e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcfcb);
        EXPECT(gbc.pc(), 0x64a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03E6
        gbc.setState(0x4d09, 0x6138, 0x4d0, 0xd573, 0xfe11, 0xa212, 0x1, 0x0);
        gbc.writeMem(0x4d09, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6138);
        EXPECT(gbc.pc(), 0x4d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 89 03E7
        gbc.setState(0x2e7, 0x1652, 0x8f50, 0x2a53, 0x7a07, 0x45a7, 0x0, 0x1);
        gbc.writeMem(0x2e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1652);
        EXPECT(gbc.pc(), 0x2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
