    TEST(gbcemu, opcode_34) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 34 0000
        gbc.setState(0x4c94, 0xdf02, 0xf2a0, 0xbfd4, 0x64b2, 0x8d10, 0x1, 0x0);
        gbc.writeMem(0x4c94, { 0x34 });
        gbc.writeMem(0x8d10, { 0x8b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdf02, gbc.sp());
        EXPECT(0x4c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8d10));
        // 34 0001
        gbc.setState(0x2a7, 0x37e9, 0x2020, 0x707a, 0x2d31, 0xcf97, 0x1, 0x1);
        gbc.writeMem(0x2a7, { 0x34 });
        gbc.writeMem(0xcf97, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x37e9, gbc.sp());
        EXPECT(0x2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcf97));
        // 34 0007
        gbc.setState(0xa5a3, 0x4e1c, 0x2da0, 0x96e4, 0x49c7, 0x97c5, 0x0, 0x0);
        gbc.writeMem(0x97c5, { 0xbf });
        gbc.writeMem(0xa5a3, { 0x34 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e1c, gbc.sp());
        EXPECT(0xa5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x97c5));
        EXPECT(0x34, gbc.readMem(0xa5a3));
        // 34 000D
        gbc.setState(0xa269, 0x154f, 0x2580, 0x19bc, 0x31b0, 0xfd44, 0x1, 0x0);
        gbc.writeMem(0xa269, { 0x34 });
        gbc.writeMem(0xfd44, { 0xc4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x154f, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa269));
        EXPECT(0xc5, gbc.readMem(0xfd44));
        // 34 0013
        gbc.setState(0xa7bc, 0xa199, 0x2e40, 0xe916, 0x53e5, 0x9df0, 0x0, 0x0);
        gbc.writeMem(0x9df0, { 0x93 });
        gbc.writeMem(0xa7bc, { 0x34 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0xa7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9df0));
        EXPECT(0x34, gbc.readMem(0xa7bc));
        // 34 0014
        gbc.setState(0x43ff, 0x76dd, 0xc600, 0x271, 0x6843, 0x9cf7, 0x1, 0x1);
        gbc.writeMem(0x43ff, { 0x34 });
        gbc.writeMem(0x9cf7, { 0x3f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x76dd, gbc.sp());
        EXPECT(0x4400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9cf7));
        // 34 0016
        gbc.setState(0x4774, 0x2a3b, 0x2cf0, 0xc276, 0xcf0b, 0xfb30, 0x1, 0x1);
        gbc.writeMem(0x4774, { 0x34 });
        gbc.writeMem(0xfb30, { 0x2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2a3b, gbc.sp());
        EXPECT(0x4775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xfb30));
        // 34 001C
        gbc.setState(0x2ccc, 0x26a, 0x9b10, 0xae2a, 0xdd25, 0xe318, 0x1, 0x1);
        gbc.writeMem(0x2ccc, { 0x34 });
        gbc.writeMem(0xe318, { 0x22 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x26a, gbc.sp());
        EXPECT(0x2ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xe318));
        // 34 001E
        gbc.setState(0xa78, 0xa0dd, 0x4e10, 0x2ebd, 0xa6c2, 0x97b7, 0x0, 0x0);
        gbc.writeMem(0xa78, { 0x34 });
        gbc.writeMem(0x97b7, { 0xf1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa0dd, gbc.sp());
        EXPECT(0xa79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x97b7));
        // 34 001F
        gbc.setState(0x2b5e, 0x79eb, 0xc840, 0x4f93, 0x9209, 0xccac, 0x0, 0x0);
        gbc.writeMem(0x2b5e, { 0x34 });
        gbc.writeMem(0xccac, { 0x6b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x79eb, gbc.sp());
        EXPECT(0x2b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xccac));
        // 34 0022
        gbc.setState(0x185f, 0x8825, 0x2690, 0x4e7f, 0x9dff, 0xc26b, 0x1, 0x1);
        gbc.writeMem(0x185f, { 0x34 });
        gbc.writeMem(0xc26b, { 0x1c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8825, gbc.sp());
        EXPECT(0x1860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc26b));
        // 34 0023
        gbc.setState(0x3344, 0x199e, 0xec70, 0xebee, 0x7f48, 0xc4ab, 0x1, 0x0);
        gbc.writeMem(0x3344, { 0x34 });
        gbc.writeMem(0xc4ab, { 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x199e, gbc.sp());
        EXPECT(0x3345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc4ab));
        // 34 0026
        gbc.setState(0xe0e8, 0xd090, 0x48f0, 0xa63b, 0x6513, 0xd5b6, 0x0, 0x1);
        gbc.writeMem(0xd5b6, { 0x8f });
        gbc.writeMem(0xe0e8, { 0x34 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd090, gbc.sp());
        EXPECT(0xe0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xd5b6));
        EXPECT(0x34, gbc.readMem(0xe0e8));
        // 34 0030
        gbc.setState(0x3c43, 0x70be, 0xa870, 0xeaec, 0xc1cf, 0xc9e0, 0x0, 0x0);
        gbc.writeMem(0x3c43, { 0x34 });
        gbc.writeMem(0xc9e0, { 0x90 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x70be, gbc.sp());
        EXPECT(0x3c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc9e0));
        // 34 0032
        gbc.setState(0xeb4d, 0xa33e, 0x1d50, 0xcf1c, 0x4cd1, 0xe018, 0x1, 0x0);
        gbc.writeMem(0xe018, { 0x35 });
        gbc.writeMem(0xeb4d, { 0x34 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa33e, gbc.sp());
        EXPECT(0xeb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe018));
        EXPECT(0x34, gbc.readMem(0xeb4d));
        // 34 0034
        gbc.setState(0x7272, 0x4ee8, 0x7b10, 0xdcaf, 0xe1dd, 0xeb86, 0x0, 0x0);
        gbc.writeMem(0x7272, { 0x34 });
        gbc.writeMem(0xeb86, { 0x71 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4ee8, gbc.sp());
        EXPECT(0x7273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xeb86));
        // 34 0036
        gbc.setState(0x193f, 0xec6a, 0xc4b0, 0x55bf, 0xf175, 0xc163, 0x0, 0x1);
        gbc.writeMem(0x193f, { 0x34 });
        gbc.writeMem(0xc163, { 0xaf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xec6a, gbc.sp());
        EXPECT(0x1940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc163));
        // 34 003A
        gbc.setState(0x9994, 0xc35, 0x9ef0, 0xebd9, 0x1416, 0xa633, 0x0, 0x0);
        gbc.writeMem(0x9994, { 0x34 });
        gbc.writeMem(0xa633, { 0xb1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc35, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9994));
        EXPECT(0xb2, gbc.readMem(0xa633));
        // 34 003D
        gbc.setState(0xe6d4, 0x69f9, 0x2510, 0x18ab, 0xd728, 0xce78, 0x1, 0x0);
        gbc.writeMem(0xce78, { 0x31 });
        gbc.writeMem(0xe6d4, { 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x69f9, gbc.sp());
        EXPECT(0xe6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xce78));
        EXPECT(0x34, gbc.readMem(0xe6d4));
        // 34 003E
        gbc.setState(0x8cc0, 0x8f7a, 0x2910, 0xed0f, 0x7b8e, 0xec4d, 0x1, 0x1);
        gbc.writeMem(0x8cc0, { 0x34 });
        gbc.writeMem(0xec4d, { 0x54 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8f7a, gbc.sp());
        EXPECT(0x8cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8cc0));
        EXPECT(0x55, gbc.readMem(0xec4d));
        // 34 003F
        gbc.setState(0xcd90, 0xdbf4, 0xe790, 0x81a7, 0x2b6a, 0xe0fb, 0x0, 0x1);
        gbc.writeMem(0xcd90, { 0x34 });
        gbc.writeMem(0xe0fb, { 0xb8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdbf4, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcd90));
        EXPECT(0xb9, gbc.readMem(0xe0fb));
        // 34 0040
        gbc.setState(0xa356, 0x56b1, 0x5de0, 0xd22b, 0x5908, 0xa020, 0x1, 0x1);
        gbc.writeMem(0xa020, { 0xec });
        gbc.writeMem(0xa356, { 0x34 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x56b1, gbc.sp());
        EXPECT(0xa357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa020));
        EXPECT(0x34, gbc.readMem(0xa356));
        // 34 0044
        gbc.setState(0x8bf, 0xe7b9, 0x1d20, 0xafb4, 0x7deb, 0xd807, 0x0, 0x1);
        gbc.writeMem(0x8bf, { 0x34 });
        gbc.writeMem(0xd807, { 0x4b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0x8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd807));
        // 34 0045
        gbc.setState(0x45ba, 0x9acf, 0x6b10, 0x2c84, 0xdd69, 0xbfc9, 0x1, 0x0);
        gbc.writeMem(0x45ba, { 0x34 });
        gbc.writeMem(0xbfc9, { 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9acf, gbc.sp());
        EXPECT(0x45bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbfc9));
        // 34 0047
        gbc.setState(0x1408, 0x2965, 0xc670, 0xf1d9, 0xce69, 0xe2c2, 0x0, 0x0);
        gbc.writeMem(0x1408, { 0x34 });
        gbc.writeMem(0xe2c2, { 0xe3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2965, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe2c2));
        // 34 0048
        gbc.setState(0x577e, 0x4d3b, 0x8330, 0x103, 0x1639, 0x8b60, 0x0, 0x0);
        gbc.writeMem(0x577e, { 0x34 });
        gbc.writeMem(0x8b60, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4d3b, gbc.sp());
        EXPECT(0x577f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8b60));
        // 34 0049
        gbc.setState(0xa149, 0x4970, 0x2870, 0xa670, 0x8cda, 0xe931, 0x1, 0x0);
        gbc.writeMem(0xa149, { 0x34 });
        gbc.writeMem(0xe931, { 0xc5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0xa14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa149));
        EXPECT(0xc6, gbc.readMem(0xe931));
        // 34 004E
        gbc.setState(0xb35c, 0x9561, 0xcd80, 0xe34, 0x6d0b, 0xc1f2, 0x0, 0x0);
        gbc.writeMem(0xb35c, { 0x34 });
        gbc.writeMem(0xc1f2, { 0xa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9561, gbc.sp());
        EXPECT(0xb35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb35c));
        EXPECT(0xb, gbc.readMem(0xc1f2));
        // 34 0052
        gbc.setState(0x3e53, 0xa372, 0x5f40, 0x5afe, 0xbcb9, 0x9820, 0x0, 0x0);
        gbc.writeMem(0x3e53, { 0x34 });
        gbc.writeMem(0x9820, { 0x5d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0x3e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9820));
        // 34 0055
        gbc.setState(0x4105, 0xc7c7, 0xbf70, 0xd0b5, 0x1224, 0xf936, 0x0, 0x0);
        gbc.writeMem(0x4105, { 0x34 });
        gbc.writeMem(0xf936, { 0xde });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc7c7, gbc.sp());
        EXPECT(0x4106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xf936));
        // 34 0056
        gbc.setState(0x999e, 0x4549, 0x8770, 0xe71f, 0xf8a9, 0xce2b, 0x0, 0x0);
        gbc.writeMem(0x999e, { 0x34 });
        gbc.writeMem(0xce2b, { 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4549, gbc.sp());
        EXPECT(0x999f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x999e));
        EXPECT(0x2c, gbc.readMem(0xce2b));
        // 34 0057
        gbc.setState(0xfd5, 0x84ba, 0xd170, 0x6b7f, 0x540a, 0x984f, 0x0, 0x1);
        gbc.writeMem(0xfd5, { 0x34 });
        gbc.writeMem(0x984f, { 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x84ba, gbc.sp());
        EXPECT(0xfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x984f));
        // 34 0058
        gbc.setState(0xb2, 0x428a, 0x9d60, 0xc47d, 0x4924, 0xa9a1, 0x1, 0x1);
        gbc.writeMem(0xb2, { 0x34 });
        gbc.writeMem(0xa9a1, { 0xf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x428a, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa9a1));
        // 34 005A
        gbc.setState(0x81b4, 0x8492, 0x5560, 0x364f, 0x3e26, 0xb0f3, 0x1, 0x1);
        gbc.writeMem(0x81b4, { 0x34 });
        gbc.writeMem(0xb0f3, { 0x8e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8492, gbc.sp());
        EXPECT(0x81b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x81b4));
        EXPECT(0x8f, gbc.readMem(0xb0f3));
        // 34 005E
        gbc.setState(0x6a9f, 0x2f7f, 0xe3d0, 0x5660, 0x2526, 0xfe3a, 0x1, 0x0);
        gbc.writeMem(0x6a9f, { 0x34 });
        gbc.writeMem(0xfe3a, { 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2f7f, gbc.sp());
        EXPECT(0x6aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xfe3a));
        // 34 0066
        gbc.setState(0x55d0, 0xd4f, 0xf9a0, 0xd9d3, 0xc24e, 0xe8ce, 0x0, 0x0);
        gbc.writeMem(0x55d0, { 0x34 });
        gbc.writeMem(0xe8ce, { 0xa7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd4f, gbc.sp());
        EXPECT(0x55d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xe8ce));
        // 34 0068
        gbc.setState(0x895e, 0xf5d5, 0x9210, 0x5549, 0xbd6c, 0xacce, 0x1, 0x0);
        gbc.writeMem(0x895e, { 0x34 });
        gbc.writeMem(0xacce, { 0x4e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf5d5, gbc.sp());
        EXPECT(0x895f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x895e));
        EXPECT(0x4f, gbc.readMem(0xacce));
        // 34 006A
        gbc.setState(0x5071, 0xba35, 0x2960, 0x3951, 0x93d8, 0xf9d5, 0x1, 0x1);
        gbc.writeMem(0x5071, { 0x34 });
        gbc.writeMem(0xf9d5, { 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xba35, gbc.sp());
        EXPECT(0x5072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xf9d5));
        // 34 006B
        gbc.setState(0x6a37, 0xcb81, 0xca30, 0x1b9f, 0x430b, 0xd01e, 0x0, 0x1);
        gbc.writeMem(0x6a37, { 0x34 });
        gbc.writeMem(0xd01e, { 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0x6a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd01e));
        // 34 006C
        gbc.setState(0xe6de, 0x3ee0, 0x21e0, 0xa225, 0x42a1, 0x9842, 0x0, 0x0);
        gbc.writeMem(0x9842, { 0x1f });
        gbc.writeMem(0xe6de, { 0x34 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3ee0, gbc.sp());
        EXPECT(0xe6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9842));
        EXPECT(0x34, gbc.readMem(0xe6de));
        // 34 006E
        gbc.setState(0xb87f, 0x8e88, 0x3b50, 0x1bdc, 0x6bde, 0xd496, 0x1, 0x0);
        gbc.writeMem(0xb87f, { 0x34 });
        gbc.writeMem(0xd496, { 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8e88, gbc.sp());
        EXPECT(0xb880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb87f));
        EXPECT(0x6e, gbc.readMem(0xd496));
        // 34 0072
        gbc.setState(0x49bc, 0x216a, 0xbac0, 0x7857, 0xaf2f, 0x88e8, 0x0, 0x1);
        gbc.writeMem(0x49bc, { 0x34 });
        gbc.writeMem(0x88e8, { 0xd7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0x49bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x88e8));
        // 34 0076
        gbc.setState(0x69c2, 0x3f12, 0x66c0, 0x6e9e, 0x921d, 0xec9c, 0x0, 0x0);
        gbc.writeMem(0x69c2, { 0x34 });
        gbc.writeMem(0xec9c, { 0x74 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x69c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xec9c));
        // 34 007B
        gbc.setState(0x5304, 0xa34c, 0x9e40, 0x32e2, 0x65e2, 0xfc7c, 0x0, 0x1);
        gbc.writeMem(0x5304, { 0x34 });
        gbc.writeMem(0xfc7c, { 0x69 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa34c, gbc.sp());
        EXPECT(0x5305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xfc7c));
        // 34 007C
        gbc.setState(0x4d33, 0x68b9, 0xd000, 0xb61f, 0xbb06, 0x90d4, 0x1, 0x0);
        gbc.writeMem(0x4d33, { 0x34 });
        gbc.writeMem(0x90d4, { 0x58 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x68b9, gbc.sp());
        EXPECT(0x4d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x90d4));
        // 34 007F
        gbc.setState(0x3b9b, 0x4966, 0xb520, 0x42ec, 0xa326, 0xf3a3, 0x0, 0x1);
        gbc.writeMem(0x3b9b, { 0x34 });
        gbc.writeMem(0xf3a3, { 0x8e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4966, gbc.sp());
        EXPECT(0x3b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xf3a3));
        // 34 0080
        gbc.setState(0xc6a, 0x121c, 0x8300, 0x8170, 0xafbc, 0xd473, 0x1, 0x1);
        gbc.writeMem(0xc6a, { 0x34 });
        gbc.writeMem(0xd473, { 0xf7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0xc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd473));
        // 34 0082
        gbc.setState(0x5f7b, 0x5489, 0x8420, 0x95ef, 0x7049, 0xf570, 0x0, 0x0);
        gbc.writeMem(0x5f7b, { 0x34 });
        gbc.writeMem(0xf570, { 0xde });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5489, gbc.sp());
        EXPECT(0x5f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xf570));
        // 34 0084
        gbc.setState(0x5314, 0x5b73, 0xb0a0, 0x378f, 0x3faf, 0x89e7, 0x0, 0x1);
        gbc.writeMem(0x5314, { 0x34 });
        gbc.writeMem(0x89e7, { 0x10 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5b73, gbc.sp());
        EXPECT(0x5315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x89e7));
        // 34 0086
        gbc.setState(0x5081, 0x552d, 0x6b30, 0xea2c, 0x266c, 0xe99b, 0x0, 0x0);
        gbc.writeMem(0x5081, { 0x34 });
        gbc.writeMem(0xe99b, { 0x9d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x552d, gbc.sp());
        EXPECT(0x5082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe99b));
        // 34 0087
        gbc.setState(0x43b2, 0xada4, 0xdd20, 0xdd3f, 0x5f2d, 0xc625, 0x0, 0x1);
        gbc.writeMem(0x43b2, { 0x34 });
        gbc.writeMem(0xc625, { 0xc5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xada4, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc625));
        // 34 0088
        gbc.setState(0xe8c2, 0x34c2, 0x28c0, 0x3cb8, 0xf6ec, 0xb25a, 0x1, 0x1);
        gbc.writeMem(0xb25a, { 0xda });
        gbc.writeMem(0xe8c2, { 0x34 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x34c2, gbc.sp());
        EXPECT(0xe8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xb25a));
        EXPECT(0x34, gbc.readMem(0xe8c2));
        // 34 0089
        gbc.setState(0xdb4c, 0x87ef, 0xd1d0, 0x2830, 0x1681, 0xdefb, 0x0, 0x0);
        gbc.writeMem(0xdb4c, { 0x34 });
        gbc.writeMem(0xdefb, { 0x8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x87ef, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xdb4c));
        EXPECT(0x9, gbc.readMem(0xdefb));
        // 34 008C
        gbc.setState(0xaee9, 0xedb8, 0x2620, 0xcb40, 0x3bdb, 0x8be5, 0x0, 0x1);
        gbc.writeMem(0x8be5, { 0xf7 });
        gbc.writeMem(0xaee9, { 0x34 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xedb8, gbc.sp());
        EXPECT(0xaeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8be5));
        EXPECT(0x34, gbc.readMem(0xaee9));
        // 34 008D
        gbc.setState(0x50dc, 0xaa14, 0xa0a0, 0x6929, 0xee38, 0xbf1d, 0x0, 0x0);
        gbc.writeMem(0x50dc, { 0x34 });
        gbc.writeMem(0xbf1d, { 0xb4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaa14, gbc.sp());
        EXPECT(0x50dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbf1d));
        // 34 008E
        gbc.setState(0x6fed, 0x722b, 0x5470, 0xe10f, 0xf732, 0xb778, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0x34 });
        gbc.writeMem(0xb778, { 0x74 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x722b, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb778));
        // 34 0091
        gbc.setState(0x120, 0x6824, 0x5eb0, 0x630b, 0x302c, 0xa728, 0x1, 0x1);
        gbc.writeMem(0x120, { 0x34 });
        gbc.writeMem(0xa728, { 0x5d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6824, gbc.sp());
        EXPECT(0x121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa728));
        // 34 0094
        gbc.setState(0x1fb2, 0x48eb, 0x1140, 0xd0bd, 0xd54e, 0xc01d, 0x0, 0x1);
        gbc.writeMem(0x1fb2, { 0x34 });
        gbc.writeMem(0xc01d, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x48eb, gbc.sp());
        EXPECT(0x1fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc01d));
        // 34 0096
        gbc.setState(0x4a93, 0xd0a9, 0xcab0, 0xc245, 0xfda9, 0xa35d, 0x0, 0x1);
        gbc.writeMem(0x4a93, { 0x34 });
        gbc.writeMem(0xa35d, { 0xb1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd0a9, gbc.sp());
        EXPECT(0x4a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa35d));
        // 34 0098
        gbc.setState(0x740, 0xce19, 0xab10, 0xa95d, 0xfec0, 0xc489, 0x0, 0x1);
        gbc.writeMem(0x740, { 0x34 });
        gbc.writeMem(0xc489, { 0x24 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xce19, gbc.sp());
        EXPECT(0x741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc489));
        // 34 0099
        gbc.setState(0x1282, 0x9370, 0x7670, 0x4118, 0xbc5f, 0xe9b0, 0x1, 0x0);
        gbc.writeMem(0x1282, { 0x34 });
        gbc.writeMem(0xe9b0, { 0xfc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0x1283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe9b0));
        // 34 009A
        gbc.setState(0x8334, 0x939c, 0xfe20, 0x2e4a, 0xcba4, 0x892f, 0x1, 0x1);
        gbc.writeMem(0x8334, { 0x34 });
        gbc.writeMem(0x892f, { 0xaa });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x939c, gbc.sp());
        EXPECT(0x8335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8334));
        EXPECT(0xab, gbc.readMem(0x892f));
        // 34 009C
        gbc.setState(0x3570, 0x35b9, 0x67a0, 0xa99c, 0xe160, 0xd5a6, 0x1, 0x1);
        gbc.writeMem(0x3570, { 0x34 });
        gbc.writeMem(0xd5a6, { 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x35b9, gbc.sp());
        EXPECT(0x3571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd5a6));
        // 34 009D
        gbc.setState(0x7369, 0xaf1, 0x7a80, 0xbd1a, 0x4578, 0xf554, 0x0, 0x1);
        gbc.writeMem(0x7369, { 0x34 });
        gbc.writeMem(0xf554, { 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xf554));
        // 34 009E
        gbc.setState(0xaaf1, 0xece4, 0x53c0, 0x139a, 0xa3f7, 0x9333, 0x0, 0x1);
        gbc.writeMem(0x9333, { 0x43 });
        gbc.writeMem(0xaaf1, { 0x34 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xece4, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9333));
        EXPECT(0x34, gbc.readMem(0xaaf1));
        // 34 009F
        gbc.setState(0x4dae, 0x619e, 0xbcb0, 0x3774, 0x91bd, 0xa7ea, 0x0, 0x1);
        gbc.writeMem(0x4dae, { 0x34 });
        gbc.writeMem(0xa7ea, { 0x3c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x619e, gbc.sp());
        EXPECT(0x4daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa7ea));
        // 34 00A0
        gbc.setState(0x99db, 0xe038, 0x6380, 0xf9bb, 0x64d0, 0x97e7, 0x1, 0x1);
        gbc.writeMem(0x97e7, { 0x68 });
        gbc.writeMem(0x99db, { 0x34 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe038, gbc.sp());
        EXPECT(0x99dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x97e7));
        EXPECT(0x34, gbc.readMem(0x99db));
        // 34 00A1
        gbc.setState(0xbf40, 0x1f3e, 0xf110, 0x2845, 0xdd6b, 0xfa76, 0x1, 0x0);
        gbc.writeMem(0xbf40, { 0x34 });
        gbc.writeMem(0xfa76, { 0x30 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1f3e, gbc.sp());
        EXPECT(0xbf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbf40));
        EXPECT(0x31, gbc.readMem(0xfa76));
        // 34 00A2
        gbc.setState(0x7750, 0x322a, 0xc60, 0x7865, 0xd316, 0xd45f, 0x1, 0x1);
        gbc.writeMem(0x7750, { 0x34 });
        gbc.writeMem(0xd45f, { 0xc2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x322a, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd45f));
        // 34 00A3
        gbc.setState(0x2cd6, 0x112a, 0x4a20, 0xfd54, 0x51ed, 0x8f5e, 0x0, 0x1);
        gbc.writeMem(0x2cd6, { 0x34 });
        gbc.writeMem(0x8f5e, { 0x39 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x112a, gbc.sp());
        EXPECT(0x2cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8f5e));
        // 34 00A5
        gbc.setState(0xcb6d, 0x54aa, 0x4b60, 0xf872, 0xcfd8, 0xb957, 0x1, 0x0);
        gbc.writeMem(0xb957, { 0x96 });
        gbc.writeMem(0xcb6d, { 0x34 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x54aa, gbc.sp());
        EXPECT(0xcb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb957));
        EXPECT(0x34, gbc.readMem(0xcb6d));
        // 34 00A6
        gbc.setState(0xb5e0, 0x7679, 0xcf20, 0x33a4, 0x954b, 0x8a3d, 0x1, 0x1);
        gbc.writeMem(0x8a3d, { 0xea });
        gbc.writeMem(0xb5e0, { 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0xb5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8a3d));
        EXPECT(0x34, gbc.readMem(0xb5e0));
        // 34 00A7
        gbc.setState(0xae7, 0x93, 0x7300, 0x4e5, 0x3305, 0xd620, 0x1, 0x0);
        gbc.writeMem(0xae7, { 0x34 });
        gbc.writeMem(0xd620, { 0x21 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x93, gbc.sp());
        EXPECT(0xae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd620));
        // 34 00A8
        gbc.setState(0x2edb, 0xd9b2, 0x7050, 0x5918, 0x5d2b, 0x8b6a, 0x0, 0x0);
        gbc.writeMem(0x2edb, { 0x34 });
        gbc.writeMem(0x8b6a, { 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd9b2, gbc.sp());
        EXPECT(0x2edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8b6a));
        // 34 00A9
        gbc.setState(0x5d36, 0x30ad, 0x4e40, 0xb89c, 0xad51, 0xc106, 0x1, 0x1);
        gbc.writeMem(0x5d36, { 0x34 });
        gbc.writeMem(0xc106, { 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x30ad, gbc.sp());
        EXPECT(0x5d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xc106));
        // 34 00AC
        gbc.setState(0x6a33, 0x8ae9, 0xc0e0, 0x14c9, 0x7bd1, 0xfd66, 0x1, 0x1);
        gbc.writeMem(0x6a33, { 0x34 });
        gbc.writeMem(0xfd66, { 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8ae9, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xfd66));
        // 34 00AD
        gbc.setState(0xbef5, 0x591e, 0x57f0, 0x180e, 0xe2ed, 0xd7b7, 0x1, 0x0);
        gbc.writeMem(0xbef5, { 0x34 });
        gbc.writeMem(0xd7b7, { 0x2b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x591e, gbc.sp());
        EXPECT(0xbef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbef5));
        EXPECT(0x2c, gbc.readMem(0xd7b7));
        // 34 00AE
        gbc.setState(0x3ea7, 0x8cc0, 0x18d0, 0x8188, 0xdf80, 0xf9ad, 0x0, 0x0);
        gbc.writeMem(0x3ea7, { 0x34 });
        gbc.writeMem(0xf9ad, { 0x60 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8cc0, gbc.sp());
        EXPECT(0x3ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xf9ad));
        // 34 00B1
        gbc.setState(0xc1a7, 0xbce, 0x40d0, 0x4758, 0xa161, 0xc68e, 0x1, 0x1);
        gbc.writeMem(0xc1a7, { 0x34 });
        gbc.writeMem(0xc68e, { 0x13 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbce, gbc.sp());
        EXPECT(0xc1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc1a7));
        EXPECT(0x14, gbc.readMem(0xc68e));
        // 34 00B2
        gbc.setState(0xeb3, 0xfb88, 0x8d70, 0xc2d, 0x5f75, 0xefad, 0x1, 0x0);
        gbc.writeMem(0xeb3, { 0x34 });
        gbc.writeMem(0xefad, { 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0xeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xefad));
        // 34 00B6
        gbc.setState(0xd9c, 0x80be, 0xd7e0, 0xa07, 0xc2f4, 0xaee1, 0x0, 0x0);
        gbc.writeMem(0xd9c, { 0x34 });
        gbc.writeMem(0xaee1, { 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x80be, gbc.sp());
        EXPECT(0xd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaee1));
        // 34 00B7
        gbc.setState(0xd5dc, 0xe8cc, 0xf8b0, 0xe23e, 0xf170, 0xcaa5, 0x1, 0x1);
        gbc.writeMem(0xcaa5, { 0x34 });
        gbc.writeMem(0xd5dc, { 0x34 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe8cc, gbc.sp());
        EXPECT(0xd5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xcaa5));
        EXPECT(0x34, gbc.readMem(0xd5dc));
        // 34 00B9
        gbc.setState(0x6655, 0x685b, 0xff30, 0x1ad5, 0x70ba, 0x9021, 0x0, 0x0);
        gbc.writeMem(0x6655, { 0x34 });
        gbc.writeMem(0x9021, { 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x685b, gbc.sp());
        EXPECT(0x6656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9021));
        // 34 00BD
        gbc.setState(0x62c1, 0xd43b, 0x8310, 0x25db, 0x8cff, 0xdc3f, 0x1, 0x1);
        gbc.writeMem(0x62c1, { 0x34 });
        gbc.writeMem(0xdc3f, { 0xc2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd43b, gbc.sp());
        EXPECT(0x62c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdc3f));
        // 34 00BF
        gbc.setState(0x749e, 0xa59d, 0x4870, 0x2520, 0x63ae, 0xf313, 0x1, 0x1);
        gbc.writeMem(0x749e, { 0x34 });
        gbc.writeMem(0xf313, { 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa59d, gbc.sp());
        EXPECT(0x749f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xf313));
        // 34 00C0
        gbc.setState(0x1d50, 0x3479, 0x56d0, 0x6279, 0x2bf6, 0xf333, 0x0, 0x1);
        gbc.writeMem(0x1d50, { 0x34 });
        gbc.writeMem(0xf333, { 0xb4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3479, gbc.sp());
        EXPECT(0x1d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf333));
        // 34 00C1
        gbc.setState(0x4f93, 0x74cf, 0x770, 0xca53, 0x8ccd, 0x8f9f, 0x0, 0x1);
        gbc.writeMem(0x4f93, { 0x34 });
        gbc.writeMem(0x8f9f, { 0x2e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0x4f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f9f));
        // 34 00C2
        gbc.setState(0x8515, 0x3253, 0x8260, 0x6177, 0xdef, 0xbaf7, 0x0, 0x0);
        gbc.writeMem(0x8515, { 0x34 });
        gbc.writeMem(0xbaf7, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0x8516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8515));
        EXPECT(0xc0, gbc.readMem(0xbaf7));
        // 34 00C3
        gbc.setState(0xae3b, 0x71c7, 0x7050, 0x5a5d, 0x451a, 0xe732, 0x1, 0x1);
        gbc.writeMem(0xae3b, { 0x34 });
        gbc.writeMem(0xe732, { 0xa8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x71c7, gbc.sp());
        EXPECT(0xae3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xae3b));
        EXPECT(0xa9, gbc.readMem(0xe732));
        // 34 00C6
        gbc.setState(0x467a, 0x32d9, 0xde90, 0x1e05, 0x8b4f, 0xc57b, 0x0, 0x1);
        gbc.writeMem(0x467a, { 0x34 });
        gbc.writeMem(0xc57b, { 0x17 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0x467b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xc57b));
        // 34 00C7
        gbc.setState(0x6c8d, 0x5bc9, 0xbc20, 0xace1, 0x5db3, 0xb5e1, 0x0, 0x0);
        gbc.writeMem(0x6c8d, { 0x34 });
        gbc.writeMem(0xb5e1, { 0x5a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5bc9, gbc.sp());
        EXPECT(0x6c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb5e1));
        // 34 00C8
        gbc.setState(0x42fb, 0x8495, 0xaf70, 0xf70c, 0x2ac4, 0xf7a3, 0x0, 0x0);
        gbc.writeMem(0x42fb, { 0x34 });
        gbc.writeMem(0xf7a3, { 0x9a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x42fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xf7a3));
        // 34 00CB
        gbc.setState(0x1f85, 0x5a17, 0xfc50, 0x5aa3, 0x2644, 0x8d4c, 0x0, 0x0);
        gbc.writeMem(0x1f85, { 0x34 });
        gbc.writeMem(0x8d4c, { 0x99 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5a17, gbc.sp());
        EXPECT(0x1f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d4c));
        // 34 00CC
        gbc.setState(0xe45e, 0xa9b3, 0xf480, 0x63ef, 0x9250, 0xe48e, 0x0, 0x1);
        gbc.writeMem(0xe45e, { 0x34 });
        gbc.writeMem(0xe48e, { 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa9b3, gbc.sp());
        EXPECT(0xe45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xe45e));
        EXPECT(0x28, gbc.readMem(0xe48e));
        // 34 00D0
        gbc.setState(0x1620, 0xefb5, 0xebb0, 0x5ae4, 0xf231, 0xa6b0, 0x0, 0x0);
        gbc.writeMem(0x1620, { 0x34 });
        gbc.writeMem(0xa6b0, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xefb5, gbc.sp());
        EXPECT(0x1621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa6b0));
        // 34 00D4
        gbc.setState(0xa528, 0xd29f, 0x6410, 0xf43c, 0x113b, 0xa0f9, 0x0, 0x0);
        gbc.writeMem(0xa0f9, { 0x8a });
        gbc.writeMem(0xa528, { 0x34 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd29f, gbc.sp());
        EXPECT(0xa529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xa0f9));
        EXPECT(0x34, gbc.readMem(0xa528));
        // 34 00D5
        gbc.setState(0xabe3, 0x498d, 0xe710, 0xed43, 0xeda2, 0x9b13, 0x0, 0x1);
        gbc.writeMem(0x9b13, { 0xe6 });
        gbc.writeMem(0xabe3, { 0x34 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x498d, gbc.sp());
        EXPECT(0xabe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9b13));
        EXPECT(0x34, gbc.readMem(0xabe3));
        // 34 00D8
        gbc.setState(0x907e, 0x6f08, 0xd530, 0x1778, 0x45c, 0xec8e, 0x1, 0x1);
        gbc.writeMem(0x907e, { 0x34 });
        gbc.writeMem(0xec8e, { 0x4e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0x907f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x907e));
        EXPECT(0x4f, gbc.readMem(0xec8e));
        // 34 00D9
        gbc.setState(0x5c7f, 0xfc8, 0xefd0, 0x27b2, 0x22df, 0xf32c, 0x1, 0x1);
        gbc.writeMem(0x5c7f, { 0x34 });
        gbc.writeMem(0xf32c, { 0xab });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfc8, gbc.sp());
        EXPECT(0x5c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf32c));
        // 34 00DB
        gbc.setState(0x6657, 0xdfda, 0x9970, 0xc7eb, 0x3f1b, 0xcfdd, 0x0, 0x1);
        gbc.writeMem(0x6657, { 0x34 });
        gbc.writeMem(0xcfdd, { 0xde });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdfda, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xcfdd));
        // 34 00DE
        gbc.setState(0x22f5, 0x30b, 0x1bc0, 0x97c8, 0xa1b0, 0xb21c, 0x1, 0x1);
        gbc.writeMem(0x22f5, { 0x34 });
        gbc.writeMem(0xb21c, { 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x30b, gbc.sp());
        EXPECT(0x22f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb21c));
        // 34 00DF
        gbc.setState(0x98b9, 0xe207, 0x59c0, 0x1d82, 0xa12, 0xcf6d, 0x1, 0x0);
        gbc.writeMem(0x98b9, { 0x34 });
        gbc.writeMem(0xcf6d, { 0x41 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe207, gbc.sp());
        EXPECT(0x98ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x98b9));
        EXPECT(0x42, gbc.readMem(0xcf6d));
        // 34 00E0
        gbc.setState(0xd15c, 0x2b90, 0x6c90, 0x8cda, 0x8f3e, 0x9671, 0x1, 0x0);
        gbc.writeMem(0x9671, { 0xc3 });
        gbc.writeMem(0xd15c, { 0x34 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2b90, gbc.sp());
        EXPECT(0xd15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9671));
        EXPECT(0x34, gbc.readMem(0xd15c));
        // 34 00E2
        gbc.setState(0x847, 0xc08d, 0x5f50, 0xfe97, 0x283b, 0x8bfd, 0x0, 0x0);
        gbc.writeMem(0x847, { 0x34 });
        gbc.writeMem(0x8bfd, { 0x19 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc08d, gbc.sp());
        EXPECT(0x848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8bfd));
        // 34 00E3
        gbc.setState(0x4dd5, 0x7e61, 0xe0, 0x9a, 0x9a5f, 0x8f2c, 0x1, 0x0);
        gbc.writeMem(0x4dd5, { 0x34 });
        gbc.writeMem(0x8f2c, { 0x6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0x4dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8f2c));
        // 34 00E5
        gbc.setState(0x2ef2, 0x9429, 0x4ed0, 0xfc4a, 0x5150, 0x9959, 0x1, 0x0);
        gbc.writeMem(0x2ef2, { 0x34 });
        gbc.writeMem(0x9959, { 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9429, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9959));
        // 34 00E6
        gbc.setState(0x782a, 0xd28, 0x2330, 0x90fb, 0x10d, 0xea34, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0x34 });
        gbc.writeMem(0xea34, { 0x28 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd28, gbc.sp());
        EXPECT(0x782b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xea34));
        // 34 00E8
        gbc.setState(0x3189, 0xe25f, 0xc930, 0x8e56, 0x440b, 0xc582, 0x0, 0x1);
        gbc.writeMem(0x3189, { 0x34 });
        gbc.writeMem(0xc582, { 0xf8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe25f, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc582));
        // 34 00E9
        gbc.setState(0x8470, 0x4eca, 0x8720, 0x2eed, 0x4d41, 0xc017, 0x0, 0x0);
        gbc.writeMem(0x8470, { 0x34 });
        gbc.writeMem(0xc017, { 0xda });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4eca, gbc.sp());
        EXPECT(0x8471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8470));
        EXPECT(0xdb, gbc.readMem(0xc017));
        // 34 00EC
        gbc.setState(0x8f01, 0x555, 0x9070, 0x6a6e, 0x483c, 0x96e2, 0x1, 0x1);
        gbc.writeMem(0x8f01, { 0x34 });
        gbc.writeMem(0x96e2, { 0x2e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x555, gbc.sp());
        EXPECT(0x8f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8f01));
        EXPECT(0x2f, gbc.readMem(0x96e2));
        // 34 00EE
        gbc.setState(0x1a90, 0x3dd7, 0x7130, 0x58e0, 0xb313, 0x8e74, 0x0, 0x1);
        gbc.writeMem(0x1a90, { 0x34 });
        gbc.writeMem(0x8e74, { 0xde });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3dd7, gbc.sp());
        EXPECT(0x1a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8e74));
        // 34 00F0
        gbc.setState(0x2e80, 0x77c, 0x2600, 0xa376, 0x838, 0xdad4, 0x0, 0x0);
        gbc.writeMem(0x2e80, { 0x34 });
        gbc.writeMem(0xdad4, { 0xfe });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x77c, gbc.sp());
        EXPECT(0x2e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdad4));
        // 34 00F1
        gbc.setState(0xdfbd, 0x2b20, 0x34c0, 0x1788, 0xae85, 0xb37c, 0x1, 0x0);
        gbc.writeMem(0xb37c, { 0x81 });
        gbc.writeMem(0xdfbd, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2b20, gbc.sp());
        EXPECT(0xdfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb37c));
        EXPECT(0x34, gbc.readMem(0xdfbd));
        // 34 00F2
        gbc.setState(0xdf1d, 0xeea1, 0x3c70, 0xb6c5, 0x895e, 0xdf4a, 0x0, 0x0);
        gbc.writeMem(0xdf1d, { 0x34 });
        gbc.writeMem(0xdf4a, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeea1, gbc.sp());
        EXPECT(0xdf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xdf1d));
        EXPECT(0x65, gbc.readMem(0xdf4a));
        // 34 00F3
        gbc.setState(0xdaec, 0x9477, 0x1440, 0x66aa, 0x5614, 0x90ea, 0x1, 0x0);
        gbc.writeMem(0x90ea, { 0x35 });
        gbc.writeMem(0xdaec, { 0x34 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9477, gbc.sp());
        EXPECT(0xdaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x90ea));
        EXPECT(0x34, gbc.readMem(0xdaec));
        // 34 00F4
        gbc.setState(0xc562, 0xdb17, 0x72a0, 0x5475, 0xb9a4, 0xeb64, 0x1, 0x0);
        gbc.writeMem(0xc562, { 0x34 });
        gbc.writeMem(0xeb64, { 0x2b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0xc563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc562));
        EXPECT(0x2c, gbc.readMem(0xeb64));
        // 34 00F5
        gbc.setState(0x11bd, 0xaf7d, 0x51c0, 0xfb2, 0xc192, 0xdc14, 0x0, 0x1);
        gbc.writeMem(0x11bd, { 0x34 });
        gbc.writeMem(0xdc14, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaf7d, gbc.sp());
        EXPECT(0x11be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdc14));
        // 34 00F6
        gbc.setState(0x82cd, 0x5642, 0x73f0, 0x26ab, 0x9107, 0xd43f, 0x0, 0x1);
        gbc.writeMem(0x82cd, { 0x34 });
        gbc.writeMem(0xd43f, { 0x84 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5642, gbc.sp());
        EXPECT(0x82ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x82cd));
        EXPECT(0x85, gbc.readMem(0xd43f));
        // 34 00F7
        gbc.setState(0xc6a4, 0x62c9, 0x74c0, 0xbd7e, 0x527c, 0x85bf, 0x1, 0x0);
        gbc.writeMem(0x85bf, { 0x2 });
        gbc.writeMem(0xc6a4, { 0x34 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x62c9, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x85bf));
        EXPECT(0x34, gbc.readMem(0xc6a4));
        // 34 00F8
        gbc.setState(0xec56, 0x64a8, 0xb950, 0x8a8e, 0xa2a, 0xc8d4, 0x1, 0x0);
        gbc.writeMem(0xc8d4, { 0xf5 });
        gbc.writeMem(0xec56, { 0x34 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x64a8, gbc.sp());
        EXPECT(0xec57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc8d4));
        EXPECT(0x34, gbc.readMem(0xec56));
        // 34 00F9
        gbc.setState(0x281, 0xf358, 0x4240, 0x57b3, 0x5fef, 0xbb68, 0x1, 0x0);
        gbc.writeMem(0x281, { 0x34 });
        gbc.writeMem(0xbb68, { 0xe1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf358, gbc.sp());
        EXPECT(0x282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbb68));
        // 34 00FA
        gbc.setState(0x8a92, 0x8bf3, 0x2ec0, 0x30f7, 0x3e24, 0xacc7, 0x0, 0x1);
        gbc.writeMem(0x8a92, { 0x34 });
        gbc.writeMem(0xacc7, { 0xa8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8bf3, gbc.sp());
        EXPECT(0x8a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8a92));
        EXPECT(0xa9, gbc.readMem(0xacc7));
        // 34 00FD
        gbc.setState(0x77ad, 0x3825, 0x67d0, 0x779a, 0xbbf4, 0xcabb, 0x1, 0x0);
        gbc.writeMem(0x77ad, { 0x34 });
        gbc.writeMem(0xcabb, { 0x7f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3825, gbc.sp());
        EXPECT(0x77ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcabb));
        // 34 00FE
        gbc.setState(0x9b4, 0x1395, 0x9fa0, 0x5f0c, 0x59d0, 0xcf2c, 0x0, 0x0);
        gbc.writeMem(0x9b4, { 0x34 });
        gbc.writeMem(0xcf2c, { 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1395, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xcf2c));
        // 34 00FF
        gbc.setState(0x39c8, 0x33b5, 0x14e0, 0xe79e, 0x4c08, 0x8d6d, 0x1, 0x1);
        gbc.writeMem(0x39c8, { 0x34 });
        gbc.writeMem(0x8d6d, { 0x3e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x33b5, gbc.sp());
        EXPECT(0x39c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8d6d));
        // 34 0102
        gbc.setState(0x9897, 0x584, 0x7370, 0x6e71, 0xacd3, 0xbe09, 0x1, 0x0);
        gbc.writeMem(0x9897, { 0x34 });
        gbc.writeMem(0xbe09, { 0xf6 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0x9898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9897));
        EXPECT(0xf7, gbc.readMem(0xbe09));
        // 34 0103
        gbc.setState(0x6a5a, 0x517b, 0x7360, 0xa2ce, 0xc75b, 0x95fb, 0x1, 0x0);
        gbc.writeMem(0x6a5a, { 0x34 });
        gbc.writeMem(0x95fb, { 0xf });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x517b, gbc.sp());
        EXPECT(0x6a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x95fb));
        // 34 0106
        gbc.setState(0xaf09, 0x889f, 0xacc0, 0x40c7, 0x6cd, 0x93b0, 0x0, 0x1);
        gbc.writeMem(0x93b0, { 0x19 });
        gbc.writeMem(0xaf09, { 0x34 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x889f, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x93b0));
        EXPECT(0x34, gbc.readMem(0xaf09));
        // 34 010B
        gbc.setState(0xa268, 0x2a5e, 0xacf0, 0x8ea0, 0x8163, 0xe341, 0x0, 0x1);
        gbc.writeMem(0xa268, { 0x34 });
        gbc.writeMem(0xe341, { 0x21 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2a5e, gbc.sp());
        EXPECT(0xa269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa268));
        EXPECT(0x22, gbc.readMem(0xe341));
        // 34 0110
        gbc.setState(0x5e1e, 0x9257, 0xe540, 0x9d3a, 0x33ad, 0xe6b6, 0x0, 0x0);
        gbc.writeMem(0x5e1e, { 0x34 });
        gbc.writeMem(0xe6b6, { 0xdf });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0x5e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe6b6));
        // 34 0111
        gbc.setState(0x7269, 0xb9a2, 0x9b10, 0x6c94, 0x3608, 0xd9b3, 0x1, 0x1);
        gbc.writeMem(0x7269, { 0x34 });
        gbc.writeMem(0xd9b3, { 0xee });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb9a2, gbc.sp());
        EXPECT(0x726a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xd9b3));
        // 34 0114
        gbc.setState(0xd96b, 0xf83b, 0x5950, 0x935e, 0xcfba, 0xd741, 0x0, 0x0);
        gbc.writeMem(0xd741, { 0x4c });
        gbc.writeMem(0xd96b, { 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf83b, gbc.sp());
        EXPECT(0xd96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd741));
        EXPECT(0x34, gbc.readMem(0xd96b));
        // 34 0118
        gbc.setState(0x8225, 0x798d, 0xb850, 0xc97f, 0xb4bc, 0x839e, 0x1, 0x1);
        gbc.writeMem(0x8225, { 0x34 });
        gbc.writeMem(0x839e, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x798d, gbc.sp());
        EXPECT(0x8226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8225));
        EXPECT(0x11, gbc.readMem(0x839e));
        // 34 0119
        gbc.setState(0xa8b7, 0xbeff, 0x8480, 0xb805, 0x382c, 0x95c6, 0x0, 0x0);
        gbc.writeMem(0x95c6, { 0xcd });
        gbc.writeMem(0xa8b7, { 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0xa8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x95c6));
        EXPECT(0x34, gbc.readMem(0xa8b7));
        // 34 011B
        gbc.setState(0xaf71, 0x4b61, 0xe10, 0xc119, 0x26f8, 0x91ed, 0x1, 0x0);
        gbc.writeMem(0x91ed, { 0x9e });
        gbc.writeMem(0xaf71, { 0x34 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4b61, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x91ed));
        EXPECT(0x34, gbc.readMem(0xaf71));
        // 34 011C
        gbc.setState(0xbda0, 0x4728, 0xd110, 0xfd5, 0x83c, 0x8686, 0x0, 0x0);
        gbc.writeMem(0x8686, { 0x45 });
        gbc.writeMem(0xbda0, { 0x34 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4728, gbc.sp());
        EXPECT(0xbda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8686));
        EXPECT(0x34, gbc.readMem(0xbda0));
        // 34 011D
        gbc.setState(0x372b, 0x6317, 0xa770, 0x586e, 0x994d, 0xfc45, 0x1, 0x1);
        gbc.writeMem(0x372b, { 0x34 });
        gbc.writeMem(0xfc45, { 0x17 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6317, gbc.sp());
        EXPECT(0x372c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xfc45));
        // 34 0121
        gbc.setState(0xeac8, 0xf964, 0x38c0, 0xe0cd, 0xee8c, 0xccd4, 0x1, 0x0);
        gbc.writeMem(0xccd4, { 0x91 });
        gbc.writeMem(0xeac8, { 0x34 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf964, gbc.sp());
        EXPECT(0xeac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xccd4));
        EXPECT(0x34, gbc.readMem(0xeac8));
        // 34 0122
        gbc.setState(0x1243, 0xf2ff, 0x1d0, 0x5b58, 0xd838, 0xace0, 0x0, 0x0);
        gbc.writeMem(0x1243, { 0x34 });
        gbc.writeMem(0xace0, { 0x21 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0x1244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xace0));
        // 34 0125
        gbc.setState(0x8be6, 0x17b9, 0x96c0, 0xf8e1, 0x308f, 0xa31e, 0x1, 0x0);
        gbc.writeMem(0x8be6, { 0x34 });
        gbc.writeMem(0xa31e, { 0xa2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x17b9, gbc.sp());
        EXPECT(0x8be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8be6));
        EXPECT(0xa3, gbc.readMem(0xa31e));
        // 34 0126
        gbc.setState(0x5550, 0x167f, 0x9f20, 0xe350, 0x8e2a, 0xdcfa, 0x0, 0x0);
        gbc.writeMem(0x5550, { 0x34 });
        gbc.writeMem(0xdcfa, { 0xf2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x167f, gbc.sp());
        EXPECT(0x5551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xdcfa));
        // 34 012D
        gbc.setState(0x740a, 0x7b5f, 0x4bc0, 0x1d73, 0xc4bf, 0xd814, 0x1, 0x0);
        gbc.writeMem(0x740a, { 0x34 });
        gbc.writeMem(0xd814, { 0x72 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7b5f, gbc.sp());
        EXPECT(0x740b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd814));
        // 34 012E
        gbc.setState(0x2244, 0x864b, 0x1ba0, 0xee50, 0x7b10, 0x8810, 0x0, 0x0);
        gbc.writeMem(0x2244, { 0x34 });
        gbc.writeMem(0x8810, { 0x84 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x864b, gbc.sp());
        EXPECT(0x2245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8810));
        // 34 012F
        gbc.setState(0x4d5d, 0x8ae3, 0xa80, 0x9ed1, 0x6160, 0x9b40, 0x1, 0x1);
        gbc.writeMem(0x4d5d, { 0x34 });
        gbc.writeMem(0x9b40, { 0x82 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8ae3, gbc.sp());
        EXPECT(0x4d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9b40));
        // 34 0130
        gbc.setState(0x315e, 0x1771, 0xba00, 0x104e, 0x630e, 0x8765, 0x0, 0x0);
        gbc.writeMem(0x315e, { 0x34 });
        gbc.writeMem(0x8765, { 0x59 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1771, gbc.sp());
        EXPECT(0x315f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8765));
        // 34 0131
        gbc.setState(0x7998, 0x4f2, 0x250, 0x625b, 0x9a06, 0xb869, 0x0, 0x1);
        gbc.writeMem(0x7998, { 0x34 });
        gbc.writeMem(0xb869, { 0x50 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4f2, gbc.sp());
        EXPECT(0x7999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb869));
        // 34 0132
        gbc.setState(0x62a8, 0x6bab, 0x1d70, 0x46a9, 0xce8b, 0xc38a, 0x0, 0x0);
        gbc.writeMem(0x62a8, { 0x34 });
        gbc.writeMem(0xc38a, { 0xd8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6bab, gbc.sp());
        EXPECT(0x62a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc38a));
        // 34 0133
        gbc.setState(0x80b2, 0x76e, 0xd140, 0xeb90, 0x4b87, 0xccd6, 0x1, 0x0);
        gbc.writeMem(0x80b2, { 0x34 });
        gbc.writeMem(0xccd6, { 0xd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x76e, gbc.sp());
        EXPECT(0x80b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x80b2));
        EXPECT(0xe, gbc.readMem(0xccd6));
        // 34 0136
        gbc.setState(0x77cb, 0xe03f, 0x5ef0, 0x6382, 0xf3e8, 0x9222, 0x1, 0x0);
        gbc.writeMem(0x77cb, { 0x34 });
        gbc.writeMem(0x9222, { 0xee });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe03f, gbc.sp());
        EXPECT(0x77cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x9222));
        // 34 0138
        gbc.setState(0x9706, 0x8daa, 0xd6d0, 0x2456, 0x58fb, 0x85dd, 0x0, 0x0);
        gbc.writeMem(0x85dd, { 0x68 });
        gbc.writeMem(0x9706, { 0x34 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x85dd));
        EXPECT(0x34, gbc.readMem(0x9706));
        // 34 013A
        gbc.setState(0x61bf, 0x5ec, 0xf4f0, 0xac30, 0xe52f, 0x9477, 0x0, 0x0);
        gbc.writeMem(0x61bf, { 0x34 });
        gbc.writeMem(0x9477, { 0x8e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0x61c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9477));
        // 34 013B
        gbc.setState(0xb139, 0x4e9f, 0x89f0, 0x96ed, 0x85da, 0xc746, 0x1, 0x0);
        gbc.writeMem(0xb139, { 0x34 });
        gbc.writeMem(0xc746, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4e9f, gbc.sp());
        EXPECT(0xb13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb139));
        EXPECT(0xc, gbc.readMem(0xc746));
        // 34 013C
        gbc.setState(0xe19a, 0xaca6, 0xee10, 0x9610, 0x6ab2, 0xadad, 0x1, 0x1);
        gbc.writeMem(0xadad, { 0x93 });
        gbc.writeMem(0xe19a, { 0x34 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaca6, gbc.sp());
        EXPECT(0xe19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xadad));
        EXPECT(0x34, gbc.readMem(0xe19a));
        // 34 013D
        gbc.setState(0x9c9, 0x327d, 0x49b0, 0x37c2, 0x5d4a, 0xac62, 0x0, 0x1);
        gbc.writeMem(0x9c9, { 0x34 });
        gbc.writeMem(0xac62, { 0x1f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x327d, gbc.sp());
        EXPECT(0x9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xac62));
        // 34 013E
        gbc.setState(0xbcdd, 0x4acf, 0x6e30, 0xbef8, 0xb102, 0xd385, 0x0, 0x0);
        gbc.writeMem(0xbcdd, { 0x34 });
        gbc.writeMem(0xd385, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4acf, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbcdd));
        EXPECT(0xb4, gbc.readMem(0xd385));
        // 34 013F
        gbc.setState(0x64b1, 0x9256, 0x8900, 0x5b1e, 0x5b9, 0xc285, 0x0, 0x1);
        gbc.writeMem(0x64b1, { 0x34 });
        gbc.writeMem(0xc285, { 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9256, gbc.sp());
        EXPECT(0x64b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc285));
        // 34 0140
        gbc.setState(0x9f54, 0xdfe8, 0xcda0, 0x13bd, 0x8c74, 0xb145, 0x0, 0x1);
        gbc.writeMem(0x9f54, { 0x34 });
        gbc.writeMem(0xb145, { 0xb2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdfe8, gbc.sp());
        EXPECT(0x9f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9f54));
        EXPECT(0xb3, gbc.readMem(0xb145));
        // 34 0141
        gbc.setState(0x903d, 0xa96f, 0x4850, 0x292d, 0x5bc7, 0xc503, 0x0, 0x1);
        gbc.writeMem(0x903d, { 0x34 });
        gbc.writeMem(0xc503, { 0x63 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa96f, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x903d));
        EXPECT(0x64, gbc.readMem(0xc503));
        // 34 0142
        gbc.setState(0x91f5, 0x3e5d, 0xc730, 0x5346, 0xebc9, 0xf13d, 0x0, 0x0);
        gbc.writeMem(0x91f5, { 0x34 });
        gbc.writeMem(0xf13d, { 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3e5d, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x91f5));
        EXPECT(0x95, gbc.readMem(0xf13d));
        // 34 0144
        gbc.setState(0xc5be, 0xb0f4, 0xef40, 0x541f, 0x4b45, 0xd962, 0x0, 0x0);
        gbc.writeMem(0xc5be, { 0x34 });
        gbc.writeMem(0xd962, { 0x6a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb0f4, gbc.sp());
        EXPECT(0xc5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc5be));
        EXPECT(0x6b, gbc.readMem(0xd962));
        // 34 0148
        gbc.setState(0x6b2a, 0xda3b, 0x4280, 0xac3d, 0xd3be, 0xe400, 0x0, 0x0);
        gbc.writeMem(0x6b2a, { 0x34 });
        gbc.writeMem(0xe400, { 0x5d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0x6b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe400));
        // 34 014A
        gbc.setState(0xd4c9, 0x8ddf, 0xb720, 0xd228, 0x43e0, 0xc119, 0x1, 0x0);
        gbc.writeMem(0xc119, { 0xc1 });
        gbc.writeMem(0xd4c9, { 0x34 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8ddf, gbc.sp());
        EXPECT(0xd4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc119));
        EXPECT(0x34, gbc.readMem(0xd4c9));
        // 34 014C
        gbc.setState(0xc958, 0xde8d, 0xf4b0, 0x1b9, 0x411e, 0x9ee3, 0x1, 0x1);
        gbc.writeMem(0x9ee3, { 0x5c });
        gbc.writeMem(0xc958, { 0x34 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0xc959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9ee3));
        EXPECT(0x34, gbc.readMem(0xc958));
        // 34 014F
        gbc.setState(0x7d91, 0xe57d, 0x9340, 0x3047, 0x9b68, 0xa29e, 0x1, 0x1);
        gbc.writeMem(0x7d91, { 0x34 });
        gbc.writeMem(0xa29e, { 0xe4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa29e));
        // 34 0150
        gbc.setState(0xe7a4, 0x943f, 0x8860, 0xcd35, 0x68e5, 0xa5fd, 0x1, 0x0);
        gbc.writeMem(0xa5fd, { 0x30 });
        gbc.writeMem(0xe7a4, { 0x34 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x943f, gbc.sp());
        EXPECT(0xe7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa5fd));
        EXPECT(0x34, gbc.readMem(0xe7a4));
        // 34 0151
        gbc.setState(0xc9a3, 0x7e03, 0x5440, 0xfc0e, 0xbb64, 0xde49, 0x0, 0x1);
        gbc.writeMem(0xc9a3, { 0x34 });
        gbc.writeMem(0xde49, { 0x3d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7e03, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc9a3));
        EXPECT(0x3e, gbc.readMem(0xde49));
        // 34 0152
        gbc.setState(0x91a6, 0x843e, 0x9770, 0x666e, 0x7b2a, 0xf23b, 0x0, 0x1);
        gbc.writeMem(0x91a6, { 0x34 });
        gbc.writeMem(0xf23b, { 0xec });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x843e, gbc.sp());
        EXPECT(0x91a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x91a6));
        EXPECT(0xed, gbc.readMem(0xf23b));
        // 34 0153
        gbc.setState(0x41b3, 0xcb50, 0xca20, 0x1e3b, 0x955f, 0x9951, 0x1, 0x1);
        gbc.writeMem(0x41b3, { 0x34 });
        gbc.writeMem(0x9951, { 0x1a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcb50, gbc.sp());
        EXPECT(0x41b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x9951));
        // 34 0154
        gbc.setState(0x2d7b, 0x4d56, 0xe0e0, 0x3c9a, 0xfe08, 0xc0aa, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0x34 });
        gbc.writeMem(0xc0aa, { 0x8b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc0aa));
        // 34 0155
        gbc.setState(0x560b, 0xc657, 0x43e0, 0xee, 0x8bef, 0xd232, 0x0, 0x1);
        gbc.writeMem(0x560b, { 0x34 });
        gbc.writeMem(0xd232, { 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc657, gbc.sp());
        EXPECT(0x560c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd232));
        // 34 0156
        gbc.setState(0xc60a, 0x3717, 0x55e0, 0xed41, 0xba3b, 0xa008, 0x1, 0x0);
        gbc.writeMem(0xa008, { 0xe0 });
        gbc.writeMem(0xc60a, { 0x34 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3717, gbc.sp());
        EXPECT(0xc60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa008));
        EXPECT(0x34, gbc.readMem(0xc60a));
        // 34 0157
        gbc.setState(0x22f3, 0xab24, 0xce10, 0xf173, 0x2917, 0x9c81, 0x1, 0x1);
        gbc.writeMem(0x22f3, { 0x34 });
        gbc.writeMem(0x9c81, { 0x74 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xab24, gbc.sp());
        EXPECT(0x22f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9c81));
        // 34 0158
        gbc.setState(0x7fc6, 0xf179, 0x3d80, 0x12e1, 0x67af, 0xbd32, 0x1, 0x0);
        gbc.writeMem(0x7fc6, { 0x34 });
        gbc.writeMem(0xbd32, { 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0x7fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xbd32));
        // 34 015A
        gbc.setState(0xc80e, 0xfda5, 0x6320, 0xf96a, 0x1e88, 0xc337, 0x0, 0x0);
        gbc.writeMem(0xc337, { 0xa });
        gbc.writeMem(0xc80e, { 0x34 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0xc80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc337));
        EXPECT(0x34, gbc.readMem(0xc80e));
        // 34 015C
        gbc.setState(0xa27a, 0xb946, 0x370, 0x6254, 0x8447, 0xc493, 0x0, 0x0);
        gbc.writeMem(0xa27a, { 0x34 });
        gbc.writeMem(0xc493, { 0xd2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb946, gbc.sp());
        EXPECT(0xa27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa27a));
        EXPECT(0xd3, gbc.readMem(0xc493));
        // 34 0160
        gbc.setState(0xa555, 0x87c8, 0xa980, 0xe32c, 0x128b, 0xddf4, 0x1, 0x0);
        gbc.writeMem(0xa555, { 0x34 });
        gbc.writeMem(0xddf4, { 0x3a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x87c8, gbc.sp());
        EXPECT(0xa556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa555));
        EXPECT(0x3b, gbc.readMem(0xddf4));
        // 34 0161
        gbc.setState(0x7764, 0x3d04, 0xaa60, 0x5523, 0x22cb, 0x90ce, 0x1, 0x0);
        gbc.writeMem(0x7764, { 0x34 });
        gbc.writeMem(0x90ce, { 0xc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3d04, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x90ce));
        // 34 0167
        gbc.setState(0x6e2e, 0x6cf, 0x66e0, 0x4838, 0x4237, 0xca8a, 0x0, 0x1);
        gbc.writeMem(0x6e2e, { 0x34 });
        gbc.writeMem(0xca8a, { 0x9b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6cf, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xca8a));
        // 34 0168
        gbc.setState(0xb1fe, 0xc338, 0xd4e0, 0x9b8, 0x43d8, 0xca82, 0x0, 0x0);
        gbc.writeMem(0xb1fe, { 0x34 });
        gbc.writeMem(0xca82, { 0xdc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc338, gbc.sp());
        EXPECT(0xb1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb1fe));
        EXPECT(0xdd, gbc.readMem(0xca82));
        // 34 0169
        gbc.setState(0xa649, 0x7b71, 0xda50, 0x962d, 0xe702, 0x9610, 0x0, 0x1);
        gbc.writeMem(0x9610, { 0x37 });
        gbc.writeMem(0xa649, { 0x34 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7b71, gbc.sp());
        EXPECT(0xa64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9610));
        EXPECT(0x34, gbc.readMem(0xa649));
        // 34 016B
        gbc.setState(0x6381, 0xb301, 0xafc0, 0x2179, 0x5545, 0xf79b, 0x1, 0x0);
        gbc.writeMem(0x6381, { 0x34 });
        gbc.writeMem(0xf79b, { 0x24 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb301, gbc.sp());
        EXPECT(0x6382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xf79b));
        // 34 016E
        gbc.setState(0x5bd8, 0x3299, 0x5510, 0xa26b, 0xe2bd, 0xe2db, 0x0, 0x0);
        gbc.writeMem(0x5bd8, { 0x34 });
        gbc.writeMem(0xe2db, { 0xfd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3299, gbc.sp());
        EXPECT(0x5bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe2db));
        // 34 0170
        gbc.setState(0x1874, 0x30e3, 0x2ef0, 0xe94e, 0x14d8, 0xe653, 0x0, 0x1);
        gbc.writeMem(0x1874, { 0x34 });
        gbc.writeMem(0xe653, { 0x36 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x30e3, gbc.sp());
        EXPECT(0x1875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe653));
        // 34 0171
        gbc.setState(0x28bb, 0x2a18, 0xd8d0, 0xd81f, 0x9578, 0xc2a3, 0x0, 0x0);
        gbc.writeMem(0x28bb, { 0x34 });
        gbc.writeMem(0xc2a3, { 0x86 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2a18, gbc.sp());
        EXPECT(0x28bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc2a3));
        // 34 0175
        gbc.setState(0x2972, 0x3480, 0x4ca0, 0x3d55, 0x6db3, 0xe430, 0x1, 0x1);
        gbc.writeMem(0x2972, { 0x34 });
        gbc.writeMem(0xe430, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3480, gbc.sp());
        EXPECT(0x2973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe430));
        // 34 017B
        gbc.setState(0xcd8e, 0x9cbe, 0x7800, 0xe165, 0x8b3f, 0x87d1, 0x1, 0x0);
        gbc.writeMem(0x87d1, { 0x32 });
        gbc.writeMem(0xcd8e, { 0x34 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9cbe, gbc.sp());
        EXPECT(0xcd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x87d1));
        EXPECT(0x34, gbc.readMem(0xcd8e));
        // 34 017C
        gbc.setState(0x54c2, 0xb719, 0x2cd0, 0xa2e2, 0x8cad, 0xf4ba, 0x0, 0x1);
        gbc.writeMem(0x54c2, { 0x34 });
        gbc.writeMem(0xf4ba, { 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb719, gbc.sp());
        EXPECT(0x54c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xf4ba));
        // 34 017E
        gbc.setState(0xca4e, 0xd9e2, 0xf210, 0x4ed, 0x9588, 0x8841, 0x0, 0x0);
        gbc.writeMem(0x8841, { 0xff });
        gbc.writeMem(0xca4e, { 0x34 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd9e2, gbc.sp());
        EXPECT(0xca4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8841));
        EXPECT(0x34, gbc.readMem(0xca4e));
        // 34 0182
        gbc.setState(0x8f03, 0x2781, 0xcb0, 0x6811, 0xc898, 0x92ae, 0x1, 0x0);
        gbc.writeMem(0x8f03, { 0x34 });
        gbc.writeMem(0x92ae, { 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2781, gbc.sp());
        EXPECT(0x8f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8f03));
        EXPECT(0x14, gbc.readMem(0x92ae));
        // 34 0188
        gbc.setState(0x2892, 0x659c, 0xb720, 0xc9b0, 0x89a9, 0xb00a, 0x0, 0x0);
        gbc.writeMem(0x2892, { 0x34 });
        gbc.writeMem(0xb00a, { 0x37 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x659c, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb00a));
        // 34 018A
        gbc.setState(0xc229, 0x31ed, 0x3c20, 0x7589, 0xa52c, 0xd5b6, 0x0, 0x0);
        gbc.writeMem(0xc229, { 0x34 });
        gbc.writeMem(0xd5b6, { 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x31ed, gbc.sp());
        EXPECT(0xc22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc229));
        EXPECT(0x90, gbc.readMem(0xd5b6));
        // 34 018B
        gbc.setState(0xe3eb, 0x75c4, 0x7f80, 0xdeee, 0xd1f1, 0xd6e0, 0x0, 0x1);
        gbc.writeMem(0xd6e0, { 0x60 });
        gbc.writeMem(0xe3eb, { 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0xe3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd6e0));
        EXPECT(0x34, gbc.readMem(0xe3eb));
        // 34 018F
        gbc.setState(0x987e, 0x12b9, 0x3560, 0xfbfc, 0xdfa2, 0xb5b7, 0x1, 0x1);
        gbc.writeMem(0x987e, { 0x34 });
        gbc.writeMem(0xb5b7, { 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x12b9, gbc.sp());
        EXPECT(0x987f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x987e));
        EXPECT(0xca, gbc.readMem(0xb5b7));
        // 34 0190
        gbc.setState(0x9888, 0x5082, 0x4c50, 0xca3, 0x31d4, 0xd02c, 0x0, 0x0);
        gbc.writeMem(0x9888, { 0x34 });
        gbc.writeMem(0xd02c, { 0x9d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5082, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9888));
        EXPECT(0x9e, gbc.readMem(0xd02c));
        // 34 0191
        gbc.setState(0x90f9, 0x7b54, 0x5920, 0xbd30, 0xbe2e, 0x8b67, 0x0, 0x0);
        gbc.writeMem(0x8b67, { 0xb });
        gbc.writeMem(0x90f9, { 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7b54, gbc.sp());
        EXPECT(0x90fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8b67));
        EXPECT(0x34, gbc.readMem(0x90f9));
        // 34 0193
        gbc.setState(0x91a, 0xa63c, 0x29f0, 0x37cb, 0x8cf5, 0xc335, 0x1, 0x0);
        gbc.writeMem(0x91a, { 0x34 });
        gbc.writeMem(0xc335, { 0xd1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa63c, gbc.sp());
        EXPECT(0x91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc335));
        // 34 0197
        gbc.setState(0x4f77, 0x1c13, 0x2a50, 0xa1ab, 0xa40, 0xa2ed, 0x1, 0x0);
        gbc.writeMem(0x4f77, { 0x34 });
        gbc.writeMem(0xa2ed, { 0x5a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0x4f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa2ed));
        // 34 0199
        gbc.setState(0x614a, 0xc872, 0x2dc0, 0x2e4e, 0x3197, 0xa03c, 0x0, 0x0);
        gbc.writeMem(0x614a, { 0x34 });
        gbc.writeMem(0xa03c, { 0xdf });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc872, gbc.sp());
        EXPECT(0x614b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa03c));
        // 34 019A
        gbc.setState(0x6b0b, 0x6b3b, 0xa460, 0x6e3a, 0xb8d3, 0xa62c, 0x0, 0x0);
        gbc.writeMem(0x6b0b, { 0x34 });
        gbc.writeMem(0xa62c, { 0xd1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6b3b, gbc.sp());
        EXPECT(0x6b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa62c));
        // 34 019D
        gbc.setState(0xbd66, 0x318e, 0x8750, 0x177, 0x1000, 0xc768, 0x0, 0x0);
        gbc.writeMem(0xbd66, { 0x34 });
        gbc.writeMem(0xc768, { 0xa1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x318e, gbc.sp());
        EXPECT(0xbd67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbd66));
        EXPECT(0xa2, gbc.readMem(0xc768));
        // 34 019E
        gbc.setState(0x5f25, 0x3309, 0x48e0, 0x9f73, 0xc9ec, 0xb5d4, 0x0, 0x1);
        gbc.writeMem(0x5f25, { 0x34 });
        gbc.writeMem(0xb5d4, { 0x99 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3309, gbc.sp());
        EXPECT(0x5f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb5d4));
        // 34 019F
        gbc.setState(0xb52b, 0xd0d4, 0xfc60, 0xd682, 0x34c1, 0xfb70, 0x0, 0x0);
        gbc.writeMem(0xb52b, { 0x34 });
        gbc.writeMem(0xfb70, { 0x4b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd0d4, gbc.sp());
        EXPECT(0xb52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb52b));
        EXPECT(0x4c, gbc.readMem(0xfb70));
        // 34 01A2
        gbc.setState(0x65c8, 0xfb12, 0x2410, 0xa789, 0x626, 0xa3f0, 0x1, 0x1);
        gbc.writeMem(0x65c8, { 0x34 });
        gbc.writeMem(0xa3f0, { 0x5e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfb12, gbc.sp());
        EXPECT(0x65c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xa3f0));
        // 34 01A4
        gbc.setState(0x1ac8, 0x69f2, 0xcf30, 0x4346, 0xd0ba, 0xed59, 0x0, 0x1);
        gbc.writeMem(0x1ac8, { 0x34 });
        gbc.writeMem(0xed59, { 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x69f2, gbc.sp());
        EXPECT(0x1ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xed59));
        // 34 01A6
        gbc.setState(0xa384, 0x1455, 0x230, 0xdd72, 0xef7, 0x8eba, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xba });
        gbc.writeMem(0xa384, { 0x34 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1455, gbc.sp());
        EXPECT(0xa385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8eba));
        EXPECT(0x34, gbc.readMem(0xa384));
        // 34 01A7
        gbc.setState(0xbb7d, 0x1a89, 0x850, 0xbeaf, 0xcd46, 0x9407, 0x1, 0x1);
        gbc.writeMem(0x9407, { 0x2c });
        gbc.writeMem(0xbb7d, { 0x34 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1a89, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9407));
        EXPECT(0x34, gbc.readMem(0xbb7d));
        // 34 01A8
        gbc.setState(0x377d, 0xf292, 0xa920, 0x842c, 0xa734, 0x8abb, 0x1, 0x0);
        gbc.writeMem(0x377d, { 0x34 });
        gbc.writeMem(0x8abb, { 0xf9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf292, gbc.sp());
        EXPECT(0x377e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8abb));
        // 34 01A9
        gbc.setState(0xedae, 0x27df, 0x89d0, 0x61bc, 0x200e, 0xa269, 0x0, 0x1);
        gbc.writeMem(0xa269, { 0x4d });
        gbc.writeMem(0xedae, { 0x34 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x27df, gbc.sp());
        EXPECT(0xedaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa269));
        EXPECT(0x34, gbc.readMem(0xedae));
        // 34 01AA
        gbc.setState(0xbd3, 0x9e43, 0xe0a0, 0x19e4, 0x547a, 0x8d23, 0x0, 0x1);
        gbc.writeMem(0xbd3, { 0x34 });
        gbc.writeMem(0x8d23, { 0xd2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9e43, gbc.sp());
        EXPECT(0xbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x8d23));
        // 34 01AE
        gbc.setState(0xaf34, 0x15a8, 0x8480, 0x30c3, 0xabb4, 0xa3b2, 0x0, 0x1);
        gbc.writeMem(0xa3b2, { 0x98 });
        gbc.writeMem(0xaf34, { 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x15a8, gbc.sp());
        EXPECT(0xaf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa3b2));
        EXPECT(0x34, gbc.readMem(0xaf34));
        // 34 01AF
        gbc.setState(0x39e3, 0x53b1, 0xa0c0, 0xe69b, 0x72e4, 0xf8f1, 0x1, 0x1);
        gbc.writeMem(0x39e3, { 0x34 });
        gbc.writeMem(0xf8f1, { 0xd9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x53b1, gbc.sp());
        EXPECT(0x39e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xf8f1));
        // 34 01B2
        gbc.setState(0xdf2f, 0xc886, 0x4930, 0x4388, 0xcff7, 0x9205, 0x0, 0x1);
        gbc.writeMem(0x9205, { 0x6e });
        gbc.writeMem(0xdf2f, { 0x34 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc886, gbc.sp());
        EXPECT(0xdf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9205));
        EXPECT(0x34, gbc.readMem(0xdf2f));
        // 34 01B3
        gbc.setState(0xb059, 0x31eb, 0x4a90, 0xc1fd, 0x3e37, 0x8ae1, 0x0, 0x1);
        gbc.writeMem(0x8ae1, { 0x81 });
        gbc.writeMem(0xb059, { 0x34 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x31eb, gbc.sp());
        EXPECT(0xb05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8ae1));
        EXPECT(0x34, gbc.readMem(0xb059));
        // 34 01B4
        gbc.setState(0xd33f, 0xb48c, 0xb6d0, 0xd13a, 0x80ca, 0xf47e, 0x0, 0x1);
        gbc.writeMem(0xd33f, { 0x34 });
        gbc.writeMem(0xf47e, { 0xae });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb48c, gbc.sp());
        EXPECT(0xd340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd33f));
        EXPECT(0xaf, gbc.readMem(0xf47e));
        // 34 01B5
        gbc.setState(0x6896, 0x9fa0, 0x6320, 0x13c0, 0x8302, 0xae86, 0x1, 0x1);
        gbc.writeMem(0x6896, { 0x34 });
        gbc.writeMem(0xae86, { 0x74 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9fa0, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xae86));
        // 34 01B6
        gbc.setState(0xb64, 0x3970, 0x65a0, 0xb2ed, 0xc964, 0xcc21, 0x0, 0x1);
        gbc.writeMem(0xb64, { 0x34 });
        gbc.writeMem(0xcc21, { 0x9a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3970, gbc.sp());
        EXPECT(0xb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcc21));
        // 34 01B7
        gbc.setState(0x6214, 0x5792, 0x7660, 0xaf6a, 0x8cbe, 0xf420, 0x1, 0x1);
        gbc.writeMem(0x6214, { 0x34 });
        gbc.writeMem(0xf420, { 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5792, gbc.sp());
        EXPECT(0x6215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xf420));
        // 34 01B8
        gbc.setState(0xddcd, 0xfba4, 0x55d0, 0x30fd, 0xe77b, 0xf6e1, 0x0, 0x0);
        gbc.writeMem(0xddcd, { 0x34 });
        gbc.writeMem(0xf6e1, { 0x58 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfba4, gbc.sp());
        EXPECT(0xddce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xddcd));
        EXPECT(0x59, gbc.readMem(0xf6e1));
        // 34 01B9
        gbc.setState(0x18d2, 0x1112, 0x5850, 0x146e, 0xa359, 0xda3a, 0x0, 0x0);
        gbc.writeMem(0x18d2, { 0x34 });
        gbc.writeMem(0xda3a, { 0x68 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1112, gbc.sp());
        EXPECT(0x18d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xda3a));
        // 34 01BA
        gbc.setState(0xbb8f, 0x8dfd, 0x34d0, 0x9d54, 0xf41c, 0xea44, 0x1, 0x0);
        gbc.writeMem(0xbb8f, { 0x34 });
        gbc.writeMem(0xea44, { 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8dfd, gbc.sp());
        EXPECT(0xbb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbb8f));
        EXPECT(0xf2, gbc.readMem(0xea44));
        // 34 01BC
        gbc.setState(0x37d9, 0x843d, 0xb6d0, 0x2353, 0x74fa, 0x886a, 0x1, 0x0);
        gbc.writeMem(0x37d9, { 0x34 });
        gbc.writeMem(0x886a, { 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x843d, gbc.sp());
        EXPECT(0x37da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x886a));
        // 34 01BD
        gbc.setState(0x7acf, 0x3e3a, 0xe950, 0x657d, 0x1d91, 0xf886, 0x1, 0x0);
        gbc.writeMem(0x7acf, { 0x34 });
        gbc.writeMem(0xf886, { 0x84 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3e3a, gbc.sp());
        EXPECT(0x7ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf886));
        // 34 01BE
        gbc.setState(0x21bd, 0x987f, 0x4d0, 0x1c8b, 0x834a, 0xcf47, 0x0, 0x1);
        gbc.writeMem(0x21bd, { 0x34 });
        gbc.writeMem(0xcf47, { 0xfb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x987f, gbc.sp());
        EXPECT(0x21be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xcf47));
        // 34 01C2
        gbc.setState(0x9155, 0x4a58, 0x1f00, 0x46fb, 0xd373, 0xa770, 0x1, 0x1);
        gbc.writeMem(0x9155, { 0x34 });
        gbc.writeMem(0xa770, { 0x69 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4a58, gbc.sp());
        EXPECT(0x9156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9155));
        EXPECT(0x6a, gbc.readMem(0xa770));
        // 34 01C4
        gbc.setState(0x7527, 0x6d14, 0x840, 0x6327, 0x5402, 0x8568, 0x1, 0x0);
        gbc.writeMem(0x7527, { 0x34 });
        gbc.writeMem(0x8568, { 0x23 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6d14, gbc.sp());
        EXPECT(0x7528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8568));
        // 34 01C5
        gbc.setState(0xa96e, 0xdb83, 0xa420, 0xaa70, 0xfe33, 0xb02a, 0x1, 0x0);
        gbc.writeMem(0xa96e, { 0x34 });
        gbc.writeMem(0xb02a, { 0x29 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdb83, gbc.sp());
        EXPECT(0xa96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa96e));
        EXPECT(0x2a, gbc.readMem(0xb02a));
        // 34 01C6
        gbc.setState(0x8f00, 0x26bb, 0x5400, 0x2af0, 0x1a91, 0x868f, 0x1, 0x1);
        gbc.writeMem(0x868f, { 0xb });
        gbc.writeMem(0x8f00, { 0x34 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x26bb, gbc.sp());
        EXPECT(0x8f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x868f));
        EXPECT(0x34, gbc.readMem(0x8f00));
        // 34 01C7
        gbc.setState(0x322f, 0xf857, 0xf150, 0x5578, 0x53c5, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x322f, { 0x34 });
        gbc.writeMem(0xf5fb, { 0x13 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf857, gbc.sp());
        EXPECT(0x3230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xf5fb));
        // 34 01C9
        gbc.setState(0xe395, 0x1206, 0x3050, 0xe95a, 0x5693, 0x8c29, 0x1, 0x0);
        gbc.writeMem(0x8c29, { 0xd9 });
        gbc.writeMem(0xe395, { 0x34 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1206, gbc.sp());
        EXPECT(0xe396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8c29));
        EXPECT(0x34, gbc.readMem(0xe395));
        // 34 01CC
        gbc.setState(0x6d20, 0x505d, 0x8000, 0x2f3e, 0x2384, 0x9ae8, 0x0, 0x0);
        gbc.writeMem(0x6d20, { 0x34 });
        gbc.writeMem(0x9ae8, { 0xbc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x505d, gbc.sp());
        EXPECT(0x6d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9ae8));
        // 34 01CD
        gbc.setState(0x348a, 0x605a, 0x8d60, 0xaec, 0x2ac6, 0x82ad, 0x1, 0x1);
        gbc.writeMem(0x348a, { 0x34 });
        gbc.writeMem(0x82ad, { 0xef });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x605a, gbc.sp());
        EXPECT(0x348b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x82ad));
        // 34 01D0
        gbc.setState(0xe176, 0x4cba, 0x5ef0, 0xcb9a, 0x87a5, 0xc577, 0x1, 0x0);
        gbc.writeMem(0xc577, { 0x9a });
        gbc.writeMem(0xe176, { 0x34 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4cba, gbc.sp());
        EXPECT(0xe177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc577));
        EXPECT(0x34, gbc.readMem(0xe176));
        // 34 01D1
        gbc.setState(0x20c1, 0xd9db, 0x8bd0, 0x390f, 0x6947, 0x838e, 0x1, 0x0);
        gbc.writeMem(0x20c1, { 0x34 });
        gbc.writeMem(0x838e, { 0x16 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd9db, gbc.sp());
        EXPECT(0x20c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x838e));
        // 34 01D3
        gbc.setState(0x2816, 0x260d, 0xc4b0, 0x6652, 0x20bc, 0x8a56, 0x1, 0x1);
        gbc.writeMem(0x2816, { 0x34 });
        gbc.writeMem(0x8a56, { 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x260d, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8a56));
        // 34 01D6
        gbc.setState(0xbdc0, 0x4048, 0x23f0, 0x3f87, 0x1a1a, 0xdc25, 0x1, 0x0);
        gbc.writeMem(0xbdc0, { 0x34 });
        gbc.writeMem(0xdc25, { 0x58 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4048, gbc.sp());
        EXPECT(0xbdc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbdc0));
        EXPECT(0x59, gbc.readMem(0xdc25));
        // 34 01D8
        gbc.setState(0x952f, 0x11c6, 0x82b0, 0x6e07, 0xc6a3, 0xa635, 0x1, 0x0);
        gbc.writeMem(0x952f, { 0x34 });
        gbc.writeMem(0xa635, { 0x7f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x11c6, gbc.sp());
        EXPECT(0x9530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x952f));
        EXPECT(0x80, gbc.readMem(0xa635));
        // 34 01D9
        gbc.setState(0x90d0, 0x7264, 0x9e00, 0x3699, 0xd862, 0x9128, 0x0, 0x0);
        gbc.writeMem(0x90d0, { 0x34 });
        gbc.writeMem(0x9128, { 0xb5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7264, gbc.sp());
        EXPECT(0x90d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x90d0));
        EXPECT(0xb6, gbc.readMem(0x9128));
        // 34 01DE
        gbc.setState(0x4829, 0x8faa, 0xfb50, 0xba2a, 0x7d9b, 0x9ba5, 0x1, 0x0);
        gbc.writeMem(0x4829, { 0x34 });
        gbc.writeMem(0x9ba5, { 0x59 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0x482a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9ba5));
        // 34 01DF
        gbc.setState(0x8503, 0x988d, 0xbe50, 0xbf83, 0x4030, 0xfcb0, 0x0, 0x0);
        gbc.writeMem(0x8503, { 0x34 });
        gbc.writeMem(0xfcb0, { 0x87 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x988d, gbc.sp());
        EXPECT(0x8504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8503));
        EXPECT(0x88, gbc.readMem(0xfcb0));
        // 34 01E0
        gbc.setState(0x6014, 0x7a27, 0xef00, 0x1ed7, 0xfff0, 0xbc4c, 0x1, 0x0);
        gbc.writeMem(0x6014, { 0x34 });
        gbc.writeMem(0xbc4c, { 0xdd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7a27, gbc.sp());
        EXPECT(0x6015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xbc4c));
        // 34 01E1
        gbc.setState(0x7f6d, 0xff4c, 0xff50, 0x1539, 0x8f3c, 0x8b68, 0x1, 0x0);
        gbc.writeMem(0x7f6d, { 0x34 });
        gbc.writeMem(0x8b68, { 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x7f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x8b68));
        // 34 01E4
        gbc.setState(0x6fc6, 0x9db7, 0x8170, 0x6127, 0xb8f1, 0xf5c0, 0x0, 0x1);
        gbc.writeMem(0x6fc6, { 0x34 });
        gbc.writeMem(0xf5c0, { 0x3d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9db7, gbc.sp());
        EXPECT(0x6fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xf5c0));
        // 34 01E5
        gbc.setState(0xa115, 0x4677, 0x9360, 0x6007, 0x5026, 0xc60a, 0x0, 0x1);
        gbc.writeMem(0xa115, { 0x34 });
        gbc.writeMem(0xc60a, { 0xa1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4677, gbc.sp());
        EXPECT(0xa116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa115));
        EXPECT(0xa2, gbc.readMem(0xc60a));
        // 34 01E6
        gbc.setState(0x620e, 0x1584, 0xeb0, 0x4530, 0xdce2, 0xc3de, 0x1, 0x1);
        gbc.writeMem(0x620e, { 0x34 });
        gbc.writeMem(0xc3de, { 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1584, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc3de));
        // 34 01E7
        gbc.setState(0x35da, 0x7de6, 0xa720, 0x12e7, 0x28af, 0xfd7d, 0x0, 0x0);
        gbc.writeMem(0x35da, { 0x34 });
        gbc.writeMem(0xfd7d, { 0x8e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7de6, gbc.sp());
        EXPECT(0x35db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xfd7d));
        // 34 01E8
        gbc.setState(0x6f9c, 0x81cd, 0x8180, 0xb3de, 0x5514, 0x88d1, 0x0, 0x0);
        gbc.writeMem(0x6f9c, { 0x34 });
        gbc.writeMem(0x88d1, { 0xd4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x81cd, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x88d1));
        // 34 01EA
        gbc.setState(0xa937, 0x9f88, 0x49f0, 0xfdb5, 0x95bd, 0x8d5e, 0x0, 0x0);
        gbc.writeMem(0x8d5e, { 0x17 });
        gbc.writeMem(0xa937, { 0x34 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9f88, gbc.sp());
        EXPECT(0xa938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x8d5e));
        EXPECT(0x34, gbc.readMem(0xa937));
        // 34 01EC
        gbc.setState(0x92e3, 0x8699, 0xef50, 0xd2d8, 0x275d, 0xa75b, 0x1, 0x0);
        gbc.writeMem(0x92e3, { 0x34 });
        gbc.writeMem(0xa75b, { 0xf6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8699, gbc.sp());
        EXPECT(0x92e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x92e3));
        EXPECT(0xf7, gbc.readMem(0xa75b));
        // 34 01EE
        gbc.setState(0x9a4, 0x9a10, 0xda10, 0x1326, 0x2c42, 0xa887, 0x1, 0x0);
        gbc.writeMem(0x9a4, { 0x34 });
        gbc.writeMem(0xa887, { 0xa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9a10, gbc.sp());
        EXPECT(0x9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa887));
        // 34 01EF
        gbc.setState(0xbd81, 0xcd03, 0xe060, 0x5b3, 0xe698, 0x9310, 0x1, 0x0);
        gbc.writeMem(0x9310, { 0x75 });
        gbc.writeMem(0xbd81, { 0x34 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcd03, gbc.sp());
        EXPECT(0xbd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9310));
        EXPECT(0x34, gbc.readMem(0xbd81));
        // 34 01F2
        gbc.setState(0x562d, 0x5a1e, 0xbcd0, 0x5f28, 0x14c5, 0xe309, 0x1, 0x0);
        gbc.writeMem(0x562d, { 0x34 });
        gbc.writeMem(0xe309, { 0x5e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5a1e, gbc.sp());
        EXPECT(0x562e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xe309));
        // 34 01F3
        gbc.setState(0x68ac, 0x342e, 0xd8e0, 0xff5c, 0x110e, 0xd261, 0x0, 0x0);
        gbc.writeMem(0x68ac, { 0x34 });
        gbc.writeMem(0xd261, { 0x60 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x68ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd261));
        // 34 01F5
        gbc.setState(0xbc8e, 0x35fe, 0xd570, 0x9921, 0x9bab, 0xe000, 0x0, 0x1);
        gbc.writeMem(0xbc8e, { 0x34 });
        gbc.writeMem(0xe000, { 0x17 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x35fe, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbc8e));
        EXPECT(0x18, gbc.readMem(0xe000));
        // 34 01F6
        gbc.setState(0xe678, 0x4b37, 0xe980, 0xe4be, 0x8d22, 0xcfeb, 0x1, 0x1);
        gbc.writeMem(0xcfeb, { 0x30 });
        gbc.writeMem(0xe678, { 0x34 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4b37, gbc.sp());
        EXPECT(0xe679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcfeb));
        EXPECT(0x34, gbc.readMem(0xe678));
        // 34 01F8
        gbc.setState(0xacdc, 0x96cb, 0xb7b0, 0x8ea0, 0xc9ef, 0xede3, 0x1, 0x1);
        gbc.writeMem(0xacdc, { 0x34 });
        gbc.writeMem(0xede3, { 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x96cb, gbc.sp());
        EXPECT(0xacdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xacdc));
        EXPECT(0x89, gbc.readMem(0xede3));
        // 34 01FA
        gbc.setState(0xb9a0, 0x7194, 0xff0, 0x59cb, 0x2fb9, 0xac80, 0x0, 0x0);
        gbc.writeMem(0xac80, { 0xd5 });
        gbc.writeMem(0xb9a0, { 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7194, gbc.sp());
        EXPECT(0xb9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xac80));
        EXPECT(0x34, gbc.readMem(0xb9a0));
        // 34 01FC
        gbc.setState(0xbd7c, 0x2260, 0x2520, 0xdc21, 0xde31, 0xed25, 0x1, 0x1);
        gbc.writeMem(0xbd7c, { 0x34 });
        gbc.writeMem(0xed25, { 0xa6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0xbd7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbd7c));
        EXPECT(0xa7, gbc.readMem(0xed25));
        // 34 01FD
        gbc.setState(0x2894, 0xf943, 0xae40, 0xf7b6, 0x13be, 0xbff6, 0x1, 0x0);
        gbc.writeMem(0x2894, { 0x34 });
        gbc.writeMem(0xbff6, { 0x62 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf943, gbc.sp());
        EXPECT(0x2895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xbff6));
        // 34 01FF
        gbc.setState(0xb8f9, 0x7fc3, 0x8040, 0xf4af, 0x4cf3, 0x83da, 0x0, 0x1);
        gbc.writeMem(0x83da, { 0x20 });
        gbc.writeMem(0xb8f9, { 0x34 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7fc3, gbc.sp());
        EXPECT(0xb8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x83da));
        EXPECT(0x34, gbc.readMem(0xb8f9));
        // 34 0202
        gbc.setState(0xcd58, 0xbca4, 0xbbf0, 0xb76e, 0x1cf7, 0xe4ab, 0x1, 0x0);
        gbc.writeMem(0xcd58, { 0x34 });
        gbc.writeMem(0xe4ab, { 0x83 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbca4, gbc.sp());
        EXPECT(0xcd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcd58));
        EXPECT(0x84, gbc.readMem(0xe4ab));
        // 34 0203
        gbc.setState(0x540c, 0xc0e7, 0xaed0, 0xf17, 0xefe4, 0xbf44, 0x0, 0x0);
        gbc.writeMem(0x540c, { 0x34 });
        gbc.writeMem(0xbf44, { 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc0e7, gbc.sp());
        EXPECT(0x540d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xbf44));
        // 34 0205
        gbc.setState(0x9120, 0x592a, 0x7a30, 0x4ea8, 0xd0e6, 0xaf73, 0x1, 0x1);
        gbc.writeMem(0x9120, { 0x34 });
        gbc.writeMem(0xaf73, { 0xff });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x592a, gbc.sp());
        EXPECT(0x9121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9120));
        EXPECT(0x0, gbc.readMem(0xaf73));
        // 34 0206
        gbc.setState(0xbb4c, 0x7ad7, 0xd610, 0xd939, 0xab4b, 0xa97c, 0x1, 0x1);
        gbc.writeMem(0xa97c, { 0x6c });
        gbc.writeMem(0xbb4c, { 0x34 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0xbb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa97c));
        EXPECT(0x34, gbc.readMem(0xbb4c));
        // 34 0207
        gbc.setState(0x293d, 0x48db, 0x8860, 0x79f2, 0xe329, 0xa060, 0x1, 0x0);
        gbc.writeMem(0x293d, { 0x34 });
        gbc.writeMem(0xa060, { 0x16 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x48db, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa060));
        // 34 0208
        gbc.setState(0xd9a5, 0x52, 0xb4d0, 0x66f1, 0x45ee, 0xeb72, 0x1, 0x0);
        gbc.writeMem(0xd9a5, { 0x34 });
        gbc.writeMem(0xeb72, { 0x52 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x52, gbc.sp());
        EXPECT(0xd9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd9a5));
        EXPECT(0x53, gbc.readMem(0xeb72));
        // 34 0209
        gbc.setState(0x3699, 0xcb08, 0x6400, 0x6fa, 0xb4f1, 0xaa3e, 0x1, 0x1);
        gbc.writeMem(0x3699, { 0x34 });
        gbc.writeMem(0xaa3e, { 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcb08, gbc.sp());
        EXPECT(0x369a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaa3e));
        // 34 020A
        gbc.setState(0x824f, 0x976f, 0x8490, 0x7169, 0xbf3c, 0xe3e9, 0x0, 0x0);
        gbc.writeMem(0x824f, { 0x34 });
        gbc.writeMem(0xe3e9, { 0x50 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x976f, gbc.sp());
        EXPECT(0x8250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x824f));
        EXPECT(0x51, gbc.readMem(0xe3e9));
        // 34 020B
        gbc.setState(0x26cc, 0x4c66, 0x96e0, 0x6186, 0x3c8a, 0xa667, 0x0, 0x1);
        gbc.writeMem(0x26cc, { 0x34 });
        gbc.writeMem(0xa667, { 0x54 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0x26cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa667));
        // 34 020F
        gbc.setState(0xe225, 0x5050, 0xf5c0, 0x279c, 0xed6, 0xc394, 0x1, 0x1);
        gbc.writeMem(0xc394, { 0xad });
        gbc.writeMem(0xe225, { 0x34 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5050, gbc.sp());
        EXPECT(0xe226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc394));
        EXPECT(0x34, gbc.readMem(0xe225));
        // 34 0213
        gbc.setState(0xc763, 0x9e87, 0x8f00, 0x770f, 0xd85d, 0x86c3, 0x1, 0x0);
        gbc.writeMem(0x86c3, { 0xbd });
        gbc.writeMem(0xc763, { 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9e87, gbc.sp());
        EXPECT(0xc764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x86c3));
        EXPECT(0x34, gbc.readMem(0xc763));
        // 34 0214
        gbc.setState(0xd164, 0x70a8, 0x30e0, 0x5c74, 0x7c25, 0x8d12, 0x0, 0x1);
        gbc.writeMem(0x8d12, { 0x31 });
        gbc.writeMem(0xd164, { 0x34 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x70a8, gbc.sp());
        EXPECT(0xd165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8d12));
        EXPECT(0x34, gbc.readMem(0xd164));
        // 34 0215
        gbc.setState(0x7e2a, 0x378, 0xebc0, 0xfb3e, 0x9774, 0xfacd, 0x0, 0x1);
        gbc.writeMem(0x7e2a, { 0x34 });
        gbc.writeMem(0xfacd, { 0xfe });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x378, gbc.sp());
        EXPECT(0x7e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xfacd));
        // 34 0217
        gbc.setState(0xefcf, 0x8bdf, 0x1d0, 0x961c, 0xe98b, 0x96c9, 0x0, 0x1);
        gbc.writeMem(0x96c9, { 0xa3 });
        gbc.writeMem(0xefcf, { 0x34 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8bdf, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x96c9));
        EXPECT(0x34, gbc.readMem(0xefcf));
        // 34 0219
        gbc.setState(0x5c15, 0x29a1, 0x9f70, 0xb900, 0x326c, 0xfa8a, 0x1, 0x0);
        gbc.writeMem(0x5c15, { 0x34 });
        gbc.writeMem(0xfa8a, { 0xe4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x29a1, gbc.sp());
        EXPECT(0x5c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xfa8a));
        // 34 021D
        gbc.setState(0xc26, 0x7406, 0xdba0, 0x50f3, 0x8386, 0xb900, 0x1, 0x1);
        gbc.writeMem(0xc26, { 0x34 });
        gbc.writeMem(0xb900, { 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7406, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb900));
        // 34 0221
        gbc.setState(0x8dfe, 0x6dff, 0xe5e0, 0x667d, 0x947f, 0xe73d, 0x0, 0x0);
        gbc.writeMem(0x8dfe, { 0x34 });
        gbc.writeMem(0xe73d, { 0x36 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6dff, gbc.sp());
        EXPECT(0x8dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8dfe));
        EXPECT(0x37, gbc.readMem(0xe73d));
        // 34 0223
        gbc.setState(0x77c5, 0x5f96, 0x4010, 0xec3a, 0x6241, 0xf14c, 0x1, 0x1);
        gbc.writeMem(0x77c5, { 0x34 });
        gbc.writeMem(0xf14c, { 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5f96, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf14c));
        // 34 0224
        gbc.setState(0xd4b9, 0xf1a9, 0xa4d0, 0x27, 0x7d50, 0xa47d, 0x1, 0x0);
        gbc.writeMem(0xa47d, { 0x86 });
        gbc.writeMem(0xd4b9, { 0x34 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0xd4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa47d));
        EXPECT(0x34, gbc.readMem(0xd4b9));
        // 34 0226
        gbc.setState(0x59f2, 0xf12a, 0x3250, 0xdf98, 0x8ccb, 0xfe8a, 0x1, 0x0);
        gbc.writeMem(0x59f2, { 0x34 });
        gbc.writeMem(0xfe8a, { 0xf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf12a, gbc.sp());
        EXPECT(0x59f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xfe8a));
        // 34 0229
        gbc.setState(0x3704, 0x2ce6, 0xbc60, 0xf6d6, 0xeb8c, 0xed6f, 0x0, 0x1);
        gbc.writeMem(0x3704, { 0x34 });
        gbc.writeMem(0xed6f, { 0x9a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ce6, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xed6f));
        // 34 022D
        gbc.setState(0xc860, 0x2272, 0xd3a0, 0x5697, 0xa7de, 0xc4ee, 0x0, 0x1);
        gbc.writeMem(0xc4ee, { 0x71 });
        gbc.writeMem(0xc860, { 0x34 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2272, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc4ee));
        EXPECT(0x34, gbc.readMem(0xc860));
        // 34 022F
        gbc.setState(0xc80d, 0xd5bb, 0xcfa0, 0x4cbb, 0xab3f, 0xb809, 0x0, 0x1);
        gbc.writeMem(0xb809, { 0xa6 });
        gbc.writeMem(0xc80d, { 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb809));
        EXPECT(0x34, gbc.readMem(0xc80d));
        // 34 0232
        gbc.setState(0x7614, 0xcef8, 0x8640, 0xf5d9, 0x4e09, 0xafd4, 0x1, 0x0);
        gbc.writeMem(0x7614, { 0x34 });
        gbc.writeMem(0xafd4, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcef8, gbc.sp());
        EXPECT(0x7615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xafd4));
        // 34 0237
        gbc.setState(0xd119, 0x96e4, 0x58f0, 0x5c7, 0xf0f7, 0x82e5, 0x0, 0x1);
        gbc.writeMem(0x82e5, { 0x0 });
        gbc.writeMem(0xd119, { 0x34 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x96e4, gbc.sp());
        EXPECT(0xd11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x82e5));
        EXPECT(0x34, gbc.readMem(0xd119));
        // 34 0239
        gbc.setState(0xbde2, 0x1489, 0x2f50, 0xbed6, 0xb3bb, 0xe345, 0x1, 0x1);
        gbc.writeMem(0xbde2, { 0x34 });
        gbc.writeMem(0xe345, { 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1489, gbc.sp());
        EXPECT(0xbde3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbde2));
        EXPECT(0x1b, gbc.readMem(0xe345));
        // 34 023B
        gbc.setState(0x211b, 0xc813, 0xdf40, 0xa3b4, 0x4f92, 0x8d9c, 0x0, 0x1);
        gbc.writeMem(0x211b, { 0x34 });
        gbc.writeMem(0x8d9c, { 0xab });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc813, gbc.sp());
        EXPECT(0x211c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8d9c));
        // 34 023E
        gbc.setState(0x2025, 0xebf5, 0xaa80, 0xdb78, 0x84b2, 0xee5b, 0x1, 0x1);
        gbc.writeMem(0x2025, { 0x34 });
        gbc.writeMem(0xee5b, { 0x9f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xebf5, gbc.sp());
        EXPECT(0x2026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xee5b));
        // 34 0240
        gbc.setState(0x500f, 0xaf53, 0xff80, 0x790, 0xaf90, 0xcd06, 0x1, 0x1);
        gbc.writeMem(0x500f, { 0x34 });
        gbc.writeMem(0xcd06, { 0x19 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaf53, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcd06));
        // 34 0243
        gbc.setState(0xb2be, 0xf263, 0xe080, 0xb0cd, 0x5078, 0x9334, 0x0, 0x0);
        gbc.writeMem(0x9334, { 0x50 });
        gbc.writeMem(0xb2be, { 0x34 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf263, gbc.sp());
        EXPECT(0xb2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9334));
        EXPECT(0x34, gbc.readMem(0xb2be));
        // 34 0247
        gbc.setState(0x448d, 0xeb49, 0xe340, 0x3e66, 0x3ae6, 0xa99b, 0x1, 0x1);
        gbc.writeMem(0x448d, { 0x34 });
        gbc.writeMem(0xa99b, { 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeb49, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa99b));
        // 34 024A
        gbc.setState(0xea9, 0xd0cf, 0x66d0, 0x594f, 0x6c0a, 0xe4b7, 0x0, 0x0);
        gbc.writeMem(0xea9, { 0x34 });
        gbc.writeMem(0xe4b7, { 0x46 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd0cf, gbc.sp());
        EXPECT(0xeaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe4b7));
        // 34 024B
        gbc.setState(0xd251, 0x9228, 0x20e0, 0x1a9e, 0xf4bf, 0xa49b, 0x0, 0x1);
        gbc.writeMem(0xa49b, { 0x88 });
        gbc.writeMem(0xd251, { 0x34 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9228, gbc.sp());
        EXPECT(0xd252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa49b));
        EXPECT(0x34, gbc.readMem(0xd251));
        // 34 024C
        gbc.setState(0xdf15, 0x3c80, 0x45d0, 0xddaf, 0xe93d, 0xf822, 0x0, 0x1);
        gbc.writeMem(0xdf15, { 0x34 });
        gbc.writeMem(0xf822, { 0x86 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c80, gbc.sp());
        EXPECT(0xdf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xdf15));
        EXPECT(0x87, gbc.readMem(0xf822));
        // 34 024D
        gbc.setState(0xc6ee, 0x7b4, 0x79b0, 0x58ca, 0x3016, 0xb46c, 0x0, 0x0);
        gbc.writeMem(0xb46c, { 0xbb });
        gbc.writeMem(0xc6ee, { 0x34 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7b4, gbc.sp());
        EXPECT(0xc6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb46c));
        EXPECT(0x34, gbc.readMem(0xc6ee));
        // 34 024E
        gbc.setState(0xc1aa, 0x667e, 0x6ae0, 0xff3, 0xc3ab, 0xc296, 0x1, 0x1);
        gbc.writeMem(0xc1aa, { 0x34 });
        gbc.writeMem(0xc296, { 0x31 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x667e, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc1aa));
        EXPECT(0x32, gbc.readMem(0xc296));
        // 34 0250
        gbc.setState(0x39a2, 0x2902, 0xc7f0, 0x5269, 0x61f4, 0xf9fa, 0x0, 0x1);
        gbc.writeMem(0x39a2, { 0x34 });
        gbc.writeMem(0xf9fa, { 0x4a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2902, gbc.sp());
        EXPECT(0x39a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xf9fa));
        // 34 0253
        gbc.setState(0xeacd, 0x52e, 0x5280, 0x2298, 0xcdc4, 0xb4d1, 0x0, 0x0);
        gbc.writeMem(0xb4d1, { 0xef });
        gbc.writeMem(0xeacd, { 0x34 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x52e, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb4d1));
        EXPECT(0x34, gbc.readMem(0xeacd));
        // 34 0255
        gbc.setState(0xbb5e, 0x2955, 0x5af0, 0x8b1f, 0xa967, 0xd1e8, 0x1, 0x1);
        gbc.writeMem(0xbb5e, { 0x34 });
        gbc.writeMem(0xd1e8, { 0x77 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2955, gbc.sp());
        EXPECT(0xbb5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbb5e));
        EXPECT(0x78, gbc.readMem(0xd1e8));
        // 34 0257
        gbc.setState(0x56c2, 0x6263, 0x8340, 0xdc4e, 0xa6e4, 0xe025, 0x0, 0x1);
        gbc.writeMem(0x56c2, { 0x34 });
        gbc.writeMem(0xe025, { 0x78 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6263, gbc.sp());
        EXPECT(0x56c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe025));
        // 34 0259
        gbc.setState(0xa83e, 0x9024, 0xc230, 0x7f44, 0xf8e4, 0x9d78, 0x0, 0x1);
        gbc.writeMem(0x9d78, { 0x5 });
        gbc.writeMem(0xa83e, { 0x34 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9024, gbc.sp());
        EXPECT(0xa83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9d78));
        EXPECT(0x34, gbc.readMem(0xa83e));
        // 34 0260
        gbc.setState(0x3221, 0xe919, 0x71e0, 0xf42c, 0xab7a, 0xaaf7, 0x1, 0x1);
        gbc.writeMem(0x3221, { 0x34 });
        gbc.writeMem(0xaaf7, { 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe919, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xaaf7));
        // 34 0265
        gbc.setState(0xe47b, 0xae4e, 0x83a0, 0xd68, 0xe126, 0x9e40, 0x1, 0x1);
        gbc.writeMem(0x9e40, { 0xe7 });
        gbc.writeMem(0xe47b, { 0x34 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xae4e, gbc.sp());
        EXPECT(0xe47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x9e40));
        EXPECT(0x34, gbc.readMem(0xe47b));
        // 34 0266
        gbc.setState(0x6332, 0x5241, 0xc000, 0x7780, 0xd80, 0xf928, 0x1, 0x0);
        gbc.writeMem(0x6332, { 0x34 });
        gbc.writeMem(0xf928, { 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5241, gbc.sp());
        EXPECT(0x6333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf928));
        // 34 0269
        gbc.setState(0x930d, 0xaa01, 0xa4f0, 0xf1a8, 0xe2af, 0xd38a, 0x1, 0x0);
        gbc.writeMem(0x930d, { 0x34 });
        gbc.writeMem(0xd38a, { 0xef });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaa01, gbc.sp());
        EXPECT(0x930e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x930d));
        EXPECT(0xf0, gbc.readMem(0xd38a));
        // 34 026B
        gbc.setState(0x52a7, 0x55c1, 0x2fb0, 0x1ac4, 0x8b9c, 0xcc06, 0x1, 0x0);
        gbc.writeMem(0x52a7, { 0x34 });
        gbc.writeMem(0xcc06, { 0xfe });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x55c1, gbc.sp());
        EXPECT(0x52a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcc06));
        // 34 026D
        gbc.setState(0xba94, 0x5026, 0xff80, 0x297, 0x35b, 0xf73a, 0x0, 0x0);
        gbc.writeMem(0xba94, { 0x34 });
        gbc.writeMem(0xf73a, { 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5026, gbc.sp());
        EXPECT(0xba95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xba94));
        EXPECT(0x49, gbc.readMem(0xf73a));
        // 34 0270
        gbc.setState(0xe1b9, 0x8af4, 0x5990, 0x6cd5, 0xa06f, 0xa0ee, 0x1, 0x1);
        gbc.writeMem(0xa0ee, { 0xbc });
        gbc.writeMem(0xe1b9, { 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8af4, gbc.sp());
        EXPECT(0xe1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa0ee));
        EXPECT(0x34, gbc.readMem(0xe1b9));
        // 34 0271
        gbc.setState(0xb472, 0x503d, 0xb8d0, 0x2120, 0xa174, 0xd5ea, 0x1, 0x0);
        gbc.writeMem(0xb472, { 0x34 });
        gbc.writeMem(0xd5ea, { 0xfd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x503d, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb472));
        EXPECT(0xfe, gbc.readMem(0xd5ea));
        // 34 0276
        gbc.setState(0x32c4, 0xdccd, 0xca90, 0x4d04, 0x885d, 0xdf4e, 0x1, 0x1);
        gbc.writeMem(0x32c4, { 0x34 });
        gbc.writeMem(0xdf4e, { 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdccd, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xdf4e));
        // 34 0279
        gbc.setState(0x57f7, 0xd73d, 0x5c30, 0x427d, 0x693a, 0x9fdd, 0x0, 0x1);
        gbc.writeMem(0x57f7, { 0x34 });
        gbc.writeMem(0x9fdd, { 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd73d, gbc.sp());
        EXPECT(0x57f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9fdd));
        // 34 027B
        gbc.setState(0x22eb, 0x60c0, 0xcac0, 0xe07, 0x47b3, 0xcae8, 0x0, 0x0);
        gbc.writeMem(0x22eb, { 0x34 });
        gbc.writeMem(0xcae8, { 0x87 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x60c0, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcae8));
        // 34 027C
        gbc.setState(0xce00, 0xd3cd, 0xde40, 0xb878, 0x8dc2, 0x8ac9, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0x8 });
        gbc.writeMem(0xce00, { 0x34 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd3cd, gbc.sp());
        EXPECT(0xce01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8ac9));
        EXPECT(0x34, gbc.readMem(0xce00));
        // 34 027D
        gbc.setState(0x5d85, 0xc0bc, 0xd320, 0x34a2, 0xd6a1, 0xb2be, 0x0, 0x1);
        gbc.writeMem(0x5d85, { 0x34 });
        gbc.writeMem(0xb2be, { 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc0bc, gbc.sp());
        EXPECT(0x5d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb2be));
        // 34 027E
        gbc.setState(0xa942, 0xd31f, 0x3d10, 0xb880, 0x395d, 0x89d3, 0x1, 0x1);
        gbc.writeMem(0x89d3, { 0x20 });
        gbc.writeMem(0xa942, { 0x34 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd31f, gbc.sp());
        EXPECT(0xa943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x89d3));
        EXPECT(0x34, gbc.readMem(0xa942));
        // 34 027F
        gbc.setState(0x4a87, 0xa49f, 0x9850, 0xdf3a, 0xaaac, 0x909d, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0x34 });
        gbc.writeMem(0x909d, { 0xd7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa49f, gbc.sp());
        EXPECT(0x4a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x909d));
        // 34 0280
        gbc.setState(0x7b3e, 0xe304, 0xd930, 0x122d, 0x27fb, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0x7b3e, { 0x34 });
        gbc.writeMem(0x8c30, { 0x73 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe304, gbc.sp());
        EXPECT(0x7b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8c30));
        // 34 0282
        gbc.setState(0xe1b0, 0x18a8, 0x8720, 0x1724, 0x6ec4, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0x91ff, { 0xb9 });
        gbc.writeMem(0xe1b0, { 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x18a8, gbc.sp());
        EXPECT(0xe1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x91ff));
        EXPECT(0x34, gbc.readMem(0xe1b0));
        // 34 0283
        gbc.setState(0x7635, 0xe803, 0x7330, 0x247e, 0x6e64, 0xd19f, 0x0, 0x0);
        gbc.writeMem(0x7635, { 0x34 });
        gbc.writeMem(0xd19f, { 0x45 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd19f));
        // 34 0289
        gbc.setState(0x3079, 0xf3dd, 0xcda0, 0xd28f, 0x6c9e, 0xbf5b, 0x0, 0x1);
        gbc.writeMem(0x3079, { 0x34 });
        gbc.writeMem(0xbf5b, { 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0x307a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xbf5b));
        // 34 028E
        gbc.setState(0x133b, 0x99ae, 0xba60, 0x4c44, 0x62f3, 0x9685, 0x1, 0x0);
        gbc.writeMem(0x133b, { 0x34 });
        gbc.writeMem(0x9685, { 0x75 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x99ae, gbc.sp());
        EXPECT(0x133c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9685));
        // 34 0290
        gbc.setState(0x1cd9, 0xae9c, 0xadc0, 0x992, 0xa846, 0x8d9d, 0x0, 0x1);
        gbc.writeMem(0x1cd9, { 0x34 });
        gbc.writeMem(0x8d9d, { 0xa0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xae9c, gbc.sp());
        EXPECT(0x1cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8d9d));
        // 34 0291
        gbc.setState(0x8e6b, 0xda11, 0x5e90, 0x910e, 0xd69, 0x9c6e, 0x1, 0x0);
        gbc.writeMem(0x8e6b, { 0x34 });
        gbc.writeMem(0x9c6e, { 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xda11, gbc.sp());
        EXPECT(0x8e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8e6b));
        EXPECT(0xe, gbc.readMem(0x9c6e));
        // 34 0294
        gbc.setState(0xbda6, 0x9ec3, 0xc3f0, 0xb832, 0xd300, 0xf3e3, 0x0, 0x1);
        gbc.writeMem(0xbda6, { 0x34 });
        gbc.writeMem(0xf3e3, { 0xc6 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9ec3, gbc.sp());
        EXPECT(0xbda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbda6));
        EXPECT(0xc7, gbc.readMem(0xf3e3));
        // 34 0297
        gbc.setState(0x3c5a, 0x2fe4, 0xd020, 0x8268, 0x137b, 0x98b0, 0x1, 0x0);
        gbc.writeMem(0x3c5a, { 0x34 });
        gbc.writeMem(0x98b0, { 0x3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2fe4, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x98b0));
        // 34 029A
        gbc.setState(0xd60a, 0x15ca, 0x3130, 0x836c, 0x30cc, 0xd0f9, 0x0, 0x0);
        gbc.writeMem(0xd0f9, { 0x3b });
        gbc.writeMem(0xd60a, { 0x34 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x15ca, gbc.sp());
        EXPECT(0xd60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd0f9));
        EXPECT(0x34, gbc.readMem(0xd60a));
        // 34 029B
        gbc.setState(0x625c, 0x4b82, 0xd040, 0x5636, 0x8ec5, 0x9a41, 0x1, 0x1);
        gbc.writeMem(0x625c, { 0x34 });
        gbc.writeMem(0x9a41, { 0x7f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0x625d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9a41));
        // 34 029C
        gbc.setState(0x3b31, 0xae1a, 0xe6e0, 0x6705, 0xb802, 0xac15, 0x0, 0x0);
        gbc.writeMem(0x3b31, { 0x34 });
        gbc.writeMem(0xac15, { 0xe8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xae1a, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xac15));
        // 34 029E
        gbc.setState(0x2733, 0x5aa8, 0x9f30, 0x382f, 0xd091, 0xc0ad, 0x0, 0x1);
        gbc.writeMem(0x2733, { 0x34 });
        gbc.writeMem(0xc0ad, { 0x40 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5aa8, gbc.sp());
        EXPECT(0x2734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc0ad));
        // 34 02A2
        gbc.setState(0x8ed9, 0x23f2, 0x9b0, 0xec87, 0xbaf9, 0x86a8, 0x0, 0x0);
        gbc.writeMem(0x86a8, { 0x2f });
        gbc.writeMem(0x8ed9, { 0x34 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x23f2, gbc.sp());
        EXPECT(0x8eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x86a8));
        EXPECT(0x34, gbc.readMem(0x8ed9));
        // 34 02A3
        gbc.setState(0xe18c, 0xd10d, 0x2af0, 0xe616, 0x1b8f, 0xdaaf, 0x0, 0x1);
        gbc.writeMem(0xdaaf, { 0xd7 });
        gbc.writeMem(0xe18c, { 0x34 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd10d, gbc.sp());
        EXPECT(0xe18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xdaaf));
        EXPECT(0x34, gbc.readMem(0xe18c));
        // 34 02A5
        gbc.setState(0x879b, 0x772b, 0xc450, 0xa8de, 0xeb3d, 0xfb16, 0x0, 0x1);
        gbc.writeMem(0x879b, { 0x34 });
        gbc.writeMem(0xfb16, { 0xc9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x772b, gbc.sp());
        EXPECT(0x879c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x879b));
        EXPECT(0xca, gbc.readMem(0xfb16));
        // 34 02A7
        gbc.setState(0x4472, 0x86d4, 0x3990, 0xba27, 0xb1, 0xc0f4, 0x0, 0x1);
        gbc.writeMem(0x4472, { 0x34 });
        gbc.writeMem(0xc0f4, { 0xe3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x86d4, gbc.sp());
        EXPECT(0x4473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xc0f4));
        // 34 02AB
        gbc.setState(0x7a0f, 0xa499, 0xbf80, 0xfb4b, 0xdf90, 0xf6ec, 0x1, 0x1);
        gbc.writeMem(0x7a0f, { 0x34 });
        gbc.writeMem(0xf6ec, { 0xf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa499, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xf6ec));
        // 34 02AC
        gbc.setState(0xa689, 0x2ede, 0x15f0, 0x7f4b, 0x3852, 0xf710, 0x1, 0x0);
        gbc.writeMem(0xa689, { 0x34 });
        gbc.writeMem(0xf710, { 0x33 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2ede, gbc.sp());
        EXPECT(0xa68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa689));
        EXPECT(0x34, gbc.readMem(0xf710));
        // 34 02AD
        gbc.setState(0xe1a0, 0x54ac, 0x1300, 0x5388, 0x5465, 0x926f, 0x0, 0x1);
        gbc.writeMem(0x926f, { 0xef });
        gbc.writeMem(0xe1a0, { 0x34 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x54ac, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x926f));
        EXPECT(0x34, gbc.readMem(0xe1a0));
        // 34 02AF
        gbc.setState(0x5f4, 0x445a, 0xb420, 0x633e, 0xfc5f, 0x8bff, 0x1, 0x0);
        gbc.writeMem(0x5f4, { 0x34 });
        gbc.writeMem(0x8bff, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x445a, gbc.sp());
        EXPECT(0x5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8bff));
        // 34 02B0
        gbc.setState(0x29f0, 0x254a, 0xd320, 0x7e52, 0x2353, 0xb082, 0x1, 0x1);
        gbc.writeMem(0x29f0, { 0x34 });
        gbc.writeMem(0xb082, { 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x254a, gbc.sp());
        EXPECT(0x29f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb082));
        // 34 02B1
        gbc.setState(0x36e4, 0x1c5a, 0x37f0, 0x8bdf, 0xab43, 0x9092, 0x0, 0x1);
        gbc.writeMem(0x36e4, { 0x34 });
        gbc.writeMem(0x9092, { 0xe3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0x36e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9092));
        // 34 02B2
        gbc.setState(0x5d1e, 0xcef0, 0x9020, 0x256, 0xf87, 0x88c8, 0x0, 0x1);
        gbc.writeMem(0x5d1e, { 0x34 });
        gbc.writeMem(0x88c8, { 0xc3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcef0, gbc.sp());
        EXPECT(0x5d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x88c8));
        // 34 02B5
        gbc.setState(0x8701, 0xabce, 0x6020, 0xae04, 0x52b6, 0x8cbc, 0x1, 0x1);
        gbc.writeMem(0x8701, { 0x34 });
        gbc.writeMem(0x8cbc, { 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xabce, gbc.sp());
        EXPECT(0x8702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8701));
        EXPECT(0xc, gbc.readMem(0x8cbc));
        // 34 02BB
        gbc.setState(0xb53, 0x28ba, 0xa670, 0x5580, 0x4eb9, 0x846b, 0x1, 0x1);
        gbc.writeMem(0xb53, { 0x34 });
        gbc.writeMem(0x846b, { 0x97 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x28ba, gbc.sp());
        EXPECT(0xb54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x846b));
        // 34 02BE
        gbc.setState(0xaa7a, 0x7605, 0x3730, 0x4e63, 0xed2a, 0xd4a0, 0x1, 0x1);
        gbc.writeMem(0xaa7a, { 0x34 });
        gbc.writeMem(0xd4a0, { 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7605, gbc.sp());
        EXPECT(0xaa7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xaa7a));
        EXPECT(0x7b, gbc.readMem(0xd4a0));
        // 34 02C0
        gbc.setState(0xabdf, 0xe3c0, 0x92e0, 0x4998, 0x311a, 0xe5ba, 0x1, 0x1);
        gbc.writeMem(0xabdf, { 0x34 });
        gbc.writeMem(0xe5ba, { 0x66 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe3c0, gbc.sp());
        EXPECT(0xabe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xabdf));
        EXPECT(0x67, gbc.readMem(0xe5ba));
        // 34 02C2
        gbc.setState(0xd6c8, 0x6e0, 0x5370, 0x8250, 0x6d37, 0xce19, 0x1, 0x0);
        gbc.writeMem(0xce19, { 0xc6 });
        gbc.writeMem(0xd6c8, { 0x34 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6e0, gbc.sp());
        EXPECT(0xd6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xce19));
        EXPECT(0x34, gbc.readMem(0xd6c8));
        // 34 02C6
        gbc.setState(0x823a, 0x6d72, 0xa980, 0xf762, 0x29c9, 0xf863, 0x0, 0x1);
        gbc.writeMem(0x823a, { 0x34 });
        gbc.writeMem(0xf863, { 0x8e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0x823b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x823a));
        EXPECT(0x8f, gbc.readMem(0xf863));
        // 34 02CB
        gbc.setState(0x32be, 0xee9a, 0x8200, 0x98e2, 0x2259, 0x93e6, 0x1, 0x1);
        gbc.writeMem(0x32be, { 0x34 });
        gbc.writeMem(0x93e6, { 0xd7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee9a, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x93e6));
        // 34 02CC
        gbc.setState(0x622a, 0xf63b, 0xaa50, 0xf92e, 0x1e70, 0xdbcf, 0x0, 0x1);
        gbc.writeMem(0x622a, { 0x34 });
        gbc.writeMem(0xdbcf, { 0x8b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf63b, gbc.sp());
        EXPECT(0x622b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdbcf));
        // 34 02D1
        gbc.setState(0x50b9, 0xbe5f, 0xfb60, 0x1c98, 0xc681, 0xe0f2, 0x1, 0x0);
        gbc.writeMem(0x50b9, { 0x34 });
        gbc.writeMem(0xe0f2, { 0x8b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbe5f, gbc.sp());
        EXPECT(0x50ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe0f2));
        // 34 02D5
        gbc.setState(0xf39, 0xcecc, 0x61f0, 0xcbfd, 0x7add, 0x83a9, 0x1, 0x1);
        gbc.writeMem(0xf39, { 0x34 });
        gbc.writeMem(0x83a9, { 0x1f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcecc, gbc.sp());
        EXPECT(0xf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x83a9));
        // 34 02D6
        gbc.setState(0x2db0, 0x6fbb, 0x4d50, 0xe6e3, 0x6c9a, 0x8ec6, 0x1, 0x1);
        gbc.writeMem(0x2db0, { 0x34 });
        gbc.writeMem(0x8ec6, { 0xfc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x2db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x8ec6));
        // 34 02D7
        gbc.setState(0xd2c4, 0x18f8, 0x2700, 0x8efb, 0xaaab, 0xa78b, 0x1, 0x0);
        gbc.writeMem(0xa78b, { 0xa });
        gbc.writeMem(0xd2c4, { 0x34 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x18f8, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa78b));
        EXPECT(0x34, gbc.readMem(0xd2c4));
        // 34 02DB
        gbc.setState(0x8bda, 0xf87e, 0x75b0, 0xd17c, 0x1767, 0xb825, 0x0, 0x0);
        gbc.writeMem(0x8bda, { 0x34 });
        gbc.writeMem(0xb825, { 0x7f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0x8bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8bda));
        EXPECT(0x80, gbc.readMem(0xb825));
        // 34 02DC
        gbc.setState(0x28a2, 0xf57, 0xf880, 0x7bf, 0x9167, 0xb7cd, 0x1, 0x0);
        gbc.writeMem(0x28a2, { 0x34 });
        gbc.writeMem(0xb7cd, { 0xd2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0x28a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb7cd));
        // 34 02DD
        gbc.setState(0xd776, 0x2e7c, 0x67c0, 0x85ac, 0x3769, 0xa14e, 0x0, 0x1);
        gbc.writeMem(0xa14e, { 0x53 });
        gbc.writeMem(0xd776, { 0x34 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0xd777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xa14e));
        EXPECT(0x34, gbc.readMem(0xd776));
        // 34 02DF
        gbc.setState(0xb770, 0xf316, 0x1420, 0x7389, 0xc1d7, 0xb7da, 0x1, 0x1);
        gbc.writeMem(0xb770, { 0x34 });
        gbc.writeMem(0xb7da, { 0xd8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf316, gbc.sp());
        EXPECT(0xb771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb770));
        EXPECT(0xd9, gbc.readMem(0xb7da));
        // 34 02E2
        gbc.setState(0x7014, 0xd6ad, 0xe520, 0x92b0, 0xeb48, 0xe682, 0x1, 0x1);
        gbc.writeMem(0x7014, { 0x34 });
        gbc.writeMem(0xe682, { 0x1b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd6ad, gbc.sp());
        EXPECT(0x7015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xe682));
        // 34 02E6
        gbc.setState(0xb01c, 0xa4e1, 0x1910, 0xdc67, 0x2a4, 0xc616, 0x1, 0x0);
        gbc.writeMem(0xb01c, { 0x34 });
        gbc.writeMem(0xc616, { 0x6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa4e1, gbc.sp());
        EXPECT(0xb01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb01c));
        EXPECT(0x7, gbc.readMem(0xc616));
        // 34 02E9
        gbc.setState(0x6a2f, 0xf8e8, 0x5590, 0x94c6, 0xba45, 0xe822, 0x1, 0x1);
        gbc.writeMem(0x6a2f, { 0x34 });
        gbc.writeMem(0xe822, { 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf8e8, gbc.sp());
        EXPECT(0x6a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe822));
        // 34 02EA
        gbc.setState(0xd9ab, 0xb2ea, 0x30, 0x8709, 0x673a, 0x958b, 0x1, 0x1);
        gbc.writeMem(0x958b, { 0x4 });
        gbc.writeMem(0xd9ab, { 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb2ea, gbc.sp());
        EXPECT(0xd9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x958b));
        EXPECT(0x34, gbc.readMem(0xd9ab));
        // 34 02EE
        gbc.setState(0xc426, 0x5cb2, 0x5e10, 0x6fcb, 0xe3e8, 0xe277, 0x0, 0x0);
        gbc.writeMem(0xc426, { 0x34 });
        gbc.writeMem(0xe277, { 0xde });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5cb2, gbc.sp());
        EXPECT(0xc427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc426));
        EXPECT(0xdf, gbc.readMem(0xe277));
        // 34 02EF
        gbc.setState(0x94d2, 0xa25a, 0xa0a0, 0xd21d, 0x5417, 0x99a7, 0x1, 0x0);
        gbc.writeMem(0x94d2, { 0x34 });
        gbc.writeMem(0x99a7, { 0xfd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa25a, gbc.sp());
        EXPECT(0x94d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x94d2));
        EXPECT(0xfe, gbc.readMem(0x99a7));
        // 34 02F1
        gbc.setState(0x9789, 0x7644, 0xb9d0, 0x43ed, 0x8721, 0x90a7, 0x0, 0x1);
        gbc.writeMem(0x90a7, { 0x96 });
        gbc.writeMem(0x9789, { 0x34 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7644, gbc.sp());
        EXPECT(0x978a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x90a7));
        EXPECT(0x34, gbc.readMem(0x9789));
        // 34 02F2
        gbc.setState(0xe506, 0xbcff, 0x2930, 0xd8b1, 0xd884, 0xacd4, 0x1, 0x1);
        gbc.writeMem(0xacd4, { 0xbb });
        gbc.writeMem(0xe506, { 0x34 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbcff, gbc.sp());
        EXPECT(0xe507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xacd4));
        EXPECT(0x34, gbc.readMem(0xe506));
        // 34 02F5
        gbc.setState(0xaf73, 0xbfd4, 0x20f0, 0x5ac2, 0xa364, 0xe659, 0x1, 0x1);
        gbc.writeMem(0xaf73, { 0x34 });
        gbc.writeMem(0xe659, { 0xda });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbfd4, gbc.sp());
        EXPECT(0xaf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xaf73));
        EXPECT(0xdb, gbc.readMem(0xe659));
        // 34 02FA
        gbc.setState(0x6d87, 0xc4c, 0xf0d0, 0xa198, 0x28c2, 0x8e15, 0x1, 0x0);
        gbc.writeMem(0x6d87, { 0x34 });
        gbc.writeMem(0x8e15, { 0x84 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc4c, gbc.sp());
        EXPECT(0x6d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8e15));
        // 34 02FB
        gbc.setState(0xaf73, 0xe261, 0xdd00, 0x5b88, 0x5d41, 0x8eb4, 0x1, 0x0);
        gbc.writeMem(0x8eb4, { 0xca });
        gbc.writeMem(0xaf73, { 0x34 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe261, gbc.sp());
        EXPECT(0xaf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb4));
        EXPECT(0x34, gbc.readMem(0xaf73));
        // 34 02FE
        gbc.setState(0x9fbd, 0x66bd, 0x1480, 0x2dca, 0x6dca, 0xbf3c, 0x1, 0x0);
        gbc.writeMem(0x9fbd, { 0x34 });
        gbc.writeMem(0xbf3c, { 0x5b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x66bd, gbc.sp());
        EXPECT(0x9fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9fbd));
        EXPECT(0x5c, gbc.readMem(0xbf3c));
        // 34 0300
        gbc.setState(0xc4be, 0xb009, 0x2280, 0xc370, 0x93a8, 0xa21e, 0x1, 0x0);
        gbc.writeMem(0xa21e, { 0xa2 });
        gbc.writeMem(0xc4be, { 0x34 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb009, gbc.sp());
        EXPECT(0xc4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa21e));
        EXPECT(0x34, gbc.readMem(0xc4be));
        // 34 0307
        gbc.setState(0xc62d, 0xb430, 0xe060, 0x748c, 0xb96, 0xa802, 0x0, 0x1);
        gbc.writeMem(0xa802, { 0x6e });
        gbc.writeMem(0xc62d, { 0x34 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb430, gbc.sp());
        EXPECT(0xc62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa802));
        EXPECT(0x34, gbc.readMem(0xc62d));
        // 34 0308
        gbc.setState(0x2efc, 0x16d0, 0x37f0, 0x22e0, 0x1ce7, 0xc5f2, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0x34 });
        gbc.writeMem(0xc5f2, { 0xcc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0x2efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc5f2));
        // 34 0309
        gbc.setState(0xc194, 0x9335, 0x2e80, 0xdf4d, 0xf71f, 0xdd54, 0x0, 0x0);
        gbc.writeMem(0xc194, { 0x34 });
        gbc.writeMem(0xdd54, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9335, gbc.sp());
        EXPECT(0xc195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc194));
        EXPECT(0x1, gbc.readMem(0xdd54));
        // 34 030C
        gbc.setState(0x7ac4, 0xb855, 0xf8f0, 0xed5d, 0xcdfe, 0xd23b, 0x1, 0x1);
        gbc.writeMem(0x7ac4, { 0x34 });
        gbc.writeMem(0xd23b, { 0xaf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb855, gbc.sp());
        EXPECT(0x7ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd23b));
        // 34 030E
        gbc.setState(0x5bcb, 0xef93, 0xa530, 0xe800, 0x9c67, 0xab09, 0x0, 0x1);
        gbc.writeMem(0x5bcb, { 0x34 });
        gbc.writeMem(0xab09, { 0xe1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xef93, gbc.sp());
        EXPECT(0x5bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xab09));
        // 34 0310
        gbc.setState(0x53c6, 0xbb55, 0x8cf0, 0xa62c, 0xb914, 0x96e7, 0x1, 0x1);
        gbc.writeMem(0x53c6, { 0x34 });
        gbc.writeMem(0x96e7, { 0x45 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbb55, gbc.sp());
        EXPECT(0x53c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x96e7));
        // 34 0312
        gbc.setState(0xb950, 0x5764, 0xe2f0, 0x786a, 0x7d6, 0xe946, 0x0, 0x1);
        gbc.writeMem(0xb950, { 0x34 });
        gbc.writeMem(0xe946, { 0x28 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5764, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb950));
        EXPECT(0x29, gbc.readMem(0xe946));
        // 34 0314
        gbc.setState(0xe7c1, 0x339b, 0x8380, 0xd8ec, 0x64eb, 0x8c19, 0x0, 0x0);
        gbc.writeMem(0x8c19, { 0x16 });
        gbc.writeMem(0xe7c1, { 0x34 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x339b, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8c19));
        EXPECT(0x34, gbc.readMem(0xe7c1));
        // 34 0315
        gbc.setState(0x52ef, 0x7881, 0x9ed0, 0xb967, 0x4f57, 0x8419, 0x0, 0x1);
        gbc.writeMem(0x52ef, { 0x34 });
        gbc.writeMem(0x8419, { 0xe2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7881, gbc.sp());
        EXPECT(0x52f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8419));
        // 34 0319
        gbc.setState(0x17ca, 0xbadb, 0x6280, 0x45a, 0x5ff5, 0xf070, 0x1, 0x0);
        gbc.writeMem(0x17ca, { 0x34 });
        gbc.writeMem(0xf070, { 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbadb, gbc.sp());
        EXPECT(0x17cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xf070));
        // 34 031D
        gbc.setState(0xde1a, 0x3ded, 0x5960, 0xe956, 0xfefc, 0x962f, 0x1, 0x1);
        gbc.writeMem(0x962f, { 0x4f });
        gbc.writeMem(0xde1a, { 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3ded, gbc.sp());
        EXPECT(0xde1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x962f));
        EXPECT(0x34, gbc.readMem(0xde1a));
        // 34 031E
        gbc.setState(0xdfed, 0x5974, 0x6e50, 0x736d, 0x260a, 0xbfd6, 0x0, 0x0);
        gbc.writeMem(0xbfd6, { 0xda });
        gbc.writeMem(0xdfed, { 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5974, gbc.sp());
        EXPECT(0xdfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xbfd6));
        EXPECT(0x34, gbc.readMem(0xdfed));
        // 34 0320
        gbc.setState(0x978e, 0xa790, 0x3660, 0xe97e, 0x7e29, 0xa11e, 0x0, 0x0);
        gbc.writeMem(0x978e, { 0x34 });
        gbc.writeMem(0xa11e, { 0xa9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa790, gbc.sp());
        EXPECT(0x978f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x978e));
        EXPECT(0xaa, gbc.readMem(0xa11e));
        // 34 0322
        gbc.setState(0xce2d, 0xaa92, 0x8ab0, 0x50a6, 0x74d9, 0xee0b, 0x0, 0x0);
        gbc.writeMem(0xce2d, { 0x34 });
        gbc.writeMem(0xee0b, { 0x2a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaa92, gbc.sp());
        EXPECT(0xce2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xce2d));
        EXPECT(0x2b, gbc.readMem(0xee0b));
        // 34 0324
        gbc.setState(0x2e57, 0x4b0b, 0x90b0, 0x2d47, 0x1720, 0x87c1, 0x0, 0x1);
        gbc.writeMem(0x2e57, { 0x34 });
        gbc.writeMem(0x87c1, { 0xb5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b0b, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x87c1));
        // 34 0327
        gbc.setState(0x98df, 0x7c82, 0x7440, 0x4958, 0x4a37, 0xc49d, 0x1, 0x1);
        gbc.writeMem(0x98df, { 0x34 });
        gbc.writeMem(0xc49d, { 0x10 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7c82, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x98df));
        EXPECT(0x11, gbc.readMem(0xc49d));
        // 34 0328
        gbc.setState(0x3ca5, 0xf705, 0x8de0, 0xb77, 0x87b2, 0x8c67, 0x0, 0x0);
        gbc.writeMem(0x3ca5, { 0x34 });
        gbc.writeMem(0x8c67, { 0x5f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0x3ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8c67));
        // 34 0329
        gbc.setState(0x6897, 0x7cac, 0x57c0, 0x55b8, 0x2d56, 0xaf13, 0x1, 0x1);
        gbc.writeMem(0x6897, { 0x34 });
        gbc.writeMem(0xaf13, { 0xd4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7cac, gbc.sp());
        EXPECT(0x6898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaf13));
        // 34 032A
        gbc.setState(0x34a9, 0x4a3c, 0x5d0, 0x95db, 0x4f9a, 0xc06e, 0x0, 0x0);
        gbc.writeMem(0x34a9, { 0x34 });
        gbc.writeMem(0xc06e, { 0x99 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4a3c, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc06e));
        // 34 032B
        gbc.setState(0x2ba1, 0x3e65, 0x7410, 0x1866, 0xce38, 0xe413, 0x1, 0x1);
        gbc.writeMem(0x2ba1, { 0x34 });
        gbc.writeMem(0xe413, { 0xe7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x2ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xe413));
        // 34 032C
        gbc.setState(0x7774, 0xbb08, 0x3140, 0xe0bf, 0x6039, 0xd7cb, 0x1, 0x1);
        gbc.writeMem(0x7774, { 0x34 });
        gbc.writeMem(0xd7cb, { 0xd5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd7cb));
        // 34 032F
        gbc.setState(0xc99c, 0x3b74, 0x9e80, 0xa8fe, 0xff65, 0xcf7f, 0x0, 0x0);
        gbc.writeMem(0xc99c, { 0x34 });
        gbc.writeMem(0xcf7f, { 0x20 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3b74, gbc.sp());
        EXPECT(0xc99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc99c));
        EXPECT(0x21, gbc.readMem(0xcf7f));
        // 34 0330
        gbc.setState(0x3d0a, 0xab83, 0xc0c0, 0x448c, 0xa556, 0xd871, 0x0, 0x1);
        gbc.writeMem(0x3d0a, { 0x34 });
        gbc.writeMem(0xd871, { 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xab83, gbc.sp());
        EXPECT(0x3d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd871));
        // 34 0331
        gbc.setState(0xc6d9, 0x1534, 0x7090, 0x4508, 0xa9e9, 0xc472, 0x0, 0x1);
        gbc.writeMem(0xc472, { 0x36 });
        gbc.writeMem(0xc6d9, { 0x34 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1534, gbc.sp());
        EXPECT(0xc6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc472));
        EXPECT(0x34, gbc.readMem(0xc6d9));
        // 34 0332
        gbc.setState(0x7072, 0xff22, 0x6dc0, 0x4360, 0xffd3, 0x9348, 0x1, 0x0);
        gbc.writeMem(0x7072, { 0x34 });
        gbc.writeMem(0x9348, { 0xe });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xff22, gbc.sp());
        EXPECT(0x7073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9348));
        // 34 0335
        gbc.setState(0xa19f, 0x6f04, 0x1d30, 0x3e3d, 0x1fdc, 0x8ff8, 0x1, 0x0);
        gbc.writeMem(0x8ff8, { 0x36 });
        gbc.writeMem(0xa19f, { 0x34 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8ff8));
        EXPECT(0x34, gbc.readMem(0xa19f));
        // 34 0336
        gbc.setState(0x509d, 0xb323, 0xa6a0, 0xa051, 0x297d, 0xf701, 0x1, 0x0);
        gbc.writeMem(0x509d, { 0x34 });
        gbc.writeMem(0xf701, { 0x4e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb323, gbc.sp());
        EXPECT(0x509e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf701));
        // 34 0338
        gbc.setState(0xb12d, 0x7d4a, 0xcd50, 0xaa53, 0xb2c6, 0xef52, 0x1, 0x0);
        gbc.writeMem(0xb12d, { 0x34 });
        gbc.writeMem(0xef52, { 0x63 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0xb12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb12d));
        EXPECT(0x64, gbc.readMem(0xef52));
        // 34 033A
        gbc.setState(0x2c93, 0x5e0d, 0xa10, 0x3d58, 0x9b84, 0xd2cc, 0x1, 0x0);
        gbc.writeMem(0x2c93, { 0x34 });
        gbc.writeMem(0xd2cc, { 0x97 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5e0d, gbc.sp());
        EXPECT(0x2c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd2cc));
        // 34 033C
        gbc.setState(0xabcb, 0xdd46, 0xae0, 0xa2d5, 0x68ff, 0x8e39, 0x0, 0x1);
        gbc.writeMem(0x8e39, { 0x95 });
        gbc.writeMem(0xabcb, { 0x34 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0xabcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8e39));
        EXPECT(0x34, gbc.readMem(0xabcb));
        // 34 033E
        gbc.setState(0x38cc, 0x408b, 0xb210, 0xf620, 0x8558, 0xdfbd, 0x1, 0x1);
        gbc.writeMem(0x38cc, { 0x34 });
        gbc.writeMem(0xdfbd, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0x38cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdfbd));
        // 34 033F
        gbc.setState(0xcd71, 0x22d7, 0x8ee0, 0x23cb, 0x3ec5, 0xe1ba, 0x0, 0x0);
        gbc.writeMem(0xcd71, { 0x34 });
        gbc.writeMem(0xe1ba, { 0x9c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x22d7, gbc.sp());
        EXPECT(0xcd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcd71));
        EXPECT(0x9d, gbc.readMem(0xe1ba));
        // 34 0341
        gbc.setState(0x9cd5, 0x8df2, 0x8500, 0x6c6, 0x2c9e, 0xd198, 0x0, 0x1);
        gbc.writeMem(0x9cd5, { 0x34 });
        gbc.writeMem(0xd198, { 0x55 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8df2, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9cd5));
        EXPECT(0x56, gbc.readMem(0xd198));
        // 34 0343
        gbc.setState(0x9d61, 0x8d87, 0x3f30, 0x4866, 0x8eb8, 0x9298, 0x1, 0x1);
        gbc.writeMem(0x9298, { 0xa });
        gbc.writeMem(0x9d61, { 0x34 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8d87, gbc.sp());
        EXPECT(0x9d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9298));
        EXPECT(0x34, gbc.readMem(0x9d61));
        // 34 0345
        gbc.setState(0xea54, 0x99d6, 0xf430, 0x4be9, 0xfa9a, 0xc099, 0x1, 0x1);
        gbc.writeMem(0xc099, { 0xae });
        gbc.writeMem(0xea54, { 0x34 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x99d6, gbc.sp());
        EXPECT(0xea55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xc099));
        EXPECT(0x34, gbc.readMem(0xea54));
        // 34 0346
        gbc.setState(0x46b, 0x9e, 0xf110, 0x832f, 0x1ee8, 0x80ad, 0x0, 0x0);
        gbc.writeMem(0x46b, { 0x34 });
        gbc.writeMem(0x80ad, { 0xd8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x80ad));
        // 34 0349
        gbc.setState(0x51ab, 0x399e, 0x7e00, 0xccf0, 0x77b9, 0x9314, 0x0, 0x1);
        gbc.writeMem(0x51ab, { 0x34 });
        gbc.writeMem(0x9314, { 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x399e, gbc.sp());
        EXPECT(0x51ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9314));
        // 34 034A
        gbc.setState(0x2f0f, 0xdd4b, 0x9dd0, 0xee9c, 0x9b, 0xb8ab, 0x1, 0x1);
        gbc.writeMem(0x2f0f, { 0x34 });
        gbc.writeMem(0xb8ab, { 0xef });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdd4b, gbc.sp());
        EXPECT(0x2f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb8ab));
        // 34 034C
        gbc.setState(0x44f0, 0xb334, 0x13e0, 0xce0e, 0x199d, 0xbb0d, 0x1, 0x1);
        gbc.writeMem(0x44f0, { 0x34 });
        gbc.writeMem(0xbb0d, { 0x67 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb334, gbc.sp());
        EXPECT(0x44f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbb0d));
        // 34 034D
        gbc.setState(0xb462, 0x12c6, 0x4560, 0x2746, 0x2384, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0xb462, { 0x34 });
        gbc.writeMem(0xb7e3, { 0xe4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x12c6, gbc.sp());
        EXPECT(0xb463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb462));
        EXPECT(0xe5, gbc.readMem(0xb7e3));
        // 34 034E
        gbc.setState(0x1524, 0x1972, 0xb630, 0x943d, 0xa4c1, 0xd1cb, 0x1, 0x0);
        gbc.writeMem(0x1524, { 0x34 });
        gbc.writeMem(0xd1cb, { 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1972, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd1cb));
        // 34 034F
        gbc.setState(0xcf48, 0x4bf6, 0x7f10, 0xeacc, 0x5471, 0xece3, 0x0, 0x0);
        gbc.writeMem(0xcf48, { 0x34 });
        gbc.writeMem(0xece3, { 0x66 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4bf6, gbc.sp());
        EXPECT(0xcf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcf48));
        EXPECT(0x67, gbc.readMem(0xece3));
        // 34 0354
        gbc.setState(0x3bcc, 0x2709, 0xb450, 0x5a5, 0x2ff9, 0xff64, 0x1, 0x1);
        gbc.writeMem(0x3bcc, { 0x34 });
        gbc.writeMem(0xff64, { 0x87 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0x3bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xff64));
        // 34 0356
        gbc.setState(0x37b5, 0x19a0, 0x27c0, 0xa843, 0x5a2a, 0xb915, 0x1, 0x1);
        gbc.writeMem(0x37b5, { 0x34 });
        gbc.writeMem(0xb915, { 0xe8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x19a0, gbc.sp());
        EXPECT(0x37b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb915));
        // 34 0357
        gbc.setState(0x24d8, 0xf4ca, 0xed10, 0xab0a, 0x95e, 0xb7bc, 0x0, 0x1);
        gbc.writeMem(0x24d8, { 0x34 });
        gbc.writeMem(0xb7bc, { 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf4ca, gbc.sp());
        EXPECT(0x24d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xb7bc));
        // 34 0358
        gbc.setState(0x1689, 0x70a7, 0x5e30, 0x32f6, 0xc1b9, 0xf40c, 0x0, 0x0);
        gbc.writeMem(0x1689, { 0x34 });
        gbc.writeMem(0xf40c, { 0xd5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0x168a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf40c));
        // 34 0359
        gbc.setState(0x3308, 0xe68, 0x5be0, 0x27b8, 0x7d05, 0xe48c, 0x1, 0x0);
        gbc.writeMem(0x3308, { 0x34 });
        gbc.writeMem(0xe48c, { 0x9d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe68, gbc.sp());
        EXPECT(0x3309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe48c));
        // 34 035D
        gbc.setState(0x2aa8, 0xc9d2, 0x8ee0, 0x233b, 0x124f, 0xe3fb, 0x0, 0x0);
        gbc.writeMem(0x2aa8, { 0x34 });
        gbc.writeMem(0xe3fb, { 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0x2aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe3fb));
        // 34 035E
        gbc.setState(0x351b, 0x1290, 0x9f10, 0x121d, 0x469a, 0x8933, 0x0, 0x1);
        gbc.writeMem(0x351b, { 0x34 });
        gbc.writeMem(0x8933, { 0x30 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0x351c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8933));
        // 34 0361
        gbc.setState(0x5a6a, 0xc02a, 0x7f40, 0xfb2a, 0xc612, 0xe873, 0x0, 0x1);
        gbc.writeMem(0x5a6a, { 0x34 });
        gbc.writeMem(0xe873, { 0x7c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc02a, gbc.sp());
        EXPECT(0x5a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe873));
        // 34 0369
        gbc.setState(0xb80c, 0xf761, 0x9a60, 0xaf84, 0x436a, 0x8528, 0x0, 0x1);
        gbc.writeMem(0x8528, { 0xba });
        gbc.writeMem(0xb80c, { 0x34 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf761, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8528));
        EXPECT(0x34, gbc.readMem(0xb80c));
        // 34 036D
        gbc.setState(0xd264, 0xb324, 0x2c30, 0xd27b, 0x4904, 0xa433, 0x1, 0x0);
        gbc.writeMem(0xa433, { 0xe8 });
        gbc.writeMem(0xd264, { 0x34 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb324, gbc.sp());
        EXPECT(0xd265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa433));
        EXPECT(0x34, gbc.readMem(0xd264));
        // 34 0371
        gbc.setState(0x58f3, 0xe688, 0xbb10, 0x47a6, 0xc4e3, 0xd1c4, 0x1, 0x1);
        gbc.writeMem(0x58f3, { 0x34 });
        gbc.writeMem(0xd1c4, { 0xa1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe688, gbc.sp());
        EXPECT(0x58f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd1c4));
        // 34 0374
        gbc.setState(0x20b6, 0x78b1, 0xcc70, 0xd69c, 0x7c76, 0xe7c5, 0x1, 0x1);
        gbc.writeMem(0x20b6, { 0x34 });
        gbc.writeMem(0xe7c5, { 0xc5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x78b1, gbc.sp());
        EXPECT(0x20b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe7c5));
        // 34 0375
        gbc.setState(0x7e6a, 0x6f90, 0x3f80, 0xe995, 0xe06a, 0xae18, 0x1, 0x0);
        gbc.writeMem(0x7e6a, { 0x34 });
        gbc.writeMem(0xae18, { 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6f90, gbc.sp());
        EXPECT(0x7e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xae18));
        // 34 0378
        gbc.setState(0x9387, 0x3950, 0xe100, 0x8e51, 0xddfc, 0xc613, 0x1, 0x0);
        gbc.writeMem(0x9387, { 0x34 });
        gbc.writeMem(0xc613, { 0xfb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0x9388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9387));
        EXPECT(0xfc, gbc.readMem(0xc613));
        // 34 037B
        gbc.setState(0x85d5, 0x29fb, 0x6510, 0x627f, 0x87dc, 0xc67b, 0x1, 0x1);
        gbc.writeMem(0x85d5, { 0x34 });
        gbc.writeMem(0xc67b, { 0xb0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x29fb, gbc.sp());
        EXPECT(0x85d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x85d5));
        EXPECT(0xb1, gbc.readMem(0xc67b));
        // 34 037E
        gbc.setState(0x6530, 0x44c6, 0x6970, 0x768b, 0x372d, 0xb16d, 0x0, 0x0);
        gbc.writeMem(0x6530, { 0x34 });
        gbc.writeMem(0xb16d, { 0x39 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x44c6, gbc.sp());
        EXPECT(0x6531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb16d));
        // 34 0380
        gbc.setState(0xceab, 0x6f2c, 0x1700, 0xc3, 0xeb94, 0xe088, 0x0, 0x1);
        gbc.writeMem(0xceab, { 0x34 });
        gbc.writeMem(0xe088, { 0xe2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xceab));
        EXPECT(0xe3, gbc.readMem(0xe088));
        // 34 0381
        gbc.setState(0x5ccf, 0xd79c, 0x35b0, 0xe777, 0x6f2d, 0xae20, 0x0, 0x0);
        gbc.writeMem(0x5ccf, { 0x34 });
        gbc.writeMem(0xae20, { 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd79c, gbc.sp());
        EXPECT(0x5cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae20));
        // 34 0385
        gbc.setState(0x36e, 0x2ee7, 0xb3f0, 0x2c64, 0x6f8f, 0xed49, 0x1, 0x0);
        gbc.writeMem(0x36e, { 0x34 });
        gbc.writeMem(0xed49, { 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2ee7, gbc.sp());
        EXPECT(0x36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xed49));
        // 34 0386
        gbc.setState(0xaa60, 0xc752, 0x4450, 0x520a, 0x6600, 0xb2ce, 0x1, 0x1);
        gbc.writeMem(0xaa60, { 0x34 });
        gbc.writeMem(0xb2ce, { 0x9b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc752, gbc.sp());
        EXPECT(0xaa61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xaa60));
        EXPECT(0x9c, gbc.readMem(0xb2ce));
        // 34 0387
        gbc.setState(0x6b31, 0xa425, 0xdfd0, 0x94e8, 0xb5f4, 0x9e36, 0x0, 0x1);
        gbc.writeMem(0x6b31, { 0x34 });
        gbc.writeMem(0x9e36, { 0x7c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa425, gbc.sp());
        EXPECT(0x6b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9e36));
        // 34 038B
        gbc.setState(0x8ca1, 0x5bb1, 0xbc10, 0x4fa8, 0x9eaa, 0xd9db, 0x0, 0x0);
        gbc.writeMem(0x8ca1, { 0x34 });
        gbc.writeMem(0xd9db, { 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5bb1, gbc.sp());
        EXPECT(0x8ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8ca1));
        EXPECT(0xd1, gbc.readMem(0xd9db));
        // 34 038C
        gbc.setState(0x814d, 0xe3e6, 0xdcb0, 0x3229, 0xc5be, 0x8799, 0x0, 0x0);
        gbc.writeMem(0x814d, { 0x34 });
        gbc.writeMem(0x8799, { 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe3e6, gbc.sp());
        EXPECT(0x814e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x814d));
        EXPECT(0x4c, gbc.readMem(0x8799));
        // 34 0391
        gbc.setState(0x264b, 0x52c7, 0xcd50, 0x61b7, 0x85e1, 0xd136, 0x1, 0x1);
        gbc.writeMem(0x264b, { 0x34 });
        gbc.writeMem(0xd136, { 0xd1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x52c7, gbc.sp());
        EXPECT(0x264c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd136));
        // 34 0392
        gbc.setState(0x5d1b, 0x287e, 0x2620, 0x82f6, 0x51fb, 0x87a1, 0x0, 0x1);
        gbc.writeMem(0x5d1b, { 0x34 });
        gbc.writeMem(0x87a1, { 0xd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x287e, gbc.sp());
        EXPECT(0x5d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x87a1));
        // 34 0393
        gbc.setState(0x8b02, 0xddf6, 0xa470, 0x66b, 0xf464, 0xb83e, 0x0, 0x0);
        gbc.writeMem(0x8b02, { 0x34 });
        gbc.writeMem(0xb83e, { 0xa });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xddf6, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8b02));
        EXPECT(0xb, gbc.readMem(0xb83e));
        // 34 0395
        gbc.setState(0x31ee, 0x6f37, 0x24d0, 0x6948, 0xb20f, 0x858f, 0x1, 0x1);
        gbc.writeMem(0x31ee, { 0x34 });
        gbc.writeMem(0x858f, { 0x97 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6f37, gbc.sp());
        EXPECT(0x31ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x858f));
        // 34 0396
        gbc.setState(0xae09, 0x1c43, 0x3be0, 0xf840, 0x1d96, 0xb9c7, 0x1, 0x1);
        gbc.writeMem(0xae09, { 0x34 });
        gbc.writeMem(0xb9c7, { 0x74 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1c43, gbc.sp());
        EXPECT(0xae0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xae09));
        EXPECT(0x75, gbc.readMem(0xb9c7));
        // 34 0399
        gbc.setState(0xc065, 0xd664, 0x8fa0, 0x1d30, 0x195e, 0xb102, 0x1, 0x0);
        gbc.writeMem(0xb102, { 0xd5 });
        gbc.writeMem(0xc065, { 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd664, gbc.sp());
        EXPECT(0xc066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb102));
        EXPECT(0x34, gbc.readMem(0xc065));
        // 34 039B
        gbc.setState(0x22c8, 0x9f8e, 0x72d0, 0xa5a3, 0x333b, 0xc631, 0x1, 0x1);
        gbc.writeMem(0x22c8, { 0x34 });
        gbc.writeMem(0xc631, { 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9f8e, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc631));
        // 34 039D
        gbc.setState(0x3fb4, 0xc416, 0x25d0, 0x2612, 0x69d6, 0xfa9a, 0x0, 0x1);
        gbc.writeMem(0x3fb4, { 0x34 });
        gbc.writeMem(0xfa9a, { 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc416, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xfa9a));
        // 34 039E
        gbc.setState(0xae1b, 0xa475, 0x7820, 0x45f7, 0xb6de, 0x8df6, 0x0, 0x0);
        gbc.writeMem(0x8df6, { 0xec });
        gbc.writeMem(0xae1b, { 0x34 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa475, gbc.sp());
        EXPECT(0xae1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8df6));
        EXPECT(0x34, gbc.readMem(0xae1b));
        // 34 039F
        gbc.setState(0x2b62, 0x13ec, 0x58e0, 0x161b, 0xe712, 0xe0e8, 0x0, 0x1);
        gbc.writeMem(0x2b62, { 0x34 });
        gbc.writeMem(0xe0e8, { 0xf6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x13ec, gbc.sp());
        EXPECT(0x2b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xe0e8));
        // 34 03A0
        gbc.setState(0x2690, 0xda07, 0xd590, 0x9e48, 0x43fa, 0xedcf, 0x0, 0x1);
        gbc.writeMem(0x2690, { 0x34 });
        gbc.writeMem(0xedcf, { 0xbc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xda07, gbc.sp());
        EXPECT(0x2691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xedcf));
        // 34 03A2
        gbc.setState(0x7e6c, 0x137, 0xf950, 0x2610, 0x96cb, 0x8a7f, 0x1, 0x0);
        gbc.writeMem(0x7e6c, { 0x34 });
        gbc.writeMem(0x8a7f, { 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x137, gbc.sp());
        EXPECT(0x7e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a7f));
        // 34 03A3
        gbc.setState(0x128, 0x99c3, 0xbd50, 0x3508, 0x63ab, 0xc8c2, 0x1, 0x1);
        gbc.writeMem(0x128, { 0x34 });
        gbc.writeMem(0xc8c2, { 0xcc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x99c3, gbc.sp());
        EXPECT(0x129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc8c2));
        // 34 03A4
        gbc.setState(0x94d0, 0x1081, 0x7a50, 0x3fbd, 0xec8c, 0x9eb5, 0x1, 0x1);
        gbc.writeMem(0x94d0, { 0x34 });
        gbc.writeMem(0x9eb5, { 0x7e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1081, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x94d0));
        EXPECT(0x7f, gbc.readMem(0x9eb5));
        // 34 03A6
        gbc.setState(0x99e1, 0xfdb9, 0xe4e0, 0x74f, 0x3cc6, 0xf3aa, 0x0, 0x1);
        gbc.writeMem(0x99e1, { 0x34 });
        gbc.writeMem(0xf3aa, { 0x4f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfdb9, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x99e1));
        EXPECT(0x50, gbc.readMem(0xf3aa));
        // 34 03AA
        gbc.setState(0x5821, 0xe45b, 0xab30, 0x24c8, 0x3d36, 0xba43, 0x0, 0x0);
        gbc.writeMem(0x5821, { 0x34 });
        gbc.writeMem(0xba43, { 0x4b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe45b, gbc.sp());
        EXPECT(0x5822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xba43));
        // 34 03AB
        gbc.setState(0x1b38, 0xde62, 0xded0, 0xb490, 0x28a6, 0xa50a, 0x0, 0x1);
        gbc.writeMem(0x1b38, { 0x34 });
        gbc.writeMem(0xa50a, { 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xde62, gbc.sp());
        EXPECT(0x1b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xa50a));
        // 34 03AC
        gbc.setState(0x3e14, 0xbb, 0xd720, 0xae5b, 0x4ec8, 0xd597, 0x1, 0x1);
        gbc.writeMem(0x3e14, { 0x34 });
        gbc.writeMem(0xd597, { 0x8e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbb, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd597));
        // 34 03B2
        gbc.setState(0xa9bf, 0xa0d6, 0xc90, 0x8e71, 0xc14b, 0xb548, 0x1, 0x1);
        gbc.writeMem(0xa9bf, { 0x34 });
        gbc.writeMem(0xb548, { 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa0d6, gbc.sp());
        EXPECT(0xa9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa9bf));
        EXPECT(0x67, gbc.readMem(0xb548));
        // 34 03B4
        gbc.setState(0x3b17, 0xec13, 0x66a0, 0xafe4, 0x406f, 0x88db, 0x0, 0x0);
        gbc.writeMem(0x3b17, { 0x34 });
        gbc.writeMem(0x88db, { 0x2f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xec13, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x88db));
        // 34 03BF
        gbc.setState(0x6cdd, 0x15bb, 0xef50, 0x1569, 0x694e, 0x87ee, 0x0, 0x0);
        gbc.writeMem(0x6cdd, { 0x34 });
        gbc.writeMem(0x87ee, { 0xdb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x15bb, gbc.sp());
        EXPECT(0x6cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x87ee));
        // 34 03C0
        gbc.setState(0x33b6, 0xb13, 0x3380, 0x70e7, 0xaafe, 0x9842, 0x0, 0x0);
        gbc.writeMem(0x33b6, { 0x34 });
        gbc.writeMem(0x9842, { 0x1f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb13, gbc.sp());
        EXPECT(0x33b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9842));
        // 34 03C1
        gbc.setState(0x9329, 0x1ac4, 0xc640, 0x8e67, 0x10a9, 0xd0a3, 0x1, 0x1);
        gbc.writeMem(0x9329, { 0x34 });
        gbc.writeMem(0xd0a3, { 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1ac4, gbc.sp());
        EXPECT(0x932a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9329));
        EXPECT(0x28, gbc.readMem(0xd0a3));
        // 34 03C2
        gbc.setState(0xef51, 0xf38a, 0x5af0, 0x4ef8, 0xaac9, 0xdb71, 0x0, 0x0);
        gbc.writeMem(0xdb71, { 0xf4 });
        gbc.writeMem(0xef51, { 0x34 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf38a, gbc.sp());
        EXPECT(0xef52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdb71));
        EXPECT(0x34, gbc.readMem(0xef51));
        // 34 03C3
        gbc.setState(0x6f02, 0x910e, 0xffb0, 0xddad, 0x2f52, 0xa70b, 0x0, 0x1);
        gbc.writeMem(0x6f02, { 0x34 });
        gbc.writeMem(0xa70b, { 0xf5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x910e, gbc.sp());
        EXPECT(0x6f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xa70b));
        // 34 03C8
        gbc.setState(0x81af, 0x1779, 0x5730, 0xedb3, 0xe2bb, 0xa17c, 0x1, 0x0);
        gbc.writeMem(0x81af, { 0x34 });
        gbc.writeMem(0xa17c, { 0x87 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1779, gbc.sp());
        EXPECT(0x81b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x81af));
        EXPECT(0x88, gbc.readMem(0xa17c));
        // 34 03C9
        gbc.setState(0x4be0, 0x8f2a, 0xe0f0, 0x4c5d, 0xb66d, 0xa30d, 0x1, 0x0);
        gbc.writeMem(0x4be0, { 0x34 });
        gbc.writeMem(0xa30d, { 0x56 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8f2a, gbc.sp());
        EXPECT(0x4be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa30d));
        // 34 03CE
        gbc.setState(0x6660, 0x7dbb, 0xe890, 0xca59, 0x8362, 0xafa6, 0x0, 0x0);
        gbc.writeMem(0x6660, { 0x34 });
        gbc.writeMem(0xafa6, { 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x6661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xafa6));
        // 34 03D1
        gbc.setState(0x1d31, 0xd621, 0xb6c0, 0xb3c1, 0x1f00, 0xadfe, 0x0, 0x1);
        gbc.writeMem(0x1d31, { 0x34 });
        gbc.writeMem(0xadfe, { 0xd1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd621, gbc.sp());
        EXPECT(0x1d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xadfe));
        // 34 03D2
        gbc.setState(0xbc66, 0x7969, 0x6ff0, 0x6de1, 0xf899, 0xa4e5, 0x1, 0x1);
        gbc.writeMem(0xa4e5, { 0xe0 });
        gbc.writeMem(0xbc66, { 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7969, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa4e5));
        EXPECT(0x34, gbc.readMem(0xbc66));
        // 34 03D3
        gbc.setState(0x13b, 0x419a, 0xcee0, 0xff5b, 0x1e5f, 0xbead, 0x1, 0x0);
        gbc.writeMem(0x13b, { 0x34 });
        gbc.writeMem(0xbead, { 0x73 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x419a, gbc.sp());
        EXPECT(0x13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbead));
        // 34 03D4
        gbc.setState(0xdcb, 0x5dfe, 0x57a0, 0x893d, 0x4a9c, 0x8688, 0x0, 0x1);
        gbc.writeMem(0xdcb, { 0x34 });
        gbc.writeMem(0x8688, { 0x4d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5dfe, gbc.sp());
        EXPECT(0xdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8688));
        // 34 03D6
        gbc.setState(0xb3c3, 0x43e8, 0x26d0, 0xadf7, 0xd856, 0x8816, 0x1, 0x1);
        gbc.writeMem(0x8816, { 0x4a });
        gbc.writeMem(0xb3c3, { 0x34 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x43e8, gbc.sp());
        EXPECT(0xb3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8816));
        EXPECT(0x34, gbc.readMem(0xb3c3));
        // 34 03D7
        gbc.setState(0xccf1, 0x8fbe, 0x9ef0, 0xec6b, 0x6724, 0x9375, 0x0, 0x1);
        gbc.writeMem(0x9375, { 0x3a });
        gbc.writeMem(0xccf1, { 0x34 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8fbe, gbc.sp());
        EXPECT(0xccf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9375));
        EXPECT(0x34, gbc.readMem(0xccf1));
        // 34 03D8
        gbc.setState(0xecd6, 0xc392, 0x92a0, 0x19d4, 0x6b07, 0xca3c, 0x0, 0x0);
        gbc.writeMem(0xca3c, { 0xa0 });
        gbc.writeMem(0xecd6, { 0x34 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc392, gbc.sp());
        EXPECT(0xecd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xca3c));
        EXPECT(0x34, gbc.readMem(0xecd6));
        // 34 03D9
        gbc.setState(0xdfdb, 0x3371, 0x250, 0xdc8d, 0xf557, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0xc26e, { 0x58 });
        gbc.writeMem(0xdfdb, { 0x34 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc26e));
        EXPECT(0x34, gbc.readMem(0xdfdb));
        // 34 03DB
        gbc.setState(0x89b3, 0xffc4, 0x7cd0, 0xced4, 0xd98b, 0xd4f6, 0x0, 0x0);
        gbc.writeMem(0x89b3, { 0x34 });
        gbc.writeMem(0xd4f6, { 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xffc4, gbc.sp());
        EXPECT(0x89b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x89b3));
        EXPECT(0x92, gbc.readMem(0xd4f6));
        // 34 03DE
        gbc.setState(0x9bab, 0x450f, 0xba80, 0x874a, 0x6d64, 0x99d1, 0x0, 0x1);
        gbc.writeMem(0x99d1, { 0x2 });
        gbc.writeMem(0x9bab, { 0x34 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x9bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x99d1));
        EXPECT(0x34, gbc.readMem(0x9bab));
        // 34 03E0
        gbc.setState(0x2ea5, 0x3383, 0x5830, 0x3167, 0xe97d, 0xa369, 0x1, 0x1);
        gbc.writeMem(0x2ea5, { 0x34 });
        gbc.writeMem(0xa369, { 0x30 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3383, gbc.sp());
        EXPECT(0x2ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa369));
        // 34 03E1
        gbc.setState(0x23c3, 0xc33b, 0x3540, 0x64e3, 0x1d71, 0x8f5a, 0x1, 0x1);
        gbc.writeMem(0x23c3, { 0x34 });
        gbc.writeMem(0x8f5a, { 0x20 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc33b, gbc.sp());
        EXPECT(0x23c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8f5a));
        // 34 03E2
        gbc.setState(0x94ba, 0x2a0f, 0xfc40, 0x3aef, 0x8c51, 0x96d1, 0x0, 0x0);
        gbc.writeMem(0x94ba, { 0x34 });
        gbc.writeMem(0x96d1, { 0x4a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2a0f, gbc.sp());
        EXPECT(0x94bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x94ba));
        EXPECT(0x4b, gbc.readMem(0x96d1));
        // 34 03E3
        gbc.setState(0x1f25, 0x8532, 0x90a0, 0x9dbf, 0x2fc0, 0xb69a, 0x0, 0x1);
        gbc.writeMem(0x1f25, { 0x34 });
        gbc.writeMem(0xb69a, { 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8532, gbc.sp());
        EXPECT(0x1f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb69a));
        // 34 03E5
        gbc.setState(0xecde, 0x1c42, 0xf3a0, 0xccde, 0x30fd, 0xdf97, 0x1, 0x1);
        gbc.writeMem(0xdf97, { 0x97 });
        gbc.writeMem(0xecde, { 0x34 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1c42, gbc.sp());
        EXPECT(0xecdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdf97));
        EXPECT(0x34, gbc.readMem(0xecde));
    }
