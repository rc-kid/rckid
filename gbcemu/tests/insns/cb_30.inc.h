    TEST(gbcemu, opcode_cb_30) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 30 0000
        gbc.setState(0x3066, 0x6fb5, 0xddf0, 0x1bf5, 0x3565, 0x414d, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6fb5, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0001
        gbc.setState(0x8ee2, 0xe495, 0x10f0, 0x7396, 0xbd49, 0x926a, 0x1, 0x0);
        gbc.writeMem(0x8ee2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe495, gbc.sp());
        EXPECT(0x8ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee2));
        EXPECT(0x30, gbc.readMem(0x8ee3));
        // CB 30 0002
        gbc.setState(0xb286, 0x7397, 0x3870, 0x8e44, 0xcb0, 0xd83, 0x1, 0x1);
        gbc.writeMem(0xb286, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7397, gbc.sp());
        EXPECT(0xb288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb286));
        EXPECT(0x30, gbc.readMem(0xb287));
        // CB 30 0003
        gbc.setState(0xb4e9, 0xf5e1, 0xab40, 0xbf5b, 0x548b, 0xe2a0, 0x0, 0x1);
        gbc.writeMem(0xb4e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf5e1, gbc.sp());
        EXPECT(0xb4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e9));
        EXPECT(0x30, gbc.readMem(0xb4ea));
        // CB 30 0004
        gbc.setState(0xe4e7, 0x4a9b, 0x3580, 0x4d64, 0x9534, 0x7c52, 0x1, 0x0);
        gbc.writeMem(0xe4e7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4a9b, gbc.sp());
        EXPECT(0xe4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e7));
        EXPECT(0x30, gbc.readMem(0xe4e8));
        // CB 30 0007
        gbc.setState(0x7250, 0x992, 0xec20, 0x2075, 0x8d1f, 0x6e69, 0x0, 0x0);
        gbc.writeMem(0x7250, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x992, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0008
        gbc.setState(0x43a3, 0xc0cb, 0x8300, 0x9971, 0x9577, 0xea0c, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc0cb, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0009
        gbc.setState(0xeee, 0x2e14, 0xfa60, 0xce91, 0xfa05, 0x7bef, 0x1, 0x0);
        gbc.writeMem(0xeee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2e14, gbc.sp());
        EXPECT(0xef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 000A
        gbc.setState(0xec82, 0xac20, 0x4380, 0x7bcb, 0x94b4, 0x11b6, 0x0, 0x0);
        gbc.writeMem(0xec82, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac20, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec82));
        EXPECT(0x30, gbc.readMem(0xec83));
        // CB 30 000B
        gbc.setState(0xa217, 0xa6dd, 0xe60, 0x3846, 0x18d8, 0xf6a1, 0x1, 0x0);
        gbc.writeMem(0xa217, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0xa219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa217));
        EXPECT(0x30, gbc.readMem(0xa218));
        // CB 30 000C
        gbc.setState(0xba10, 0xd9b4, 0x6460, 0x4bfa, 0xaf75, 0xc618, 0x1, 0x1);
        gbc.writeMem(0xba10, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba10));
        EXPECT(0x30, gbc.readMem(0xba11));
        // CB 30 000D
        gbc.setState(0x8d61, 0xf789, 0x3e40, 0x7338, 0x38d7, 0xaefb, 0x0, 0x1);
        gbc.writeMem(0x8d61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf789, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d61));
        EXPECT(0x30, gbc.readMem(0x8d62));
        // CB 30 000E
        gbc.setState(0xcb95, 0xb5ec, 0xeb00, 0x80b2, 0xd3b2, 0xe3c1, 0x1, 0x0);
        gbc.writeMem(0xcb95, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb5ec, gbc.sp());
        EXPECT(0xcb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb95));
        EXPECT(0x30, gbc.readMem(0xcb96));
        // CB 30 000F
        gbc.setState(0x7de6, 0x3ed4, 0x6020, 0xd6d9, 0xe6b3, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0x7de6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3ed4, gbc.sp());
        EXPECT(0x7de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0010
        gbc.setState(0xb47d, 0x8cf2, 0x21e0, 0xc456, 0x65b9, 0x5c78, 0x1, 0x0);
        gbc.writeMem(0xb47d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8cf2, gbc.sp());
        EXPECT(0xb47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47d));
        EXPECT(0x30, gbc.readMem(0xb47e));
        // CB 30 0011
        gbc.setState(0xa551, 0x385c, 0x5cb0, 0x3f44, 0x4642, 0xdfef, 0x0, 0x0);
        gbc.writeMem(0xa551, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x385c, gbc.sp());
        EXPECT(0xa553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa551));
        EXPECT(0x30, gbc.readMem(0xa552));
        // CB 30 0012
        gbc.setState(0x1ee5, 0xaf78, 0xb060, 0x6016, 0x4d26, 0xb70a, 0x0, 0x1);
        gbc.writeMem(0x1ee5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaf78, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0013
        gbc.setState(0xd372, 0xb15a, 0x840, 0x63bf, 0x1a0d, 0x7ecc, 0x0, 0x1);
        gbc.writeMem(0xd372, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb15a, gbc.sp());
        EXPECT(0xd374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd372));
        EXPECT(0x30, gbc.readMem(0xd373));
        // CB 30 0014
        gbc.setState(0xe27e, 0xc1aa, 0x7580, 0xc756, 0xf2b9, 0xf446, 0x1, 0x0);
        gbc.writeMem(0xe27e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc1aa, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27e));
        EXPECT(0x30, gbc.readMem(0xe27f));
        // CB 30 0015
        gbc.setState(0xe279, 0x2702, 0x37c0, 0xe36, 0x730d, 0xc201, 0x0, 0x0);
        gbc.writeMem(0xe279, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2702, gbc.sp());
        EXPECT(0xe27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe279));
        EXPECT(0x30, gbc.readMem(0xe27a));
        // CB 30 0016
        gbc.setState(0x96ac, 0xc117, 0xf520, 0xd478, 0xe5ef, 0xa304, 0x0, 0x0);
        gbc.writeMem(0x96ac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc117, gbc.sp());
        EXPECT(0x96ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ac));
        EXPECT(0x30, gbc.readMem(0x96ad));
        // CB 30 0017
        gbc.setState(0x6d29, 0xafd5, 0xbfd0, 0xdc4a, 0xdb93, 0x825a, 0x0, 0x0);
        gbc.writeMem(0x6d29, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xafd5, gbc.sp());
        EXPECT(0x6d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0018
        gbc.setState(0x3948, 0xe8ac, 0x7060, 0xed63, 0x9c6c, 0xd714, 0x1, 0x1);
        gbc.writeMem(0x3948, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe8ac, gbc.sp());
        EXPECT(0x394a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0019
        gbc.setState(0xb191, 0x68bd, 0xee10, 0xebe6, 0x85cd, 0x5e4, 0x1, 0x0);
        gbc.writeMem(0xb191, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x68bd, gbc.sp());
        EXPECT(0xb193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb191));
        EXPECT(0x30, gbc.readMem(0xb192));
        // CB 30 001A
        gbc.setState(0x1745, 0xc667, 0x60a0, 0xfa52, 0x6282, 0xb430, 0x0, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc667, gbc.sp());
        EXPECT(0x1747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 001B
        gbc.setState(0xd0d, 0x939d, 0x7d10, 0x22d1, 0x726f, 0x324f, 0x1, 0x1);
        gbc.writeMem(0xd0d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x939d, gbc.sp());
        EXPECT(0xd0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 001C
        gbc.setState(0xa3af, 0x24c4, 0x8d40, 0xab71, 0xb1e5, 0xd458, 0x1, 0x0);
        gbc.writeMem(0xa3af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x24c4, gbc.sp());
        EXPECT(0xa3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3af));
        EXPECT(0x30, gbc.readMem(0xa3b0));
        // CB 30 001D
        gbc.setState(0xb3d4, 0x9385, 0x60b0, 0x7119, 0x6765, 0xf164, 0x0, 0x1);
        gbc.writeMem(0xb3d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0xb3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d4));
        EXPECT(0x30, gbc.readMem(0xb3d5));
        // CB 30 001E
        gbc.setState(0x33c0, 0x9dd9, 0xa120, 0xb484, 0x9861, 0x8227, 0x1, 0x0);
        gbc.writeMem(0x33c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9dd9, gbc.sp());
        EXPECT(0x33c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 001F
        gbc.setState(0xab59, 0xb344, 0x4bd0, 0x134f, 0x4145, 0xb720, 0x0, 0x1);
        gbc.writeMem(0xab59, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb344, gbc.sp());
        EXPECT(0xab5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab59));
        EXPECT(0x30, gbc.readMem(0xab5a));
        // CB 30 0020
        gbc.setState(0x726e, 0x199d, 0x290, 0xc8f9, 0xeff5, 0x1d2d, 0x0, 0x0);
        gbc.writeMem(0x726e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x199d, gbc.sp());
        EXPECT(0x7270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0021
        gbc.setState(0xec4, 0xc43, 0xbf30, 0xe575, 0x29b5, 0xffef, 0x0, 0x1);
        gbc.writeMem(0xec4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc43, gbc.sp());
        EXPECT(0xec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0022
        gbc.setState(0x4e44, 0xf540, 0xc7f0, 0xdee4, 0x42ba, 0xac39, 0x1, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf540, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0024
        gbc.setState(0xe6aa, 0x86fc, 0xe460, 0xb563, 0x1057, 0xc777, 0x0, 0x0);
        gbc.writeMem(0xe6aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x86fc, gbc.sp());
        EXPECT(0xe6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6aa));
        EXPECT(0x30, gbc.readMem(0xe6ab));
        // CB 30 0025
        gbc.setState(0x665c, 0xe063, 0xea0, 0x1dc6, 0x8c97, 0x68e4, 0x1, 0x1);
        gbc.writeMem(0x665c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe063, gbc.sp());
        EXPECT(0x665e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0027
        gbc.setState(0x5cc8, 0x1725, 0xe9a0, 0x36ae, 0x541d, 0x3c35, 0x1, 0x0);
        gbc.writeMem(0x5cc8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1725, gbc.sp());
        EXPECT(0x5cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0028
        gbc.setState(0xb861, 0x530f, 0x7160, 0xd222, 0x65c2, 0xd09d, 0x1, 0x1);
        gbc.writeMem(0xb861, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x530f, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb861));
        EXPECT(0x30, gbc.readMem(0xb862));
        // CB 30 0029
        gbc.setState(0x6ce4, 0x9c95, 0xc5f0, 0xdb21, 0xbe99, 0x2e57, 0x1, 0x1);
        gbc.writeMem(0x6ce4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9c95, gbc.sp());
        EXPECT(0x6ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 002A
        gbc.setState(0x2b5, 0xf7da, 0xd970, 0xcb80, 0x5b57, 0x2886, 0x1, 0x1);
        gbc.writeMem(0x2b5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf7da, gbc.sp());
        EXPECT(0x2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 002B
        gbc.setState(0xea82, 0x3304, 0xcac0, 0x9223, 0xccbd, 0xdd5c, 0x1, 0x0);
        gbc.writeMem(0xea82, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3304, gbc.sp());
        EXPECT(0xea84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea82));
        EXPECT(0x30, gbc.readMem(0xea83));
        // CB 30 002C
        gbc.setState(0x9b8c, 0xef10, 0x5720, 0x1f2d, 0x680a, 0xb986, 0x1, 0x1);
        gbc.writeMem(0x9b8c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xef10, gbc.sp());
        EXPECT(0x9b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8c));
        EXPECT(0x30, gbc.readMem(0x9b8d));
        // CB 30 002D
        gbc.setState(0x3cc, 0x429d, 0x1910, 0x8bd9, 0x25d3, 0x13bc, 0x1, 0x1);
        gbc.writeMem(0x3cc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 002E
        gbc.setState(0xe0df, 0x78f7, 0x72a0, 0xb451, 0xec5c, 0xad2, 0x1, 0x1);
        gbc.writeMem(0xe0df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x78f7, gbc.sp());
        EXPECT(0xe0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0df));
        EXPECT(0x30, gbc.readMem(0xe0e0));
        // CB 30 002F
        gbc.setState(0xea3a, 0x318, 0xf4c0, 0x7d70, 0x36bd, 0xde84, 0x1, 0x0);
        gbc.writeMem(0xea3a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x318, gbc.sp());
        EXPECT(0xea3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3a));
        EXPECT(0x30, gbc.readMem(0xea3b));
        // CB 30 0030
        gbc.setState(0x5ced, 0x9b1e, 0xdb40, 0x68ce, 0x5dd8, 0xfb5a, 0x1, 0x0);
        gbc.writeMem(0x5ced, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9b1e, gbc.sp());
        EXPECT(0x5cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0031
        gbc.setState(0xda72, 0xfddc, 0x6290, 0x3a5, 0x96b8, 0x30c2, 0x0, 0x0);
        gbc.writeMem(0xda72, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0xda74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda72));
        EXPECT(0x30, gbc.readMem(0xda73));
        // CB 30 0032
        gbc.setState(0x16f0, 0xb14a, 0x7640, 0x54df, 0xd61, 0xaa7c, 0x1, 0x1);
        gbc.writeMem(0x16f0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb14a, gbc.sp());
        EXPECT(0x16f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0033
        gbc.setState(0x679a, 0x4e1a, 0xa4c0, 0xd3d, 0x9ad5, 0x17d7, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4e1a, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0034
        gbc.setState(0xadb7, 0x15de, 0x9290, 0x8fbb, 0xc342, 0x23ff, 0x0, 0x1);
        gbc.writeMem(0xadb7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x15de, gbc.sp());
        EXPECT(0xadb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb7));
        EXPECT(0x30, gbc.readMem(0xadb8));
        // CB 30 0035
        gbc.setState(0xc521, 0x352f, 0x9030, 0xfe64, 0xd659, 0xc11c, 0x0, 0x0);
        gbc.writeMem(0xc521, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x352f, gbc.sp());
        EXPECT(0xc523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc521));
        EXPECT(0x30, gbc.readMem(0xc522));
        // CB 30 0036
        gbc.setState(0x1669, 0x90af, 0x26e0, 0xf992, 0x53a9, 0x695a, 0x0, 0x0);
        gbc.writeMem(0x1669, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x90af, gbc.sp());
        EXPECT(0x166b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0037
        gbc.setState(0x5bb6, 0x3cc8, 0x62e0, 0xbbcf, 0x93a8, 0x9d48, 0x0, 0x0);
        gbc.writeMem(0x5bb6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3cc8, gbc.sp());
        EXPECT(0x5bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0038
        gbc.setState(0x485d, 0x16fd, 0x5250, 0xc595, 0xcce8, 0xf1eb, 0x1, 0x0);
        gbc.writeMem(0x485d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x16fd, gbc.sp());
        EXPECT(0x485f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0039
        gbc.setState(0x7300, 0x6389, 0xdd40, 0xaa2d, 0x5425, 0x2706, 0x1, 0x1);
        gbc.writeMem(0x7300, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0x7302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 003A
        gbc.setState(0x6947, 0xfb73, 0x96f0, 0x6352, 0xcb81, 0x8e4c, 0x1, 0x1);
        gbc.writeMem(0x6947, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfb73, gbc.sp());
        EXPECT(0x6949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 003B
        gbc.setState(0xb827, 0x5c2, 0xbb10, 0xe0e7, 0x5159, 0x8747, 0x0, 0x0);
        gbc.writeMem(0xb827, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5c2, gbc.sp());
        EXPECT(0xb829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb827));
        EXPECT(0x30, gbc.readMem(0xb828));
        // CB 30 003C
        gbc.setState(0xc67d, 0x68f2, 0xcd40, 0xd785, 0xa73d, 0x5584, 0x1, 0x1);
        gbc.writeMem(0xc67d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x68f2, gbc.sp());
        EXPECT(0xc67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67d));
        EXPECT(0x30, gbc.readMem(0xc67e));
        // CB 30 003E
        gbc.setState(0x3742, 0xda8b, 0xccb0, 0xbb58, 0x9b77, 0x12ec, 0x0, 0x0);
        gbc.writeMem(0x3742, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xda8b, gbc.sp());
        EXPECT(0x3744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 003F
        gbc.setState(0x2001, 0x461f, 0x4150, 0x38d9, 0x8d0e, 0xde22, 0x1, 0x0);
        gbc.writeMem(0x2001, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x461f, gbc.sp());
        EXPECT(0x2003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0040
        gbc.setState(0xec4a, 0x4e81, 0x8e70, 0xad97, 0x2dcc, 0x870c, 0x0, 0x1);
        gbc.writeMem(0xec4a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e81, gbc.sp());
        EXPECT(0xec4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4a));
        EXPECT(0x30, gbc.readMem(0xec4b));
        // CB 30 0041
        gbc.setState(0xd32f, 0x68ed, 0x5810, 0x698d, 0x2560, 0x2c53, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0xd331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32f));
        EXPECT(0x30, gbc.readMem(0xd330));
        // CB 30 0042
        gbc.setState(0x52b0, 0xa263, 0x6fc0, 0xa4e6, 0x9a5a, 0x9386, 0x1, 0x1);
        gbc.writeMem(0x52b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa263, gbc.sp());
        EXPECT(0x52b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0043
        gbc.setState(0xbf15, 0x5d5e, 0x7b80, 0xac70, 0x6a60, 0x3fc7, 0x0, 0x0);
        gbc.writeMem(0xbf15, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5d5e, gbc.sp());
        EXPECT(0xbf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf15));
        EXPECT(0x30, gbc.readMem(0xbf16));
        // CB 30 0044
        gbc.setState(0x5809, 0xbf0c, 0x52a0, 0x613d, 0x2f0a, 0x7ad0, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbf0c, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0045
        gbc.setState(0x5369, 0x9845, 0x7870, 0x5fe8, 0x31aa, 0x34e4, 0x0, 0x0);
        gbc.writeMem(0x5369, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0x536b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0046
        gbc.setState(0x974a, 0xa2b3, 0xbfe0, 0xbce9, 0xe0e1, 0xa320, 0x0, 0x1);
        gbc.writeMem(0x974a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa2b3, gbc.sp());
        EXPECT(0x974c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x974a));
        EXPECT(0x30, gbc.readMem(0x974b));
        // CB 30 0047
        gbc.setState(0x7f7c, 0xa812, 0x1a10, 0xdf0c, 0xcc57, 0x6ca7, 0x0, 0x0);
        gbc.writeMem(0x7f7c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa812, gbc.sp());
        EXPECT(0x7f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0048
        gbc.setState(0x85bd, 0xa0b2, 0xeb90, 0x2b5d, 0x2dec, 0xfb21, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa0b2, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bd));
        EXPECT(0x30, gbc.readMem(0x85be));
        // CB 30 0049
        gbc.setState(0x174, 0x8c68, 0xd500, 0xada8, 0x2e4, 0xa385, 0x0, 0x1);
        gbc.writeMem(0x174, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8c68, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 004A
        gbc.setState(0xa4ce, 0x4b1d, 0x1890, 0x70a4, 0xd5d1, 0xe3b8, 0x1, 0x0);
        gbc.writeMem(0xa4ce, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4b1d, gbc.sp());
        EXPECT(0xa4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ce));
        EXPECT(0x30, gbc.readMem(0xa4cf));
        // CB 30 004B
        gbc.setState(0x3e2d, 0x58bc, 0x4ad0, 0x635a, 0xf421, 0x671b, 0x0, 0x0);
        gbc.writeMem(0x3e2d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x58bc, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 004C
        gbc.setState(0xd7ca, 0x8bc5, 0x5aa0, 0x9df1, 0xb9ca, 0x3261, 0x0, 0x1);
        gbc.writeMem(0xd7ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8bc5, gbc.sp());
        EXPECT(0xd7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ca));
        EXPECT(0x30, gbc.readMem(0xd7cb));
        // CB 30 004D
        gbc.setState(0x949f, 0x362, 0x62f0, 0xc832, 0xc828, 0x7504, 0x0, 0x0);
        gbc.writeMem(0x949f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x362, gbc.sp());
        EXPECT(0x94a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949f));
        EXPECT(0x30, gbc.readMem(0x94a0));
        // CB 30 004E
        gbc.setState(0xcced, 0x6342, 0x1b0, 0xb9bd, 0xcb8f, 0x5cc4, 0x1, 0x1);
        gbc.writeMem(0xcced, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6342, gbc.sp());
        EXPECT(0xccef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcced));
        EXPECT(0x30, gbc.readMem(0xccee));
        // CB 30 004F
        gbc.setState(0x8369, 0x5f77, 0xeea0, 0xc24c, 0xd0b8, 0x59ea, 0x0, 0x0);
        gbc.writeMem(0x8369, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5f77, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8369));
        EXPECT(0x30, gbc.readMem(0x836a));
        // CB 30 0050
        gbc.setState(0xc474, 0x2e54, 0x6260, 0xcb10, 0x2c9e, 0x5640, 0x1, 0x1);
        gbc.writeMem(0xc474, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0xc476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc474));
        EXPECT(0x30, gbc.readMem(0xc475));
        // CB 30 0051
        gbc.setState(0x5b83, 0xb915, 0x5d00, 0x7eda, 0x51cc, 0x82b5, 0x0, 0x0);
        gbc.writeMem(0x5b83, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb915, gbc.sp());
        EXPECT(0x5b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0052
        gbc.setState(0xd7ef, 0x2539, 0x3570, 0x7525, 0x5713, 0x9b39, 0x1, 0x0);
        gbc.writeMem(0xd7ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2539, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ef));
        EXPECT(0x30, gbc.readMem(0xd7f0));
        // CB 30 0053
        gbc.setState(0x98a, 0xf9f8, 0x2890, 0xe4e9, 0x67f, 0x9c9b, 0x0, 0x0);
        gbc.writeMem(0x98a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf9f8, gbc.sp());
        EXPECT(0x98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0054
        gbc.setState(0x5b3c, 0x5a2f, 0x1f30, 0x26f, 0x4d92, 0xfd69, 0x0, 0x1);
        gbc.writeMem(0x5b3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5a2f, gbc.sp());
        EXPECT(0x5b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0055
        gbc.setState(0x71cb, 0x888d, 0x2440, 0x14a8, 0x3255, 0xb75, 0x0, 0x1);
        gbc.writeMem(0x71cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x888d, gbc.sp());
        EXPECT(0x71cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0057
        gbc.setState(0x5e7e, 0xe7ac, 0x8280, 0x6944, 0x6690, 0x16f, 0x0, 0x1);
        gbc.writeMem(0x5e7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0x5e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0058
        gbc.setState(0x12ef, 0x7c79, 0xa500, 0x780, 0x6dda, 0x1efe, 0x1, 0x0);
        gbc.writeMem(0x12ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7c79, gbc.sp());
        EXPECT(0x12f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0059
        gbc.setState(0xd62b, 0x6a6f, 0xef80, 0xa9b0, 0x94ec, 0x9945, 0x1, 0x0);
        gbc.writeMem(0xd62b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6a6f, gbc.sp());
        EXPECT(0xd62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62b));
        EXPECT(0x30, gbc.readMem(0xd62c));
        // CB 30 005A
        gbc.setState(0xbfe6, 0x1759, 0x67f0, 0x751d, 0x2e0, 0x5962, 0x1, 0x1);
        gbc.writeMem(0xbfe6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1759, gbc.sp());
        EXPECT(0xbfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe6));
        EXPECT(0x30, gbc.readMem(0xbfe7));
        // CB 30 005B
        gbc.setState(0x528, 0xfaae, 0x2040, 0x4fbd, 0xe358, 0x86ba, 0x1, 0x0);
        gbc.writeMem(0x528, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfaae, gbc.sp());
        EXPECT(0x52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 005C
        gbc.setState(0xa6b8, 0xc143, 0x6d60, 0xf35d, 0xc588, 0xa6fb, 0x1, 0x0);
        gbc.writeMem(0xa6b8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0xa6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b8));
        EXPECT(0x30, gbc.readMem(0xa6b9));
        // CB 30 005D
        gbc.setState(0x61e2, 0xbf06, 0xc6e0, 0x752e, 0x3854, 0x41a8, 0x1, 0x1);
        gbc.writeMem(0x61e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbf06, gbc.sp());
        EXPECT(0x61e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 005E
        gbc.setState(0xccd8, 0x466b, 0x1070, 0xf45e, 0xaf91, 0x997b, 0x0, 0x1);
        gbc.writeMem(0xccd8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x466b, gbc.sp());
        EXPECT(0xccda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd8));
        EXPECT(0x30, gbc.readMem(0xccd9));
        // CB 30 005F
        gbc.setState(0x7a5a, 0xc5ed, 0xf080, 0xc513, 0xdfa0, 0x2d3e, 0x1, 0x1);
        gbc.writeMem(0x7a5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc5ed, gbc.sp());
        EXPECT(0x7a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0060
        gbc.setState(0x5c52, 0xb9cc, 0x6af0, 0x695a, 0xe32e, 0x9205, 0x0, 0x0);
        gbc.writeMem(0x5c52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb9cc, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0061
        gbc.setState(0x6180, 0x9a2d, 0x7e40, 0x9dda, 0x3460, 0x8a7b, 0x1, 0x0);
        gbc.writeMem(0x6180, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9a2d, gbc.sp());
        EXPECT(0x6182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0062
        gbc.setState(0xcf91, 0xe3f3, 0x9630, 0xe43d, 0x9242, 0x9149, 0x0, 0x0);
        gbc.writeMem(0xcf91, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe3f3, gbc.sp());
        EXPECT(0xcf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf91));
        EXPECT(0x30, gbc.readMem(0xcf92));
        // CB 30 0064
        gbc.setState(0x6d5f, 0xcc4b, 0xf260, 0xc840, 0xd359, 0xe484, 0x0, 0x1);
        gbc.writeMem(0x6d5f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcc4b, gbc.sp());
        EXPECT(0x6d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0067
        gbc.setState(0x3e2, 0x2c9e, 0x1100, 0x4bbb, 0xab39, 0x201c, 0x1, 0x0);
        gbc.writeMem(0x3e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2c9e, gbc.sp());
        EXPECT(0x3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0068
        gbc.setState(0xb7da, 0x7eed, 0x1000, 0xda33, 0x445a, 0x1aca, 0x0, 0x1);
        gbc.writeMem(0xb7da, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7eed, gbc.sp());
        EXPECT(0xb7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7da));
        EXPECT(0x30, gbc.readMem(0xb7db));
        // CB 30 0069
        gbc.setState(0x5012, 0xce3f, 0xc110, 0x5904, 0x7bf1, 0x833a, 0x0, 0x1);
        gbc.writeMem(0x5012, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xce3f, gbc.sp());
        EXPECT(0x5014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 006A
        gbc.setState(0xd6d0, 0x3e7a, 0x1e00, 0x2830, 0xeb4f, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0xd6d0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3e7a, gbc.sp());
        EXPECT(0xd6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d0));
        EXPECT(0x30, gbc.readMem(0xd6d1));
        // CB 30 006B
        gbc.setState(0xad90, 0xa54b, 0xeca0, 0x472f, 0xd2f0, 0xc67, 0x0, 0x1);
        gbc.writeMem(0xad90, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa54b, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad90));
        EXPECT(0x30, gbc.readMem(0xad91));
        // CB 30 006C
        gbc.setState(0xeacd, 0xa6ec, 0xaf40, 0x7b2b, 0xf97c, 0x68e3, 0x0, 0x0);
        gbc.writeMem(0xeacd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa6ec, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacd));
        EXPECT(0x30, gbc.readMem(0xeace));
        // CB 30 006D
        gbc.setState(0x3d4b, 0xfd24, 0xa850, 0x93fe, 0x69ec, 0x9b98, 0x0, 0x0);
        gbc.writeMem(0x3d4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfd24, gbc.sp());
        EXPECT(0x3d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 006E
        gbc.setState(0x70f8, 0xcc0a, 0x56d0, 0xdbbf, 0x1fe2, 0x51d2, 0x0, 0x1);
        gbc.writeMem(0x70f8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcc0a, gbc.sp());
        EXPECT(0x70fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 006F
        gbc.setState(0xcb5e, 0xdc8, 0x5e70, 0x6984, 0x5b15, 0x485b, 0x0, 0x1);
        gbc.writeMem(0xcb5e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdc8, gbc.sp());
        EXPECT(0xcb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5e));
        EXPECT(0x30, gbc.readMem(0xcb5f));
        // CB 30 0070
        gbc.setState(0xd9b3, 0x772a, 0x4f80, 0x1057, 0xcd84, 0x567a, 0x1, 0x1);
        gbc.writeMem(0xd9b3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x772a, gbc.sp());
        EXPECT(0xd9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b3));
        EXPECT(0x30, gbc.readMem(0xd9b4));
        // CB 30 0071
        gbc.setState(0xc655, 0xeb01, 0x2b60, 0x4ee, 0xbf5b, 0xef60, 0x1, 0x0);
        gbc.writeMem(0xc655, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeb01, gbc.sp());
        EXPECT(0xc657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc655));
        EXPECT(0x30, gbc.readMem(0xc656));
        // CB 30 0072
        gbc.setState(0x34df, 0x66b0, 0x5480, 0x2f7, 0x5711, 0x1e58, 0x1, 0x1);
        gbc.writeMem(0x34df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0074
        gbc.setState(0x7297, 0x5dca, 0x65e0, 0x2acf, 0x1c80, 0x9ec5, 0x1, 0x1);
        gbc.writeMem(0x7297, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5dca, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0075
        gbc.setState(0x1faf, 0xaa4a, 0xb210, 0x32ac, 0x8055, 0xe9a9, 0x0, 0x1);
        gbc.writeMem(0x1faf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xaa4a, gbc.sp());
        EXPECT(0x1fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0076
        gbc.setState(0xdb00, 0xcfe9, 0x4560, 0x101d, 0xc298, 0x13d1, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcfe9, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb00));
        EXPECT(0x30, gbc.readMem(0xdb01));
        // CB 30 0077
        gbc.setState(0x8fba, 0x5002, 0x6d80, 0x7485, 0xadb7, 0x557e, 0x0, 0x0);
        gbc.writeMem(0x8fba, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5002, gbc.sp());
        EXPECT(0x8fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fba));
        EXPECT(0x30, gbc.readMem(0x8fbb));
        // CB 30 0078
        gbc.setState(0x235c, 0x13f6, 0x3a80, 0x78da, 0xce50, 0xda75, 0x0, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x13f6, gbc.sp());
        EXPECT(0x235e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0079
        gbc.setState(0x7ddc, 0x7ac3, 0x4fe0, 0x9463, 0x92e2, 0x89a6, 0x1, 0x1);
        gbc.writeMem(0x7ddc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 007A
        gbc.setState(0x508, 0xc00, 0x5a40, 0x1fa, 0xf867, 0x6263, 0x0, 0x1);
        gbc.writeMem(0x508, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc00, gbc.sp());
        EXPECT(0x50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 007B
        gbc.setState(0x2b2c, 0x3713, 0x7110, 0xdfb7, 0x5e0a, 0xbe42, 0x0, 0x1);
        gbc.writeMem(0x2b2c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3713, gbc.sp());
        EXPECT(0x2b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 007C
        gbc.setState(0xb7e9, 0x5011, 0xd7b0, 0x8e62, 0xc8d0, 0xac8, 0x1, 0x1);
        gbc.writeMem(0xb7e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5011, gbc.sp());
        EXPECT(0xb7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e9));
        EXPECT(0x30, gbc.readMem(0xb7ea));
        // CB 30 007D
        gbc.setState(0x99f4, 0x90d3, 0x2a40, 0xc3b0, 0x1705, 0xc0df, 0x1, 0x1);
        gbc.writeMem(0x99f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x90d3, gbc.sp());
        EXPECT(0x99f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f4));
        EXPECT(0x30, gbc.readMem(0x99f5));
        // CB 30 007E
        gbc.setState(0x9c60, 0x1d30, 0xe240, 0x68ef, 0xee0e, 0x681d, 0x0, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1d30, gbc.sp());
        EXPECT(0x9c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c60));
        EXPECT(0x30, gbc.readMem(0x9c61));
        // CB 30 007F
        gbc.setState(0x4ade, 0x2bed, 0x5b30, 0xc7a6, 0xeaa2, 0x8384, 0x1, 0x0);
        gbc.writeMem(0x4ade, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2bed, gbc.sp());
        EXPECT(0x4ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0080
        gbc.setState(0x171c, 0xad57, 0x8dc0, 0x6067, 0x305e, 0x164e, 0x0, 0x1);
        gbc.writeMem(0x171c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xad57, gbc.sp());
        EXPECT(0x171e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0081
        gbc.setState(0x6ccc, 0x78d4, 0x620, 0x27d2, 0x9bfb, 0xd55, 0x1, 0x1);
        gbc.writeMem(0x6ccc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x78d4, gbc.sp());
        EXPECT(0x6cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0082
        gbc.setState(0xe1c3, 0xf7b, 0x1020, 0x5a36, 0x1223, 0x810b, 0x0, 0x0);
        gbc.writeMem(0xe1c3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0xe1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c3));
        EXPECT(0x30, gbc.readMem(0xe1c4));
        // CB 30 0083
        gbc.setState(0x4679, 0x180f, 0xac70, 0x2e58, 0x1712, 0xcb78, 0x0, 0x1);
        gbc.writeMem(0x4679, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0x467b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0084
        gbc.setState(0xd59, 0xd480, 0x76d0, 0xd23e, 0x7056, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0xd59, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd480, gbc.sp());
        EXPECT(0xd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0085
        gbc.setState(0x464e, 0xa571, 0x2670, 0xd1fb, 0x930, 0x25ee, 0x1, 0x1);
        gbc.writeMem(0x464e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa571, gbc.sp());
        EXPECT(0x4650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0086
        gbc.setState(0x1eb5, 0xd204, 0xe150, 0x2533, 0x94a5, 0x1784, 0x0, 0x0);
        gbc.writeMem(0x1eb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd204, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0087
        gbc.setState(0xdf41, 0xfce5, 0x5210, 0x31ec, 0xe692, 0xfb8, 0x1, 0x1);
        gbc.writeMem(0xdf41, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfce5, gbc.sp());
        EXPECT(0xdf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf41));
        EXPECT(0x30, gbc.readMem(0xdf42));
        // CB 30 0088
        gbc.setState(0xbe45, 0x26bf, 0xea00, 0x225d, 0x6427, 0x1d1d, 0x1, 0x1);
        gbc.writeMem(0xbe45, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0xbe47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe45));
        EXPECT(0x30, gbc.readMem(0xbe46));
        // CB 30 0089
        gbc.setState(0x195a, 0xc878, 0xd740, 0x6bed, 0x6e91, 0x759f, 0x1, 0x0);
        gbc.writeMem(0x195a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc878, gbc.sp());
        EXPECT(0x195c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 008A
        gbc.setState(0xe0af, 0x3ded, 0xcc0, 0xb2ca, 0xee2e, 0xb2f2, 0x1, 0x1);
        gbc.writeMem(0xe0af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3ded, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0af));
        EXPECT(0x30, gbc.readMem(0xe0b0));
        // CB 30 008B
        gbc.setState(0xd7b3, 0x5b8c, 0x1920, 0xe723, 0x5a93, 0x48c2, 0x1, 0x1);
        gbc.writeMem(0xd7b3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5b8c, gbc.sp());
        EXPECT(0xd7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b3));
        EXPECT(0x30, gbc.readMem(0xd7b4));
        // CB 30 008C
        gbc.setState(0x57aa, 0xe861, 0x24f0, 0x9bd7, 0x51af, 0xfdd8, 0x1, 0x1);
        gbc.writeMem(0x57aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe861, gbc.sp());
        EXPECT(0x57ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 008D
        gbc.setState(0x8e4b, 0xa8f4, 0xdda0, 0xd794, 0xf4be, 0x5767, 0x0, 0x0);
        gbc.writeMem(0x8e4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa8f4, gbc.sp());
        EXPECT(0x8e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4b));
        EXPECT(0x30, gbc.readMem(0x8e4c));
        // CB 30 008E
        gbc.setState(0xd181, 0x3ba0, 0x88c0, 0x731e, 0x6de9, 0x2310, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3ba0, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd181));
        EXPECT(0x30, gbc.readMem(0xd182));
        // CB 30 008F
        gbc.setState(0x85d, 0xf067, 0x5290, 0xd1c7, 0x63e2, 0xfa2e, 0x0, 0x0);
        gbc.writeMem(0x85d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf067, gbc.sp());
        EXPECT(0x85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0090
        gbc.setState(0xbec9, 0x60f2, 0x1480, 0xbe8f, 0xf617, 0x1c91, 0x0, 0x0);
        gbc.writeMem(0xbec9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x60f2, gbc.sp());
        EXPECT(0xbecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec9));
        EXPECT(0x30, gbc.readMem(0xbeca));
        // CB 30 0091
        gbc.setState(0xc84a, 0x28f0, 0xb50, 0x6449, 0x4951, 0xf01f, 0x1, 0x0);
        gbc.writeMem(0xc84a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x28f0, gbc.sp());
        EXPECT(0xc84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84a));
        EXPECT(0x30, gbc.readMem(0xc84b));
        // CB 30 0092
        gbc.setState(0xd89c, 0xfb7c, 0x1c30, 0x571a, 0xa077, 0xad4c, 0x1, 0x0);
        gbc.writeMem(0xd89c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0xd89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89c));
        EXPECT(0x30, gbc.readMem(0xd89d));
        // CB 30 0093
        gbc.setState(0x84d1, 0x457b, 0x210, 0xe04e, 0x73ca, 0x2d27, 0x1, 0x1);
        gbc.writeMem(0x84d1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x84d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d1));
        EXPECT(0x30, gbc.readMem(0x84d2));
        // CB 30 0094
        gbc.setState(0xb079, 0xcef9, 0xf270, 0x4467, 0x4435, 0x1691, 0x0, 0x0);
        gbc.writeMem(0xb079, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcef9, gbc.sp());
        EXPECT(0xb07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb079));
        EXPECT(0x30, gbc.readMem(0xb07a));
        // CB 30 0095
        gbc.setState(0xca8d, 0xf4f9, 0xa570, 0x48b4, 0xbe09, 0x8ab6, 0x1, 0x1);
        gbc.writeMem(0xca8d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf4f9, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8d));
        EXPECT(0x30, gbc.readMem(0xca8e));
        // CB 30 0097
        gbc.setState(0xdf5a, 0x9760, 0x1240, 0xc859, 0x6724, 0x1b98, 0x0, 0x1);
        gbc.writeMem(0xdf5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0xdf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5a));
        EXPECT(0x30, gbc.readMem(0xdf5b));
        // CB 30 0098
        gbc.setState(0x289b, 0x6da, 0xf800, 0x336e, 0xd76d, 0x167b, 0x0, 0x0);
        gbc.writeMem(0x289b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6da, gbc.sp());
        EXPECT(0x289d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0099
        gbc.setState(0x25c8, 0xe317, 0x60a0, 0x68bd, 0x69a5, 0xd417, 0x0, 0x1);
        gbc.writeMem(0x25c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe317, gbc.sp());
        EXPECT(0x25ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 009A
        gbc.setState(0xc1de, 0x47d7, 0x7f30, 0xe4f3, 0x806b, 0x6dc, 0x0, 0x0);
        gbc.writeMem(0xc1de, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x47d7, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1de));
        EXPECT(0x30, gbc.readMem(0xc1df));
        // CB 30 009B
        gbc.setState(0xe460, 0xc532, 0x81f0, 0x281d, 0xbb9, 0x5e77, 0x0, 0x1);
        gbc.writeMem(0xe460, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc532, gbc.sp());
        EXPECT(0xe462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe460));
        EXPECT(0x30, gbc.readMem(0xe461));
        // CB 30 009C
        gbc.setState(0x232, 0x69f5, 0x21a0, 0x359e, 0xb590, 0xd0f1, 0x0, 0x1);
        gbc.writeMem(0x232, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x69f5, gbc.sp());
        EXPECT(0x234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 009D
        gbc.setState(0x803a, 0xbd54, 0x900, 0x33e6, 0x605e, 0x3288, 0x1, 0x1);
        gbc.writeMem(0x803a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbd54, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803a));
        EXPECT(0x30, gbc.readMem(0x803b));
        // CB 30 009E
        gbc.setState(0xd71c, 0xf845, 0xeec0, 0xe77b, 0xb738, 0x4397, 0x0, 0x0);
        gbc.writeMem(0xd71c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf845, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71c));
        EXPECT(0x30, gbc.readMem(0xd71d));
        // CB 30 009F
        gbc.setState(0x3644, 0xd53, 0x3b00, 0xdf51, 0x4429, 0x5522, 0x1, 0x0);
        gbc.writeMem(0x3644, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd53, gbc.sp());
        EXPECT(0x3646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00A0
        gbc.setState(0xd9c4, 0xadf9, 0xa170, 0x8108, 0xb945, 0x3480, 0x0, 0x1);
        gbc.writeMem(0xd9c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xadf9, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c4));
        EXPECT(0x30, gbc.readMem(0xd9c5));
        // CB 30 00A1
        gbc.setState(0x3772, 0x9503, 0x48d0, 0xb144, 0xab63, 0x7cf4, 0x0, 0x0);
        gbc.writeMem(0x3772, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9503, gbc.sp());
        EXPECT(0x3774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00A2
        gbc.setState(0xb194, 0xb37, 0x9150, 0x15e1, 0x23ff, 0x6ea9, 0x1, 0x0);
        gbc.writeMem(0xb194, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb37, gbc.sp());
        EXPECT(0xb196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb194));
        EXPECT(0x30, gbc.readMem(0xb195));
        // CB 30 00A3
        gbc.setState(0x622f, 0x4d5f, 0xfad0, 0xdcce, 0x3399, 0xc29b, 0x0, 0x0);
        gbc.writeMem(0x622f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4d5f, gbc.sp());
        EXPECT(0x6231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00A4
        gbc.setState(0xb621, 0xee26, 0x52d0, 0xcf7, 0xafef, 0xb983, 0x0, 0x1);
        gbc.writeMem(0xb621, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xee26, gbc.sp());
        EXPECT(0xb623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb621));
        EXPECT(0x30, gbc.readMem(0xb622));
        // CB 30 00A5
        gbc.setState(0x8de3, 0xb5e2, 0xb050, 0x772c, 0x446c, 0x973a, 0x0, 0x1);
        gbc.writeMem(0x8de3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb5e2, gbc.sp());
        EXPECT(0x8de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de3));
        EXPECT(0x30, gbc.readMem(0x8de4));
        // CB 30 00A6
        gbc.setState(0x3cfb, 0x3605, 0xec70, 0x2cbe, 0x8410, 0x46e, 0x0, 0x1);
        gbc.writeMem(0x3cfb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3605, gbc.sp());
        EXPECT(0x3cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00A7
        gbc.setState(0xdb93, 0xfe40, 0xcf0, 0x6db, 0xa57c, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0xdb93, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfe40, gbc.sp());
        EXPECT(0xdb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb93));
        EXPECT(0x30, gbc.readMem(0xdb94));
        // CB 30 00A8
        gbc.setState(0x91a9, 0x4ad, 0xac0, 0xabcc, 0xbb24, 0x6a0c, 0x0, 0x1);
        gbc.writeMem(0x91a9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4ad, gbc.sp());
        EXPECT(0x91ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a9));
        EXPECT(0x30, gbc.readMem(0x91aa));
        // CB 30 00A9
        gbc.setState(0x28fa, 0x5b1b, 0x990, 0xe13f, 0xac6e, 0x74f1, 0x1, 0x0);
        gbc.writeMem(0x28fa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x28fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00AA
        gbc.setState(0xd331, 0xddc0, 0xb5f0, 0x851f, 0x2693, 0x1fdf, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xddc0, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd331));
        EXPECT(0x30, gbc.readMem(0xd332));
        // CB 30 00AB
        gbc.setState(0xb700, 0x84cb, 0x12b0, 0xbd7c, 0x9912, 0xa6b8, 0x1, 0x1);
        gbc.writeMem(0xb700, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb700));
        EXPECT(0x30, gbc.readMem(0xb701));
        // CB 30 00AC
        gbc.setState(0xa548, 0x666f, 0x1d40, 0xb520, 0xeba5, 0x1eb6, 0x1, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x666f, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa548));
        EXPECT(0x30, gbc.readMem(0xa549));
        // CB 30 00AD
        gbc.setState(0xa24f, 0x8f96, 0x96e0, 0x6e15, 0x4c3e, 0xd0dd, 0x0, 0x0);
        gbc.writeMem(0xa24f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0xa251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24f));
        EXPECT(0x30, gbc.readMem(0xa250));
        // CB 30 00AE
        gbc.setState(0x688f, 0x8108, 0xefd0, 0xd7d9, 0xa2d3, 0xd1df, 0x1, 0x0);
        gbc.writeMem(0x688f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8108, gbc.sp());
        EXPECT(0x6891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00AF
        gbc.setState(0xd0f8, 0xb713, 0x4360, 0x12c6, 0xaca, 0xaca8, 0x0, 0x0);
        gbc.writeMem(0xd0f8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb713, gbc.sp());
        EXPECT(0xd0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f8));
        EXPECT(0x30, gbc.readMem(0xd0f9));
        // CB 30 00B0
        gbc.setState(0x878, 0x2f0c, 0xc570, 0x7223, 0x3b1a, 0x2a88, 0x1, 0x1);
        gbc.writeMem(0x878, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2f0c, gbc.sp());
        EXPECT(0x87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00B1
        gbc.setState(0xa854, 0x15a7, 0x13d0, 0xb366, 0xff28, 0xe977, 0x1, 0x1);
        gbc.writeMem(0xa854, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x15a7, gbc.sp());
        EXPECT(0xa856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa854));
        EXPECT(0x30, gbc.readMem(0xa855));
        // CB 30 00B2
        gbc.setState(0x926c, 0x5b79, 0x5680, 0x2d08, 0x5197, 0xd13, 0x0, 0x1);
        gbc.writeMem(0x926c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5b79, gbc.sp());
        EXPECT(0x926e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926c));
        EXPECT(0x30, gbc.readMem(0x926d));
        // CB 30 00B4
        gbc.setState(0x1726, 0x53a3, 0x4650, 0x84e4, 0x9917, 0x84c1, 0x0, 0x0);
        gbc.writeMem(0x1726, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x53a3, gbc.sp());
        EXPECT(0x1728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00B5
        gbc.setState(0x2b04, 0xd113, 0x7e10, 0xcbce, 0x813b, 0x713b, 0x0, 0x0);
        gbc.writeMem(0x2b04, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0x2b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00B6
        gbc.setState(0x17e3, 0x39bb, 0x4190, 0x4186, 0xd4a1, 0xa3ca, 0x1, 0x0);
        gbc.writeMem(0x17e3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x39bb, gbc.sp());
        EXPECT(0x17e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00B7
        gbc.setState(0xd1c4, 0x9ded, 0x87a0, 0xc426, 0x7f94, 0x96ec, 0x1, 0x1);
        gbc.writeMem(0xd1c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9ded, gbc.sp());
        EXPECT(0xd1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c4));
        EXPECT(0x30, gbc.readMem(0xd1c5));
        // CB 30 00B8
        gbc.setState(0x7c2a, 0xf8c2, 0x4eb0, 0x4b11, 0x287a, 0x20b5, 0x1, 0x0);
        gbc.writeMem(0x7c2a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf8c2, gbc.sp());
        EXPECT(0x7c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00B9
        gbc.setState(0x2bc, 0x10d0, 0x8590, 0xffc3, 0x42b3, 0x83e1, 0x0, 0x1);
        gbc.writeMem(0x2bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0x2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00BB
        gbc.setState(0x4bf4, 0xd930, 0x3ec0, 0x70ba, 0x6fb6, 0x1e5c, 0x0, 0x1);
        gbc.writeMem(0x4bf4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd930, gbc.sp());
        EXPECT(0x4bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00BC
        gbc.setState(0x13c, 0x3fb9, 0x4c10, 0x4958, 0x1e34, 0xc1a3, 0x1, 0x1);
        gbc.writeMem(0x13c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3fb9, gbc.sp());
        EXPECT(0x13e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00BD
        gbc.setState(0x211e, 0xdffe, 0x5680, 0x4d50, 0xd3ea, 0x9c60, 0x1, 0x1);
        gbc.writeMem(0x211e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdffe, gbc.sp());
        EXPECT(0x2120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00BE
        gbc.setState(0x3d8e, 0xe177, 0x3270, 0x9240, 0x46a3, 0xc342, 0x1, 0x0);
        gbc.writeMem(0x3d8e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe177, gbc.sp());
        EXPECT(0x3d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00BF
        gbc.setState(0x9fbf, 0x6358, 0xea00, 0x9c96, 0x15d7, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6358, gbc.sp());
        EXPECT(0x9fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbf));
        EXPECT(0x30, gbc.readMem(0x9fc0));
        // CB 30 00C0
        gbc.setState(0x9042, 0x36ff, 0xb950, 0x1cf9, 0xa3e3, 0xeba7, 0x1, 0x1);
        gbc.writeMem(0x9042, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0x9044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9042));
        EXPECT(0x30, gbc.readMem(0x9043));
        // CB 30 00C2
        gbc.setState(0x3783, 0x8db8, 0xb650, 0x4ad4, 0x476, 0x3c28, 0x1, 0x0);
        gbc.writeMem(0x3783, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0x3785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00C3
        gbc.setState(0x8e17, 0x18ed, 0xe300, 0x1e6d, 0xb5bb, 0xbebd, 0x0, 0x0);
        gbc.writeMem(0x8e17, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x18ed, gbc.sp());
        EXPECT(0x8e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e17));
        EXPECT(0x30, gbc.readMem(0x8e18));
        // CB 30 00C4
        gbc.setState(0xcc34, 0xcdac, 0x1620, 0x3e5c, 0x428f, 0x4ac9, 0x0, 0x1);
        gbc.writeMem(0xcc34, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcdac, gbc.sp());
        EXPECT(0xcc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc34));
        EXPECT(0x30, gbc.readMem(0xcc35));
        // CB 30 00C5
        gbc.setState(0x4c0, 0xc6ab, 0x2b00, 0xb4e5, 0xcb7a, 0x917, 0x1, 0x1);
        gbc.writeMem(0x4c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc6ab, gbc.sp());
        EXPECT(0x4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00C6
        gbc.setState(0xe9af, 0x8451, 0x1170, 0x6b84, 0xd5ae, 0xce8c, 0x1, 0x1);
        gbc.writeMem(0xe9af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0xe9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9af));
        EXPECT(0x30, gbc.readMem(0xe9b0));
        // CB 30 00C7
        gbc.setState(0xdcb5, 0x244c, 0x6d10, 0x8452, 0x1941, 0xc816, 0x0, 0x1);
        gbc.writeMem(0xdcb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb5));
        EXPECT(0x30, gbc.readMem(0xdcb6));
        // CB 30 00C8
        gbc.setState(0xbb15, 0x57a8, 0x1890, 0xaf80, 0x7f2, 0x7bcc, 0x0, 0x0);
        gbc.writeMem(0xbb15, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x57a8, gbc.sp());
        EXPECT(0xbb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb15));
        EXPECT(0x30, gbc.readMem(0xbb16));
        // CB 30 00C9
        gbc.setState(0x933c, 0xed8b, 0xbfc0, 0x3eb2, 0x3286, 0xc33d, 0x1, 0x1);
        gbc.writeMem(0x933c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0x933e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933c));
        EXPECT(0x30, gbc.readMem(0x933d));
        // CB 30 00CA
        gbc.setState(0x10e9, 0x871c, 0xe830, 0xd6da, 0x9d91, 0xc2cc, 0x0, 0x0);
        gbc.writeMem(0x10e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x871c, gbc.sp());
        EXPECT(0x10eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00CB
        gbc.setState(0xc81e, 0x5c2c, 0xc4f0, 0xc23d, 0x960, 0x384b, 0x0, 0x0);
        gbc.writeMem(0xc81e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5c2c, gbc.sp());
        EXPECT(0xc820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81e));
        EXPECT(0x30, gbc.readMem(0xc81f));
        // CB 30 00CC
        gbc.setState(0x37f6, 0xfaf3, 0x5a80, 0x753d, 0x3757, 0x36ee, 0x1, 0x0);
        gbc.writeMem(0x37f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfaf3, gbc.sp());
        EXPECT(0x37f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00CD
        gbc.setState(0xc996, 0xb44, 0x5b30, 0x4eef, 0xc4d0, 0x7225, 0x0, 0x1);
        gbc.writeMem(0xc996, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb44, gbc.sp());
        EXPECT(0xc998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc996));
        EXPECT(0x30, gbc.readMem(0xc997));
        // CB 30 00CE
        gbc.setState(0x3d8b, 0xd488, 0x58f0, 0xbc6, 0x6bb9, 0xf42e, 0x1, 0x1);
        gbc.writeMem(0x3d8b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd488, gbc.sp());
        EXPECT(0x3d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00CF
        gbc.setState(0x7344, 0x8dc4, 0x5660, 0xd66a, 0xcaa8, 0x6dc5, 0x1, 0x0);
        gbc.writeMem(0x7344, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8dc4, gbc.sp());
        EXPECT(0x7346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00D0
        gbc.setState(0x9f42, 0x677a, 0xd5f0, 0x990, 0xf156, 0xcac9, 0x1, 0x0);
        gbc.writeMem(0x9f42, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x677a, gbc.sp());
        EXPECT(0x9f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f42));
        EXPECT(0x30, gbc.readMem(0x9f43));
        // CB 30 00D1
        gbc.setState(0x5ffd, 0xb5ac, 0xce70, 0xebce, 0xa529, 0xdcb7, 0x0, 0x0);
        gbc.writeMem(0x5ffd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb5ac, gbc.sp());
        EXPECT(0x5fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00D2
        gbc.setState(0xe58f, 0x7c61, 0xdd10, 0x1375, 0xe6af, 0xafb6, 0x0, 0x0);
        gbc.writeMem(0xe58f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7c61, gbc.sp());
        EXPECT(0xe591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58f));
        EXPECT(0x30, gbc.readMem(0xe590));
        // CB 30 00D3
        gbc.setState(0x3ec5, 0x2f5a, 0x8620, 0x4b94, 0x5811, 0x4538, 0x1, 0x1);
        gbc.writeMem(0x3ec5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2f5a, gbc.sp());
        EXPECT(0x3ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00D4
        gbc.setState(0xc53b, 0x167d, 0x14e0, 0xb4f0, 0x2e6a, 0x3794, 0x1, 0x0);
        gbc.writeMem(0xc53b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x167d, gbc.sp());
        EXPECT(0xc53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53b));
        EXPECT(0x30, gbc.readMem(0xc53c));
        // CB 30 00D5
        gbc.setState(0x8dc1, 0x7d45, 0x8ed0, 0xf51, 0xb37e, 0x1c1b, 0x1, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7d45, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc1));
        EXPECT(0x30, gbc.readMem(0x8dc2));
        // CB 30 00D6
        gbc.setState(0x8532, 0xa4c8, 0xea60, 0xa270, 0xf269, 0x954c, 0x1, 0x0);
        gbc.writeMem(0x8532, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa4c8, gbc.sp());
        EXPECT(0x8534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8532));
        EXPECT(0x30, gbc.readMem(0x8533));
        // CB 30 00D7
        gbc.setState(0x7ce1, 0xf411, 0x6960, 0x4e9d, 0x12c2, 0x6800, 0x1, 0x0);
        gbc.writeMem(0x7ce1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf411, gbc.sp());
        EXPECT(0x7ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00D8
        gbc.setState(0x4901, 0xda58, 0x6dd0, 0x7e0c, 0xa319, 0x309, 0x0, 0x1);
        gbc.writeMem(0x4901, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda58, gbc.sp());
        EXPECT(0x4903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00D9
        gbc.setState(0x98be, 0x856b, 0x8890, 0x3ec9, 0x38d1, 0xb4af, 0x1, 0x1);
        gbc.writeMem(0x98be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x856b, gbc.sp());
        EXPECT(0x98c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98be));
        EXPECT(0x30, gbc.readMem(0x98bf));
        // CB 30 00DA
        gbc.setState(0xd1dd, 0xbdec, 0x79b0, 0x4456, 0xb33d, 0xcc79, 0x1, 0x1);
        gbc.writeMem(0xd1dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbdec, gbc.sp());
        EXPECT(0xd1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1dd));
        EXPECT(0x30, gbc.readMem(0xd1de));
        // CB 30 00DD
        gbc.setState(0x2eba, 0x8d4, 0x5230, 0xcdbb, 0x173b, 0xc1b3, 0x0, 0x0);
        gbc.writeMem(0x2eba, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8d4, gbc.sp());
        EXPECT(0x2ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00DE
        gbc.setState(0x4019, 0x3a52, 0x5b90, 0x67a3, 0x1ce6, 0x6f00, 0x1, 0x0);
        gbc.writeMem(0x4019, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3a52, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00DF
        gbc.setState(0x2121, 0x308b, 0x7f30, 0xd900, 0x46f4, 0x365e, 0x0, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0x2123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00E0
        gbc.setState(0x904a, 0x8699, 0xf670, 0x8062, 0x61f0, 0xe032, 0x0, 0x1);
        gbc.writeMem(0x904a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8699, gbc.sp());
        EXPECT(0x904c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904a));
        EXPECT(0x30, gbc.readMem(0x904b));
        // CB 30 00E2
        gbc.setState(0xbd68, 0xcc00, 0xafd0, 0xa482, 0xea62, 0xb44e, 0x1, 0x1);
        gbc.writeMem(0xbd68, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcc00, gbc.sp());
        EXPECT(0xbd6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd68));
        EXPECT(0x30, gbc.readMem(0xbd69));
        // CB 30 00E3
        gbc.setState(0x3c40, 0x57be, 0xeef0, 0xbb72, 0xc26d, 0x50b3, 0x0, 0x1);
        gbc.writeMem(0x3c40, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x57be, gbc.sp());
        EXPECT(0x3c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00E4
        gbc.setState(0x7195, 0x2d61, 0x6210, 0x4724, 0x5147, 0x1257, 0x0, 0x0);
        gbc.writeMem(0x7195, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00E5
        gbc.setState(0x21ef, 0x764b, 0xdd0, 0x10d5, 0x32b, 0x287, 0x1, 0x1);
        gbc.writeMem(0x21ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0x21f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00E6
        gbc.setState(0xc752, 0x6ce9, 0x7b70, 0xd2b0, 0xcd11, 0x7867, 0x1, 0x0);
        gbc.writeMem(0xc752, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6ce9, gbc.sp());
        EXPECT(0xc754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc752));
        EXPECT(0x30, gbc.readMem(0xc753));
        // CB 30 00E7
        gbc.setState(0x75dd, 0xf365, 0x9590, 0x739a, 0x52a4, 0xc0ec, 0x1, 0x1);
        gbc.writeMem(0x75dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0x75df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00E8
        gbc.setState(0x62ef, 0xa23e, 0xc120, 0x3045, 0x1920, 0x7c16, 0x0, 0x1);
        gbc.writeMem(0x62ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa23e, gbc.sp());
        EXPECT(0x62f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00E9
        gbc.setState(0xd5d, 0x3d09, 0x4980, 0xf7f2, 0x6a7f, 0x7946, 0x0, 0x0);
        gbc.writeMem(0xd5d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3d09, gbc.sp());
        EXPECT(0xd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00EB
        gbc.setState(0xde4e, 0xc2f5, 0xee50, 0x14ab, 0x74e9, 0x1423, 0x1, 0x0);
        gbc.writeMem(0xde4e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0xde50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4e));
        EXPECT(0x30, gbc.readMem(0xde4f));
        // CB 30 00ED
        gbc.setState(0xa6c4, 0xeb94, 0xebf0, 0xec45, 0x9878, 0x349, 0x0, 0x0);
        gbc.writeMem(0xa6c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeb94, gbc.sp());
        EXPECT(0xa6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c4));
        EXPECT(0x30, gbc.readMem(0xa6c5));
        // CB 30 00EE
        gbc.setState(0x55f8, 0x72ec, 0x5c20, 0x5c99, 0x43de, 0x38e6, 0x0, 0x1);
        gbc.writeMem(0x55f8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x72ec, gbc.sp());
        EXPECT(0x55fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00EF
        gbc.setState(0xe911, 0xf612, 0x5850, 0xd1ad, 0xe896, 0x4590, 0x0, 0x0);
        gbc.writeMem(0xe911, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf612, gbc.sp());
        EXPECT(0xe913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe911));
        EXPECT(0x30, gbc.readMem(0xe912));
        // CB 30 00F1
        gbc.setState(0xef5c, 0xebc2, 0x9e30, 0x3db0, 0x524, 0xfa55, 0x1, 0x1);
        gbc.writeMem(0xef5c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xebc2, gbc.sp());
        EXPECT(0xef5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5c));
        EXPECT(0x30, gbc.readMem(0xef5d));
        // CB 30 00F2
        gbc.setState(0x118c, 0x5d0b, 0x9230, 0x8638, 0xf9c9, 0x3173, 0x1, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0x118e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00F3
        gbc.setState(0x5635, 0x1ab, 0xb360, 0xecc8, 0x5d88, 0x9973, 0x1, 0x0);
        gbc.writeMem(0x5635, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1ab, gbc.sp());
        EXPECT(0x5637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00F4
        gbc.setState(0xc7c5, 0x5be2, 0xcfb0, 0xf71b, 0x26fb, 0xcdda, 0x1, 0x0);
        gbc.writeMem(0xc7c5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5be2, gbc.sp());
        EXPECT(0xc7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c5));
        EXPECT(0x30, gbc.readMem(0xc7c6));
        // CB 30 00F5
        gbc.setState(0xacca, 0xc73e, 0xfb60, 0x12a5, 0x7c70, 0xe7d4, 0x1, 0x0);
        gbc.writeMem(0xacca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacca));
        EXPECT(0x30, gbc.readMem(0xaccb));
        // CB 30 00F6
        gbc.setState(0x26f1, 0x450b, 0x7010, 0x754a, 0x4fa4, 0xc24c, 0x0, 0x1);
        gbc.writeMem(0x26f1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x450b, gbc.sp());
        EXPECT(0x26f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00F7
        gbc.setState(0xabf, 0xdb35, 0xcb90, 0x56a2, 0x2197, 0xe66f, 0x1, 0x1);
        gbc.writeMem(0xabf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdb35, gbc.sp());
        EXPECT(0xac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00F8
        gbc.setState(0x2668, 0x88d8, 0xf470, 0x93a8, 0x4531, 0x399a, 0x0, 0x0);
        gbc.writeMem(0x2668, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x88d8, gbc.sp());
        EXPECT(0x266a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00F9
        gbc.setState(0x30d0, 0x1737, 0x5f30, 0x65d7, 0xab8c, 0x20ab, 0x0, 0x1);
        gbc.writeMem(0x30d0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1737, gbc.sp());
        EXPECT(0x30d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00FA
        gbc.setState(0xa0f6, 0xd5e6, 0xef20, 0xe6ec, 0x6db8, 0x251c, 0x0, 0x0);
        gbc.writeMem(0xa0f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f6));
        EXPECT(0x30, gbc.readMem(0xa0f7));
        // CB 30 00FB
        gbc.setState(0x4ead, 0x6c95, 0x9840, 0xf03a, 0x55f, 0xf41a, 0x0, 0x0);
        gbc.writeMem(0x4ead, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6c95, gbc.sp());
        EXPECT(0x4eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00FC
        gbc.setState(0x224b, 0xebcf, 0x75c0, 0x4da4, 0x9a77, 0x9e70, 0x0, 0x0);
        gbc.writeMem(0x224b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xebcf, gbc.sp());
        EXPECT(0x224d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 00FD
        gbc.setState(0xa5d5, 0xde1f, 0x160, 0x1621, 0xec1b, 0x3c7f, 0x1, 0x1);
        gbc.writeMem(0xa5d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xde1f, gbc.sp());
        EXPECT(0xa5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d5));
        EXPECT(0x30, gbc.readMem(0xa5d6));
        // CB 30 00FE
        gbc.setState(0xae3c, 0xe5e5, 0xd4e0, 0x422c, 0xb7e2, 0x42f5, 0x1, 0x0);
        gbc.writeMem(0xae3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe5e5, gbc.sp());
        EXPECT(0xae3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3c));
        EXPECT(0x30, gbc.readMem(0xae3d));
        // CB 30 00FF
        gbc.setState(0xee52, 0x1d66, 0x1d70, 0x3007, 0xafb3, 0x2cfd, 0x0, 0x1);
        gbc.writeMem(0xee52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1d66, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee52));
        EXPECT(0x30, gbc.readMem(0xee53));
        // CB 30 0100
        gbc.setState(0x580, 0xf4c1, 0xc9d0, 0x2e9a, 0x3430, 0x9a74, 0x0, 0x1);
        gbc.writeMem(0x580, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf4c1, gbc.sp());
        EXPECT(0x582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0101
        gbc.setState(0x4c88, 0x216a, 0xd6e0, 0x4e59, 0x76d1, 0xbf54, 0x1, 0x0);
        gbc.writeMem(0x4c88, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0x4c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0102
        gbc.setState(0x382c, 0x3514, 0xb700, 0xcaa5, 0xaafd, 0x70cf, 0x0, 0x1);
        gbc.writeMem(0x382c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3514, gbc.sp());
        EXPECT(0x382e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0103
        gbc.setState(0x3136, 0x613b, 0xd220, 0xc842, 0x7ba2, 0x3e0f, 0x1, 0x0);
        gbc.writeMem(0x3136, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x613b, gbc.sp());
        EXPECT(0x3138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0104
        gbc.setState(0xee34, 0xb71d, 0xe160, 0x33aa, 0x734f, 0xba46, 0x0, 0x0);
        gbc.writeMem(0xee34, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb71d, gbc.sp());
        EXPECT(0xee36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee34));
        EXPECT(0x30, gbc.readMem(0xee35));
        // CB 30 0105
        gbc.setState(0x1347, 0xcbe1, 0x5620, 0xf24, 0x53ee, 0xdece, 0x1, 0x0);
        gbc.writeMem(0x1347, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcbe1, gbc.sp());
        EXPECT(0x1349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0106
        gbc.setState(0x9536, 0x4edd, 0xf470, 0x30af, 0xa12d, 0x49d5, 0x1, 0x0);
        gbc.writeMem(0x9536, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4edd, gbc.sp());
        EXPECT(0x9538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9536));
        EXPECT(0x30, gbc.readMem(0x9537));
        // CB 30 0107
        gbc.setState(0xbe52, 0xef25, 0x9610, 0x3144, 0xc440, 0x9351, 0x0, 0x1);
        gbc.writeMem(0xbe52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0xbe54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe52));
        EXPECT(0x30, gbc.readMem(0xbe53));
        // CB 30 0108
        gbc.setState(0x711, 0x56e7, 0xf30, 0xad64, 0x3e60, 0xf54, 0x0, 0x1);
        gbc.writeMem(0x711, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x56e7, gbc.sp());
        EXPECT(0x713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0109
        gbc.setState(0xa269, 0xfa45, 0x26f0, 0xa97b, 0xb93, 0x4c64, 0x0, 0x0);
        gbc.writeMem(0xa269, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfa45, gbc.sp());
        EXPECT(0xa26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa269));
        EXPECT(0x30, gbc.readMem(0xa26a));
        // CB 30 010A
        gbc.setState(0x8df1, 0xe374, 0x6070, 0xb342, 0x5950, 0x56cd, 0x0, 0x0);
        gbc.writeMem(0x8df1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe374, gbc.sp());
        EXPECT(0x8df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df1));
        EXPECT(0x30, gbc.readMem(0x8df2));
        // CB 30 010B
        gbc.setState(0x8eda, 0x4ecb, 0xfdb0, 0x2b0e, 0xec52, 0x2fe2, 0x0, 0x1);
        gbc.writeMem(0x8eda, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4ecb, gbc.sp());
        EXPECT(0x8edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eda));
        EXPECT(0x30, gbc.readMem(0x8edb));
        // CB 30 010C
        gbc.setState(0xbddd, 0xced6, 0x4360, 0x5d5c, 0x4bc, 0x966f, 0x1, 0x1);
        gbc.writeMem(0xbddd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xced6, gbc.sp());
        EXPECT(0xbddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddd));
        EXPECT(0x30, gbc.readMem(0xbdde));
        // CB 30 010D
        gbc.setState(0x2df, 0xd762, 0x16f0, 0x3fb7, 0xa67a, 0xe354, 0x1, 0x0);
        gbc.writeMem(0x2df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd762, gbc.sp());
        EXPECT(0x2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 010E
        gbc.setState(0xd22e, 0x1693, 0x39a0, 0x654, 0x6ea3, 0x2590, 0x1, 0x0);
        gbc.writeMem(0xd22e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0xd230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22e));
        EXPECT(0x30, gbc.readMem(0xd22f));
        // CB 30 010F
        gbc.setState(0x38f3, 0xb962, 0xe040, 0x35bc, 0x9e4b, 0x6c01, 0x0, 0x0);
        gbc.writeMem(0x38f3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb962, gbc.sp());
        EXPECT(0x38f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0110
        gbc.setState(0x38c, 0x86b7, 0x98a0, 0xa116, 0x82b7, 0xafd, 0x0, 0x1);
        gbc.writeMem(0x38c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x86b7, gbc.sp());
        EXPECT(0x38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0111
        gbc.setState(0x6d44, 0xbee6, 0xe620, 0x7776, 0x57ce, 0xb9f9, 0x0, 0x0);
        gbc.writeMem(0x6d44, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbee6, gbc.sp());
        EXPECT(0x6d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0112
        gbc.setState(0xa364, 0x423, 0x4d90, 0xab0, 0x3746, 0xa8cf, 0x0, 0x0);
        gbc.writeMem(0xa364, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa364));
        EXPECT(0x30, gbc.readMem(0xa365));
        // CB 30 0113
        gbc.setState(0x7a64, 0x83ea, 0xa500, 0x3f4d, 0x2051, 0x661c, 0x0, 0x0);
        gbc.writeMem(0x7a64, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x83ea, gbc.sp());
        EXPECT(0x7a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0114
        gbc.setState(0xa3fe, 0xe9e6, 0xcc80, 0x902e, 0xf7f2, 0xda1a, 0x1, 0x1);
        gbc.writeMem(0xa3fe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0xa400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fe));
        EXPECT(0x30, gbc.readMem(0xa3ff));
        // CB 30 0115
        gbc.setState(0xd66, 0xd101, 0x56f0, 0x2431, 0x65da, 0xb125, 0x0, 0x1);
        gbc.writeMem(0xd66, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd101, gbc.sp());
        EXPECT(0xd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0116
        gbc.setState(0x7b76, 0x2ef9, 0xdf0, 0x20eb, 0x5565, 0x9016, 0x0, 0x0);
        gbc.writeMem(0x7b76, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2ef9, gbc.sp());
        EXPECT(0x7b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0117
        gbc.setState(0xabd3, 0x8631, 0x4000, 0xd82d, 0xbea3, 0x343d, 0x1, 0x1);
        gbc.writeMem(0xabd3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8631, gbc.sp());
        EXPECT(0xabd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd3));
        EXPECT(0x30, gbc.readMem(0xabd4));
        // CB 30 0118
        gbc.setState(0x5c89, 0xd176, 0xe410, 0xbc6a, 0xf4a3, 0x94ed, 0x1, 0x0);
        gbc.writeMem(0x5c89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd176, gbc.sp());
        EXPECT(0x5c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0119
        gbc.setState(0xcd0c, 0xd4db, 0x380, 0x4e7f, 0xc26, 0x6f8f, 0x0, 0x1);
        gbc.writeMem(0xcd0c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd4db, gbc.sp());
        EXPECT(0xcd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0c));
        EXPECT(0x30, gbc.readMem(0xcd0d));
        // CB 30 011A
        gbc.setState(0x5e87, 0xf31d, 0x8be0, 0x14be, 0xfcce, 0xa9d3, 0x0, 0x0);
        gbc.writeMem(0x5e87, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf31d, gbc.sp());
        EXPECT(0x5e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 011B
        gbc.setState(0x68dc, 0x2582, 0xb0b0, 0xc50c, 0xb3ca, 0x5342, 0x0, 0x0);
        gbc.writeMem(0x68dc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2582, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 011C
        gbc.setState(0x5c85, 0xc984, 0x98a0, 0xa248, 0xab66, 0x22c9, 0x1, 0x1);
        gbc.writeMem(0x5c85, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc984, gbc.sp());
        EXPECT(0x5c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 011D
        gbc.setState(0xca82, 0x6a15, 0x89b0, 0x9838, 0xe4c5, 0x7c9e, 0x1, 0x1);
        gbc.writeMem(0xca82, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6a15, gbc.sp());
        EXPECT(0xca84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca82));
        EXPECT(0x30, gbc.readMem(0xca83));
        // CB 30 011E
        gbc.setState(0x242e, 0x5f6f, 0x61d0, 0x90c, 0xdf05, 0xbd8e, 0x1, 0x1);
        gbc.writeMem(0x242e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0x2430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 011F
        gbc.setState(0x3c8b, 0x8145, 0x3190, 0x9ce0, 0x4cd3, 0x4c0e, 0x1, 0x1);
        gbc.writeMem(0x3c8b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8145, gbc.sp());
        EXPECT(0x3c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0120
        gbc.setState(0x457c, 0xac4, 0x95d0, 0xd8c, 0x5d55, 0xd2e5, 0x1, 0x1);
        gbc.writeMem(0x457c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xac4, gbc.sp());
        EXPECT(0x457e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0121
        gbc.setState(0x4c80, 0x9c71, 0x8e20, 0x6583, 0x4837, 0xffe0, 0x1, 0x0);
        gbc.writeMem(0x4c80, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9c71, gbc.sp());
        EXPECT(0x4c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0122
        gbc.setState(0x542c, 0xf8de, 0x97d0, 0x1987, 0x9f11, 0x5381, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf8de, gbc.sp());
        EXPECT(0x542e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0123
        gbc.setState(0xde97, 0x6cc6, 0xf040, 0x9913, 0x8ff2, 0xa1d1, 0x1, 0x1);
        gbc.writeMem(0xde97, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6cc6, gbc.sp());
        EXPECT(0xde99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde97));
        EXPECT(0x30, gbc.readMem(0xde98));
        // CB 30 0124
        gbc.setState(0x2709, 0x5c17, 0xa260, 0x73d3, 0x8061, 0xf02e, 0x0, 0x1);
        gbc.writeMem(0x2709, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0x270b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0125
        gbc.setState(0xde8f, 0x328e, 0xbb00, 0x3e8c, 0x9721, 0xb962, 0x1, 0x1);
        gbc.writeMem(0xde8f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x328e, gbc.sp());
        EXPECT(0xde91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8f));
        EXPECT(0x30, gbc.readMem(0xde90));
        // CB 30 0126
        gbc.setState(0x372d, 0x733e, 0x6d0, 0xf7d5, 0xab73, 0x3215, 0x1, 0x1);
        gbc.writeMem(0x372d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0x372f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0127
        gbc.setState(0x41ad, 0x94b0, 0x57d0, 0xc3df, 0x8bad, 0xeb56, 0x1, 0x1);
        gbc.writeMem(0x41ad, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x41af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0128
        gbc.setState(0xbda1, 0x48e9, 0x1d90, 0xe2e2, 0x8312, 0x4f96, 0x1, 0x0);
        gbc.writeMem(0xbda1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x48e9, gbc.sp());
        EXPECT(0xbda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda1));
        EXPECT(0x30, gbc.readMem(0xbda2));
        // CB 30 0129
        gbc.setState(0x5bb9, 0xb01a, 0xe6f0, 0x952d, 0x5083, 0xf326, 0x0, 0x0);
        gbc.writeMem(0x5bb9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x5bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 012A
        gbc.setState(0x3684, 0x58c1, 0x2f30, 0x5377, 0xc7e9, 0xd668, 0x1, 0x1);
        gbc.writeMem(0x3684, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0x3686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 012B
        gbc.setState(0x2f3c, 0x927e, 0x53b0, 0x5b92, 0xc36a, 0xa2ff, 0x0, 0x1);
        gbc.writeMem(0x2f3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0x2f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 012D
        gbc.setState(0x1b78, 0xed30, 0x8690, 0x328c, 0xa787, 0xa93f, 0x1, 0x1);
        gbc.writeMem(0x1b78, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0x1b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 012E
        gbc.setState(0xc85d, 0x4bdd, 0x9e90, 0x1b7d, 0xc1eb, 0x810b, 0x0, 0x1);
        gbc.writeMem(0xc85d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4bdd, gbc.sp());
        EXPECT(0xc85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85d));
        EXPECT(0x30, gbc.readMem(0xc85e));
        // CB 30 012F
        gbc.setState(0xd5e0, 0x85cd, 0x7940, 0xebed, 0x7ff2, 0xc486, 0x1, 0x0);
        gbc.writeMem(0xd5e0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x85cd, gbc.sp());
        EXPECT(0xd5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e0));
        EXPECT(0x30, gbc.readMem(0xd5e1));
        // CB 30 0130
        gbc.setState(0x554, 0x2301, 0x3010, 0xeaa8, 0x4110, 0xafcc, 0x1, 0x0);
        gbc.writeMem(0x554, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2301, gbc.sp());
        EXPECT(0x556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0131
        gbc.setState(0x21bc, 0x3949, 0xf1b0, 0x7e4d, 0x28f8, 0x35af, 0x0, 0x0);
        gbc.writeMem(0x21bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3949, gbc.sp());
        EXPECT(0x21be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0132
        gbc.setState(0x7ce5, 0xb5bc, 0x3800, 0x4c32, 0x47da, 0xcca8, 0x0, 0x0);
        gbc.writeMem(0x7ce5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x7ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0133
        gbc.setState(0x616d, 0x5df7, 0x8d70, 0x18a, 0x65fd, 0xbb9f, 0x0, 0x0);
        gbc.writeMem(0x616d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5df7, gbc.sp());
        EXPECT(0x616f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0134
        gbc.setState(0xdfcd, 0xdbdc, 0x3f80, 0x5bab, 0xbee4, 0x1dd5, 0x1, 0x0);
        gbc.writeMem(0xdfcd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdbdc, gbc.sp());
        EXPECT(0xdfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcd));
        EXPECT(0x30, gbc.readMem(0xdfce));
        // CB 30 0135
        gbc.setState(0x4436, 0xbc76, 0x51b0, 0xfbd5, 0x6f2f, 0xed4, 0x0, 0x0);
        gbc.writeMem(0x4436, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbc76, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0137
        gbc.setState(0x47c0, 0xcb82, 0x310, 0xc7d, 0xfeaa, 0x8999, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcb82, gbc.sp());
        EXPECT(0x47c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0138
        gbc.setState(0xed68, 0x2168, 0x1860, 0xce9c, 0x137f, 0x5b4d, 0x0, 0x0);
        gbc.writeMem(0xed68, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2168, gbc.sp());
        EXPECT(0xed6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed68));
        EXPECT(0x30, gbc.readMem(0xed69));
        // CB 30 0139
        gbc.setState(0xb0b9, 0xe74f, 0xa480, 0xfb1, 0x735a, 0x44db, 0x0, 0x0);
        gbc.writeMem(0xb0b9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe74f, gbc.sp());
        EXPECT(0xb0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b9));
        EXPECT(0x30, gbc.readMem(0xb0ba));
        // CB 30 013A
        gbc.setState(0x3581, 0x1b8, 0xaf90, 0x2ac7, 0xd455, 0xab6b, 0x0, 0x1);
        gbc.writeMem(0x3581, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1b8, gbc.sp());
        EXPECT(0x3583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 013B
        gbc.setState(0x75ee, 0xbffd, 0x680, 0xd9f7, 0xf06d, 0x6a46, 0x0, 0x0);
        gbc.writeMem(0x75ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbffd, gbc.sp());
        EXPECT(0x75f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 013C
        gbc.setState(0xebe9, 0x7d4a, 0x1100, 0x881e, 0x467, 0x8fd0, 0x1, 0x1);
        gbc.writeMem(0xebe9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0xebeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe9));
        EXPECT(0x30, gbc.readMem(0xebea));
        // CB 30 013D
        gbc.setState(0x3263, 0x2f4e, 0xc9f0, 0x624d, 0x469f, 0x2f57, 0x1, 0x0);
        gbc.writeMem(0x3263, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f4e, gbc.sp());
        EXPECT(0x3265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 013E
        gbc.setState(0x444, 0xc170, 0x2380, 0x3422, 0x5110, 0x24a0, 0x0, 0x0);
        gbc.writeMem(0x444, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc170, gbc.sp());
        EXPECT(0x446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 013F
        gbc.setState(0x8674, 0xc1cc, 0xb200, 0x108e, 0x4e8f, 0x390, 0x1, 0x0);
        gbc.writeMem(0x8674, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8674));
        EXPECT(0x30, gbc.readMem(0x8675));
        // CB 30 0140
        gbc.setState(0x453d, 0x66d, 0x3b50, 0x31e2, 0xde52, 0x9b73, 0x0, 0x1);
        gbc.writeMem(0x453d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x66d, gbc.sp());
        EXPECT(0x453f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0141
        gbc.setState(0x30ee, 0x70a0, 0xce70, 0x83b9, 0xd104, 0xfe7f, 0x0, 0x1);
        gbc.writeMem(0x30ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0x30f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0142
        gbc.setState(0x1ec6, 0xe10c, 0xf180, 0xceb2, 0x7575, 0x4915, 0x1, 0x1);
        gbc.writeMem(0x1ec6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe10c, gbc.sp());
        EXPECT(0x1ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0143
        gbc.setState(0xa7ef, 0x1867, 0xb840, 0xbcf5, 0xa5ea, 0xa523, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1867, gbc.sp());
        EXPECT(0xa7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ef));
        EXPECT(0x30, gbc.readMem(0xa7f0));
        // CB 30 0144
        gbc.setState(0x2094, 0x5a3f, 0x9df0, 0xa428, 0x8d, 0xebed, 0x1, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5a3f, gbc.sp());
        EXPECT(0x2096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0145
        gbc.setState(0xa050, 0x4f06, 0x47c0, 0x101, 0x1dbf, 0x4b84, 0x0, 0x0);
        gbc.writeMem(0xa050, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4f06, gbc.sp());
        EXPECT(0xa052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa050));
        EXPECT(0x30, gbc.readMem(0xa051));
        // CB 30 0146
        gbc.setState(0x3812, 0xd160, 0x4e20, 0xfbaf, 0x4c2c, 0xf836, 0x0, 0x1);
        gbc.writeMem(0x3812, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd160, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0147
        gbc.setState(0x28ce, 0x3ed7, 0xcaf0, 0x5bae, 0x9419, 0xcb45, 0x1, 0x0);
        gbc.writeMem(0x28ce, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3ed7, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0148
        gbc.setState(0x87fc, 0xa79b, 0x1ed0, 0xf958, 0x79a3, 0x51ca, 0x0, 0x1);
        gbc.writeMem(0x87fc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa79b, gbc.sp());
        EXPECT(0x87fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fc));
        EXPECT(0x30, gbc.readMem(0x87fd));
        // CB 30 0149
        gbc.setState(0xa3cb, 0x5a0c, 0xb290, 0xeb66, 0x6d29, 0x2417, 0x1, 0x0);
        gbc.writeMem(0xa3cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0xa3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cb));
        EXPECT(0x30, gbc.readMem(0xa3cc));
        // CB 30 014A
        gbc.setState(0xb98, 0x3079, 0xdab0, 0xaf82, 0xbe19, 0xb4eb, 0x1, 0x0);
        gbc.writeMem(0xb98, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3079, gbc.sp());
        EXPECT(0xb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 014B
        gbc.setState(0xb1c0, 0x2a1c, 0x3b50, 0xb845, 0xd45f, 0x9ea4, 0x0, 0x0);
        gbc.writeMem(0xb1c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0xb1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c0));
        EXPECT(0x30, gbc.readMem(0xb1c1));
        // CB 30 014C
        gbc.setState(0xb663, 0x7bd8, 0x3240, 0x9745, 0xcdc9, 0x1c08, 0x1, 0x1);
        gbc.writeMem(0xb663, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7bd8, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb663));
        EXPECT(0x30, gbc.readMem(0xb664));
        // CB 30 014D
        gbc.setState(0xa93e, 0x9259, 0xed20, 0x3dd7, 0xd2bf, 0xabb9, 0x0, 0x1);
        gbc.writeMem(0xa93e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0xa940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93e));
        EXPECT(0x30, gbc.readMem(0xa93f));
        // CB 30 014E
        gbc.setState(0x24c2, 0x7e54, 0x1410, 0x4e02, 0xd562, 0x89e7, 0x1, 0x1);
        gbc.writeMem(0x24c2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7e54, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 014F
        gbc.setState(0x282b, 0x45cd, 0x5840, 0x9fe4, 0xde2a, 0x29b9, 0x1, 0x1);
        gbc.writeMem(0x282b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x45cd, gbc.sp());
        EXPECT(0x282d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0150
        gbc.setState(0x66c8, 0x693e, 0x5ab0, 0x94dc, 0xf91, 0xccf, 0x0, 0x0);
        gbc.writeMem(0x66c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x693e, gbc.sp());
        EXPECT(0x66ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0151
        gbc.setState(0x36ca, 0x4138, 0xfed0, 0xf, 0xb40d, 0x7689, 0x1, 0x1);
        gbc.writeMem(0x36ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4138, gbc.sp());
        EXPECT(0x36cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0152
        gbc.setState(0x9e63, 0x7977, 0x9ec0, 0x2b31, 0xa8ec, 0x717f, 0x1, 0x0);
        gbc.writeMem(0x9e63, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7977, gbc.sp());
        EXPECT(0x9e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e63));
        EXPECT(0x30, gbc.readMem(0x9e64));
        // CB 30 0153
        gbc.setState(0x1f2b, 0xeb19, 0x6c80, 0x8d87, 0xb6de, 0xcb15, 0x1, 0x0);
        gbc.writeMem(0x1f2b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xeb19, gbc.sp());
        EXPECT(0x1f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0154
        gbc.setState(0x71cf, 0x9f6a, 0xb140, 0x6dc5, 0xc9d9, 0xac80, 0x0, 0x0);
        gbc.writeMem(0x71cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9f6a, gbc.sp());
        EXPECT(0x71d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0155
        gbc.setState(0x14a9, 0x37a5, 0x31a0, 0x9376, 0xd349, 0xffd2, 0x0, 0x1);
        gbc.writeMem(0x14a9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x37a5, gbc.sp());
        EXPECT(0x14ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0157
        gbc.setState(0xb8fa, 0xc6e8, 0xc980, 0xee23, 0x446, 0x579, 0x0, 0x0);
        gbc.writeMem(0xb8fa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc6e8, gbc.sp());
        EXPECT(0xb8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fa));
        EXPECT(0x30, gbc.readMem(0xb8fb));
        // CB 30 0158
        gbc.setState(0x4925, 0x8dc2, 0x9cd0, 0x6525, 0x83c3, 0xb9d1, 0x1, 0x0);
        gbc.writeMem(0x4925, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8dc2, gbc.sp());
        EXPECT(0x4927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0159
        gbc.setState(0x111e, 0x2423, 0xca00, 0xbdab, 0x71f6, 0xe92, 0x1, 0x1);
        gbc.writeMem(0x111e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2423, gbc.sp());
        EXPECT(0x1120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 015A
        gbc.setState(0x3cd1, 0x6528, 0xc190, 0xb261, 0xad9f, 0x1e46, 0x1, 0x1);
        gbc.writeMem(0x3cd1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6528, gbc.sp());
        EXPECT(0x3cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 015B
        gbc.setState(0xbc9d, 0x8fb7, 0xf4e0, 0xe508, 0x13e9, 0xfe56, 0x0, 0x0);
        gbc.writeMem(0xbc9d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8fb7, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9d));
        EXPECT(0x30, gbc.readMem(0xbc9e));
        // CB 30 015C
        gbc.setState(0x5be3, 0xbeab, 0x5e10, 0x489f, 0xbf5d, 0xb4e1, 0x0, 0x1);
        gbc.writeMem(0x5be3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbeab, gbc.sp());
        EXPECT(0x5be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 015D
        gbc.setState(0x6afd, 0x6a60, 0x8680, 0x6ff4, 0x4694, 0x2937, 0x0, 0x1);
        gbc.writeMem(0x6afd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6a60, gbc.sp());
        EXPECT(0x6aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 015E
        gbc.setState(0x5797, 0x43f6, 0xf130, 0xcf87, 0x999c, 0xd674, 0x0, 0x1);
        gbc.writeMem(0x5797, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0x5799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 015F
        gbc.setState(0x1b13, 0xe7aa, 0xfa20, 0x1e5d, 0xf3ef, 0xa45f, 0x0, 0x0);
        gbc.writeMem(0x1b13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe7aa, gbc.sp());
        EXPECT(0x1b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0160
        gbc.setState(0x8b0, 0x2ba8, 0xd9b0, 0xbe43, 0x4798, 0x22fe, 0x1, 0x1);
        gbc.writeMem(0x8b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2ba8, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0161
        gbc.setState(0x8208, 0xc6d3, 0x39c0, 0x3fe, 0x491, 0x57f1, 0x1, 0x1);
        gbc.writeMem(0x8208, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc6d3, gbc.sp());
        EXPECT(0x820a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8208));
        EXPECT(0x30, gbc.readMem(0x8209));
        // CB 30 0163
        gbc.setState(0x1fe0, 0x51b1, 0x2b30, 0xd1c2, 0xd63f, 0x1488, 0x1, 0x0);
        gbc.writeMem(0x1fe0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0x1fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0164
        gbc.setState(0x1398, 0x8e67, 0x1cc0, 0x9ea, 0xe64f, 0xd855, 0x0, 0x0);
        gbc.writeMem(0x1398, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8e67, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0165
        gbc.setState(0x91d2, 0x9865, 0x8980, 0xfadf, 0x4bb1, 0x14a0, 0x1, 0x1);
        gbc.writeMem(0x91d2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9865, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d2));
        EXPECT(0x30, gbc.readMem(0x91d3));
        // CB 30 0166
        gbc.setState(0xe3e2, 0xf9b5, 0xbb40, 0x8a70, 0x5b5b, 0x131e, 0x0, 0x0);
        gbc.writeMem(0xe3e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf9b5, gbc.sp());
        EXPECT(0xe3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e2));
        EXPECT(0x30, gbc.readMem(0xe3e3));
        // CB 30 0168
        gbc.setState(0x27ee, 0x729c, 0x70d0, 0xf398, 0x8c6, 0x4c93, 0x0, 0x0);
        gbc.writeMem(0x27ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x729c, gbc.sp());
        EXPECT(0x27f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0169
        gbc.setState(0xcb67, 0x8274, 0xb1c0, 0xdd54, 0xb6ed, 0x857c, 0x1, 0x1);
        gbc.writeMem(0xcb67, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8274, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb67));
        EXPECT(0x30, gbc.readMem(0xcb68));
        // CB 30 016A
        gbc.setState(0x9066, 0x17d7, 0xbcc0, 0xc85, 0x2f94, 0xa023, 0x1, 0x0);
        gbc.writeMem(0x9066, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x17d7, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9066));
        EXPECT(0x30, gbc.readMem(0x9067));
        // CB 30 016B
        gbc.setState(0xe713, 0x4d5d, 0x80b0, 0x829e, 0x764e, 0x3c4b, 0x1, 0x1);
        gbc.writeMem(0xe713, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4d5d, gbc.sp());
        EXPECT(0xe715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe713));
        EXPECT(0x30, gbc.readMem(0xe714));
        // CB 30 016C
        gbc.setState(0x868a, 0xa81, 0x4fb0, 0x8933, 0x2849, 0x3c4d, 0x1, 0x0);
        gbc.writeMem(0x868a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa81, gbc.sp());
        EXPECT(0x868c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868a));
        EXPECT(0x30, gbc.readMem(0x868b));
        // CB 30 016D
        gbc.setState(0xcd8d, 0x2999, 0xc410, 0x9ed2, 0xc5c7, 0x278f, 0x1, 0x0);
        gbc.writeMem(0xcd8d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2999, gbc.sp());
        EXPECT(0xcd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8d));
        EXPECT(0x30, gbc.readMem(0xcd8e));
        // CB 30 016E
        gbc.setState(0xb379, 0x8fb, 0xdfa0, 0x7c88, 0x2493, 0xde22, 0x0, 0x1);
        gbc.writeMem(0xb379, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0xb37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb379));
        EXPECT(0x30, gbc.readMem(0xb37a));
        // CB 30 016F
        gbc.setState(0x5983, 0xafa0, 0x5a00, 0x4bdd, 0xce4a, 0xab64, 0x1, 0x0);
        gbc.writeMem(0x5983, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xafa0, gbc.sp());
        EXPECT(0x5985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0170
        gbc.setState(0x14ca, 0xb3de, 0x49e0, 0x2872, 0xfda0, 0x83fd, 0x0, 0x1);
        gbc.writeMem(0x14ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb3de, gbc.sp());
        EXPECT(0x14cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0171
        gbc.setState(0xcc3b, 0x4322, 0x9860, 0xe743, 0xb5c2, 0x895, 0x1, 0x1);
        gbc.writeMem(0xcc3b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4322, gbc.sp());
        EXPECT(0xcc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3b));
        EXPECT(0x30, gbc.readMem(0xcc3c));
        // CB 30 0172
        gbc.setState(0xa005, 0x8530, 0x8340, 0x9877, 0x913b, 0xab9c, 0x0, 0x0);
        gbc.writeMem(0xa005, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0xa007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa005));
        EXPECT(0x30, gbc.readMem(0xa006));
        // CB 30 0173
        gbc.setState(0x94dd, 0xd3a4, 0xff10, 0x9425, 0xae5a, 0xe29d, 0x1, 0x0);
        gbc.writeMem(0x94dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0x94df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94dd));
        EXPECT(0x30, gbc.readMem(0x94de));
        // CB 30 0174
        gbc.setState(0x8d89, 0xb607, 0x3710, 0xf2f7, 0xef69, 0x5b66, 0x0, 0x0);
        gbc.writeMem(0x8d89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb607, gbc.sp());
        EXPECT(0x8d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d89));
        EXPECT(0x30, gbc.readMem(0x8d8a));
        // CB 30 0175
        gbc.setState(0xc269, 0xda65, 0xa180, 0x9547, 0xecd6, 0xbb83, 0x0, 0x0);
        gbc.writeMem(0xc269, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xda65, gbc.sp());
        EXPECT(0xc26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc269));
        EXPECT(0x30, gbc.readMem(0xc26a));
        // CB 30 0176
        gbc.setState(0x8f20, 0x9250, 0x3a00, 0x22df, 0xa741, 0x7f9f, 0x1, 0x0);
        gbc.writeMem(0x8f20, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9250, gbc.sp());
        EXPECT(0x8f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f20));
        EXPECT(0x30, gbc.readMem(0x8f21));
        // CB 30 0177
        gbc.setState(0x424e, 0xfa52, 0xe460, 0x76cd, 0xdf7c, 0xa965, 0x1, 0x1);
        gbc.writeMem(0x424e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfa52, gbc.sp());
        EXPECT(0x4250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0179
        gbc.setState(0x6317, 0xf42b, 0x8ff0, 0x2451, 0x1a0f, 0xc08a, 0x0, 0x0);
        gbc.writeMem(0x6317, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf42b, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 017A
        gbc.setState(0x6231, 0x426, 0xca20, 0xfdf2, 0xbe67, 0xb1c5, 0x1, 0x1);
        gbc.writeMem(0x6231, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x426, gbc.sp());
        EXPECT(0x6233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 017B
        gbc.setState(0x82cf, 0x5c34, 0x4040, 0x704a, 0xb32f, 0xda93, 0x1, 0x1);
        gbc.writeMem(0x82cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5c34, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cf));
        EXPECT(0x30, gbc.readMem(0x82d0));
        // CB 30 017C
        gbc.setState(0x6cf5, 0xc11d, 0x25b0, 0xeb37, 0xc6e9, 0xf634, 0x0, 0x1);
        gbc.writeMem(0x6cf5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc11d, gbc.sp());
        EXPECT(0x6cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 017D
        gbc.setState(0x3836, 0xcb4, 0xbe40, 0x4bcc, 0x4084, 0x34d, 0x1, 0x1);
        gbc.writeMem(0x3836, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcb4, gbc.sp());
        EXPECT(0x3838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 017E
        gbc.setState(0x1d14, 0xedbe, 0x2c10, 0x3c3c, 0x23ca, 0x15eb, 0x0, 0x0);
        gbc.writeMem(0x1d14, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xedbe, gbc.sp());
        EXPECT(0x1d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0180
        gbc.setState(0x4a1c, 0xb22f, 0x2310, 0x7a6a, 0xad1e, 0x1e2e, 0x0, 0x1);
        gbc.writeMem(0x4a1c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb22f, gbc.sp());
        EXPECT(0x4a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0181
        gbc.setState(0x5524, 0x4075, 0xb80, 0x35ae, 0x7244, 0x6641, 0x1, 0x1);
        gbc.writeMem(0x5524, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4075, gbc.sp());
        EXPECT(0x5526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0182
        gbc.setState(0x8d95, 0x9ddd, 0x5a10, 0x8450, 0xf505, 0x773, 0x0, 0x1);
        gbc.writeMem(0x8d95, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9ddd, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d95));
        EXPECT(0x30, gbc.readMem(0x8d96));
        // CB 30 0183
        gbc.setState(0x2237, 0x3343, 0xcd90, 0x8d96, 0x9375, 0xd09e, 0x1, 0x1);
        gbc.writeMem(0x2237, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3343, gbc.sp());
        EXPECT(0x2239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0184
        gbc.setState(0xd7a4, 0x8b09, 0x26c0, 0x856e, 0x90f0, 0xb97, 0x0, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8b09, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a4));
        EXPECT(0x30, gbc.readMem(0xd7a5));
        // CB 30 0186
        gbc.setState(0xa955, 0x2e08, 0x94f0, 0xeece, 0x7519, 0x9c5a, 0x0, 0x1);
        gbc.writeMem(0xa955, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2e08, gbc.sp());
        EXPECT(0xa957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa955));
        EXPECT(0x30, gbc.readMem(0xa956));
        // CB 30 0187
        gbc.setState(0x791a, 0x1e8d, 0xc620, 0x7fd2, 0xb4f4, 0x8819, 0x0, 0x1);
        gbc.writeMem(0x791a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1e8d, gbc.sp());
        EXPECT(0x791c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0188
        gbc.setState(0xbc0a, 0xda05, 0xc030, 0xb3f5, 0x1ee3, 0x5d25, 0x0, 0x0);
        gbc.writeMem(0xbc0a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xda05, gbc.sp());
        EXPECT(0xbc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0a));
        EXPECT(0x30, gbc.readMem(0xbc0b));
        // CB 30 0189
        gbc.setState(0x118c, 0x8973, 0x1f30, 0xe608, 0x14ab, 0x24d7, 0x1, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8973, gbc.sp());
        EXPECT(0x118e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 018A
        gbc.setState(0xbbee, 0xab5c, 0x7830, 0x30ce, 0xad01, 0xabcf, 0x1, 0x0);
        gbc.writeMem(0xbbee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xab5c, gbc.sp());
        EXPECT(0xbbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbee));
        EXPECT(0x30, gbc.readMem(0xbbef));
        // CB 30 018B
        gbc.setState(0xd5a0, 0xf2da, 0xf090, 0x3e10, 0x7205, 0x1c0a, 0x1, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf2da, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a0));
        EXPECT(0x30, gbc.readMem(0xd5a1));
        // CB 30 018C
        gbc.setState(0x2abf, 0xd9ff, 0x2900, 0xf7f0, 0x27f8, 0x37d, 0x0, 0x0);
        gbc.writeMem(0x2abf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd9ff, gbc.sp());
        EXPECT(0x2ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 018E
        gbc.setState(0x7fb5, 0xdabf, 0x38e0, 0xa72c, 0x4d7d, 0x82f8, 0x0, 0x1);
        gbc.writeMem(0x7fb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0x7fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 018F
        gbc.setState(0x4de0, 0x41c0, 0x2790, 0x35d, 0x4dfe, 0x5ac2, 0x1, 0x1);
        gbc.writeMem(0x4de0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x41c0, gbc.sp());
        EXPECT(0x4de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0190
        gbc.setState(0x8937, 0x6c0, 0x9370, 0x391, 0xe31, 0x2f76, 0x1, 0x0);
        gbc.writeMem(0x8937, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8937));
        EXPECT(0x30, gbc.readMem(0x8938));
        // CB 30 0191
        gbc.setState(0x781c, 0xf7d, 0xda60, 0xae0a, 0x5b39, 0x56a6, 0x1, 0x1);
        gbc.writeMem(0x781c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf7d, gbc.sp());
        EXPECT(0x781e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0192
        gbc.setState(0xc940, 0xbe7b, 0x1e0, 0x13ca, 0xc402, 0x7ea2, 0x0, 0x1);
        gbc.writeMem(0xc940, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbe7b, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc940));
        EXPECT(0x30, gbc.readMem(0xc941));
        // CB 30 0193
        gbc.setState(0x23c7, 0x482f, 0xddd0, 0x454e, 0x8b60, 0x7652, 0x1, 0x1);
        gbc.writeMem(0x23c7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x482f, gbc.sp());
        EXPECT(0x23c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0194
        gbc.setState(0x60b9, 0x68d0, 0x370, 0xf313, 0x3fdd, 0xdd40, 0x0, 0x0);
        gbc.writeMem(0x60b9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x68d0, gbc.sp());
        EXPECT(0x60bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0195
        gbc.setState(0xeb3a, 0x7f1d, 0x44c0, 0x39e5, 0x8a1e, 0x3810, 0x1, 0x0);
        gbc.writeMem(0xeb3a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7f1d, gbc.sp());
        EXPECT(0xeb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3a));
        EXPECT(0x30, gbc.readMem(0xeb3b));
        // CB 30 0196
        gbc.setState(0x367, 0xd2fe, 0xe1d0, 0x3c78, 0x8000, 0x9945, 0x0, 0x1);
        gbc.writeMem(0x367, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd2fe, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0197
        gbc.setState(0xd905, 0x4fc7, 0x5860, 0xf976, 0x8b49, 0x4e6, 0x1, 0x1);
        gbc.writeMem(0xd905, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4fc7, gbc.sp());
        EXPECT(0xd907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd905));
        EXPECT(0x30, gbc.readMem(0xd906));
        // CB 30 0198
        gbc.setState(0xa1cd, 0xa808, 0x24a0, 0x2e7a, 0x8077, 0xaf65, 0x0, 0x0);
        gbc.writeMem(0xa1cd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa808, gbc.sp());
        EXPECT(0xa1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1cd));
        EXPECT(0x30, gbc.readMem(0xa1ce));
        // CB 30 0199
        gbc.setState(0xa701, 0xe8a2, 0x6f90, 0xcc1d, 0x1281, 0xab4e, 0x0, 0x1);
        gbc.writeMem(0xa701, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe8a2, gbc.sp());
        EXPECT(0xa703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa701));
        EXPECT(0x30, gbc.readMem(0xa702));
        // CB 30 019A
        gbc.setState(0xcc4, 0xa4b8, 0x20c0, 0x1487, 0xc78e, 0x356a, 0x1, 0x0);
        gbc.writeMem(0xcc4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa4b8, gbc.sp());
        EXPECT(0xcc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 019B
        gbc.setState(0x6331, 0x68dd, 0xa1d0, 0x9714, 0x858f, 0x8492, 0x0, 0x0);
        gbc.writeMem(0x6331, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x68dd, gbc.sp());
        EXPECT(0x6333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 019C
        gbc.setState(0xaf9, 0xa873, 0x78a0, 0x64c6, 0xb852, 0xc648, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa873, gbc.sp());
        EXPECT(0xafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 019D
        gbc.setState(0x3b2b, 0x29c3, 0xe280, 0x7701, 0x5157, 0xd046, 0x0, 0x1);
        gbc.writeMem(0x3b2b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x29c3, gbc.sp());
        EXPECT(0x3b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 019E
        gbc.setState(0x6ac7, 0xf427, 0x45a0, 0x7913, 0x4911, 0xc2dd, 0x0, 0x1);
        gbc.writeMem(0x6ac7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf427, gbc.sp());
        EXPECT(0x6ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01A0
        gbc.setState(0x65ca, 0x7cc2, 0x5be0, 0x3b8a, 0xe878, 0x767d, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7cc2, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01A1
        gbc.setState(0x48cd, 0x4ec9, 0xb020, 0xe6d, 0xbb5d, 0xa535, 0x1, 0x1);
        gbc.writeMem(0x48cd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4ec9, gbc.sp());
        EXPECT(0x48cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01A2
        gbc.setState(0x4ab3, 0x5c41, 0xefc0, 0xb35c, 0x4b43, 0x7e9e, 0x1, 0x1);
        gbc.writeMem(0x4ab3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5c41, gbc.sp());
        EXPECT(0x4ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01A3
        gbc.setState(0xb9f2, 0xf4a7, 0xc990, 0xb6d1, 0x4cb, 0xac3d, 0x0, 0x0);
        gbc.writeMem(0xb9f2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf4a7, gbc.sp());
        EXPECT(0xb9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f2));
        EXPECT(0x30, gbc.readMem(0xb9f3));
        // CB 30 01A4
        gbc.setState(0xec5f, 0x4769, 0x45b0, 0xef60, 0x96b4, 0xf16e, 0x0, 0x0);
        gbc.writeMem(0xec5f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0xec61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5f));
        EXPECT(0x30, gbc.readMem(0xec60));
        // CB 30 01A5
        gbc.setState(0xb81f, 0x1a85, 0xe510, 0xf928, 0x2d62, 0xdbf9, 0x0, 0x1);
        gbc.writeMem(0xb81f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1a85, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81f));
        EXPECT(0x30, gbc.readMem(0xb820));
        // CB 30 01A6
        gbc.setState(0xe6c4, 0xa7be, 0xed40, 0x72a5, 0x22d4, 0x66e9, 0x1, 0x0);
        gbc.writeMem(0xe6c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa7be, gbc.sp());
        EXPECT(0xe6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c4));
        EXPECT(0x30, gbc.readMem(0xe6c5));
        // CB 30 01A7
        gbc.setState(0xd836, 0xd845, 0x2a80, 0xb3c, 0x8c86, 0x91db, 0x0, 0x0);
        gbc.writeMem(0xd836, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd845, gbc.sp());
        EXPECT(0xd838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd836));
        EXPECT(0x30, gbc.readMem(0xd837));
        // CB 30 01A8
        gbc.setState(0x10e2, 0x6e9b, 0xe560, 0xc65f, 0xe2f0, 0x985a, 0x0, 0x0);
        gbc.writeMem(0x10e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6e9b, gbc.sp());
        EXPECT(0x10e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01A9
        gbc.setState(0xbb55, 0xf025, 0x9c60, 0x647b, 0x5182, 0xb006, 0x0, 0x0);
        gbc.writeMem(0xbb55, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf025, gbc.sp());
        EXPECT(0xbb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb55));
        EXPECT(0x30, gbc.readMem(0xbb56));
        // CB 30 01AA
        gbc.setState(0xe18d, 0xafcf, 0x6d80, 0x8c95, 0x7a67, 0xc10c, 0x0, 0x1);
        gbc.writeMem(0xe18d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xafcf, gbc.sp());
        EXPECT(0xe18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18d));
        EXPECT(0x30, gbc.readMem(0xe18e));
        // CB 30 01AB
        gbc.setState(0x8483, 0xc237, 0x1180, 0x6377, 0x8757, 0xa122, 0x0, 0x1);
        gbc.writeMem(0x8483, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0x8485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8483));
        EXPECT(0x30, gbc.readMem(0x8484));
        // CB 30 01AC
        gbc.setState(0xdf13, 0x61fb, 0x88a0, 0x7586, 0x1729, 0x2ddf, 0x1, 0x0);
        gbc.writeMem(0xdf13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x61fb, gbc.sp());
        EXPECT(0xdf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf13));
        EXPECT(0x30, gbc.readMem(0xdf14));
        // CB 30 01AD
        gbc.setState(0xb8ac, 0x2b7, 0x6470, 0x7d82, 0x352, 0x5cdd, 0x0, 0x1);
        gbc.writeMem(0xb8ac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2b7, gbc.sp());
        EXPECT(0xb8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ac));
        EXPECT(0x30, gbc.readMem(0xb8ad));
        // CB 30 01AE
        gbc.setState(0x2d5b, 0xec10, 0x1510, 0x7c7a, 0x31af, 0x4ff3, 0x1, 0x0);
        gbc.writeMem(0x2d5b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0x2d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01AF
        gbc.setState(0x51bf, 0xea62, 0xe950, 0xa698, 0xd97e, 0x6550, 0x0, 0x1);
        gbc.writeMem(0x51bf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xea62, gbc.sp());
        EXPECT(0x51c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01B0
        gbc.setState(0xad0c, 0xa269, 0x7cf0, 0x1e3, 0x6c9c, 0xda37, 0x1, 0x0);
        gbc.writeMem(0xad0c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa269, gbc.sp());
        EXPECT(0xad0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0c));
        EXPECT(0x30, gbc.readMem(0xad0d));
        // CB 30 01B1
        gbc.setState(0x7b36, 0x3741, 0x76a0, 0xebd6, 0xe76a, 0xbcad, 0x1, 0x0);
        gbc.writeMem(0x7b36, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3741, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01B2
        gbc.setState(0x4a62, 0x48db, 0xecb0, 0x3b7, 0xc5f0, 0xa540, 0x1, 0x0);
        gbc.writeMem(0x4a62, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x48db, gbc.sp());
        EXPECT(0x4a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01B3
        gbc.setState(0xadc7, 0xfd0b, 0x3b20, 0xa12, 0x9eb, 0x500b, 0x0, 0x0);
        gbc.writeMem(0xadc7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfd0b, gbc.sp());
        EXPECT(0xadc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc7));
        EXPECT(0x30, gbc.readMem(0xadc8));
        // CB 30 01B4
        gbc.setState(0xcdf4, 0x6c4, 0xaaa0, 0x942f, 0x24e5, 0xca6c, 0x0, 0x0);
        gbc.writeMem(0xcdf4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6c4, gbc.sp());
        EXPECT(0xcdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf4));
        EXPECT(0x30, gbc.readMem(0xcdf5));
        // CB 30 01B5
        gbc.setState(0x27b0, 0x2c10, 0xb590, 0xb075, 0x16aa, 0xdd11, 0x1, 0x0);
        gbc.writeMem(0x27b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2c10, gbc.sp());
        EXPECT(0x27b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01B6
        gbc.setState(0xd3c1, 0xb4fb, 0xade0, 0x88d5, 0xc961, 0x551a, 0x0, 0x0);
        gbc.writeMem(0xd3c1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb4fb, gbc.sp());
        EXPECT(0xd3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c1));
        EXPECT(0x30, gbc.readMem(0xd3c2));
        // CB 30 01B7
        gbc.setState(0xd8aa, 0xa294, 0x82e0, 0x551, 0x2b38, 0x6f01, 0x1, 0x0);
        gbc.writeMem(0xd8aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa294, gbc.sp());
        EXPECT(0xd8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8aa));
        EXPECT(0x30, gbc.readMem(0xd8ab));
        // CB 30 01B8
        gbc.setState(0x17f1, 0x2700, 0x7e90, 0x8f3d, 0x760b, 0xfe1f, 0x0, 0x1);
        gbc.writeMem(0x17f1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2700, gbc.sp());
        EXPECT(0x17f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01B9
        gbc.setState(0x3293, 0x911a, 0x5b0, 0x33ba, 0x4f51, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x3293, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x911a, gbc.sp());
        EXPECT(0x3295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01BA
        gbc.setState(0x93fe, 0x12ac, 0x30d0, 0xd1db, 0x53c9, 0x54ee, 0x1, 0x0);
        gbc.writeMem(0x93fe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x12ac, gbc.sp());
        EXPECT(0x9400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93fe));
        EXPECT(0x30, gbc.readMem(0x93ff));
        // CB 30 01BB
        gbc.setState(0xd51d, 0xa916, 0x6da0, 0xf6ba, 0xae38, 0xa2d8, 0x0, 0x1);
        gbc.writeMem(0xd51d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa916, gbc.sp());
        EXPECT(0xd51f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51d));
        EXPECT(0x30, gbc.readMem(0xd51e));
        // CB 30 01BC
        gbc.setState(0x7ce6, 0x5334, 0x8bd0, 0x92f2, 0x2545, 0xc880, 0x1, 0x0);
        gbc.writeMem(0x7ce6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5334, gbc.sp());
        EXPECT(0x7ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01BD
        gbc.setState(0x89eb, 0x4a4a, 0xd960, 0xfd9b, 0x55e3, 0xbf8a, 0x0, 0x0);
        gbc.writeMem(0x89eb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4a4a, gbc.sp());
        EXPECT(0x89ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89eb));
        EXPECT(0x30, gbc.readMem(0x89ec));
        // CB 30 01BE
        gbc.setState(0x3f1a, 0xeacf, 0x8fb0, 0xc055, 0xc429, 0x350d, 0x0, 0x0);
        gbc.writeMem(0x3f1a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeacf, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01BF
        gbc.setState(0x99e9, 0x24c0, 0xdfe0, 0x6edf, 0x1d9d, 0xac51, 0x0, 0x1);
        gbc.writeMem(0x99e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x24c0, gbc.sp());
        EXPECT(0x99eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e9));
        EXPECT(0x30, gbc.readMem(0x99ea));
        // CB 30 01C0
        gbc.setState(0xc2bc, 0x86e9, 0x40c0, 0xf918, 0x947a, 0xf59, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x86e9, gbc.sp());
        EXPECT(0xc2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bc));
        EXPECT(0x30, gbc.readMem(0xc2bd));
        // CB 30 01C1
        gbc.setState(0x2027, 0xd2b5, 0xd2e0, 0x92f5, 0x6096, 0x80dd, 0x1, 0x0);
        gbc.writeMem(0x2027, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01C2
        gbc.setState(0xb627, 0xb038, 0xbc70, 0x8a50, 0x8c52, 0x8a54, 0x0, 0x1);
        gbc.writeMem(0xb627, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb038, gbc.sp());
        EXPECT(0xb629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb627));
        EXPECT(0x30, gbc.readMem(0xb628));
        // CB 30 01C3
        gbc.setState(0x9ddc, 0x15d4, 0xb080, 0xd1ab, 0x3aa1, 0x5614, 0x0, 0x0);
        gbc.writeMem(0x9ddc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x15d4, gbc.sp());
        EXPECT(0x9dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ddc));
        EXPECT(0x30, gbc.readMem(0x9ddd));
        // CB 30 01C4
        gbc.setState(0x7c49, 0xcdfa, 0xaa00, 0x427a, 0xd787, 0xa645, 0x0, 0x0);
        gbc.writeMem(0x7c49, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcdfa, gbc.sp());
        EXPECT(0x7c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01C5
        gbc.setState(0xa051, 0xf4df, 0xcc20, 0xdd69, 0x3072, 0x784f, 0x0, 0x1);
        gbc.writeMem(0xa051, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0xa053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa051));
        EXPECT(0x30, gbc.readMem(0xa052));
        // CB 30 01C6
        gbc.setState(0x181d, 0xf934, 0x5bc0, 0x5e53, 0x8eac, 0x49a6, 0x1, 0x0);
        gbc.writeMem(0x181d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf934, gbc.sp());
        EXPECT(0x181f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01C7
        gbc.setState(0x2b00, 0x8c50, 0x83d0, 0x30e8, 0xebac, 0x7658, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0x2b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01C8
        gbc.setState(0x3d51, 0xa8f1, 0xd780, 0x214, 0xf2fa, 0xd3f6, 0x1, 0x0);
        gbc.writeMem(0x3d51, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa8f1, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01C9
        gbc.setState(0x2c32, 0x34f2, 0xce30, 0x9035, 0x98ab, 0x4d41, 0x1, 0x1);
        gbc.writeMem(0x2c32, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x34f2, gbc.sp());
        EXPECT(0x2c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01CA
        gbc.setState(0xe9c2, 0xa26, 0x5d30, 0xe790, 0x2be7, 0x8f5, 0x0, 0x0);
        gbc.writeMem(0xe9c2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa26, gbc.sp());
        EXPECT(0xe9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c2));
        EXPECT(0x30, gbc.readMem(0xe9c3));
        // CB 30 01CB
        gbc.setState(0x248, 0xa0b4, 0x4db0, 0x4cef, 0xd427, 0x6533, 0x0, 0x0);
        gbc.writeMem(0x248, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa0b4, gbc.sp());
        EXPECT(0x24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01CC
        gbc.setState(0x8ffe, 0x9abb, 0xb610, 0x6e1, 0x226b, 0x4881, 0x1, 0x1);
        gbc.writeMem(0x8ffe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9abb, gbc.sp());
        EXPECT(0x9000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffe));
        EXPECT(0x30, gbc.readMem(0x8fff));
        // CB 30 01CD
        gbc.setState(0x50c3, 0x33e5, 0xf990, 0x574c, 0x56d4, 0xe9c0, 0x1, 0x1);
        gbc.writeMem(0x50c3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x33e5, gbc.sp());
        EXPECT(0x50c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01CE
        gbc.setState(0x76af, 0x5a3d, 0x41a0, 0xa130, 0x3889, 0xb382, 0x1, 0x1);
        gbc.writeMem(0x76af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01CF
        gbc.setState(0x6eda, 0xc7f6, 0x5310, 0xa260, 0xb068, 0xc1bd, 0x1, 0x1);
        gbc.writeMem(0x6eda, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc7f6, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01D0
        gbc.setState(0xa624, 0xd60a, 0x5ba0, 0xb942, 0x3773, 0xec3d, 0x1, 0x0);
        gbc.writeMem(0xa624, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd60a, gbc.sp());
        EXPECT(0xa626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa624));
        EXPECT(0x30, gbc.readMem(0xa625));
        // CB 30 01D1
        gbc.setState(0x6f68, 0xa8d7, 0x1110, 0xb7d0, 0xf5a6, 0x2d60, 0x1, 0x0);
        gbc.writeMem(0x6f68, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa8d7, gbc.sp());
        EXPECT(0x6f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01D3
        gbc.setState(0xb949, 0xc22b, 0x34e0, 0xe3dc, 0x517c, 0x7376, 0x0, 0x1);
        gbc.writeMem(0xb949, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0xb94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb949));
        EXPECT(0x30, gbc.readMem(0xb94a));
        // CB 30 01D4
        gbc.setState(0x7f53, 0xe958, 0xa820, 0x862c, 0x2f8f, 0xba5, 0x1, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe958, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01D5
        gbc.setState(0xaef, 0x6a8c, 0xed50, 0x5a83, 0x1794, 0x739a, 0x0, 0x0);
        gbc.writeMem(0xaef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6a8c, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01D6
        gbc.setState(0x7352, 0x6220, 0x9550, 0xf03, 0x8767, 0xaaef, 0x0, 0x0);
        gbc.writeMem(0x7352, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6220, gbc.sp());
        EXPECT(0x7354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01D7
        gbc.setState(0x24a4, 0x16f2, 0x3770, 0xf909, 0x8122, 0x676, 0x0, 0x0);
        gbc.writeMem(0x24a4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0x24a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01D8
        gbc.setState(0x936d, 0xade8, 0xd6c0, 0x21e7, 0xb0d0, 0x7cf, 0x1, 0x1);
        gbc.writeMem(0x936d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xade8, gbc.sp());
        EXPECT(0x936f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936d));
        EXPECT(0x30, gbc.readMem(0x936e));
        // CB 30 01D9
        gbc.setState(0xefdf, 0x9c3b, 0xd4f0, 0xc0a3, 0xcc83, 0xf0ac, 0x1, 0x0);
        gbc.writeMem(0xefdf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9c3b, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdf));
        EXPECT(0x30, gbc.readMem(0xefe0));
        // CB 30 01DA
        gbc.setState(0xbc91, 0x8a53, 0x4040, 0x5371, 0x5f5e, 0xa970, 0x0, 0x1);
        gbc.writeMem(0xbc91, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8a53, gbc.sp());
        EXPECT(0xbc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc91));
        EXPECT(0x30, gbc.readMem(0xbc92));
        // CB 30 01DB
        gbc.setState(0x13c7, 0xeee1, 0xc9c0, 0xa6bb, 0x85e5, 0xa74c, 0x0, 0x0);
        gbc.writeMem(0x13c7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeee1, gbc.sp());
        EXPECT(0x13c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01DC
        gbc.setState(0xb387, 0xd0f3, 0xc8c0, 0x4561, 0xf48c, 0xe315, 0x1, 0x0);
        gbc.writeMem(0xb387, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0xb389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb387));
        EXPECT(0x30, gbc.readMem(0xb388));
        // CB 30 01DD
        gbc.setState(0xa22f, 0x97a8, 0xd860, 0xf6f9, 0x9ea8, 0xb044, 0x0, 0x0);
        gbc.writeMem(0xa22f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x97a8, gbc.sp());
        EXPECT(0xa231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22f));
        EXPECT(0x30, gbc.readMem(0xa230));
        // CB 30 01DE
        gbc.setState(0xdb9, 0x6315, 0x77d0, 0x30b0, 0xd0a0, 0xaed8, 0x1, 0x0);
        gbc.writeMem(0xdb9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6315, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01DF
        gbc.setState(0x8b3c, 0xb603, 0x76c0, 0xd993, 0xad6e, 0x8249, 0x1, 0x0);
        gbc.writeMem(0x8b3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb603, gbc.sp());
        EXPECT(0x8b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3c));
        EXPECT(0x30, gbc.readMem(0x8b3d));
        // CB 30 01E0
        gbc.setState(0xca30, 0x73e9, 0xec40, 0xe265, 0xe1e7, 0xcb31, 0x0, 0x0);
        gbc.writeMem(0xca30, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x73e9, gbc.sp());
        EXPECT(0xca32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca30));
        EXPECT(0x30, gbc.readMem(0xca31));
        // CB 30 01E1
        gbc.setState(0x2e77, 0x2bd2, 0x22a0, 0xd4c9, 0x61f3, 0xaf47, 0x0, 0x0);
        gbc.writeMem(0x2e77, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2bd2, gbc.sp());
        EXPECT(0x2e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01E2
        gbc.setState(0x45c6, 0x5b5d, 0x1c50, 0x1a2f, 0xb4d9, 0x217b, 0x0, 0x1);
        gbc.writeMem(0x45c6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5b5d, gbc.sp());
        EXPECT(0x45c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01E3
        gbc.setState(0x2038, 0x3623, 0x300, 0xbd52, 0x745d, 0xaf36, 0x1, 0x1);
        gbc.writeMem(0x2038, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3623, gbc.sp());
        EXPECT(0x203a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01E4
        gbc.setState(0xe77d, 0xcb92, 0xf200, 0xfa9d, 0xf627, 0x3137, 0x1, 0x1);
        gbc.writeMem(0xe77d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcb92, gbc.sp());
        EXPECT(0xe77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77d));
        EXPECT(0x30, gbc.readMem(0xe77e));
        // CB 30 01E5
        gbc.setState(0x615b, 0xe6c5, 0x7cf0, 0x9f51, 0x858b, 0x6fe0, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe6c5, gbc.sp());
        EXPECT(0x615d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01E6
        gbc.setState(0xbb5, 0x4a14, 0x3700, 0x6b9f, 0x2dcf, 0xa6eb, 0x1, 0x0);
        gbc.writeMem(0xbb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4a14, gbc.sp());
        EXPECT(0xbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01E7
        gbc.setState(0x2b49, 0xe4a, 0xa3b0, 0x104f, 0x3d2, 0xd9a1, 0x0, 0x0);
        gbc.writeMem(0x2b49, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe4a, gbc.sp());
        EXPECT(0x2b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01E8
        gbc.setState(0x6344, 0x4bb0, 0x8690, 0xeb2, 0x120, 0x4e49, 0x0, 0x0);
        gbc.writeMem(0x6344, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4bb0, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01E9
        gbc.setState(0x7971, 0x142a, 0xe3e0, 0xeabf, 0xff7e, 0xe447, 0x0, 0x1);
        gbc.writeMem(0x7971, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x142a, gbc.sp());
        EXPECT(0x7973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01EA
        gbc.setState(0x59b7, 0x1a2d, 0xc850, 0x79fd, 0x402c, 0x14ad, 0x1, 0x0);
        gbc.writeMem(0x59b7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1a2d, gbc.sp());
        EXPECT(0x59b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01EB
        gbc.setState(0xc9fc, 0xb500, 0x3170, 0x142d, 0xde88, 0xcda0, 0x1, 0x1);
        gbc.writeMem(0xc9fc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb500, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fc));
        EXPECT(0x30, gbc.readMem(0xc9fd));
        // CB 30 01EC
        gbc.setState(0x76d7, 0x5591, 0x97b0, 0x5eca, 0x4c77, 0xb2bd, 0x0, 0x1);
        gbc.writeMem(0x76d7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5591, gbc.sp());
        EXPECT(0x76d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01ED
        gbc.setState(0x3ec8, 0x97c7, 0x32a0, 0xfdaa, 0xa9d7, 0x449b, 0x1, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x97c7, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01EE
        gbc.setState(0x9119, 0x49ff, 0xb420, 0xfd33, 0x9ca, 0xa8f3, 0x1, 0x0);
        gbc.writeMem(0x9119, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0x911b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9119));
        EXPECT(0x30, gbc.readMem(0x911a));
        // CB 30 01EF
        gbc.setState(0x76a2, 0x6873, 0x1f90, 0x4f77, 0x72a7, 0x819, 0x0, 0x0);
        gbc.writeMem(0x76a2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6873, gbc.sp());
        EXPECT(0x76a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01F0
        gbc.setState(0xc295, 0x4d54, 0x1d40, 0x785b, 0xb9ac, 0x9907, 0x1, 0x0);
        gbc.writeMem(0xc295, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4d54, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc295));
        EXPECT(0x30, gbc.readMem(0xc296));
        // CB 30 01F1
        gbc.setState(0x5eaf, 0xf4cf, 0x3580, 0xce86, 0xf470, 0x1d19, 0x0, 0x1);
        gbc.writeMem(0x5eaf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf4cf, gbc.sp());
        EXPECT(0x5eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01F2
        gbc.setState(0x703c, 0x2b71, 0xb250, 0xe5b6, 0x4cfb, 0x4011, 0x1, 0x1);
        gbc.writeMem(0x703c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2b71, gbc.sp());
        EXPECT(0x703e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01F4
        gbc.setState(0xa6d5, 0x6f91, 0xcfd0, 0x7d35, 0x5e08, 0x209, 0x0, 0x0);
        gbc.writeMem(0xa6d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0xa6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d5));
        EXPECT(0x30, gbc.readMem(0xa6d6));
        // CB 30 01F5
        gbc.setState(0x7b20, 0x6c09, 0xe040, 0xf170, 0xfe72, 0x2eea, 0x0, 0x1);
        gbc.writeMem(0x7b20, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6c09, gbc.sp());
        EXPECT(0x7b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01F6
        gbc.setState(0xcfbd, 0x3574, 0x3060, 0x25ea, 0x4d9, 0x58f4, 0x0, 0x1);
        gbc.writeMem(0xcfbd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3574, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbd));
        EXPECT(0x30, gbc.readMem(0xcfbe));
        // CB 30 01F7
        gbc.setState(0x7fff, 0x64c7, 0xb800, 0x2a9b, 0x9b57, 0x77e4, 0x1, 0x0);
        gbc.writeMem(0x7fff, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x64c7, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8000));
        // CB 30 01F8
        gbc.setState(0x6a18, 0x8d5, 0xcd60, 0xfe14, 0xb8b7, 0x7ac1, 0x1, 0x1);
        gbc.writeMem(0x6a18, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8d5, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01F9
        gbc.setState(0xa1b2, 0xe0ff, 0xf390, 0xc7d7, 0x8eb7, 0x5fae, 0x0, 0x0);
        gbc.writeMem(0xa1b2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe0ff, gbc.sp());
        EXPECT(0xa1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b2));
        EXPECT(0x30, gbc.readMem(0xa1b3));
        // CB 30 01FA
        gbc.setState(0xa43e, 0x4799, 0x6170, 0x7b49, 0x3e84, 0x718e, 0x1, 0x0);
        gbc.writeMem(0xa43e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4799, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43e));
        EXPECT(0x30, gbc.readMem(0xa43f));
        // CB 30 01FB
        gbc.setState(0x591f, 0x17a6, 0x48a0, 0x7001, 0xc889, 0x7d7d, 0x0, 0x0);
        gbc.writeMem(0x591f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0x5921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01FC
        gbc.setState(0x3785, 0xbb09, 0x6690, 0x49e5, 0xa6db, 0x2ff5, 0x1, 0x1);
        gbc.writeMem(0x3785, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbb09, gbc.sp());
        EXPECT(0x3787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01FD
        gbc.setState(0x7edb, 0x2ca6, 0xed20, 0x2edc, 0x498a, 0xca3a, 0x1, 0x0);
        gbc.writeMem(0x7edb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2ca6, gbc.sp());
        EXPECT(0x7edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 01FE
        gbc.setState(0xd15e, 0xaba6, 0xefa0, 0x720f, 0x488, 0x2cc7, 0x0, 0x1);
        gbc.writeMem(0xd15e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaba6, gbc.sp());
        EXPECT(0xd160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15e));
        EXPECT(0x30, gbc.readMem(0xd15f));
        // CB 30 01FF
        gbc.setState(0x779d, 0x25f1, 0xaa20, 0x58b3, 0x37b2, 0x470, 0x1, 0x1);
        gbc.writeMem(0x779d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x25f1, gbc.sp());
        EXPECT(0x779f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0201
        gbc.setState(0xa23b, 0xc2fe, 0x7100, 0x9ca6, 0x9db4, 0x2c6b, 0x1, 0x1);
        gbc.writeMem(0xa23b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc2fe, gbc.sp());
        EXPECT(0xa23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23b));
        EXPECT(0x30, gbc.readMem(0xa23c));
        // CB 30 0202
        gbc.setState(0xb8a, 0x4fa0, 0xe300, 0x4f03, 0xbd6, 0x2e6c, 0x1, 0x0);
        gbc.writeMem(0xb8a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4fa0, gbc.sp());
        EXPECT(0xb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0203
        gbc.setState(0x3b84, 0x30e8, 0x5360, 0x3c39, 0xb190, 0x420d, 0x0, 0x0);
        gbc.writeMem(0x3b84, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x30e8, gbc.sp());
        EXPECT(0x3b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0204
        gbc.setState(0x6615, 0x311a, 0xcb70, 0xf7a2, 0x18e6, 0x6679, 0x0, 0x0);
        gbc.writeMem(0x6615, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x311a, gbc.sp());
        EXPECT(0x6617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0205
        gbc.setState(0x7fdf, 0x9ce5, 0xe480, 0xb593, 0xee22, 0x11e6, 0x0, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9ce5, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0207
        gbc.setState(0x5ed, 0xd441, 0xfe0, 0xf7b8, 0xcfcd, 0xf9c, 0x0, 0x0);
        gbc.writeMem(0x5ed, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd441, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0208
        gbc.setState(0xe8af, 0xac24, 0x1510, 0x540b, 0x97d4, 0x1eaa, 0x0, 0x1);
        gbc.writeMem(0xe8af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xac24, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8af));
        EXPECT(0x30, gbc.readMem(0xe8b0));
        // CB 30 0209
        gbc.setState(0x5599, 0x6c72, 0x4970, 0x511d, 0x55a1, 0xc64f, 0x1, 0x1);
        gbc.writeMem(0x5599, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6c72, gbc.sp());
        EXPECT(0x559b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 020A
        gbc.setState(0x9ccd, 0xd540, 0x8ee0, 0xb9c, 0xb2f5, 0x271, 0x0, 0x0);
        gbc.writeMem(0x9ccd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd540, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccd));
        EXPECT(0x30, gbc.readMem(0x9cce));
        // CB 30 020B
        gbc.setState(0x8d97, 0xfb1b, 0xa620, 0xaa7f, 0xc95, 0xafb2, 0x1, 0x0);
        gbc.writeMem(0x8d97, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0x8d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d97));
        EXPECT(0x30, gbc.readMem(0x8d98));
        // CB 30 020C
        gbc.setState(0x9f4a, 0x53ac, 0x2bd0, 0x7ac1, 0x25f5, 0xdb75, 0x1, 0x0);
        gbc.writeMem(0x9f4a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x9f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4a));
        EXPECT(0x30, gbc.readMem(0x9f4b));
        // CB 30 020D
        gbc.setState(0x63c3, 0xe9b8, 0x4020, 0x2f84, 0xa63e, 0x3d6, 0x1, 0x0);
        gbc.writeMem(0x63c3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe9b8, gbc.sp());
        EXPECT(0x63c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 020E
        gbc.setState(0x3194, 0x4497, 0xe290, 0x53be, 0x33e0, 0xa592, 0x0, 0x1);
        gbc.writeMem(0x3194, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4497, gbc.sp());
        EXPECT(0x3196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 020F
        gbc.setState(0xc68c, 0x6c02, 0xcb60, 0xa0dd, 0x62be, 0x89ba, 0x0, 0x0);
        gbc.writeMem(0xc68c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6c02, gbc.sp());
        EXPECT(0xc68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68c));
        EXPECT(0x30, gbc.readMem(0xc68d));
        // CB 30 0210
        gbc.setState(0xab5a, 0x61d2, 0x270, 0x9370, 0x5176, 0xab1a, 0x0, 0x1);
        gbc.writeMem(0xab5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x61d2, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5a));
        EXPECT(0x30, gbc.readMem(0xab5b));
        // CB 30 0211
        gbc.setState(0xaf7a, 0x25e8, 0x6f30, 0xe81d, 0x496a, 0x4c33, 0x0, 0x1);
        gbc.writeMem(0xaf7a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x25e8, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7a));
        EXPECT(0x30, gbc.readMem(0xaf7b));
        // CB 30 0212
        gbc.setState(0x7625, 0x4f20, 0xd3a0, 0x4a62, 0xc85c, 0xbe28, 0x1, 0x0);
        gbc.writeMem(0x7625, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4f20, gbc.sp());
        EXPECT(0x7627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0213
        gbc.setState(0x6ac8, 0x82af, 0x92a0, 0xad78, 0xeef6, 0x7f0, 0x1, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x82af, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0214
        gbc.setState(0x9f65, 0x9fe, 0xd350, 0xd44b, 0x61f, 0xbdba, 0x0, 0x0);
        gbc.writeMem(0x9f65, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9fe, gbc.sp());
        EXPECT(0x9f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f65));
        EXPECT(0x30, gbc.readMem(0x9f66));
        // CB 30 0215
        gbc.setState(0x8208, 0xe5c, 0xb6e0, 0x265f, 0xd2a8, 0x299b, 0x1, 0x1);
        gbc.writeMem(0x8208, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe5c, gbc.sp());
        EXPECT(0x820a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8208));
        EXPECT(0x30, gbc.readMem(0x8209));
        // CB 30 0216
        gbc.setState(0x526, 0xc081, 0x6e90, 0xb16d, 0x9201, 0x6e, 0x1, 0x0);
        gbc.writeMem(0x526, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc081, gbc.sp());
        EXPECT(0x528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0217
        gbc.setState(0x6b6a, 0x8c37, 0x8190, 0xbc6, 0x2948, 0xbe69, 0x1, 0x0);
        gbc.writeMem(0x6b6a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8c37, gbc.sp());
        EXPECT(0x6b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0218
        gbc.setState(0x75b7, 0x453c, 0xccf0, 0x4798, 0x4d18, 0xb7a, 0x1, 0x0);
        gbc.writeMem(0x75b7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0x75b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0219
        gbc.setState(0xb493, 0x236e, 0x3c00, 0x3df6, 0xd3e8, 0x9e9d, 0x0, 0x0);
        gbc.writeMem(0xb493, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x236e, gbc.sp());
        EXPECT(0xb495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb493));
        EXPECT(0x30, gbc.readMem(0xb494));
        // CB 30 021A
        gbc.setState(0x4a25, 0xaf34, 0x3420, 0x2c0b, 0x5570, 0x8263, 0x0, 0x1);
        gbc.writeMem(0x4a25, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xaf34, gbc.sp());
        EXPECT(0x4a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 021B
        gbc.setState(0xa8c2, 0xc845, 0xbe70, 0x2d60, 0xff13, 0x2f5a, 0x0, 0x1);
        gbc.writeMem(0xa8c2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc845, gbc.sp());
        EXPECT(0xa8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c2));
        EXPECT(0x30, gbc.readMem(0xa8c3));
        // CB 30 021C
        gbc.setState(0xdd3c, 0xad3d, 0xabb0, 0x20ae, 0x55e4, 0x2bcc, 0x0, 0x0);
        gbc.writeMem(0xdd3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xad3d, gbc.sp());
        EXPECT(0xdd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3c));
        EXPECT(0x30, gbc.readMem(0xdd3d));
        // CB 30 021D
        gbc.setState(0xb121, 0x5fed, 0xb9c0, 0xb4e8, 0x432b, 0xd538, 0x1, 0x0);
        gbc.writeMem(0xb121, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5fed, gbc.sp());
        EXPECT(0xb123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb121));
        EXPECT(0x30, gbc.readMem(0xb122));
        // CB 30 021E
        gbc.setState(0x99be, 0x3c6c, 0x65c0, 0x76b6, 0x9c5b, 0x286a, 0x1, 0x0);
        gbc.writeMem(0x99be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3c6c, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99be));
        EXPECT(0x30, gbc.readMem(0x99bf));
        // CB 30 021F
        gbc.setState(0xc71c, 0xdfca, 0x3e00, 0x3271, 0x5547, 0x602, 0x0, 0x1);
        gbc.writeMem(0xc71c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdfca, gbc.sp());
        EXPECT(0xc71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71c));
        EXPECT(0x30, gbc.readMem(0xc71d));
        // CB 30 0220
        gbc.setState(0xcc4a, 0x97a0, 0x4fb0, 0xb345, 0xef14, 0x5f24, 0x0, 0x0);
        gbc.writeMem(0xcc4a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x97a0, gbc.sp());
        EXPECT(0xcc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4a));
        EXPECT(0x30, gbc.readMem(0xcc4b));
        // CB 30 0221
        gbc.setState(0x9c14, 0xea16, 0xf2b0, 0xaf04, 0xd9e6, 0x9097, 0x1, 0x1);
        gbc.writeMem(0x9c14, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea16, gbc.sp());
        EXPECT(0x9c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c14));
        EXPECT(0x30, gbc.readMem(0x9c15));
        // CB 30 0222
        gbc.setState(0xafc8, 0xba9e, 0x83e0, 0x8aec, 0x4226, 0xa614, 0x1, 0x0);
        gbc.writeMem(0xafc8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xba9e, gbc.sp());
        EXPECT(0xafca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc8));
        EXPECT(0x30, gbc.readMem(0xafc9));
        // CB 30 0223
        gbc.setState(0xd927, 0x713, 0xf350, 0x7f0, 0x6c7f, 0xa61a, 0x0, 0x0);
        gbc.writeMem(0xd927, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x713, gbc.sp());
        EXPECT(0xd929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd927));
        EXPECT(0x30, gbc.readMem(0xd928));
        // CB 30 0224
        gbc.setState(0xb7ee, 0xc6ee, 0xe7b0, 0xc774, 0x7e2, 0x8bff, 0x1, 0x1);
        gbc.writeMem(0xb7ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc6ee, gbc.sp());
        EXPECT(0xb7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ee));
        EXPECT(0x30, gbc.readMem(0xb7ef));
        // CB 30 0225
        gbc.setState(0xce9a, 0x794b, 0x1fa0, 0x6818, 0xbcc1, 0xc47f, 0x1, 0x1);
        gbc.writeMem(0xce9a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x794b, gbc.sp());
        EXPECT(0xce9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9a));
        EXPECT(0x30, gbc.readMem(0xce9b));
        // CB 30 0226
        gbc.setState(0x9963, 0x5499, 0xa930, 0xfd68, 0x4855, 0x44b5, 0x1, 0x0);
        gbc.writeMem(0x9963, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5499, gbc.sp());
        EXPECT(0x9965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9963));
        EXPECT(0x30, gbc.readMem(0x9964));
        // CB 30 0227
        gbc.setState(0x531b, 0xadb, 0x92b0, 0x21eb, 0x8856, 0xb207, 0x1, 0x0);
        gbc.writeMem(0x531b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xadb, gbc.sp());
        EXPECT(0x531d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0228
        gbc.setState(0xca98, 0xdc25, 0x14d0, 0x159d, 0xc939, 0x1d1b, 0x0, 0x0);
        gbc.writeMem(0xca98, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdc25, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca98));
        EXPECT(0x30, gbc.readMem(0xca99));
        // CB 30 0229
        gbc.setState(0x98b7, 0xe28a, 0xe890, 0xf62f, 0xf442, 0x8275, 0x0, 0x0);
        gbc.writeMem(0x98b7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe28a, gbc.sp());
        EXPECT(0x98b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b7));
        EXPECT(0x30, gbc.readMem(0x98b8));
        // CB 30 022A
        gbc.setState(0x5d52, 0xdf43, 0xdb80, 0x845f, 0xb75c, 0x2b0, 0x1, 0x1);
        gbc.writeMem(0x5d52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdf43, gbc.sp());
        EXPECT(0x5d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 022B
        gbc.setState(0xc2c9, 0x3743, 0x50, 0xa114, 0x690c, 0x29f2, 0x0, 0x1);
        gbc.writeMem(0xc2c9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3743, gbc.sp());
        EXPECT(0xc2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c9));
        EXPECT(0x30, gbc.readMem(0xc2ca));
        // CB 30 022C
        gbc.setState(0xe0fb, 0x1cc7, 0xdd90, 0xc5c2, 0xcd2c, 0xf80d, 0x0, 0x0);
        gbc.writeMem(0xe0fb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1cc7, gbc.sp());
        EXPECT(0xe0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fb));
        EXPECT(0x30, gbc.readMem(0xe0fc));
        // CB 30 022D
        gbc.setState(0xd88f, 0x27ac, 0x99c0, 0x5837, 0xc30e, 0x1eb3, 0x0, 0x0);
        gbc.writeMem(0xd88f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x27ac, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88f));
        EXPECT(0x30, gbc.readMem(0xd890));
        // CB 30 022E
        gbc.setState(0xc864, 0x679f, 0xdeb0, 0x3e59, 0xd46d, 0x5194, 0x1, 0x1);
        gbc.writeMem(0xc864, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x679f, gbc.sp());
        EXPECT(0xc866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc864));
        EXPECT(0x30, gbc.readMem(0xc865));
        // CB 30 022F
        gbc.setState(0x4e89, 0xfb73, 0xb980, 0x29f, 0x3f42, 0xaef2, 0x0, 0x1);
        gbc.writeMem(0x4e89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfb73, gbc.sp());
        EXPECT(0x4e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0231
        gbc.setState(0x53f1, 0x958, 0xb400, 0x2bb9, 0x2dbd, 0xc075, 0x1, 0x0);
        gbc.writeMem(0x53f1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0x53f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0232
        gbc.setState(0xa819, 0x752b, 0x4190, 0xe83b, 0xeafb, 0x1a22, 0x1, 0x1);
        gbc.writeMem(0xa819, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x752b, gbc.sp());
        EXPECT(0xa81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa819));
        EXPECT(0x30, gbc.readMem(0xa81a));
        // CB 30 0233
        gbc.setState(0x6fcf, 0xfa8e, 0xaf60, 0x9ef6, 0xecce, 0xe5e9, 0x1, 0x0);
        gbc.writeMem(0x6fcf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0x6fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0234
        gbc.setState(0x8b2a, 0x2e90, 0x7b50, 0x48da, 0xbc4c, 0x135, 0x0, 0x0);
        gbc.writeMem(0x8b2a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2e90, gbc.sp());
        EXPECT(0x8b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2a));
        EXPECT(0x30, gbc.readMem(0x8b2b));
        // CB 30 0235
        gbc.setState(0x7063, 0xebe1, 0x1ce0, 0xa1a7, 0x46a3, 0xf89f, 0x0, 0x1);
        gbc.writeMem(0x7063, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xebe1, gbc.sp());
        EXPECT(0x7065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0236
        gbc.setState(0x4200, 0xd2b6, 0xb400, 0x5a3, 0x358b, 0xf4e, 0x1, 0x1);
        gbc.writeMem(0x4200, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd2b6, gbc.sp());
        EXPECT(0x4202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0237
        gbc.setState(0x28a8, 0x4df8, 0x1bf0, 0xb8da, 0x789e, 0x6ebf, 0x0, 0x1);
        gbc.writeMem(0x28a8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4df8, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0238
        gbc.setState(0x8d61, 0x4e24, 0x8410, 0xe4c0, 0xd18a, 0x68c6, 0x1, 0x0);
        gbc.writeMem(0x8d61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4e24, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d61));
        EXPECT(0x30, gbc.readMem(0x8d62));
        // CB 30 0239
        gbc.setState(0x1d8c, 0x635a, 0xf400, 0x2bb, 0x8562, 0x544, 0x1, 0x0);
        gbc.writeMem(0x1d8c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x635a, gbc.sp());
        EXPECT(0x1d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 023B
        gbc.setState(0x529e, 0x4ff9, 0x5350, 0xdc8b, 0x9a7b, 0xe9c1, 0x1, 0x0);
        gbc.writeMem(0x529e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4ff9, gbc.sp());
        EXPECT(0x52a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 023C
        gbc.setState(0xd22f, 0x3d34, 0x8ac0, 0xa8d7, 0xf81f, 0x877a, 0x1, 0x1);
        gbc.writeMem(0xd22f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3d34, gbc.sp());
        EXPECT(0xd231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22f));
        EXPECT(0x30, gbc.readMem(0xd230));
        // CB 30 023D
        gbc.setState(0x58be, 0x9a02, 0x44c0, 0x1c8f, 0xab93, 0x10a8, 0x1, 0x1);
        gbc.writeMem(0x58be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9a02, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 023E
        gbc.setState(0xdf12, 0xe482, 0x5920, 0x4ff, 0x1317, 0xaa27, 0x1, 0x1);
        gbc.writeMem(0xdf12, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe482, gbc.sp());
        EXPECT(0xdf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf12));
        EXPECT(0x30, gbc.readMem(0xdf13));
        // CB 30 023F
        gbc.setState(0xa8a, 0xb3ee, 0x8290, 0x2820, 0xc3e7, 0xc896, 0x1, 0x0);
        gbc.writeMem(0xa8a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb3ee, gbc.sp());
        EXPECT(0xa8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0240
        gbc.setState(0x6899, 0x4032, 0xf9d0, 0xc4a1, 0xd89a, 0x959d, 0x1, 0x1);
        gbc.writeMem(0x6899, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4032, gbc.sp());
        EXPECT(0x689b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0241
        gbc.setState(0xc477, 0x587a, 0x7180, 0xee48, 0x8cab, 0x424f, 0x0, 0x0);
        gbc.writeMem(0xc477, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x587a, gbc.sp());
        EXPECT(0xc479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc477));
        EXPECT(0x30, gbc.readMem(0xc478));
        // CB 30 0242
        gbc.setState(0xa372, 0x14aa, 0x84a0, 0x8443, 0xb67c, 0x3861, 0x1, 0x0);
        gbc.writeMem(0xa372, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x14aa, gbc.sp());
        EXPECT(0xa374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa372));
        EXPECT(0x30, gbc.readMem(0xa373));
        // CB 30 0243
        gbc.setState(0x2169, 0x90b7, 0xfb80, 0x5ebf, 0x795c, 0x148c, 0x1, 0x0);
        gbc.writeMem(0x2169, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x216b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0244
        gbc.setState(0xcf5e, 0x5f64, 0x5040, 0x1192, 0xdd77, 0x43ba, 0x0, 0x0);
        gbc.writeMem(0xcf5e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5f64, gbc.sp());
        EXPECT(0xcf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5e));
        EXPECT(0x30, gbc.readMem(0xcf5f));
        // CB 30 0245
        gbc.setState(0xa1a1, 0xb6ee, 0x2340, 0x79d, 0x1648, 0x63f9, 0x1, 0x0);
        gbc.writeMem(0xa1a1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb6ee, gbc.sp());
        EXPECT(0xa1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a1));
        EXPECT(0x30, gbc.readMem(0xa1a2));
        // CB 30 0246
        gbc.setState(0xa810, 0xb9f1, 0xc2f0, 0x2380, 0xffa8, 0xaee8, 0x0, 0x0);
        gbc.writeMem(0xa810, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0xa812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa810));
        EXPECT(0x30, gbc.readMem(0xa811));
        // CB 30 0247
        gbc.setState(0x87db, 0xf0a9, 0xba20, 0xc3ea, 0xa94b, 0xb8b6, 0x0, 0x1);
        gbc.writeMem(0x87db, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf0a9, gbc.sp());
        EXPECT(0x87dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87db));
        EXPECT(0x30, gbc.readMem(0x87dc));
        // CB 30 0249
        gbc.setState(0x395c, 0x80f4, 0x7420, 0x93a1, 0x6fae, 0x614b, 0x0, 0x0);
        gbc.writeMem(0x395c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x80f4, gbc.sp());
        EXPECT(0x395e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 024A
        gbc.setState(0xd6fc, 0x6405, 0x68e0, 0x1f38, 0xff45, 0x7af2, 0x1, 0x1);
        gbc.writeMem(0xd6fc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6405, gbc.sp());
        EXPECT(0xd6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fc));
        EXPECT(0x30, gbc.readMem(0xd6fd));
        // CB 30 024B
        gbc.setState(0x86d6, 0x2cf9, 0x1ee0, 0x238, 0x799f, 0xc48d, 0x1, 0x1);
        gbc.writeMem(0x86d6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0x86d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d6));
        EXPECT(0x30, gbc.readMem(0x86d7));
        // CB 30 024C
        gbc.setState(0xb2aa, 0x95cb, 0xa430, 0x4302, 0xc3d6, 0x55fc, 0x0, 0x0);
        gbc.writeMem(0xb2aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0xb2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2aa));
        EXPECT(0x30, gbc.readMem(0xb2ab));
        // CB 30 024D
        gbc.setState(0x50dc, 0x5273, 0x3230, 0x6bf7, 0x5a09, 0xb1ed, 0x0, 0x0);
        gbc.writeMem(0x50dc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5273, gbc.sp());
        EXPECT(0x50de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 024E
        gbc.setState(0x7df3, 0x15e6, 0x7d80, 0xad67, 0x8be8, 0xf7ac, 0x1, 0x0);
        gbc.writeMem(0x7df3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x15e6, gbc.sp());
        EXPECT(0x7df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 024F
        gbc.setState(0x9a60, 0x8fe4, 0xfc40, 0x37f, 0xb63, 0x5941, 0x1, 0x0);
        gbc.writeMem(0x9a60, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8fe4, gbc.sp());
        EXPECT(0x9a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a60));
        EXPECT(0x30, gbc.readMem(0x9a61));
        // CB 30 0250
        gbc.setState(0xb4cb, 0x9811, 0xd090, 0xcd2b, 0xb12d, 0xa911, 0x0, 0x0);
        gbc.writeMem(0xb4cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9811, gbc.sp());
        EXPECT(0xb4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4cb));
        EXPECT(0x30, gbc.readMem(0xb4cc));
        // CB 30 0251
        gbc.setState(0xb9a5, 0xe83f, 0xf780, 0xcf99, 0x85da, 0x61fa, 0x1, 0x0);
        gbc.writeMem(0xb9a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe83f, gbc.sp());
        EXPECT(0xb9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a5));
        EXPECT(0x30, gbc.readMem(0xb9a6));
        // CB 30 0252
        gbc.setState(0x4dd2, 0x3338, 0x6650, 0x9633, 0x4d07, 0xa1ae, 0x0, 0x0);
        gbc.writeMem(0x4dd2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3338, gbc.sp());
        EXPECT(0x4dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0254
        gbc.setState(0xcafe, 0x8c5a, 0xec30, 0xd884, 0x9cab, 0x329b, 0x1, 0x0);
        gbc.writeMem(0xcafe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8c5a, gbc.sp());
        EXPECT(0xcb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcafe));
        EXPECT(0x30, gbc.readMem(0xcaff));
        // CB 30 0255
        gbc.setState(0xfe4, 0x2b4d, 0xf560, 0xda2f, 0xaa07, 0x64a1, 0x0, 0x1);
        gbc.writeMem(0xfe4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2b4d, gbc.sp());
        EXPECT(0xfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0256
        gbc.setState(0x7b11, 0x7e9c, 0x3fc0, 0xcec0, 0xd81d, 0xedd, 0x0, 0x1);
        gbc.writeMem(0x7b11, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7e9c, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0257
        gbc.setState(0x2506, 0x70e2, 0xcbb0, 0xef41, 0x87f0, 0x4e14, 0x1, 0x0);
        gbc.writeMem(0x2506, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x70e2, gbc.sp());
        EXPECT(0x2508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0258
        gbc.setState(0x77c8, 0x1e6d, 0x3f50, 0xd053, 0x8800, 0xef49, 0x0, 0x0);
        gbc.writeMem(0x77c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1e6d, gbc.sp());
        EXPECT(0x77ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0259
        gbc.setState(0x7037, 0xdd9c, 0xa720, 0x8260, 0x6b48, 0x4e12, 0x0, 0x1);
        gbc.writeMem(0x7037, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdd9c, gbc.sp());
        EXPECT(0x7039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 025A
        gbc.setState(0x8cf0, 0x690f, 0xd1d0, 0xe379, 0x15e0, 0x4aca, 0x1, 0x0);
        gbc.writeMem(0x8cf0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x690f, gbc.sp());
        EXPECT(0x8cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf0));
        EXPECT(0x30, gbc.readMem(0x8cf1));
        // CB 30 025B
        gbc.setState(0xe57f, 0x3b60, 0x7300, 0xbf2d, 0xd705, 0x1cee, 0x1, 0x1);
        gbc.writeMem(0xe57f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3b60, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57f));
        EXPECT(0x30, gbc.readMem(0xe580));
        // CB 30 025C
        gbc.setState(0x2ac7, 0x707c, 0xb5a0, 0x8760, 0xaf5c, 0x2a35, 0x0, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x707c, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 025D
        gbc.setState(0xa31e, 0x1da5, 0xfbd0, 0xdde7, 0x2e66, 0x27cb, 0x0, 0x1);
        gbc.writeMem(0xa31e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1da5, gbc.sp());
        EXPECT(0xa320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31e));
        EXPECT(0x30, gbc.readMem(0xa31f));
        // CB 30 025E
        gbc.setState(0xcd7f, 0x2eb2, 0x6c70, 0x40e2, 0x6e25, 0x609a, 0x1, 0x1);
        gbc.writeMem(0xcd7f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2eb2, gbc.sp());
        EXPECT(0xcd81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7f));
        EXPECT(0x30, gbc.readMem(0xcd80));
        // CB 30 025F
        gbc.setState(0x3f89, 0x742c, 0xb540, 0x445e, 0xf0ad, 0x66c6, 0x0, 0x0);
        gbc.writeMem(0x3f89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x742c, gbc.sp());
        EXPECT(0x3f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0260
        gbc.setState(0xe67b, 0x407a, 0x6d30, 0xdd7d, 0xf8a3, 0x96fa, 0x1, 0x0);
        gbc.writeMem(0xe67b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x407a, gbc.sp());
        EXPECT(0xe67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67b));
        EXPECT(0x30, gbc.readMem(0xe67c));
        // CB 30 0261
        gbc.setState(0x5eb1, 0x45e9, 0x6c10, 0x2728, 0x3465, 0x4d03, 0x1, 0x1);
        gbc.writeMem(0x5eb1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x45e9, gbc.sp());
        EXPECT(0x5eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0262
        gbc.setState(0x7293, 0x6bf, 0xf800, 0xeae, 0x27f1, 0xd266, 0x0, 0x0);
        gbc.writeMem(0x7293, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6bf, gbc.sp());
        EXPECT(0x7295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0263
        gbc.setState(0x87bd, 0xbd13, 0x8f90, 0x3372, 0x7f2c, 0x9237, 0x0, 0x1);
        gbc.writeMem(0x87bd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbd13, gbc.sp());
        EXPECT(0x87bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87bd));
        EXPECT(0x30, gbc.readMem(0x87be));
        // CB 30 0264
        gbc.setState(0xab5, 0x433b, 0x7d40, 0x46f6, 0xaf2, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xab5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x433b, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0265
        gbc.setState(0x9e7e, 0x2c9, 0x2e0, 0x233d, 0xd788, 0x68db, 0x0, 0x1);
        gbc.writeMem(0x9e7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0x9e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7e));
        EXPECT(0x30, gbc.readMem(0x9e7f));
        // CB 30 0266
        gbc.setState(0x1463, 0x1adc, 0x95e0, 0xa926, 0xf127, 0xf3df, 0x1, 0x0);
        gbc.writeMem(0x1463, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0x1465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0267
        gbc.setState(0x8d7a, 0x388a, 0x5730, 0x354, 0x2971, 0x837c, 0x0, 0x0);
        gbc.writeMem(0x8d7a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x388a, gbc.sp());
        EXPECT(0x8d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7a));
        EXPECT(0x30, gbc.readMem(0x8d7b));
        // CB 30 0268
        gbc.setState(0xb15, 0xfc4, 0xd340, 0x93ce, 0xfd71, 0x9a15, 0x1, 0x0);
        gbc.writeMem(0xb15, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0xb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 026A
        gbc.setState(0x7b28, 0x1311, 0x2b30, 0xa71a, 0xaaf2, 0x44fd, 0x1, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1311, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 026B
        gbc.setState(0xd011, 0xb831, 0x3490, 0xf5a, 0xc5e6, 0x3a62, 0x1, 0x1);
        gbc.writeMem(0xd011, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0xd013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd011));
        EXPECT(0x30, gbc.readMem(0xd012));
        // CB 30 026D
        gbc.setState(0xe2d9, 0xefcb, 0x6cf0, 0x1b18, 0xf3da, 0x77da, 0x1, 0x0);
        gbc.writeMem(0xe2d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xefcb, gbc.sp());
        EXPECT(0xe2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d9));
        EXPECT(0x30, gbc.readMem(0xe2da));
        // CB 30 026E
        gbc.setState(0x9cf7, 0x24f5, 0xb470, 0xd953, 0xb78c, 0x5f70, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf7));
        EXPECT(0x30, gbc.readMem(0x9cf8));
        // CB 30 026F
        gbc.setState(0xc212, 0xb63, 0x100, 0x83ab, 0xf878, 0x3d83, 0x1, 0x0);
        gbc.writeMem(0xc212, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0xc214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc212));
        EXPECT(0x30, gbc.readMem(0xc213));
        // CB 30 0270
        gbc.setState(0xd214, 0x683e, 0x4010, 0xabc4, 0x91c0, 0xd033, 0x0, 0x1);
        gbc.writeMem(0xd214, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x683e, gbc.sp());
        EXPECT(0xd216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd214));
        EXPECT(0x30, gbc.readMem(0xd215));
        // CB 30 0271
        gbc.setState(0x2068, 0x6015, 0x7bf0, 0x6f0a, 0xf29a, 0x6060, 0x1, 0x1);
        gbc.writeMem(0x2068, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6015, gbc.sp());
        EXPECT(0x206a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0272
        gbc.setState(0x40a8, 0xa47b, 0x5e60, 0x289, 0x3758, 0xef22, 0x1, 0x0);
        gbc.writeMem(0x40a8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0x40aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0274
        gbc.setState(0x3a71, 0x4444, 0x51c0, 0x5fc6, 0xc328, 0x91e1, 0x0, 0x1);
        gbc.writeMem(0x3a71, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4444, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0275
        gbc.setState(0xc3ab, 0xa9a9, 0x1b0, 0x3e4, 0x34b0, 0x77c9, 0x1, 0x0);
        gbc.writeMem(0xc3ab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa9a9, gbc.sp());
        EXPECT(0xc3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ab));
        EXPECT(0x30, gbc.readMem(0xc3ac));
        // CB 30 0276
        gbc.setState(0xd833, 0x9260, 0xd40, 0x36b7, 0x52af, 0x2bcc, 0x1, 0x1);
        gbc.writeMem(0xd833, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9260, gbc.sp());
        EXPECT(0xd835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd833));
        EXPECT(0x30, gbc.readMem(0xd834));
        // CB 30 0277
        gbc.setState(0x9ab1, 0xcdb9, 0x51b0, 0xa6d7, 0x7bf1, 0x5680, 0x0, 0x0);
        gbc.writeMem(0x9ab1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcdb9, gbc.sp());
        EXPECT(0x9ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab1));
        EXPECT(0x30, gbc.readMem(0x9ab2));
        // CB 30 0278
        gbc.setState(0x5de4, 0x53db, 0xce20, 0x5f5f, 0x75fc, 0xd788, 0x1, 0x1);
        gbc.writeMem(0x5de4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x53db, gbc.sp());
        EXPECT(0x5de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0279
        gbc.setState(0xd21b, 0x2510, 0xa590, 0xcc60, 0xe9f2, 0x94e5, 0x0, 0x0);
        gbc.writeMem(0xd21b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2510, gbc.sp());
        EXPECT(0xd21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21b));
        EXPECT(0x30, gbc.readMem(0xd21c));
        // CB 30 027A
        gbc.setState(0xb11e, 0x8ea9, 0x480, 0xe068, 0x3869, 0x9d5, 0x0, 0x0);
        gbc.writeMem(0xb11e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11e));
        EXPECT(0x30, gbc.readMem(0xb11f));
        // CB 30 027B
        gbc.setState(0xeacd, 0xf8ca, 0x3ae0, 0x2b69, 0xdda7, 0x204c, 0x0, 0x1);
        gbc.writeMem(0xeacd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf8ca, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacd));
        EXPECT(0x30, gbc.readMem(0xeace));
        // CB 30 027C
        gbc.setState(0x8fce, 0x26c6, 0x24f0, 0x5f6d, 0xf884, 0xd1c8, 0x0, 0x1);
        gbc.writeMem(0x8fce, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0x8fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fce));
        EXPECT(0x30, gbc.readMem(0x8fcf));
        // CB 30 027D
        gbc.setState(0xbb0d, 0xa1fc, 0x9550, 0xcade, 0x285b, 0x2da7, 0x1, 0x0);
        gbc.writeMem(0xbb0d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa1fc, gbc.sp());
        EXPECT(0xbb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0d));
        EXPECT(0x30, gbc.readMem(0xbb0e));
        // CB 30 027E
        gbc.setState(0x64e6, 0xa80f, 0xbc90, 0xb1f6, 0x55eb, 0x1532, 0x1, 0x0);
        gbc.writeMem(0x64e6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa80f, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 027F
        gbc.setState(0xdada, 0x32b2, 0x85e0, 0x7f24, 0xdb73, 0xa704, 0x0, 0x0);
        gbc.writeMem(0xdada, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x32b2, gbc.sp());
        EXPECT(0xdadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdada));
        EXPECT(0x30, gbc.readMem(0xdadb));
        // CB 30 0280
        gbc.setState(0x9db, 0xdd81, 0x7800, 0x9280, 0x3ecf, 0xf10, 0x0, 0x0);
        gbc.writeMem(0x9db, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdd81, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0281
        gbc.setState(0xc1c6, 0xfdd1, 0xf760, 0x9eff, 0xe10b, 0x4aae, 0x0, 0x0);
        gbc.writeMem(0xc1c6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfdd1, gbc.sp());
        EXPECT(0xc1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c6));
        EXPECT(0x30, gbc.readMem(0xc1c7));
        // CB 30 0282
        gbc.setState(0xc5a5, 0x108, 0x8cd0, 0x9fd6, 0x7e9d, 0x191c, 0x1, 0x0);
        gbc.writeMem(0xc5a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x108, gbc.sp());
        EXPECT(0xc5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a5));
        EXPECT(0x30, gbc.readMem(0xc5a6));
        // CB 30 0283
        gbc.setState(0x8d4, 0x8d95, 0xc2a0, 0x6015, 0xbe19, 0x5d11, 0x0, 0x1);
        gbc.writeMem(0x8d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8d95, gbc.sp());
        EXPECT(0x8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0284
        gbc.setState(0xa766, 0xc09a, 0xaac0, 0x144, 0x8191, 0x855f, 0x0, 0x0);
        gbc.writeMem(0xa766, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc09a, gbc.sp());
        EXPECT(0xa768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa766));
        EXPECT(0x30, gbc.readMem(0xa767));
        // CB 30 0285
        gbc.setState(0x99c0, 0xbd9a, 0x2480, 0xff09, 0x500f, 0xdb57, 0x0, 0x0);
        gbc.writeMem(0x99c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0x99c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c0));
        EXPECT(0x30, gbc.readMem(0x99c1));
        // CB 30 0286
        gbc.setState(0xd6c0, 0x152b, 0x8200, 0x2d61, 0xf210, 0xf3bb, 0x1, 0x0);
        gbc.writeMem(0xd6c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0xd6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c0));
        EXPECT(0x30, gbc.readMem(0xd6c1));
        // CB 30 0287
        gbc.setState(0xc6e4, 0xf06f, 0x3470, 0xbe38, 0xd013, 0x93e2, 0x1, 0x0);
        gbc.writeMem(0xc6e4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf06f, gbc.sp());
        EXPECT(0xc6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e4));
        EXPECT(0x30, gbc.readMem(0xc6e5));
        // CB 30 0288
        gbc.setState(0x238c, 0x478e, 0x1b80, 0xf355, 0xd153, 0x987c, 0x1, 0x0);
        gbc.writeMem(0x238c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x478e, gbc.sp());
        EXPECT(0x238e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0289
        gbc.setState(0xafdb, 0xf01a, 0x7250, 0x858a, 0x8a31, 0x4fc3, 0x1, 0x0);
        gbc.writeMem(0xafdb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf01a, gbc.sp());
        EXPECT(0xafdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafdb));
        EXPECT(0x30, gbc.readMem(0xafdc));
        // CB 30 028A
        gbc.setState(0xebac, 0x482, 0x67c0, 0x768c, 0xee9c, 0xcd70, 0x1, 0x1);
        gbc.writeMem(0xebac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x482, gbc.sp());
        EXPECT(0xebae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebac));
        EXPECT(0x30, gbc.readMem(0xebad));
        // CB 30 028B
        gbc.setState(0x6eee, 0xd90b, 0xeda0, 0xe93a, 0x5d97, 0x3047, 0x1, 0x0);
        gbc.writeMem(0x6eee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd90b, gbc.sp());
        EXPECT(0x6ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 028C
        gbc.setState(0xd7a6, 0x804a, 0xecf0, 0xae86, 0x9ac6, 0xf986, 0x0, 0x1);
        gbc.writeMem(0xd7a6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0xd7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a6));
        EXPECT(0x30, gbc.readMem(0xd7a7));
        // CB 30 028E
        gbc.setState(0xa389, 0x3a43, 0x9a10, 0x2c96, 0x6f58, 0x7e35, 0x1, 0x0);
        gbc.writeMem(0xa389, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3a43, gbc.sp());
        EXPECT(0xa38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa389));
        EXPECT(0x30, gbc.readMem(0xa38a));
        // CB 30 028F
        gbc.setState(0xc668, 0x428c, 0xe3d0, 0xd22, 0x765e, 0x24df, 0x1, 0x1);
        gbc.writeMem(0xc668, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x428c, gbc.sp());
        EXPECT(0xc66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc668));
        EXPECT(0x30, gbc.readMem(0xc669));
        // CB 30 0290
        gbc.setState(0xb30a, 0xfec9, 0x6b30, 0xac6e, 0x7c96, 0xb25b, 0x1, 0x0);
        gbc.writeMem(0xb30a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfec9, gbc.sp());
        EXPECT(0xb30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30a));
        EXPECT(0x30, gbc.readMem(0xb30b));
        // CB 30 0291
        gbc.setState(0x7ac, 0xe7a2, 0xc1b0, 0x7ffa, 0xaa34, 0xf615, 0x0, 0x0);
        gbc.writeMem(0x7ac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0x7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0292
        gbc.setState(0x64d9, 0x888, 0x2330, 0x4ac9, 0x15cb, 0xc58e, 0x1, 0x1);
        gbc.writeMem(0x64d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x888, gbc.sp());
        EXPECT(0x64db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0293
        gbc.setState(0x72e9, 0xcf9a, 0xa8c0, 0xca4b, 0xe95f, 0x7da3, 0x1, 0x1);
        gbc.writeMem(0x72e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcf9a, gbc.sp());
        EXPECT(0x72eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0294
        gbc.setState(0xaca8, 0x6f1f, 0x28c0, 0x401e, 0xf501, 0x4fe2, 0x1, 0x1);
        gbc.writeMem(0xaca8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6f1f, gbc.sp());
        EXPECT(0xacaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca8));
        EXPECT(0x30, gbc.readMem(0xaca9));
        // CB 30 0296
        gbc.setState(0xcf49, 0xbb34, 0x3ef0, 0x2e1b, 0x7c3b, 0xc11, 0x1, 0x0);
        gbc.writeMem(0xcf49, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf49));
        EXPECT(0x30, gbc.readMem(0xcf4a));
        // CB 30 0297
        gbc.setState(0xbe2d, 0xf097, 0xa730, 0xfbeb, 0x6a4a, 0x6e18, 0x1, 0x0);
        gbc.writeMem(0xbe2d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf097, gbc.sp());
        EXPECT(0xbe2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2d));
        EXPECT(0x30, gbc.readMem(0xbe2e));
        // CB 30 0298
        gbc.setState(0x6da6, 0x26c6, 0xaf40, 0xc865, 0x3218, 0x5f79, 0x0, 0x0);
        gbc.writeMem(0x6da6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0x6da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0299
        gbc.setState(0x34af, 0xe040, 0x8ef0, 0x3072, 0xd06, 0xd31a, 0x1, 0x0);
        gbc.writeMem(0x34af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe040, gbc.sp());
        EXPECT(0x34b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 029A
        gbc.setState(0xcbd6, 0x41e3, 0xf330, 0x5fad, 0xf548, 0x8da8, 0x0, 0x0);
        gbc.writeMem(0xcbd6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0xcbd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd6));
        EXPECT(0x30, gbc.readMem(0xcbd7));
        // CB 30 029B
        gbc.setState(0xc9a, 0xb258, 0xe790, 0x186b, 0xd8f1, 0xc92e, 0x1, 0x0);
        gbc.writeMem(0xc9a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb258, gbc.sp());
        EXPECT(0xc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 029C
        gbc.setState(0xc532, 0xfb5d, 0x1c30, 0x7fe7, 0x51b5, 0xc48a, 0x0, 0x0);
        gbc.writeMem(0xc532, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0xc534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc532));
        EXPECT(0x30, gbc.readMem(0xc533));
        // CB 30 029D
        gbc.setState(0x10b, 0x70de, 0xe860, 0x531f, 0xad41, 0x8247, 0x1, 0x0);
        gbc.writeMem(0x10b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x70de, gbc.sp());
        EXPECT(0x10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 029E
        gbc.setState(0x3ebe, 0x37c3, 0x2e30, 0xd296, 0x9c48, 0x971e, 0x0, 0x0);
        gbc.writeMem(0x3ebe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x37c3, gbc.sp());
        EXPECT(0x3ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 029F
        gbc.setState(0xa1f6, 0x4d5, 0x49d0, 0xa5c6, 0x2ab4, 0xb1c9, 0x1, 0x1);
        gbc.writeMem(0xa1f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4d5, gbc.sp());
        EXPECT(0xa1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f6));
        EXPECT(0x30, gbc.readMem(0xa1f7));
        // CB 30 02A0
        gbc.setState(0xe9ed, 0xe574, 0x2fb0, 0x8430, 0x94e5, 0x7dd2, 0x1, 0x0);
        gbc.writeMem(0xe9ed, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe574, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ed));
        EXPECT(0x30, gbc.readMem(0xe9ee));
        // CB 30 02A1
        gbc.setState(0x9723, 0x26ea, 0xaa60, 0x5ebf, 0xac1a, 0xfc4, 0x1, 0x1);
        gbc.writeMem(0x9723, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x26ea, gbc.sp());
        EXPECT(0x9725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9723));
        EXPECT(0x30, gbc.readMem(0x9724));
        // CB 30 02A2
        gbc.setState(0x1ea1, 0xd8a4, 0xfe0, 0x2f40, 0xde1b, 0x32d4, 0x1, 0x1);
        gbc.writeMem(0x1ea1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd8a4, gbc.sp());
        EXPECT(0x1ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02A3
        gbc.setState(0x4f06, 0x8cf9, 0xa60, 0xc06, 0x93b4, 0x58ed, 0x1, 0x0);
        gbc.writeMem(0x4f06, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8cf9, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02A4
        gbc.setState(0x6177, 0xad9e, 0xcb10, 0xd296, 0x4ce5, 0xfedd, 0x0, 0x1);
        gbc.writeMem(0x6177, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xad9e, gbc.sp());
        EXPECT(0x6179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02A5
        gbc.setState(0xc162, 0xddad, 0x53b0, 0xe36b, 0x72be, 0x300a, 0x1, 0x0);
        gbc.writeMem(0xc162, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xddad, gbc.sp());
        EXPECT(0xc164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc162));
        EXPECT(0x30, gbc.readMem(0xc163));
        // CB 30 02A6
        gbc.setState(0x4b85, 0xe7f8, 0x6160, 0x7aea, 0xc94, 0xf1dd, 0x0, 0x0);
        gbc.writeMem(0x4b85, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7f8, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02A9
        gbc.setState(0x7ea0, 0x5921, 0xe520, 0x8533, 0x1d17, 0x3209, 0x0, 0x1);
        gbc.writeMem(0x7ea0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5921, gbc.sp());
        EXPECT(0x7ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02AA
        gbc.setState(0xcb8e, 0xa0be, 0xe000, 0x803b, 0x97ab, 0xaeb, 0x1, 0x1);
        gbc.writeMem(0xcb8e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa0be, gbc.sp());
        EXPECT(0xcb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8e));
        EXPECT(0x30, gbc.readMem(0xcb8f));
        // CB 30 02AB
        gbc.setState(0x2a71, 0xb152, 0x6f70, 0x99d0, 0x3d37, 0x91ad, 0x1, 0x1);
        gbc.writeMem(0x2a71, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb152, gbc.sp());
        EXPECT(0x2a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02AC
        gbc.setState(0x3bb2, 0x4383, 0x85c0, 0x50a5, 0x55c6, 0xc66f, 0x0, 0x0);
        gbc.writeMem(0x3bb2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x3bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02AD
        gbc.setState(0x91d9, 0xa250, 0xe2d0, 0xf7af, 0xac11, 0x5219, 0x0, 0x0);
        gbc.writeMem(0x91d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x91db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d9));
        EXPECT(0x30, gbc.readMem(0x91da));
        // CB 30 02AE
        gbc.setState(0x9d21, 0x74e6, 0x2880, 0x8ad7, 0x4314, 0xfdec, 0x0, 0x1);
        gbc.writeMem(0x9d21, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x74e6, gbc.sp());
        EXPECT(0x9d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d21));
        EXPECT(0x30, gbc.readMem(0x9d22));
        // CB 30 02AF
        gbc.setState(0x19be, 0x65cd, 0x4950, 0x5e3d, 0x9bc2, 0xf0c9, 0x0, 0x0);
        gbc.writeMem(0x19be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x65cd, gbc.sp());
        EXPECT(0x19c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02B0
        gbc.setState(0x6470, 0x8273, 0xd890, 0xec0d, 0x62c4, 0xc974, 0x1, 0x1);
        gbc.writeMem(0x6470, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8273, gbc.sp());
        EXPECT(0x6472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02B1
        gbc.setState(0x1476, 0xc059, 0x9250, 0xf872, 0xb049, 0xa98a, 0x1, 0x1);
        gbc.writeMem(0x1476, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc059, gbc.sp());
        EXPECT(0x1478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02B2
        gbc.setState(0x4e84, 0x1a2, 0x30a0, 0x33f1, 0x71b2, 0x8a9, 0x1, 0x1);
        gbc.writeMem(0x4e84, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1a2, gbc.sp());
        EXPECT(0x4e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02B4
        gbc.setState(0x166b, 0x6f19, 0x6220, 0x4480, 0x8456, 0x9155, 0x0, 0x1);
        gbc.writeMem(0x166b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6f19, gbc.sp());
        EXPECT(0x166d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02B5
        gbc.setState(0x6f0a, 0xe338, 0x8860, 0x738a, 0xc593, 0x5c60, 0x0, 0x1);
        gbc.writeMem(0x6f0a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe338, gbc.sp());
        EXPECT(0x6f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02B6
        gbc.setState(0xa97e, 0xe35b, 0x9dc0, 0x508b, 0x24de, 0xd3ea, 0x0, 0x0);
        gbc.writeMem(0xa97e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe35b, gbc.sp());
        EXPECT(0xa980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97e));
        EXPECT(0x30, gbc.readMem(0xa97f));
        // CB 30 02B7
        gbc.setState(0xc270, 0xebc2, 0x90f0, 0x626c, 0x995e, 0xec73, 0x1, 0x1);
        gbc.writeMem(0xc270, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xebc2, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc270));
        EXPECT(0x30, gbc.readMem(0xc271));
        // CB 30 02B8
        gbc.setState(0xd639, 0x4bd3, 0xc430, 0xca97, 0x2819, 0x196, 0x0, 0x1);
        gbc.writeMem(0xd639, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4bd3, gbc.sp());
        EXPECT(0xd63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd639));
        EXPECT(0x30, gbc.readMem(0xd63a));
        // CB 30 02B9
        gbc.setState(0x346d, 0x2aec, 0xc100, 0x6930, 0xc40e, 0xad4a, 0x0, 0x1);
        gbc.writeMem(0x346d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2aec, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02BA
        gbc.setState(0xa3e9, 0x1e5e, 0xd30, 0x934a, 0xbbea, 0x5edf, 0x0, 0x0);
        gbc.writeMem(0xa3e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1e5e, gbc.sp());
        EXPECT(0xa3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e9));
        EXPECT(0x30, gbc.readMem(0xa3ea));
        // CB 30 02BB
        gbc.setState(0xef21, 0xcc78, 0x7960, 0x1813, 0xd9, 0x2151, 0x0, 0x1);
        gbc.writeMem(0xef21, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcc78, gbc.sp());
        EXPECT(0xef23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef21));
        EXPECT(0x30, gbc.readMem(0xef22));
        // CB 30 02BC
        gbc.setState(0x6ddf, 0xb05, 0xcf70, 0x1b48, 0x28f8, 0xe33, 0x1, 0x0);
        gbc.writeMem(0x6ddf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x6de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02BD
        gbc.setState(0x1635, 0x5e5f, 0xa6d0, 0x5321, 0xd401, 0x3c2d, 0x0, 0x1);
        gbc.writeMem(0x1635, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5e5f, gbc.sp());
        EXPECT(0x1637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02BE
        gbc.setState(0xa00b, 0x3da1, 0x8b60, 0x6637, 0x7422, 0x664b, 0x1, 0x1);
        gbc.writeMem(0xa00b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3da1, gbc.sp());
        EXPECT(0xa00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00b));
        EXPECT(0x30, gbc.readMem(0xa00c));
        // CB 30 02BF
        gbc.setState(0xb1cb, 0xe9a7, 0x870, 0xa38d, 0x125e, 0xdaee, 0x1, 0x0);
        gbc.writeMem(0xb1cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0xb1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cb));
        EXPECT(0x30, gbc.readMem(0xb1cc));
        // CB 30 02C0
        gbc.setState(0x7a16, 0x25da, 0xe8c0, 0x7d7f, 0x3819, 0x6948, 0x1, 0x1);
        gbc.writeMem(0x7a16, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x25da, gbc.sp());
        EXPECT(0x7a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02C1
        gbc.setState(0x9320, 0x35c5, 0x54e0, 0xa10, 0xe63a, 0x849a, 0x1, 0x1);
        gbc.writeMem(0x9320, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x35c5, gbc.sp());
        EXPECT(0x9322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9320));
        EXPECT(0x30, gbc.readMem(0x9321));
        // CB 30 02C3
        gbc.setState(0xb7ae, 0x3c5d, 0x87f0, 0x8f48, 0xc431, 0x3921, 0x0, 0x0);
        gbc.writeMem(0xb7ae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3c5d, gbc.sp());
        EXPECT(0xb7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ae));
        EXPECT(0x30, gbc.readMem(0xb7af));
        // CB 30 02C4
        gbc.setState(0x731d, 0x85a9, 0x5090, 0x22be, 0x9116, 0xc344, 0x0, 0x0);
        gbc.writeMem(0x731d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x85a9, gbc.sp());
        EXPECT(0x731f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02C5
        gbc.setState(0x5e10, 0x86fd, 0xaec0, 0x595f, 0xc8db, 0x6589, 0x0, 0x0);
        gbc.writeMem(0x5e10, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x86fd, gbc.sp());
        EXPECT(0x5e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02C6
        gbc.setState(0xb47f, 0xb486, 0x48d0, 0xad98, 0xcf95, 0x738f, 0x0, 0x1);
        gbc.writeMem(0xb47f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47f));
        EXPECT(0x30, gbc.readMem(0xb480));
        // CB 30 02C7
        gbc.setState(0x3bfd, 0x1075, 0x20b0, 0x18db, 0xbef7, 0xa772, 0x1, 0x0);
        gbc.writeMem(0x3bfd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1075, gbc.sp());
        EXPECT(0x3bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02C8
        gbc.setState(0x4a97, 0xaa81, 0x4f80, 0xa564, 0x10, 0x3f4f, 0x1, 0x0);
        gbc.writeMem(0x4a97, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaa81, gbc.sp());
        EXPECT(0x4a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02C9
        gbc.setState(0x3dac, 0x4d04, 0x3290, 0xc5d1, 0xcf16, 0x854b, 0x0, 0x1);
        gbc.writeMem(0x3dac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4d04, gbc.sp());
        EXPECT(0x3dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02CA
        gbc.setState(0x770f, 0xe4ce, 0x7fa0, 0xb593, 0xeb50, 0xb9bb, 0x1, 0x1);
        gbc.writeMem(0x770f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe4ce, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02CB
        gbc.setState(0xa36b, 0xf14e, 0x8b30, 0xc221, 0xeb15, 0x2e4e, 0x0, 0x0);
        gbc.writeMem(0xa36b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf14e, gbc.sp());
        EXPECT(0xa36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36b));
        EXPECT(0x30, gbc.readMem(0xa36c));
        // CB 30 02CC
        gbc.setState(0x998, 0x4bb7, 0xa1d0, 0x4d99, 0xeb18, 0x8532, 0x1, 0x1);
        gbc.writeMem(0x998, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4bb7, gbc.sp());
        EXPECT(0x99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02CD
        gbc.setState(0xd54, 0xcfed, 0x8f90, 0x849e, 0x7cb6, 0x72ea, 0x1, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcfed, gbc.sp());
        EXPECT(0xd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02CE
        gbc.setState(0x58f4, 0xfaf4, 0x63f0, 0x5363, 0x3f91, 0x3092, 0x1, 0x0);
        gbc.writeMem(0x58f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfaf4, gbc.sp());
        EXPECT(0x58f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02CF
        gbc.setState(0x2acf, 0xea8b, 0x2990, 0xe055, 0xb867, 0x33bc, 0x0, 0x1);
        gbc.writeMem(0x2acf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0x2ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02D1
        gbc.setState(0x50f7, 0x4c7e, 0x750, 0xb66f, 0x4d6f, 0x8f33, 0x1, 0x1);
        gbc.writeMem(0x50f7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4c7e, gbc.sp());
        EXPECT(0x50f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02D2
        gbc.setState(0x726d, 0xb0dc, 0xa60, 0xcc68, 0xca76, 0x16af, 0x0, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02D3
        gbc.setState(0x3acd, 0xbc9d, 0x6350, 0x4f5c, 0x4bd0, 0x3f4d, 0x1, 0x1);
        gbc.writeMem(0x3acd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbc9d, gbc.sp());
        EXPECT(0x3acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02D4
        gbc.setState(0x56ae, 0x36e7, 0xef70, 0x9c81, 0x1db8, 0x1ed, 0x0, 0x0);
        gbc.writeMem(0x56ae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x36e7, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02D5
        gbc.setState(0xc9a5, 0x2377, 0xa9c0, 0xb97d, 0xfc59, 0xc6e5, 0x0, 0x1);
        gbc.writeMem(0xc9a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2377, gbc.sp());
        EXPECT(0xc9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a5));
        EXPECT(0x30, gbc.readMem(0xc9a6));
        // CB 30 02D6
        gbc.setState(0xb75e, 0x4e21, 0xf90, 0xf775, 0xdc39, 0x5e27, 0x1, 0x0);
        gbc.writeMem(0xb75e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0xb760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75e));
        EXPECT(0x30, gbc.readMem(0xb75f));
        // CB 30 02D7
        gbc.setState(0xdcab, 0x9d5b, 0x5ed0, 0x330c, 0x8ac9, 0xd121, 0x1, 0x0);
        gbc.writeMem(0xdcab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9d5b, gbc.sp());
        EXPECT(0xdcad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcab));
        EXPECT(0x30, gbc.readMem(0xdcac));
        // CB 30 02D8
        gbc.setState(0x12e0, 0xbd50, 0x1350, 0x29b5, 0xcd99, 0x3554, 0x0, 0x1);
        gbc.writeMem(0x12e0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbd50, gbc.sp());
        EXPECT(0x12e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02D9
        gbc.setState(0x5d08, 0x68e5, 0x4a40, 0xc1c9, 0x38de, 0x2640, 0x0, 0x0);
        gbc.writeMem(0x5d08, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x68e5, gbc.sp());
        EXPECT(0x5d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02DA
        gbc.setState(0x6000, 0x893a, 0x2fa0, 0x36d3, 0xf698, 0x3e51, 0x1, 0x1);
        gbc.writeMem(0x6000, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x893a, gbc.sp());
        EXPECT(0x6002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02DB
        gbc.setState(0x2bd0, 0x7097, 0xd1a0, 0xc863, 0x38d, 0x7296, 0x0, 0x1);
        gbc.writeMem(0x2bd0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7097, gbc.sp());
        EXPECT(0x2bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02DC
        gbc.setState(0x60e7, 0xe626, 0xcd00, 0x5134, 0xcb05, 0xe00, 0x0, 0x1);
        gbc.writeMem(0x60e7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe626, gbc.sp());
        EXPECT(0x60e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02DE
        gbc.setState(0x9e13, 0xebe3, 0xf4d0, 0x4659, 0x7987, 0x49f2, 0x0, 0x1);
        gbc.writeMem(0x9e13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xebe3, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e13));
        EXPECT(0x30, gbc.readMem(0x9e14));
        // CB 30 02DF
        gbc.setState(0xd236, 0xe90d, 0x5bf0, 0x6401, 0x84e3, 0x9bbb, 0x1, 0x1);
        gbc.writeMem(0xd236, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe90d, gbc.sp());
        EXPECT(0xd238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd236));
        EXPECT(0x30, gbc.readMem(0xd237));
        // CB 30 02E1
        gbc.setState(0x10f4, 0xf263, 0xd8d0, 0x606a, 0xde1d, 0x3f58, 0x0, 0x1);
        gbc.writeMem(0x10f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf263, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02E2
        gbc.setState(0xb84a, 0x2b36, 0x4390, 0x3de6, 0x3f8f, 0x8b7, 0x0, 0x1);
        gbc.writeMem(0xb84a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2b36, gbc.sp());
        EXPECT(0xb84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84a));
        EXPECT(0x30, gbc.readMem(0xb84b));
        // CB 30 02E3
        gbc.setState(0x54a2, 0x75f2, 0x88c0, 0x2d7d, 0x14da, 0xb4b5, 0x1, 0x0);
        gbc.writeMem(0x54a2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x75f2, gbc.sp());
        EXPECT(0x54a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02E4
        gbc.setState(0x54dc, 0x2de2, 0xd330, 0xcac0, 0x6fae, 0xfde3, 0x0, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2de2, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02E5
        gbc.setState(0xd5d3, 0x7c86, 0xc50, 0xe090, 0xc94a, 0x26bf, 0x1, 0x1);
        gbc.writeMem(0xd5d3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7c86, gbc.sp());
        EXPECT(0xd5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d3));
        EXPECT(0x30, gbc.readMem(0xd5d4));
        // CB 30 02E6
        gbc.setState(0xd966, 0xd969, 0xe570, 0x4ea0, 0x9985, 0xc3b2, 0x1, 0x1);
        gbc.writeMem(0xd966, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd969, gbc.sp());
        EXPECT(0xd968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd966));
        EXPECT(0x30, gbc.readMem(0xd967));
        // CB 30 02E7
        gbc.setState(0xd5a4, 0x92b0, 0x3d10, 0xc01a, 0x98de, 0xa1a6, 0x0, 0x1);
        gbc.writeMem(0xd5a4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x92b0, gbc.sp());
        EXPECT(0xd5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a4));
        EXPECT(0x30, gbc.readMem(0xd5a5));
        // CB 30 02E8
        gbc.setState(0xaaa3, 0xd90a, 0x86d0, 0x2299, 0xc076, 0x23ef, 0x1, 0x1);
        gbc.writeMem(0xaaa3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd90a, gbc.sp());
        EXPECT(0xaaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa3));
        EXPECT(0x30, gbc.readMem(0xaaa4));
        // CB 30 02E9
        gbc.setState(0xc9ff, 0x799e, 0xd7e0, 0xcd8b, 0xe309, 0x11b8, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x799e, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ff));
        EXPECT(0x30, gbc.readMem(0xca00));
        // CB 30 02EA
        gbc.setState(0xde0, 0xe889, 0x1fa0, 0xa44e, 0x1e51, 0x4542, 0x1, 0x1);
        gbc.writeMem(0xde0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe889, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02EB
        gbc.setState(0xe484, 0x8880, 0x6360, 0x181d, 0xa213, 0x8c93, 0x0, 0x1);
        gbc.writeMem(0xe484, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0xe486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe484));
        EXPECT(0x30, gbc.readMem(0xe485));
        // CB 30 02EC
        gbc.setState(0x390a, 0x6f24, 0x44f0, 0xdcfa, 0xb43e, 0xdb46, 0x0, 0x1);
        gbc.writeMem(0x390a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6f24, gbc.sp());
        EXPECT(0x390c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02ED
        gbc.setState(0x5d4, 0x7b37, 0xbc80, 0xbe1b, 0x6a73, 0x94b4, 0x1, 0x0);
        gbc.writeMem(0x5d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7b37, gbc.sp());
        EXPECT(0x5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02EE
        gbc.setState(0x934, 0xdeb1, 0x47c0, 0x47d9, 0x2196, 0x31fc, 0x1, 0x1);
        gbc.writeMem(0x934, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdeb1, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02EF
        gbc.setState(0xe788, 0x4278, 0x8320, 0x1d68, 0xf14f, 0x4a98, 0x1, 0x1);
        gbc.writeMem(0xe788, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4278, gbc.sp());
        EXPECT(0xe78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe788));
        EXPECT(0x30, gbc.readMem(0xe789));
        // CB 30 02F0
        gbc.setState(0xcb94, 0xe555, 0xe560, 0x7b88, 0xfc08, 0x9d59, 0x1, 0x0);
        gbc.writeMem(0xcb94, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe555, gbc.sp());
        EXPECT(0xcb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb94));
        EXPECT(0x30, gbc.readMem(0xcb95));
        // CB 30 02F1
        gbc.setState(0x7bd4, 0x548f, 0x50f0, 0x4821, 0xcbab, 0x4fd2, 0x0, 0x1);
        gbc.writeMem(0x7bd4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x548f, gbc.sp());
        EXPECT(0x7bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02F2
        gbc.setState(0xd60b, 0xda12, 0x1920, 0x33a2, 0x196e, 0x49a7, 0x1, 0x0);
        gbc.writeMem(0xd60b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda12, gbc.sp());
        EXPECT(0xd60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60b));
        EXPECT(0x30, gbc.readMem(0xd60c));
        // CB 30 02F3
        gbc.setState(0x9a96, 0xfe41, 0xe080, 0xeb9a, 0x2fec, 0x6aec, 0x1, 0x1);
        gbc.writeMem(0x9a96, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfe41, gbc.sp());
        EXPECT(0x9a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a96));
        EXPECT(0x30, gbc.readMem(0x9a97));
        // CB 30 02F4
        gbc.setState(0x86f6, 0x6832, 0x8e60, 0x6616, 0x1d72, 0x47fb, 0x0, 0x1);
        gbc.writeMem(0x86f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6832, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f6));
        EXPECT(0x30, gbc.readMem(0x86f7));
        // CB 30 02F5
        gbc.setState(0x7535, 0xabf4, 0xd000, 0xa71f, 0xc78b, 0xc346, 0x1, 0x1);
        gbc.writeMem(0x7535, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xabf4, gbc.sp());
        EXPECT(0x7537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02F6
        gbc.setState(0x285a, 0x7f3f, 0xdda0, 0x3b3e, 0x3c1c, 0x84fc, 0x0, 0x0);
        gbc.writeMem(0x285a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7f3f, gbc.sp());
        EXPECT(0x285c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02F7
        gbc.setState(0x8aa, 0x7bd0, 0xa8e0, 0xa504, 0x6de3, 0x841b, 0x1, 0x0);
        gbc.writeMem(0x8aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0x8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02F8
        gbc.setState(0x1c0c, 0xf9cb, 0x8420, 0xd348, 0xdd17, 0x40ba, 0x1, 0x0);
        gbc.writeMem(0x1c0c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf9cb, gbc.sp());
        EXPECT(0x1c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02F9
        gbc.setState(0x3961, 0x6187, 0x6b60, 0xd320, 0xc4b3, 0x310e, 0x0, 0x1);
        gbc.writeMem(0x3961, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6187, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02FA
        gbc.setState(0x7813, 0xd4ff, 0xde70, 0x5e88, 0xbf59, 0x2a86, 0x1, 0x1);
        gbc.writeMem(0x7813, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd4ff, gbc.sp());
        EXPECT(0x7815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02FB
        gbc.setState(0x3bb1, 0x3c56, 0x5bf0, 0x5edd, 0x8606, 0xa958, 0x0, 0x0);
        gbc.writeMem(0x3bb1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0x3bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02FC
        gbc.setState(0xe097, 0x5d33, 0xa380, 0xdaaa, 0x7bbc, 0x5d15, 0x0, 0x0);
        gbc.writeMem(0xe097, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5d33, gbc.sp());
        EXPECT(0xe099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe097));
        EXPECT(0x30, gbc.readMem(0xe098));
        // CB 30 02FD
        gbc.setState(0x1b47, 0xc456, 0x64f0, 0xb02f, 0x248e, 0x29fe, 0x0, 0x1);
        gbc.writeMem(0x1b47, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc456, gbc.sp());
        EXPECT(0x1b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02FE
        gbc.setState(0x3cb8, 0x9dfc, 0x8340, 0x7fbd, 0x78e7, 0xea02, 0x0, 0x0);
        gbc.writeMem(0x3cb8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9dfc, gbc.sp());
        EXPECT(0x3cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 02FF
        gbc.setState(0x7eab, 0xed05, 0x6230, 0x53da, 0xa78c, 0x7885, 0x0, 0x1);
        gbc.writeMem(0x7eab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xed05, gbc.sp());
        EXPECT(0x7ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0300
        gbc.setState(0x983, 0x3493, 0x6d0, 0x8c5a, 0x5a26, 0xf3d9, 0x1, 0x1);
        gbc.writeMem(0x983, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3493, gbc.sp());
        EXPECT(0x985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0301
        gbc.setState(0xe220, 0xb1f7, 0xd560, 0xb19e, 0x51ab, 0x14cb, 0x0, 0x1);
        gbc.writeMem(0xe220, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb1f7, gbc.sp());
        EXPECT(0xe222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe220));
        EXPECT(0x30, gbc.readMem(0xe221));
        // CB 30 0302
        gbc.setState(0x3e7a, 0x78c0, 0xbe90, 0xf273, 0xab90, 0xc336, 0x0, 0x0);
        gbc.writeMem(0x3e7a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x78c0, gbc.sp());
        EXPECT(0x3e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0303
        gbc.setState(0xbab9, 0x4ff6, 0x5ef0, 0x958f, 0x3911, 0xcdae, 0x0, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4ff6, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab9));
        EXPECT(0x30, gbc.readMem(0xbaba));
        // CB 30 0304
        gbc.setState(0xb10e, 0xfdca, 0xe320, 0x6e2e, 0xcdfe, 0x762b, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfdca, gbc.sp());
        EXPECT(0xb110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10e));
        EXPECT(0x30, gbc.readMem(0xb10f));
        // CB 30 0305
        gbc.setState(0xec78, 0xb3b9, 0xd8c0, 0x125d, 0xc4dd, 0x82a8, 0x0, 0x1);
        gbc.writeMem(0xec78, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb3b9, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec78));
        EXPECT(0x30, gbc.readMem(0xec79));
        // CB 30 0307
        gbc.setState(0x53bd, 0x7acc, 0xb290, 0x279b, 0xdc61, 0x75d5, 0x1, 0x1);
        gbc.writeMem(0x53bd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7acc, gbc.sp());
        EXPECT(0x53bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0308
        gbc.setState(0x57b9, 0xea97, 0x7450, 0xebf0, 0x8a94, 0x92a2, 0x0, 0x0);
        gbc.writeMem(0x57b9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xea97, gbc.sp());
        EXPECT(0x57bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0309
        gbc.setState(0x429d, 0xe89d, 0xd720, 0xa0f8, 0xa0b, 0xecaa, 0x0, 0x0);
        gbc.writeMem(0x429d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe89d, gbc.sp());
        EXPECT(0x429f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 030A
        gbc.setState(0xe21f, 0x4222, 0x24d0, 0x4b07, 0x26e6, 0x5ae8, 0x0, 0x0);
        gbc.writeMem(0xe21f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0xe221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21f));
        EXPECT(0x30, gbc.readMem(0xe220));
        // CB 30 030C
        gbc.setState(0x9242, 0xe729, 0x6bf0, 0xd7f1, 0xc22c, 0xc5b9, 0x0, 0x0);
        gbc.writeMem(0x9242, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe729, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9242));
        EXPECT(0x30, gbc.readMem(0x9243));
        // CB 30 030D
        gbc.setState(0x8c7e, 0x8a6f, 0xbcb0, 0x8a06, 0x6514, 0x5d9d, 0x0, 0x1);
        gbc.writeMem(0x8c7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8a6f, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7e));
        EXPECT(0x30, gbc.readMem(0x8c7f));
        // CB 30 030E
        gbc.setState(0x87e3, 0xab69, 0x2b20, 0x942c, 0x9c61, 0xbcf8, 0x0, 0x1);
        gbc.writeMem(0x87e3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xab69, gbc.sp());
        EXPECT(0x87e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e3));
        EXPECT(0x30, gbc.readMem(0x87e4));
        // CB 30 030F
        gbc.setState(0x4386, 0x953c, 0xb370, 0xe729, 0xd33f, 0xd237, 0x1, 0x1);
        gbc.writeMem(0x4386, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x953c, gbc.sp());
        EXPECT(0x4388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0310
        gbc.setState(0x2dd7, 0xa85b, 0x37a0, 0x9269, 0x62af, 0xbc6a, 0x0, 0x0);
        gbc.writeMem(0x2dd7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0x2dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0311
        gbc.setState(0x23cf, 0x7fcf, 0x1900, 0xcfe, 0xdbfb, 0x9cc0, 0x1, 0x1);
        gbc.writeMem(0x23cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7fcf, gbc.sp());
        EXPECT(0x23d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0313
        gbc.setState(0xdc69, 0x6daf, 0x7c40, 0x1ad, 0x7672, 0x2892, 0x1, 0x0);
        gbc.writeMem(0xdc69, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6daf, gbc.sp());
        EXPECT(0xdc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc69));
        EXPECT(0x30, gbc.readMem(0xdc6a));
        // CB 30 0314
        gbc.setState(0xade1, 0x9b3a, 0x5be0, 0x535d, 0xa183, 0xf8d6, 0x0, 0x0);
        gbc.writeMem(0xade1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9b3a, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade1));
        EXPECT(0x30, gbc.readMem(0xade2));
        // CB 30 0315
        gbc.setState(0xd039, 0x7fbd, 0x8a0, 0x36eb, 0x98c9, 0x478a, 0x0, 0x0);
        gbc.writeMem(0xd039, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7fbd, gbc.sp());
        EXPECT(0xd03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd039));
        EXPECT(0x30, gbc.readMem(0xd03a));
        // CB 30 0316
        gbc.setState(0xeb12, 0x9274, 0xcd20, 0x54f2, 0x91dd, 0xbe8b, 0x0, 0x1);
        gbc.writeMem(0xeb12, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9274, gbc.sp());
        EXPECT(0xeb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb12));
        EXPECT(0x30, gbc.readMem(0xeb13));
        // CB 30 0317
        gbc.setState(0x85b3, 0x512d, 0x7280, 0x6eaa, 0x8946, 0xe1d6, 0x1, 0x1);
        gbc.writeMem(0x85b3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0x85b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b3));
        EXPECT(0x30, gbc.readMem(0x85b4));
        // CB 30 0318
        gbc.setState(0x190a, 0x726a, 0xbe20, 0x623a, 0x985c, 0x2110, 0x0, 0x0);
        gbc.writeMem(0x190a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x726a, gbc.sp());
        EXPECT(0x190c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0319
        gbc.setState(0xb654, 0xc175, 0x1700, 0x9b53, 0x180d, 0x9342, 0x1, 0x0);
        gbc.writeMem(0xb654, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc175, gbc.sp());
        EXPECT(0xb656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb654));
        EXPECT(0x30, gbc.readMem(0xb655));
        // CB 30 031B
        gbc.setState(0x454, 0xf8bc, 0xc7e0, 0x524a, 0xcb85, 0xfd0c, 0x1, 0x1);
        gbc.writeMem(0x454, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf8bc, gbc.sp());
        EXPECT(0x456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 031C
        gbc.setState(0xe21f, 0xf939, 0xcd20, 0xf191, 0xfcea, 0x392, 0x0, 0x0);
        gbc.writeMem(0xe21f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0xe221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21f));
        EXPECT(0x30, gbc.readMem(0xe220));
        // CB 30 031D
        gbc.setState(0x57ab, 0xbd35, 0x7620, 0x5a2f, 0xd060, 0x7dbe, 0x1, 0x0);
        gbc.writeMem(0x57ab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0x57ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 031E
        gbc.setState(0x57ee, 0xa61c, 0xceb0, 0x1799, 0xa9f8, 0xde61, 0x1, 0x0);
        gbc.writeMem(0x57ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa61c, gbc.sp());
        EXPECT(0x57f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 031F
        gbc.setState(0xce37, 0xe0eb, 0x37b0, 0x7cbd, 0xa7, 0x7165, 0x1, 0x0);
        gbc.writeMem(0xce37, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe0eb, gbc.sp());
        EXPECT(0xce39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce37));
        EXPECT(0x30, gbc.readMem(0xce38));
        // CB 30 0320
        gbc.setState(0x7437, 0x2552, 0xf820, 0xd9e9, 0x47e7, 0xb799, 0x1, 0x1);
        gbc.writeMem(0x7437, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2552, gbc.sp());
        EXPECT(0x7439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0321
        gbc.setState(0xaeff, 0xba08, 0xfcb0, 0x4016, 0x87d4, 0x5e4e, 0x1, 0x1);
        gbc.writeMem(0xaeff, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xba08, gbc.sp());
        EXPECT(0xaf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeff));
        EXPECT(0x30, gbc.readMem(0xaf00));
        // CB 30 0323
        gbc.setState(0x2617, 0x8f52, 0x30b0, 0xfe38, 0xe0e6, 0x8204, 0x0, 0x1);
        gbc.writeMem(0x2617, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8f52, gbc.sp());
        EXPECT(0x2619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0324
        gbc.setState(0x939e, 0x82f3, 0x68e0, 0x7b86, 0xe69a, 0xa7aa, 0x1, 0x0);
        gbc.writeMem(0x939e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x82f3, gbc.sp());
        EXPECT(0x93a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939e));
        EXPECT(0x30, gbc.readMem(0x939f));
        // CB 30 0325
        gbc.setState(0xc284, 0x5cb8, 0xb600, 0x658, 0xfcca, 0xe662, 0x0, 0x1);
        gbc.writeMem(0xc284, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5cb8, gbc.sp());
        EXPECT(0xc286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc284));
        EXPECT(0x30, gbc.readMem(0xc285));
        // CB 30 0326
        gbc.setState(0xa4ab, 0x7fe1, 0x5e10, 0xceb8, 0x87de, 0xfb00, 0x0, 0x1);
        gbc.writeMem(0xa4ab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ab));
        EXPECT(0x30, gbc.readMem(0xa4ac));
        // CB 30 0327
        gbc.setState(0x1811, 0x68f7, 0xddf0, 0x7e81, 0xdcd7, 0xac07, 0x1, 0x0);
        gbc.writeMem(0x1811, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0x1813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0328
        gbc.setState(0x35a5, 0x79aa, 0x6720, 0x9f9d, 0x8246, 0x98f4, 0x0, 0x0);
        gbc.writeMem(0x35a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x79aa, gbc.sp());
        EXPECT(0x35a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0329
        gbc.setState(0x4363, 0x5d03, 0x16f0, 0x3799, 0x38e7, 0x7f0, 0x0, 0x0);
        gbc.writeMem(0x4363, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5d03, gbc.sp());
        EXPECT(0x4365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 032A
        gbc.setState(0x2e02, 0x4b8a, 0xc990, 0xf3d, 0x5cfa, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0x2e02, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4b8a, gbc.sp());
        EXPECT(0x2e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 032B
        gbc.setState(0x426a, 0x7383, 0xdc10, 0x311c, 0x9374, 0xf263, 0x1, 0x1);
        gbc.writeMem(0x426a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7383, gbc.sp());
        EXPECT(0x426c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 032C
        gbc.setState(0x1b4, 0x50d, 0x8490, 0x101, 0xc100, 0x45df, 0x1, 0x0);
        gbc.writeMem(0x1b4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x50d, gbc.sp());
        EXPECT(0x1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 032D
        gbc.setState(0x86a6, 0x5ad2, 0x9df0, 0xaa1b, 0x7e32, 0x54d0, 0x0, 0x0);
        gbc.writeMem(0x86a6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5ad2, gbc.sp());
        EXPECT(0x86a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a6));
        EXPECT(0x30, gbc.readMem(0x86a7));
        // CB 30 032E
        gbc.setState(0xe092, 0xf15e, 0x4a50, 0xc601, 0xba75, 0xe71e, 0x0, 0x0);
        gbc.writeMem(0xe092, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf15e, gbc.sp());
        EXPECT(0xe094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe092));
        EXPECT(0x30, gbc.readMem(0xe093));
        // CB 30 032F
        gbc.setState(0xd6aa, 0x37bf, 0xd550, 0x7288, 0x6bda, 0xae2f, 0x1, 0x0);
        gbc.writeMem(0xd6aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x37bf, gbc.sp());
        EXPECT(0xd6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6aa));
        EXPECT(0x30, gbc.readMem(0xd6ab));
        // CB 30 0330
        gbc.setState(0x5d4b, 0xe391, 0x570, 0x8b74, 0x83dd, 0x5839, 0x1, 0x1);
        gbc.writeMem(0x5d4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe391, gbc.sp());
        EXPECT(0x5d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0331
        gbc.setState(0x61c8, 0x16c9, 0x7240, 0xd553, 0x497e, 0x8435, 0x0, 0x1);
        gbc.writeMem(0x61c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0332
        gbc.setState(0x1b19, 0x464f, 0x9510, 0x5ab9, 0xd338, 0x4532, 0x0, 0x0);
        gbc.writeMem(0x1b19, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x464f, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0333
        gbc.setState(0xb67b, 0x823c, 0x9e80, 0xdab7, 0xd5a1, 0xaab5, 0x1, 0x1);
        gbc.writeMem(0xb67b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x823c, gbc.sp());
        EXPECT(0xb67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67b));
        EXPECT(0x30, gbc.readMem(0xb67c));
        // CB 30 0334
        gbc.setState(0xe7ef, 0x281b, 0xd4c0, 0x5f0c, 0x3ef1, 0xd61e, 0x0, 0x0);
        gbc.writeMem(0xe7ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x281b, gbc.sp());
        EXPECT(0xe7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ef));
        EXPECT(0x30, gbc.readMem(0xe7f0));
        // CB 30 0335
        gbc.setState(0x5bf3, 0x813e, 0x5190, 0x1ced, 0x4f09, 0x666, 0x1, 0x1);
        gbc.writeMem(0x5bf3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0336
        gbc.setState(0xd147, 0x4f50, 0xe50, 0x5933, 0xd227, 0xa5ab, 0x0, 0x0);
        gbc.writeMem(0xd147, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4f50, gbc.sp());
        EXPECT(0xd149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd147));
        EXPECT(0x30, gbc.readMem(0xd148));
        // CB 30 0337
        gbc.setState(0x7799, 0xed3, 0xb570, 0xef98, 0xea65, 0xc7f0, 0x1, 0x0);
        gbc.writeMem(0x7799, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xed3, gbc.sp());
        EXPECT(0x779b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0338
        gbc.setState(0xb10d, 0xbfde, 0xbd10, 0x562c, 0x404a, 0x83d1, 0x1, 0x1);
        gbc.writeMem(0xb10d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbfde, gbc.sp());
        EXPECT(0xb10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10d));
        EXPECT(0x30, gbc.readMem(0xb10e));
        // CB 30 0339
        gbc.setState(0xad90, 0x59ae, 0x6750, 0xb636, 0xdf6b, 0x517a, 0x0, 0x0);
        gbc.writeMem(0xad90, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x59ae, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad90));
        EXPECT(0x30, gbc.readMem(0xad91));
        // CB 30 033A
        gbc.setState(0x6978, 0x560b, 0xb500, 0x58c9, 0x6e53, 0xc95c, 0x1, 0x0);
        gbc.writeMem(0x6978, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x560b, gbc.sp());
        EXPECT(0x697a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 033B
        gbc.setState(0x318c, 0x24d2, 0xd8b0, 0x4170, 0x9176, 0x3e54, 0x1, 0x1);
        gbc.writeMem(0x318c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x24d2, gbc.sp());
        EXPECT(0x318e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 033C
        gbc.setState(0x9c61, 0x125b, 0xf9a0, 0xd5de, 0x9bc7, 0x86be, 0x0, 0x0);
        gbc.writeMem(0x9c61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x125b, gbc.sp());
        EXPECT(0x9c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c61));
        EXPECT(0x30, gbc.readMem(0x9c62));
        // CB 30 033D
        gbc.setState(0x24e9, 0x3dcb, 0x6f90, 0x9a65, 0xadd4, 0x760c, 0x0, 0x0);
        gbc.writeMem(0x24e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3dcb, gbc.sp());
        EXPECT(0x24eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 033E
        gbc.setState(0xd6b5, 0x160f, 0x1780, 0xf35d, 0xead5, 0xd34a, 0x0, 0x0);
        gbc.writeMem(0xd6b5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x160f, gbc.sp());
        EXPECT(0xd6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b5));
        EXPECT(0x30, gbc.readMem(0xd6b6));
        // CB 30 0340
        gbc.setState(0x5a7e, 0xddc1, 0x3260, 0xa7b, 0x1ed8, 0x7bd6, 0x0, 0x1);
        gbc.writeMem(0x5a7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xddc1, gbc.sp());
        EXPECT(0x5a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0341
        gbc.setState(0xb25, 0x369b, 0xf840, 0x6679, 0x280c, 0x5ed1, 0x0, 0x1);
        gbc.writeMem(0xb25, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0xb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0342
        gbc.setState(0x38c9, 0x55b4, 0xfac0, 0x455d, 0xf14d, 0xeed9, 0x0, 0x1);
        gbc.writeMem(0x38c9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x55b4, gbc.sp());
        EXPECT(0x38cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0343
        gbc.setState(0x516, 0xb450, 0xf2c0, 0x8da3, 0xd654, 0x4dc4, 0x0, 0x1);
        gbc.writeMem(0x516, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0x518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0346
        gbc.setState(0xdaae, 0x4964, 0x9cc0, 0xf25e, 0xd68c, 0xc5db, 0x0, 0x0);
        gbc.writeMem(0xdaae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4964, gbc.sp());
        EXPECT(0xdab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaae));
        EXPECT(0x30, gbc.readMem(0xdaaf));
        // CB 30 0347
        gbc.setState(0x7d07, 0x3f84, 0xe3c0, 0xc9db, 0x2184, 0xb6bc, 0x0, 0x0);
        gbc.writeMem(0x7d07, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3f84, gbc.sp());
        EXPECT(0x7d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0348
        gbc.setState(0x99ae, 0x7e9d, 0xd8a0, 0x7776, 0x9cb, 0x10d4, 0x0, 0x1);
        gbc.writeMem(0x99ae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7e9d, gbc.sp());
        EXPECT(0x99b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ae));
        EXPECT(0x30, gbc.readMem(0x99af));
        // CB 30 034A
        gbc.setState(0x3455, 0xbd91, 0x6630, 0x6ec0, 0x331f, 0x67ea, 0x1, 0x1);
        gbc.writeMem(0x3455, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbd91, gbc.sp());
        EXPECT(0x3457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 034B
        gbc.setState(0x7fe7, 0xa6ff, 0xb980, 0xe85d, 0xbde1, 0x7c6f, 0x0, 0x0);
        gbc.writeMem(0x7fe7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa6ff, gbc.sp());
        EXPECT(0x7fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 034C
        gbc.setState(0x1681, 0x7810, 0x48c0, 0xf552, 0x158b, 0x2ce7, 0x1, 0x1);
        gbc.writeMem(0x1681, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7810, gbc.sp());
        EXPECT(0x1683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 034D
        gbc.setState(0x4dc0, 0x75f5, 0x8510, 0xea77, 0x56f9, 0x90a8, 0x0, 0x0);
        gbc.writeMem(0x4dc0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x75f5, gbc.sp());
        EXPECT(0x4dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 034E
        gbc.setState(0x3b67, 0xc40e, 0x83a0, 0x48c0, 0x399f, 0xfb75, 0x0, 0x1);
        gbc.writeMem(0x3b67, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc40e, gbc.sp());
        EXPECT(0x3b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 034F
        gbc.setState(0x37f9, 0x49f4, 0xaea0, 0x88c0, 0x2665, 0xc5f4, 0x0, 0x0);
        gbc.writeMem(0x37f9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x49f4, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0350
        gbc.setState(0xe48d, 0xd856, 0x2230, 0x1a65, 0x5452, 0x7885, 0x1, 0x1);
        gbc.writeMem(0xe48d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0xe48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48d));
        EXPECT(0x30, gbc.readMem(0xe48e));
        // CB 30 0351
        gbc.setState(0xd9cf, 0x9e5, 0xcce0, 0x2a0b, 0x394d, 0xb9c1, 0x0, 0x1);
        gbc.writeMem(0xd9cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9e5, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cf));
        EXPECT(0x30, gbc.readMem(0xd9d0));
        // CB 30 0352
        gbc.setState(0x870f, 0xce91, 0xca0, 0xeb47, 0x5a18, 0x4de6, 0x0, 0x1);
        gbc.writeMem(0x870f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xce91, gbc.sp());
        EXPECT(0x8711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870f));
        EXPECT(0x30, gbc.readMem(0x8710));
        // CB 30 0353
        gbc.setState(0xcc4b, 0x6e40, 0x92b0, 0x3dc6, 0xd339, 0x6a8d, 0x0, 0x1);
        gbc.writeMem(0xcc4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6e40, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4b));
        EXPECT(0x30, gbc.readMem(0xcc4c));
        // CB 30 0354
        gbc.setState(0x6f02, 0x44e6, 0x8550, 0xb75, 0x576e, 0xf75d, 0x0, 0x0);
        gbc.writeMem(0x6f02, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x44e6, gbc.sp());
        EXPECT(0x6f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0355
        gbc.setState(0x61f3, 0xd659, 0x71b0, 0x1cb8, 0x35c8, 0x5b55, 0x1, 0x0);
        gbc.writeMem(0x61f3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd659, gbc.sp());
        EXPECT(0x61f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0356
        gbc.setState(0xa51e, 0xa859, 0x7720, 0xc617, 0xc85d, 0x473b, 0x0, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0xa520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51e));
        EXPECT(0x30, gbc.readMem(0xa51f));
        // CB 30 0358
        gbc.setState(0x9032, 0xa573, 0x9bb0, 0xc326, 0x7fea, 0xedab, 0x1, 0x0);
        gbc.writeMem(0x9032, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa573, gbc.sp());
        EXPECT(0x9034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9032));
        EXPECT(0x30, gbc.readMem(0x9033));
        // CB 30 0359
        gbc.setState(0x638, 0x6b29, 0x6f0, 0x8c78, 0x8102, 0x1e6c, 0x1, 0x1);
        gbc.writeMem(0x638, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6b29, gbc.sp());
        EXPECT(0x63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 035B
        gbc.setState(0x439a, 0x5104, 0x8240, 0x75f6, 0xb7c, 0xe98f, 0x0, 0x0);
        gbc.writeMem(0x439a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5104, gbc.sp());
        EXPECT(0x439c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 035C
        gbc.setState(0xe0b5, 0xfaa5, 0x2160, 0x24c7, 0x37cc, 0xcd4c, 0x1, 0x0);
        gbc.writeMem(0xe0b5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfaa5, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b5));
        EXPECT(0x30, gbc.readMem(0xe0b6));
        // CB 30 035D
        gbc.setState(0xa5a0, 0x4fca, 0x27e0, 0x2cd5, 0x104, 0x980a, 0x1, 0x0);
        gbc.writeMem(0xa5a0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4fca, gbc.sp());
        EXPECT(0xa5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a0));
        EXPECT(0x30, gbc.readMem(0xa5a1));
        // CB 30 035E
        gbc.setState(0x89d3, 0xbe4f, 0x21c0, 0x36f3, 0xc1f2, 0xfb68, 0x0, 0x0);
        gbc.writeMem(0x89d3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbe4f, gbc.sp());
        EXPECT(0x89d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d3));
        EXPECT(0x30, gbc.readMem(0x89d4));
        // CB 30 035F
        gbc.setState(0x2349, 0x8211, 0xe860, 0x8a45, 0x2a98, 0xce6d, 0x1, 0x1);
        gbc.writeMem(0x2349, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8211, gbc.sp());
        EXPECT(0x234b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0360
        gbc.setState(0x57dd, 0x6a76, 0xea20, 0xbbc7, 0x1dba, 0x3984, 0x1, 0x0);
        gbc.writeMem(0x57dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6a76, gbc.sp());
        EXPECT(0x57df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0361
        gbc.setState(0x1866, 0x53b3, 0x27f0, 0x6079, 0x893, 0x9eb4, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x53b3, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0363
        gbc.setState(0x2b8c, 0xba6f, 0x77d0, 0x2ada, 0xf6f9, 0x13e2, 0x1, 0x0);
        gbc.writeMem(0x2b8c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xba6f, gbc.sp());
        EXPECT(0x2b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0364
        gbc.setState(0x1070, 0x880c, 0x4e70, 0xb54c, 0xd7dc, 0x44fd, 0x0, 0x1);
        gbc.writeMem(0x1070, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x880c, gbc.sp());
        EXPECT(0x1072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0365
        gbc.setState(0xc055, 0x4556, 0xbb50, 0xca7a, 0xca44, 0x8803, 0x0, 0x0);
        gbc.writeMem(0xc055, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4556, gbc.sp());
        EXPECT(0xc057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc055));
        EXPECT(0x30, gbc.readMem(0xc056));
        // CB 30 0366
        gbc.setState(0x4fef, 0xbb76, 0xf280, 0x979a, 0x393c, 0x6cb9, 0x1, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbb76, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0367
        gbc.setState(0xc629, 0x862e, 0xf10, 0x61fe, 0xd07, 0x9715, 0x0, 0x1);
        gbc.writeMem(0xc629, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x862e, gbc.sp());
        EXPECT(0xc62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc629));
        EXPECT(0x30, gbc.readMem(0xc62a));
        // CB 30 0368
        gbc.setState(0xcb1b, 0xa34d, 0x690, 0x2bae, 0x986a, 0x417b, 0x0, 0x1);
        gbc.writeMem(0xcb1b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1b));
        EXPECT(0x30, gbc.readMem(0xcb1c));
        // CB 30 0369
        gbc.setState(0x5663, 0x843d, 0x1c10, 0x59cd, 0xf7e9, 0x785d, 0x0, 0x0);
        gbc.writeMem(0x5663, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x843d, gbc.sp());
        EXPECT(0x5665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 036A
        gbc.setState(0x4382, 0x3856, 0x7a90, 0xfcb5, 0xa542, 0xa8d0, 0x0, 0x1);
        gbc.writeMem(0x4382, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3856, gbc.sp());
        EXPECT(0x4384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 036B
        gbc.setState(0x99de, 0x6d9d, 0x7a60, 0x9af1, 0x2cf3, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x99de, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6d9d, gbc.sp());
        EXPECT(0x99e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99de));
        EXPECT(0x30, gbc.readMem(0x99df));
        // CB 30 036C
        gbc.setState(0x75c1, 0xd44b, 0xf910, 0x303c, 0x3904, 0xd1a7, 0x0, 0x1);
        gbc.writeMem(0x75c1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd44b, gbc.sp());
        EXPECT(0x75c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 036E
        gbc.setState(0xdbc5, 0xc8b1, 0x3b50, 0x610f, 0xc67e, 0x7c7c, 0x1, 0x1);
        gbc.writeMem(0xdbc5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc8b1, gbc.sp());
        EXPECT(0xdbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc5));
        EXPECT(0x30, gbc.readMem(0xdbc6));
        // CB 30 036F
        gbc.setState(0x7ca5, 0x27f6, 0x1be0, 0xa8d2, 0xe064, 0xcfeb, 0x1, 0x1);
        gbc.writeMem(0x7ca5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0x7ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0370
        gbc.setState(0xdb08, 0xb076, 0x3fa0, 0xbc42, 0x122a, 0x63a5, 0x0, 0x0);
        gbc.writeMem(0xdb08, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb076, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb08));
        EXPECT(0x30, gbc.readMem(0xdb09));
        // CB 30 0371
        gbc.setState(0xd71e, 0x20a8, 0xf110, 0x19d5, 0xc253, 0x9b8e, 0x0, 0x1);
        gbc.writeMem(0xd71e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x20a8, gbc.sp());
        EXPECT(0xd720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71e));
        EXPECT(0x30, gbc.readMem(0xd71f));
        // CB 30 0372
        gbc.setState(0xa3fa, 0xef71, 0xb360, 0xca0e, 0xd6ef, 0xc50e, 0x1, 0x1);
        gbc.writeMem(0xa3fa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xef71, gbc.sp());
        EXPECT(0xa3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fa));
        EXPECT(0x30, gbc.readMem(0xa3fb));
        // CB 30 0373
        gbc.setState(0x1441, 0x41e, 0xdec0, 0xda0, 0xf606, 0x9c24, 0x1, 0x1);
        gbc.writeMem(0x1441, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x41e, gbc.sp());
        EXPECT(0x1443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0374
        gbc.setState(0x4b1d, 0x2d01, 0xcd20, 0xb5bc, 0xcf58, 0x18ce, 0x0, 0x1);
        gbc.writeMem(0x4b1d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2d01, gbc.sp());
        EXPECT(0x4b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0375
        gbc.setState(0x55d4, 0xa579, 0x6900, 0xad1e, 0xc2e6, 0xefdb, 0x0, 0x0);
        gbc.writeMem(0x55d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa579, gbc.sp());
        EXPECT(0x55d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0376
        gbc.setState(0x7a91, 0x97e1, 0x610, 0x5430, 0xdc82, 0x8a46, 0x1, 0x1);
        gbc.writeMem(0x7a91, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x97e1, gbc.sp());
        EXPECT(0x7a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0378
        gbc.setState(0x592, 0x5155, 0x3900, 0x22db, 0xd57b, 0x7401, 0x0, 0x1);
        gbc.writeMem(0x592, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0379
        gbc.setState(0x8eac, 0x9fe2, 0x14a0, 0x106, 0x5205, 0x1bdc, 0x1, 0x0);
        gbc.writeMem(0x8eac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9fe2, gbc.sp());
        EXPECT(0x8eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eac));
        EXPECT(0x30, gbc.readMem(0x8ead));
        // CB 30 037A
        gbc.setState(0x61f4, 0x8217, 0x8290, 0x4eb0, 0x50d4, 0x15fa, 0x1, 0x0);
        gbc.writeMem(0x61f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8217, gbc.sp());
        EXPECT(0x61f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 037B
        gbc.setState(0xd4bc, 0xb918, 0x7e60, 0xbfe7, 0x8fde, 0x2bb8, 0x1, 0x0);
        gbc.writeMem(0xd4bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb918, gbc.sp());
        EXPECT(0xd4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4bc));
        EXPECT(0x30, gbc.readMem(0xd4bd));
        // CB 30 037C
        gbc.setState(0x2374, 0xc09b, 0x2130, 0x4f21, 0x9aad, 0xa144, 0x0, 0x1);
        gbc.writeMem(0x2374, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc09b, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 037E
        gbc.setState(0xa100, 0xbe03, 0xbf20, 0xf3b3, 0xb113, 0x3863, 0x0, 0x0);
        gbc.writeMem(0xa100, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbe03, gbc.sp());
        EXPECT(0xa102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa100));
        EXPECT(0x30, gbc.readMem(0xa101));
        // CB 30 037F
        gbc.setState(0x3d53, 0x2a2c, 0x4a20, 0x34b5, 0x9ddd, 0x6cf0, 0x1, 0x1);
        gbc.writeMem(0x3d53, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2a2c, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0380
        gbc.setState(0xa642, 0xcc1c, 0x44d0, 0xdad, 0x804b, 0x4fb9, 0x0, 0x0);
        gbc.writeMem(0xa642, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcc1c, gbc.sp());
        EXPECT(0xa644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa642));
        EXPECT(0x30, gbc.readMem(0xa643));
        // CB 30 0381
        gbc.setState(0x9f5a, 0xc522, 0xfb40, 0xde85, 0xa6b0, 0x7df3, 0x0, 0x1);
        gbc.writeMem(0x9f5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc522, gbc.sp());
        EXPECT(0x9f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5a));
        EXPECT(0x30, gbc.readMem(0x9f5b));
        // CB 30 0382
        gbc.setState(0xa423, 0xd8b6, 0x8ff0, 0x1aa5, 0x5379, 0x4adf, 0x1, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd8b6, gbc.sp());
        EXPECT(0xa425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa423));
        EXPECT(0x30, gbc.readMem(0xa424));
        // CB 30 0383
        gbc.setState(0x32c4, 0x5aed, 0x3bc0, 0xa573, 0xdce2, 0xf7e, 0x0, 0x0);
        gbc.writeMem(0x32c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5aed, gbc.sp());
        EXPECT(0x32c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0384
        gbc.setState(0xcd92, 0xe913, 0xb650, 0xafe7, 0x7aa4, 0x93f1, 0x0, 0x0);
        gbc.writeMem(0xcd92, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe913, gbc.sp());
        EXPECT(0xcd94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd92));
        EXPECT(0x30, gbc.readMem(0xcd93));
        // CB 30 0385
        gbc.setState(0x7981, 0x56f6, 0xf0, 0x444f, 0xe8c2, 0x3381, 0x1, 0x0);
        gbc.writeMem(0x7981, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x56f6, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0386
        gbc.setState(0x686e, 0x33a8, 0xe200, 0x4a66, 0x535c, 0xea86, 0x1, 0x1);
        gbc.writeMem(0x686e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x33a8, gbc.sp());
        EXPECT(0x6870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0387
        gbc.setState(0xab5c, 0x4117, 0xaf20, 0x9dc9, 0xb65f, 0x5c86, 0x1, 0x1);
        gbc.writeMem(0xab5c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4117, gbc.sp());
        EXPECT(0xab5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5c));
        EXPECT(0x30, gbc.readMem(0xab5d));
        // CB 30 0388
        gbc.setState(0xac65, 0x13ba, 0xb330, 0x52bc, 0xefc, 0x9423, 0x1, 0x1);
        gbc.writeMem(0xac65, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x13ba, gbc.sp());
        EXPECT(0xac67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac65));
        EXPECT(0x30, gbc.readMem(0xac66));
        // CB 30 0389
        gbc.setState(0x5c6f, 0x8abd, 0xc210, 0xc6b, 0x44, 0x8370, 0x1, 0x1);
        gbc.writeMem(0x5c6f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 038A
        gbc.setState(0x8f8f, 0x39b, 0xc530, 0x237d, 0xe097, 0x5688, 0x1, 0x1);
        gbc.writeMem(0x8f8f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x39b, gbc.sp());
        EXPECT(0x8f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8f));
        EXPECT(0x30, gbc.readMem(0x8f90));
        // CB 30 038B
        gbc.setState(0xdb40, 0xa70a, 0xe950, 0x3919, 0xf0da, 0xa07e, 0x1, 0x1);
        gbc.writeMem(0xdb40, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa70a, gbc.sp());
        EXPECT(0xdb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb40));
        EXPECT(0x30, gbc.readMem(0xdb41));
        // CB 30 038C
        gbc.setState(0xd5a0, 0x1ad1, 0xd8d0, 0x1c84, 0xa82d, 0x99db, 0x0, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1ad1, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a0));
        EXPECT(0x30, gbc.readMem(0xd5a1));
        // CB 30 038D
        gbc.setState(0x4379, 0xf4b, 0xb770, 0x909f, 0xda69, 0x5688, 0x0, 0x1);
        gbc.writeMem(0x4379, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf4b, gbc.sp());
        EXPECT(0x437b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 038E
        gbc.setState(0x3ed0, 0x804f, 0x8e50, 0x1812, 0x9421, 0x734f, 0x0, 0x0);
        gbc.writeMem(0x3ed0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x804f, gbc.sp());
        EXPECT(0x3ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 038F
        gbc.setState(0x8d48, 0xcd96, 0xbce0, 0x8eb5, 0xe0e9, 0x41bd, 0x0, 0x0);
        gbc.writeMem(0x8d48, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcd96, gbc.sp());
        EXPECT(0x8d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d48));
        EXPECT(0x30, gbc.readMem(0x8d49));
        // CB 30 0390
        gbc.setState(0x2d8, 0xf3bc, 0x73f0, 0x9d32, 0x85d, 0x52cd, 0x1, 0x1);
        gbc.writeMem(0x2d8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf3bc, gbc.sp());
        EXPECT(0x2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0391
        gbc.setState(0x763d, 0x2a1e, 0xf240, 0x9f41, 0x2edb, 0xa3e, 0x0, 0x0);
        gbc.writeMem(0x763d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2a1e, gbc.sp());
        EXPECT(0x763f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0392
        gbc.setState(0x388a, 0x5587, 0x9750, 0xbee1, 0x5568, 0x9137, 0x1, 0x0);
        gbc.writeMem(0x388a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5587, gbc.sp());
        EXPECT(0x388c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 0393
        gbc.setState(0x95a1, 0x2d36, 0xfa10, 0x9bd3, 0xa237, 0xecec, 0x0, 0x0);
        gbc.writeMem(0x95a1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2d36, gbc.sp());
        EXPECT(0x95a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a1));
        EXPECT(0x30, gbc.readMem(0x95a2));
        // CB 30 0394
        gbc.setState(0x88f9, 0x7f1f, 0xe270, 0x1636, 0xfeb, 0x99b8, 0x1, 0x0);
        gbc.writeMem(0x88f9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7f1f, gbc.sp());
        EXPECT(0x88fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f9));
        EXPECT(0x30, gbc.readMem(0x88fa));
        // CB 30 0395
        gbc.setState(0xe89f, 0x8ee4, 0xa610, 0xe411, 0x436d, 0x7de5, 0x0, 0x1);
        gbc.writeMem(0xe89f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8ee4, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89f));
        EXPECT(0x30, gbc.readMem(0xe8a0));
        // CB 30 0398
        gbc.setState(0xe4f3, 0xf982, 0x29e0, 0xd736, 0x6789, 0x1df3, 0x0, 0x0);
        gbc.writeMem(0xe4f3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf982, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f3));
        EXPECT(0x30, gbc.readMem(0xe4f4));
        // CB 30 0399
        gbc.setState(0xdc2e, 0xe0b2, 0x7bc0, 0xf198, 0xbedb, 0xf495, 0x0, 0x1);
        gbc.writeMem(0xdc2e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0xdc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2e));
        EXPECT(0x30, gbc.readMem(0xdc2f));
        // CB 30 039A
        gbc.setState(0xd4c9, 0x1b4e, 0x580, 0x2d1d, 0x57fc, 0xa136, 0x0, 0x0);
        gbc.writeMem(0xd4c9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0xd4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c9));
        EXPECT(0x30, gbc.readMem(0xd4ca));
        // CB 30 039B
        gbc.setState(0xd7ea, 0xfc6e, 0x7470, 0xab78, 0x63c5, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0xd7ea, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0xd7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ea));
        EXPECT(0x30, gbc.readMem(0xd7eb));
        // CB 30 039C
        gbc.setState(0x2b0b, 0x6661, 0xcca0, 0xecd9, 0x3387, 0x93fb, 0x1, 0x0);
        gbc.writeMem(0x2b0b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6661, gbc.sp());
        EXPECT(0x2b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 039D
        gbc.setState(0xef54, 0xc94, 0x2de0, 0x899b, 0x8229, 0xb744, 0x1, 0x0);
        gbc.writeMem(0xef54, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc94, gbc.sp());
        EXPECT(0xef56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef54));
        EXPECT(0x30, gbc.readMem(0xef55));
        // CB 30 039E
        gbc.setState(0xc1d9, 0x9d00, 0x37b0, 0xd5f, 0xf6ec, 0x23b, 0x1, 0x1);
        gbc.writeMem(0xc1d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9d00, gbc.sp());
        EXPECT(0xc1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d9));
        EXPECT(0x30, gbc.readMem(0xc1da));
        // CB 30 039F
        gbc.setState(0x157d, 0x2e1b, 0x54a0, 0xc026, 0x9b11, 0x3bc7, 0x1, 0x1);
        gbc.writeMem(0x157d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2e1b, gbc.sp());
        EXPECT(0x157f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03A0
        gbc.setState(0x90cc, 0xafc1, 0xb2d0, 0x8b17, 0x610d, 0xd472, 0x0, 0x1);
        gbc.writeMem(0x90cc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xafc1, gbc.sp());
        EXPECT(0x90ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cc));
        EXPECT(0x30, gbc.readMem(0x90cd));
        // CB 30 03A1
        gbc.setState(0x571f, 0xa07a, 0x7380, 0x48c, 0x4f90, 0xafd7, 0x0, 0x1);
        gbc.writeMem(0x571f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa07a, gbc.sp());
        EXPECT(0x5721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03A2
        gbc.setState(0xebbe, 0xfd89, 0xb940, 0x8be3, 0x56a8, 0x5edf, 0x0, 0x1);
        gbc.writeMem(0xebbe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfd89, gbc.sp());
        EXPECT(0xebc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbe));
        EXPECT(0x30, gbc.readMem(0xebbf));
        // CB 30 03A3
        gbc.setState(0xa38, 0xd11e, 0x7770, 0xf0f9, 0x7fb, 0xb97a, 0x0, 0x0);
        gbc.writeMem(0xa38, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd11e, gbc.sp());
        EXPECT(0xa3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03A6
        gbc.setState(0x7b3e, 0x1dfe, 0xa1f0, 0xe3b, 0x4ee4, 0x8a72, 0x0, 0x1);
        gbc.writeMem(0x7b3e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1dfe, gbc.sp());
        EXPECT(0x7b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03A7
        gbc.setState(0xc148, 0xc52b, 0x400, 0x1f1, 0x47d7, 0xa412, 0x0, 0x0);
        gbc.writeMem(0xc148, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc52b, gbc.sp());
        EXPECT(0xc14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc148));
        EXPECT(0x30, gbc.readMem(0xc149));
        // CB 30 03A8
        gbc.setState(0x103c, 0xa07, 0xaac0, 0xe07b, 0xe69, 0x75a1, 0x1, 0x0);
        gbc.writeMem(0x103c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa07, gbc.sp());
        EXPECT(0x103e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03A9
        gbc.setState(0x7a2e, 0xb357, 0x890, 0xbff4, 0x506a, 0x6e41, 0x1, 0x1);
        gbc.writeMem(0x7a2e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb357, gbc.sp());
        EXPECT(0x7a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03AA
        gbc.setState(0x7cc6, 0xb95d, 0xa2d0, 0x34de, 0x3ee0, 0x93b0, 0x1, 0x0);
        gbc.writeMem(0x7cc6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0x7cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03AB
        gbc.setState(0xa8d5, 0xd639, 0xaf30, 0xd1b3, 0x4bba, 0xe545, 0x0, 0x0);
        gbc.writeMem(0xa8d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd639, gbc.sp());
        EXPECT(0xa8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d5));
        EXPECT(0x30, gbc.readMem(0xa8d6));
        // CB 30 03AC
        gbc.setState(0xac13, 0x1e2f, 0xa10, 0x130f, 0x4288, 0x20ce, 0x0, 0x1);
        gbc.writeMem(0xac13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1e2f, gbc.sp());
        EXPECT(0xac15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac13));
        EXPECT(0x30, gbc.readMem(0xac14));
        // CB 30 03AD
        gbc.setState(0x658e, 0xb5b, 0xc220, 0xd2fe, 0x9a82, 0x201d, 0x1, 0x1);
        gbc.writeMem(0x658e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb5b, gbc.sp());
        EXPECT(0x6590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03AE
        gbc.setState(0xe01d, 0x8897, 0x2b60, 0x7f4, 0x586e, 0x392d, 0x0, 0x1);
        gbc.writeMem(0xe01d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8897, gbc.sp());
        EXPECT(0xe01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01d));
        EXPECT(0x30, gbc.readMem(0xe01e));
        // CB 30 03B0
        gbc.setState(0xe94e, 0xefd9, 0xf9b0, 0x143a, 0x43de, 0xf4af, 0x0, 0x1);
        gbc.writeMem(0xe94e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xefd9, gbc.sp());
        EXPECT(0xe950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94e));
        EXPECT(0x30, gbc.readMem(0xe94f));
        // CB 30 03B1
        gbc.setState(0xd496, 0xa018, 0x6740, 0x76e, 0x2b02, 0xdd00, 0x1, 0x0);
        gbc.writeMem(0xd496, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa018, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd496));
        EXPECT(0x30, gbc.readMem(0xd497));
        // CB 30 03B2
        gbc.setState(0x7c69, 0xb5fd, 0x3490, 0xa674, 0x950d, 0x6d19, 0x0, 0x0);
        gbc.writeMem(0x7c69, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb5fd, gbc.sp());
        EXPECT(0x7c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03B3
        gbc.setState(0xb3d5, 0xc73d, 0xc840, 0xd60a, 0x341f, 0x9d09, 0x1, 0x0);
        gbc.writeMem(0xb3d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc73d, gbc.sp());
        EXPECT(0xb3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d5));
        EXPECT(0x30, gbc.readMem(0xb3d6));
        // CB 30 03B4
        gbc.setState(0x2cdb, 0x4634, 0x8300, 0xe2fa, 0xef71, 0x1f9d, 0x0, 0x1);
        gbc.writeMem(0x2cdb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4634, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03B5
        gbc.setState(0xf89, 0xa081, 0xee0, 0xe05e, 0xca5, 0xad60, 0x1, 0x0);
        gbc.writeMem(0xf89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa081, gbc.sp());
        EXPECT(0xf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03B6
        gbc.setState(0x73c7, 0x41df, 0x880, 0x4a7d, 0x8d55, 0x6cb4, 0x0, 0x1);
        gbc.writeMem(0x73c7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x41df, gbc.sp());
        EXPECT(0x73c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03B7
        gbc.setState(0x2b58, 0x18c8, 0x1ff0, 0x1a38, 0x9058, 0xacb3, 0x1, 0x0);
        gbc.writeMem(0x2b58, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x18c8, gbc.sp());
        EXPECT(0x2b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03B8
        gbc.setState(0x31b6, 0xbcbb, 0xafa0, 0xdccd, 0xf0fd, 0x7bc3, 0x1, 0x1);
        gbc.writeMem(0x31b6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbcbb, gbc.sp());
        EXPECT(0x31b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03B9
        gbc.setState(0x4f14, 0xb885, 0x1580, 0xc8e5, 0x7046, 0x7a9b, 0x0, 0x0);
        gbc.writeMem(0x4f14, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb885, gbc.sp());
        EXPECT(0x4f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03BA
        gbc.setState(0x4278, 0x59fd, 0x5740, 0xf8ab, 0x6, 0x30dc, 0x0, 0x1);
        gbc.writeMem(0x4278, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x59fd, gbc.sp());
        EXPECT(0x427a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03BB
        gbc.setState(0x5745, 0xbfa5, 0x1180, 0x811b, 0xe3c2, 0xf719, 0x1, 0x0);
        gbc.writeMem(0x5745, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbfa5, gbc.sp());
        EXPECT(0x5747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03BC
        gbc.setState(0x1910, 0x1452, 0x5f00, 0xc7bf, 0xa007, 0x6e5, 0x0, 0x0);
        gbc.writeMem(0x1910, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1452, gbc.sp());
        EXPECT(0x1912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03BD
        gbc.setState(0xd302, 0x3d, 0x3d90, 0x8a0e, 0x3f0e, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0xd302, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3d, gbc.sp());
        EXPECT(0xd304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd302));
        EXPECT(0x30, gbc.readMem(0xd303));
        // CB 30 03BE
        gbc.setState(0x1c86, 0xfac0, 0x5490, 0x1196, 0x25e5, 0x6bc2, 0x0, 0x0);
        gbc.writeMem(0x1c86, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfac0, gbc.sp());
        EXPECT(0x1c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03BF
        gbc.setState(0x6634, 0xc2d, 0xcba0, 0x9077, 0x7410, 0x7592, 0x1, 0x0);
        gbc.writeMem(0x6634, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc2d, gbc.sp());
        EXPECT(0x6636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03C0
        gbc.setState(0x2c58, 0x63f3, 0xcc90, 0xc4b7, 0x866c, 0x442, 0x1, 0x0);
        gbc.writeMem(0x2c58, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x63f3, gbc.sp());
        EXPECT(0x2c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03C1
        gbc.setState(0x9981, 0x94b8, 0xf220, 0xb90d, 0x3bc8, 0xdd57, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x94b8, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9981));
        EXPECT(0x30, gbc.readMem(0x9982));
        // CB 30 03C2
        gbc.setState(0x1922, 0xf628, 0x5250, 0xd90b, 0x68cf, 0xefc9, 0x1, 0x0);
        gbc.writeMem(0x1922, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0x1924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03C3
        gbc.setState(0xbd33, 0x1d78, 0xcf50, 0xc9ff, 0x994e, 0x787c, 0x0, 0x0);
        gbc.writeMem(0xbd33, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1d78, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd33));
        EXPECT(0x30, gbc.readMem(0xbd34));
        // CB 30 03C4
        gbc.setState(0x106d, 0xbc05, 0x27c0, 0x8686, 0xb3b7, 0x927b, 0x1, 0x0);
        gbc.writeMem(0x106d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbc05, gbc.sp());
        EXPECT(0x106f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03C5
        gbc.setState(0xdf11, 0x54a6, 0x6840, 0x54a6, 0x724c, 0xd5eb, 0x0, 0x0);
        gbc.writeMem(0xdf11, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x54a6, gbc.sp());
        EXPECT(0xdf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf11));
        EXPECT(0x30, gbc.readMem(0xdf12));
        // CB 30 03C6
        gbc.setState(0xa2b0, 0x1ff8, 0x1550, 0x975a, 0x3095, 0x1e56, 0x1, 0x0);
        gbc.writeMem(0xa2b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1ff8, gbc.sp());
        EXPECT(0xa2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b0));
        EXPECT(0x30, gbc.readMem(0xa2b1));
        // CB 30 03C8
        gbc.setState(0x58b2, 0xa66a, 0x4d90, 0xa29d, 0x5a8, 0xb780, 0x1, 0x1);
        gbc.writeMem(0x58b2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa66a, gbc.sp());
        EXPECT(0x58b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03C9
        gbc.setState(0x4f33, 0xb331, 0x5040, 0xcbc, 0xefb0, 0xd673, 0x1, 0x1);
        gbc.writeMem(0x4f33, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb331, gbc.sp());
        EXPECT(0x4f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03CA
        gbc.setState(0xc9a, 0x85af, 0xc020, 0x8c63, 0x16ba, 0x88cb, 0x0, 0x1);
        gbc.writeMem(0xc9a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x85af, gbc.sp());
        EXPECT(0xc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03CB
        gbc.setState(0x9058, 0xf5cc, 0x6350, 0x23bc, 0x8850, 0xc98, 0x0, 0x1);
        gbc.writeMem(0x9058, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf5cc, gbc.sp());
        EXPECT(0x905a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9058));
        EXPECT(0x30, gbc.readMem(0x9059));
        // CB 30 03CC
        gbc.setState(0xce22, 0x6e8c, 0x5810, 0x2463, 0xa28f, 0x5688, 0x1, 0x0);
        gbc.writeMem(0xce22, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6e8c, gbc.sp());
        EXPECT(0xce24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce22));
        EXPECT(0x30, gbc.readMem(0xce23));
        // CB 30 03CD
        gbc.setState(0x482b, 0xb82b, 0xf610, 0xaf5d, 0xac2e, 0x3cd2, 0x1, 0x1);
        gbc.writeMem(0x482b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb82b, gbc.sp());
        EXPECT(0x482d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03CE
        gbc.setState(0x445e, 0x594c, 0xf000, 0x4bce, 0x3b71, 0xe0de, 0x1, 0x1);
        gbc.writeMem(0x445e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x594c, gbc.sp());
        EXPECT(0x4460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03CF
        gbc.setState(0x4f61, 0x5b25, 0xe7a0, 0x79ae, 0x4d97, 0xc086, 0x1, 0x1);
        gbc.writeMem(0x4f61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5b25, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03D0
        gbc.setState(0xadf3, 0x1380, 0x8590, 0xc9f4, 0xcbce, 0x6de6, 0x0, 0x0);
        gbc.writeMem(0xadf3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1380, gbc.sp());
        EXPECT(0xadf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf3));
        EXPECT(0x30, gbc.readMem(0xadf4));
        // CB 30 03D1
        gbc.setState(0xcada, 0x4e40, 0x7180, 0x1ae3, 0x2ec3, 0x9b9e, 0x1, 0x0);
        gbc.writeMem(0xcada, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4e40, gbc.sp());
        EXPECT(0xcadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcada));
        EXPECT(0x30, gbc.readMem(0xcadb));
        // CB 30 03D4
        gbc.setState(0xcb4c, 0x4018, 0xa420, 0xed10, 0x7666, 0xc9b3, 0x1, 0x1);
        gbc.writeMem(0xcb4c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4018, gbc.sp());
        EXPECT(0xcb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4c));
        EXPECT(0x30, gbc.readMem(0xcb4d));
        // CB 30 03D6
        gbc.setState(0xc5d5, 0x9625, 0xe590, 0xd55a, 0x5c96, 0xdf27, 0x0, 0x0);
        gbc.writeMem(0xc5d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9625, gbc.sp());
        EXPECT(0xc5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d5));
        EXPECT(0x30, gbc.readMem(0xc5d6));
        // CB 30 03D7
        gbc.setState(0xd5a, 0x6fbb, 0x77f0, 0xcc22, 0x8f5b, 0xab68, 0x1, 0x0);
        gbc.writeMem(0xd5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0xd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03D8
        gbc.setState(0x7d95, 0xd41a, 0x9560, 0x5f0e, 0xb444, 0x47f8, 0x1, 0x1);
        gbc.writeMem(0x7d95, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0x7d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03D9
        gbc.setState(0x16df, 0x1010, 0x6840, 0xae5, 0x2780, 0x8002, 0x1, 0x1);
        gbc.writeMem(0x16df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1010, gbc.sp());
        EXPECT(0x16e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03DA
        gbc.setState(0xc0ec, 0x6699, 0xeba0, 0x6b85, 0xbbd8, 0x31a4, 0x0, 0x0);
        gbc.writeMem(0xc0ec, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0xc0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ec));
        EXPECT(0x30, gbc.readMem(0xc0ed));
        // CB 30 03DB
        gbc.setState(0x254a, 0x9bc1, 0x4680, 0xa113, 0x831e, 0xac98, 0x0, 0x1);
        gbc.writeMem(0x254a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9bc1, gbc.sp());
        EXPECT(0x254c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03DC
        gbc.setState(0x37d7, 0x10a5, 0xc810, 0xd527, 0x1022, 0x644e, 0x0, 0x1);
        gbc.writeMem(0x37d7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x10a5, gbc.sp());
        EXPECT(0x37d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03DF
        gbc.setState(0x4d10, 0x404, 0xabd0, 0x8fdc, 0x9c9f, 0x3196, 0x1, 0x0);
        gbc.writeMem(0x4d10, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x404, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03E0
        gbc.setState(0x1baa, 0xdca4, 0x120, 0x74a, 0x5f45, 0x21f2, 0x1, 0x1);
        gbc.writeMem(0x1baa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdca4, gbc.sp());
        EXPECT(0x1bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03E1
        gbc.setState(0x1a34, 0xf655, 0x8400, 0x23c0, 0x7ab1, 0x7269, 0x1, 0x1);
        gbc.writeMem(0x1a34, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf655, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03E2
        gbc.setState(0xb517, 0xbed7, 0xa80, 0xe2af, 0x8773, 0xc75e, 0x0, 0x0);
        gbc.writeMem(0xb517, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbed7, gbc.sp());
        EXPECT(0xb519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb517));
        EXPECT(0x30, gbc.readMem(0xb518));
        // CB 30 03E3
        gbc.setState(0x62db, 0x755e, 0xbaa0, 0x5d3f, 0x9c93, 0xe6a1, 0x0, 0x1);
        gbc.writeMem(0x62db, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x755e, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03E4
        gbc.setState(0x773e, 0x91f4, 0x3c30, 0x9ff3, 0x77d1, 0xca98, 0x0, 0x0);
        gbc.writeMem(0x773e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x91f4, gbc.sp());
        EXPECT(0x7740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03E5
        gbc.setState(0x77be, 0x8941, 0x8be0, 0x4631, 0x5363, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0x77be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 30 03E6
        gbc.setState(0x4da, 0x23fa, 0xc870, 0x7626, 0xa5d2, 0xcd00, 0x0, 0x1);
        gbc.writeMem(0x4da, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x23fa, gbc.sp());
        EXPECT(0x4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
