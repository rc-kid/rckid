    TEST(gbcemu, opcode_cb_30) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 30 0000
        gbc.setState(0x3066, 0x6fb5, 0xddf0, 0x1bf5, 0x3565, 0x414d, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6fb5);
        EXPECT(gbc.pc(), 0x3068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0001
        gbc.setState(0x8ee2, 0xe495, 0x10f0, 0x7396, 0xbd49, 0x926a, 0x1, 0x0);
        gbc.writeMem(0x8ee2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe495);
        EXPECT(gbc.pc(), 0x8ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee2), 0xcb);
        EXPECT(gbc.readMem(0x8ee3), 0x30);
        // CB 30 0002
        gbc.setState(0xb286, 0x7397, 0x3870, 0x8e44, 0xcb0, 0xd83, 0x1, 0x1);
        gbc.writeMem(0xb286, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7397);
        EXPECT(gbc.pc(), 0xb288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb286), 0xcb);
        EXPECT(gbc.readMem(0xb287), 0x30);
        // CB 30 0003
        gbc.setState(0xb4e9, 0xf5e1, 0xab40, 0xbf5b, 0x548b, 0xe2a0, 0x0, 0x1);
        gbc.writeMem(0xb4e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf5e1);
        EXPECT(gbc.pc(), 0xb4eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e9), 0xcb);
        EXPECT(gbc.readMem(0xb4ea), 0x30);
        // CB 30 0004
        gbc.setState(0xe4e7, 0x4a9b, 0x3580, 0x4d64, 0x9534, 0x7c52, 0x1, 0x0);
        gbc.writeMem(0xe4e7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4a9b);
        EXPECT(gbc.pc(), 0xe4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e7), 0xcb);
        EXPECT(gbc.readMem(0xe4e8), 0x30);
        // CB 30 0007
        gbc.setState(0x7250, 0x992, 0xec20, 0x2075, 0x8d1f, 0x6e69, 0x0, 0x0);
        gbc.writeMem(0x7250, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x992);
        EXPECT(gbc.pc(), 0x7252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0008
        gbc.setState(0x43a3, 0xc0cb, 0x8300, 0x9971, 0x9577, 0xea0c, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc0cb);
        EXPECT(gbc.pc(), 0x43a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0009
        gbc.setState(0xeee, 0x2e14, 0xfa60, 0xce91, 0xfa05, 0x7bef, 0x1, 0x0);
        gbc.writeMem(0xeee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2e14);
        EXPECT(gbc.pc(), 0xef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 000A
        gbc.setState(0xec82, 0xac20, 0x4380, 0x7bcb, 0x94b4, 0x11b6, 0x0, 0x0);
        gbc.writeMem(0xec82, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xac20);
        EXPECT(gbc.pc(), 0xec84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec82), 0xcb);
        EXPECT(gbc.readMem(0xec83), 0x30);
        // CB 30 000B
        gbc.setState(0xa217, 0xa6dd, 0xe60, 0x3846, 0x18d8, 0xf6a1, 0x1, 0x0);
        gbc.writeMem(0xa217, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa6dd);
        EXPECT(gbc.pc(), 0xa219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa217), 0xcb);
        EXPECT(gbc.readMem(0xa218), 0x30);
        // CB 30 000C
        gbc.setState(0xba10, 0xd9b4, 0x6460, 0x4bfa, 0xaf75, 0xc618, 0x1, 0x1);
        gbc.writeMem(0xba10, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd9b4);
        EXPECT(gbc.pc(), 0xba12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba10), 0xcb);
        EXPECT(gbc.readMem(0xba11), 0x30);
        // CB 30 000D
        gbc.setState(0x8d61, 0xf789, 0x3e40, 0x7338, 0x38d7, 0xaefb, 0x0, 0x1);
        gbc.writeMem(0x8d61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf789);
        EXPECT(gbc.pc(), 0x8d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d61), 0xcb);
        EXPECT(gbc.readMem(0x8d62), 0x30);
        // CB 30 000E
        gbc.setState(0xcb95, 0xb5ec, 0xeb00, 0x80b2, 0xd3b2, 0xe3c1, 0x1, 0x0);
        gbc.writeMem(0xcb95, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb5ec);
        EXPECT(gbc.pc(), 0xcb97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb95), 0xcb);
        EXPECT(gbc.readMem(0xcb96), 0x30);
        // CB 30 000F
        gbc.setState(0x7de6, 0x3ed4, 0x6020, 0xd6d9, 0xe6b3, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0x7de6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3ed4);
        EXPECT(gbc.pc(), 0x7de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0010
        gbc.setState(0xb47d, 0x8cf2, 0x21e0, 0xc456, 0x65b9, 0x5c78, 0x1, 0x0);
        gbc.writeMem(0xb47d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8cf2);
        EXPECT(gbc.pc(), 0xb47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47d), 0xcb);
        EXPECT(gbc.readMem(0xb47e), 0x30);
        // CB 30 0011
        gbc.setState(0xa551, 0x385c, 0x5cb0, 0x3f44, 0x4642, 0xdfef, 0x0, 0x0);
        gbc.writeMem(0xa551, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x385c);
        EXPECT(gbc.pc(), 0xa553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa551), 0xcb);
        EXPECT(gbc.readMem(0xa552), 0x30);
        // CB 30 0012
        gbc.setState(0x1ee5, 0xaf78, 0xb060, 0x6016, 0x4d26, 0xb70a, 0x0, 0x1);
        gbc.writeMem(0x1ee5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaf78);
        EXPECT(gbc.pc(), 0x1ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0013
        gbc.setState(0xd372, 0xb15a, 0x840, 0x63bf, 0x1a0d, 0x7ecc, 0x0, 0x1);
        gbc.writeMem(0xd372, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb15a);
        EXPECT(gbc.pc(), 0xd374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd372), 0xcb);
        EXPECT(gbc.readMem(0xd373), 0x30);
        // CB 30 0014
        gbc.setState(0xe27e, 0xc1aa, 0x7580, 0xc756, 0xf2b9, 0xf446, 0x1, 0x0);
        gbc.writeMem(0xe27e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc1aa);
        EXPECT(gbc.pc(), 0xe280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe27e), 0xcb);
        EXPECT(gbc.readMem(0xe27f), 0x30);
        // CB 30 0015
        gbc.setState(0xe279, 0x2702, 0x37c0, 0xe36, 0x730d, 0xc201, 0x0, 0x0);
        gbc.writeMem(0xe279, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2702);
        EXPECT(gbc.pc(), 0xe27b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe279), 0xcb);
        EXPECT(gbc.readMem(0xe27a), 0x30);
        // CB 30 0016
        gbc.setState(0x96ac, 0xc117, 0xf520, 0xd478, 0xe5ef, 0xa304, 0x0, 0x0);
        gbc.writeMem(0x96ac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc117);
        EXPECT(gbc.pc(), 0x96ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ac), 0xcb);
        EXPECT(gbc.readMem(0x96ad), 0x30);
        // CB 30 0017
        gbc.setState(0x6d29, 0xafd5, 0xbfd0, 0xdc4a, 0xdb93, 0x825a, 0x0, 0x0);
        gbc.writeMem(0x6d29, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xafd5);
        EXPECT(gbc.pc(), 0x6d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0018
        gbc.setState(0x3948, 0xe8ac, 0x7060, 0xed63, 0x9c6c, 0xd714, 0x1, 0x1);
        gbc.writeMem(0x3948, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe8ac);
        EXPECT(gbc.pc(), 0x394a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0019
        gbc.setState(0xb191, 0x68bd, 0xee10, 0xebe6, 0x85cd, 0x5e4, 0x1, 0x0);
        gbc.writeMem(0xb191, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x68bd);
        EXPECT(gbc.pc(), 0xb193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb191), 0xcb);
        EXPECT(gbc.readMem(0xb192), 0x30);
        // CB 30 001A
        gbc.setState(0x1745, 0xc667, 0x60a0, 0xfa52, 0x6282, 0xb430, 0x0, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc667);
        EXPECT(gbc.pc(), 0x1747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 001B
        gbc.setState(0xd0d, 0x939d, 0x7d10, 0x22d1, 0x726f, 0x324f, 0x1, 0x1);
        gbc.writeMem(0xd0d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x939d);
        EXPECT(gbc.pc(), 0xd0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 001C
        gbc.setState(0xa3af, 0x24c4, 0x8d40, 0xab71, 0xb1e5, 0xd458, 0x1, 0x0);
        gbc.writeMem(0xa3af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x24c4);
        EXPECT(gbc.pc(), 0xa3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3af), 0xcb);
        EXPECT(gbc.readMem(0xa3b0), 0x30);
        // CB 30 001D
        gbc.setState(0xb3d4, 0x9385, 0x60b0, 0x7119, 0x6765, 0xf164, 0x0, 0x1);
        gbc.writeMem(0xb3d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9385);
        EXPECT(gbc.pc(), 0xb3d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d4), 0xcb);
        EXPECT(gbc.readMem(0xb3d5), 0x30);
        // CB 30 001E
        gbc.setState(0x33c0, 0x9dd9, 0xa120, 0xb484, 0x9861, 0x8227, 0x1, 0x0);
        gbc.writeMem(0x33c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9dd9);
        EXPECT(gbc.pc(), 0x33c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 001F
        gbc.setState(0xab59, 0xb344, 0x4bd0, 0x134f, 0x4145, 0xb720, 0x0, 0x1);
        gbc.writeMem(0xab59, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb344);
        EXPECT(gbc.pc(), 0xab5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab59), 0xcb);
        EXPECT(gbc.readMem(0xab5a), 0x30);
        // CB 30 0020
        gbc.setState(0x726e, 0x199d, 0x290, 0xc8f9, 0xeff5, 0x1d2d, 0x0, 0x0);
        gbc.writeMem(0x726e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x199d);
        EXPECT(gbc.pc(), 0x7270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0021
        gbc.setState(0xec4, 0xc43, 0xbf30, 0xe575, 0x29b5, 0xffef, 0x0, 0x1);
        gbc.writeMem(0xec4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc43);
        EXPECT(gbc.pc(), 0xec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0022
        gbc.setState(0x4e44, 0xf540, 0xc7f0, 0xdee4, 0x42ba, 0xac39, 0x1, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf540);
        EXPECT(gbc.pc(), 0x4e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0024
        gbc.setState(0xe6aa, 0x86fc, 0xe460, 0xb563, 0x1057, 0xc777, 0x0, 0x0);
        gbc.writeMem(0xe6aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x86fc);
        EXPECT(gbc.pc(), 0xe6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6aa), 0xcb);
        EXPECT(gbc.readMem(0xe6ab), 0x30);
        // CB 30 0025
        gbc.setState(0x665c, 0xe063, 0xea0, 0x1dc6, 0x8c97, 0x68e4, 0x1, 0x1);
        gbc.writeMem(0x665c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe063);
        EXPECT(gbc.pc(), 0x665e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0027
        gbc.setState(0x5cc8, 0x1725, 0xe9a0, 0x36ae, 0x541d, 0x3c35, 0x1, 0x0);
        gbc.writeMem(0x5cc8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1725);
        EXPECT(gbc.pc(), 0x5cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0028
        gbc.setState(0xb861, 0x530f, 0x7160, 0xd222, 0x65c2, 0xd09d, 0x1, 0x1);
        gbc.writeMem(0xb861, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x530f);
        EXPECT(gbc.pc(), 0xb863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb861), 0xcb);
        EXPECT(gbc.readMem(0xb862), 0x30);
        // CB 30 0029
        gbc.setState(0x6ce4, 0x9c95, 0xc5f0, 0xdb21, 0xbe99, 0x2e57, 0x1, 0x1);
        gbc.writeMem(0x6ce4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9c95);
        EXPECT(gbc.pc(), 0x6ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 002A
        gbc.setState(0x2b5, 0xf7da, 0xd970, 0xcb80, 0x5b57, 0x2886, 0x1, 0x1);
        gbc.writeMem(0x2b5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf7da);
        EXPECT(gbc.pc(), 0x2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 002B
        gbc.setState(0xea82, 0x3304, 0xcac0, 0x9223, 0xccbd, 0xdd5c, 0x1, 0x0);
        gbc.writeMem(0xea82, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3304);
        EXPECT(gbc.pc(), 0xea84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea82), 0xcb);
        EXPECT(gbc.readMem(0xea83), 0x30);
        // CB 30 002C
        gbc.setState(0x9b8c, 0xef10, 0x5720, 0x1f2d, 0x680a, 0xb986, 0x1, 0x1);
        gbc.writeMem(0x9b8c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xef10);
        EXPECT(gbc.pc(), 0x9b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8c), 0xcb);
        EXPECT(gbc.readMem(0x9b8d), 0x30);
        // CB 30 002D
        gbc.setState(0x3cc, 0x429d, 0x1910, 0x8bd9, 0x25d3, 0x13bc, 0x1, 0x1);
        gbc.writeMem(0x3cc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0x3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 002E
        gbc.setState(0xe0df, 0x78f7, 0x72a0, 0xb451, 0xec5c, 0xad2, 0x1, 0x1);
        gbc.writeMem(0xe0df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x78f7);
        EXPECT(gbc.pc(), 0xe0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0df), 0xcb);
        EXPECT(gbc.readMem(0xe0e0), 0x30);
        // CB 30 002F
        gbc.setState(0xea3a, 0x318, 0xf4c0, 0x7d70, 0x36bd, 0xde84, 0x1, 0x0);
        gbc.writeMem(0xea3a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x318);
        EXPECT(gbc.pc(), 0xea3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3a), 0xcb);
        EXPECT(gbc.readMem(0xea3b), 0x30);
        // CB 30 0030
        gbc.setState(0x5ced, 0x9b1e, 0xdb40, 0x68ce, 0x5dd8, 0xfb5a, 0x1, 0x0);
        gbc.writeMem(0x5ced, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9b1e);
        EXPECT(gbc.pc(), 0x5cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0031
        gbc.setState(0xda72, 0xfddc, 0x6290, 0x3a5, 0x96b8, 0x30c2, 0x0, 0x0);
        gbc.writeMem(0xda72, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfddc);
        EXPECT(gbc.pc(), 0xda74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda72), 0xcb);
        EXPECT(gbc.readMem(0xda73), 0x30);
        // CB 30 0032
        gbc.setState(0x16f0, 0xb14a, 0x7640, 0x54df, 0xd61, 0xaa7c, 0x1, 0x1);
        gbc.writeMem(0x16f0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb14a);
        EXPECT(gbc.pc(), 0x16f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0033
        gbc.setState(0x679a, 0x4e1a, 0xa4c0, 0xd3d, 0x9ad5, 0x17d7, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4e1a);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0034
        gbc.setState(0xadb7, 0x15de, 0x9290, 0x8fbb, 0xc342, 0x23ff, 0x0, 0x1);
        gbc.writeMem(0xadb7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x15de);
        EXPECT(gbc.pc(), 0xadb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb7), 0xcb);
        EXPECT(gbc.readMem(0xadb8), 0x30);
        // CB 30 0035
        gbc.setState(0xc521, 0x352f, 0x9030, 0xfe64, 0xd659, 0xc11c, 0x0, 0x0);
        gbc.writeMem(0xc521, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x352f);
        EXPECT(gbc.pc(), 0xc523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc521), 0xcb);
        EXPECT(gbc.readMem(0xc522), 0x30);
        // CB 30 0036
        gbc.setState(0x1669, 0x90af, 0x26e0, 0xf992, 0x53a9, 0x695a, 0x0, 0x0);
        gbc.writeMem(0x1669, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x90af);
        EXPECT(gbc.pc(), 0x166b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0037
        gbc.setState(0x5bb6, 0x3cc8, 0x62e0, 0xbbcf, 0x93a8, 0x9d48, 0x0, 0x0);
        gbc.writeMem(0x5bb6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3cc8);
        EXPECT(gbc.pc(), 0x5bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0038
        gbc.setState(0x485d, 0x16fd, 0x5250, 0xc595, 0xcce8, 0xf1eb, 0x1, 0x0);
        gbc.writeMem(0x485d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x16fd);
        EXPECT(gbc.pc(), 0x485f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0039
        gbc.setState(0x7300, 0x6389, 0xdd40, 0xaa2d, 0x5425, 0x2706, 0x1, 0x1);
        gbc.writeMem(0x7300, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6389);
        EXPECT(gbc.pc(), 0x7302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 003A
        gbc.setState(0x6947, 0xfb73, 0x96f0, 0x6352, 0xcb81, 0x8e4c, 0x1, 0x1);
        gbc.writeMem(0x6947, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfb73);
        EXPECT(gbc.pc(), 0x6949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 003B
        gbc.setState(0xb827, 0x5c2, 0xbb10, 0xe0e7, 0x5159, 0x8747, 0x0, 0x0);
        gbc.writeMem(0xb827, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5c2);
        EXPECT(gbc.pc(), 0xb829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb827), 0xcb);
        EXPECT(gbc.readMem(0xb828), 0x30);
        // CB 30 003C
        gbc.setState(0xc67d, 0x68f2, 0xcd40, 0xd785, 0xa73d, 0x5584, 0x1, 0x1);
        gbc.writeMem(0xc67d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x68f2);
        EXPECT(gbc.pc(), 0xc67f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67d), 0xcb);
        EXPECT(gbc.readMem(0xc67e), 0x30);
        // CB 30 003E
        gbc.setState(0x3742, 0xda8b, 0xccb0, 0xbb58, 0x9b77, 0x12ec, 0x0, 0x0);
        gbc.writeMem(0x3742, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xda8b);
        EXPECT(gbc.pc(), 0x3744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 003F
        gbc.setState(0x2001, 0x461f, 0x4150, 0x38d9, 0x8d0e, 0xde22, 0x1, 0x0);
        gbc.writeMem(0x2001, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x461f);
        EXPECT(gbc.pc(), 0x2003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0040
        gbc.setState(0xec4a, 0x4e81, 0x8e70, 0xad97, 0x2dcc, 0x870c, 0x0, 0x1);
        gbc.writeMem(0xec4a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4e81);
        EXPECT(gbc.pc(), 0xec4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4a), 0xcb);
        EXPECT(gbc.readMem(0xec4b), 0x30);
        // CB 30 0041
        gbc.setState(0xd32f, 0x68ed, 0x5810, 0x698d, 0x2560, 0x2c53, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x68ed);
        EXPECT(gbc.pc(), 0xd331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32f), 0xcb);
        EXPECT(gbc.readMem(0xd330), 0x30);
        // CB 30 0042
        gbc.setState(0x52b0, 0xa263, 0x6fc0, 0xa4e6, 0x9a5a, 0x9386, 0x1, 0x1);
        gbc.writeMem(0x52b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa263);
        EXPECT(gbc.pc(), 0x52b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0043
        gbc.setState(0xbf15, 0x5d5e, 0x7b80, 0xac70, 0x6a60, 0x3fc7, 0x0, 0x0);
        gbc.writeMem(0xbf15, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5d5e);
        EXPECT(gbc.pc(), 0xbf17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf15), 0xcb);
        EXPECT(gbc.readMem(0xbf16), 0x30);
        // CB 30 0044
        gbc.setState(0x5809, 0xbf0c, 0x52a0, 0x613d, 0x2f0a, 0x7ad0, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbf0c);
        EXPECT(gbc.pc(), 0x580b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0045
        gbc.setState(0x5369, 0x9845, 0x7870, 0x5fe8, 0x31aa, 0x34e4, 0x0, 0x0);
        gbc.writeMem(0x5369, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9845);
        EXPECT(gbc.pc(), 0x536b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0046
        gbc.setState(0x974a, 0xa2b3, 0xbfe0, 0xbce9, 0xe0e1, 0xa320, 0x0, 0x1);
        gbc.writeMem(0x974a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa2b3);
        EXPECT(gbc.pc(), 0x974c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x974a), 0xcb);
        EXPECT(gbc.readMem(0x974b), 0x30);
        // CB 30 0047
        gbc.setState(0x7f7c, 0xa812, 0x1a10, 0xdf0c, 0xcc57, 0x6ca7, 0x0, 0x0);
        gbc.writeMem(0x7f7c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa812);
        EXPECT(gbc.pc(), 0x7f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0048
        gbc.setState(0x85bd, 0xa0b2, 0xeb90, 0x2b5d, 0x2dec, 0xfb21, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa0b2);
        EXPECT(gbc.pc(), 0x85bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85bd), 0xcb);
        EXPECT(gbc.readMem(0x85be), 0x30);
        // CB 30 0049
        gbc.setState(0x174, 0x8c68, 0xd500, 0xada8, 0x2e4, 0xa385, 0x0, 0x1);
        gbc.writeMem(0x174, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8c68);
        EXPECT(gbc.pc(), 0x176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 004A
        gbc.setState(0xa4ce, 0x4b1d, 0x1890, 0x70a4, 0xd5d1, 0xe3b8, 0x1, 0x0);
        gbc.writeMem(0xa4ce, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4b1d);
        EXPECT(gbc.pc(), 0xa4d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ce), 0xcb);
        EXPECT(gbc.readMem(0xa4cf), 0x30);
        // CB 30 004B
        gbc.setState(0x3e2d, 0x58bc, 0x4ad0, 0x635a, 0xf421, 0x671b, 0x0, 0x0);
        gbc.writeMem(0x3e2d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x58bc);
        EXPECT(gbc.pc(), 0x3e2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 004C
        gbc.setState(0xd7ca, 0x8bc5, 0x5aa0, 0x9df1, 0xb9ca, 0x3261, 0x0, 0x1);
        gbc.writeMem(0xd7ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8bc5);
        EXPECT(gbc.pc(), 0xd7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ca), 0xcb);
        EXPECT(gbc.readMem(0xd7cb), 0x30);
        // CB 30 004D
        gbc.setState(0x949f, 0x362, 0x62f0, 0xc832, 0xc828, 0x7504, 0x0, 0x0);
        gbc.writeMem(0x949f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x362);
        EXPECT(gbc.pc(), 0x94a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949f), 0xcb);
        EXPECT(gbc.readMem(0x94a0), 0x30);
        // CB 30 004E
        gbc.setState(0xcced, 0x6342, 0x1b0, 0xb9bd, 0xcb8f, 0x5cc4, 0x1, 0x1);
        gbc.writeMem(0xcced, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6342);
        EXPECT(gbc.pc(), 0xccef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcced), 0xcb);
        EXPECT(gbc.readMem(0xccee), 0x30);
        // CB 30 004F
        gbc.setState(0x8369, 0x5f77, 0xeea0, 0xc24c, 0xd0b8, 0x59ea, 0x0, 0x0);
        gbc.writeMem(0x8369, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5f77);
        EXPECT(gbc.pc(), 0x836b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8369), 0xcb);
        EXPECT(gbc.readMem(0x836a), 0x30);
        // CB 30 0050
        gbc.setState(0xc474, 0x2e54, 0x6260, 0xcb10, 0x2c9e, 0x5640, 0x1, 0x1);
        gbc.writeMem(0xc474, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2e54);
        EXPECT(gbc.pc(), 0xc476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc474), 0xcb);
        EXPECT(gbc.readMem(0xc475), 0x30);
        // CB 30 0051
        gbc.setState(0x5b83, 0xb915, 0x5d00, 0x7eda, 0x51cc, 0x82b5, 0x0, 0x0);
        gbc.writeMem(0x5b83, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb915);
        EXPECT(gbc.pc(), 0x5b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0052
        gbc.setState(0xd7ef, 0x2539, 0x3570, 0x7525, 0x5713, 0x9b39, 0x1, 0x0);
        gbc.writeMem(0xd7ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2539);
        EXPECT(gbc.pc(), 0xd7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ef), 0xcb);
        EXPECT(gbc.readMem(0xd7f0), 0x30);
        // CB 30 0053
        gbc.setState(0x98a, 0xf9f8, 0x2890, 0xe4e9, 0x67f, 0x9c9b, 0x0, 0x0);
        gbc.writeMem(0x98a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf9f8);
        EXPECT(gbc.pc(), 0x98c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0054
        gbc.setState(0x5b3c, 0x5a2f, 0x1f30, 0x26f, 0x4d92, 0xfd69, 0x0, 0x1);
        gbc.writeMem(0x5b3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5a2f);
        EXPECT(gbc.pc(), 0x5b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0055
        gbc.setState(0x71cb, 0x888d, 0x2440, 0x14a8, 0x3255, 0xb75, 0x0, 0x1);
        gbc.writeMem(0x71cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x888d);
        EXPECT(gbc.pc(), 0x71cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0057
        gbc.setState(0x5e7e, 0xe7ac, 0x8280, 0x6944, 0x6690, 0x16f, 0x0, 0x1);
        gbc.writeMem(0x5e7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe7ac);
        EXPECT(gbc.pc(), 0x5e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0058
        gbc.setState(0x12ef, 0x7c79, 0xa500, 0x780, 0x6dda, 0x1efe, 0x1, 0x0);
        gbc.writeMem(0x12ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7c79);
        EXPECT(gbc.pc(), 0x12f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0059
        gbc.setState(0xd62b, 0x6a6f, 0xef80, 0xa9b0, 0x94ec, 0x9945, 0x1, 0x0);
        gbc.writeMem(0xd62b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6a6f);
        EXPECT(gbc.pc(), 0xd62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62b), 0xcb);
        EXPECT(gbc.readMem(0xd62c), 0x30);
        // CB 30 005A
        gbc.setState(0xbfe6, 0x1759, 0x67f0, 0x751d, 0x2e0, 0x5962, 0x1, 0x1);
        gbc.writeMem(0xbfe6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1759);
        EXPECT(gbc.pc(), 0xbfe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe6), 0xcb);
        EXPECT(gbc.readMem(0xbfe7), 0x30);
        // CB 30 005B
        gbc.setState(0x528, 0xfaae, 0x2040, 0x4fbd, 0xe358, 0x86ba, 0x1, 0x0);
        gbc.writeMem(0x528, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfaae);
        EXPECT(gbc.pc(), 0x52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 005C
        gbc.setState(0xa6b8, 0xc143, 0x6d60, 0xf35d, 0xc588, 0xa6fb, 0x1, 0x0);
        gbc.writeMem(0xa6b8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc143);
        EXPECT(gbc.pc(), 0xa6ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b8), 0xcb);
        EXPECT(gbc.readMem(0xa6b9), 0x30);
        // CB 30 005D
        gbc.setState(0x61e2, 0xbf06, 0xc6e0, 0x752e, 0x3854, 0x41a8, 0x1, 0x1);
        gbc.writeMem(0x61e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbf06);
        EXPECT(gbc.pc(), 0x61e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 005E
        gbc.setState(0xccd8, 0x466b, 0x1070, 0xf45e, 0xaf91, 0x997b, 0x0, 0x1);
        gbc.writeMem(0xccd8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x466b);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd8), 0xcb);
        EXPECT(gbc.readMem(0xccd9), 0x30);
        // CB 30 005F
        gbc.setState(0x7a5a, 0xc5ed, 0xf080, 0xc513, 0xdfa0, 0x2d3e, 0x1, 0x1);
        gbc.writeMem(0x7a5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc5ed);
        EXPECT(gbc.pc(), 0x7a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0060
        gbc.setState(0x5c52, 0xb9cc, 0x6af0, 0x695a, 0xe32e, 0x9205, 0x0, 0x0);
        gbc.writeMem(0x5c52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb9cc);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0061
        gbc.setState(0x6180, 0x9a2d, 0x7e40, 0x9dda, 0x3460, 0x8a7b, 0x1, 0x0);
        gbc.writeMem(0x6180, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9a2d);
        EXPECT(gbc.pc(), 0x6182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0062
        gbc.setState(0xcf91, 0xe3f3, 0x9630, 0xe43d, 0x9242, 0x9149, 0x0, 0x0);
        gbc.writeMem(0xcf91, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe3f3);
        EXPECT(gbc.pc(), 0xcf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf91), 0xcb);
        EXPECT(gbc.readMem(0xcf92), 0x30);
        // CB 30 0064
        gbc.setState(0x6d5f, 0xcc4b, 0xf260, 0xc840, 0xd359, 0xe484, 0x0, 0x1);
        gbc.writeMem(0x6d5f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcc4b);
        EXPECT(gbc.pc(), 0x6d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0067
        gbc.setState(0x3e2, 0x2c9e, 0x1100, 0x4bbb, 0xab39, 0x201c, 0x1, 0x0);
        gbc.writeMem(0x3e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2c9e);
        EXPECT(gbc.pc(), 0x3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0068
        gbc.setState(0xb7da, 0x7eed, 0x1000, 0xda33, 0x445a, 0x1aca, 0x0, 0x1);
        gbc.writeMem(0xb7da, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7eed);
        EXPECT(gbc.pc(), 0xb7dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7da), 0xcb);
        EXPECT(gbc.readMem(0xb7db), 0x30);
        // CB 30 0069
        gbc.setState(0x5012, 0xce3f, 0xc110, 0x5904, 0x7bf1, 0x833a, 0x0, 0x1);
        gbc.writeMem(0x5012, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xce3f);
        EXPECT(gbc.pc(), 0x5014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 006A
        gbc.setState(0xd6d0, 0x3e7a, 0x1e00, 0x2830, 0xeb4f, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0xd6d0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3e7a);
        EXPECT(gbc.pc(), 0xd6d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d0), 0xcb);
        EXPECT(gbc.readMem(0xd6d1), 0x30);
        // CB 30 006B
        gbc.setState(0xad90, 0xa54b, 0xeca0, 0x472f, 0xd2f0, 0xc67, 0x0, 0x1);
        gbc.writeMem(0xad90, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa54b);
        EXPECT(gbc.pc(), 0xad92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad90), 0xcb);
        EXPECT(gbc.readMem(0xad91), 0x30);
        // CB 30 006C
        gbc.setState(0xeacd, 0xa6ec, 0xaf40, 0x7b2b, 0xf97c, 0x68e3, 0x0, 0x0);
        gbc.writeMem(0xeacd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa6ec);
        EXPECT(gbc.pc(), 0xeacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeacd), 0xcb);
        EXPECT(gbc.readMem(0xeace), 0x30);
        // CB 30 006D
        gbc.setState(0x3d4b, 0xfd24, 0xa850, 0x93fe, 0x69ec, 0x9b98, 0x0, 0x0);
        gbc.writeMem(0x3d4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfd24);
        EXPECT(gbc.pc(), 0x3d4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 006E
        gbc.setState(0x70f8, 0xcc0a, 0x56d0, 0xdbbf, 0x1fe2, 0x51d2, 0x0, 0x1);
        gbc.writeMem(0x70f8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcc0a);
        EXPECT(gbc.pc(), 0x70fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 006F
        gbc.setState(0xcb5e, 0xdc8, 0x5e70, 0x6984, 0x5b15, 0x485b, 0x0, 0x1);
        gbc.writeMem(0xcb5e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdc8);
        EXPECT(gbc.pc(), 0xcb60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5e), 0xcb);
        EXPECT(gbc.readMem(0xcb5f), 0x30);
        // CB 30 0070
        gbc.setState(0xd9b3, 0x772a, 0x4f80, 0x1057, 0xcd84, 0x567a, 0x1, 0x1);
        gbc.writeMem(0xd9b3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x772a);
        EXPECT(gbc.pc(), 0xd9b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b3), 0xcb);
        EXPECT(gbc.readMem(0xd9b4), 0x30);
        // CB 30 0071
        gbc.setState(0xc655, 0xeb01, 0x2b60, 0x4ee, 0xbf5b, 0xef60, 0x1, 0x0);
        gbc.writeMem(0xc655, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xeb01);
        EXPECT(gbc.pc(), 0xc657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc655), 0xcb);
        EXPECT(gbc.readMem(0xc656), 0x30);
        // CB 30 0072
        gbc.setState(0x34df, 0x66b0, 0x5480, 0x2f7, 0x5711, 0x1e58, 0x1, 0x1);
        gbc.writeMem(0x34df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x66b0);
        EXPECT(gbc.pc(), 0x34e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0074
        gbc.setState(0x7297, 0x5dca, 0x65e0, 0x2acf, 0x1c80, 0x9ec5, 0x1, 0x1);
        gbc.writeMem(0x7297, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5dca);
        EXPECT(gbc.pc(), 0x7299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0075
        gbc.setState(0x1faf, 0xaa4a, 0xb210, 0x32ac, 0x8055, 0xe9a9, 0x0, 0x1);
        gbc.writeMem(0x1faf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xaa4a);
        EXPECT(gbc.pc(), 0x1fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0076
        gbc.setState(0xdb00, 0xcfe9, 0x4560, 0x101d, 0xc298, 0x13d1, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcfe9);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb00), 0xcb);
        EXPECT(gbc.readMem(0xdb01), 0x30);
        // CB 30 0077
        gbc.setState(0x8fba, 0x5002, 0x6d80, 0x7485, 0xadb7, 0x557e, 0x0, 0x0);
        gbc.writeMem(0x8fba, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5002);
        EXPECT(gbc.pc(), 0x8fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fba), 0xcb);
        EXPECT(gbc.readMem(0x8fbb), 0x30);
        // CB 30 0078
        gbc.setState(0x235c, 0x13f6, 0x3a80, 0x78da, 0xce50, 0xda75, 0x0, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x13f6);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0079
        gbc.setState(0x7ddc, 0x7ac3, 0x4fe0, 0x9463, 0x92e2, 0x89a6, 0x1, 0x1);
        gbc.writeMem(0x7ddc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7ac3);
        EXPECT(gbc.pc(), 0x7dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 007A
        gbc.setState(0x508, 0xc00, 0x5a40, 0x1fa, 0xf867, 0x6263, 0x0, 0x1);
        gbc.writeMem(0x508, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc00);
        EXPECT(gbc.pc(), 0x50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 007B
        gbc.setState(0x2b2c, 0x3713, 0x7110, 0xdfb7, 0x5e0a, 0xbe42, 0x0, 0x1);
        gbc.writeMem(0x2b2c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3713);
        EXPECT(gbc.pc(), 0x2b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 007C
        gbc.setState(0xb7e9, 0x5011, 0xd7b0, 0x8e62, 0xc8d0, 0xac8, 0x1, 0x1);
        gbc.writeMem(0xb7e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5011);
        EXPECT(gbc.pc(), 0xb7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e9), 0xcb);
        EXPECT(gbc.readMem(0xb7ea), 0x30);
        // CB 30 007D
        gbc.setState(0x99f4, 0x90d3, 0x2a40, 0xc3b0, 0x1705, 0xc0df, 0x1, 0x1);
        gbc.writeMem(0x99f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x90d3);
        EXPECT(gbc.pc(), 0x99f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f4), 0xcb);
        EXPECT(gbc.readMem(0x99f5), 0x30);
        // CB 30 007E
        gbc.setState(0x9c60, 0x1d30, 0xe240, 0x68ef, 0xee0e, 0x681d, 0x0, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1d30);
        EXPECT(gbc.pc(), 0x9c62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c60), 0xcb);
        EXPECT(gbc.readMem(0x9c61), 0x30);
        // CB 30 007F
        gbc.setState(0x4ade, 0x2bed, 0x5b30, 0xc7a6, 0xeaa2, 0x8384, 0x1, 0x0);
        gbc.writeMem(0x4ade, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2bed);
        EXPECT(gbc.pc(), 0x4ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0080
        gbc.setState(0x171c, 0xad57, 0x8dc0, 0x6067, 0x305e, 0x164e, 0x0, 0x1);
        gbc.writeMem(0x171c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xad57);
        EXPECT(gbc.pc(), 0x171e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0081
        gbc.setState(0x6ccc, 0x78d4, 0x620, 0x27d2, 0x9bfb, 0xd55, 0x1, 0x1);
        gbc.writeMem(0x6ccc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x78d4);
        EXPECT(gbc.pc(), 0x6cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0082
        gbc.setState(0xe1c3, 0xf7b, 0x1020, 0x5a36, 0x1223, 0x810b, 0x0, 0x0);
        gbc.writeMem(0xe1c3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf7b);
        EXPECT(gbc.pc(), 0xe1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c3), 0xcb);
        EXPECT(gbc.readMem(0xe1c4), 0x30);
        // CB 30 0083
        gbc.setState(0x4679, 0x180f, 0xac70, 0x2e58, 0x1712, 0xcb78, 0x0, 0x1);
        gbc.writeMem(0x4679, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x180f);
        EXPECT(gbc.pc(), 0x467b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0084
        gbc.setState(0xd59, 0xd480, 0x76d0, 0xd23e, 0x7056, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0xd59, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd480);
        EXPECT(gbc.pc(), 0xd5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0085
        gbc.setState(0x464e, 0xa571, 0x2670, 0xd1fb, 0x930, 0x25ee, 0x1, 0x1);
        gbc.writeMem(0x464e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa571);
        EXPECT(gbc.pc(), 0x4650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0086
        gbc.setState(0x1eb5, 0xd204, 0xe150, 0x2533, 0x94a5, 0x1784, 0x0, 0x0);
        gbc.writeMem(0x1eb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd204);
        EXPECT(gbc.pc(), 0x1eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0087
        gbc.setState(0xdf41, 0xfce5, 0x5210, 0x31ec, 0xe692, 0xfb8, 0x1, 0x1);
        gbc.writeMem(0xdf41, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfce5);
        EXPECT(gbc.pc(), 0xdf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf41), 0xcb);
        EXPECT(gbc.readMem(0xdf42), 0x30);
        // CB 30 0088
        gbc.setState(0xbe45, 0x26bf, 0xea00, 0x225d, 0x6427, 0x1d1d, 0x1, 0x1);
        gbc.writeMem(0xbe45, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x26bf);
        EXPECT(gbc.pc(), 0xbe47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe45), 0xcb);
        EXPECT(gbc.readMem(0xbe46), 0x30);
        // CB 30 0089
        gbc.setState(0x195a, 0xc878, 0xd740, 0x6bed, 0x6e91, 0x759f, 0x1, 0x0);
        gbc.writeMem(0x195a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc878);
        EXPECT(gbc.pc(), 0x195c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 008A
        gbc.setState(0xe0af, 0x3ded, 0xcc0, 0xb2ca, 0xee2e, 0xb2f2, 0x1, 0x1);
        gbc.writeMem(0xe0af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3ded);
        EXPECT(gbc.pc(), 0xe0b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0af), 0xcb);
        EXPECT(gbc.readMem(0xe0b0), 0x30);
        // CB 30 008B
        gbc.setState(0xd7b3, 0x5b8c, 0x1920, 0xe723, 0x5a93, 0x48c2, 0x1, 0x1);
        gbc.writeMem(0xd7b3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5b8c);
        EXPECT(gbc.pc(), 0xd7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b3), 0xcb);
        EXPECT(gbc.readMem(0xd7b4), 0x30);
        // CB 30 008C
        gbc.setState(0x57aa, 0xe861, 0x24f0, 0x9bd7, 0x51af, 0xfdd8, 0x1, 0x1);
        gbc.writeMem(0x57aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe861);
        EXPECT(gbc.pc(), 0x57ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 008D
        gbc.setState(0x8e4b, 0xa8f4, 0xdda0, 0xd794, 0xf4be, 0x5767, 0x0, 0x0);
        gbc.writeMem(0x8e4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa8f4);
        EXPECT(gbc.pc(), 0x8e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4b), 0xcb);
        EXPECT(gbc.readMem(0x8e4c), 0x30);
        // CB 30 008E
        gbc.setState(0xd181, 0x3ba0, 0x88c0, 0x731e, 0x6de9, 0x2310, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3ba0);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd181), 0xcb);
        EXPECT(gbc.readMem(0xd182), 0x30);
        // CB 30 008F
        gbc.setState(0x85d, 0xf067, 0x5290, 0xd1c7, 0x63e2, 0xfa2e, 0x0, 0x0);
        gbc.writeMem(0x85d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf067);
        EXPECT(gbc.pc(), 0x85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0090
        gbc.setState(0xbec9, 0x60f2, 0x1480, 0xbe8f, 0xf617, 0x1c91, 0x0, 0x0);
        gbc.writeMem(0xbec9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x60f2);
        EXPECT(gbc.pc(), 0xbecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec9), 0xcb);
        EXPECT(gbc.readMem(0xbeca), 0x30);
        // CB 30 0091
        gbc.setState(0xc84a, 0x28f0, 0xb50, 0x6449, 0x4951, 0xf01f, 0x1, 0x0);
        gbc.writeMem(0xc84a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x28f0);
        EXPECT(gbc.pc(), 0xc84c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84a), 0xcb);
        EXPECT(gbc.readMem(0xc84b), 0x30);
        // CB 30 0092
        gbc.setState(0xd89c, 0xfb7c, 0x1c30, 0x571a, 0xa077, 0xad4c, 0x1, 0x0);
        gbc.writeMem(0xd89c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfb7c);
        EXPECT(gbc.pc(), 0xd89e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89c), 0xcb);
        EXPECT(gbc.readMem(0xd89d), 0x30);
        // CB 30 0093
        gbc.setState(0x84d1, 0x457b, 0x210, 0xe04e, 0x73ca, 0x2d27, 0x1, 0x1);
        gbc.writeMem(0x84d1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x457b);
        EXPECT(gbc.pc(), 0x84d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d1), 0xcb);
        EXPECT(gbc.readMem(0x84d2), 0x30);
        // CB 30 0094
        gbc.setState(0xb079, 0xcef9, 0xf270, 0x4467, 0x4435, 0x1691, 0x0, 0x0);
        gbc.writeMem(0xb079, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcef9);
        EXPECT(gbc.pc(), 0xb07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb079), 0xcb);
        EXPECT(gbc.readMem(0xb07a), 0x30);
        // CB 30 0095
        gbc.setState(0xca8d, 0xf4f9, 0xa570, 0x48b4, 0xbe09, 0x8ab6, 0x1, 0x1);
        gbc.writeMem(0xca8d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf4f9);
        EXPECT(gbc.pc(), 0xca8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca8d), 0xcb);
        EXPECT(gbc.readMem(0xca8e), 0x30);
        // CB 30 0097
        gbc.setState(0xdf5a, 0x9760, 0x1240, 0xc859, 0x6724, 0x1b98, 0x0, 0x1);
        gbc.writeMem(0xdf5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9760);
        EXPECT(gbc.pc(), 0xdf5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf5a), 0xcb);
        EXPECT(gbc.readMem(0xdf5b), 0x30);
        // CB 30 0098
        gbc.setState(0x289b, 0x6da, 0xf800, 0x336e, 0xd76d, 0x167b, 0x0, 0x0);
        gbc.writeMem(0x289b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6da);
        EXPECT(gbc.pc(), 0x289d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0099
        gbc.setState(0x25c8, 0xe317, 0x60a0, 0x68bd, 0x69a5, 0xd417, 0x0, 0x1);
        gbc.writeMem(0x25c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe317);
        EXPECT(gbc.pc(), 0x25ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 009A
        gbc.setState(0xc1de, 0x47d7, 0x7f30, 0xe4f3, 0x806b, 0x6dc, 0x0, 0x0);
        gbc.writeMem(0xc1de, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x47d7);
        EXPECT(gbc.pc(), 0xc1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1de), 0xcb);
        EXPECT(gbc.readMem(0xc1df), 0x30);
        // CB 30 009B
        gbc.setState(0xe460, 0xc532, 0x81f0, 0x281d, 0xbb9, 0x5e77, 0x0, 0x1);
        gbc.writeMem(0xe460, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc532);
        EXPECT(gbc.pc(), 0xe462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe460), 0xcb);
        EXPECT(gbc.readMem(0xe461), 0x30);
        // CB 30 009C
        gbc.setState(0x232, 0x69f5, 0x21a0, 0x359e, 0xb590, 0xd0f1, 0x0, 0x1);
        gbc.writeMem(0x232, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x69f5);
        EXPECT(gbc.pc(), 0x234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 009D
        gbc.setState(0x803a, 0xbd54, 0x900, 0x33e6, 0x605e, 0x3288, 0x1, 0x1);
        gbc.writeMem(0x803a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbd54);
        EXPECT(gbc.pc(), 0x803c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803a), 0xcb);
        EXPECT(gbc.readMem(0x803b), 0x30);
        // CB 30 009E
        gbc.setState(0xd71c, 0xf845, 0xeec0, 0xe77b, 0xb738, 0x4397, 0x0, 0x0);
        gbc.writeMem(0xd71c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf845);
        EXPECT(gbc.pc(), 0xd71e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71c), 0xcb);
        EXPECT(gbc.readMem(0xd71d), 0x30);
        // CB 30 009F
        gbc.setState(0x3644, 0xd53, 0x3b00, 0xdf51, 0x4429, 0x5522, 0x1, 0x0);
        gbc.writeMem(0x3644, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd53);
        EXPECT(gbc.pc(), 0x3646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00A0
        gbc.setState(0xd9c4, 0xadf9, 0xa170, 0x8108, 0xb945, 0x3480, 0x0, 0x1);
        gbc.writeMem(0xd9c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xadf9);
        EXPECT(gbc.pc(), 0xd9c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c4), 0xcb);
        EXPECT(gbc.readMem(0xd9c5), 0x30);
        // CB 30 00A1
        gbc.setState(0x3772, 0x9503, 0x48d0, 0xb144, 0xab63, 0x7cf4, 0x0, 0x0);
        gbc.writeMem(0x3772, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9503);
        EXPECT(gbc.pc(), 0x3774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00A2
        gbc.setState(0xb194, 0xb37, 0x9150, 0x15e1, 0x23ff, 0x6ea9, 0x1, 0x0);
        gbc.writeMem(0xb194, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb37);
        EXPECT(gbc.pc(), 0xb196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb194), 0xcb);
        EXPECT(gbc.readMem(0xb195), 0x30);
        // CB 30 00A3
        gbc.setState(0x622f, 0x4d5f, 0xfad0, 0xdcce, 0x3399, 0xc29b, 0x0, 0x0);
        gbc.writeMem(0x622f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4d5f);
        EXPECT(gbc.pc(), 0x6231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00A4
        gbc.setState(0xb621, 0xee26, 0x52d0, 0xcf7, 0xafef, 0xb983, 0x0, 0x1);
        gbc.writeMem(0xb621, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xee26);
        EXPECT(gbc.pc(), 0xb623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb621), 0xcb);
        EXPECT(gbc.readMem(0xb622), 0x30);
        // CB 30 00A5
        gbc.setState(0x8de3, 0xb5e2, 0xb050, 0x772c, 0x446c, 0x973a, 0x0, 0x1);
        gbc.writeMem(0x8de3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb5e2);
        EXPECT(gbc.pc(), 0x8de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de3), 0xcb);
        EXPECT(gbc.readMem(0x8de4), 0x30);
        // CB 30 00A6
        gbc.setState(0x3cfb, 0x3605, 0xec70, 0x2cbe, 0x8410, 0x46e, 0x0, 0x1);
        gbc.writeMem(0x3cfb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3605);
        EXPECT(gbc.pc(), 0x3cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00A7
        gbc.setState(0xdb93, 0xfe40, 0xcf0, 0x6db, 0xa57c, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0xdb93, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xfe40);
        EXPECT(gbc.pc(), 0xdb95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb93), 0xcb);
        EXPECT(gbc.readMem(0xdb94), 0x30);
        // CB 30 00A8
        gbc.setState(0x91a9, 0x4ad, 0xac0, 0xabcc, 0xbb24, 0x6a0c, 0x0, 0x1);
        gbc.writeMem(0x91a9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4ad);
        EXPECT(gbc.pc(), 0x91ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a9), 0xcb);
        EXPECT(gbc.readMem(0x91aa), 0x30);
        // CB 30 00A9
        gbc.setState(0x28fa, 0x5b1b, 0x990, 0xe13f, 0xac6e, 0x74f1, 0x1, 0x0);
        gbc.writeMem(0x28fa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5b1b);
        EXPECT(gbc.pc(), 0x28fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00AA
        gbc.setState(0xd331, 0xddc0, 0xb5f0, 0x851f, 0x2693, 0x1fdf, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xddc0);
        EXPECT(gbc.pc(), 0xd333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd331), 0xcb);
        EXPECT(gbc.readMem(0xd332), 0x30);
        // CB 30 00AB
        gbc.setState(0xb700, 0x84cb, 0x12b0, 0xbd7c, 0x9912, 0xa6b8, 0x1, 0x1);
        gbc.writeMem(0xb700, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x84cb);
        EXPECT(gbc.pc(), 0xb702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb700), 0xcb);
        EXPECT(gbc.readMem(0xb701), 0x30);
        // CB 30 00AC
        gbc.setState(0xa548, 0x666f, 0x1d40, 0xb520, 0xeba5, 0x1eb6, 0x1, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x666f);
        EXPECT(gbc.pc(), 0xa54a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa548), 0xcb);
        EXPECT(gbc.readMem(0xa549), 0x30);
        // CB 30 00AD
        gbc.setState(0xa24f, 0x8f96, 0x96e0, 0x6e15, 0x4c3e, 0xd0dd, 0x0, 0x0);
        gbc.writeMem(0xa24f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8f96);
        EXPECT(gbc.pc(), 0xa251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24f), 0xcb);
        EXPECT(gbc.readMem(0xa250), 0x30);
        // CB 30 00AE
        gbc.setState(0x688f, 0x8108, 0xefd0, 0xd7d9, 0xa2d3, 0xd1df, 0x1, 0x0);
        gbc.writeMem(0x688f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8108);
        EXPECT(gbc.pc(), 0x6891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00AF
        gbc.setState(0xd0f8, 0xb713, 0x4360, 0x12c6, 0xaca, 0xaca8, 0x0, 0x0);
        gbc.writeMem(0xd0f8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb713);
        EXPECT(gbc.pc(), 0xd0fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f8), 0xcb);
        EXPECT(gbc.readMem(0xd0f9), 0x30);
        // CB 30 00B0
        gbc.setState(0x878, 0x2f0c, 0xc570, 0x7223, 0x3b1a, 0x2a88, 0x1, 0x1);
        gbc.writeMem(0x878, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2f0c);
        EXPECT(gbc.pc(), 0x87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00B1
        gbc.setState(0xa854, 0x15a7, 0x13d0, 0xb366, 0xff28, 0xe977, 0x1, 0x1);
        gbc.writeMem(0xa854, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x15a7);
        EXPECT(gbc.pc(), 0xa856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa854), 0xcb);
        EXPECT(gbc.readMem(0xa855), 0x30);
        // CB 30 00B2
        gbc.setState(0x926c, 0x5b79, 0x5680, 0x2d08, 0x5197, 0xd13, 0x0, 0x1);
        gbc.writeMem(0x926c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5b79);
        EXPECT(gbc.pc(), 0x926e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926c), 0xcb);
        EXPECT(gbc.readMem(0x926d), 0x30);
        // CB 30 00B4
        gbc.setState(0x1726, 0x53a3, 0x4650, 0x84e4, 0x9917, 0x84c1, 0x0, 0x0);
        gbc.writeMem(0x1726, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x53a3);
        EXPECT(gbc.pc(), 0x1728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00B5
        gbc.setState(0x2b04, 0xd113, 0x7e10, 0xcbce, 0x813b, 0x713b, 0x0, 0x0);
        gbc.writeMem(0x2b04, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x2b06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00B6
        gbc.setState(0x17e3, 0x39bb, 0x4190, 0x4186, 0xd4a1, 0xa3ca, 0x1, 0x0);
        gbc.writeMem(0x17e3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x39bb);
        EXPECT(gbc.pc(), 0x17e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00B7
        gbc.setState(0xd1c4, 0x9ded, 0x87a0, 0xc426, 0x7f94, 0x96ec, 0x1, 0x1);
        gbc.writeMem(0xd1c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9ded);
        EXPECT(gbc.pc(), 0xd1c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c4), 0xcb);
        EXPECT(gbc.readMem(0xd1c5), 0x30);
        // CB 30 00B8
        gbc.setState(0x7c2a, 0xf8c2, 0x4eb0, 0x4b11, 0x287a, 0x20b5, 0x1, 0x0);
        gbc.writeMem(0x7c2a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf8c2);
        EXPECT(gbc.pc(), 0x7c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00B9
        gbc.setState(0x2bc, 0x10d0, 0x8590, 0xffc3, 0x42b3, 0x83e1, 0x0, 0x1);
        gbc.writeMem(0x2bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x10d0);
        EXPECT(gbc.pc(), 0x2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00BB
        gbc.setState(0x4bf4, 0xd930, 0x3ec0, 0x70ba, 0x6fb6, 0x1e5c, 0x0, 0x1);
        gbc.writeMem(0x4bf4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd930);
        EXPECT(gbc.pc(), 0x4bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00BC
        gbc.setState(0x13c, 0x3fb9, 0x4c10, 0x4958, 0x1e34, 0xc1a3, 0x1, 0x1);
        gbc.writeMem(0x13c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3fb9);
        EXPECT(gbc.pc(), 0x13e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00BD
        gbc.setState(0x211e, 0xdffe, 0x5680, 0x4d50, 0xd3ea, 0x9c60, 0x1, 0x1);
        gbc.writeMem(0x211e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdffe);
        EXPECT(gbc.pc(), 0x2120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00BE
        gbc.setState(0x3d8e, 0xe177, 0x3270, 0x9240, 0x46a3, 0xc342, 0x1, 0x0);
        gbc.writeMem(0x3d8e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe177);
        EXPECT(gbc.pc(), 0x3d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00BF
        gbc.setState(0x9fbf, 0x6358, 0xea00, 0x9c96, 0x15d7, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6358);
        EXPECT(gbc.pc(), 0x9fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbf), 0xcb);
        EXPECT(gbc.readMem(0x9fc0), 0x30);
        // CB 30 00C0
        gbc.setState(0x9042, 0x36ff, 0xb950, 0x1cf9, 0xa3e3, 0xeba7, 0x1, 0x1);
        gbc.writeMem(0x9042, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x36ff);
        EXPECT(gbc.pc(), 0x9044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9042), 0xcb);
        EXPECT(gbc.readMem(0x9043), 0x30);
        // CB 30 00C2
        gbc.setState(0x3783, 0x8db8, 0xb650, 0x4ad4, 0x476, 0x3c28, 0x1, 0x0);
        gbc.writeMem(0x3783, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8db8);
        EXPECT(gbc.pc(), 0x3785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00C3
        gbc.setState(0x8e17, 0x18ed, 0xe300, 0x1e6d, 0xb5bb, 0xbebd, 0x0, 0x0);
        gbc.writeMem(0x8e17, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x18ed);
        EXPECT(gbc.pc(), 0x8e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e17), 0xcb);
        EXPECT(gbc.readMem(0x8e18), 0x30);
        // CB 30 00C4
        gbc.setState(0xcc34, 0xcdac, 0x1620, 0x3e5c, 0x428f, 0x4ac9, 0x0, 0x1);
        gbc.writeMem(0xcc34, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xcdac);
        EXPECT(gbc.pc(), 0xcc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc34), 0xcb);
        EXPECT(gbc.readMem(0xcc35), 0x30);
        // CB 30 00C5
        gbc.setState(0x4c0, 0xc6ab, 0x2b00, 0xb4e5, 0xcb7a, 0x917, 0x1, 0x1);
        gbc.writeMem(0x4c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc6ab);
        EXPECT(gbc.pc(), 0x4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00C6
        gbc.setState(0xe9af, 0x8451, 0x1170, 0x6b84, 0xd5ae, 0xce8c, 0x1, 0x1);
        gbc.writeMem(0xe9af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8451);
        EXPECT(gbc.pc(), 0xe9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9af), 0xcb);
        EXPECT(gbc.readMem(0xe9b0), 0x30);
        // CB 30 00C7
        gbc.setState(0xdcb5, 0x244c, 0x6d10, 0x8452, 0x1941, 0xc816, 0x0, 0x1);
        gbc.writeMem(0xdcb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x244c);
        EXPECT(gbc.pc(), 0xdcb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb5), 0xcb);
        EXPECT(gbc.readMem(0xdcb6), 0x30);
        // CB 30 00C8
        gbc.setState(0xbb15, 0x57a8, 0x1890, 0xaf80, 0x7f2, 0x7bcc, 0x0, 0x0);
        gbc.writeMem(0xbb15, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x57a8);
        EXPECT(gbc.pc(), 0xbb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb15), 0xcb);
        EXPECT(gbc.readMem(0xbb16), 0x30);
        // CB 30 00C9
        gbc.setState(0x933c, 0xed8b, 0xbfc0, 0x3eb2, 0x3286, 0xc33d, 0x1, 0x1);
        gbc.writeMem(0x933c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xed8b);
        EXPECT(gbc.pc(), 0x933e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933c), 0xcb);
        EXPECT(gbc.readMem(0x933d), 0x30);
        // CB 30 00CA
        gbc.setState(0x10e9, 0x871c, 0xe830, 0xd6da, 0x9d91, 0xc2cc, 0x0, 0x0);
        gbc.writeMem(0x10e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x871c);
        EXPECT(gbc.pc(), 0x10eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00CB
        gbc.setState(0xc81e, 0x5c2c, 0xc4f0, 0xc23d, 0x960, 0x384b, 0x0, 0x0);
        gbc.writeMem(0xc81e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5c2c);
        EXPECT(gbc.pc(), 0xc820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81e), 0xcb);
        EXPECT(gbc.readMem(0xc81f), 0x30);
        // CB 30 00CC
        gbc.setState(0x37f6, 0xfaf3, 0x5a80, 0x753d, 0x3757, 0x36ee, 0x1, 0x0);
        gbc.writeMem(0x37f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfaf3);
        EXPECT(gbc.pc(), 0x37f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00CD
        gbc.setState(0xc996, 0xb44, 0x5b30, 0x4eef, 0xc4d0, 0x7225, 0x0, 0x1);
        gbc.writeMem(0xc996, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb44);
        EXPECT(gbc.pc(), 0xc998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc996), 0xcb);
        EXPECT(gbc.readMem(0xc997), 0x30);
        // CB 30 00CE
        gbc.setState(0x3d8b, 0xd488, 0x58f0, 0xbc6, 0x6bb9, 0xf42e, 0x1, 0x1);
        gbc.writeMem(0x3d8b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd488);
        EXPECT(gbc.pc(), 0x3d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00CF
        gbc.setState(0x7344, 0x8dc4, 0x5660, 0xd66a, 0xcaa8, 0x6dc5, 0x1, 0x0);
        gbc.writeMem(0x7344, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8dc4);
        EXPECT(gbc.pc(), 0x7346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00D0
        gbc.setState(0x9f42, 0x677a, 0xd5f0, 0x990, 0xf156, 0xcac9, 0x1, 0x0);
        gbc.writeMem(0x9f42, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x677a);
        EXPECT(gbc.pc(), 0x9f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f42), 0xcb);
        EXPECT(gbc.readMem(0x9f43), 0x30);
        // CB 30 00D1
        gbc.setState(0x5ffd, 0xb5ac, 0xce70, 0xebce, 0xa529, 0xdcb7, 0x0, 0x0);
        gbc.writeMem(0x5ffd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb5ac);
        EXPECT(gbc.pc(), 0x5fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00D2
        gbc.setState(0xe58f, 0x7c61, 0xdd10, 0x1375, 0xe6af, 0xafb6, 0x0, 0x0);
        gbc.writeMem(0xe58f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7c61);
        EXPECT(gbc.pc(), 0xe591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58f), 0xcb);
        EXPECT(gbc.readMem(0xe590), 0x30);
        // CB 30 00D3
        gbc.setState(0x3ec5, 0x2f5a, 0x8620, 0x4b94, 0x5811, 0x4538, 0x1, 0x1);
        gbc.writeMem(0x3ec5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2f5a);
        EXPECT(gbc.pc(), 0x3ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00D4
        gbc.setState(0xc53b, 0x167d, 0x14e0, 0xb4f0, 0x2e6a, 0x3794, 0x1, 0x0);
        gbc.writeMem(0xc53b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x167d);
        EXPECT(gbc.pc(), 0xc53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc53b), 0xcb);
        EXPECT(gbc.readMem(0xc53c), 0x30);
        // CB 30 00D5
        gbc.setState(0x8dc1, 0x7d45, 0x8ed0, 0xf51, 0xb37e, 0x1c1b, 0x1, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7d45);
        EXPECT(gbc.pc(), 0x8dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc1), 0xcb);
        EXPECT(gbc.readMem(0x8dc2), 0x30);
        // CB 30 00D6
        gbc.setState(0x8532, 0xa4c8, 0xea60, 0xa270, 0xf269, 0x954c, 0x1, 0x0);
        gbc.writeMem(0x8532, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa4c8);
        EXPECT(gbc.pc(), 0x8534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8532), 0xcb);
        EXPECT(gbc.readMem(0x8533), 0x30);
        // CB 30 00D7
        gbc.setState(0x7ce1, 0xf411, 0x6960, 0x4e9d, 0x12c2, 0x6800, 0x1, 0x0);
        gbc.writeMem(0x7ce1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf411);
        EXPECT(gbc.pc(), 0x7ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00D8
        gbc.setState(0x4901, 0xda58, 0x6dd0, 0x7e0c, 0xa319, 0x309, 0x0, 0x1);
        gbc.writeMem(0x4901, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xda58);
        EXPECT(gbc.pc(), 0x4903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00D9
        gbc.setState(0x98be, 0x856b, 0x8890, 0x3ec9, 0x38d1, 0xb4af, 0x1, 0x1);
        gbc.writeMem(0x98be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x856b);
        EXPECT(gbc.pc(), 0x98c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98be), 0xcb);
        EXPECT(gbc.readMem(0x98bf), 0x30);
        // CB 30 00DA
        gbc.setState(0xd1dd, 0xbdec, 0x79b0, 0x4456, 0xb33d, 0xcc79, 0x1, 0x1);
        gbc.writeMem(0xd1dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbdec);
        EXPECT(gbc.pc(), 0xd1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1dd), 0xcb);
        EXPECT(gbc.readMem(0xd1de), 0x30);
        // CB 30 00DD
        gbc.setState(0x2eba, 0x8d4, 0x5230, 0xcdbb, 0x173b, 0xc1b3, 0x0, 0x0);
        gbc.writeMem(0x2eba, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8d4);
        EXPECT(gbc.pc(), 0x2ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00DE
        gbc.setState(0x4019, 0x3a52, 0x5b90, 0x67a3, 0x1ce6, 0x6f00, 0x1, 0x0);
        gbc.writeMem(0x4019, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3a52);
        EXPECT(gbc.pc(), 0x401b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00DF
        gbc.setState(0x2121, 0x308b, 0x7f30, 0xd900, 0x46f4, 0x365e, 0x0, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x308b);
        EXPECT(gbc.pc(), 0x2123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00E0
        gbc.setState(0x904a, 0x8699, 0xf670, 0x8062, 0x61f0, 0xe032, 0x0, 0x1);
        gbc.writeMem(0x904a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8699);
        EXPECT(gbc.pc(), 0x904c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904a), 0xcb);
        EXPECT(gbc.readMem(0x904b), 0x30);
        // CB 30 00E2
        gbc.setState(0xbd68, 0xcc00, 0xafd0, 0xa482, 0xea62, 0xb44e, 0x1, 0x1);
        gbc.writeMem(0xbd68, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcc00);
        EXPECT(gbc.pc(), 0xbd6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd68), 0xcb);
        EXPECT(gbc.readMem(0xbd69), 0x30);
        // CB 30 00E3
        gbc.setState(0x3c40, 0x57be, 0xeef0, 0xbb72, 0xc26d, 0x50b3, 0x0, 0x1);
        gbc.writeMem(0x3c40, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x57be);
        EXPECT(gbc.pc(), 0x3c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00E4
        gbc.setState(0x7195, 0x2d61, 0x6210, 0x4724, 0x5147, 0x1257, 0x0, 0x0);
        gbc.writeMem(0x7195, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2d61);
        EXPECT(gbc.pc(), 0x7197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00E5
        gbc.setState(0x21ef, 0x764b, 0xdd0, 0x10d5, 0x32b, 0x287, 0x1, 0x1);
        gbc.writeMem(0x21ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x764b);
        EXPECT(gbc.pc(), 0x21f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00E6
        gbc.setState(0xc752, 0x6ce9, 0x7b70, 0xd2b0, 0xcd11, 0x7867, 0x1, 0x0);
        gbc.writeMem(0xc752, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6ce9);
        EXPECT(gbc.pc(), 0xc754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc752), 0xcb);
        EXPECT(gbc.readMem(0xc753), 0x30);
        // CB 30 00E7
        gbc.setState(0x75dd, 0xf365, 0x9590, 0x739a, 0x52a4, 0xc0ec, 0x1, 0x1);
        gbc.writeMem(0x75dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf365);
        EXPECT(gbc.pc(), 0x75df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00E8
        gbc.setState(0x62ef, 0xa23e, 0xc120, 0x3045, 0x1920, 0x7c16, 0x0, 0x1);
        gbc.writeMem(0x62ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa23e);
        EXPECT(gbc.pc(), 0x62f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00E9
        gbc.setState(0xd5d, 0x3d09, 0x4980, 0xf7f2, 0x6a7f, 0x7946, 0x0, 0x0);
        gbc.writeMem(0xd5d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3d09);
        EXPECT(gbc.pc(), 0xd5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00EB
        gbc.setState(0xde4e, 0xc2f5, 0xee50, 0x14ab, 0x74e9, 0x1423, 0x1, 0x0);
        gbc.writeMem(0xde4e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc2f5);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4e), 0xcb);
        EXPECT(gbc.readMem(0xde4f), 0x30);
        // CB 30 00ED
        gbc.setState(0xa6c4, 0xeb94, 0xebf0, 0xec45, 0x9878, 0x349, 0x0, 0x0);
        gbc.writeMem(0xa6c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xeb94);
        EXPECT(gbc.pc(), 0xa6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c4), 0xcb);
        EXPECT(gbc.readMem(0xa6c5), 0x30);
        // CB 30 00EE
        gbc.setState(0x55f8, 0x72ec, 0x5c20, 0x5c99, 0x43de, 0x38e6, 0x0, 0x1);
        gbc.writeMem(0x55f8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x72ec);
        EXPECT(gbc.pc(), 0x55fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00EF
        gbc.setState(0xe911, 0xf612, 0x5850, 0xd1ad, 0xe896, 0x4590, 0x0, 0x0);
        gbc.writeMem(0xe911, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf612);
        EXPECT(gbc.pc(), 0xe913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe911), 0xcb);
        EXPECT(gbc.readMem(0xe912), 0x30);
        // CB 30 00F1
        gbc.setState(0xef5c, 0xebc2, 0x9e30, 0x3db0, 0x524, 0xfa55, 0x1, 0x1);
        gbc.writeMem(0xef5c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xebc2);
        EXPECT(gbc.pc(), 0xef5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5c), 0xcb);
        EXPECT(gbc.readMem(0xef5d), 0x30);
        // CB 30 00F2
        gbc.setState(0x118c, 0x5d0b, 0x9230, 0x8638, 0xf9c9, 0x3173, 0x1, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5d0b);
        EXPECT(gbc.pc(), 0x118e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00F3
        gbc.setState(0x5635, 0x1ab, 0xb360, 0xecc8, 0x5d88, 0x9973, 0x1, 0x0);
        gbc.writeMem(0x5635, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1ab);
        EXPECT(gbc.pc(), 0x5637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00F4
        gbc.setState(0xc7c5, 0x5be2, 0xcfb0, 0xf71b, 0x26fb, 0xcdda, 0x1, 0x0);
        gbc.writeMem(0xc7c5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5be2);
        EXPECT(gbc.pc(), 0xc7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c5), 0xcb);
        EXPECT(gbc.readMem(0xc7c6), 0x30);
        // CB 30 00F5
        gbc.setState(0xacca, 0xc73e, 0xfb60, 0x12a5, 0x7c70, 0xe7d4, 0x1, 0x0);
        gbc.writeMem(0xacca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc73e);
        EXPECT(gbc.pc(), 0xaccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacca), 0xcb);
        EXPECT(gbc.readMem(0xaccb), 0x30);
        // CB 30 00F6
        gbc.setState(0x26f1, 0x450b, 0x7010, 0x754a, 0x4fa4, 0xc24c, 0x0, 0x1);
        gbc.writeMem(0x26f1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x450b);
        EXPECT(gbc.pc(), 0x26f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00F7
        gbc.setState(0xabf, 0xdb35, 0xcb90, 0x56a2, 0x2197, 0xe66f, 0x1, 0x1);
        gbc.writeMem(0xabf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdb35);
        EXPECT(gbc.pc(), 0xac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00F8
        gbc.setState(0x2668, 0x88d8, 0xf470, 0x93a8, 0x4531, 0x399a, 0x0, 0x0);
        gbc.writeMem(0x2668, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x88d8);
        EXPECT(gbc.pc(), 0x266a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00F9
        gbc.setState(0x30d0, 0x1737, 0x5f30, 0x65d7, 0xab8c, 0x20ab, 0x0, 0x1);
        gbc.writeMem(0x30d0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1737);
        EXPECT(gbc.pc(), 0x30d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00FA
        gbc.setState(0xa0f6, 0xd5e6, 0xef20, 0xe6ec, 0x6db8, 0x251c, 0x0, 0x0);
        gbc.writeMem(0xa0f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd5e6);
        EXPECT(gbc.pc(), 0xa0f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f6), 0xcb);
        EXPECT(gbc.readMem(0xa0f7), 0x30);
        // CB 30 00FB
        gbc.setState(0x4ead, 0x6c95, 0x9840, 0xf03a, 0x55f, 0xf41a, 0x0, 0x0);
        gbc.writeMem(0x4ead, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6c95);
        EXPECT(gbc.pc(), 0x4eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00FC
        gbc.setState(0x224b, 0xebcf, 0x75c0, 0x4da4, 0x9a77, 0x9e70, 0x0, 0x0);
        gbc.writeMem(0x224b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xebcf);
        EXPECT(gbc.pc(), 0x224d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 00FD
        gbc.setState(0xa5d5, 0xde1f, 0x160, 0x1621, 0xec1b, 0x3c7f, 0x1, 0x1);
        gbc.writeMem(0xa5d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xde1f);
        EXPECT(gbc.pc(), 0xa5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d5), 0xcb);
        EXPECT(gbc.readMem(0xa5d6), 0x30);
        // CB 30 00FE
        gbc.setState(0xae3c, 0xe5e5, 0xd4e0, 0x422c, 0xb7e2, 0x42f5, 0x1, 0x0);
        gbc.writeMem(0xae3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe5e5);
        EXPECT(gbc.pc(), 0xae3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3c), 0xcb);
        EXPECT(gbc.readMem(0xae3d), 0x30);
        // CB 30 00FF
        gbc.setState(0xee52, 0x1d66, 0x1d70, 0x3007, 0xafb3, 0x2cfd, 0x0, 0x1);
        gbc.writeMem(0xee52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1d66);
        EXPECT(gbc.pc(), 0xee54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee52), 0xcb);
        EXPECT(gbc.readMem(0xee53), 0x30);
        // CB 30 0100
        gbc.setState(0x580, 0xf4c1, 0xc9d0, 0x2e9a, 0x3430, 0x9a74, 0x0, 0x1);
        gbc.writeMem(0x580, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf4c1);
        EXPECT(gbc.pc(), 0x582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0101
        gbc.setState(0x4c88, 0x216a, 0xd6e0, 0x4e59, 0x76d1, 0xbf54, 0x1, 0x0);
        gbc.writeMem(0x4c88, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x216a);
        EXPECT(gbc.pc(), 0x4c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0102
        gbc.setState(0x382c, 0x3514, 0xb700, 0xcaa5, 0xaafd, 0x70cf, 0x0, 0x1);
        gbc.writeMem(0x382c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3514);
        EXPECT(gbc.pc(), 0x382e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0103
        gbc.setState(0x3136, 0x613b, 0xd220, 0xc842, 0x7ba2, 0x3e0f, 0x1, 0x0);
        gbc.writeMem(0x3136, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x613b);
        EXPECT(gbc.pc(), 0x3138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0104
        gbc.setState(0xee34, 0xb71d, 0xe160, 0x33aa, 0x734f, 0xba46, 0x0, 0x0);
        gbc.writeMem(0xee34, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb71d);
        EXPECT(gbc.pc(), 0xee36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee34), 0xcb);
        EXPECT(gbc.readMem(0xee35), 0x30);
        // CB 30 0105
        gbc.setState(0x1347, 0xcbe1, 0x5620, 0xf24, 0x53ee, 0xdece, 0x1, 0x0);
        gbc.writeMem(0x1347, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcbe1);
        EXPECT(gbc.pc(), 0x1349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0106
        gbc.setState(0x9536, 0x4edd, 0xf470, 0x30af, 0xa12d, 0x49d5, 0x1, 0x0);
        gbc.writeMem(0x9536, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4edd);
        EXPECT(gbc.pc(), 0x9538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9536), 0xcb);
        EXPECT(gbc.readMem(0x9537), 0x30);
        // CB 30 0107
        gbc.setState(0xbe52, 0xef25, 0x9610, 0x3144, 0xc440, 0x9351, 0x0, 0x1);
        gbc.writeMem(0xbe52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xef25);
        EXPECT(gbc.pc(), 0xbe54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe52), 0xcb);
        EXPECT(gbc.readMem(0xbe53), 0x30);
        // CB 30 0108
        gbc.setState(0x711, 0x56e7, 0xf30, 0xad64, 0x3e60, 0xf54, 0x0, 0x1);
        gbc.writeMem(0x711, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x56e7);
        EXPECT(gbc.pc(), 0x713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0109
        gbc.setState(0xa269, 0xfa45, 0x26f0, 0xa97b, 0xb93, 0x4c64, 0x0, 0x0);
        gbc.writeMem(0xa269, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfa45);
        EXPECT(gbc.pc(), 0xa26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa269), 0xcb);
        EXPECT(gbc.readMem(0xa26a), 0x30);
        // CB 30 010A
        gbc.setState(0x8df1, 0xe374, 0x6070, 0xb342, 0x5950, 0x56cd, 0x0, 0x0);
        gbc.writeMem(0x8df1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe374);
        EXPECT(gbc.pc(), 0x8df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df1), 0xcb);
        EXPECT(gbc.readMem(0x8df2), 0x30);
        // CB 30 010B
        gbc.setState(0x8eda, 0x4ecb, 0xfdb0, 0x2b0e, 0xec52, 0x2fe2, 0x0, 0x1);
        gbc.writeMem(0x8eda, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4ecb);
        EXPECT(gbc.pc(), 0x8edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eda), 0xcb);
        EXPECT(gbc.readMem(0x8edb), 0x30);
        // CB 30 010C
        gbc.setState(0xbddd, 0xced6, 0x4360, 0x5d5c, 0x4bc, 0x966f, 0x1, 0x1);
        gbc.writeMem(0xbddd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xced6);
        EXPECT(gbc.pc(), 0xbddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddd), 0xcb);
        EXPECT(gbc.readMem(0xbdde), 0x30);
        // CB 30 010D
        gbc.setState(0x2df, 0xd762, 0x16f0, 0x3fb7, 0xa67a, 0xe354, 0x1, 0x0);
        gbc.writeMem(0x2df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd762);
        EXPECT(gbc.pc(), 0x2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 010E
        gbc.setState(0xd22e, 0x1693, 0x39a0, 0x654, 0x6ea3, 0x2590, 0x1, 0x0);
        gbc.writeMem(0xd22e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1693);
        EXPECT(gbc.pc(), 0xd230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22e), 0xcb);
        EXPECT(gbc.readMem(0xd22f), 0x30);
        // CB 30 010F
        gbc.setState(0x38f3, 0xb962, 0xe040, 0x35bc, 0x9e4b, 0x6c01, 0x0, 0x0);
        gbc.writeMem(0x38f3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb962);
        EXPECT(gbc.pc(), 0x38f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0110
        gbc.setState(0x38c, 0x86b7, 0x98a0, 0xa116, 0x82b7, 0xafd, 0x0, 0x1);
        gbc.writeMem(0x38c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x86b7);
        EXPECT(gbc.pc(), 0x38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0111
        gbc.setState(0x6d44, 0xbee6, 0xe620, 0x7776, 0x57ce, 0xb9f9, 0x0, 0x0);
        gbc.writeMem(0x6d44, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbee6);
        EXPECT(gbc.pc(), 0x6d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0112
        gbc.setState(0xa364, 0x423, 0x4d90, 0xab0, 0x3746, 0xa8cf, 0x0, 0x0);
        gbc.writeMem(0xa364, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x423);
        EXPECT(gbc.pc(), 0xa366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa364), 0xcb);
        EXPECT(gbc.readMem(0xa365), 0x30);
        // CB 30 0113
        gbc.setState(0x7a64, 0x83ea, 0xa500, 0x3f4d, 0x2051, 0x661c, 0x0, 0x0);
        gbc.writeMem(0x7a64, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x83ea);
        EXPECT(gbc.pc(), 0x7a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0114
        gbc.setState(0xa3fe, 0xe9e6, 0xcc80, 0x902e, 0xf7f2, 0xda1a, 0x1, 0x1);
        gbc.writeMem(0xa3fe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe9e6);
        EXPECT(gbc.pc(), 0xa400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fe), 0xcb);
        EXPECT(gbc.readMem(0xa3ff), 0x30);
        // CB 30 0115
        gbc.setState(0xd66, 0xd101, 0x56f0, 0x2431, 0x65da, 0xb125, 0x0, 0x1);
        gbc.writeMem(0xd66, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd101);
        EXPECT(gbc.pc(), 0xd68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0116
        gbc.setState(0x7b76, 0x2ef9, 0xdf0, 0x20eb, 0x5565, 0x9016, 0x0, 0x0);
        gbc.writeMem(0x7b76, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2ef9);
        EXPECT(gbc.pc(), 0x7b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0117
        gbc.setState(0xabd3, 0x8631, 0x4000, 0xd82d, 0xbea3, 0x343d, 0x1, 0x1);
        gbc.writeMem(0xabd3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8631);
        EXPECT(gbc.pc(), 0xabd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd3), 0xcb);
        EXPECT(gbc.readMem(0xabd4), 0x30);
        // CB 30 0118
        gbc.setState(0x5c89, 0xd176, 0xe410, 0xbc6a, 0xf4a3, 0x94ed, 0x1, 0x0);
        gbc.writeMem(0x5c89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd176);
        EXPECT(gbc.pc(), 0x5c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0119
        gbc.setState(0xcd0c, 0xd4db, 0x380, 0x4e7f, 0xc26, 0x6f8f, 0x0, 0x1);
        gbc.writeMem(0xcd0c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd4db);
        EXPECT(gbc.pc(), 0xcd0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0c), 0xcb);
        EXPECT(gbc.readMem(0xcd0d), 0x30);
        // CB 30 011A
        gbc.setState(0x5e87, 0xf31d, 0x8be0, 0x14be, 0xfcce, 0xa9d3, 0x0, 0x0);
        gbc.writeMem(0x5e87, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf31d);
        EXPECT(gbc.pc(), 0x5e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 011B
        gbc.setState(0x68dc, 0x2582, 0xb0b0, 0xc50c, 0xb3ca, 0x5342, 0x0, 0x0);
        gbc.writeMem(0x68dc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2582);
        EXPECT(gbc.pc(), 0x68de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 011C
        gbc.setState(0x5c85, 0xc984, 0x98a0, 0xa248, 0xab66, 0x22c9, 0x1, 0x1);
        gbc.writeMem(0x5c85, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc984);
        EXPECT(gbc.pc(), 0x5c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 011D
        gbc.setState(0xca82, 0x6a15, 0x89b0, 0x9838, 0xe4c5, 0x7c9e, 0x1, 0x1);
        gbc.writeMem(0xca82, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6a15);
        EXPECT(gbc.pc(), 0xca84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca82), 0xcb);
        EXPECT(gbc.readMem(0xca83), 0x30);
        // CB 30 011E
        gbc.setState(0x242e, 0x5f6f, 0x61d0, 0x90c, 0xdf05, 0xbd8e, 0x1, 0x1);
        gbc.writeMem(0x242e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5f6f);
        EXPECT(gbc.pc(), 0x2430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 011F
        gbc.setState(0x3c8b, 0x8145, 0x3190, 0x9ce0, 0x4cd3, 0x4c0e, 0x1, 0x1);
        gbc.writeMem(0x3c8b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8145);
        EXPECT(gbc.pc(), 0x3c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0120
        gbc.setState(0x457c, 0xac4, 0x95d0, 0xd8c, 0x5d55, 0xd2e5, 0x1, 0x1);
        gbc.writeMem(0x457c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xac4);
        EXPECT(gbc.pc(), 0x457e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0121
        gbc.setState(0x4c80, 0x9c71, 0x8e20, 0x6583, 0x4837, 0xffe0, 0x1, 0x0);
        gbc.writeMem(0x4c80, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9c71);
        EXPECT(gbc.pc(), 0x4c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0122
        gbc.setState(0x542c, 0xf8de, 0x97d0, 0x1987, 0x9f11, 0x5381, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf8de);
        EXPECT(gbc.pc(), 0x542e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0123
        gbc.setState(0xde97, 0x6cc6, 0xf040, 0x9913, 0x8ff2, 0xa1d1, 0x1, 0x1);
        gbc.writeMem(0xde97, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6cc6);
        EXPECT(gbc.pc(), 0xde99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde97), 0xcb);
        EXPECT(gbc.readMem(0xde98), 0x30);
        // CB 30 0124
        gbc.setState(0x2709, 0x5c17, 0xa260, 0x73d3, 0x8061, 0xf02e, 0x0, 0x1);
        gbc.writeMem(0x2709, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5c17);
        EXPECT(gbc.pc(), 0x270b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0125
        gbc.setState(0xde8f, 0x328e, 0xbb00, 0x3e8c, 0x9721, 0xb962, 0x1, 0x1);
        gbc.writeMem(0xde8f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x328e);
        EXPECT(gbc.pc(), 0xde91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8f), 0xcb);
        EXPECT(gbc.readMem(0xde90), 0x30);
        // CB 30 0126
        gbc.setState(0x372d, 0x733e, 0x6d0, 0xf7d5, 0xab73, 0x3215, 0x1, 0x1);
        gbc.writeMem(0x372d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x733e);
        EXPECT(gbc.pc(), 0x372f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0127
        gbc.setState(0x41ad, 0x94b0, 0x57d0, 0xc3df, 0x8bad, 0xeb56, 0x1, 0x1);
        gbc.writeMem(0x41ad, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0x41af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0128
        gbc.setState(0xbda1, 0x48e9, 0x1d90, 0xe2e2, 0x8312, 0x4f96, 0x1, 0x0);
        gbc.writeMem(0xbda1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x48e9);
        EXPECT(gbc.pc(), 0xbda3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda1), 0xcb);
        EXPECT(gbc.readMem(0xbda2), 0x30);
        // CB 30 0129
        gbc.setState(0x5bb9, 0xb01a, 0xe6f0, 0x952d, 0x5083, 0xf326, 0x0, 0x0);
        gbc.writeMem(0x5bb9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb01a);
        EXPECT(gbc.pc(), 0x5bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 012A
        gbc.setState(0x3684, 0x58c1, 0x2f30, 0x5377, 0xc7e9, 0xd668, 0x1, 0x1);
        gbc.writeMem(0x3684, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x58c1);
        EXPECT(gbc.pc(), 0x3686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 012B
        gbc.setState(0x2f3c, 0x927e, 0x53b0, 0x5b92, 0xc36a, 0xa2ff, 0x0, 0x1);
        gbc.writeMem(0x2f3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x927e);
        EXPECT(gbc.pc(), 0x2f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 012D
        gbc.setState(0x1b78, 0xed30, 0x8690, 0x328c, 0xa787, 0xa93f, 0x1, 0x1);
        gbc.writeMem(0x1b78, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xed30);
        EXPECT(gbc.pc(), 0x1b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 012E
        gbc.setState(0xc85d, 0x4bdd, 0x9e90, 0x1b7d, 0xc1eb, 0x810b, 0x0, 0x1);
        gbc.writeMem(0xc85d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4bdd);
        EXPECT(gbc.pc(), 0xc85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85d), 0xcb);
        EXPECT(gbc.readMem(0xc85e), 0x30);
        // CB 30 012F
        gbc.setState(0xd5e0, 0x85cd, 0x7940, 0xebed, 0x7ff2, 0xc486, 0x1, 0x0);
        gbc.writeMem(0xd5e0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x85cd);
        EXPECT(gbc.pc(), 0xd5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e0), 0xcb);
        EXPECT(gbc.readMem(0xd5e1), 0x30);
        // CB 30 0130
        gbc.setState(0x554, 0x2301, 0x3010, 0xeaa8, 0x4110, 0xafcc, 0x1, 0x0);
        gbc.writeMem(0x554, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2301);
        EXPECT(gbc.pc(), 0x556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0131
        gbc.setState(0x21bc, 0x3949, 0xf1b0, 0x7e4d, 0x28f8, 0x35af, 0x0, 0x0);
        gbc.writeMem(0x21bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3949);
        EXPECT(gbc.pc(), 0x21be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0132
        gbc.setState(0x7ce5, 0xb5bc, 0x3800, 0x4c32, 0x47da, 0xcca8, 0x0, 0x0);
        gbc.writeMem(0x7ce5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb5bc);
        EXPECT(gbc.pc(), 0x7ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0133
        gbc.setState(0x616d, 0x5df7, 0x8d70, 0x18a, 0x65fd, 0xbb9f, 0x0, 0x0);
        gbc.writeMem(0x616d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5df7);
        EXPECT(gbc.pc(), 0x616f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0134
        gbc.setState(0xdfcd, 0xdbdc, 0x3f80, 0x5bab, 0xbee4, 0x1dd5, 0x1, 0x0);
        gbc.writeMem(0xdfcd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdbdc);
        EXPECT(gbc.pc(), 0xdfcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfcd), 0xcb);
        EXPECT(gbc.readMem(0xdfce), 0x30);
        // CB 30 0135
        gbc.setState(0x4436, 0xbc76, 0x51b0, 0xfbd5, 0x6f2f, 0xed4, 0x0, 0x0);
        gbc.writeMem(0x4436, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbc76);
        EXPECT(gbc.pc(), 0x4438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0137
        gbc.setState(0x47c0, 0xcb82, 0x310, 0xc7d, 0xfeaa, 0x8999, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcb82);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0138
        gbc.setState(0xed68, 0x2168, 0x1860, 0xce9c, 0x137f, 0x5b4d, 0x0, 0x0);
        gbc.writeMem(0xed68, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2168);
        EXPECT(gbc.pc(), 0xed6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed68), 0xcb);
        EXPECT(gbc.readMem(0xed69), 0x30);
        // CB 30 0139
        gbc.setState(0xb0b9, 0xe74f, 0xa480, 0xfb1, 0x735a, 0x44db, 0x0, 0x0);
        gbc.writeMem(0xb0b9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe74f);
        EXPECT(gbc.pc(), 0xb0bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b9), 0xcb);
        EXPECT(gbc.readMem(0xb0ba), 0x30);
        // CB 30 013A
        gbc.setState(0x3581, 0x1b8, 0xaf90, 0x2ac7, 0xd455, 0xab6b, 0x0, 0x1);
        gbc.writeMem(0x3581, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1b8);
        EXPECT(gbc.pc(), 0x3583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 013B
        gbc.setState(0x75ee, 0xbffd, 0x680, 0xd9f7, 0xf06d, 0x6a46, 0x0, 0x0);
        gbc.writeMem(0x75ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbffd);
        EXPECT(gbc.pc(), 0x75f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 013C
        gbc.setState(0xebe9, 0x7d4a, 0x1100, 0x881e, 0x467, 0x8fd0, 0x1, 0x1);
        gbc.writeMem(0xebe9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7d4a);
        EXPECT(gbc.pc(), 0xebeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe9), 0xcb);
        EXPECT(gbc.readMem(0xebea), 0x30);
        // CB 30 013D
        gbc.setState(0x3263, 0x2f4e, 0xc9f0, 0x624d, 0x469f, 0x2f57, 0x1, 0x0);
        gbc.writeMem(0x3263, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f4e);
        EXPECT(gbc.pc(), 0x3265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 013E
        gbc.setState(0x444, 0xc170, 0x2380, 0x3422, 0x5110, 0x24a0, 0x0, 0x0);
        gbc.writeMem(0x444, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc170);
        EXPECT(gbc.pc(), 0x446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 013F
        gbc.setState(0x8674, 0xc1cc, 0xb200, 0x108e, 0x4e8f, 0x390, 0x1, 0x0);
        gbc.writeMem(0x8674, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc1cc);
        EXPECT(gbc.pc(), 0x8676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8674), 0xcb);
        EXPECT(gbc.readMem(0x8675), 0x30);
        // CB 30 0140
        gbc.setState(0x453d, 0x66d, 0x3b50, 0x31e2, 0xde52, 0x9b73, 0x0, 0x1);
        gbc.writeMem(0x453d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x66d);
        EXPECT(gbc.pc(), 0x453f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0141
        gbc.setState(0x30ee, 0x70a0, 0xce70, 0x83b9, 0xd104, 0xfe7f, 0x0, 0x1);
        gbc.writeMem(0x30ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x70a0);
        EXPECT(gbc.pc(), 0x30f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0142
        gbc.setState(0x1ec6, 0xe10c, 0xf180, 0xceb2, 0x7575, 0x4915, 0x1, 0x1);
        gbc.writeMem(0x1ec6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe10c);
        EXPECT(gbc.pc(), 0x1ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0143
        gbc.setState(0xa7ef, 0x1867, 0xb840, 0xbcf5, 0xa5ea, 0xa523, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1867);
        EXPECT(gbc.pc(), 0xa7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ef), 0xcb);
        EXPECT(gbc.readMem(0xa7f0), 0x30);
        // CB 30 0144
        gbc.setState(0x2094, 0x5a3f, 0x9df0, 0xa428, 0x8d, 0xebed, 0x1, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5a3f);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0145
        gbc.setState(0xa050, 0x4f06, 0x47c0, 0x101, 0x1dbf, 0x4b84, 0x0, 0x0);
        gbc.writeMem(0xa050, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4f06);
        EXPECT(gbc.pc(), 0xa052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa050), 0xcb);
        EXPECT(gbc.readMem(0xa051), 0x30);
        // CB 30 0146
        gbc.setState(0x3812, 0xd160, 0x4e20, 0xfbaf, 0x4c2c, 0xf836, 0x0, 0x1);
        gbc.writeMem(0x3812, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd160);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0147
        gbc.setState(0x28ce, 0x3ed7, 0xcaf0, 0x5bae, 0x9419, 0xcb45, 0x1, 0x0);
        gbc.writeMem(0x28ce, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3ed7);
        EXPECT(gbc.pc(), 0x28d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0148
        gbc.setState(0x87fc, 0xa79b, 0x1ed0, 0xf958, 0x79a3, 0x51ca, 0x0, 0x1);
        gbc.writeMem(0x87fc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa79b);
        EXPECT(gbc.pc(), 0x87fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87fc), 0xcb);
        EXPECT(gbc.readMem(0x87fd), 0x30);
        // CB 30 0149
        gbc.setState(0xa3cb, 0x5a0c, 0xb290, 0xeb66, 0x6d29, 0x2417, 0x1, 0x0);
        gbc.writeMem(0xa3cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5a0c);
        EXPECT(gbc.pc(), 0xa3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3cb), 0xcb);
        EXPECT(gbc.readMem(0xa3cc), 0x30);
        // CB 30 014A
        gbc.setState(0xb98, 0x3079, 0xdab0, 0xaf82, 0xbe19, 0xb4eb, 0x1, 0x0);
        gbc.writeMem(0xb98, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3079);
        EXPECT(gbc.pc(), 0xb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 014B
        gbc.setState(0xb1c0, 0x2a1c, 0x3b50, 0xb845, 0xd45f, 0x9ea4, 0x0, 0x0);
        gbc.writeMem(0xb1c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2a1c);
        EXPECT(gbc.pc(), 0xb1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c0), 0xcb);
        EXPECT(gbc.readMem(0xb1c1), 0x30);
        // CB 30 014C
        gbc.setState(0xb663, 0x7bd8, 0x3240, 0x9745, 0xcdc9, 0x1c08, 0x1, 0x1);
        gbc.writeMem(0xb663, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7bd8);
        EXPECT(gbc.pc(), 0xb665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb663), 0xcb);
        EXPECT(gbc.readMem(0xb664), 0x30);
        // CB 30 014D
        gbc.setState(0xa93e, 0x9259, 0xed20, 0x3dd7, 0xd2bf, 0xabb9, 0x0, 0x1);
        gbc.writeMem(0xa93e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9259);
        EXPECT(gbc.pc(), 0xa940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93e), 0xcb);
        EXPECT(gbc.readMem(0xa93f), 0x30);
        // CB 30 014E
        gbc.setState(0x24c2, 0x7e54, 0x1410, 0x4e02, 0xd562, 0x89e7, 0x1, 0x1);
        gbc.writeMem(0x24c2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7e54);
        EXPECT(gbc.pc(), 0x24c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 014F
        gbc.setState(0x282b, 0x45cd, 0x5840, 0x9fe4, 0xde2a, 0x29b9, 0x1, 0x1);
        gbc.writeMem(0x282b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x45cd);
        EXPECT(gbc.pc(), 0x282d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0150
        gbc.setState(0x66c8, 0x693e, 0x5ab0, 0x94dc, 0xf91, 0xccf, 0x0, 0x0);
        gbc.writeMem(0x66c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x693e);
        EXPECT(gbc.pc(), 0x66ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0151
        gbc.setState(0x36ca, 0x4138, 0xfed0, 0xf, 0xb40d, 0x7689, 0x1, 0x1);
        gbc.writeMem(0x36ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4138);
        EXPECT(gbc.pc(), 0x36cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0152
        gbc.setState(0x9e63, 0x7977, 0x9ec0, 0x2b31, 0xa8ec, 0x717f, 0x1, 0x0);
        gbc.writeMem(0x9e63, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7977);
        EXPECT(gbc.pc(), 0x9e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e63), 0xcb);
        EXPECT(gbc.readMem(0x9e64), 0x30);
        // CB 30 0153
        gbc.setState(0x1f2b, 0xeb19, 0x6c80, 0x8d87, 0xb6de, 0xcb15, 0x1, 0x0);
        gbc.writeMem(0x1f2b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xeb19);
        EXPECT(gbc.pc(), 0x1f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0154
        gbc.setState(0x71cf, 0x9f6a, 0xb140, 0x6dc5, 0xc9d9, 0xac80, 0x0, 0x0);
        gbc.writeMem(0x71cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9f6a);
        EXPECT(gbc.pc(), 0x71d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0155
        gbc.setState(0x14a9, 0x37a5, 0x31a0, 0x9376, 0xd349, 0xffd2, 0x0, 0x1);
        gbc.writeMem(0x14a9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x37a5);
        EXPECT(gbc.pc(), 0x14ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0157
        gbc.setState(0xb8fa, 0xc6e8, 0xc980, 0xee23, 0x446, 0x579, 0x0, 0x0);
        gbc.writeMem(0xb8fa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc6e8);
        EXPECT(gbc.pc(), 0xb8fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fa), 0xcb);
        EXPECT(gbc.readMem(0xb8fb), 0x30);
        // CB 30 0158
        gbc.setState(0x4925, 0x8dc2, 0x9cd0, 0x6525, 0x83c3, 0xb9d1, 0x1, 0x0);
        gbc.writeMem(0x4925, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8dc2);
        EXPECT(gbc.pc(), 0x4927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0159
        gbc.setState(0x111e, 0x2423, 0xca00, 0xbdab, 0x71f6, 0xe92, 0x1, 0x1);
        gbc.writeMem(0x111e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2423);
        EXPECT(gbc.pc(), 0x1120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 015A
        gbc.setState(0x3cd1, 0x6528, 0xc190, 0xb261, 0xad9f, 0x1e46, 0x1, 0x1);
        gbc.writeMem(0x3cd1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6528);
        EXPECT(gbc.pc(), 0x3cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 015B
        gbc.setState(0xbc9d, 0x8fb7, 0xf4e0, 0xe508, 0x13e9, 0xfe56, 0x0, 0x0);
        gbc.writeMem(0xbc9d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8fb7);
        EXPECT(gbc.pc(), 0xbc9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9d), 0xcb);
        EXPECT(gbc.readMem(0xbc9e), 0x30);
        // CB 30 015C
        gbc.setState(0x5be3, 0xbeab, 0x5e10, 0x489f, 0xbf5d, 0xb4e1, 0x0, 0x1);
        gbc.writeMem(0x5be3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbeab);
        EXPECT(gbc.pc(), 0x5be5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 015D
        gbc.setState(0x6afd, 0x6a60, 0x8680, 0x6ff4, 0x4694, 0x2937, 0x0, 0x1);
        gbc.writeMem(0x6afd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6a60);
        EXPECT(gbc.pc(), 0x6aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 015E
        gbc.setState(0x5797, 0x43f6, 0xf130, 0xcf87, 0x999c, 0xd674, 0x0, 0x1);
        gbc.writeMem(0x5797, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x43f6);
        EXPECT(gbc.pc(), 0x5799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 015F
        gbc.setState(0x1b13, 0xe7aa, 0xfa20, 0x1e5d, 0xf3ef, 0xa45f, 0x0, 0x0);
        gbc.writeMem(0x1b13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe7aa);
        EXPECT(gbc.pc(), 0x1b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0160
        gbc.setState(0x8b0, 0x2ba8, 0xd9b0, 0xbe43, 0x4798, 0x22fe, 0x1, 0x1);
        gbc.writeMem(0x8b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2ba8);
        EXPECT(gbc.pc(), 0x8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0161
        gbc.setState(0x8208, 0xc6d3, 0x39c0, 0x3fe, 0x491, 0x57f1, 0x1, 0x1);
        gbc.writeMem(0x8208, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc6d3);
        EXPECT(gbc.pc(), 0x820a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8208), 0xcb);
        EXPECT(gbc.readMem(0x8209), 0x30);
        // CB 30 0163
        gbc.setState(0x1fe0, 0x51b1, 0x2b30, 0xd1c2, 0xd63f, 0x1488, 0x1, 0x0);
        gbc.writeMem(0x1fe0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x51b1);
        EXPECT(gbc.pc(), 0x1fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0164
        gbc.setState(0x1398, 0x8e67, 0x1cc0, 0x9ea, 0xe64f, 0xd855, 0x0, 0x0);
        gbc.writeMem(0x1398, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8e67);
        EXPECT(gbc.pc(), 0x139a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0165
        gbc.setState(0x91d2, 0x9865, 0x8980, 0xfadf, 0x4bb1, 0x14a0, 0x1, 0x1);
        gbc.writeMem(0x91d2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9865);
        EXPECT(gbc.pc(), 0x91d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d2), 0xcb);
        EXPECT(gbc.readMem(0x91d3), 0x30);
        // CB 30 0166
        gbc.setState(0xe3e2, 0xf9b5, 0xbb40, 0x8a70, 0x5b5b, 0x131e, 0x0, 0x0);
        gbc.writeMem(0xe3e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf9b5);
        EXPECT(gbc.pc(), 0xe3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e2), 0xcb);
        EXPECT(gbc.readMem(0xe3e3), 0x30);
        // CB 30 0168
        gbc.setState(0x27ee, 0x729c, 0x70d0, 0xf398, 0x8c6, 0x4c93, 0x0, 0x0);
        gbc.writeMem(0x27ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x729c);
        EXPECT(gbc.pc(), 0x27f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0169
        gbc.setState(0xcb67, 0x8274, 0xb1c0, 0xdd54, 0xb6ed, 0x857c, 0x1, 0x1);
        gbc.writeMem(0xcb67, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8274);
        EXPECT(gbc.pc(), 0xcb69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb67), 0xcb);
        EXPECT(gbc.readMem(0xcb68), 0x30);
        // CB 30 016A
        gbc.setState(0x9066, 0x17d7, 0xbcc0, 0xc85, 0x2f94, 0xa023, 0x1, 0x0);
        gbc.writeMem(0x9066, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x17d7);
        EXPECT(gbc.pc(), 0x9068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9066), 0xcb);
        EXPECT(gbc.readMem(0x9067), 0x30);
        // CB 30 016B
        gbc.setState(0xe713, 0x4d5d, 0x80b0, 0x829e, 0x764e, 0x3c4b, 0x1, 0x1);
        gbc.writeMem(0xe713, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4d5d);
        EXPECT(gbc.pc(), 0xe715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe713), 0xcb);
        EXPECT(gbc.readMem(0xe714), 0x30);
        // CB 30 016C
        gbc.setState(0x868a, 0xa81, 0x4fb0, 0x8933, 0x2849, 0x3c4d, 0x1, 0x0);
        gbc.writeMem(0x868a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa81);
        EXPECT(gbc.pc(), 0x868c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868a), 0xcb);
        EXPECT(gbc.readMem(0x868b), 0x30);
        // CB 30 016D
        gbc.setState(0xcd8d, 0x2999, 0xc410, 0x9ed2, 0xc5c7, 0x278f, 0x1, 0x0);
        gbc.writeMem(0xcd8d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2999);
        EXPECT(gbc.pc(), 0xcd8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8d), 0xcb);
        EXPECT(gbc.readMem(0xcd8e), 0x30);
        // CB 30 016E
        gbc.setState(0xb379, 0x8fb, 0xdfa0, 0x7c88, 0x2493, 0xde22, 0x0, 0x1);
        gbc.writeMem(0xb379, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8fb);
        EXPECT(gbc.pc(), 0xb37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb379), 0xcb);
        EXPECT(gbc.readMem(0xb37a), 0x30);
        // CB 30 016F
        gbc.setState(0x5983, 0xafa0, 0x5a00, 0x4bdd, 0xce4a, 0xab64, 0x1, 0x0);
        gbc.writeMem(0x5983, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xafa0);
        EXPECT(gbc.pc(), 0x5985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0170
        gbc.setState(0x14ca, 0xb3de, 0x49e0, 0x2872, 0xfda0, 0x83fd, 0x0, 0x1);
        gbc.writeMem(0x14ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb3de);
        EXPECT(gbc.pc(), 0x14cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0171
        gbc.setState(0xcc3b, 0x4322, 0x9860, 0xe743, 0xb5c2, 0x895, 0x1, 0x1);
        gbc.writeMem(0xcc3b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4322);
        EXPECT(gbc.pc(), 0xcc3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3b), 0xcb);
        EXPECT(gbc.readMem(0xcc3c), 0x30);
        // CB 30 0172
        gbc.setState(0xa005, 0x8530, 0x8340, 0x9877, 0x913b, 0xab9c, 0x0, 0x0);
        gbc.writeMem(0xa005, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8530);
        EXPECT(gbc.pc(), 0xa007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa005), 0xcb);
        EXPECT(gbc.readMem(0xa006), 0x30);
        // CB 30 0173
        gbc.setState(0x94dd, 0xd3a4, 0xff10, 0x9425, 0xae5a, 0xe29d, 0x1, 0x0);
        gbc.writeMem(0x94dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd3a4);
        EXPECT(gbc.pc(), 0x94df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94dd), 0xcb);
        EXPECT(gbc.readMem(0x94de), 0x30);
        // CB 30 0174
        gbc.setState(0x8d89, 0xb607, 0x3710, 0xf2f7, 0xef69, 0x5b66, 0x0, 0x0);
        gbc.writeMem(0x8d89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb607);
        EXPECT(gbc.pc(), 0x8d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d89), 0xcb);
        EXPECT(gbc.readMem(0x8d8a), 0x30);
        // CB 30 0175
        gbc.setState(0xc269, 0xda65, 0xa180, 0x9547, 0xecd6, 0xbb83, 0x0, 0x0);
        gbc.writeMem(0xc269, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xda65);
        EXPECT(gbc.pc(), 0xc26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc269), 0xcb);
        EXPECT(gbc.readMem(0xc26a), 0x30);
        // CB 30 0176
        gbc.setState(0x8f20, 0x9250, 0x3a00, 0x22df, 0xa741, 0x7f9f, 0x1, 0x0);
        gbc.writeMem(0x8f20, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9250);
        EXPECT(gbc.pc(), 0x8f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f20), 0xcb);
        EXPECT(gbc.readMem(0x8f21), 0x30);
        // CB 30 0177
        gbc.setState(0x424e, 0xfa52, 0xe460, 0x76cd, 0xdf7c, 0xa965, 0x1, 0x1);
        gbc.writeMem(0x424e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfa52);
        EXPECT(gbc.pc(), 0x4250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0179
        gbc.setState(0x6317, 0xf42b, 0x8ff0, 0x2451, 0x1a0f, 0xc08a, 0x0, 0x0);
        gbc.writeMem(0x6317, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf42b);
        EXPECT(gbc.pc(), 0x6319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 017A
        gbc.setState(0x6231, 0x426, 0xca20, 0xfdf2, 0xbe67, 0xb1c5, 0x1, 0x1);
        gbc.writeMem(0x6231, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x426);
        EXPECT(gbc.pc(), 0x6233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 017B
        gbc.setState(0x82cf, 0x5c34, 0x4040, 0x704a, 0xb32f, 0xda93, 0x1, 0x1);
        gbc.writeMem(0x82cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5c34);
        EXPECT(gbc.pc(), 0x82d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cf), 0xcb);
        EXPECT(gbc.readMem(0x82d0), 0x30);
        // CB 30 017C
        gbc.setState(0x6cf5, 0xc11d, 0x25b0, 0xeb37, 0xc6e9, 0xf634, 0x0, 0x1);
        gbc.writeMem(0x6cf5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc11d);
        EXPECT(gbc.pc(), 0x6cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 017D
        gbc.setState(0x3836, 0xcb4, 0xbe40, 0x4bcc, 0x4084, 0x34d, 0x1, 0x1);
        gbc.writeMem(0x3836, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcb4);
        EXPECT(gbc.pc(), 0x3838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 017E
        gbc.setState(0x1d14, 0xedbe, 0x2c10, 0x3c3c, 0x23ca, 0x15eb, 0x0, 0x0);
        gbc.writeMem(0x1d14, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xedbe);
        EXPECT(gbc.pc(), 0x1d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0180
        gbc.setState(0x4a1c, 0xb22f, 0x2310, 0x7a6a, 0xad1e, 0x1e2e, 0x0, 0x1);
        gbc.writeMem(0x4a1c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb22f);
        EXPECT(gbc.pc(), 0x4a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0181
        gbc.setState(0x5524, 0x4075, 0xb80, 0x35ae, 0x7244, 0x6641, 0x1, 0x1);
        gbc.writeMem(0x5524, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4075);
        EXPECT(gbc.pc(), 0x5526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0182
        gbc.setState(0x8d95, 0x9ddd, 0x5a10, 0x8450, 0xf505, 0x773, 0x0, 0x1);
        gbc.writeMem(0x8d95, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9ddd);
        EXPECT(gbc.pc(), 0x8d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d95), 0xcb);
        EXPECT(gbc.readMem(0x8d96), 0x30);
        // CB 30 0183
        gbc.setState(0x2237, 0x3343, 0xcd90, 0x8d96, 0x9375, 0xd09e, 0x1, 0x1);
        gbc.writeMem(0x2237, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3343);
        EXPECT(gbc.pc(), 0x2239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0184
        gbc.setState(0xd7a4, 0x8b09, 0x26c0, 0x856e, 0x90f0, 0xb97, 0x0, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8b09);
        EXPECT(gbc.pc(), 0xd7a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a4), 0xcb);
        EXPECT(gbc.readMem(0xd7a5), 0x30);
        // CB 30 0186
        gbc.setState(0xa955, 0x2e08, 0x94f0, 0xeece, 0x7519, 0x9c5a, 0x0, 0x1);
        gbc.writeMem(0xa955, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2e08);
        EXPECT(gbc.pc(), 0xa957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa955), 0xcb);
        EXPECT(gbc.readMem(0xa956), 0x30);
        // CB 30 0187
        gbc.setState(0x791a, 0x1e8d, 0xc620, 0x7fd2, 0xb4f4, 0x8819, 0x0, 0x1);
        gbc.writeMem(0x791a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1e8d);
        EXPECT(gbc.pc(), 0x791c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0188
        gbc.setState(0xbc0a, 0xda05, 0xc030, 0xb3f5, 0x1ee3, 0x5d25, 0x0, 0x0);
        gbc.writeMem(0xbc0a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xda05);
        EXPECT(gbc.pc(), 0xbc0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc0a), 0xcb);
        EXPECT(gbc.readMem(0xbc0b), 0x30);
        // CB 30 0189
        gbc.setState(0x118c, 0x8973, 0x1f30, 0xe608, 0x14ab, 0x24d7, 0x1, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8973);
        EXPECT(gbc.pc(), 0x118e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 018A
        gbc.setState(0xbbee, 0xab5c, 0x7830, 0x30ce, 0xad01, 0xabcf, 0x1, 0x0);
        gbc.writeMem(0xbbee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xab5c);
        EXPECT(gbc.pc(), 0xbbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbee), 0xcb);
        EXPECT(gbc.readMem(0xbbef), 0x30);
        // CB 30 018B
        gbc.setState(0xd5a0, 0xf2da, 0xf090, 0x3e10, 0x7205, 0x1c0a, 0x1, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf2da);
        EXPECT(gbc.pc(), 0xd5a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a0), 0xcb);
        EXPECT(gbc.readMem(0xd5a1), 0x30);
        // CB 30 018C
        gbc.setState(0x2abf, 0xd9ff, 0x2900, 0xf7f0, 0x27f8, 0x37d, 0x0, 0x0);
        gbc.writeMem(0x2abf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd9ff);
        EXPECT(gbc.pc(), 0x2ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 018E
        gbc.setState(0x7fb5, 0xdabf, 0x38e0, 0xa72c, 0x4d7d, 0x82f8, 0x0, 0x1);
        gbc.writeMem(0x7fb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdabf);
        EXPECT(gbc.pc(), 0x7fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 018F
        gbc.setState(0x4de0, 0x41c0, 0x2790, 0x35d, 0x4dfe, 0x5ac2, 0x1, 0x1);
        gbc.writeMem(0x4de0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x41c0);
        EXPECT(gbc.pc(), 0x4de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0190
        gbc.setState(0x8937, 0x6c0, 0x9370, 0x391, 0xe31, 0x2f76, 0x1, 0x0);
        gbc.writeMem(0x8937, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6c0);
        EXPECT(gbc.pc(), 0x8939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8937), 0xcb);
        EXPECT(gbc.readMem(0x8938), 0x30);
        // CB 30 0191
        gbc.setState(0x781c, 0xf7d, 0xda60, 0xae0a, 0x5b39, 0x56a6, 0x1, 0x1);
        gbc.writeMem(0x781c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf7d);
        EXPECT(gbc.pc(), 0x781e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0192
        gbc.setState(0xc940, 0xbe7b, 0x1e0, 0x13ca, 0xc402, 0x7ea2, 0x0, 0x1);
        gbc.writeMem(0xc940, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbe7b);
        EXPECT(gbc.pc(), 0xc942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc940), 0xcb);
        EXPECT(gbc.readMem(0xc941), 0x30);
        // CB 30 0193
        gbc.setState(0x23c7, 0x482f, 0xddd0, 0x454e, 0x8b60, 0x7652, 0x1, 0x1);
        gbc.writeMem(0x23c7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x482f);
        EXPECT(gbc.pc(), 0x23c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0194
        gbc.setState(0x60b9, 0x68d0, 0x370, 0xf313, 0x3fdd, 0xdd40, 0x0, 0x0);
        gbc.writeMem(0x60b9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x68d0);
        EXPECT(gbc.pc(), 0x60bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0195
        gbc.setState(0xeb3a, 0x7f1d, 0x44c0, 0x39e5, 0x8a1e, 0x3810, 0x1, 0x0);
        gbc.writeMem(0xeb3a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7f1d);
        EXPECT(gbc.pc(), 0xeb3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3a), 0xcb);
        EXPECT(gbc.readMem(0xeb3b), 0x30);
        // CB 30 0196
        gbc.setState(0x367, 0xd2fe, 0xe1d0, 0x3c78, 0x8000, 0x9945, 0x0, 0x1);
        gbc.writeMem(0x367, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd2fe);
        EXPECT(gbc.pc(), 0x369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0197
        gbc.setState(0xd905, 0x4fc7, 0x5860, 0xf976, 0x8b49, 0x4e6, 0x1, 0x1);
        gbc.writeMem(0xd905, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4fc7);
        EXPECT(gbc.pc(), 0xd907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd905), 0xcb);
        EXPECT(gbc.readMem(0xd906), 0x30);
        // CB 30 0198
        gbc.setState(0xa1cd, 0xa808, 0x24a0, 0x2e7a, 0x8077, 0xaf65, 0x0, 0x0);
        gbc.writeMem(0xa1cd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa808);
        EXPECT(gbc.pc(), 0xa1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1cd), 0xcb);
        EXPECT(gbc.readMem(0xa1ce), 0x30);
        // CB 30 0199
        gbc.setState(0xa701, 0xe8a2, 0x6f90, 0xcc1d, 0x1281, 0xab4e, 0x0, 0x1);
        gbc.writeMem(0xa701, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe8a2);
        EXPECT(gbc.pc(), 0xa703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa701), 0xcb);
        EXPECT(gbc.readMem(0xa702), 0x30);
        // CB 30 019A
        gbc.setState(0xcc4, 0xa4b8, 0x20c0, 0x1487, 0xc78e, 0x356a, 0x1, 0x0);
        gbc.writeMem(0xcc4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa4b8);
        EXPECT(gbc.pc(), 0xcc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 019B
        gbc.setState(0x6331, 0x68dd, 0xa1d0, 0x9714, 0x858f, 0x8492, 0x0, 0x0);
        gbc.writeMem(0x6331, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x68dd);
        EXPECT(gbc.pc(), 0x6333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 019C
        gbc.setState(0xaf9, 0xa873, 0x78a0, 0x64c6, 0xb852, 0xc648, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa873);
        EXPECT(gbc.pc(), 0xafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 019D
        gbc.setState(0x3b2b, 0x29c3, 0xe280, 0x7701, 0x5157, 0xd046, 0x0, 0x1);
        gbc.writeMem(0x3b2b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x29c3);
        EXPECT(gbc.pc(), 0x3b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 019E
        gbc.setState(0x6ac7, 0xf427, 0x45a0, 0x7913, 0x4911, 0xc2dd, 0x0, 0x1);
        gbc.writeMem(0x6ac7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf427);
        EXPECT(gbc.pc(), 0x6ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01A0
        gbc.setState(0x65ca, 0x7cc2, 0x5be0, 0x3b8a, 0xe878, 0x767d, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7cc2);
        EXPECT(gbc.pc(), 0x65cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01A1
        gbc.setState(0x48cd, 0x4ec9, 0xb020, 0xe6d, 0xbb5d, 0xa535, 0x1, 0x1);
        gbc.writeMem(0x48cd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4ec9);
        EXPECT(gbc.pc(), 0x48cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01A2
        gbc.setState(0x4ab3, 0x5c41, 0xefc0, 0xb35c, 0x4b43, 0x7e9e, 0x1, 0x1);
        gbc.writeMem(0x4ab3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5c41);
        EXPECT(gbc.pc(), 0x4ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01A3
        gbc.setState(0xb9f2, 0xf4a7, 0xc990, 0xb6d1, 0x4cb, 0xac3d, 0x0, 0x0);
        gbc.writeMem(0xb9f2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf4a7);
        EXPECT(gbc.pc(), 0xb9f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f2), 0xcb);
        EXPECT(gbc.readMem(0xb9f3), 0x30);
        // CB 30 01A4
        gbc.setState(0xec5f, 0x4769, 0x45b0, 0xef60, 0x96b4, 0xf16e, 0x0, 0x0);
        gbc.writeMem(0xec5f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4769);
        EXPECT(gbc.pc(), 0xec61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5f), 0xcb);
        EXPECT(gbc.readMem(0xec60), 0x30);
        // CB 30 01A5
        gbc.setState(0xb81f, 0x1a85, 0xe510, 0xf928, 0x2d62, 0xdbf9, 0x0, 0x1);
        gbc.writeMem(0xb81f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1a85);
        EXPECT(gbc.pc(), 0xb821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81f), 0xcb);
        EXPECT(gbc.readMem(0xb820), 0x30);
        // CB 30 01A6
        gbc.setState(0xe6c4, 0xa7be, 0xed40, 0x72a5, 0x22d4, 0x66e9, 0x1, 0x0);
        gbc.writeMem(0xe6c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa7be);
        EXPECT(gbc.pc(), 0xe6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c4), 0xcb);
        EXPECT(gbc.readMem(0xe6c5), 0x30);
        // CB 30 01A7
        gbc.setState(0xd836, 0xd845, 0x2a80, 0xb3c, 0x8c86, 0x91db, 0x0, 0x0);
        gbc.writeMem(0xd836, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd845);
        EXPECT(gbc.pc(), 0xd838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd836), 0xcb);
        EXPECT(gbc.readMem(0xd837), 0x30);
        // CB 30 01A8
        gbc.setState(0x10e2, 0x6e9b, 0xe560, 0xc65f, 0xe2f0, 0x985a, 0x0, 0x0);
        gbc.writeMem(0x10e2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6e9b);
        EXPECT(gbc.pc(), 0x10e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01A9
        gbc.setState(0xbb55, 0xf025, 0x9c60, 0x647b, 0x5182, 0xb006, 0x0, 0x0);
        gbc.writeMem(0xbb55, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf025);
        EXPECT(gbc.pc(), 0xbb57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb55), 0xcb);
        EXPECT(gbc.readMem(0xbb56), 0x30);
        // CB 30 01AA
        gbc.setState(0xe18d, 0xafcf, 0x6d80, 0x8c95, 0x7a67, 0xc10c, 0x0, 0x1);
        gbc.writeMem(0xe18d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xafcf);
        EXPECT(gbc.pc(), 0xe18f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe18d), 0xcb);
        EXPECT(gbc.readMem(0xe18e), 0x30);
        // CB 30 01AB
        gbc.setState(0x8483, 0xc237, 0x1180, 0x6377, 0x8757, 0xa122, 0x0, 0x1);
        gbc.writeMem(0x8483, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc237);
        EXPECT(gbc.pc(), 0x8485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8483), 0xcb);
        EXPECT(gbc.readMem(0x8484), 0x30);
        // CB 30 01AC
        gbc.setState(0xdf13, 0x61fb, 0x88a0, 0x7586, 0x1729, 0x2ddf, 0x1, 0x0);
        gbc.writeMem(0xdf13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x61fb);
        EXPECT(gbc.pc(), 0xdf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf13), 0xcb);
        EXPECT(gbc.readMem(0xdf14), 0x30);
        // CB 30 01AD
        gbc.setState(0xb8ac, 0x2b7, 0x6470, 0x7d82, 0x352, 0x5cdd, 0x0, 0x1);
        gbc.writeMem(0xb8ac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2b7);
        EXPECT(gbc.pc(), 0xb8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ac), 0xcb);
        EXPECT(gbc.readMem(0xb8ad), 0x30);
        // CB 30 01AE
        gbc.setState(0x2d5b, 0xec10, 0x1510, 0x7c7a, 0x31af, 0x4ff3, 0x1, 0x0);
        gbc.writeMem(0x2d5b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xec10);
        EXPECT(gbc.pc(), 0x2d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01AF
        gbc.setState(0x51bf, 0xea62, 0xe950, 0xa698, 0xd97e, 0x6550, 0x0, 0x1);
        gbc.writeMem(0x51bf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xea62);
        EXPECT(gbc.pc(), 0x51c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01B0
        gbc.setState(0xad0c, 0xa269, 0x7cf0, 0x1e3, 0x6c9c, 0xda37, 0x1, 0x0);
        gbc.writeMem(0xad0c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa269);
        EXPECT(gbc.pc(), 0xad0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0c), 0xcb);
        EXPECT(gbc.readMem(0xad0d), 0x30);
        // CB 30 01B1
        gbc.setState(0x7b36, 0x3741, 0x76a0, 0xebd6, 0xe76a, 0xbcad, 0x1, 0x0);
        gbc.writeMem(0x7b36, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3741);
        EXPECT(gbc.pc(), 0x7b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01B2
        gbc.setState(0x4a62, 0x48db, 0xecb0, 0x3b7, 0xc5f0, 0xa540, 0x1, 0x0);
        gbc.writeMem(0x4a62, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x48db);
        EXPECT(gbc.pc(), 0x4a64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01B3
        gbc.setState(0xadc7, 0xfd0b, 0x3b20, 0xa12, 0x9eb, 0x500b, 0x0, 0x0);
        gbc.writeMem(0xadc7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfd0b);
        EXPECT(gbc.pc(), 0xadc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc7), 0xcb);
        EXPECT(gbc.readMem(0xadc8), 0x30);
        // CB 30 01B4
        gbc.setState(0xcdf4, 0x6c4, 0xaaa0, 0x942f, 0x24e5, 0xca6c, 0x0, 0x0);
        gbc.writeMem(0xcdf4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6c4);
        EXPECT(gbc.pc(), 0xcdf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf4), 0xcb);
        EXPECT(gbc.readMem(0xcdf5), 0x30);
        // CB 30 01B5
        gbc.setState(0x27b0, 0x2c10, 0xb590, 0xb075, 0x16aa, 0xdd11, 0x1, 0x0);
        gbc.writeMem(0x27b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2c10);
        EXPECT(gbc.pc(), 0x27b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01B6
        gbc.setState(0xd3c1, 0xb4fb, 0xade0, 0x88d5, 0xc961, 0x551a, 0x0, 0x0);
        gbc.writeMem(0xd3c1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb4fb);
        EXPECT(gbc.pc(), 0xd3c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c1), 0xcb);
        EXPECT(gbc.readMem(0xd3c2), 0x30);
        // CB 30 01B7
        gbc.setState(0xd8aa, 0xa294, 0x82e0, 0x551, 0x2b38, 0x6f01, 0x1, 0x0);
        gbc.writeMem(0xd8aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa294);
        EXPECT(gbc.pc(), 0xd8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8aa), 0xcb);
        EXPECT(gbc.readMem(0xd8ab), 0x30);
        // CB 30 01B8
        gbc.setState(0x17f1, 0x2700, 0x7e90, 0x8f3d, 0x760b, 0xfe1f, 0x0, 0x1);
        gbc.writeMem(0x17f1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0x17f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01B9
        gbc.setState(0x3293, 0x911a, 0x5b0, 0x33ba, 0x4f51, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x3293, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x911a);
        EXPECT(gbc.pc(), 0x3295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01BA
        gbc.setState(0x93fe, 0x12ac, 0x30d0, 0xd1db, 0x53c9, 0x54ee, 0x1, 0x0);
        gbc.writeMem(0x93fe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x12ac);
        EXPECT(gbc.pc(), 0x9400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fe), 0xcb);
        EXPECT(gbc.readMem(0x93ff), 0x30);
        // CB 30 01BB
        gbc.setState(0xd51d, 0xa916, 0x6da0, 0xf6ba, 0xae38, 0xa2d8, 0x0, 0x1);
        gbc.writeMem(0xd51d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa916);
        EXPECT(gbc.pc(), 0xd51f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51d), 0xcb);
        EXPECT(gbc.readMem(0xd51e), 0x30);
        // CB 30 01BC
        gbc.setState(0x7ce6, 0x5334, 0x8bd0, 0x92f2, 0x2545, 0xc880, 0x1, 0x0);
        gbc.writeMem(0x7ce6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5334);
        EXPECT(gbc.pc(), 0x7ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01BD
        gbc.setState(0x89eb, 0x4a4a, 0xd960, 0xfd9b, 0x55e3, 0xbf8a, 0x0, 0x0);
        gbc.writeMem(0x89eb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4a4a);
        EXPECT(gbc.pc(), 0x89ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89eb), 0xcb);
        EXPECT(gbc.readMem(0x89ec), 0x30);
        // CB 30 01BE
        gbc.setState(0x3f1a, 0xeacf, 0x8fb0, 0xc055, 0xc429, 0x350d, 0x0, 0x0);
        gbc.writeMem(0x3f1a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xeacf);
        EXPECT(gbc.pc(), 0x3f1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01BF
        gbc.setState(0x99e9, 0x24c0, 0xdfe0, 0x6edf, 0x1d9d, 0xac51, 0x0, 0x1);
        gbc.writeMem(0x99e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x24c0);
        EXPECT(gbc.pc(), 0x99eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e9), 0xcb);
        EXPECT(gbc.readMem(0x99ea), 0x30);
        // CB 30 01C0
        gbc.setState(0xc2bc, 0x86e9, 0x40c0, 0xf918, 0x947a, 0xf59, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x86e9);
        EXPECT(gbc.pc(), 0xc2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2bc), 0xcb);
        EXPECT(gbc.readMem(0xc2bd), 0x30);
        // CB 30 01C1
        gbc.setState(0x2027, 0xd2b5, 0xd2e0, 0x92f5, 0x6096, 0x80dd, 0x1, 0x0);
        gbc.writeMem(0x2027, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd2b5);
        EXPECT(gbc.pc(), 0x2029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01C2
        gbc.setState(0xb627, 0xb038, 0xbc70, 0x8a50, 0x8c52, 0x8a54, 0x0, 0x1);
        gbc.writeMem(0xb627, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb038);
        EXPECT(gbc.pc(), 0xb629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb627), 0xcb);
        EXPECT(gbc.readMem(0xb628), 0x30);
        // CB 30 01C3
        gbc.setState(0x9ddc, 0x15d4, 0xb080, 0xd1ab, 0x3aa1, 0x5614, 0x0, 0x0);
        gbc.writeMem(0x9ddc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x15d4);
        EXPECT(gbc.pc(), 0x9dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddc), 0xcb);
        EXPECT(gbc.readMem(0x9ddd), 0x30);
        // CB 30 01C4
        gbc.setState(0x7c49, 0xcdfa, 0xaa00, 0x427a, 0xd787, 0xa645, 0x0, 0x0);
        gbc.writeMem(0x7c49, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xcdfa);
        EXPECT(gbc.pc(), 0x7c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01C5
        gbc.setState(0xa051, 0xf4df, 0xcc20, 0xdd69, 0x3072, 0x784f, 0x0, 0x1);
        gbc.writeMem(0xa051, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf4df);
        EXPECT(gbc.pc(), 0xa053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa051), 0xcb);
        EXPECT(gbc.readMem(0xa052), 0x30);
        // CB 30 01C6
        gbc.setState(0x181d, 0xf934, 0x5bc0, 0x5e53, 0x8eac, 0x49a6, 0x1, 0x0);
        gbc.writeMem(0x181d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf934);
        EXPECT(gbc.pc(), 0x181f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01C7
        gbc.setState(0x2b00, 0x8c50, 0x83d0, 0x30e8, 0xebac, 0x7658, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8c50);
        EXPECT(gbc.pc(), 0x2b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01C8
        gbc.setState(0x3d51, 0xa8f1, 0xd780, 0x214, 0xf2fa, 0xd3f6, 0x1, 0x0);
        gbc.writeMem(0x3d51, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa8f1);
        EXPECT(gbc.pc(), 0x3d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01C9
        gbc.setState(0x2c32, 0x34f2, 0xce30, 0x9035, 0x98ab, 0x4d41, 0x1, 0x1);
        gbc.writeMem(0x2c32, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x34f2);
        EXPECT(gbc.pc(), 0x2c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01CA
        gbc.setState(0xe9c2, 0xa26, 0x5d30, 0xe790, 0x2be7, 0x8f5, 0x0, 0x0);
        gbc.writeMem(0xe9c2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa26);
        EXPECT(gbc.pc(), 0xe9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c2), 0xcb);
        EXPECT(gbc.readMem(0xe9c3), 0x30);
        // CB 30 01CB
        gbc.setState(0x248, 0xa0b4, 0x4db0, 0x4cef, 0xd427, 0x6533, 0x0, 0x0);
        gbc.writeMem(0x248, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa0b4);
        EXPECT(gbc.pc(), 0x24a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01CC
        gbc.setState(0x8ffe, 0x9abb, 0xb610, 0x6e1, 0x226b, 0x4881, 0x1, 0x1);
        gbc.writeMem(0x8ffe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9abb);
        EXPECT(gbc.pc(), 0x9000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffe), 0xcb);
        EXPECT(gbc.readMem(0x8fff), 0x30);
        // CB 30 01CD
        gbc.setState(0x50c3, 0x33e5, 0xf990, 0x574c, 0x56d4, 0xe9c0, 0x1, 0x1);
        gbc.writeMem(0x50c3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x33e5);
        EXPECT(gbc.pc(), 0x50c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01CE
        gbc.setState(0x76af, 0x5a3d, 0x41a0, 0xa130, 0x3889, 0xb382, 0x1, 0x1);
        gbc.writeMem(0x76af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5a3d);
        EXPECT(gbc.pc(), 0x76b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01CF
        gbc.setState(0x6eda, 0xc7f6, 0x5310, 0xa260, 0xb068, 0xc1bd, 0x1, 0x1);
        gbc.writeMem(0x6eda, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc7f6);
        EXPECT(gbc.pc(), 0x6edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01D0
        gbc.setState(0xa624, 0xd60a, 0x5ba0, 0xb942, 0x3773, 0xec3d, 0x1, 0x0);
        gbc.writeMem(0xa624, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd60a);
        EXPECT(gbc.pc(), 0xa626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa624), 0xcb);
        EXPECT(gbc.readMem(0xa625), 0x30);
        // CB 30 01D1
        gbc.setState(0x6f68, 0xa8d7, 0x1110, 0xb7d0, 0xf5a6, 0x2d60, 0x1, 0x0);
        gbc.writeMem(0x6f68, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa8d7);
        EXPECT(gbc.pc(), 0x6f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01D3
        gbc.setState(0xb949, 0xc22b, 0x34e0, 0xe3dc, 0x517c, 0x7376, 0x0, 0x1);
        gbc.writeMem(0xb949, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc22b);
        EXPECT(gbc.pc(), 0xb94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb949), 0xcb);
        EXPECT(gbc.readMem(0xb94a), 0x30);
        // CB 30 01D4
        gbc.setState(0x7f53, 0xe958, 0xa820, 0x862c, 0x2f8f, 0xba5, 0x1, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe958);
        EXPECT(gbc.pc(), 0x7f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01D5
        gbc.setState(0xaef, 0x6a8c, 0xed50, 0x5a83, 0x1794, 0x739a, 0x0, 0x0);
        gbc.writeMem(0xaef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6a8c);
        EXPECT(gbc.pc(), 0xaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01D6
        gbc.setState(0x7352, 0x6220, 0x9550, 0xf03, 0x8767, 0xaaef, 0x0, 0x0);
        gbc.writeMem(0x7352, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6220);
        EXPECT(gbc.pc(), 0x7354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01D7
        gbc.setState(0x24a4, 0x16f2, 0x3770, 0xf909, 0x8122, 0x676, 0x0, 0x0);
        gbc.writeMem(0x24a4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x16f2);
        EXPECT(gbc.pc(), 0x24a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01D8
        gbc.setState(0x936d, 0xade8, 0xd6c0, 0x21e7, 0xb0d0, 0x7cf, 0x1, 0x1);
        gbc.writeMem(0x936d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xade8);
        EXPECT(gbc.pc(), 0x936f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x936d), 0xcb);
        EXPECT(gbc.readMem(0x936e), 0x30);
        // CB 30 01D9
        gbc.setState(0xefdf, 0x9c3b, 0xd4f0, 0xc0a3, 0xcc83, 0xf0ac, 0x1, 0x0);
        gbc.writeMem(0xefdf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9c3b);
        EXPECT(gbc.pc(), 0xefe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefdf), 0xcb);
        EXPECT(gbc.readMem(0xefe0), 0x30);
        // CB 30 01DA
        gbc.setState(0xbc91, 0x8a53, 0x4040, 0x5371, 0x5f5e, 0xa970, 0x0, 0x1);
        gbc.writeMem(0xbc91, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8a53);
        EXPECT(gbc.pc(), 0xbc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc91), 0xcb);
        EXPECT(gbc.readMem(0xbc92), 0x30);
        // CB 30 01DB
        gbc.setState(0x13c7, 0xeee1, 0xc9c0, 0xa6bb, 0x85e5, 0xa74c, 0x0, 0x0);
        gbc.writeMem(0x13c7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xeee1);
        EXPECT(gbc.pc(), 0x13c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01DC
        gbc.setState(0xb387, 0xd0f3, 0xc8c0, 0x4561, 0xf48c, 0xe315, 0x1, 0x0);
        gbc.writeMem(0xb387, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd0f3);
        EXPECT(gbc.pc(), 0xb389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb387), 0xcb);
        EXPECT(gbc.readMem(0xb388), 0x30);
        // CB 30 01DD
        gbc.setState(0xa22f, 0x97a8, 0xd860, 0xf6f9, 0x9ea8, 0xb044, 0x0, 0x0);
        gbc.writeMem(0xa22f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x97a8);
        EXPECT(gbc.pc(), 0xa231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22f), 0xcb);
        EXPECT(gbc.readMem(0xa230), 0x30);
        // CB 30 01DE
        gbc.setState(0xdb9, 0x6315, 0x77d0, 0x30b0, 0xd0a0, 0xaed8, 0x1, 0x0);
        gbc.writeMem(0xdb9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6315);
        EXPECT(gbc.pc(), 0xdbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01DF
        gbc.setState(0x8b3c, 0xb603, 0x76c0, 0xd993, 0xad6e, 0x8249, 0x1, 0x0);
        gbc.writeMem(0x8b3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb603);
        EXPECT(gbc.pc(), 0x8b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3c), 0xcb);
        EXPECT(gbc.readMem(0x8b3d), 0x30);
        // CB 30 01E0
        gbc.setState(0xca30, 0x73e9, 0xec40, 0xe265, 0xe1e7, 0xcb31, 0x0, 0x0);
        gbc.writeMem(0xca30, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x73e9);
        EXPECT(gbc.pc(), 0xca32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca30), 0xcb);
        EXPECT(gbc.readMem(0xca31), 0x30);
        // CB 30 01E1
        gbc.setState(0x2e77, 0x2bd2, 0x22a0, 0xd4c9, 0x61f3, 0xaf47, 0x0, 0x0);
        gbc.writeMem(0x2e77, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2bd2);
        EXPECT(gbc.pc(), 0x2e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01E2
        gbc.setState(0x45c6, 0x5b5d, 0x1c50, 0x1a2f, 0xb4d9, 0x217b, 0x0, 0x1);
        gbc.writeMem(0x45c6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5b5d);
        EXPECT(gbc.pc(), 0x45c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01E3
        gbc.setState(0x2038, 0x3623, 0x300, 0xbd52, 0x745d, 0xaf36, 0x1, 0x1);
        gbc.writeMem(0x2038, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3623);
        EXPECT(gbc.pc(), 0x203a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01E4
        gbc.setState(0xe77d, 0xcb92, 0xf200, 0xfa9d, 0xf627, 0x3137, 0x1, 0x1);
        gbc.writeMem(0xe77d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcb92);
        EXPECT(gbc.pc(), 0xe77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe77d), 0xcb);
        EXPECT(gbc.readMem(0xe77e), 0x30);
        // CB 30 01E5
        gbc.setState(0x615b, 0xe6c5, 0x7cf0, 0x9f51, 0x858b, 0x6fe0, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe6c5);
        EXPECT(gbc.pc(), 0x615d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01E6
        gbc.setState(0xbb5, 0x4a14, 0x3700, 0x6b9f, 0x2dcf, 0xa6eb, 0x1, 0x0);
        gbc.writeMem(0xbb5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4a14);
        EXPECT(gbc.pc(), 0xbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01E7
        gbc.setState(0x2b49, 0xe4a, 0xa3b0, 0x104f, 0x3d2, 0xd9a1, 0x0, 0x0);
        gbc.writeMem(0x2b49, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe4a);
        EXPECT(gbc.pc(), 0x2b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01E8
        gbc.setState(0x6344, 0x4bb0, 0x8690, 0xeb2, 0x120, 0x4e49, 0x0, 0x0);
        gbc.writeMem(0x6344, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4bb0);
        EXPECT(gbc.pc(), 0x6346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01E9
        gbc.setState(0x7971, 0x142a, 0xe3e0, 0xeabf, 0xff7e, 0xe447, 0x0, 0x1);
        gbc.writeMem(0x7971, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x142a);
        EXPECT(gbc.pc(), 0x7973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01EA
        gbc.setState(0x59b7, 0x1a2d, 0xc850, 0x79fd, 0x402c, 0x14ad, 0x1, 0x0);
        gbc.writeMem(0x59b7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1a2d);
        EXPECT(gbc.pc(), 0x59b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01EB
        gbc.setState(0xc9fc, 0xb500, 0x3170, 0x142d, 0xde88, 0xcda0, 0x1, 0x1);
        gbc.writeMem(0xc9fc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb500);
        EXPECT(gbc.pc(), 0xc9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9fc), 0xcb);
        EXPECT(gbc.readMem(0xc9fd), 0x30);
        // CB 30 01EC
        gbc.setState(0x76d7, 0x5591, 0x97b0, 0x5eca, 0x4c77, 0xb2bd, 0x0, 0x1);
        gbc.writeMem(0x76d7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5591);
        EXPECT(gbc.pc(), 0x76d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01ED
        gbc.setState(0x3ec8, 0x97c7, 0x32a0, 0xfdaa, 0xa9d7, 0x449b, 0x1, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0x3eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01EE
        gbc.setState(0x9119, 0x49ff, 0xb420, 0xfd33, 0x9ca, 0xa8f3, 0x1, 0x0);
        gbc.writeMem(0x9119, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x49ff);
        EXPECT(gbc.pc(), 0x911b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9119), 0xcb);
        EXPECT(gbc.readMem(0x911a), 0x30);
        // CB 30 01EF
        gbc.setState(0x76a2, 0x6873, 0x1f90, 0x4f77, 0x72a7, 0x819, 0x0, 0x0);
        gbc.writeMem(0x76a2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6873);
        EXPECT(gbc.pc(), 0x76a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01F0
        gbc.setState(0xc295, 0x4d54, 0x1d40, 0x785b, 0xb9ac, 0x9907, 0x1, 0x0);
        gbc.writeMem(0xc295, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4d54);
        EXPECT(gbc.pc(), 0xc297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc295), 0xcb);
        EXPECT(gbc.readMem(0xc296), 0x30);
        // CB 30 01F1
        gbc.setState(0x5eaf, 0xf4cf, 0x3580, 0xce86, 0xf470, 0x1d19, 0x0, 0x1);
        gbc.writeMem(0x5eaf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf4cf);
        EXPECT(gbc.pc(), 0x5eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01F2
        gbc.setState(0x703c, 0x2b71, 0xb250, 0xe5b6, 0x4cfb, 0x4011, 0x1, 0x1);
        gbc.writeMem(0x703c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2b71);
        EXPECT(gbc.pc(), 0x703e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01F4
        gbc.setState(0xa6d5, 0x6f91, 0xcfd0, 0x7d35, 0x5e08, 0x209, 0x0, 0x0);
        gbc.writeMem(0xa6d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6f91);
        EXPECT(gbc.pc(), 0xa6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d5), 0xcb);
        EXPECT(gbc.readMem(0xa6d6), 0x30);
        // CB 30 01F5
        gbc.setState(0x7b20, 0x6c09, 0xe040, 0xf170, 0xfe72, 0x2eea, 0x0, 0x1);
        gbc.writeMem(0x7b20, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6c09);
        EXPECT(gbc.pc(), 0x7b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01F6
        gbc.setState(0xcfbd, 0x3574, 0x3060, 0x25ea, 0x4d9, 0x58f4, 0x0, 0x1);
        gbc.writeMem(0xcfbd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3574);
        EXPECT(gbc.pc(), 0xcfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbd), 0xcb);
        EXPECT(gbc.readMem(0xcfbe), 0x30);
        // CB 30 01F7
        gbc.setState(0x7fff, 0x64c7, 0xb800, 0x2a9b, 0x9b57, 0x77e4, 0x1, 0x0);
        gbc.writeMem(0x7fff, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x64c7);
        EXPECT(gbc.pc(), 0x8001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8000), 0x30);
        // CB 30 01F8
        gbc.setState(0x6a18, 0x8d5, 0xcd60, 0xfe14, 0xb8b7, 0x7ac1, 0x1, 0x1);
        gbc.writeMem(0x6a18, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8d5);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01F9
        gbc.setState(0xa1b2, 0xe0ff, 0xf390, 0xc7d7, 0x8eb7, 0x5fae, 0x0, 0x0);
        gbc.writeMem(0xa1b2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe0ff);
        EXPECT(gbc.pc(), 0xa1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b2), 0xcb);
        EXPECT(gbc.readMem(0xa1b3), 0x30);
        // CB 30 01FA
        gbc.setState(0xa43e, 0x4799, 0x6170, 0x7b49, 0x3e84, 0x718e, 0x1, 0x0);
        gbc.writeMem(0xa43e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4799);
        EXPECT(gbc.pc(), 0xa440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43e), 0xcb);
        EXPECT(gbc.readMem(0xa43f), 0x30);
        // CB 30 01FB
        gbc.setState(0x591f, 0x17a6, 0x48a0, 0x7001, 0xc889, 0x7d7d, 0x0, 0x0);
        gbc.writeMem(0x591f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x17a6);
        EXPECT(gbc.pc(), 0x5921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01FC
        gbc.setState(0x3785, 0xbb09, 0x6690, 0x49e5, 0xa6db, 0x2ff5, 0x1, 0x1);
        gbc.writeMem(0x3785, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbb09);
        EXPECT(gbc.pc(), 0x3787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01FD
        gbc.setState(0x7edb, 0x2ca6, 0xed20, 0x2edc, 0x498a, 0xca3a, 0x1, 0x0);
        gbc.writeMem(0x7edb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2ca6);
        EXPECT(gbc.pc(), 0x7edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 01FE
        gbc.setState(0xd15e, 0xaba6, 0xefa0, 0x720f, 0x488, 0x2cc7, 0x0, 0x1);
        gbc.writeMem(0xd15e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xaba6);
        EXPECT(gbc.pc(), 0xd160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15e), 0xcb);
        EXPECT(gbc.readMem(0xd15f), 0x30);
        // CB 30 01FF
        gbc.setState(0x779d, 0x25f1, 0xaa20, 0x58b3, 0x37b2, 0x470, 0x1, 0x1);
        gbc.writeMem(0x779d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x25f1);
        EXPECT(gbc.pc(), 0x779f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0201
        gbc.setState(0xa23b, 0xc2fe, 0x7100, 0x9ca6, 0x9db4, 0x2c6b, 0x1, 0x1);
        gbc.writeMem(0xa23b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc2fe);
        EXPECT(gbc.pc(), 0xa23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa23b), 0xcb);
        EXPECT(gbc.readMem(0xa23c), 0x30);
        // CB 30 0202
        gbc.setState(0xb8a, 0x4fa0, 0xe300, 0x4f03, 0xbd6, 0x2e6c, 0x1, 0x0);
        gbc.writeMem(0xb8a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4fa0);
        EXPECT(gbc.pc(), 0xb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0203
        gbc.setState(0x3b84, 0x30e8, 0x5360, 0x3c39, 0xb190, 0x420d, 0x0, 0x0);
        gbc.writeMem(0x3b84, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x30e8);
        EXPECT(gbc.pc(), 0x3b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0204
        gbc.setState(0x6615, 0x311a, 0xcb70, 0xf7a2, 0x18e6, 0x6679, 0x0, 0x0);
        gbc.writeMem(0x6615, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x311a);
        EXPECT(gbc.pc(), 0x6617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0205
        gbc.setState(0x7fdf, 0x9ce5, 0xe480, 0xb593, 0xee22, 0x11e6, 0x0, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9ce5);
        EXPECT(gbc.pc(), 0x7fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0207
        gbc.setState(0x5ed, 0xd441, 0xfe0, 0xf7b8, 0xcfcd, 0xf9c, 0x0, 0x0);
        gbc.writeMem(0x5ed, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd441);
        EXPECT(gbc.pc(), 0x5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0208
        gbc.setState(0xe8af, 0xac24, 0x1510, 0x540b, 0x97d4, 0x1eaa, 0x0, 0x1);
        gbc.writeMem(0xe8af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xac24);
        EXPECT(gbc.pc(), 0xe8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8af), 0xcb);
        EXPECT(gbc.readMem(0xe8b0), 0x30);
        // CB 30 0209
        gbc.setState(0x5599, 0x6c72, 0x4970, 0x511d, 0x55a1, 0xc64f, 0x1, 0x1);
        gbc.writeMem(0x5599, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6c72);
        EXPECT(gbc.pc(), 0x559b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 020A
        gbc.setState(0x9ccd, 0xd540, 0x8ee0, 0xb9c, 0xb2f5, 0x271, 0x0, 0x0);
        gbc.writeMem(0x9ccd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd540);
        EXPECT(gbc.pc(), 0x9ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccd), 0xcb);
        EXPECT(gbc.readMem(0x9cce), 0x30);
        // CB 30 020B
        gbc.setState(0x8d97, 0xfb1b, 0xa620, 0xaa7f, 0xc95, 0xafb2, 0x1, 0x0);
        gbc.writeMem(0x8d97, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfb1b);
        EXPECT(gbc.pc(), 0x8d99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d97), 0xcb);
        EXPECT(gbc.readMem(0x8d98), 0x30);
        // CB 30 020C
        gbc.setState(0x9f4a, 0x53ac, 0x2bd0, 0x7ac1, 0x25f5, 0xdb75, 0x1, 0x0);
        gbc.writeMem(0x9f4a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x53ac);
        EXPECT(gbc.pc(), 0x9f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4a), 0xcb);
        EXPECT(gbc.readMem(0x9f4b), 0x30);
        // CB 30 020D
        gbc.setState(0x63c3, 0xe9b8, 0x4020, 0x2f84, 0xa63e, 0x3d6, 0x1, 0x0);
        gbc.writeMem(0x63c3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe9b8);
        EXPECT(gbc.pc(), 0x63c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 020E
        gbc.setState(0x3194, 0x4497, 0xe290, 0x53be, 0x33e0, 0xa592, 0x0, 0x1);
        gbc.writeMem(0x3194, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4497);
        EXPECT(gbc.pc(), 0x3196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 020F
        gbc.setState(0xc68c, 0x6c02, 0xcb60, 0xa0dd, 0x62be, 0x89ba, 0x0, 0x0);
        gbc.writeMem(0xc68c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6c02);
        EXPECT(gbc.pc(), 0xc68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68c), 0xcb);
        EXPECT(gbc.readMem(0xc68d), 0x30);
        // CB 30 0210
        gbc.setState(0xab5a, 0x61d2, 0x270, 0x9370, 0x5176, 0xab1a, 0x0, 0x1);
        gbc.writeMem(0xab5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x61d2);
        EXPECT(gbc.pc(), 0xab5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5a), 0xcb);
        EXPECT(gbc.readMem(0xab5b), 0x30);
        // CB 30 0211
        gbc.setState(0xaf7a, 0x25e8, 0x6f30, 0xe81d, 0x496a, 0x4c33, 0x0, 0x1);
        gbc.writeMem(0xaf7a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x25e8);
        EXPECT(gbc.pc(), 0xaf7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7a), 0xcb);
        EXPECT(gbc.readMem(0xaf7b), 0x30);
        // CB 30 0212
        gbc.setState(0x7625, 0x4f20, 0xd3a0, 0x4a62, 0xc85c, 0xbe28, 0x1, 0x0);
        gbc.writeMem(0x7625, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4f20);
        EXPECT(gbc.pc(), 0x7627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0213
        gbc.setState(0x6ac8, 0x82af, 0x92a0, 0xad78, 0xeef6, 0x7f0, 0x1, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x82af);
        EXPECT(gbc.pc(), 0x6aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0214
        gbc.setState(0x9f65, 0x9fe, 0xd350, 0xd44b, 0x61f, 0xbdba, 0x0, 0x0);
        gbc.writeMem(0x9f65, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9fe);
        EXPECT(gbc.pc(), 0x9f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f65), 0xcb);
        EXPECT(gbc.readMem(0x9f66), 0x30);
        // CB 30 0215
        gbc.setState(0x8208, 0xe5c, 0xb6e0, 0x265f, 0xd2a8, 0x299b, 0x1, 0x1);
        gbc.writeMem(0x8208, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe5c);
        EXPECT(gbc.pc(), 0x820a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8208), 0xcb);
        EXPECT(gbc.readMem(0x8209), 0x30);
        // CB 30 0216
        gbc.setState(0x526, 0xc081, 0x6e90, 0xb16d, 0x9201, 0x6e, 0x1, 0x0);
        gbc.writeMem(0x526, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc081);
        EXPECT(gbc.pc(), 0x528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0217
        gbc.setState(0x6b6a, 0x8c37, 0x8190, 0xbc6, 0x2948, 0xbe69, 0x1, 0x0);
        gbc.writeMem(0x6b6a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8c37);
        EXPECT(gbc.pc(), 0x6b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0218
        gbc.setState(0x75b7, 0x453c, 0xccf0, 0x4798, 0x4d18, 0xb7a, 0x1, 0x0);
        gbc.writeMem(0x75b7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0x75b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0219
        gbc.setState(0xb493, 0x236e, 0x3c00, 0x3df6, 0xd3e8, 0x9e9d, 0x0, 0x0);
        gbc.writeMem(0xb493, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x236e);
        EXPECT(gbc.pc(), 0xb495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb493), 0xcb);
        EXPECT(gbc.readMem(0xb494), 0x30);
        // CB 30 021A
        gbc.setState(0x4a25, 0xaf34, 0x3420, 0x2c0b, 0x5570, 0x8263, 0x0, 0x1);
        gbc.writeMem(0x4a25, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xaf34);
        EXPECT(gbc.pc(), 0x4a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 021B
        gbc.setState(0xa8c2, 0xc845, 0xbe70, 0x2d60, 0xff13, 0x2f5a, 0x0, 0x1);
        gbc.writeMem(0xa8c2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc845);
        EXPECT(gbc.pc(), 0xa8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c2), 0xcb);
        EXPECT(gbc.readMem(0xa8c3), 0x30);
        // CB 30 021C
        gbc.setState(0xdd3c, 0xad3d, 0xabb0, 0x20ae, 0x55e4, 0x2bcc, 0x0, 0x0);
        gbc.writeMem(0xdd3c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xad3d);
        EXPECT(gbc.pc(), 0xdd3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd3c), 0xcb);
        EXPECT(gbc.readMem(0xdd3d), 0x30);
        // CB 30 021D
        gbc.setState(0xb121, 0x5fed, 0xb9c0, 0xb4e8, 0x432b, 0xd538, 0x1, 0x0);
        gbc.writeMem(0xb121, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5fed);
        EXPECT(gbc.pc(), 0xb123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb121), 0xcb);
        EXPECT(gbc.readMem(0xb122), 0x30);
        // CB 30 021E
        gbc.setState(0x99be, 0x3c6c, 0x65c0, 0x76b6, 0x9c5b, 0x286a, 0x1, 0x0);
        gbc.writeMem(0x99be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3c6c);
        EXPECT(gbc.pc(), 0x99c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99be), 0xcb);
        EXPECT(gbc.readMem(0x99bf), 0x30);
        // CB 30 021F
        gbc.setState(0xc71c, 0xdfca, 0x3e00, 0x3271, 0x5547, 0x602, 0x0, 0x1);
        gbc.writeMem(0xc71c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdfca);
        EXPECT(gbc.pc(), 0xc71e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71c), 0xcb);
        EXPECT(gbc.readMem(0xc71d), 0x30);
        // CB 30 0220
        gbc.setState(0xcc4a, 0x97a0, 0x4fb0, 0xb345, 0xef14, 0x5f24, 0x0, 0x0);
        gbc.writeMem(0xcc4a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x97a0);
        EXPECT(gbc.pc(), 0xcc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4a), 0xcb);
        EXPECT(gbc.readMem(0xcc4b), 0x30);
        // CB 30 0221
        gbc.setState(0x9c14, 0xea16, 0xf2b0, 0xaf04, 0xd9e6, 0x9097, 0x1, 0x1);
        gbc.writeMem(0x9c14, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xea16);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c14), 0xcb);
        EXPECT(gbc.readMem(0x9c15), 0x30);
        // CB 30 0222
        gbc.setState(0xafc8, 0xba9e, 0x83e0, 0x8aec, 0x4226, 0xa614, 0x1, 0x0);
        gbc.writeMem(0xafc8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xba9e);
        EXPECT(gbc.pc(), 0xafca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc8), 0xcb);
        EXPECT(gbc.readMem(0xafc9), 0x30);
        // CB 30 0223
        gbc.setState(0xd927, 0x713, 0xf350, 0x7f0, 0x6c7f, 0xa61a, 0x0, 0x0);
        gbc.writeMem(0xd927, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x713);
        EXPECT(gbc.pc(), 0xd929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd927), 0xcb);
        EXPECT(gbc.readMem(0xd928), 0x30);
        // CB 30 0224
        gbc.setState(0xb7ee, 0xc6ee, 0xe7b0, 0xc774, 0x7e2, 0x8bff, 0x1, 0x1);
        gbc.writeMem(0xb7ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc6ee);
        EXPECT(gbc.pc(), 0xb7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ee), 0xcb);
        EXPECT(gbc.readMem(0xb7ef), 0x30);
        // CB 30 0225
        gbc.setState(0xce9a, 0x794b, 0x1fa0, 0x6818, 0xbcc1, 0xc47f, 0x1, 0x1);
        gbc.writeMem(0xce9a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x794b);
        EXPECT(gbc.pc(), 0xce9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9a), 0xcb);
        EXPECT(gbc.readMem(0xce9b), 0x30);
        // CB 30 0226
        gbc.setState(0x9963, 0x5499, 0xa930, 0xfd68, 0x4855, 0x44b5, 0x1, 0x0);
        gbc.writeMem(0x9963, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5499);
        EXPECT(gbc.pc(), 0x9965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9963), 0xcb);
        EXPECT(gbc.readMem(0x9964), 0x30);
        // CB 30 0227
        gbc.setState(0x531b, 0xadb, 0x92b0, 0x21eb, 0x8856, 0xb207, 0x1, 0x0);
        gbc.writeMem(0x531b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xadb);
        EXPECT(gbc.pc(), 0x531d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0228
        gbc.setState(0xca98, 0xdc25, 0x14d0, 0x159d, 0xc939, 0x1d1b, 0x0, 0x0);
        gbc.writeMem(0xca98, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdc25);
        EXPECT(gbc.pc(), 0xca9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca98), 0xcb);
        EXPECT(gbc.readMem(0xca99), 0x30);
        // CB 30 0229
        gbc.setState(0x98b7, 0xe28a, 0xe890, 0xf62f, 0xf442, 0x8275, 0x0, 0x0);
        gbc.writeMem(0x98b7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe28a);
        EXPECT(gbc.pc(), 0x98b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b7), 0xcb);
        EXPECT(gbc.readMem(0x98b8), 0x30);
        // CB 30 022A
        gbc.setState(0x5d52, 0xdf43, 0xdb80, 0x845f, 0xb75c, 0x2b0, 0x1, 0x1);
        gbc.writeMem(0x5d52, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdf43);
        EXPECT(gbc.pc(), 0x5d54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 022B
        gbc.setState(0xc2c9, 0x3743, 0x50, 0xa114, 0x690c, 0x29f2, 0x0, 0x1);
        gbc.writeMem(0xc2c9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3743);
        EXPECT(gbc.pc(), 0xc2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c9), 0xcb);
        EXPECT(gbc.readMem(0xc2ca), 0x30);
        // CB 30 022C
        gbc.setState(0xe0fb, 0x1cc7, 0xdd90, 0xc5c2, 0xcd2c, 0xf80d, 0x0, 0x0);
        gbc.writeMem(0xe0fb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1cc7);
        EXPECT(gbc.pc(), 0xe0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0fb), 0xcb);
        EXPECT(gbc.readMem(0xe0fc), 0x30);
        // CB 30 022D
        gbc.setState(0xd88f, 0x27ac, 0x99c0, 0x5837, 0xc30e, 0x1eb3, 0x0, 0x0);
        gbc.writeMem(0xd88f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x27ac);
        EXPECT(gbc.pc(), 0xd891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88f), 0xcb);
        EXPECT(gbc.readMem(0xd890), 0x30);
        // CB 30 022E
        gbc.setState(0xc864, 0x679f, 0xdeb0, 0x3e59, 0xd46d, 0x5194, 0x1, 0x1);
        gbc.writeMem(0xc864, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x679f);
        EXPECT(gbc.pc(), 0xc866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc864), 0xcb);
        EXPECT(gbc.readMem(0xc865), 0x30);
        // CB 30 022F
        gbc.setState(0x4e89, 0xfb73, 0xb980, 0x29f, 0x3f42, 0xaef2, 0x0, 0x1);
        gbc.writeMem(0x4e89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfb73);
        EXPECT(gbc.pc(), 0x4e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0231
        gbc.setState(0x53f1, 0x958, 0xb400, 0x2bb9, 0x2dbd, 0xc075, 0x1, 0x0);
        gbc.writeMem(0x53f1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x958);
        EXPECT(gbc.pc(), 0x53f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0232
        gbc.setState(0xa819, 0x752b, 0x4190, 0xe83b, 0xeafb, 0x1a22, 0x1, 0x1);
        gbc.writeMem(0xa819, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x752b);
        EXPECT(gbc.pc(), 0xa81b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa819), 0xcb);
        EXPECT(gbc.readMem(0xa81a), 0x30);
        // CB 30 0233
        gbc.setState(0x6fcf, 0xfa8e, 0xaf60, 0x9ef6, 0xecce, 0xe5e9, 0x1, 0x0);
        gbc.writeMem(0x6fcf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0x6fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0234
        gbc.setState(0x8b2a, 0x2e90, 0x7b50, 0x48da, 0xbc4c, 0x135, 0x0, 0x0);
        gbc.writeMem(0x8b2a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2e90);
        EXPECT(gbc.pc(), 0x8b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2a), 0xcb);
        EXPECT(gbc.readMem(0x8b2b), 0x30);
        // CB 30 0235
        gbc.setState(0x7063, 0xebe1, 0x1ce0, 0xa1a7, 0x46a3, 0xf89f, 0x0, 0x1);
        gbc.writeMem(0x7063, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xebe1);
        EXPECT(gbc.pc(), 0x7065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0236
        gbc.setState(0x4200, 0xd2b6, 0xb400, 0x5a3, 0x358b, 0xf4e, 0x1, 0x1);
        gbc.writeMem(0x4200, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd2b6);
        EXPECT(gbc.pc(), 0x4202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0237
        gbc.setState(0x28a8, 0x4df8, 0x1bf0, 0xb8da, 0x789e, 0x6ebf, 0x0, 0x1);
        gbc.writeMem(0x28a8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4df8);
        EXPECT(gbc.pc(), 0x28aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0238
        gbc.setState(0x8d61, 0x4e24, 0x8410, 0xe4c0, 0xd18a, 0x68c6, 0x1, 0x0);
        gbc.writeMem(0x8d61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4e24);
        EXPECT(gbc.pc(), 0x8d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d61), 0xcb);
        EXPECT(gbc.readMem(0x8d62), 0x30);
        // CB 30 0239
        gbc.setState(0x1d8c, 0x635a, 0xf400, 0x2bb, 0x8562, 0x544, 0x1, 0x0);
        gbc.writeMem(0x1d8c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x635a);
        EXPECT(gbc.pc(), 0x1d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 023B
        gbc.setState(0x529e, 0x4ff9, 0x5350, 0xdc8b, 0x9a7b, 0xe9c1, 0x1, 0x0);
        gbc.writeMem(0x529e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4ff9);
        EXPECT(gbc.pc(), 0x52a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 023C
        gbc.setState(0xd22f, 0x3d34, 0x8ac0, 0xa8d7, 0xf81f, 0x877a, 0x1, 0x1);
        gbc.writeMem(0xd22f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3d34);
        EXPECT(gbc.pc(), 0xd231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22f), 0xcb);
        EXPECT(gbc.readMem(0xd230), 0x30);
        // CB 30 023D
        gbc.setState(0x58be, 0x9a02, 0x44c0, 0x1c8f, 0xab93, 0x10a8, 0x1, 0x1);
        gbc.writeMem(0x58be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9a02);
        EXPECT(gbc.pc(), 0x58c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 023E
        gbc.setState(0xdf12, 0xe482, 0x5920, 0x4ff, 0x1317, 0xaa27, 0x1, 0x1);
        gbc.writeMem(0xdf12, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe482);
        EXPECT(gbc.pc(), 0xdf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf12), 0xcb);
        EXPECT(gbc.readMem(0xdf13), 0x30);
        // CB 30 023F
        gbc.setState(0xa8a, 0xb3ee, 0x8290, 0x2820, 0xc3e7, 0xc896, 0x1, 0x0);
        gbc.writeMem(0xa8a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb3ee);
        EXPECT(gbc.pc(), 0xa8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0240
        gbc.setState(0x6899, 0x4032, 0xf9d0, 0xc4a1, 0xd89a, 0x959d, 0x1, 0x1);
        gbc.writeMem(0x6899, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4032);
        EXPECT(gbc.pc(), 0x689b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0241
        gbc.setState(0xc477, 0x587a, 0x7180, 0xee48, 0x8cab, 0x424f, 0x0, 0x0);
        gbc.writeMem(0xc477, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x587a);
        EXPECT(gbc.pc(), 0xc479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc477), 0xcb);
        EXPECT(gbc.readMem(0xc478), 0x30);
        // CB 30 0242
        gbc.setState(0xa372, 0x14aa, 0x84a0, 0x8443, 0xb67c, 0x3861, 0x1, 0x0);
        gbc.writeMem(0xa372, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x14aa);
        EXPECT(gbc.pc(), 0xa374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa372), 0xcb);
        EXPECT(gbc.readMem(0xa373), 0x30);
        // CB 30 0243
        gbc.setState(0x2169, 0x90b7, 0xfb80, 0x5ebf, 0x795c, 0x148c, 0x1, 0x0);
        gbc.writeMem(0x2169, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x90b7);
        EXPECT(gbc.pc(), 0x216b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0244
        gbc.setState(0xcf5e, 0x5f64, 0x5040, 0x1192, 0xdd77, 0x43ba, 0x0, 0x0);
        gbc.writeMem(0xcf5e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5f64);
        EXPECT(gbc.pc(), 0xcf60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5e), 0xcb);
        EXPECT(gbc.readMem(0xcf5f), 0x30);
        // CB 30 0245
        gbc.setState(0xa1a1, 0xb6ee, 0x2340, 0x79d, 0x1648, 0x63f9, 0x1, 0x0);
        gbc.writeMem(0xa1a1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb6ee);
        EXPECT(gbc.pc(), 0xa1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a1), 0xcb);
        EXPECT(gbc.readMem(0xa1a2), 0x30);
        // CB 30 0246
        gbc.setState(0xa810, 0xb9f1, 0xc2f0, 0x2380, 0xffa8, 0xaee8, 0x0, 0x0);
        gbc.writeMem(0xa810, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb9f1);
        EXPECT(gbc.pc(), 0xa812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa810), 0xcb);
        EXPECT(gbc.readMem(0xa811), 0x30);
        // CB 30 0247
        gbc.setState(0x87db, 0xf0a9, 0xba20, 0xc3ea, 0xa94b, 0xb8b6, 0x0, 0x1);
        gbc.writeMem(0x87db, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf0a9);
        EXPECT(gbc.pc(), 0x87dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87db), 0xcb);
        EXPECT(gbc.readMem(0x87dc), 0x30);
        // CB 30 0249
        gbc.setState(0x395c, 0x80f4, 0x7420, 0x93a1, 0x6fae, 0x614b, 0x0, 0x0);
        gbc.writeMem(0x395c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x80f4);
        EXPECT(gbc.pc(), 0x395e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 024A
        gbc.setState(0xd6fc, 0x6405, 0x68e0, 0x1f38, 0xff45, 0x7af2, 0x1, 0x1);
        gbc.writeMem(0xd6fc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6405);
        EXPECT(gbc.pc(), 0xd6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6fc), 0xcb);
        EXPECT(gbc.readMem(0xd6fd), 0x30);
        // CB 30 024B
        gbc.setState(0x86d6, 0x2cf9, 0x1ee0, 0x238, 0x799f, 0xc48d, 0x1, 0x1);
        gbc.writeMem(0x86d6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2cf9);
        EXPECT(gbc.pc(), 0x86d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d6), 0xcb);
        EXPECT(gbc.readMem(0x86d7), 0x30);
        // CB 30 024C
        gbc.setState(0xb2aa, 0x95cb, 0xa430, 0x4302, 0xc3d6, 0x55fc, 0x0, 0x0);
        gbc.writeMem(0xb2aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x95cb);
        EXPECT(gbc.pc(), 0xb2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2aa), 0xcb);
        EXPECT(gbc.readMem(0xb2ab), 0x30);
        // CB 30 024D
        gbc.setState(0x50dc, 0x5273, 0x3230, 0x6bf7, 0x5a09, 0xb1ed, 0x0, 0x0);
        gbc.writeMem(0x50dc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5273);
        EXPECT(gbc.pc(), 0x50de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 024E
        gbc.setState(0x7df3, 0x15e6, 0x7d80, 0xad67, 0x8be8, 0xf7ac, 0x1, 0x0);
        gbc.writeMem(0x7df3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x15e6);
        EXPECT(gbc.pc(), 0x7df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 024F
        gbc.setState(0x9a60, 0x8fe4, 0xfc40, 0x37f, 0xb63, 0x5941, 0x1, 0x0);
        gbc.writeMem(0x9a60, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8fe4);
        EXPECT(gbc.pc(), 0x9a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a60), 0xcb);
        EXPECT(gbc.readMem(0x9a61), 0x30);
        // CB 30 0250
        gbc.setState(0xb4cb, 0x9811, 0xd090, 0xcd2b, 0xb12d, 0xa911, 0x0, 0x0);
        gbc.writeMem(0xb4cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9811);
        EXPECT(gbc.pc(), 0xb4cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4cb), 0xcb);
        EXPECT(gbc.readMem(0xb4cc), 0x30);
        // CB 30 0251
        gbc.setState(0xb9a5, 0xe83f, 0xf780, 0xcf99, 0x85da, 0x61fa, 0x1, 0x0);
        gbc.writeMem(0xb9a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe83f);
        EXPECT(gbc.pc(), 0xb9a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9a5), 0xcb);
        EXPECT(gbc.readMem(0xb9a6), 0x30);
        // CB 30 0252
        gbc.setState(0x4dd2, 0x3338, 0x6650, 0x9633, 0x4d07, 0xa1ae, 0x0, 0x0);
        gbc.writeMem(0x4dd2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3338);
        EXPECT(gbc.pc(), 0x4dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0254
        gbc.setState(0xcafe, 0x8c5a, 0xec30, 0xd884, 0x9cab, 0x329b, 0x1, 0x0);
        gbc.writeMem(0xcafe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8c5a);
        EXPECT(gbc.pc(), 0xcb00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafe), 0xcb);
        EXPECT(gbc.readMem(0xcaff), 0x30);
        // CB 30 0255
        gbc.setState(0xfe4, 0x2b4d, 0xf560, 0xda2f, 0xaa07, 0x64a1, 0x0, 0x1);
        gbc.writeMem(0xfe4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2b4d);
        EXPECT(gbc.pc(), 0xfe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0256
        gbc.setState(0x7b11, 0x7e9c, 0x3fc0, 0xcec0, 0xd81d, 0xedd, 0x0, 0x1);
        gbc.writeMem(0x7b11, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7e9c);
        EXPECT(gbc.pc(), 0x7b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0257
        gbc.setState(0x2506, 0x70e2, 0xcbb0, 0xef41, 0x87f0, 0x4e14, 0x1, 0x0);
        gbc.writeMem(0x2506, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x70e2);
        EXPECT(gbc.pc(), 0x2508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0258
        gbc.setState(0x77c8, 0x1e6d, 0x3f50, 0xd053, 0x8800, 0xef49, 0x0, 0x0);
        gbc.writeMem(0x77c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1e6d);
        EXPECT(gbc.pc(), 0x77ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0259
        gbc.setState(0x7037, 0xdd9c, 0xa720, 0x8260, 0x6b48, 0x4e12, 0x0, 0x1);
        gbc.writeMem(0x7037, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdd9c);
        EXPECT(gbc.pc(), 0x7039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 025A
        gbc.setState(0x8cf0, 0x690f, 0xd1d0, 0xe379, 0x15e0, 0x4aca, 0x1, 0x0);
        gbc.writeMem(0x8cf0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x690f);
        EXPECT(gbc.pc(), 0x8cf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf0), 0xcb);
        EXPECT(gbc.readMem(0x8cf1), 0x30);
        // CB 30 025B
        gbc.setState(0xe57f, 0x3b60, 0x7300, 0xbf2d, 0xd705, 0x1cee, 0x1, 0x1);
        gbc.writeMem(0xe57f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3b60);
        EXPECT(gbc.pc(), 0xe581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe57f), 0xcb);
        EXPECT(gbc.readMem(0xe580), 0x30);
        // CB 30 025C
        gbc.setState(0x2ac7, 0x707c, 0xb5a0, 0x8760, 0xaf5c, 0x2a35, 0x0, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x707c);
        EXPECT(gbc.pc(), 0x2ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 025D
        gbc.setState(0xa31e, 0x1da5, 0xfbd0, 0xdde7, 0x2e66, 0x27cb, 0x0, 0x1);
        gbc.writeMem(0xa31e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1da5);
        EXPECT(gbc.pc(), 0xa320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31e), 0xcb);
        EXPECT(gbc.readMem(0xa31f), 0x30);
        // CB 30 025E
        gbc.setState(0xcd7f, 0x2eb2, 0x6c70, 0x40e2, 0x6e25, 0x609a, 0x1, 0x1);
        gbc.writeMem(0xcd7f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2eb2);
        EXPECT(gbc.pc(), 0xcd81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7f), 0xcb);
        EXPECT(gbc.readMem(0xcd80), 0x30);
        // CB 30 025F
        gbc.setState(0x3f89, 0x742c, 0xb540, 0x445e, 0xf0ad, 0x66c6, 0x0, 0x0);
        gbc.writeMem(0x3f89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x742c);
        EXPECT(gbc.pc(), 0x3f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0260
        gbc.setState(0xe67b, 0x407a, 0x6d30, 0xdd7d, 0xf8a3, 0x96fa, 0x1, 0x0);
        gbc.writeMem(0xe67b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x407a);
        EXPECT(gbc.pc(), 0xe67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe67b), 0xcb);
        EXPECT(gbc.readMem(0xe67c), 0x30);
        // CB 30 0261
        gbc.setState(0x5eb1, 0x45e9, 0x6c10, 0x2728, 0x3465, 0x4d03, 0x1, 0x1);
        gbc.writeMem(0x5eb1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x45e9);
        EXPECT(gbc.pc(), 0x5eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0262
        gbc.setState(0x7293, 0x6bf, 0xf800, 0xeae, 0x27f1, 0xd266, 0x0, 0x0);
        gbc.writeMem(0x7293, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6bf);
        EXPECT(gbc.pc(), 0x7295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0263
        gbc.setState(0x87bd, 0xbd13, 0x8f90, 0x3372, 0x7f2c, 0x9237, 0x0, 0x1);
        gbc.writeMem(0x87bd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbd13);
        EXPECT(gbc.pc(), 0x87bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bd), 0xcb);
        EXPECT(gbc.readMem(0x87be), 0x30);
        // CB 30 0264
        gbc.setState(0xab5, 0x433b, 0x7d40, 0x46f6, 0xaf2, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xab5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x433b);
        EXPECT(gbc.pc(), 0xab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0265
        gbc.setState(0x9e7e, 0x2c9, 0x2e0, 0x233d, 0xd788, 0x68db, 0x0, 0x1);
        gbc.writeMem(0x9e7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2c9);
        EXPECT(gbc.pc(), 0x9e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e7e), 0xcb);
        EXPECT(gbc.readMem(0x9e7f), 0x30);
        // CB 30 0266
        gbc.setState(0x1463, 0x1adc, 0x95e0, 0xa926, 0xf127, 0xf3df, 0x1, 0x0);
        gbc.writeMem(0x1463, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1adc);
        EXPECT(gbc.pc(), 0x1465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0267
        gbc.setState(0x8d7a, 0x388a, 0x5730, 0x354, 0x2971, 0x837c, 0x0, 0x0);
        gbc.writeMem(0x8d7a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x388a);
        EXPECT(gbc.pc(), 0x8d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7a), 0xcb);
        EXPECT(gbc.readMem(0x8d7b), 0x30);
        // CB 30 0268
        gbc.setState(0xb15, 0xfc4, 0xd340, 0x93ce, 0xfd71, 0x9a15, 0x1, 0x0);
        gbc.writeMem(0xb15, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfc4);
        EXPECT(gbc.pc(), 0xb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 026A
        gbc.setState(0x7b28, 0x1311, 0x2b30, 0xa71a, 0xaaf2, 0x44fd, 0x1, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1311);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 026B
        gbc.setState(0xd011, 0xb831, 0x3490, 0xf5a, 0xc5e6, 0x3a62, 0x1, 0x1);
        gbc.writeMem(0xd011, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb831);
        EXPECT(gbc.pc(), 0xd013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd011), 0xcb);
        EXPECT(gbc.readMem(0xd012), 0x30);
        // CB 30 026D
        gbc.setState(0xe2d9, 0xefcb, 0x6cf0, 0x1b18, 0xf3da, 0x77da, 0x1, 0x0);
        gbc.writeMem(0xe2d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xefcb);
        EXPECT(gbc.pc(), 0xe2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d9), 0xcb);
        EXPECT(gbc.readMem(0xe2da), 0x30);
        // CB 30 026E
        gbc.setState(0x9cf7, 0x24f5, 0xb470, 0xd953, 0xb78c, 0x5f70, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x24f5);
        EXPECT(gbc.pc(), 0x9cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf7), 0xcb);
        EXPECT(gbc.readMem(0x9cf8), 0x30);
        // CB 30 026F
        gbc.setState(0xc212, 0xb63, 0x100, 0x83ab, 0xf878, 0x3d83, 0x1, 0x0);
        gbc.writeMem(0xc212, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb63);
        EXPECT(gbc.pc(), 0xc214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc212), 0xcb);
        EXPECT(gbc.readMem(0xc213), 0x30);
        // CB 30 0270
        gbc.setState(0xd214, 0x683e, 0x4010, 0xabc4, 0x91c0, 0xd033, 0x0, 0x1);
        gbc.writeMem(0xd214, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x683e);
        EXPECT(gbc.pc(), 0xd216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd214), 0xcb);
        EXPECT(gbc.readMem(0xd215), 0x30);
        // CB 30 0271
        gbc.setState(0x2068, 0x6015, 0x7bf0, 0x6f0a, 0xf29a, 0x6060, 0x1, 0x1);
        gbc.writeMem(0x2068, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6015);
        EXPECT(gbc.pc(), 0x206a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0272
        gbc.setState(0x40a8, 0xa47b, 0x5e60, 0x289, 0x3758, 0xef22, 0x1, 0x0);
        gbc.writeMem(0x40a8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa47b);
        EXPECT(gbc.pc(), 0x40aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0274
        gbc.setState(0x3a71, 0x4444, 0x51c0, 0x5fc6, 0xc328, 0x91e1, 0x0, 0x1);
        gbc.writeMem(0x3a71, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4444);
        EXPECT(gbc.pc(), 0x3a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0275
        gbc.setState(0xc3ab, 0xa9a9, 0x1b0, 0x3e4, 0x34b0, 0x77c9, 0x1, 0x0);
        gbc.writeMem(0xc3ab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa9a9);
        EXPECT(gbc.pc(), 0xc3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ab), 0xcb);
        EXPECT(gbc.readMem(0xc3ac), 0x30);
        // CB 30 0276
        gbc.setState(0xd833, 0x9260, 0xd40, 0x36b7, 0x52af, 0x2bcc, 0x1, 0x1);
        gbc.writeMem(0xd833, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9260);
        EXPECT(gbc.pc(), 0xd835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd833), 0xcb);
        EXPECT(gbc.readMem(0xd834), 0x30);
        // CB 30 0277
        gbc.setState(0x9ab1, 0xcdb9, 0x51b0, 0xa6d7, 0x7bf1, 0x5680, 0x0, 0x0);
        gbc.writeMem(0x9ab1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcdb9);
        EXPECT(gbc.pc(), 0x9ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab1), 0xcb);
        EXPECT(gbc.readMem(0x9ab2), 0x30);
        // CB 30 0278
        gbc.setState(0x5de4, 0x53db, 0xce20, 0x5f5f, 0x75fc, 0xd788, 0x1, 0x1);
        gbc.writeMem(0x5de4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x53db);
        EXPECT(gbc.pc(), 0x5de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0279
        gbc.setState(0xd21b, 0x2510, 0xa590, 0xcc60, 0xe9f2, 0x94e5, 0x0, 0x0);
        gbc.writeMem(0xd21b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2510);
        EXPECT(gbc.pc(), 0xd21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21b), 0xcb);
        EXPECT(gbc.readMem(0xd21c), 0x30);
        // CB 30 027A
        gbc.setState(0xb11e, 0x8ea9, 0x480, 0xe068, 0x3869, 0x9d5, 0x0, 0x0);
        gbc.writeMem(0xb11e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8ea9);
        EXPECT(gbc.pc(), 0xb120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11e), 0xcb);
        EXPECT(gbc.readMem(0xb11f), 0x30);
        // CB 30 027B
        gbc.setState(0xeacd, 0xf8ca, 0x3ae0, 0x2b69, 0xdda7, 0x204c, 0x0, 0x1);
        gbc.writeMem(0xeacd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf8ca);
        EXPECT(gbc.pc(), 0xeacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeacd), 0xcb);
        EXPECT(gbc.readMem(0xeace), 0x30);
        // CB 30 027C
        gbc.setState(0x8fce, 0x26c6, 0x24f0, 0x5f6d, 0xf884, 0xd1c8, 0x0, 0x1);
        gbc.writeMem(0x8fce, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x26c6);
        EXPECT(gbc.pc(), 0x8fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fce), 0xcb);
        EXPECT(gbc.readMem(0x8fcf), 0x30);
        // CB 30 027D
        gbc.setState(0xbb0d, 0xa1fc, 0x9550, 0xcade, 0x285b, 0x2da7, 0x1, 0x0);
        gbc.writeMem(0xbb0d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa1fc);
        EXPECT(gbc.pc(), 0xbb0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb0d), 0xcb);
        EXPECT(gbc.readMem(0xbb0e), 0x30);
        // CB 30 027E
        gbc.setState(0x64e6, 0xa80f, 0xbc90, 0xb1f6, 0x55eb, 0x1532, 0x1, 0x0);
        gbc.writeMem(0x64e6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa80f);
        EXPECT(gbc.pc(), 0x64e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 027F
        gbc.setState(0xdada, 0x32b2, 0x85e0, 0x7f24, 0xdb73, 0xa704, 0x0, 0x0);
        gbc.writeMem(0xdada, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x32b2);
        EXPECT(gbc.pc(), 0xdadc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdada), 0xcb);
        EXPECT(gbc.readMem(0xdadb), 0x30);
        // CB 30 0280
        gbc.setState(0x9db, 0xdd81, 0x7800, 0x9280, 0x3ecf, 0xf10, 0x0, 0x0);
        gbc.writeMem(0x9db, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdd81);
        EXPECT(gbc.pc(), 0x9dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0281
        gbc.setState(0xc1c6, 0xfdd1, 0xf760, 0x9eff, 0xe10b, 0x4aae, 0x0, 0x0);
        gbc.writeMem(0xc1c6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfdd1);
        EXPECT(gbc.pc(), 0xc1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c6), 0xcb);
        EXPECT(gbc.readMem(0xc1c7), 0x30);
        // CB 30 0282
        gbc.setState(0xc5a5, 0x108, 0x8cd0, 0x9fd6, 0x7e9d, 0x191c, 0x1, 0x0);
        gbc.writeMem(0xc5a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x108);
        EXPECT(gbc.pc(), 0xc5a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a5), 0xcb);
        EXPECT(gbc.readMem(0xc5a6), 0x30);
        // CB 30 0283
        gbc.setState(0x8d4, 0x8d95, 0xc2a0, 0x6015, 0xbe19, 0x5d11, 0x0, 0x1);
        gbc.writeMem(0x8d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8d95);
        EXPECT(gbc.pc(), 0x8d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0284
        gbc.setState(0xa766, 0xc09a, 0xaac0, 0x144, 0x8191, 0x855f, 0x0, 0x0);
        gbc.writeMem(0xa766, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc09a);
        EXPECT(gbc.pc(), 0xa768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa766), 0xcb);
        EXPECT(gbc.readMem(0xa767), 0x30);
        // CB 30 0285
        gbc.setState(0x99c0, 0xbd9a, 0x2480, 0xff09, 0x500f, 0xdb57, 0x0, 0x0);
        gbc.writeMem(0x99c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbd9a);
        EXPECT(gbc.pc(), 0x99c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c0), 0xcb);
        EXPECT(gbc.readMem(0x99c1), 0x30);
        // CB 30 0286
        gbc.setState(0xd6c0, 0x152b, 0x8200, 0x2d61, 0xf210, 0xf3bb, 0x1, 0x0);
        gbc.writeMem(0xd6c0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x152b);
        EXPECT(gbc.pc(), 0xd6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c0), 0xcb);
        EXPECT(gbc.readMem(0xd6c1), 0x30);
        // CB 30 0287
        gbc.setState(0xc6e4, 0xf06f, 0x3470, 0xbe38, 0xd013, 0x93e2, 0x1, 0x0);
        gbc.writeMem(0xc6e4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf06f);
        EXPECT(gbc.pc(), 0xc6e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e4), 0xcb);
        EXPECT(gbc.readMem(0xc6e5), 0x30);
        // CB 30 0288
        gbc.setState(0x238c, 0x478e, 0x1b80, 0xf355, 0xd153, 0x987c, 0x1, 0x0);
        gbc.writeMem(0x238c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x478e);
        EXPECT(gbc.pc(), 0x238e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0289
        gbc.setState(0xafdb, 0xf01a, 0x7250, 0x858a, 0x8a31, 0x4fc3, 0x1, 0x0);
        gbc.writeMem(0xafdb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf01a);
        EXPECT(gbc.pc(), 0xafdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafdb), 0xcb);
        EXPECT(gbc.readMem(0xafdc), 0x30);
        // CB 30 028A
        gbc.setState(0xebac, 0x482, 0x67c0, 0x768c, 0xee9c, 0xcd70, 0x1, 0x1);
        gbc.writeMem(0xebac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x482);
        EXPECT(gbc.pc(), 0xebae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebac), 0xcb);
        EXPECT(gbc.readMem(0xebad), 0x30);
        // CB 30 028B
        gbc.setState(0x6eee, 0xd90b, 0xeda0, 0xe93a, 0x5d97, 0x3047, 0x1, 0x0);
        gbc.writeMem(0x6eee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd90b);
        EXPECT(gbc.pc(), 0x6ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 028C
        gbc.setState(0xd7a6, 0x804a, 0xecf0, 0xae86, 0x9ac6, 0xf986, 0x0, 0x1);
        gbc.writeMem(0xd7a6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x804a);
        EXPECT(gbc.pc(), 0xd7a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a6), 0xcb);
        EXPECT(gbc.readMem(0xd7a7), 0x30);
        // CB 30 028E
        gbc.setState(0xa389, 0x3a43, 0x9a10, 0x2c96, 0x6f58, 0x7e35, 0x1, 0x0);
        gbc.writeMem(0xa389, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3a43);
        EXPECT(gbc.pc(), 0xa38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa389), 0xcb);
        EXPECT(gbc.readMem(0xa38a), 0x30);
        // CB 30 028F
        gbc.setState(0xc668, 0x428c, 0xe3d0, 0xd22, 0x765e, 0x24df, 0x1, 0x1);
        gbc.writeMem(0xc668, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x428c);
        EXPECT(gbc.pc(), 0xc66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc668), 0xcb);
        EXPECT(gbc.readMem(0xc669), 0x30);
        // CB 30 0290
        gbc.setState(0xb30a, 0xfec9, 0x6b30, 0xac6e, 0x7c96, 0xb25b, 0x1, 0x0);
        gbc.writeMem(0xb30a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfec9);
        EXPECT(gbc.pc(), 0xb30c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb30a), 0xcb);
        EXPECT(gbc.readMem(0xb30b), 0x30);
        // CB 30 0291
        gbc.setState(0x7ac, 0xe7a2, 0xc1b0, 0x7ffa, 0xaa34, 0xf615, 0x0, 0x0);
        gbc.writeMem(0x7ac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe7a2);
        EXPECT(gbc.pc(), 0x7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0292
        gbc.setState(0x64d9, 0x888, 0x2330, 0x4ac9, 0x15cb, 0xc58e, 0x1, 0x1);
        gbc.writeMem(0x64d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x888);
        EXPECT(gbc.pc(), 0x64db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0293
        gbc.setState(0x72e9, 0xcf9a, 0xa8c0, 0xca4b, 0xe95f, 0x7da3, 0x1, 0x1);
        gbc.writeMem(0x72e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcf9a);
        EXPECT(gbc.pc(), 0x72eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0294
        gbc.setState(0xaca8, 0x6f1f, 0x28c0, 0x401e, 0xf501, 0x4fe2, 0x1, 0x1);
        gbc.writeMem(0xaca8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6f1f);
        EXPECT(gbc.pc(), 0xacaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca8), 0xcb);
        EXPECT(gbc.readMem(0xaca9), 0x30);
        // CB 30 0296
        gbc.setState(0xcf49, 0xbb34, 0x3ef0, 0x2e1b, 0x7c3b, 0xc11, 0x1, 0x0);
        gbc.writeMem(0xcf49, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbb34);
        EXPECT(gbc.pc(), 0xcf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf49), 0xcb);
        EXPECT(gbc.readMem(0xcf4a), 0x30);
        // CB 30 0297
        gbc.setState(0xbe2d, 0xf097, 0xa730, 0xfbeb, 0x6a4a, 0x6e18, 0x1, 0x0);
        gbc.writeMem(0xbe2d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf097);
        EXPECT(gbc.pc(), 0xbe2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe2d), 0xcb);
        EXPECT(gbc.readMem(0xbe2e), 0x30);
        // CB 30 0298
        gbc.setState(0x6da6, 0x26c6, 0xaf40, 0xc865, 0x3218, 0x5f79, 0x0, 0x0);
        gbc.writeMem(0x6da6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x26c6);
        EXPECT(gbc.pc(), 0x6da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0299
        gbc.setState(0x34af, 0xe040, 0x8ef0, 0x3072, 0xd06, 0xd31a, 0x1, 0x0);
        gbc.writeMem(0x34af, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe040);
        EXPECT(gbc.pc(), 0x34b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 029A
        gbc.setState(0xcbd6, 0x41e3, 0xf330, 0x5fad, 0xf548, 0x8da8, 0x0, 0x0);
        gbc.writeMem(0xcbd6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x41e3);
        EXPECT(gbc.pc(), 0xcbd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd6), 0xcb);
        EXPECT(gbc.readMem(0xcbd7), 0x30);
        // CB 30 029B
        gbc.setState(0xc9a, 0xb258, 0xe790, 0x186b, 0xd8f1, 0xc92e, 0x1, 0x0);
        gbc.writeMem(0xc9a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb258);
        EXPECT(gbc.pc(), 0xc9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 029C
        gbc.setState(0xc532, 0xfb5d, 0x1c30, 0x7fe7, 0x51b5, 0xc48a, 0x0, 0x0);
        gbc.writeMem(0xc532, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfb5d);
        EXPECT(gbc.pc(), 0xc534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc532), 0xcb);
        EXPECT(gbc.readMem(0xc533), 0x30);
        // CB 30 029D
        gbc.setState(0x10b, 0x70de, 0xe860, 0x531f, 0xad41, 0x8247, 0x1, 0x0);
        gbc.writeMem(0x10b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x70de);
        EXPECT(gbc.pc(), 0x10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 029E
        gbc.setState(0x3ebe, 0x37c3, 0x2e30, 0xd296, 0x9c48, 0x971e, 0x0, 0x0);
        gbc.writeMem(0x3ebe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x37c3);
        EXPECT(gbc.pc(), 0x3ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 029F
        gbc.setState(0xa1f6, 0x4d5, 0x49d0, 0xa5c6, 0x2ab4, 0xb1c9, 0x1, 0x1);
        gbc.writeMem(0xa1f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4d5);
        EXPECT(gbc.pc(), 0xa1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f6), 0xcb);
        EXPECT(gbc.readMem(0xa1f7), 0x30);
        // CB 30 02A0
        gbc.setState(0xe9ed, 0xe574, 0x2fb0, 0x8430, 0x94e5, 0x7dd2, 0x1, 0x0);
        gbc.writeMem(0xe9ed, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe574);
        EXPECT(gbc.pc(), 0xe9ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ed), 0xcb);
        EXPECT(gbc.readMem(0xe9ee), 0x30);
        // CB 30 02A1
        gbc.setState(0x9723, 0x26ea, 0xaa60, 0x5ebf, 0xac1a, 0xfc4, 0x1, 0x1);
        gbc.writeMem(0x9723, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x26ea);
        EXPECT(gbc.pc(), 0x9725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9723), 0xcb);
        EXPECT(gbc.readMem(0x9724), 0x30);
        // CB 30 02A2
        gbc.setState(0x1ea1, 0xd8a4, 0xfe0, 0x2f40, 0xde1b, 0x32d4, 0x1, 0x1);
        gbc.writeMem(0x1ea1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd8a4);
        EXPECT(gbc.pc(), 0x1ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02A3
        gbc.setState(0x4f06, 0x8cf9, 0xa60, 0xc06, 0x93b4, 0x58ed, 0x1, 0x0);
        gbc.writeMem(0x4f06, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8cf9);
        EXPECT(gbc.pc(), 0x4f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02A4
        gbc.setState(0x6177, 0xad9e, 0xcb10, 0xd296, 0x4ce5, 0xfedd, 0x0, 0x1);
        gbc.writeMem(0x6177, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xad9e);
        EXPECT(gbc.pc(), 0x6179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02A5
        gbc.setState(0xc162, 0xddad, 0x53b0, 0xe36b, 0x72be, 0x300a, 0x1, 0x0);
        gbc.writeMem(0xc162, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xddad);
        EXPECT(gbc.pc(), 0xc164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc162), 0xcb);
        EXPECT(gbc.readMem(0xc163), 0x30);
        // CB 30 02A6
        gbc.setState(0x4b85, 0xe7f8, 0x6160, 0x7aea, 0xc94, 0xf1dd, 0x0, 0x0);
        gbc.writeMem(0x4b85, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe7f8);
        EXPECT(gbc.pc(), 0x4b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02A9
        gbc.setState(0x7ea0, 0x5921, 0xe520, 0x8533, 0x1d17, 0x3209, 0x0, 0x1);
        gbc.writeMem(0x7ea0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5921);
        EXPECT(gbc.pc(), 0x7ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02AA
        gbc.setState(0xcb8e, 0xa0be, 0xe000, 0x803b, 0x97ab, 0xaeb, 0x1, 0x1);
        gbc.writeMem(0xcb8e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa0be);
        EXPECT(gbc.pc(), 0xcb90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8e), 0xcb);
        EXPECT(gbc.readMem(0xcb8f), 0x30);
        // CB 30 02AB
        gbc.setState(0x2a71, 0xb152, 0x6f70, 0x99d0, 0x3d37, 0x91ad, 0x1, 0x1);
        gbc.writeMem(0x2a71, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb152);
        EXPECT(gbc.pc(), 0x2a73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02AC
        gbc.setState(0x3bb2, 0x4383, 0x85c0, 0x50a5, 0x55c6, 0xc66f, 0x0, 0x0);
        gbc.writeMem(0x3bb2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4383);
        EXPECT(gbc.pc(), 0x3bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02AD
        gbc.setState(0x91d9, 0xa250, 0xe2d0, 0xf7af, 0xac11, 0x5219, 0x0, 0x0);
        gbc.writeMem(0x91d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa250);
        EXPECT(gbc.pc(), 0x91db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d9), 0xcb);
        EXPECT(gbc.readMem(0x91da), 0x30);
        // CB 30 02AE
        gbc.setState(0x9d21, 0x74e6, 0x2880, 0x8ad7, 0x4314, 0xfdec, 0x0, 0x1);
        gbc.writeMem(0x9d21, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x74e6);
        EXPECT(gbc.pc(), 0x9d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d21), 0xcb);
        EXPECT(gbc.readMem(0x9d22), 0x30);
        // CB 30 02AF
        gbc.setState(0x19be, 0x65cd, 0x4950, 0x5e3d, 0x9bc2, 0xf0c9, 0x0, 0x0);
        gbc.writeMem(0x19be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x65cd);
        EXPECT(gbc.pc(), 0x19c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02B0
        gbc.setState(0x6470, 0x8273, 0xd890, 0xec0d, 0x62c4, 0xc974, 0x1, 0x1);
        gbc.writeMem(0x6470, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8273);
        EXPECT(gbc.pc(), 0x6472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02B1
        gbc.setState(0x1476, 0xc059, 0x9250, 0xf872, 0xb049, 0xa98a, 0x1, 0x1);
        gbc.writeMem(0x1476, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc059);
        EXPECT(gbc.pc(), 0x1478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02B2
        gbc.setState(0x4e84, 0x1a2, 0x30a0, 0x33f1, 0x71b2, 0x8a9, 0x1, 0x1);
        gbc.writeMem(0x4e84, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1a2);
        EXPECT(gbc.pc(), 0x4e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02B4
        gbc.setState(0x166b, 0x6f19, 0x6220, 0x4480, 0x8456, 0x9155, 0x0, 0x1);
        gbc.writeMem(0x166b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6f19);
        EXPECT(gbc.pc(), 0x166d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02B5
        gbc.setState(0x6f0a, 0xe338, 0x8860, 0x738a, 0xc593, 0x5c60, 0x0, 0x1);
        gbc.writeMem(0x6f0a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe338);
        EXPECT(gbc.pc(), 0x6f0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02B6
        gbc.setState(0xa97e, 0xe35b, 0x9dc0, 0x508b, 0x24de, 0xd3ea, 0x0, 0x0);
        gbc.writeMem(0xa97e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe35b);
        EXPECT(gbc.pc(), 0xa980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97e), 0xcb);
        EXPECT(gbc.readMem(0xa97f), 0x30);
        // CB 30 02B7
        gbc.setState(0xc270, 0xebc2, 0x90f0, 0x626c, 0x995e, 0xec73, 0x1, 0x1);
        gbc.writeMem(0xc270, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xebc2);
        EXPECT(gbc.pc(), 0xc272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc270), 0xcb);
        EXPECT(gbc.readMem(0xc271), 0x30);
        // CB 30 02B8
        gbc.setState(0xd639, 0x4bd3, 0xc430, 0xca97, 0x2819, 0x196, 0x0, 0x1);
        gbc.writeMem(0xd639, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4bd3);
        EXPECT(gbc.pc(), 0xd63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd639), 0xcb);
        EXPECT(gbc.readMem(0xd63a), 0x30);
        // CB 30 02B9
        gbc.setState(0x346d, 0x2aec, 0xc100, 0x6930, 0xc40e, 0xad4a, 0x0, 0x1);
        gbc.writeMem(0x346d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2aec);
        EXPECT(gbc.pc(), 0x346f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02BA
        gbc.setState(0xa3e9, 0x1e5e, 0xd30, 0x934a, 0xbbea, 0x5edf, 0x0, 0x0);
        gbc.writeMem(0xa3e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1e5e);
        EXPECT(gbc.pc(), 0xa3eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e9), 0xcb);
        EXPECT(gbc.readMem(0xa3ea), 0x30);
        // CB 30 02BB
        gbc.setState(0xef21, 0xcc78, 0x7960, 0x1813, 0xd9, 0x2151, 0x0, 0x1);
        gbc.writeMem(0xef21, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcc78);
        EXPECT(gbc.pc(), 0xef23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef21), 0xcb);
        EXPECT(gbc.readMem(0xef22), 0x30);
        // CB 30 02BC
        gbc.setState(0x6ddf, 0xb05, 0xcf70, 0x1b48, 0x28f8, 0xe33, 0x1, 0x0);
        gbc.writeMem(0x6ddf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb05);
        EXPECT(gbc.pc(), 0x6de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02BD
        gbc.setState(0x1635, 0x5e5f, 0xa6d0, 0x5321, 0xd401, 0x3c2d, 0x0, 0x1);
        gbc.writeMem(0x1635, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5e5f);
        EXPECT(gbc.pc(), 0x1637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02BE
        gbc.setState(0xa00b, 0x3da1, 0x8b60, 0x6637, 0x7422, 0x664b, 0x1, 0x1);
        gbc.writeMem(0xa00b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3da1);
        EXPECT(gbc.pc(), 0xa00d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00b), 0xcb);
        EXPECT(gbc.readMem(0xa00c), 0x30);
        // CB 30 02BF
        gbc.setState(0xb1cb, 0xe9a7, 0x870, 0xa38d, 0x125e, 0xdaee, 0x1, 0x0);
        gbc.writeMem(0xb1cb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe9a7);
        EXPECT(gbc.pc(), 0xb1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1cb), 0xcb);
        EXPECT(gbc.readMem(0xb1cc), 0x30);
        // CB 30 02C0
        gbc.setState(0x7a16, 0x25da, 0xe8c0, 0x7d7f, 0x3819, 0x6948, 0x1, 0x1);
        gbc.writeMem(0x7a16, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x25da);
        EXPECT(gbc.pc(), 0x7a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02C1
        gbc.setState(0x9320, 0x35c5, 0x54e0, 0xa10, 0xe63a, 0x849a, 0x1, 0x1);
        gbc.writeMem(0x9320, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x35c5);
        EXPECT(gbc.pc(), 0x9322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9320), 0xcb);
        EXPECT(gbc.readMem(0x9321), 0x30);
        // CB 30 02C3
        gbc.setState(0xb7ae, 0x3c5d, 0x87f0, 0x8f48, 0xc431, 0x3921, 0x0, 0x0);
        gbc.writeMem(0xb7ae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3c5d);
        EXPECT(gbc.pc(), 0xb7b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ae), 0xcb);
        EXPECT(gbc.readMem(0xb7af), 0x30);
        // CB 30 02C4
        gbc.setState(0x731d, 0x85a9, 0x5090, 0x22be, 0x9116, 0xc344, 0x0, 0x0);
        gbc.writeMem(0x731d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x85a9);
        EXPECT(gbc.pc(), 0x731f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02C5
        gbc.setState(0x5e10, 0x86fd, 0xaec0, 0x595f, 0xc8db, 0x6589, 0x0, 0x0);
        gbc.writeMem(0x5e10, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x86fd);
        EXPECT(gbc.pc(), 0x5e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02C6
        gbc.setState(0xb47f, 0xb486, 0x48d0, 0xad98, 0xcf95, 0x738f, 0x0, 0x1);
        gbc.writeMem(0xb47f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        EXPECT(gbc.readMem(0xb480), 0x30);
        // CB 30 02C7
        gbc.setState(0x3bfd, 0x1075, 0x20b0, 0x18db, 0xbef7, 0xa772, 0x1, 0x0);
        gbc.writeMem(0x3bfd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1075);
        EXPECT(gbc.pc(), 0x3bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02C8
        gbc.setState(0x4a97, 0xaa81, 0x4f80, 0xa564, 0x10, 0x3f4f, 0x1, 0x0);
        gbc.writeMem(0x4a97, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaa81);
        EXPECT(gbc.pc(), 0x4a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02C9
        gbc.setState(0x3dac, 0x4d04, 0x3290, 0xc5d1, 0xcf16, 0x854b, 0x0, 0x1);
        gbc.writeMem(0x3dac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4d04);
        EXPECT(gbc.pc(), 0x3dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02CA
        gbc.setState(0x770f, 0xe4ce, 0x7fa0, 0xb593, 0xeb50, 0xb9bb, 0x1, 0x1);
        gbc.writeMem(0x770f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe4ce);
        EXPECT(gbc.pc(), 0x7711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02CB
        gbc.setState(0xa36b, 0xf14e, 0x8b30, 0xc221, 0xeb15, 0x2e4e, 0x0, 0x0);
        gbc.writeMem(0xa36b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf14e);
        EXPECT(gbc.pc(), 0xa36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa36b), 0xcb);
        EXPECT(gbc.readMem(0xa36c), 0x30);
        // CB 30 02CC
        gbc.setState(0x998, 0x4bb7, 0xa1d0, 0x4d99, 0xeb18, 0x8532, 0x1, 0x1);
        gbc.writeMem(0x998, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4bb7);
        EXPECT(gbc.pc(), 0x99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02CD
        gbc.setState(0xd54, 0xcfed, 0x8f90, 0x849e, 0x7cb6, 0x72ea, 0x1, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcfed);
        EXPECT(gbc.pc(), 0xd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02CE
        gbc.setState(0x58f4, 0xfaf4, 0x63f0, 0x5363, 0x3f91, 0x3092, 0x1, 0x0);
        gbc.writeMem(0x58f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfaf4);
        EXPECT(gbc.pc(), 0x58f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02CF
        gbc.setState(0x2acf, 0xea8b, 0x2990, 0xe055, 0xb867, 0x33bc, 0x0, 0x1);
        gbc.writeMem(0x2acf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xea8b);
        EXPECT(gbc.pc(), 0x2ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02D1
        gbc.setState(0x50f7, 0x4c7e, 0x750, 0xb66f, 0x4d6f, 0x8f33, 0x1, 0x1);
        gbc.writeMem(0x50f7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4c7e);
        EXPECT(gbc.pc(), 0x50f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02D2
        gbc.setState(0x726d, 0xb0dc, 0xa60, 0xcc68, 0xca76, 0x16af, 0x0, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb0dc);
        EXPECT(gbc.pc(), 0x726f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02D3
        gbc.setState(0x3acd, 0xbc9d, 0x6350, 0x4f5c, 0x4bd0, 0x3f4d, 0x1, 0x1);
        gbc.writeMem(0x3acd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbc9d);
        EXPECT(gbc.pc(), 0x3acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02D4
        gbc.setState(0x56ae, 0x36e7, 0xef70, 0x9c81, 0x1db8, 0x1ed, 0x0, 0x0);
        gbc.writeMem(0x56ae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x36e7);
        EXPECT(gbc.pc(), 0x56b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02D5
        gbc.setState(0xc9a5, 0x2377, 0xa9c0, 0xb97d, 0xfc59, 0xc6e5, 0x0, 0x1);
        gbc.writeMem(0xc9a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2377);
        EXPECT(gbc.pc(), 0xc9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a5), 0xcb);
        EXPECT(gbc.readMem(0xc9a6), 0x30);
        // CB 30 02D6
        gbc.setState(0xb75e, 0x4e21, 0xf90, 0xf775, 0xdc39, 0x5e27, 0x1, 0x0);
        gbc.writeMem(0xb75e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4e21);
        EXPECT(gbc.pc(), 0xb760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75e), 0xcb);
        EXPECT(gbc.readMem(0xb75f), 0x30);
        // CB 30 02D7
        gbc.setState(0xdcab, 0x9d5b, 0x5ed0, 0x330c, 0x8ac9, 0xd121, 0x1, 0x0);
        gbc.writeMem(0xdcab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9d5b);
        EXPECT(gbc.pc(), 0xdcad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcab), 0xcb);
        EXPECT(gbc.readMem(0xdcac), 0x30);
        // CB 30 02D8
        gbc.setState(0x12e0, 0xbd50, 0x1350, 0x29b5, 0xcd99, 0x3554, 0x0, 0x1);
        gbc.writeMem(0x12e0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbd50);
        EXPECT(gbc.pc(), 0x12e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02D9
        gbc.setState(0x5d08, 0x68e5, 0x4a40, 0xc1c9, 0x38de, 0x2640, 0x0, 0x0);
        gbc.writeMem(0x5d08, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x68e5);
        EXPECT(gbc.pc(), 0x5d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02DA
        gbc.setState(0x6000, 0x893a, 0x2fa0, 0x36d3, 0xf698, 0x3e51, 0x1, 0x1);
        gbc.writeMem(0x6000, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x893a);
        EXPECT(gbc.pc(), 0x6002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02DB
        gbc.setState(0x2bd0, 0x7097, 0xd1a0, 0xc863, 0x38d, 0x7296, 0x0, 0x1);
        gbc.writeMem(0x2bd0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7097);
        EXPECT(gbc.pc(), 0x2bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02DC
        gbc.setState(0x60e7, 0xe626, 0xcd00, 0x5134, 0xcb05, 0xe00, 0x0, 0x1);
        gbc.writeMem(0x60e7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe626);
        EXPECT(gbc.pc(), 0x60e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02DE
        gbc.setState(0x9e13, 0xebe3, 0xf4d0, 0x4659, 0x7987, 0x49f2, 0x0, 0x1);
        gbc.writeMem(0x9e13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xebe3);
        EXPECT(gbc.pc(), 0x9e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e13), 0xcb);
        EXPECT(gbc.readMem(0x9e14), 0x30);
        // CB 30 02DF
        gbc.setState(0xd236, 0xe90d, 0x5bf0, 0x6401, 0x84e3, 0x9bbb, 0x1, 0x1);
        gbc.writeMem(0xd236, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe90d);
        EXPECT(gbc.pc(), 0xd238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd236), 0xcb);
        EXPECT(gbc.readMem(0xd237), 0x30);
        // CB 30 02E1
        gbc.setState(0x10f4, 0xf263, 0xd8d0, 0x606a, 0xde1d, 0x3f58, 0x0, 0x1);
        gbc.writeMem(0x10f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf263);
        EXPECT(gbc.pc(), 0x10f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02E2
        gbc.setState(0xb84a, 0x2b36, 0x4390, 0x3de6, 0x3f8f, 0x8b7, 0x0, 0x1);
        gbc.writeMem(0xb84a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0xb84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84a), 0xcb);
        EXPECT(gbc.readMem(0xb84b), 0x30);
        // CB 30 02E3
        gbc.setState(0x54a2, 0x75f2, 0x88c0, 0x2d7d, 0x14da, 0xb4b5, 0x1, 0x0);
        gbc.writeMem(0x54a2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x75f2);
        EXPECT(gbc.pc(), 0x54a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02E4
        gbc.setState(0x54dc, 0x2de2, 0xd330, 0xcac0, 0x6fae, 0xfde3, 0x0, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2de2);
        EXPECT(gbc.pc(), 0x54de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02E5
        gbc.setState(0xd5d3, 0x7c86, 0xc50, 0xe090, 0xc94a, 0x26bf, 0x1, 0x1);
        gbc.writeMem(0xd5d3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7c86);
        EXPECT(gbc.pc(), 0xd5d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5d3), 0xcb);
        EXPECT(gbc.readMem(0xd5d4), 0x30);
        // CB 30 02E6
        gbc.setState(0xd966, 0xd969, 0xe570, 0x4ea0, 0x9985, 0xc3b2, 0x1, 0x1);
        gbc.writeMem(0xd966, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd969);
        EXPECT(gbc.pc(), 0xd968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd966), 0xcb);
        EXPECT(gbc.readMem(0xd967), 0x30);
        // CB 30 02E7
        gbc.setState(0xd5a4, 0x92b0, 0x3d10, 0xc01a, 0x98de, 0xa1a6, 0x0, 0x1);
        gbc.writeMem(0xd5a4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x92b0);
        EXPECT(gbc.pc(), 0xd5a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a4), 0xcb);
        EXPECT(gbc.readMem(0xd5a5), 0x30);
        // CB 30 02E8
        gbc.setState(0xaaa3, 0xd90a, 0x86d0, 0x2299, 0xc076, 0x23ef, 0x1, 0x1);
        gbc.writeMem(0xaaa3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd90a);
        EXPECT(gbc.pc(), 0xaaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa3), 0xcb);
        EXPECT(gbc.readMem(0xaaa4), 0x30);
        // CB 30 02E9
        gbc.setState(0xc9ff, 0x799e, 0xd7e0, 0xcd8b, 0xe309, 0x11b8, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x799e);
        EXPECT(gbc.pc(), 0xca01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ff), 0xcb);
        EXPECT(gbc.readMem(0xca00), 0x30);
        // CB 30 02EA
        gbc.setState(0xde0, 0xe889, 0x1fa0, 0xa44e, 0x1e51, 0x4542, 0x1, 0x1);
        gbc.writeMem(0xde0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe889);
        EXPECT(gbc.pc(), 0xde2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02EB
        gbc.setState(0xe484, 0x8880, 0x6360, 0x181d, 0xa213, 0x8c93, 0x0, 0x1);
        gbc.writeMem(0xe484, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8880);
        EXPECT(gbc.pc(), 0xe486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe484), 0xcb);
        EXPECT(gbc.readMem(0xe485), 0x30);
        // CB 30 02EC
        gbc.setState(0x390a, 0x6f24, 0x44f0, 0xdcfa, 0xb43e, 0xdb46, 0x0, 0x1);
        gbc.writeMem(0x390a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6f24);
        EXPECT(gbc.pc(), 0x390c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02ED
        gbc.setState(0x5d4, 0x7b37, 0xbc80, 0xbe1b, 0x6a73, 0x94b4, 0x1, 0x0);
        gbc.writeMem(0x5d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7b37);
        EXPECT(gbc.pc(), 0x5d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02EE
        gbc.setState(0x934, 0xdeb1, 0x47c0, 0x47d9, 0x2196, 0x31fc, 0x1, 0x1);
        gbc.writeMem(0x934, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdeb1);
        EXPECT(gbc.pc(), 0x936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02EF
        gbc.setState(0xe788, 0x4278, 0x8320, 0x1d68, 0xf14f, 0x4a98, 0x1, 0x1);
        gbc.writeMem(0xe788, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4278);
        EXPECT(gbc.pc(), 0xe78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe788), 0xcb);
        EXPECT(gbc.readMem(0xe789), 0x30);
        // CB 30 02F0
        gbc.setState(0xcb94, 0xe555, 0xe560, 0x7b88, 0xfc08, 0x9d59, 0x1, 0x0);
        gbc.writeMem(0xcb94, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe555);
        EXPECT(gbc.pc(), 0xcb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb94), 0xcb);
        EXPECT(gbc.readMem(0xcb95), 0x30);
        // CB 30 02F1
        gbc.setState(0x7bd4, 0x548f, 0x50f0, 0x4821, 0xcbab, 0x4fd2, 0x0, 0x1);
        gbc.writeMem(0x7bd4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x548f);
        EXPECT(gbc.pc(), 0x7bd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02F2
        gbc.setState(0xd60b, 0xda12, 0x1920, 0x33a2, 0x196e, 0x49a7, 0x1, 0x0);
        gbc.writeMem(0xd60b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xda12);
        EXPECT(gbc.pc(), 0xd60d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd60b), 0xcb);
        EXPECT(gbc.readMem(0xd60c), 0x30);
        // CB 30 02F3
        gbc.setState(0x9a96, 0xfe41, 0xe080, 0xeb9a, 0x2fec, 0x6aec, 0x1, 0x1);
        gbc.writeMem(0x9a96, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfe41);
        EXPECT(gbc.pc(), 0x9a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a96), 0xcb);
        EXPECT(gbc.readMem(0x9a97), 0x30);
        // CB 30 02F4
        gbc.setState(0x86f6, 0x6832, 0x8e60, 0x6616, 0x1d72, 0x47fb, 0x0, 0x1);
        gbc.writeMem(0x86f6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6832);
        EXPECT(gbc.pc(), 0x86f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f6), 0xcb);
        EXPECT(gbc.readMem(0x86f7), 0x30);
        // CB 30 02F5
        gbc.setState(0x7535, 0xabf4, 0xd000, 0xa71f, 0xc78b, 0xc346, 0x1, 0x1);
        gbc.writeMem(0x7535, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xabf4);
        EXPECT(gbc.pc(), 0x7537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02F6
        gbc.setState(0x285a, 0x7f3f, 0xdda0, 0x3b3e, 0x3c1c, 0x84fc, 0x0, 0x0);
        gbc.writeMem(0x285a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7f3f);
        EXPECT(gbc.pc(), 0x285c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02F7
        gbc.setState(0x8aa, 0x7bd0, 0xa8e0, 0xa504, 0x6de3, 0x841b, 0x1, 0x0);
        gbc.writeMem(0x8aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7bd0);
        EXPECT(gbc.pc(), 0x8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02F8
        gbc.setState(0x1c0c, 0xf9cb, 0x8420, 0xd348, 0xdd17, 0x40ba, 0x1, 0x0);
        gbc.writeMem(0x1c0c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf9cb);
        EXPECT(gbc.pc(), 0x1c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02F9
        gbc.setState(0x3961, 0x6187, 0x6b60, 0xd320, 0xc4b3, 0x310e, 0x0, 0x1);
        gbc.writeMem(0x3961, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6187);
        EXPECT(gbc.pc(), 0x3963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02FA
        gbc.setState(0x7813, 0xd4ff, 0xde70, 0x5e88, 0xbf59, 0x2a86, 0x1, 0x1);
        gbc.writeMem(0x7813, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd4ff);
        EXPECT(gbc.pc(), 0x7815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02FB
        gbc.setState(0x3bb1, 0x3c56, 0x5bf0, 0x5edd, 0x8606, 0xa958, 0x0, 0x0);
        gbc.writeMem(0x3bb1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3c56);
        EXPECT(gbc.pc(), 0x3bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02FC
        gbc.setState(0xe097, 0x5d33, 0xa380, 0xdaaa, 0x7bbc, 0x5d15, 0x0, 0x0);
        gbc.writeMem(0xe097, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5d33);
        EXPECT(gbc.pc(), 0xe099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe097), 0xcb);
        EXPECT(gbc.readMem(0xe098), 0x30);
        // CB 30 02FD
        gbc.setState(0x1b47, 0xc456, 0x64f0, 0xb02f, 0x248e, 0x29fe, 0x0, 0x1);
        gbc.writeMem(0x1b47, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc456);
        EXPECT(gbc.pc(), 0x1b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02FE
        gbc.setState(0x3cb8, 0x9dfc, 0x8340, 0x7fbd, 0x78e7, 0xea02, 0x0, 0x0);
        gbc.writeMem(0x3cb8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9dfc);
        EXPECT(gbc.pc(), 0x3cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 02FF
        gbc.setState(0x7eab, 0xed05, 0x6230, 0x53da, 0xa78c, 0x7885, 0x0, 0x1);
        gbc.writeMem(0x7eab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xed05);
        EXPECT(gbc.pc(), 0x7ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0300
        gbc.setState(0x983, 0x3493, 0x6d0, 0x8c5a, 0x5a26, 0xf3d9, 0x1, 0x1);
        gbc.writeMem(0x983, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3493);
        EXPECT(gbc.pc(), 0x985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0301
        gbc.setState(0xe220, 0xb1f7, 0xd560, 0xb19e, 0x51ab, 0x14cb, 0x0, 0x1);
        gbc.writeMem(0xe220, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb1f7);
        EXPECT(gbc.pc(), 0xe222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe220), 0xcb);
        EXPECT(gbc.readMem(0xe221), 0x30);
        // CB 30 0302
        gbc.setState(0x3e7a, 0x78c0, 0xbe90, 0xf273, 0xab90, 0xc336, 0x0, 0x0);
        gbc.writeMem(0x3e7a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x78c0);
        EXPECT(gbc.pc(), 0x3e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0303
        gbc.setState(0xbab9, 0x4ff6, 0x5ef0, 0x958f, 0x3911, 0xcdae, 0x0, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4ff6);
        EXPECT(gbc.pc(), 0xbabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab9), 0xcb);
        EXPECT(gbc.readMem(0xbaba), 0x30);
        // CB 30 0304
        gbc.setState(0xb10e, 0xfdca, 0xe320, 0x6e2e, 0xcdfe, 0x762b, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfdca);
        EXPECT(gbc.pc(), 0xb110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10e), 0xcb);
        EXPECT(gbc.readMem(0xb10f), 0x30);
        // CB 30 0305
        gbc.setState(0xec78, 0xb3b9, 0xd8c0, 0x125d, 0xc4dd, 0x82a8, 0x0, 0x1);
        gbc.writeMem(0xec78, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb3b9);
        EXPECT(gbc.pc(), 0xec7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec78), 0xcb);
        EXPECT(gbc.readMem(0xec79), 0x30);
        // CB 30 0307
        gbc.setState(0x53bd, 0x7acc, 0xb290, 0x279b, 0xdc61, 0x75d5, 0x1, 0x1);
        gbc.writeMem(0x53bd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7acc);
        EXPECT(gbc.pc(), 0x53bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0308
        gbc.setState(0x57b9, 0xea97, 0x7450, 0xebf0, 0x8a94, 0x92a2, 0x0, 0x0);
        gbc.writeMem(0x57b9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xea97);
        EXPECT(gbc.pc(), 0x57bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0309
        gbc.setState(0x429d, 0xe89d, 0xd720, 0xa0f8, 0xa0b, 0xecaa, 0x0, 0x0);
        gbc.writeMem(0x429d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe89d);
        EXPECT(gbc.pc(), 0x429f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 030A
        gbc.setState(0xe21f, 0x4222, 0x24d0, 0x4b07, 0x26e6, 0x5ae8, 0x0, 0x0);
        gbc.writeMem(0xe21f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4222);
        EXPECT(gbc.pc(), 0xe221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21f), 0xcb);
        EXPECT(gbc.readMem(0xe220), 0x30);
        // CB 30 030C
        gbc.setState(0x9242, 0xe729, 0x6bf0, 0xd7f1, 0xc22c, 0xc5b9, 0x0, 0x0);
        gbc.writeMem(0x9242, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe729);
        EXPECT(gbc.pc(), 0x9244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9242), 0xcb);
        EXPECT(gbc.readMem(0x9243), 0x30);
        // CB 30 030D
        gbc.setState(0x8c7e, 0x8a6f, 0xbcb0, 0x8a06, 0x6514, 0x5d9d, 0x0, 0x1);
        gbc.writeMem(0x8c7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8a6f);
        EXPECT(gbc.pc(), 0x8c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7e), 0xcb);
        EXPECT(gbc.readMem(0x8c7f), 0x30);
        // CB 30 030E
        gbc.setState(0x87e3, 0xab69, 0x2b20, 0x942c, 0x9c61, 0xbcf8, 0x0, 0x1);
        gbc.writeMem(0x87e3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xab69);
        EXPECT(gbc.pc(), 0x87e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e3), 0xcb);
        EXPECT(gbc.readMem(0x87e4), 0x30);
        // CB 30 030F
        gbc.setState(0x4386, 0x953c, 0xb370, 0xe729, 0xd33f, 0xd237, 0x1, 0x1);
        gbc.writeMem(0x4386, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x953c);
        EXPECT(gbc.pc(), 0x4388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0310
        gbc.setState(0x2dd7, 0xa85b, 0x37a0, 0x9269, 0x62af, 0xbc6a, 0x0, 0x0);
        gbc.writeMem(0x2dd7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa85b);
        EXPECT(gbc.pc(), 0x2dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0311
        gbc.setState(0x23cf, 0x7fcf, 0x1900, 0xcfe, 0xdbfb, 0x9cc0, 0x1, 0x1);
        gbc.writeMem(0x23cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7fcf);
        EXPECT(gbc.pc(), 0x23d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0313
        gbc.setState(0xdc69, 0x6daf, 0x7c40, 0x1ad, 0x7672, 0x2892, 0x1, 0x0);
        gbc.writeMem(0xdc69, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6daf);
        EXPECT(gbc.pc(), 0xdc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc69), 0xcb);
        EXPECT(gbc.readMem(0xdc6a), 0x30);
        // CB 30 0314
        gbc.setState(0xade1, 0x9b3a, 0x5be0, 0x535d, 0xa183, 0xf8d6, 0x0, 0x0);
        gbc.writeMem(0xade1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0xade3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade1), 0xcb);
        EXPECT(gbc.readMem(0xade2), 0x30);
        // CB 30 0315
        gbc.setState(0xd039, 0x7fbd, 0x8a0, 0x36eb, 0x98c9, 0x478a, 0x0, 0x0);
        gbc.writeMem(0xd039, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7fbd);
        EXPECT(gbc.pc(), 0xd03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd039), 0xcb);
        EXPECT(gbc.readMem(0xd03a), 0x30);
        // CB 30 0316
        gbc.setState(0xeb12, 0x9274, 0xcd20, 0x54f2, 0x91dd, 0xbe8b, 0x0, 0x1);
        gbc.writeMem(0xeb12, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9274);
        EXPECT(gbc.pc(), 0xeb14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb12), 0xcb);
        EXPECT(gbc.readMem(0xeb13), 0x30);
        // CB 30 0317
        gbc.setState(0x85b3, 0x512d, 0x7280, 0x6eaa, 0x8946, 0xe1d6, 0x1, 0x1);
        gbc.writeMem(0x85b3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x512d);
        EXPECT(gbc.pc(), 0x85b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b3), 0xcb);
        EXPECT(gbc.readMem(0x85b4), 0x30);
        // CB 30 0318
        gbc.setState(0x190a, 0x726a, 0xbe20, 0x623a, 0x985c, 0x2110, 0x0, 0x0);
        gbc.writeMem(0x190a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x726a);
        EXPECT(gbc.pc(), 0x190c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0319
        gbc.setState(0xb654, 0xc175, 0x1700, 0x9b53, 0x180d, 0x9342, 0x1, 0x0);
        gbc.writeMem(0xb654, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc175);
        EXPECT(gbc.pc(), 0xb656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb654), 0xcb);
        EXPECT(gbc.readMem(0xb655), 0x30);
        // CB 30 031B
        gbc.setState(0x454, 0xf8bc, 0xc7e0, 0x524a, 0xcb85, 0xfd0c, 0x1, 0x1);
        gbc.writeMem(0x454, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf8bc);
        EXPECT(gbc.pc(), 0x456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 031C
        gbc.setState(0xe21f, 0xf939, 0xcd20, 0xf191, 0xfcea, 0x392, 0x0, 0x0);
        gbc.writeMem(0xe21f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf939);
        EXPECT(gbc.pc(), 0xe221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21f), 0xcb);
        EXPECT(gbc.readMem(0xe220), 0x30);
        // CB 30 031D
        gbc.setState(0x57ab, 0xbd35, 0x7620, 0x5a2f, 0xd060, 0x7dbe, 0x1, 0x0);
        gbc.writeMem(0x57ab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbd35);
        EXPECT(gbc.pc(), 0x57ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 031E
        gbc.setState(0x57ee, 0xa61c, 0xceb0, 0x1799, 0xa9f8, 0xde61, 0x1, 0x0);
        gbc.writeMem(0x57ee, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa61c);
        EXPECT(gbc.pc(), 0x57f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 031F
        gbc.setState(0xce37, 0xe0eb, 0x37b0, 0x7cbd, 0xa7, 0x7165, 0x1, 0x0);
        gbc.writeMem(0xce37, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe0eb);
        EXPECT(gbc.pc(), 0xce39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce37), 0xcb);
        EXPECT(gbc.readMem(0xce38), 0x30);
        // CB 30 0320
        gbc.setState(0x7437, 0x2552, 0xf820, 0xd9e9, 0x47e7, 0xb799, 0x1, 0x1);
        gbc.writeMem(0x7437, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2552);
        EXPECT(gbc.pc(), 0x7439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0321
        gbc.setState(0xaeff, 0xba08, 0xfcb0, 0x4016, 0x87d4, 0x5e4e, 0x1, 0x1);
        gbc.writeMem(0xaeff, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xba08);
        EXPECT(gbc.pc(), 0xaf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeff), 0xcb);
        EXPECT(gbc.readMem(0xaf00), 0x30);
        // CB 30 0323
        gbc.setState(0x2617, 0x8f52, 0x30b0, 0xfe38, 0xe0e6, 0x8204, 0x0, 0x1);
        gbc.writeMem(0x2617, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8f52);
        EXPECT(gbc.pc(), 0x2619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0324
        gbc.setState(0x939e, 0x82f3, 0x68e0, 0x7b86, 0xe69a, 0xa7aa, 0x1, 0x0);
        gbc.writeMem(0x939e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x82f3);
        EXPECT(gbc.pc(), 0x93a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939e), 0xcb);
        EXPECT(gbc.readMem(0x939f), 0x30);
        // CB 30 0325
        gbc.setState(0xc284, 0x5cb8, 0xb600, 0x658, 0xfcca, 0xe662, 0x0, 0x1);
        gbc.writeMem(0xc284, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5cb8);
        EXPECT(gbc.pc(), 0xc286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc284), 0xcb);
        EXPECT(gbc.readMem(0xc285), 0x30);
        // CB 30 0326
        gbc.setState(0xa4ab, 0x7fe1, 0x5e10, 0xceb8, 0x87de, 0xfb00, 0x0, 0x1);
        gbc.writeMem(0xa4ab, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7fe1);
        EXPECT(gbc.pc(), 0xa4ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ab), 0xcb);
        EXPECT(gbc.readMem(0xa4ac), 0x30);
        // CB 30 0327
        gbc.setState(0x1811, 0x68f7, 0xddf0, 0x7e81, 0xdcd7, 0xac07, 0x1, 0x0);
        gbc.writeMem(0x1811, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x68f7);
        EXPECT(gbc.pc(), 0x1813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0328
        gbc.setState(0x35a5, 0x79aa, 0x6720, 0x9f9d, 0x8246, 0x98f4, 0x0, 0x0);
        gbc.writeMem(0x35a5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x79aa);
        EXPECT(gbc.pc(), 0x35a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0329
        gbc.setState(0x4363, 0x5d03, 0x16f0, 0x3799, 0x38e7, 0x7f0, 0x0, 0x0);
        gbc.writeMem(0x4363, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5d03);
        EXPECT(gbc.pc(), 0x4365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 032A
        gbc.setState(0x2e02, 0x4b8a, 0xc990, 0xf3d, 0x5cfa, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0x2e02, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4b8a);
        EXPECT(gbc.pc(), 0x2e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 032B
        gbc.setState(0x426a, 0x7383, 0xdc10, 0x311c, 0x9374, 0xf263, 0x1, 0x1);
        gbc.writeMem(0x426a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7383);
        EXPECT(gbc.pc(), 0x426c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 032C
        gbc.setState(0x1b4, 0x50d, 0x8490, 0x101, 0xc100, 0x45df, 0x1, 0x0);
        gbc.writeMem(0x1b4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x50d);
        EXPECT(gbc.pc(), 0x1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 032D
        gbc.setState(0x86a6, 0x5ad2, 0x9df0, 0xaa1b, 0x7e32, 0x54d0, 0x0, 0x0);
        gbc.writeMem(0x86a6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5ad2);
        EXPECT(gbc.pc(), 0x86a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a6), 0xcb);
        EXPECT(gbc.readMem(0x86a7), 0x30);
        // CB 30 032E
        gbc.setState(0xe092, 0xf15e, 0x4a50, 0xc601, 0xba75, 0xe71e, 0x0, 0x0);
        gbc.writeMem(0xe092, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf15e);
        EXPECT(gbc.pc(), 0xe094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe092), 0xcb);
        EXPECT(gbc.readMem(0xe093), 0x30);
        // CB 30 032F
        gbc.setState(0xd6aa, 0x37bf, 0xd550, 0x7288, 0x6bda, 0xae2f, 0x1, 0x0);
        gbc.writeMem(0xd6aa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x37bf);
        EXPECT(gbc.pc(), 0xd6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6aa), 0xcb);
        EXPECT(gbc.readMem(0xd6ab), 0x30);
        // CB 30 0330
        gbc.setState(0x5d4b, 0xe391, 0x570, 0x8b74, 0x83dd, 0x5839, 0x1, 0x1);
        gbc.writeMem(0x5d4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe391);
        EXPECT(gbc.pc(), 0x5d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0331
        gbc.setState(0x61c8, 0x16c9, 0x7240, 0xd553, 0x497e, 0x8435, 0x0, 0x1);
        gbc.writeMem(0x61c8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x16c9);
        EXPECT(gbc.pc(), 0x61ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0332
        gbc.setState(0x1b19, 0x464f, 0x9510, 0x5ab9, 0xd338, 0x4532, 0x0, 0x0);
        gbc.writeMem(0x1b19, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x464f);
        EXPECT(gbc.pc(), 0x1b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0333
        gbc.setState(0xb67b, 0x823c, 0x9e80, 0xdab7, 0xd5a1, 0xaab5, 0x1, 0x1);
        gbc.writeMem(0xb67b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x823c);
        EXPECT(gbc.pc(), 0xb67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67b), 0xcb);
        EXPECT(gbc.readMem(0xb67c), 0x30);
        // CB 30 0334
        gbc.setState(0xe7ef, 0x281b, 0xd4c0, 0x5f0c, 0x3ef1, 0xd61e, 0x0, 0x0);
        gbc.writeMem(0xe7ef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x281b);
        EXPECT(gbc.pc(), 0xe7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ef), 0xcb);
        EXPECT(gbc.readMem(0xe7f0), 0x30);
        // CB 30 0335
        gbc.setState(0x5bf3, 0x813e, 0x5190, 0x1ced, 0x4f09, 0x666, 0x1, 0x1);
        gbc.writeMem(0x5bf3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x813e);
        EXPECT(gbc.pc(), 0x5bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0336
        gbc.setState(0xd147, 0x4f50, 0xe50, 0x5933, 0xd227, 0xa5ab, 0x0, 0x0);
        gbc.writeMem(0xd147, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4f50);
        EXPECT(gbc.pc(), 0xd149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd147), 0xcb);
        EXPECT(gbc.readMem(0xd148), 0x30);
        // CB 30 0337
        gbc.setState(0x7799, 0xed3, 0xb570, 0xef98, 0xea65, 0xc7f0, 0x1, 0x0);
        gbc.writeMem(0x7799, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xed3);
        EXPECT(gbc.pc(), 0x779b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0338
        gbc.setState(0xb10d, 0xbfde, 0xbd10, 0x562c, 0x404a, 0x83d1, 0x1, 0x1);
        gbc.writeMem(0xb10d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbfde);
        EXPECT(gbc.pc(), 0xb10f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10d), 0xcb);
        EXPECT(gbc.readMem(0xb10e), 0x30);
        // CB 30 0339
        gbc.setState(0xad90, 0x59ae, 0x6750, 0xb636, 0xdf6b, 0x517a, 0x0, 0x0);
        gbc.writeMem(0xad90, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x59ae);
        EXPECT(gbc.pc(), 0xad92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad90), 0xcb);
        EXPECT(gbc.readMem(0xad91), 0x30);
        // CB 30 033A
        gbc.setState(0x6978, 0x560b, 0xb500, 0x58c9, 0x6e53, 0xc95c, 0x1, 0x0);
        gbc.writeMem(0x6978, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x560b);
        EXPECT(gbc.pc(), 0x697a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 033B
        gbc.setState(0x318c, 0x24d2, 0xd8b0, 0x4170, 0x9176, 0x3e54, 0x1, 0x1);
        gbc.writeMem(0x318c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x24d2);
        EXPECT(gbc.pc(), 0x318e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 033C
        gbc.setState(0x9c61, 0x125b, 0xf9a0, 0xd5de, 0x9bc7, 0x86be, 0x0, 0x0);
        gbc.writeMem(0x9c61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x125b);
        EXPECT(gbc.pc(), 0x9c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c61), 0xcb);
        EXPECT(gbc.readMem(0x9c62), 0x30);
        // CB 30 033D
        gbc.setState(0x24e9, 0x3dcb, 0x6f90, 0x9a65, 0xadd4, 0x760c, 0x0, 0x0);
        gbc.writeMem(0x24e9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3dcb);
        EXPECT(gbc.pc(), 0x24eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 033E
        gbc.setState(0xd6b5, 0x160f, 0x1780, 0xf35d, 0xead5, 0xd34a, 0x0, 0x0);
        gbc.writeMem(0xd6b5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x160f);
        EXPECT(gbc.pc(), 0xd6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b5), 0xcb);
        EXPECT(gbc.readMem(0xd6b6), 0x30);
        // CB 30 0340
        gbc.setState(0x5a7e, 0xddc1, 0x3260, 0xa7b, 0x1ed8, 0x7bd6, 0x0, 0x1);
        gbc.writeMem(0x5a7e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xddc1);
        EXPECT(gbc.pc(), 0x5a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0341
        gbc.setState(0xb25, 0x369b, 0xf840, 0x6679, 0x280c, 0x5ed1, 0x0, 0x1);
        gbc.writeMem(0xb25, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x369b);
        EXPECT(gbc.pc(), 0xb27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0342
        gbc.setState(0x38c9, 0x55b4, 0xfac0, 0x455d, 0xf14d, 0xeed9, 0x0, 0x1);
        gbc.writeMem(0x38c9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x55b4);
        EXPECT(gbc.pc(), 0x38cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0343
        gbc.setState(0x516, 0xb450, 0xf2c0, 0x8da3, 0xd654, 0x4dc4, 0x0, 0x1);
        gbc.writeMem(0x516, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb450);
        EXPECT(gbc.pc(), 0x518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0346
        gbc.setState(0xdaae, 0x4964, 0x9cc0, 0xf25e, 0xd68c, 0xc5db, 0x0, 0x0);
        gbc.writeMem(0xdaae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4964);
        EXPECT(gbc.pc(), 0xdab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaae), 0xcb);
        EXPECT(gbc.readMem(0xdaaf), 0x30);
        // CB 30 0347
        gbc.setState(0x7d07, 0x3f84, 0xe3c0, 0xc9db, 0x2184, 0xb6bc, 0x0, 0x0);
        gbc.writeMem(0x7d07, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3f84);
        EXPECT(gbc.pc(), 0x7d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0348
        gbc.setState(0x99ae, 0x7e9d, 0xd8a0, 0x7776, 0x9cb, 0x10d4, 0x0, 0x1);
        gbc.writeMem(0x99ae, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7e9d);
        EXPECT(gbc.pc(), 0x99b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ae), 0xcb);
        EXPECT(gbc.readMem(0x99af), 0x30);
        // CB 30 034A
        gbc.setState(0x3455, 0xbd91, 0x6630, 0x6ec0, 0x331f, 0x67ea, 0x1, 0x1);
        gbc.writeMem(0x3455, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbd91);
        EXPECT(gbc.pc(), 0x3457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 034B
        gbc.setState(0x7fe7, 0xa6ff, 0xb980, 0xe85d, 0xbde1, 0x7c6f, 0x0, 0x0);
        gbc.writeMem(0x7fe7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa6ff);
        EXPECT(gbc.pc(), 0x7fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 034C
        gbc.setState(0x1681, 0x7810, 0x48c0, 0xf552, 0x158b, 0x2ce7, 0x1, 0x1);
        gbc.writeMem(0x1681, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7810);
        EXPECT(gbc.pc(), 0x1683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 034D
        gbc.setState(0x4dc0, 0x75f5, 0x8510, 0xea77, 0x56f9, 0x90a8, 0x0, 0x0);
        gbc.writeMem(0x4dc0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x75f5);
        EXPECT(gbc.pc(), 0x4dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 034E
        gbc.setState(0x3b67, 0xc40e, 0x83a0, 0x48c0, 0x399f, 0xfb75, 0x0, 0x1);
        gbc.writeMem(0x3b67, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc40e);
        EXPECT(gbc.pc(), 0x3b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 034F
        gbc.setState(0x37f9, 0x49f4, 0xaea0, 0x88c0, 0x2665, 0xc5f4, 0x0, 0x0);
        gbc.writeMem(0x37f9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x49f4);
        EXPECT(gbc.pc(), 0x37fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0350
        gbc.setState(0xe48d, 0xd856, 0x2230, 0x1a65, 0x5452, 0x7885, 0x1, 0x1);
        gbc.writeMem(0xe48d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd856);
        EXPECT(gbc.pc(), 0xe48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe48d), 0xcb);
        EXPECT(gbc.readMem(0xe48e), 0x30);
        // CB 30 0351
        gbc.setState(0xd9cf, 0x9e5, 0xcce0, 0x2a0b, 0x394d, 0xb9c1, 0x0, 0x1);
        gbc.writeMem(0xd9cf, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9e5);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cf), 0xcb);
        EXPECT(gbc.readMem(0xd9d0), 0x30);
        // CB 30 0352
        gbc.setState(0x870f, 0xce91, 0xca0, 0xeb47, 0x5a18, 0x4de6, 0x0, 0x1);
        gbc.writeMem(0x870f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xce91);
        EXPECT(gbc.pc(), 0x8711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870f), 0xcb);
        EXPECT(gbc.readMem(0x8710), 0x30);
        // CB 30 0353
        gbc.setState(0xcc4b, 0x6e40, 0x92b0, 0x3dc6, 0xd339, 0x6a8d, 0x0, 0x1);
        gbc.writeMem(0xcc4b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6e40);
        EXPECT(gbc.pc(), 0xcc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4b), 0xcb);
        EXPECT(gbc.readMem(0xcc4c), 0x30);
        // CB 30 0354
        gbc.setState(0x6f02, 0x44e6, 0x8550, 0xb75, 0x576e, 0xf75d, 0x0, 0x0);
        gbc.writeMem(0x6f02, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x44e6);
        EXPECT(gbc.pc(), 0x6f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0355
        gbc.setState(0x61f3, 0xd659, 0x71b0, 0x1cb8, 0x35c8, 0x5b55, 0x1, 0x0);
        gbc.writeMem(0x61f3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd659);
        EXPECT(gbc.pc(), 0x61f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0356
        gbc.setState(0xa51e, 0xa859, 0x7720, 0xc617, 0xc85d, 0x473b, 0x0, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa859);
        EXPECT(gbc.pc(), 0xa520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51e), 0xcb);
        EXPECT(gbc.readMem(0xa51f), 0x30);
        // CB 30 0358
        gbc.setState(0x9032, 0xa573, 0x9bb0, 0xc326, 0x7fea, 0xedab, 0x1, 0x0);
        gbc.writeMem(0x9032, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa573);
        EXPECT(gbc.pc(), 0x9034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9032), 0xcb);
        EXPECT(gbc.readMem(0x9033), 0x30);
        // CB 30 0359
        gbc.setState(0x638, 0x6b29, 0x6f0, 0x8c78, 0x8102, 0x1e6c, 0x1, 0x1);
        gbc.writeMem(0x638, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6b29);
        EXPECT(gbc.pc(), 0x63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 035B
        gbc.setState(0x439a, 0x5104, 0x8240, 0x75f6, 0xb7c, 0xe98f, 0x0, 0x0);
        gbc.writeMem(0x439a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5104);
        EXPECT(gbc.pc(), 0x439c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 035C
        gbc.setState(0xe0b5, 0xfaa5, 0x2160, 0x24c7, 0x37cc, 0xcd4c, 0x1, 0x0);
        gbc.writeMem(0xe0b5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfaa5);
        EXPECT(gbc.pc(), 0xe0b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b5), 0xcb);
        EXPECT(gbc.readMem(0xe0b6), 0x30);
        // CB 30 035D
        gbc.setState(0xa5a0, 0x4fca, 0x27e0, 0x2cd5, 0x104, 0x980a, 0x1, 0x0);
        gbc.writeMem(0xa5a0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4fca);
        EXPECT(gbc.pc(), 0xa5a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a0), 0xcb);
        EXPECT(gbc.readMem(0xa5a1), 0x30);
        // CB 30 035E
        gbc.setState(0x89d3, 0xbe4f, 0x21c0, 0x36f3, 0xc1f2, 0xfb68, 0x0, 0x0);
        gbc.writeMem(0x89d3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbe4f);
        EXPECT(gbc.pc(), 0x89d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d3), 0xcb);
        EXPECT(gbc.readMem(0x89d4), 0x30);
        // CB 30 035F
        gbc.setState(0x2349, 0x8211, 0xe860, 0x8a45, 0x2a98, 0xce6d, 0x1, 0x1);
        gbc.writeMem(0x2349, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8211);
        EXPECT(gbc.pc(), 0x234b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0360
        gbc.setState(0x57dd, 0x6a76, 0xea20, 0xbbc7, 0x1dba, 0x3984, 0x1, 0x0);
        gbc.writeMem(0x57dd, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6a76);
        EXPECT(gbc.pc(), 0x57df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0361
        gbc.setState(0x1866, 0x53b3, 0x27f0, 0x6079, 0x893, 0x9eb4, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x53b3);
        EXPECT(gbc.pc(), 0x1868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0363
        gbc.setState(0x2b8c, 0xba6f, 0x77d0, 0x2ada, 0xf6f9, 0x13e2, 0x1, 0x0);
        gbc.writeMem(0x2b8c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xba6f);
        EXPECT(gbc.pc(), 0x2b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0364
        gbc.setState(0x1070, 0x880c, 0x4e70, 0xb54c, 0xd7dc, 0x44fd, 0x0, 0x1);
        gbc.writeMem(0x1070, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x880c);
        EXPECT(gbc.pc(), 0x1072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0365
        gbc.setState(0xc055, 0x4556, 0xbb50, 0xca7a, 0xca44, 0x8803, 0x0, 0x0);
        gbc.writeMem(0xc055, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4556);
        EXPECT(gbc.pc(), 0xc057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc055), 0xcb);
        EXPECT(gbc.readMem(0xc056), 0x30);
        // CB 30 0366
        gbc.setState(0x4fef, 0xbb76, 0xf280, 0x979a, 0x393c, 0x6cb9, 0x1, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbb76);
        EXPECT(gbc.pc(), 0x4ff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0367
        gbc.setState(0xc629, 0x862e, 0xf10, 0x61fe, 0xd07, 0x9715, 0x0, 0x1);
        gbc.writeMem(0xc629, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x862e);
        EXPECT(gbc.pc(), 0xc62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc629), 0xcb);
        EXPECT(gbc.readMem(0xc62a), 0x30);
        // CB 30 0368
        gbc.setState(0xcb1b, 0xa34d, 0x690, 0x2bae, 0x986a, 0x417b, 0x0, 0x1);
        gbc.writeMem(0xcb1b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0xcb1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1b), 0xcb);
        EXPECT(gbc.readMem(0xcb1c), 0x30);
        // CB 30 0369
        gbc.setState(0x5663, 0x843d, 0x1c10, 0x59cd, 0xf7e9, 0x785d, 0x0, 0x0);
        gbc.writeMem(0x5663, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x843d);
        EXPECT(gbc.pc(), 0x5665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 036A
        gbc.setState(0x4382, 0x3856, 0x7a90, 0xfcb5, 0xa542, 0xa8d0, 0x0, 0x1);
        gbc.writeMem(0x4382, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3856);
        EXPECT(gbc.pc(), 0x4384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 036B
        gbc.setState(0x99de, 0x6d9d, 0x7a60, 0x9af1, 0x2cf3, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x99de, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6d9d);
        EXPECT(gbc.pc(), 0x99e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99de), 0xcb);
        EXPECT(gbc.readMem(0x99df), 0x30);
        // CB 30 036C
        gbc.setState(0x75c1, 0xd44b, 0xf910, 0x303c, 0x3904, 0xd1a7, 0x0, 0x1);
        gbc.writeMem(0x75c1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd44b);
        EXPECT(gbc.pc(), 0x75c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 036E
        gbc.setState(0xdbc5, 0xc8b1, 0x3b50, 0x610f, 0xc67e, 0x7c7c, 0x1, 0x1);
        gbc.writeMem(0xdbc5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc8b1);
        EXPECT(gbc.pc(), 0xdbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc5), 0xcb);
        EXPECT(gbc.readMem(0xdbc6), 0x30);
        // CB 30 036F
        gbc.setState(0x7ca5, 0x27f6, 0x1be0, 0xa8d2, 0xe064, 0xcfeb, 0x1, 0x1);
        gbc.writeMem(0x7ca5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x27f6);
        EXPECT(gbc.pc(), 0x7ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0370
        gbc.setState(0xdb08, 0xb076, 0x3fa0, 0xbc42, 0x122a, 0x63a5, 0x0, 0x0);
        gbc.writeMem(0xdb08, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb076);
        EXPECT(gbc.pc(), 0xdb0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb08), 0xcb);
        EXPECT(gbc.readMem(0xdb09), 0x30);
        // CB 30 0371
        gbc.setState(0xd71e, 0x20a8, 0xf110, 0x19d5, 0xc253, 0x9b8e, 0x0, 0x1);
        gbc.writeMem(0xd71e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x20a8);
        EXPECT(gbc.pc(), 0xd720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71e), 0xcb);
        EXPECT(gbc.readMem(0xd71f), 0x30);
        // CB 30 0372
        gbc.setState(0xa3fa, 0xef71, 0xb360, 0xca0e, 0xd6ef, 0xc50e, 0x1, 0x1);
        gbc.writeMem(0xa3fa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xef71);
        EXPECT(gbc.pc(), 0xa3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fa), 0xcb);
        EXPECT(gbc.readMem(0xa3fb), 0x30);
        // CB 30 0373
        gbc.setState(0x1441, 0x41e, 0xdec0, 0xda0, 0xf606, 0x9c24, 0x1, 0x1);
        gbc.writeMem(0x1441, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x41e);
        EXPECT(gbc.pc(), 0x1443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0374
        gbc.setState(0x4b1d, 0x2d01, 0xcd20, 0xb5bc, 0xcf58, 0x18ce, 0x0, 0x1);
        gbc.writeMem(0x4b1d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2d01);
        EXPECT(gbc.pc(), 0x4b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0375
        gbc.setState(0x55d4, 0xa579, 0x6900, 0xad1e, 0xc2e6, 0xefdb, 0x0, 0x0);
        gbc.writeMem(0x55d4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa579);
        EXPECT(gbc.pc(), 0x55d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0376
        gbc.setState(0x7a91, 0x97e1, 0x610, 0x5430, 0xdc82, 0x8a46, 0x1, 0x1);
        gbc.writeMem(0x7a91, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x97e1);
        EXPECT(gbc.pc(), 0x7a93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0378
        gbc.setState(0x592, 0x5155, 0x3900, 0x22db, 0xd57b, 0x7401, 0x0, 0x1);
        gbc.writeMem(0x592, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5155);
        EXPECT(gbc.pc(), 0x594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0379
        gbc.setState(0x8eac, 0x9fe2, 0x14a0, 0x106, 0x5205, 0x1bdc, 0x1, 0x0);
        gbc.writeMem(0x8eac, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9fe2);
        EXPECT(gbc.pc(), 0x8eae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eac), 0xcb);
        EXPECT(gbc.readMem(0x8ead), 0x30);
        // CB 30 037A
        gbc.setState(0x61f4, 0x8217, 0x8290, 0x4eb0, 0x50d4, 0x15fa, 0x1, 0x0);
        gbc.writeMem(0x61f4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8217);
        EXPECT(gbc.pc(), 0x61f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 037B
        gbc.setState(0xd4bc, 0xb918, 0x7e60, 0xbfe7, 0x8fde, 0x2bb8, 0x1, 0x0);
        gbc.writeMem(0xd4bc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb918);
        EXPECT(gbc.pc(), 0xd4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4bc), 0xcb);
        EXPECT(gbc.readMem(0xd4bd), 0x30);
        // CB 30 037C
        gbc.setState(0x2374, 0xc09b, 0x2130, 0x4f21, 0x9aad, 0xa144, 0x0, 0x1);
        gbc.writeMem(0x2374, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc09b);
        EXPECT(gbc.pc(), 0x2376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 037E
        gbc.setState(0xa100, 0xbe03, 0xbf20, 0xf3b3, 0xb113, 0x3863, 0x0, 0x0);
        gbc.writeMem(0xa100, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbe03);
        EXPECT(gbc.pc(), 0xa102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa100), 0xcb);
        EXPECT(gbc.readMem(0xa101), 0x30);
        // CB 30 037F
        gbc.setState(0x3d53, 0x2a2c, 0x4a20, 0x34b5, 0x9ddd, 0x6cf0, 0x1, 0x1);
        gbc.writeMem(0x3d53, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2a2c);
        EXPECT(gbc.pc(), 0x3d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0380
        gbc.setState(0xa642, 0xcc1c, 0x44d0, 0xdad, 0x804b, 0x4fb9, 0x0, 0x0);
        gbc.writeMem(0xa642, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcc1c);
        EXPECT(gbc.pc(), 0xa644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa642), 0xcb);
        EXPECT(gbc.readMem(0xa643), 0x30);
        // CB 30 0381
        gbc.setState(0x9f5a, 0xc522, 0xfb40, 0xde85, 0xa6b0, 0x7df3, 0x0, 0x1);
        gbc.writeMem(0x9f5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc522);
        EXPECT(gbc.pc(), 0x9f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5a), 0xcb);
        EXPECT(gbc.readMem(0x9f5b), 0x30);
        // CB 30 0382
        gbc.setState(0xa423, 0xd8b6, 0x8ff0, 0x1aa5, 0x5379, 0x4adf, 0x1, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd8b6);
        EXPECT(gbc.pc(), 0xa425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa423), 0xcb);
        EXPECT(gbc.readMem(0xa424), 0x30);
        // CB 30 0383
        gbc.setState(0x32c4, 0x5aed, 0x3bc0, 0xa573, 0xdce2, 0xf7e, 0x0, 0x0);
        gbc.writeMem(0x32c4, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5aed);
        EXPECT(gbc.pc(), 0x32c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0384
        gbc.setState(0xcd92, 0xe913, 0xb650, 0xafe7, 0x7aa4, 0x93f1, 0x0, 0x0);
        gbc.writeMem(0xcd92, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe913);
        EXPECT(gbc.pc(), 0xcd94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd92), 0xcb);
        EXPECT(gbc.readMem(0xcd93), 0x30);
        // CB 30 0385
        gbc.setState(0x7981, 0x56f6, 0xf0, 0x444f, 0xe8c2, 0x3381, 0x1, 0x0);
        gbc.writeMem(0x7981, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x56f6);
        EXPECT(gbc.pc(), 0x7983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0386
        gbc.setState(0x686e, 0x33a8, 0xe200, 0x4a66, 0x535c, 0xea86, 0x1, 0x1);
        gbc.writeMem(0x686e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x33a8);
        EXPECT(gbc.pc(), 0x6870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0387
        gbc.setState(0xab5c, 0x4117, 0xaf20, 0x9dc9, 0xb65f, 0x5c86, 0x1, 0x1);
        gbc.writeMem(0xab5c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4117);
        EXPECT(gbc.pc(), 0xab5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5c), 0xcb);
        EXPECT(gbc.readMem(0xab5d), 0x30);
        // CB 30 0388
        gbc.setState(0xac65, 0x13ba, 0xb330, 0x52bc, 0xefc, 0x9423, 0x1, 0x1);
        gbc.writeMem(0xac65, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x13ba);
        EXPECT(gbc.pc(), 0xac67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac65), 0xcb);
        EXPECT(gbc.readMem(0xac66), 0x30);
        // CB 30 0389
        gbc.setState(0x5c6f, 0x8abd, 0xc210, 0xc6b, 0x44, 0x8370, 0x1, 0x1);
        gbc.writeMem(0x5c6f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8abd);
        EXPECT(gbc.pc(), 0x5c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 038A
        gbc.setState(0x8f8f, 0x39b, 0xc530, 0x237d, 0xe097, 0x5688, 0x1, 0x1);
        gbc.writeMem(0x8f8f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x39b);
        EXPECT(gbc.pc(), 0x8f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8f), 0xcb);
        EXPECT(gbc.readMem(0x8f90), 0x30);
        // CB 30 038B
        gbc.setState(0xdb40, 0xa70a, 0xe950, 0x3919, 0xf0da, 0xa07e, 0x1, 0x1);
        gbc.writeMem(0xdb40, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa70a);
        EXPECT(gbc.pc(), 0xdb42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb40), 0xcb);
        EXPECT(gbc.readMem(0xdb41), 0x30);
        // CB 30 038C
        gbc.setState(0xd5a0, 0x1ad1, 0xd8d0, 0x1c84, 0xa82d, 0x99db, 0x0, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1ad1);
        EXPECT(gbc.pc(), 0xd5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a0), 0xcb);
        EXPECT(gbc.readMem(0xd5a1), 0x30);
        // CB 30 038D
        gbc.setState(0x4379, 0xf4b, 0xb770, 0x909f, 0xda69, 0x5688, 0x0, 0x1);
        gbc.writeMem(0x4379, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf4b);
        EXPECT(gbc.pc(), 0x437b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 038E
        gbc.setState(0x3ed0, 0x804f, 0x8e50, 0x1812, 0x9421, 0x734f, 0x0, 0x0);
        gbc.writeMem(0x3ed0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x804f);
        EXPECT(gbc.pc(), 0x3ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 038F
        gbc.setState(0x8d48, 0xcd96, 0xbce0, 0x8eb5, 0xe0e9, 0x41bd, 0x0, 0x0);
        gbc.writeMem(0x8d48, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcd96);
        EXPECT(gbc.pc(), 0x8d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d48), 0xcb);
        EXPECT(gbc.readMem(0x8d49), 0x30);
        // CB 30 0390
        gbc.setState(0x2d8, 0xf3bc, 0x73f0, 0x9d32, 0x85d, 0x52cd, 0x1, 0x1);
        gbc.writeMem(0x2d8, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf3bc);
        EXPECT(gbc.pc(), 0x2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0391
        gbc.setState(0x763d, 0x2a1e, 0xf240, 0x9f41, 0x2edb, 0xa3e, 0x0, 0x0);
        gbc.writeMem(0x763d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2a1e);
        EXPECT(gbc.pc(), 0x763f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0392
        gbc.setState(0x388a, 0x5587, 0x9750, 0xbee1, 0x5568, 0x9137, 0x1, 0x0);
        gbc.writeMem(0x388a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5587);
        EXPECT(gbc.pc(), 0x388c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 0393
        gbc.setState(0x95a1, 0x2d36, 0xfa10, 0x9bd3, 0xa237, 0xecec, 0x0, 0x0);
        gbc.writeMem(0x95a1, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2d36);
        EXPECT(gbc.pc(), 0x95a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a1), 0xcb);
        EXPECT(gbc.readMem(0x95a2), 0x30);
        // CB 30 0394
        gbc.setState(0x88f9, 0x7f1f, 0xe270, 0x1636, 0xfeb, 0x99b8, 0x1, 0x0);
        gbc.writeMem(0x88f9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7f1f);
        EXPECT(gbc.pc(), 0x88fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f9), 0xcb);
        EXPECT(gbc.readMem(0x88fa), 0x30);
        // CB 30 0395
        gbc.setState(0xe89f, 0x8ee4, 0xa610, 0xe411, 0x436d, 0x7de5, 0x0, 0x1);
        gbc.writeMem(0xe89f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8ee4);
        EXPECT(gbc.pc(), 0xe8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89f), 0xcb);
        EXPECT(gbc.readMem(0xe8a0), 0x30);
        // CB 30 0398
        gbc.setState(0xe4f3, 0xf982, 0x29e0, 0xd736, 0x6789, 0x1df3, 0x0, 0x0);
        gbc.writeMem(0xe4f3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf982);
        EXPECT(gbc.pc(), 0xe4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f3), 0xcb);
        EXPECT(gbc.readMem(0xe4f4), 0x30);
        // CB 30 0399
        gbc.setState(0xdc2e, 0xe0b2, 0x7bc0, 0xf198, 0xbedb, 0xf495, 0x0, 0x1);
        gbc.writeMem(0xdc2e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0xdc30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2e), 0xcb);
        EXPECT(gbc.readMem(0xdc2f), 0x30);
        // CB 30 039A
        gbc.setState(0xd4c9, 0x1b4e, 0x580, 0x2d1d, 0x57fc, 0xa136, 0x0, 0x0);
        gbc.writeMem(0xd4c9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1b4e);
        EXPECT(gbc.pc(), 0xd4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c9), 0xcb);
        EXPECT(gbc.readMem(0xd4ca), 0x30);
        // CB 30 039B
        gbc.setState(0xd7ea, 0xfc6e, 0x7470, 0xab78, 0x63c5, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0xd7ea, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfc6e);
        EXPECT(gbc.pc(), 0xd7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ea), 0xcb);
        EXPECT(gbc.readMem(0xd7eb), 0x30);
        // CB 30 039C
        gbc.setState(0x2b0b, 0x6661, 0xcca0, 0xecd9, 0x3387, 0x93fb, 0x1, 0x0);
        gbc.writeMem(0x2b0b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6661);
        EXPECT(gbc.pc(), 0x2b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 039D
        gbc.setState(0xef54, 0xc94, 0x2de0, 0x899b, 0x8229, 0xb744, 0x1, 0x0);
        gbc.writeMem(0xef54, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc94);
        EXPECT(gbc.pc(), 0xef56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef54), 0xcb);
        EXPECT(gbc.readMem(0xef55), 0x30);
        // CB 30 039E
        gbc.setState(0xc1d9, 0x9d00, 0x37b0, 0xd5f, 0xf6ec, 0x23b, 0x1, 0x1);
        gbc.writeMem(0xc1d9, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9d00);
        EXPECT(gbc.pc(), 0xc1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d9), 0xcb);
        EXPECT(gbc.readMem(0xc1da), 0x30);
        // CB 30 039F
        gbc.setState(0x157d, 0x2e1b, 0x54a0, 0xc026, 0x9b11, 0x3bc7, 0x1, 0x1);
        gbc.writeMem(0x157d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2e1b);
        EXPECT(gbc.pc(), 0x157f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03A0
        gbc.setState(0x90cc, 0xafc1, 0xb2d0, 0x8b17, 0x610d, 0xd472, 0x0, 0x1);
        gbc.writeMem(0x90cc, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xafc1);
        EXPECT(gbc.pc(), 0x90ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90cc), 0xcb);
        EXPECT(gbc.readMem(0x90cd), 0x30);
        // CB 30 03A1
        gbc.setState(0x571f, 0xa07a, 0x7380, 0x48c, 0x4f90, 0xafd7, 0x0, 0x1);
        gbc.writeMem(0x571f, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa07a);
        EXPECT(gbc.pc(), 0x5721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03A2
        gbc.setState(0xebbe, 0xfd89, 0xb940, 0x8be3, 0x56a8, 0x5edf, 0x0, 0x1);
        gbc.writeMem(0xebbe, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfd89);
        EXPECT(gbc.pc(), 0xebc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebbe), 0xcb);
        EXPECT(gbc.readMem(0xebbf), 0x30);
        // CB 30 03A3
        gbc.setState(0xa38, 0xd11e, 0x7770, 0xf0f9, 0x7fb, 0xb97a, 0x0, 0x0);
        gbc.writeMem(0xa38, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd11e);
        EXPECT(gbc.pc(), 0xa3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03A6
        gbc.setState(0x7b3e, 0x1dfe, 0xa1f0, 0xe3b, 0x4ee4, 0x8a72, 0x0, 0x1);
        gbc.writeMem(0x7b3e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1dfe);
        EXPECT(gbc.pc(), 0x7b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03A7
        gbc.setState(0xc148, 0xc52b, 0x400, 0x1f1, 0x47d7, 0xa412, 0x0, 0x0);
        gbc.writeMem(0xc148, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc52b);
        EXPECT(gbc.pc(), 0xc14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc148), 0xcb);
        EXPECT(gbc.readMem(0xc149), 0x30);
        // CB 30 03A8
        gbc.setState(0x103c, 0xa07, 0xaac0, 0xe07b, 0xe69, 0x75a1, 0x1, 0x0);
        gbc.writeMem(0x103c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa07);
        EXPECT(gbc.pc(), 0x103e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03A9
        gbc.setState(0x7a2e, 0xb357, 0x890, 0xbff4, 0x506a, 0x6e41, 0x1, 0x1);
        gbc.writeMem(0x7a2e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb357);
        EXPECT(gbc.pc(), 0x7a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03AA
        gbc.setState(0x7cc6, 0xb95d, 0xa2d0, 0x34de, 0x3ee0, 0x93b0, 0x1, 0x0);
        gbc.writeMem(0x7cc6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb95d);
        EXPECT(gbc.pc(), 0x7cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03AB
        gbc.setState(0xa8d5, 0xd639, 0xaf30, 0xd1b3, 0x4bba, 0xe545, 0x0, 0x0);
        gbc.writeMem(0xa8d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd639);
        EXPECT(gbc.pc(), 0xa8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d5), 0xcb);
        EXPECT(gbc.readMem(0xa8d6), 0x30);
        // CB 30 03AC
        gbc.setState(0xac13, 0x1e2f, 0xa10, 0x130f, 0x4288, 0x20ce, 0x0, 0x1);
        gbc.writeMem(0xac13, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1e2f);
        EXPECT(gbc.pc(), 0xac15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac13), 0xcb);
        EXPECT(gbc.readMem(0xac14), 0x30);
        // CB 30 03AD
        gbc.setState(0x658e, 0xb5b, 0xc220, 0xd2fe, 0x9a82, 0x201d, 0x1, 0x1);
        gbc.writeMem(0x658e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb5b);
        EXPECT(gbc.pc(), 0x6590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03AE
        gbc.setState(0xe01d, 0x8897, 0x2b60, 0x7f4, 0x586e, 0x392d, 0x0, 0x1);
        gbc.writeMem(0xe01d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8897);
        EXPECT(gbc.pc(), 0xe01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01d), 0xcb);
        EXPECT(gbc.readMem(0xe01e), 0x30);
        // CB 30 03B0
        gbc.setState(0xe94e, 0xefd9, 0xf9b0, 0x143a, 0x43de, 0xf4af, 0x0, 0x1);
        gbc.writeMem(0xe94e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xefd9);
        EXPECT(gbc.pc(), 0xe950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94e), 0xcb);
        EXPECT(gbc.readMem(0xe94f), 0x30);
        // CB 30 03B1
        gbc.setState(0xd496, 0xa018, 0x6740, 0x76e, 0x2b02, 0xdd00, 0x1, 0x0);
        gbc.writeMem(0xd496, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa018);
        EXPECT(gbc.pc(), 0xd498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd496), 0xcb);
        EXPECT(gbc.readMem(0xd497), 0x30);
        // CB 30 03B2
        gbc.setState(0x7c69, 0xb5fd, 0x3490, 0xa674, 0x950d, 0x6d19, 0x0, 0x0);
        gbc.writeMem(0x7c69, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb5fd);
        EXPECT(gbc.pc(), 0x7c6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03B3
        gbc.setState(0xb3d5, 0xc73d, 0xc840, 0xd60a, 0x341f, 0x9d09, 0x1, 0x0);
        gbc.writeMem(0xb3d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc73d);
        EXPECT(gbc.pc(), 0xb3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d5), 0xcb);
        EXPECT(gbc.readMem(0xb3d6), 0x30);
        // CB 30 03B4
        gbc.setState(0x2cdb, 0x4634, 0x8300, 0xe2fa, 0xef71, 0x1f9d, 0x0, 0x1);
        gbc.writeMem(0x2cdb, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4634);
        EXPECT(gbc.pc(), 0x2cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03B5
        gbc.setState(0xf89, 0xa081, 0xee0, 0xe05e, 0xca5, 0xad60, 0x1, 0x0);
        gbc.writeMem(0xf89, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa081);
        EXPECT(gbc.pc(), 0xf8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03B6
        gbc.setState(0x73c7, 0x41df, 0x880, 0x4a7d, 0x8d55, 0x6cb4, 0x0, 0x1);
        gbc.writeMem(0x73c7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x41df);
        EXPECT(gbc.pc(), 0x73c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03B7
        gbc.setState(0x2b58, 0x18c8, 0x1ff0, 0x1a38, 0x9058, 0xacb3, 0x1, 0x0);
        gbc.writeMem(0x2b58, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x18c8);
        EXPECT(gbc.pc(), 0x2b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03B8
        gbc.setState(0x31b6, 0xbcbb, 0xafa0, 0xdccd, 0xf0fd, 0x7bc3, 0x1, 0x1);
        gbc.writeMem(0x31b6, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbcbb);
        EXPECT(gbc.pc(), 0x31b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03B9
        gbc.setState(0x4f14, 0xb885, 0x1580, 0xc8e5, 0x7046, 0x7a9b, 0x0, 0x0);
        gbc.writeMem(0x4f14, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb885);
        EXPECT(gbc.pc(), 0x4f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03BA
        gbc.setState(0x4278, 0x59fd, 0x5740, 0xf8ab, 0x6, 0x30dc, 0x0, 0x1);
        gbc.writeMem(0x4278, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x59fd);
        EXPECT(gbc.pc(), 0x427a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03BB
        gbc.setState(0x5745, 0xbfa5, 0x1180, 0x811b, 0xe3c2, 0xf719, 0x1, 0x0);
        gbc.writeMem(0x5745, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbfa5);
        EXPECT(gbc.pc(), 0x5747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03BC
        gbc.setState(0x1910, 0x1452, 0x5f00, 0xc7bf, 0xa007, 0x6e5, 0x0, 0x0);
        gbc.writeMem(0x1910, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1452);
        EXPECT(gbc.pc(), 0x1912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03BD
        gbc.setState(0xd302, 0x3d, 0x3d90, 0x8a0e, 0x3f0e, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0xd302, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3d);
        EXPECT(gbc.pc(), 0xd304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd302), 0xcb);
        EXPECT(gbc.readMem(0xd303), 0x30);
        // CB 30 03BE
        gbc.setState(0x1c86, 0xfac0, 0x5490, 0x1196, 0x25e5, 0x6bc2, 0x0, 0x0);
        gbc.writeMem(0x1c86, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfac0);
        EXPECT(gbc.pc(), 0x1c88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03BF
        gbc.setState(0x6634, 0xc2d, 0xcba0, 0x9077, 0x7410, 0x7592, 0x1, 0x0);
        gbc.writeMem(0x6634, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc2d);
        EXPECT(gbc.pc(), 0x6636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03C0
        gbc.setState(0x2c58, 0x63f3, 0xcc90, 0xc4b7, 0x866c, 0x442, 0x1, 0x0);
        gbc.writeMem(0x2c58, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x63f3);
        EXPECT(gbc.pc(), 0x2c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03C1
        gbc.setState(0x9981, 0x94b8, 0xf220, 0xb90d, 0x3bc8, 0xdd57, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x94b8);
        EXPECT(gbc.pc(), 0x9983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9981), 0xcb);
        EXPECT(gbc.readMem(0x9982), 0x30);
        // CB 30 03C2
        gbc.setState(0x1922, 0xf628, 0x5250, 0xd90b, 0x68cf, 0xefc9, 0x1, 0x0);
        gbc.writeMem(0x1922, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf628);
        EXPECT(gbc.pc(), 0x1924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03C3
        gbc.setState(0xbd33, 0x1d78, 0xcf50, 0xc9ff, 0x994e, 0x787c, 0x0, 0x0);
        gbc.writeMem(0xbd33, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1d78);
        EXPECT(gbc.pc(), 0xbd35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd33), 0xcb);
        EXPECT(gbc.readMem(0xbd34), 0x30);
        // CB 30 03C4
        gbc.setState(0x106d, 0xbc05, 0x27c0, 0x8686, 0xb3b7, 0x927b, 0x1, 0x0);
        gbc.writeMem(0x106d, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbc05);
        EXPECT(gbc.pc(), 0x106f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03C5
        gbc.setState(0xdf11, 0x54a6, 0x6840, 0x54a6, 0x724c, 0xd5eb, 0x0, 0x0);
        gbc.writeMem(0xdf11, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x54a6);
        EXPECT(gbc.pc(), 0xdf13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf11), 0xcb);
        EXPECT(gbc.readMem(0xdf12), 0x30);
        // CB 30 03C6
        gbc.setState(0xa2b0, 0x1ff8, 0x1550, 0x975a, 0x3095, 0x1e56, 0x1, 0x0);
        gbc.writeMem(0xa2b0, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1ff8);
        EXPECT(gbc.pc(), 0xa2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b0), 0xcb);
        EXPECT(gbc.readMem(0xa2b1), 0x30);
        // CB 30 03C8
        gbc.setState(0x58b2, 0xa66a, 0x4d90, 0xa29d, 0x5a8, 0xb780, 0x1, 0x1);
        gbc.writeMem(0x58b2, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa66a);
        EXPECT(gbc.pc(), 0x58b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03C9
        gbc.setState(0x4f33, 0xb331, 0x5040, 0xcbc, 0xefb0, 0xd673, 0x1, 0x1);
        gbc.writeMem(0x4f33, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb331);
        EXPECT(gbc.pc(), 0x4f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03CA
        gbc.setState(0xc9a, 0x85af, 0xc020, 0x8c63, 0x16ba, 0x88cb, 0x0, 0x1);
        gbc.writeMem(0xc9a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x85af);
        EXPECT(gbc.pc(), 0xc9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03CB
        gbc.setState(0x9058, 0xf5cc, 0x6350, 0x23bc, 0x8850, 0xc98, 0x0, 0x1);
        gbc.writeMem(0x9058, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf5cc);
        EXPECT(gbc.pc(), 0x905a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9058), 0xcb);
        EXPECT(gbc.readMem(0x9059), 0x30);
        // CB 30 03CC
        gbc.setState(0xce22, 0x6e8c, 0x5810, 0x2463, 0xa28f, 0x5688, 0x1, 0x0);
        gbc.writeMem(0xce22, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6e8c);
        EXPECT(gbc.pc(), 0xce24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce22), 0xcb);
        EXPECT(gbc.readMem(0xce23), 0x30);
        // CB 30 03CD
        gbc.setState(0x482b, 0xb82b, 0xf610, 0xaf5d, 0xac2e, 0x3cd2, 0x1, 0x1);
        gbc.writeMem(0x482b, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb82b);
        EXPECT(gbc.pc(), 0x482d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03CE
        gbc.setState(0x445e, 0x594c, 0xf000, 0x4bce, 0x3b71, 0xe0de, 0x1, 0x1);
        gbc.writeMem(0x445e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x594c);
        EXPECT(gbc.pc(), 0x4460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03CF
        gbc.setState(0x4f61, 0x5b25, 0xe7a0, 0x79ae, 0x4d97, 0xc086, 0x1, 0x1);
        gbc.writeMem(0x4f61, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5b25);
        EXPECT(gbc.pc(), 0x4f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03D0
        gbc.setState(0xadf3, 0x1380, 0x8590, 0xc9f4, 0xcbce, 0x6de6, 0x0, 0x0);
        gbc.writeMem(0xadf3, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1380);
        EXPECT(gbc.pc(), 0xadf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf3), 0xcb);
        EXPECT(gbc.readMem(0xadf4), 0x30);
        // CB 30 03D1
        gbc.setState(0xcada, 0x4e40, 0x7180, 0x1ae3, 0x2ec3, 0x9b9e, 0x1, 0x0);
        gbc.writeMem(0xcada, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4e40);
        EXPECT(gbc.pc(), 0xcadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcada), 0xcb);
        EXPECT(gbc.readMem(0xcadb), 0x30);
        // CB 30 03D4
        gbc.setState(0xcb4c, 0x4018, 0xa420, 0xed10, 0x7666, 0xc9b3, 0x1, 0x1);
        gbc.writeMem(0xcb4c, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4018);
        EXPECT(gbc.pc(), 0xcb4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4c), 0xcb);
        EXPECT(gbc.readMem(0xcb4d), 0x30);
        // CB 30 03D6
        gbc.setState(0xc5d5, 0x9625, 0xe590, 0xd55a, 0x5c96, 0xdf27, 0x0, 0x0);
        gbc.writeMem(0xc5d5, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9625);
        EXPECT(gbc.pc(), 0xc5d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d5), 0xcb);
        EXPECT(gbc.readMem(0xc5d6), 0x30);
        // CB 30 03D7
        gbc.setState(0xd5a, 0x6fbb, 0x77f0, 0xcc22, 0x8f5b, 0xab68, 0x1, 0x0);
        gbc.writeMem(0xd5a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6fbb);
        EXPECT(gbc.pc(), 0xd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03D8
        gbc.setState(0x7d95, 0xd41a, 0x9560, 0x5f0e, 0xb444, 0x47f8, 0x1, 0x1);
        gbc.writeMem(0x7d95, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd41a);
        EXPECT(gbc.pc(), 0x7d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03D9
        gbc.setState(0x16df, 0x1010, 0x6840, 0xae5, 0x2780, 0x8002, 0x1, 0x1);
        gbc.writeMem(0x16df, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1010);
        EXPECT(gbc.pc(), 0x16e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03DA
        gbc.setState(0xc0ec, 0x6699, 0xeba0, 0x6b85, 0xbbd8, 0x31a4, 0x0, 0x0);
        gbc.writeMem(0xc0ec, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6699);
        EXPECT(gbc.pc(), 0xc0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ec), 0xcb);
        EXPECT(gbc.readMem(0xc0ed), 0x30);
        // CB 30 03DB
        gbc.setState(0x254a, 0x9bc1, 0x4680, 0xa113, 0x831e, 0xac98, 0x0, 0x1);
        gbc.writeMem(0x254a, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9bc1);
        EXPECT(gbc.pc(), 0x254c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03DC
        gbc.setState(0x37d7, 0x10a5, 0xc810, 0xd527, 0x1022, 0x644e, 0x0, 0x1);
        gbc.writeMem(0x37d7, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x10a5);
        EXPECT(gbc.pc(), 0x37d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03DF
        gbc.setState(0x4d10, 0x404, 0xabd0, 0x8fdc, 0x9c9f, 0x3196, 0x1, 0x0);
        gbc.writeMem(0x4d10, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x404);
        EXPECT(gbc.pc(), 0x4d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03E0
        gbc.setState(0x1baa, 0xdca4, 0x120, 0x74a, 0x5f45, 0x21f2, 0x1, 0x1);
        gbc.writeMem(0x1baa, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xdca4);
        EXPECT(gbc.pc(), 0x1bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03E1
        gbc.setState(0x1a34, 0xf655, 0x8400, 0x23c0, 0x7ab1, 0x7269, 0x1, 0x1);
        gbc.writeMem(0x1a34, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf655);
        EXPECT(gbc.pc(), 0x1a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03E2
        gbc.setState(0xb517, 0xbed7, 0xa80, 0xe2af, 0x8773, 0xc75e, 0x0, 0x0);
        gbc.writeMem(0xb517, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbed7);
        EXPECT(gbc.pc(), 0xb519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb517), 0xcb);
        EXPECT(gbc.readMem(0xb518), 0x30);
        // CB 30 03E3
        gbc.setState(0x62db, 0x755e, 0xbaa0, 0x5d3f, 0x9c93, 0xe6a1, 0x0, 0x1);
        gbc.writeMem(0x62db, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x755e);
        EXPECT(gbc.pc(), 0x62dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03E4
        gbc.setState(0x773e, 0x91f4, 0x3c30, 0x9ff3, 0x77d1, 0xca98, 0x0, 0x0);
        gbc.writeMem(0x773e, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x91f4);
        EXPECT(gbc.pc(), 0x7740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03E5
        gbc.setState(0x77be, 0x8941, 0x8be0, 0x4631, 0x5363, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0x77be, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8941);
        EXPECT(gbc.pc(), 0x77c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 30 03E6
        gbc.setState(0x4da, 0x23fa, 0xc870, 0x7626, 0xa5d2, 0xcd00, 0x0, 0x1);
        gbc.writeMem(0x4da, { 0xcb, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x23fa);
        EXPECT(gbc.pc(), 0x4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
