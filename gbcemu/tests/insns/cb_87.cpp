#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_87)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_87) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 87 0000
        gbc.setState(0x91c1, 0xd402, 0xa850, 0x6da0, 0x874a, 0x91b1, 0x0, 0x0);
        gbc.writeMem(0x91c1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd402);
        EXPECT(gbc.pc(), 0x91c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c1), 0xcb);
        EXPECT(gbc.readMem(0x91c2), 0x87);
        // CB 87 0001
        gbc.setState(0x80f3, 0x9ed1, 0xc8b0, 0x58a5, 0x2605, 0x794a, 0x0, 0x1);
        gbc.writeMem(0x80f3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9ed1);
        EXPECT(gbc.pc(), 0x80f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f3), 0xcb);
        EXPECT(gbc.readMem(0x80f4), 0x87);
        // CB 87 0002
        gbc.setState(0xde66, 0xa18a, 0x7ff0, 0x99f2, 0x6eac, 0x6984, 0x1, 0x1);
        gbc.writeMem(0xde66, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa18a);
        EXPECT(gbc.pc(), 0xde68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde66), 0xcb);
        EXPECT(gbc.readMem(0xde67), 0x87);
        // CB 87 0003
        gbc.setState(0x396a, 0x79d1, 0x8810, 0xb45, 0xb952, 0xf925, 0x0, 0x1);
        gbc.writeMem(0x396a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x79d1);
        EXPECT(gbc.pc(), 0x396c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0004
        gbc.setState(0x6463, 0xb74c, 0x2160, 0xdc19, 0x8c83, 0xe630, 0x0, 0x1);
        gbc.writeMem(0x6463, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb74c);
        EXPECT(gbc.pc(), 0x6465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0005
        gbc.setState(0x727, 0xbe10, 0x66c0, 0xbad6, 0x3740, 0xf88c, 0x1, 0x0);
        gbc.writeMem(0x727, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbe10);
        EXPECT(gbc.pc(), 0x729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0006
        gbc.setState(0x6609, 0x8c01, 0xda80, 0xf56e, 0x19d6, 0x3071, 0x1, 0x1);
        gbc.writeMem(0x6609, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8c01);
        EXPECT(gbc.pc(), 0x660b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0007
        gbc.setState(0xb404, 0xf492, 0x3980, 0x94a8, 0xd05b, 0x79be, 0x0, 0x1);
        gbc.writeMem(0xb404, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf492);
        EXPECT(gbc.pc(), 0xb406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb404), 0xcb);
        EXPECT(gbc.readMem(0xb405), 0x87);
        // CB 87 0008
        gbc.setState(0x2c31, 0x136, 0x90, 0x19ec, 0xcffe, 0x9704, 0x1, 0x1);
        gbc.writeMem(0x2c31, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x136);
        EXPECT(gbc.pc(), 0x2c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0009
        gbc.setState(0x1f65, 0x68cf, 0xe5c0, 0x35f4, 0xd0b4, 0x8e14, 0x0, 0x1);
        gbc.writeMem(0x1f65, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x68cf);
        EXPECT(gbc.pc(), 0x1f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 000A
        gbc.setState(0x5235, 0x9d28, 0x6b80, 0x6238, 0xe7c7, 0xcc1e, 0x0, 0x0);
        gbc.writeMem(0x5235, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9d28);
        EXPECT(gbc.pc(), 0x5237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 000B
        gbc.setState(0x8d50, 0xb4fe, 0x1220, 0x9d47, 0xfeb3, 0xf81a, 0x0, 0x0);
        gbc.writeMem(0x8d50, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb4fe);
        EXPECT(gbc.pc(), 0x8d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d50), 0xcb);
        EXPECT(gbc.readMem(0x8d51), 0x87);
        // CB 87 000D
        gbc.setState(0x1232, 0x86d7, 0x4840, 0x7aa6, 0xc206, 0xcd48, 0x1, 0x1);
        gbc.writeMem(0x1232, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x86d7);
        EXPECT(gbc.pc(), 0x1234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 000E
        gbc.setState(0x76c, 0xeac7, 0x2df0, 0xa342, 0x4b31, 0x41ca, 0x1, 0x0);
        gbc.writeMem(0x76c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xeac7);
        EXPECT(gbc.pc(), 0x76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 000F
        gbc.setState(0x14ac, 0xb8e3, 0xbde0, 0x6700, 0x1492, 0x830a, 0x1, 0x1);
        gbc.writeMem(0x14ac, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0x14ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0010
        gbc.setState(0x14f, 0x55b4, 0x32a0, 0x1dc5, 0x2ae5, 0xb126, 0x1, 0x0);
        gbc.writeMem(0x14f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x55b4);
        EXPECT(gbc.pc(), 0x151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0011
        gbc.setState(0xabd, 0x4821, 0xb180, 0xe4e3, 0x1abb, 0x9092, 0x0, 0x0);
        gbc.writeMem(0xabd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4821);
        EXPECT(gbc.pc(), 0xabf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0012
        gbc.setState(0xcc72, 0x4f74, 0x9150, 0xd067, 0xe0b8, 0xf4b4, 0x1, 0x0);
        gbc.writeMem(0xcc72, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4f74);
        EXPECT(gbc.pc(), 0xcc74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc72), 0xcb);
        EXPECT(gbc.readMem(0xcc73), 0x87);
        // CB 87 0013
        gbc.setState(0x4143, 0xa55, 0x5840, 0x2db0, 0xc839, 0x892e, 0x1, 0x0);
        gbc.writeMem(0x4143, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa55);
        EXPECT(gbc.pc(), 0x4145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0014
        gbc.setState(0xd768, 0xaf0b, 0xd910, 0xefd0, 0x4c94, 0xb549, 0x1, 0x0);
        gbc.writeMem(0xd768, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xaf0b);
        EXPECT(gbc.pc(), 0xd76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd768), 0xcb);
        EXPECT(gbc.readMem(0xd769), 0x87);
        // CB 87 0015
        gbc.setState(0xcb92, 0xa6f2, 0xbc40, 0x992b, 0xe5d9, 0xf282, 0x0, 0x1);
        gbc.writeMem(0xcb92, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa6f2);
        EXPECT(gbc.pc(), 0xcb94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb92), 0xcb);
        EXPECT(gbc.readMem(0xcb93), 0x87);
        // CB 87 0016
        gbc.setState(0x1a17, 0xc244, 0xbfa0, 0x4350, 0xce25, 0x162b, 0x0, 0x0);
        gbc.writeMem(0x1a17, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc244);
        EXPECT(gbc.pc(), 0x1a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0017
        gbc.setState(0xdbdf, 0xbf2e, 0xad00, 0x6dbe, 0x76b7, 0xee6d, 0x1, 0x0);
        gbc.writeMem(0xdbdf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbf2e);
        EXPECT(gbc.pc(), 0xdbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbdf), 0xcb);
        EXPECT(gbc.readMem(0xdbe0), 0x87);
        // CB 87 0018
        gbc.setState(0x1fe, 0x940b, 0x1570, 0x22c7, 0x9f07, 0x51e4, 0x1, 0x0);
        gbc.writeMem(0x1fe, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x940b);
        EXPECT(gbc.pc(), 0x200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0019
        gbc.setState(0x3957, 0xe812, 0xa5e0, 0xcd34, 0x94f8, 0x4898, 0x0, 0x1);
        gbc.writeMem(0x3957, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe812);
        EXPECT(gbc.pc(), 0x3959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 001B
        gbc.setState(0x6241, 0x42f5, 0x2560, 0x719d, 0x40e8, 0x1d61, 0x0, 0x0);
        gbc.writeMem(0x6241, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x42f5);
        EXPECT(gbc.pc(), 0x6243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 001C
        gbc.setState(0x3946, 0x3ffc, 0xd5f0, 0xd0c8, 0x6fd9, 0xbb9f, 0x1, 0x0);
        gbc.writeMem(0x3946, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3ffc);
        EXPECT(gbc.pc(), 0x3948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 001D
        gbc.setState(0x22d2, 0x2e13, 0x3e80, 0x99eb, 0x7131, 0x3f97, 0x0, 0x0);
        gbc.writeMem(0x22d2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2e13);
        EXPECT(gbc.pc(), 0x22d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 001E
        gbc.setState(0x2161, 0x77a8, 0x1ca0, 0x4959, 0xf037, 0xd7b9, 0x1, 0x0);
        gbc.writeMem(0x2161, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x77a8);
        EXPECT(gbc.pc(), 0x2163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0020
        gbc.setState(0x6803, 0xafd5, 0x3bb0, 0x333f, 0x8208, 0xa027, 0x0, 0x0);
        gbc.writeMem(0x6803, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xafd5);
        EXPECT(gbc.pc(), 0x6805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0021
        gbc.setState(0x8b48, 0x6351, 0xd710, 0x5cfc, 0x9dfd, 0x25d7, 0x0, 0x1);
        gbc.writeMem(0x8b48, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6351);
        EXPECT(gbc.pc(), 0x8b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b48), 0xcb);
        EXPECT(gbc.readMem(0x8b49), 0x87);
        // CB 87 0022
        gbc.setState(0x95c4, 0xe9ca, 0xb180, 0x26bd, 0xab1f, 0x3b4a, 0x0, 0x0);
        gbc.writeMem(0x95c4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe9ca);
        EXPECT(gbc.pc(), 0x95c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c4), 0xcb);
        EXPECT(gbc.readMem(0x95c5), 0x87);
        // CB 87 0023
        gbc.setState(0x9ffb, 0x2edb, 0xbfe0, 0x7ad0, 0x1f25, 0x3f61, 0x1, 0x0);
        gbc.writeMem(0x9ffb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2edb);
        EXPECT(gbc.pc(), 0x9ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffb), 0xcb);
        EXPECT(gbc.readMem(0x9ffc), 0x87);
        // CB 87 0024
        gbc.setState(0x4132, 0xe572, 0x5060, 0xab13, 0xaa4b, 0xc41b, 0x0, 0x0);
        gbc.writeMem(0x4132, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe572);
        EXPECT(gbc.pc(), 0x4134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0025
        gbc.setState(0x6940, 0xf4bc, 0xb710, 0x54a6, 0x40de, 0x2d01, 0x1, 0x0);
        gbc.writeMem(0x6940, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf4bc);
        EXPECT(gbc.pc(), 0x6942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0026
        gbc.setState(0x16df, 0xa9cf, 0xc160, 0x4f54, 0x1d19, 0xab1a, 0x1, 0x0);
        gbc.writeMem(0x16df, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa9cf);
        EXPECT(gbc.pc(), 0x16e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0027
        gbc.setState(0x54ff, 0x9d4, 0xe290, 0xbec7, 0x5579, 0x3549, 0x1, 0x0);
        gbc.writeMem(0x54ff, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9d4);
        EXPECT(gbc.pc(), 0x5501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0028
        gbc.setState(0x56f2, 0x742e, 0x67e0, 0x2aca, 0xd7a, 0xbf8b, 0x1, 0x0);
        gbc.writeMem(0x56f2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x742e);
        EXPECT(gbc.pc(), 0x56f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0029
        gbc.setState(0x1633, 0x2501, 0x65e0, 0x1f4d, 0xe19, 0x697b, 0x0, 0x1);
        gbc.writeMem(0x1633, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2501);
        EXPECT(gbc.pc(), 0x1635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 002A
        gbc.setState(0xe548, 0x164d, 0x5ca0, 0x8bfa, 0x776f, 0x37e9, 0x0, 0x0);
        gbc.writeMem(0xe548, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x164d);
        EXPECT(gbc.pc(), 0xe54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe548), 0xcb);
        EXPECT(gbc.readMem(0xe549), 0x87);
        // CB 87 002B
        gbc.setState(0xa545, 0xf863, 0xe30, 0x2521, 0xa793, 0x3f07, 0x1, 0x1);
        gbc.writeMem(0xa545, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf863);
        EXPECT(gbc.pc(), 0xa547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa545), 0xcb);
        EXPECT(gbc.readMem(0xa546), 0x87);
        // CB 87 002C
        gbc.setState(0x6197, 0x54d3, 0x9fd0, 0x135b, 0x3a6b, 0x6477, 0x1, 0x0);
        gbc.writeMem(0x6197, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x54d3);
        EXPECT(gbc.pc(), 0x6199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 002D
        gbc.setState(0x3aef, 0xb481, 0xa770, 0x49ec, 0xad6f, 0x2b60, 0x1, 0x0);
        gbc.writeMem(0x3aef, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb481);
        EXPECT(gbc.pc(), 0x3af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 002E
        gbc.setState(0x96b7, 0x305b, 0x5740, 0xaafc, 0xcf9d, 0xf466, 0x0, 0x0);
        gbc.writeMem(0x96b7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x305b);
        EXPECT(gbc.pc(), 0x96b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b7), 0xcb);
        EXPECT(gbc.readMem(0x96b8), 0x87);
        // CB 87 002F
        gbc.setState(0xa973, 0xc325, 0xb6e0, 0x93ce, 0x36f2, 0xc004, 0x1, 0x0);
        gbc.writeMem(0xa973, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc325);
        EXPECT(gbc.pc(), 0xa975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa973), 0xcb);
        EXPECT(gbc.readMem(0xa974), 0x87);
        // CB 87 0030
        gbc.setState(0x868d, 0xb39e, 0x1410, 0x3203, 0x99a7, 0xbc5a, 0x1, 0x1);
        gbc.writeMem(0x868d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb39e);
        EXPECT(gbc.pc(), 0x868f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x868d), 0xcb);
        EXPECT(gbc.readMem(0x868e), 0x87);
        // CB 87 0031
        gbc.setState(0x649f, 0xf178, 0x730, 0x4b9a, 0x1119, 0x673d, 0x0, 0x1);
        gbc.writeMem(0x649f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf178);
        EXPECT(gbc.pc(), 0x64a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0032
        gbc.setState(0x74b8, 0xd441, 0x8b60, 0x7cdd, 0x1e06, 0xf336, 0x0, 0x1);
        gbc.writeMem(0x74b8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd441);
        EXPECT(gbc.pc(), 0x74ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0033
        gbc.setState(0x8aa8, 0xc31e, 0x1e00, 0x98a9, 0xe9b4, 0x22eb, 0x0, 0x1);
        gbc.writeMem(0x8aa8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc31e);
        EXPECT(gbc.pc(), 0x8aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa8), 0xcb);
        EXPECT(gbc.readMem(0x8aa9), 0x87);
        // CB 87 0034
        gbc.setState(0x7be8, 0x22ea, 0x8e20, 0x19fe, 0xc7e6, 0xfa7f, 0x0, 0x0);
        gbc.writeMem(0x7be8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x22ea);
        EXPECT(gbc.pc(), 0x7bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0035
        gbc.setState(0xb84a, 0xbc66, 0xf340, 0x7f14, 0xc5a, 0x4df5, 0x0, 0x1);
        gbc.writeMem(0xb84a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbc66);
        EXPECT(gbc.pc(), 0xb84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84a), 0xcb);
        EXPECT(gbc.readMem(0xb84b), 0x87);
        // CB 87 0036
        gbc.setState(0xe0ed, 0x1750, 0x9af0, 0x9dd2, 0xa035, 0x1e9, 0x1, 0x1);
        gbc.writeMem(0xe0ed, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1750);
        EXPECT(gbc.pc(), 0xe0ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ed), 0xcb);
        EXPECT(gbc.readMem(0xe0ee), 0x87);
        // CB 87 0037
        gbc.setState(0x7b19, 0x6da9, 0xa3e0, 0x3930, 0x2cc1, 0xada, 0x0, 0x1);
        gbc.writeMem(0x7b19, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6da9);
        EXPECT(gbc.pc(), 0x7b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0038
        gbc.setState(0x761d, 0xad1f, 0x3050, 0xfc79, 0x23e5, 0xfe59, 0x0, 0x0);
        gbc.writeMem(0x761d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xad1f);
        EXPECT(gbc.pc(), 0x761f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0039
        gbc.setState(0xbcdb, 0x9b40, 0x2240, 0x1421, 0xa749, 0xe243, 0x0, 0x0);
        gbc.writeMem(0xbcdb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9b40);
        EXPECT(gbc.pc(), 0xbcdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcdb), 0xcb);
        EXPECT(gbc.readMem(0xbcdc), 0x87);
        // CB 87 003B
        gbc.setState(0x7c4b, 0x6a73, 0xe720, 0x938c, 0x5c53, 0x2d81, 0x0, 0x1);
        gbc.writeMem(0x7c4b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6a73);
        EXPECT(gbc.pc(), 0x7c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 003C
        gbc.setState(0xaf09, 0xe20e, 0xf520, 0xa100, 0xbd97, 0xa81d, 0x1, 0x0);
        gbc.writeMem(0xaf09, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe20e);
        EXPECT(gbc.pc(), 0xaf0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf09), 0xcb);
        EXPECT(gbc.readMem(0xaf0a), 0x87);
        // CB 87 003D
        gbc.setState(0x812c, 0x6fb2, 0xa4e0, 0x6d0c, 0x4786, 0xfbfa, 0x0, 0x1);
        gbc.writeMem(0x812c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6fb2);
        EXPECT(gbc.pc(), 0x812e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812c), 0xcb);
        EXPECT(gbc.readMem(0x812d), 0x87);
        // CB 87 003E
        gbc.setState(0x7998, 0x9fa1, 0x5230, 0x36d7, 0x5515, 0xf98, 0x1, 0x1);
        gbc.writeMem(0x7998, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9fa1);
        EXPECT(gbc.pc(), 0x799a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 003F
        gbc.setState(0x7101, 0x77bc, 0x80, 0x95ed, 0x971b, 0xa786, 0x0, 0x0);
        gbc.writeMem(0x7101, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x77bc);
        EXPECT(gbc.pc(), 0x7103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0041
        gbc.setState(0xec76, 0x2111, 0x9820, 0xd0e3, 0x34a6, 0x8bd8, 0x1, 0x1);
        gbc.writeMem(0xec76, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2111);
        EXPECT(gbc.pc(), 0xec78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec76), 0xcb);
        EXPECT(gbc.readMem(0xec77), 0x87);
        // CB 87 0042
        gbc.setState(0x5880, 0xfb74, 0x3d80, 0x3051, 0x9243, 0x434e, 0x1, 0x0);
        gbc.writeMem(0x5880, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfb74);
        EXPECT(gbc.pc(), 0x5882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0043
        gbc.setState(0x23a1, 0x657c, 0xedf0, 0x772d, 0xb40d, 0x403, 0x1, 0x0);
        gbc.writeMem(0x23a1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x657c);
        EXPECT(gbc.pc(), 0x23a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0044
        gbc.setState(0x761, 0x214b, 0x7340, 0x4c62, 0xd439, 0x16ef, 0x0, 0x0);
        gbc.writeMem(0x761, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x214b);
        EXPECT(gbc.pc(), 0x763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0045
        gbc.setState(0x23ea, 0x730d, 0x4a10, 0xb513, 0x2bf8, 0x4af6, 0x1, 0x0);
        gbc.writeMem(0x23ea, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x730d);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0046
        gbc.setState(0x88d8, 0xd22a, 0xf960, 0xd35f, 0x629, 0x5bbd, 0x1, 0x0);
        gbc.writeMem(0x88d8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd22a);
        EXPECT(gbc.pc(), 0x88da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d8), 0xcb);
        EXPECT(gbc.readMem(0x88d9), 0x87);
        // CB 87 0047
        gbc.setState(0x4107, 0x98e3, 0x9e20, 0xb751, 0xb01a, 0xbb42, 0x0, 0x0);
        gbc.writeMem(0x4107, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x98e3);
        EXPECT(gbc.pc(), 0x4109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0048
        gbc.setState(0x68fb, 0x3b41, 0x25b0, 0x265f, 0xfff0, 0xe34d, 0x1, 0x1);
        gbc.writeMem(0x68fb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3b41);
        EXPECT(gbc.pc(), 0x68fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0049
        gbc.setState(0x990b, 0xedf3, 0x33e0, 0xe889, 0x7b09, 0x1f73, 0x1, 0x0);
        gbc.writeMem(0x990b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xedf3);
        EXPECT(gbc.pc(), 0x990d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990b), 0xcb);
        EXPECT(gbc.readMem(0x990c), 0x87);
        // CB 87 004A
        gbc.setState(0x9790, 0x2e6b, 0x1df0, 0x6065, 0x3633, 0x7d01, 0x0, 0x0);
        gbc.writeMem(0x9790, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2e6b);
        EXPECT(gbc.pc(), 0x9792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9790), 0xcb);
        EXPECT(gbc.readMem(0x9791), 0x87);
        // CB 87 004B
        gbc.setState(0xefd, 0x8b46, 0xc450, 0x81bb, 0x4447, 0x3558, 0x0, 0x1);
        gbc.writeMem(0xefd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8b46);
        EXPECT(gbc.pc(), 0xeff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 004C
        gbc.setState(0x91f1, 0x2b9b, 0xd2c0, 0xbf6f, 0x46a3, 0x891e, 0x1, 0x1);
        gbc.writeMem(0x91f1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2b9b);
        EXPECT(gbc.pc(), 0x91f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f1), 0xcb);
        EXPECT(gbc.readMem(0x91f2), 0x87);
        // CB 87 004D
        gbc.setState(0x534d, 0x727b, 0xee0, 0x416, 0x1f29, 0x5ae3, 0x1, 0x1);
        gbc.writeMem(0x534d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x727b);
        EXPECT(gbc.pc(), 0x534f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 004E
        gbc.setState(0x9c8e, 0xe1d8, 0x5900, 0x1a96, 0x8423, 0x6ede, 0x1, 0x0);
        gbc.writeMem(0x9c8e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe1d8);
        EXPECT(gbc.pc(), 0x9c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c8e), 0xcb);
        EXPECT(gbc.readMem(0x9c8f), 0x87);
        // CB 87 004F
        gbc.setState(0x8782, 0xd58c, 0xb960, 0x1b70, 0x96df, 0x9178, 0x0, 0x0);
        gbc.writeMem(0x8782, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd58c);
        EXPECT(gbc.pc(), 0x8784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8782), 0xcb);
        EXPECT(gbc.readMem(0x8783), 0x87);
        // CB 87 0050
        gbc.setState(0xaf60, 0xaad2, 0x4d40, 0x1873, 0x4625, 0x23ba, 0x0, 0x1);
        gbc.writeMem(0xaf60, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xaad2);
        EXPECT(gbc.pc(), 0xaf62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf60), 0xcb);
        EXPECT(gbc.readMem(0xaf61), 0x87);
        // CB 87 0051
        gbc.setState(0xd2b0, 0x4c0a, 0x5e10, 0xc509, 0x7954, 0xff19, 0x0, 0x0);
        gbc.writeMem(0xd2b0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4c0a);
        EXPECT(gbc.pc(), 0xd2b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b0), 0xcb);
        EXPECT(gbc.readMem(0xd2b1), 0x87);
        // CB 87 0052
        gbc.setState(0xa19a, 0x8571, 0xd420, 0x8eb0, 0xf941, 0x22f, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8571);
        EXPECT(gbc.pc(), 0xa19c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19a), 0xcb);
        EXPECT(gbc.readMem(0xa19b), 0x87);
        // CB 87 0053
        gbc.setState(0xb8a0, 0xa532, 0xaff0, 0x7990, 0x520e, 0x6ec7, 0x0, 0x1);
        gbc.writeMem(0xb8a0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa532);
        EXPECT(gbc.pc(), 0xb8a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a0), 0xcb);
        EXPECT(gbc.readMem(0xb8a1), 0x87);
        // CB 87 0054
        gbc.setState(0xdb91, 0x73d1, 0x63b0, 0xee6f, 0x46e4, 0x31fd, 0x0, 0x1);
        gbc.writeMem(0xdb91, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x73d1);
        EXPECT(gbc.pc(), 0xdb93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb91), 0xcb);
        EXPECT(gbc.readMem(0xdb92), 0x87);
        // CB 87 0055
        gbc.setState(0x2fa4, 0x659c, 0x2820, 0xf4a6, 0x3dca, 0xbfcb, 0x0, 0x0);
        gbc.writeMem(0x2fa4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x659c);
        EXPECT(gbc.pc(), 0x2fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0056
        gbc.setState(0x2c1a, 0x3148, 0x52f0, 0x9b94, 0x46e7, 0x8f65, 0x1, 0x0);
        gbc.writeMem(0x2c1a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3148);
        EXPECT(gbc.pc(), 0x2c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0057
        gbc.setState(0xb025, 0x99b, 0x560, 0x3b46, 0x3279, 0x6378, 0x1, 0x0);
        gbc.writeMem(0xb025, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x99b);
        EXPECT(gbc.pc(), 0xb027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb025), 0xcb);
        EXPECT(gbc.readMem(0xb026), 0x87);
        // CB 87 0058
        gbc.setState(0xb2db, 0xf5ac, 0x5d60, 0xf65e, 0x2f44, 0x6c0c, 0x1, 0x1);
        gbc.writeMem(0xb2db, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf5ac);
        EXPECT(gbc.pc(), 0xb2dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2db), 0xcb);
        EXPECT(gbc.readMem(0xb2dc), 0x87);
        // CB 87 005A
        gbc.setState(0x5cdf, 0xcab5, 0x5810, 0xa46e, 0xf182, 0xc912, 0x0, 0x1);
        gbc.writeMem(0x5cdf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcab5);
        EXPECT(gbc.pc(), 0x5ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 005B
        gbc.setState(0x7661, 0x3ad1, 0x9080, 0x8737, 0xd296, 0xb700, 0x1, 0x0);
        gbc.writeMem(0x7661, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3ad1);
        EXPECT(gbc.pc(), 0x7663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 005C
        gbc.setState(0x8172, 0x4b8d, 0x5970, 0xe680, 0x11a3, 0x77ad, 0x1, 0x1);
        gbc.writeMem(0x8172, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4b8d);
        EXPECT(gbc.pc(), 0x8174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8172), 0xcb);
        EXPECT(gbc.readMem(0x8173), 0x87);
        // CB 87 005D
        gbc.setState(0x2213, 0x9a9d, 0xc2d0, 0x444, 0xe8f3, 0xf6ff, 0x0, 0x0);
        gbc.writeMem(0x2213, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9a9d);
        EXPECT(gbc.pc(), 0x2215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 005F
        gbc.setState(0xac61, 0xe55b, 0x6d20, 0xb8bc, 0xab3a, 0x2ca9, 0x1, 0x1);
        gbc.writeMem(0xac61, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe55b);
        EXPECT(gbc.pc(), 0xac63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac61), 0xcb);
        EXPECT(gbc.readMem(0xac62), 0x87);
        // CB 87 0060
        gbc.setState(0x13c4, 0xa054, 0xb9b0, 0x7805, 0x161f, 0xa00, 0x1, 0x1);
        gbc.writeMem(0x13c4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa054);
        EXPECT(gbc.pc(), 0x13c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0061
        gbc.setState(0x1c65, 0x5731, 0x12f0, 0xf5e8, 0xd0bc, 0xc97f, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5731);
        EXPECT(gbc.pc(), 0x1c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0062
        gbc.setState(0xd944, 0xce8a, 0x1a90, 0x6224, 0xa419, 0xbfa0, 0x1, 0x1);
        gbc.writeMem(0xd944, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xce8a);
        EXPECT(gbc.pc(), 0xd946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd944), 0xcb);
        EXPECT(gbc.readMem(0xd945), 0x87);
        // CB 87 0063
        gbc.setState(0xcb05, 0xf378, 0x2a90, 0x7ea3, 0x715a, 0x997f, 0x0, 0x0);
        gbc.writeMem(0xcb05, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf378);
        EXPECT(gbc.pc(), 0xcb07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb05), 0xcb);
        EXPECT(gbc.readMem(0xcb06), 0x87);
        // CB 87 0064
        gbc.setState(0xb09e, 0xc402, 0xd7b0, 0x7c0e, 0x871, 0xd645, 0x1, 0x1);
        gbc.writeMem(0xb09e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc402);
        EXPECT(gbc.pc(), 0xb0a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09e), 0xcb);
        EXPECT(gbc.readMem(0xb09f), 0x87);
        // CB 87 0065
        gbc.setState(0xe509, 0xb609, 0xa9a0, 0x6aa0, 0xcb51, 0x5960, 0x0, 0x1);
        gbc.writeMem(0xe509, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb609);
        EXPECT(gbc.pc(), 0xe50b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe509), 0xcb);
        EXPECT(gbc.readMem(0xe50a), 0x87);
        // CB 87 0066
        gbc.setState(0xe2be, 0xb4b9, 0x3910, 0x718f, 0x512f, 0x2a35, 0x1, 0x0);
        gbc.writeMem(0xe2be, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb4b9);
        EXPECT(gbc.pc(), 0xe2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2be), 0xcb);
        EXPECT(gbc.readMem(0xe2bf), 0x87);
        // CB 87 0067
        gbc.setState(0x46f8, 0xfa94, 0x40e0, 0x69df, 0xdaaf, 0x13d4, 0x1, 0x1);
        gbc.writeMem(0x46f8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfa94);
        EXPECT(gbc.pc(), 0x46fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0068
        gbc.setState(0xe972, 0xc843, 0xcb50, 0xdb3e, 0x31ed, 0x851c, 0x1, 0x1);
        gbc.writeMem(0xe972, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc843);
        EXPECT(gbc.pc(), 0xe974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe972), 0xcb);
        EXPECT(gbc.readMem(0xe973), 0x87);
        // CB 87 0069
        gbc.setState(0x697f, 0x315f, 0xe00, 0x8aef, 0x4093, 0x2412, 0x1, 0x1);
        gbc.writeMem(0x697f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x315f);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 006A
        gbc.setState(0xe7ab, 0x2373, 0x4890, 0x3339, 0xcab8, 0xda5, 0x1, 0x0);
        gbc.writeMem(0xe7ab, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2373);
        EXPECT(gbc.pc(), 0xe7ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ab), 0xcb);
        EXPECT(gbc.readMem(0xe7ac), 0x87);
        // CB 87 006B
        gbc.setState(0x1a09, 0xfbe0, 0x4b80, 0x44ae, 0x1a80, 0x60a1, 0x1, 0x0);
        gbc.writeMem(0x1a09, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfbe0);
        EXPECT(gbc.pc(), 0x1a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 006C
        gbc.setState(0x68f7, 0x923e, 0xcf70, 0x39c6, 0x49c1, 0xaec0, 0x0, 0x1);
        gbc.writeMem(0x68f7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x923e);
        EXPECT(gbc.pc(), 0x68f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 006D
        gbc.setState(0x59f4, 0xdee1, 0xd650, 0x5ca4, 0xb4cf, 0xe897, 0x1, 0x1);
        gbc.writeMem(0x59f4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdee1);
        EXPECT(gbc.pc(), 0x59f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 006E
        gbc.setState(0x5f04, 0x6ed9, 0x1b90, 0xa908, 0xb128, 0xfada, 0x1, 0x0);
        gbc.writeMem(0x5f04, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6ed9);
        EXPECT(gbc.pc(), 0x5f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 006F
        gbc.setState(0x4b28, 0xa81c, 0x6230, 0x4497, 0xc574, 0x175a, 0x0, 0x1);
        gbc.writeMem(0x4b28, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa81c);
        EXPECT(gbc.pc(), 0x4b2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0070
        gbc.setState(0xd83b, 0x203a, 0x4e20, 0xfc9a, 0x31bb, 0xcdd8, 0x0, 0x1);
        gbc.writeMem(0xd83b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x203a);
        EXPECT(gbc.pc(), 0xd83d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83b), 0xcb);
        EXPECT(gbc.readMem(0xd83c), 0x87);
        // CB 87 0071
        gbc.setState(0x8236, 0x43c6, 0xa770, 0x3095, 0x32c7, 0x6546, 0x0, 0x0);
        gbc.writeMem(0x8236, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x43c6);
        EXPECT(gbc.pc(), 0x8238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8236), 0xcb);
        EXPECT(gbc.readMem(0x8237), 0x87);
        // CB 87 0072
        gbc.setState(0xeb92, 0xfb17, 0xd540, 0x939c, 0x4914, 0xd670, 0x1, 0x0);
        gbc.writeMem(0xeb92, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfb17);
        EXPECT(gbc.pc(), 0xeb94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb92), 0xcb);
        EXPECT(gbc.readMem(0xeb93), 0x87);
        // CB 87 0073
        gbc.setState(0xdc02, 0x5fa1, 0x89c0, 0xa411, 0x9d18, 0xc3b2, 0x1, 0x1);
        gbc.writeMem(0xdc02, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5fa1);
        EXPECT(gbc.pc(), 0xdc04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc02), 0xcb);
        EXPECT(gbc.readMem(0xdc03), 0x87);
        // CB 87 0074
        gbc.setState(0x7a63, 0x15a6, 0x6b10, 0xe9c7, 0xfcda, 0x2908, 0x0, 0x0);
        gbc.writeMem(0x7a63, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x15a6);
        EXPECT(gbc.pc(), 0x7a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0075
        gbc.setState(0x2af1, 0xe213, 0x36e0, 0xd186, 0x430b, 0x88b1, 0x0, 0x0);
        gbc.writeMem(0x2af1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe213);
        EXPECT(gbc.pc(), 0x2af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0076
        gbc.setState(0x6370, 0xbcf6, 0x75e0, 0xe95b, 0x453a, 0x58db, 0x0, 0x1);
        gbc.writeMem(0x6370, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbcf6);
        EXPECT(gbc.pc(), 0x6372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0077
        gbc.setState(0x9fbd, 0xf394, 0x7ed0, 0x1610, 0xead8, 0x206f, 0x0, 0x1);
        gbc.writeMem(0x9fbd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf394);
        EXPECT(gbc.pc(), 0x9fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbd), 0xcb);
        EXPECT(gbc.readMem(0x9fbe), 0x87);
        // CB 87 0078
        gbc.setState(0x8985, 0x7841, 0x8920, 0x9c72, 0x55e8, 0x2031, 0x0, 0x0);
        gbc.writeMem(0x8985, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7841);
        EXPECT(gbc.pc(), 0x8987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8985), 0xcb);
        EXPECT(gbc.readMem(0x8986), 0x87);
        // CB 87 0079
        gbc.setState(0xaf57, 0x1bb5, 0xb7b0, 0x7679, 0x3acb, 0x8d1b, 0x0, 0x1);
        gbc.writeMem(0xaf57, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1bb5);
        EXPECT(gbc.pc(), 0xaf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf57), 0xcb);
        EXPECT(gbc.readMem(0xaf58), 0x87);
        // CB 87 007A
        gbc.setState(0x7271, 0x59f7, 0xa070, 0xfee, 0x1ce6, 0x316c, 0x0, 0x1);
        gbc.writeMem(0x7271, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x59f7);
        EXPECT(gbc.pc(), 0x7273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 007B
        gbc.setState(0xdce6, 0x520b, 0xd480, 0xa7ab, 0x77ea, 0xef8b, 0x0, 0x0);
        gbc.writeMem(0xdce6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x520b);
        EXPECT(gbc.pc(), 0xdce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce6), 0xcb);
        EXPECT(gbc.readMem(0xdce7), 0x87);
        // CB 87 007C
        gbc.setState(0xa150, 0x1177, 0xce30, 0x8f71, 0xaa30, 0xcba0, 0x1, 0x0);
        gbc.writeMem(0xa150, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1177);
        EXPECT(gbc.pc(), 0xa152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa150), 0xcb);
        EXPECT(gbc.readMem(0xa151), 0x87);
        // CB 87 007D
        gbc.setState(0x600c, 0x9672, 0x2830, 0xa316, 0xd235, 0x5633, 0x1, 0x0);
        gbc.writeMem(0x600c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9672);
        EXPECT(gbc.pc(), 0x600e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 007E
        gbc.setState(0x6c3, 0xa30e, 0xdbe0, 0x186a, 0x2b42, 0x9a32, 0x1, 0x1);
        gbc.writeMem(0x6c3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa30e);
        EXPECT(gbc.pc(), 0x6c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 007F
        gbc.setState(0x4d55, 0xcc78, 0x8ec0, 0xcc9c, 0x7d1e, 0x9cd0, 0x1, 0x0);
        gbc.writeMem(0x4d55, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcc78);
        EXPECT(gbc.pc(), 0x4d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0080
        gbc.setState(0x4518, 0x62f6, 0x6b60, 0x9cc0, 0x10c4, 0xdc18, 0x1, 0x0);
        gbc.writeMem(0x4518, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x62f6);
        EXPECT(gbc.pc(), 0x451a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0081
        gbc.setState(0x6352, 0xc501, 0xf0c0, 0xc648, 0xc1ae, 0x9f3d, 0x1, 0x0);
        gbc.writeMem(0x6352, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc501);
        EXPECT(gbc.pc(), 0x6354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0082
        gbc.setState(0xbe4a, 0x85b9, 0x4ee0, 0xf3a2, 0x50b2, 0x9732, 0x0, 0x1);
        gbc.writeMem(0xbe4a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x85b9);
        EXPECT(gbc.pc(), 0xbe4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4a), 0xcb);
        EXPECT(gbc.readMem(0xbe4b), 0x87);
        // CB 87 0083
        gbc.setState(0xbe93, 0x297b, 0x1330, 0x5320, 0x7dc5, 0xb51f, 0x0, 0x0);
        gbc.writeMem(0xbe93, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x297b);
        EXPECT(gbc.pc(), 0xbe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe93), 0xcb);
        EXPECT(gbc.readMem(0xbe94), 0x87);
        // CB 87 0084
        gbc.setState(0x77a7, 0xd27e, 0x90c0, 0x64e7, 0x621d, 0x9c14, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd27e);
        EXPECT(gbc.pc(), 0x77a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0085
        gbc.setState(0x3072, 0x2bc, 0x2b20, 0xeb1b, 0x98c8, 0x6bf7, 0x1, 0x0);
        gbc.writeMem(0x3072, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2bc);
        EXPECT(gbc.pc(), 0x3074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0086
        gbc.setState(0xd922, 0x42ed, 0x4180, 0x7c1c, 0x1d2d, 0xae72, 0x1, 0x0);
        gbc.writeMem(0xd922, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x42ed);
        EXPECT(gbc.pc(), 0xd924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd922), 0xcb);
        EXPECT(gbc.readMem(0xd923), 0x87);
        // CB 87 0087
        gbc.setState(0x8e3c, 0x5827, 0xf460, 0xd9b4, 0x3a94, 0xc42a, 0x1, 0x0);
        gbc.writeMem(0x8e3c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5827);
        EXPECT(gbc.pc(), 0x8e3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3c), 0xcb);
        EXPECT(gbc.readMem(0x8e3d), 0x87);
        // CB 87 0088
        gbc.setState(0x4f92, 0x233f, 0xeb00, 0x44a9, 0x29e7, 0x18e2, 0x0, 0x0);
        gbc.writeMem(0x4f92, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x233f);
        EXPECT(gbc.pc(), 0x4f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0089
        gbc.setState(0x4628, 0x8dbe, 0x2160, 0x27a0, 0xe771, 0x8230, 0x0, 0x0);
        gbc.writeMem(0x4628, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8dbe);
        EXPECT(gbc.pc(), 0x462a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 008A
        gbc.setState(0x7e9f, 0x7b45, 0xd8f0, 0x9e46, 0xdb11, 0xcc30, 0x0, 0x1);
        gbc.writeMem(0x7e9f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7b45);
        EXPECT(gbc.pc(), 0x7ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 008B
        gbc.setState(0x676d, 0x18ed, 0x40d0, 0x1316, 0xe42f, 0x4ad6, 0x0, 0x1);
        gbc.writeMem(0x676d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x18ed);
        EXPECT(gbc.pc(), 0x676f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 008C
        gbc.setState(0xaa85, 0x3f19, 0x3d70, 0x868, 0x3627, 0x4117, 0x1, 0x0);
        gbc.writeMem(0xaa85, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3f19);
        EXPECT(gbc.pc(), 0xaa87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa85), 0xcb);
        EXPECT(gbc.readMem(0xaa86), 0x87);
        // CB 87 008D
        gbc.setState(0x8eb7, 0x522b, 0x6d10, 0xf676, 0x4dba, 0xdbfc, 0x1, 0x0);
        gbc.writeMem(0x8eb7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x522b);
        EXPECT(gbc.pc(), 0x8eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb7), 0xcb);
        EXPECT(gbc.readMem(0x8eb8), 0x87);
        // CB 87 008E
        gbc.setState(0x5178, 0x6ce6, 0xb460, 0xfe0e, 0xc780, 0xda98, 0x0, 0x0);
        gbc.writeMem(0x5178, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6ce6);
        EXPECT(gbc.pc(), 0x517a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 008F
        gbc.setState(0xe8a9, 0xfd8c, 0x2950, 0xcbca, 0x1b3c, 0x4235, 0x0, 0x1);
        gbc.writeMem(0xe8a9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfd8c);
        EXPECT(gbc.pc(), 0xe8ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a9), 0xcb);
        EXPECT(gbc.readMem(0xe8aa), 0x87);
        // CB 87 0090
        gbc.setState(0x1a6c, 0x167d, 0x16d0, 0x712a, 0x6535, 0x7929, 0x1, 0x1);
        gbc.writeMem(0x1a6c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x167d);
        EXPECT(gbc.pc(), 0x1a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0091
        gbc.setState(0x68cf, 0x8da4, 0x7cd0, 0xeb7f, 0x8c31, 0x6d7b, 0x0, 0x0);
        gbc.writeMem(0x68cf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8da4);
        EXPECT(gbc.pc(), 0x68d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0092
        gbc.setState(0x6698, 0x88c5, 0x9ce0, 0x1226, 0x32db, 0x9e80, 0x0, 0x0);
        gbc.writeMem(0x6698, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x88c5);
        EXPECT(gbc.pc(), 0x669a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0093
        gbc.setState(0x1265, 0x3bbf, 0x9270, 0x946b, 0xefe8, 0xf75b, 0x1, 0x1);
        gbc.writeMem(0x1265, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3bbf);
        EXPECT(gbc.pc(), 0x1267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0094
        gbc.setState(0x2289, 0xebc, 0xf1a0, 0x79f1, 0x998c, 0xd71, 0x0, 0x0);
        gbc.writeMem(0x2289, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xebc);
        EXPECT(gbc.pc(), 0x228b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0095
        gbc.setState(0xae53, 0x51ab, 0x8f50, 0xd0e3, 0x7a3b, 0x9c6f, 0x0, 0x0);
        gbc.writeMem(0xae53, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x51ab);
        EXPECT(gbc.pc(), 0xae55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae53), 0xcb);
        EXPECT(gbc.readMem(0xae54), 0x87);
        // CB 87 0096
        gbc.setState(0x9e7b, 0xbc93, 0x7550, 0x812, 0x484, 0xb622, 0x1, 0x1);
        gbc.writeMem(0x9e7b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbc93);
        EXPECT(gbc.pc(), 0x9e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7b), 0xcb);
        EXPECT(gbc.readMem(0x9e7c), 0x87);
        // CB 87 0097
        gbc.setState(0xd96a, 0x1727, 0xf470, 0x1cd3, 0x8c28, 0xe168, 0x0, 0x0);
        gbc.writeMem(0xd96a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1727);
        EXPECT(gbc.pc(), 0xd96c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd96a), 0xcb);
        EXPECT(gbc.readMem(0xd96b), 0x87);
        // CB 87 0098
        gbc.setState(0x16b1, 0x7a6b, 0x6e00, 0x2cb1, 0x22c4, 0xdf14, 0x0, 0x0);
        gbc.writeMem(0x16b1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7a6b);
        EXPECT(gbc.pc(), 0x16b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0099
        gbc.setState(0xa827, 0xbb63, 0xdc80, 0x9ff, 0x3573, 0xd9c2, 0x1, 0x0);
        gbc.writeMem(0xa827, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbb63);
        EXPECT(gbc.pc(), 0xa829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa827), 0xcb);
        EXPECT(gbc.readMem(0xa828), 0x87);
        // CB 87 009A
        gbc.setState(0x3a29, 0xaf0a, 0x6c40, 0x59b7, 0xd39f, 0x28e0, 0x1, 0x1);
        gbc.writeMem(0x3a29, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xaf0a);
        EXPECT(gbc.pc(), 0x3a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 009B
        gbc.setState(0x170c, 0x407, 0x1360, 0xad60, 0xccae, 0x5e25, 0x0, 0x1);
        gbc.writeMem(0x170c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x407);
        EXPECT(gbc.pc(), 0x170e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 009C
        gbc.setState(0x2cd6, 0xe91a, 0x3be0, 0xf9d2, 0x589c, 0x145, 0x1, 0x1);
        gbc.writeMem(0x2cd6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe91a);
        EXPECT(gbc.pc(), 0x2cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 009D
        gbc.setState(0xda5e, 0x8538, 0x36b0, 0xf6c1, 0xd95e, 0xefdf, 0x1, 0x0);
        gbc.writeMem(0xda5e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8538);
        EXPECT(gbc.pc(), 0xda60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda5e), 0xcb);
        EXPECT(gbc.readMem(0xda5f), 0x87);
        // CB 87 009E
        gbc.setState(0x5ad6, 0x2b2b, 0x8f70, 0xbffc, 0xb24e, 0xa74e, 0x0, 0x1);
        gbc.writeMem(0x5ad6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2b2b);
        EXPECT(gbc.pc(), 0x5ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 009F
        gbc.setState(0x20cd, 0xe634, 0xac60, 0x5ad0, 0xf753, 0xb075, 0x0, 0x1);
        gbc.writeMem(0x20cd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe634);
        EXPECT(gbc.pc(), 0x20cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00A0
        gbc.setState(0xcd2, 0x5273, 0x6d70, 0x5887, 0x5801, 0x73b3, 0x1, 0x0);
        gbc.writeMem(0xcd2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5273);
        EXPECT(gbc.pc(), 0xcd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00A1
        gbc.setState(0x9a37, 0x395a, 0x6900, 0x5352, 0x4b9, 0xc442, 0x0, 0x0);
        gbc.writeMem(0x9a37, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x395a);
        EXPECT(gbc.pc(), 0x9a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a37), 0xcb);
        EXPECT(gbc.readMem(0x9a38), 0x87);
        // CB 87 00A2
        gbc.setState(0x55e9, 0x437c, 0x8f50, 0x3039, 0xf3ee, 0xf7ee, 0x0, 0x1);
        gbc.writeMem(0x55e9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x437c);
        EXPECT(gbc.pc(), 0x55eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00A3
        gbc.setState(0x8136, 0xf495, 0x60, 0x872, 0x8668, 0xc71c, 0x1, 0x0);
        gbc.writeMem(0x8136, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf495);
        EXPECT(gbc.pc(), 0x8138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8136), 0xcb);
        EXPECT(gbc.readMem(0x8137), 0x87);
        // CB 87 00A4
        gbc.setState(0xc301, 0xd9e7, 0xde30, 0xf59b, 0x6982, 0x38e6, 0x1, 0x0);
        gbc.writeMem(0xc301, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd9e7);
        EXPECT(gbc.pc(), 0xc303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc301), 0xcb);
        EXPECT(gbc.readMem(0xc302), 0x87);
        // CB 87 00A5
        gbc.setState(0x769b, 0x46ad, 0xa8c0, 0xc27f, 0x3f0b, 0xcdc9, 0x1, 0x1);
        gbc.writeMem(0x769b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x46ad);
        EXPECT(gbc.pc(), 0x769d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00A6
        gbc.setState(0xe7cb, 0x671d, 0x4e40, 0x8400, 0x1b9, 0xda20, 0x1, 0x1);
        gbc.writeMem(0xe7cb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x671d);
        EXPECT(gbc.pc(), 0xe7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7cb), 0xcb);
        EXPECT(gbc.readMem(0xe7cc), 0x87);
        // CB 87 00A7
        gbc.setState(0xd32b, 0x5f5, 0xc810, 0xbac3, 0x9f63, 0xe88f, 0x0, 0x0);
        gbc.writeMem(0xd32b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5f5);
        EXPECT(gbc.pc(), 0xd32d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32b), 0xcb);
        EXPECT(gbc.readMem(0xd32c), 0x87);
        // CB 87 00A8
        gbc.setState(0xb16c, 0xe800, 0x65b0, 0xb34c, 0x3294, 0x6efe, 0x1, 0x1);
        gbc.writeMem(0xb16c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe800);
        EXPECT(gbc.pc(), 0xb16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16c), 0xcb);
        EXPECT(gbc.readMem(0xb16d), 0x87);
        // CB 87 00AA
        gbc.setState(0xeeb2, 0xe537, 0x31d0, 0xf5b6, 0xe462, 0xdd9f, 0x1, 0x0);
        gbc.writeMem(0xeeb2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe537);
        EXPECT(gbc.pc(), 0xeeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb2), 0xcb);
        EXPECT(gbc.readMem(0xeeb3), 0x87);
        // CB 87 00AB
        gbc.setState(0x840b, 0x5f6d, 0x1dc0, 0x4273, 0x85da, 0x7d6e, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5f6d);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840b), 0xcb);
        EXPECT(gbc.readMem(0x840c), 0x87);
        // CB 87 00AD
        gbc.setState(0xe92a, 0xc43a, 0x7ed0, 0x5812, 0x5a67, 0xc2da, 0x1, 0x0);
        gbc.writeMem(0xe92a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc43a);
        EXPECT(gbc.pc(), 0xe92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92a), 0xcb);
        EXPECT(gbc.readMem(0xe92b), 0x87);
        // CB 87 00AE
        gbc.setState(0x7733, 0x3c45, 0x2310, 0x3a68, 0x9e48, 0xc956, 0x1, 0x0);
        gbc.writeMem(0x7733, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3c45);
        EXPECT(gbc.pc(), 0x7735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00AF
        gbc.setState(0xc8c7, 0xd344, 0xdff0, 0xdff3, 0x2a9b, 0xb240, 0x0, 0x1);
        gbc.writeMem(0xc8c7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd344);
        EXPECT(gbc.pc(), 0xc8c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c7), 0xcb);
        EXPECT(gbc.readMem(0xc8c8), 0x87);
        // CB 87 00B0
        gbc.setState(0x7e6, 0xa187, 0x54c0, 0x1e10, 0xe77e, 0x2f06, 0x0, 0x0);
        gbc.writeMem(0x7e6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa187);
        EXPECT(gbc.pc(), 0x7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00B1
        gbc.setState(0x4fd, 0x170b, 0x8900, 0xab66, 0x9bb8, 0xb631, 0x1, 0x0);
        gbc.writeMem(0x4fd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x170b);
        EXPECT(gbc.pc(), 0x4ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00B2
        gbc.setState(0x3d72, 0xe4b0, 0x3ba0, 0x8a2c, 0xedfd, 0x8b91, 0x0, 0x0);
        gbc.writeMem(0x3d72, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe4b0);
        EXPECT(gbc.pc(), 0x3d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00B5
        gbc.setState(0x4877, 0xeddf, 0xbc90, 0x44d3, 0x9be4, 0xad1b, 0x0, 0x1);
        gbc.writeMem(0x4877, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xeddf);
        EXPECT(gbc.pc(), 0x4879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00B6
        gbc.setState(0xa69, 0xa91a, 0xef80, 0xfb50, 0x7015, 0xcf74, 0x0, 0x1);
        gbc.writeMem(0xa69, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa91a);
        EXPECT(gbc.pc(), 0xa6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00B7
        gbc.setState(0x82d2, 0xc864, 0x6970, 0x3734, 0xa470, 0xac74, 0x0, 0x0);
        gbc.writeMem(0x82d2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc864);
        EXPECT(gbc.pc(), 0x82d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d2), 0xcb);
        EXPECT(gbc.readMem(0x82d3), 0x87);
        // CB 87 00B8
        gbc.setState(0x1afa, 0x203f, 0x1680, 0xb6d1, 0x74a6, 0x55be, 0x0, 0x0);
        gbc.writeMem(0x1afa, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x203f);
        EXPECT(gbc.pc(), 0x1afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00B9
        gbc.setState(0xe3bc, 0x5d7c, 0x5db0, 0xe4a9, 0xc553, 0x568d, 0x0, 0x0);
        gbc.writeMem(0xe3bc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5d7c);
        EXPECT(gbc.pc(), 0xe3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bc), 0xcb);
        EXPECT(gbc.readMem(0xe3bd), 0x87);
        // CB 87 00BA
        gbc.setState(0xe942, 0xb130, 0x2d60, 0x8a3c, 0x36bb, 0xc3fe, 0x1, 0x0);
        gbc.writeMem(0xe942, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb130);
        EXPECT(gbc.pc(), 0xe944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe942), 0xcb);
        EXPECT(gbc.readMem(0xe943), 0x87);
        // CB 87 00BB
        gbc.setState(0xdbb4, 0xa296, 0x5a30, 0xa810, 0xafd8, 0x4b47, 0x0, 0x0);
        gbc.writeMem(0xdbb4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa296);
        EXPECT(gbc.pc(), 0xdbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb4), 0xcb);
        EXPECT(gbc.readMem(0xdbb5), 0x87);
        // CB 87 00BD
        gbc.setState(0x7aaf, 0x36e8, 0xa810, 0xae34, 0x8a47, 0x8cca, 0x1, 0x0);
        gbc.writeMem(0x7aaf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x36e8);
        EXPECT(gbc.pc(), 0x7ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00BE
        gbc.setState(0x8444, 0x33e6, 0xbf00, 0x854, 0xf580, 0x37a0, 0x1, 0x0);
        gbc.writeMem(0x8444, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x33e6);
        EXPECT(gbc.pc(), 0x8446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8444), 0xcb);
        EXPECT(gbc.readMem(0x8445), 0x87);
        // CB 87 00C0
        gbc.setState(0x643d, 0x4f7f, 0x140, 0x2466, 0x151a, 0xe928, 0x1, 0x1);
        gbc.writeMem(0x643d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4f7f);
        EXPECT(gbc.pc(), 0x643f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00C1
        gbc.setState(0xe049, 0xebeb, 0xe670, 0xcd11, 0x4ed1, 0x469d, 0x1, 0x0);
        gbc.writeMem(0xe049, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xebeb);
        EXPECT(gbc.pc(), 0xe04b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe049), 0xcb);
        EXPECT(gbc.readMem(0xe04a), 0x87);
        // CB 87 00C2
        gbc.setState(0xbb4f, 0x4995, 0xc7b0, 0xc607, 0xa3c8, 0x483a, 0x1, 0x0);
        gbc.writeMem(0xbb4f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4995);
        EXPECT(gbc.pc(), 0xbb51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4f), 0xcb);
        EXPECT(gbc.readMem(0xbb50), 0x87);
        // CB 87 00C3
        gbc.setState(0xa283, 0x1555, 0x3c0, 0xa682, 0xe5c9, 0xf9ba, 0x1, 0x1);
        gbc.writeMem(0xa283, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1555);
        EXPECT(gbc.pc(), 0xa285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa283), 0xcb);
        EXPECT(gbc.readMem(0xa284), 0x87);
        // CB 87 00C4
        gbc.setState(0xcf4, 0xce57, 0xb2a0, 0xb23, 0x465f, 0x241e, 0x1, 0x1);
        gbc.writeMem(0xcf4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xce57);
        EXPECT(gbc.pc(), 0xcf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00C5
        gbc.setState(0xae2c, 0x2337, 0x4710, 0x70, 0x8665, 0x32a6, 0x1, 0x1);
        gbc.writeMem(0xae2c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2337);
        EXPECT(gbc.pc(), 0xae2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2c), 0xcb);
        EXPECT(gbc.readMem(0xae2d), 0x87);
        // CB 87 00C6
        gbc.setState(0xc7b5, 0x2c04, 0x5c50, 0x6685, 0xc56e, 0x46a0, 0x0, 0x0);
        gbc.writeMem(0xc7b5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2c04);
        EXPECT(gbc.pc(), 0xc7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b5), 0xcb);
        EXPECT(gbc.readMem(0xc7b6), 0x87);
        // CB 87 00C7
        gbc.setState(0xe063, 0x6755, 0x8cb0, 0xed59, 0x449f, 0x380f, 0x1, 0x0);
        gbc.writeMem(0xe063, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6755);
        EXPECT(gbc.pc(), 0xe065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe063), 0xcb);
        EXPECT(gbc.readMem(0xe064), 0x87);
        // CB 87 00C8
        gbc.setState(0x3b99, 0x7746, 0x6790, 0x1d29, 0x6c2, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0x3b99, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7746);
        EXPECT(gbc.pc(), 0x3b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00C9
        gbc.setState(0x98da, 0xbd38, 0x5aa0, 0x92e9, 0xdd01, 0x1ae5, 0x1, 0x1);
        gbc.writeMem(0x98da, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbd38);
        EXPECT(gbc.pc(), 0x98dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98da), 0xcb);
        EXPECT(gbc.readMem(0x98db), 0x87);
        // CB 87 00CA
        gbc.setState(0x34c9, 0xb205, 0x89c0, 0x8486, 0xfaaa, 0x4836, 0x0, 0x1);
        gbc.writeMem(0x34c9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb205);
        EXPECT(gbc.pc(), 0x34cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00CB
        gbc.setState(0xb578, 0xef3d, 0x5b20, 0x13b6, 0x931d, 0xf5b, 0x0, 0x1);
        gbc.writeMem(0xb578, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xef3d);
        EXPECT(gbc.pc(), 0xb57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb578), 0xcb);
        EXPECT(gbc.readMem(0xb579), 0x87);
        // CB 87 00CC
        gbc.setState(0x57da, 0x89a7, 0x4470, 0xa2c, 0xd602, 0x4f19, 0x0, 0x1);
        gbc.writeMem(0x57da, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x89a7);
        EXPECT(gbc.pc(), 0x57dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00CD
        gbc.setState(0x915a, 0x9821, 0xa6f0, 0x8229, 0x9442, 0xcd49, 0x0, 0x1);
        gbc.writeMem(0x915a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9821);
        EXPECT(gbc.pc(), 0x915c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x915a), 0xcb);
        EXPECT(gbc.readMem(0x915b), 0x87);
        // CB 87 00CE
        gbc.setState(0x9248, 0x1238, 0x7500, 0xf3f1, 0xd396, 0xd7ef, 0x0, 0x0);
        gbc.writeMem(0x9248, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1238);
        EXPECT(gbc.pc(), 0x924a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9248), 0xcb);
        EXPECT(gbc.readMem(0x9249), 0x87);
        // CB 87 00CF
        gbc.setState(0x5ca, 0xfcf8, 0x1030, 0x7d8b, 0xf752, 0xbbd2, 0x1, 0x1);
        gbc.writeMem(0x5ca, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfcf8);
        EXPECT(gbc.pc(), 0x5cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00D0
        gbc.setState(0x16ae, 0xb9cb, 0x7b20, 0x1cd0, 0xf36f, 0x7e53, 0x1, 0x0);
        gbc.writeMem(0x16ae, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb9cb);
        EXPECT(gbc.pc(), 0x16b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00D1
        gbc.setState(0x1b19, 0x21ec, 0xf5c0, 0x7707, 0xb1bc, 0x26ea, 0x0, 0x1);
        gbc.writeMem(0x1b19, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x21ec);
        EXPECT(gbc.pc(), 0x1b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00D2
        gbc.setState(0x622f, 0x7c23, 0xa950, 0x4f7e, 0xe26d, 0x4902, 0x1, 0x1);
        gbc.writeMem(0x622f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7c23);
        EXPECT(gbc.pc(), 0x6231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00D3
        gbc.setState(0x6d72, 0xff8b, 0xc0d0, 0x1351, 0xa354, 0xcf1a, 0x0, 0x0);
        gbc.writeMem(0x6d72, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xff8b);
        EXPECT(gbc.pc(), 0x6d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00D4
        gbc.setState(0x531a, 0x868e, 0x21c0, 0x467c, 0xbedd, 0xf411, 0x1, 0x0);
        gbc.writeMem(0x531a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x868e);
        EXPECT(gbc.pc(), 0x531c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00D5
        gbc.setState(0x6832, 0x1eb, 0xa1a0, 0xa3be, 0x928f, 0x48d6, 0x1, 0x1);
        gbc.writeMem(0x6832, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1eb);
        EXPECT(gbc.pc(), 0x6834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00D6
        gbc.setState(0x9759, 0x97f8, 0x8bc0, 0xaf25, 0xb513, 0x79ac, 0x1, 0x0);
        gbc.writeMem(0x9759, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x97f8);
        EXPECT(gbc.pc(), 0x975b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9759), 0xcb);
        EXPECT(gbc.readMem(0x975a), 0x87);
        // CB 87 00D8
        gbc.setState(0x22de, 0x5506, 0x3060, 0x2522, 0x268f, 0x5d69, 0x1, 0x0);
        gbc.writeMem(0x22de, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5506);
        EXPECT(gbc.pc(), 0x22e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00D9
        gbc.setState(0xa3da, 0x15f7, 0x1670, 0x2454, 0x6cf8, 0x108d, 0x0, 0x0);
        gbc.writeMem(0xa3da, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x15f7);
        EXPECT(gbc.pc(), 0xa3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3da), 0xcb);
        EXPECT(gbc.readMem(0xa3db), 0x87);
        // CB 87 00DA
        gbc.setState(0x23ad, 0xa0ad, 0xa6c0, 0x4e7f, 0x2860, 0x58a6, 0x0, 0x0);
        gbc.writeMem(0x23ad, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa0ad);
        EXPECT(gbc.pc(), 0x23af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00DB
        gbc.setState(0x831d, 0xaac7, 0x4900, 0x5505, 0xfb98, 0x5787, 0x1, 0x0);
        gbc.writeMem(0x831d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaac7);
        EXPECT(gbc.pc(), 0x831f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831d), 0xcb);
        EXPECT(gbc.readMem(0x831e), 0x87);
        // CB 87 00DC
        gbc.setState(0x39dc, 0x4640, 0x5000, 0x11b8, 0x11e, 0xf69f, 0x1, 0x0);
        gbc.writeMem(0x39dc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4640);
        EXPECT(gbc.pc(), 0x39de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00DD
        gbc.setState(0x6c44, 0x7940, 0x5ad0, 0x3593, 0x420f, 0x13c4, 0x1, 0x1);
        gbc.writeMem(0x6c44, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7940);
        EXPECT(gbc.pc(), 0x6c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00DE
        gbc.setState(0x15a7, 0xd415, 0xf10, 0x9718, 0x4a71, 0x5f12, 0x0, 0x1);
        gbc.writeMem(0x15a7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd415);
        EXPECT(gbc.pc(), 0x15a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00DF
        gbc.setState(0x4e7d, 0xdc69, 0xa820, 0xdf0a, 0x9eea, 0xb038, 0x0, 0x0);
        gbc.writeMem(0x4e7d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdc69);
        EXPECT(gbc.pc(), 0x4e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00E0
        gbc.setState(0x7091, 0xee3c, 0x8c40, 0x72c0, 0x5aae, 0x7726, 0x0, 0x1);
        gbc.writeMem(0x7091, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xee3c);
        EXPECT(gbc.pc(), 0x7093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00E1
        gbc.setState(0xab69, 0x6c39, 0x1730, 0x2e4a, 0x4975, 0x3fb2, 0x0, 0x1);
        gbc.writeMem(0xab69, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6c39);
        EXPECT(gbc.pc(), 0xab6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab69), 0xcb);
        EXPECT(gbc.readMem(0xab6a), 0x87);
        // CB 87 00E2
        gbc.setState(0x10c4, 0xfe29, 0x4de0, 0xb939, 0x1ca7, 0x6bba, 0x1, 0x1);
        gbc.writeMem(0x10c4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfe29);
        EXPECT(gbc.pc(), 0x10c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00E3
        gbc.setState(0x6061, 0xba1c, 0xe370, 0x548d, 0xb65e, 0xf477, 0x1, 0x1);
        gbc.writeMem(0x6061, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xba1c);
        EXPECT(gbc.pc(), 0x6063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00E4
        gbc.setState(0xf9e, 0xd1de, 0x6be0, 0x978b, 0x1ec6, 0x733e, 0x1, 0x0);
        gbc.writeMem(0xf9e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd1de);
        EXPECT(gbc.pc(), 0xfa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00E5
        gbc.setState(0x1bf0, 0x71b2, 0xf9e0, 0xb8e2, 0x1664, 0xa481, 0x0, 0x0);
        gbc.writeMem(0x1bf0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x71b2);
        EXPECT(gbc.pc(), 0x1bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00E6
        gbc.setState(0xd10e, 0xec92, 0xff50, 0x429d, 0x1ade, 0x2606, 0x0, 0x0);
        gbc.writeMem(0xd10e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xec92);
        EXPECT(gbc.pc(), 0xd110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd10e), 0xcb);
        EXPECT(gbc.readMem(0xd10f), 0x87);
        // CB 87 00E7
        gbc.setState(0xc6dd, 0xe4a6, 0xdd90, 0x8028, 0x1c35, 0xe236, 0x1, 0x1);
        gbc.writeMem(0xc6dd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe4a6);
        EXPECT(gbc.pc(), 0xc6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6dd), 0xcb);
        EXPECT(gbc.readMem(0xc6de), 0x87);
        // CB 87 00E8
        gbc.setState(0x4054, 0xf1fb, 0x7960, 0x4833, 0xf4fa, 0x408f, 0x1, 0x1);
        gbc.writeMem(0x4054, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf1fb);
        EXPECT(gbc.pc(), 0x4056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00E9
        gbc.setState(0x66c5, 0x7fa6, 0x4390, 0x5b2d, 0x4d51, 0x3877, 0x1, 0x0);
        gbc.writeMem(0x66c5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7fa6);
        EXPECT(gbc.pc(), 0x66c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00EA
        gbc.setState(0x5a23, 0x8662, 0x7140, 0x3556, 0x5c41, 0x5d95, 0x0, 0x0);
        gbc.writeMem(0x5a23, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8662);
        EXPECT(gbc.pc(), 0x5a25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00EB
        gbc.setState(0x7267, 0x897, 0x6a40, 0xaac2, 0x8c06, 0xda76, 0x0, 0x0);
        gbc.writeMem(0x7267, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x897);
        EXPECT(gbc.pc(), 0x7269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00EC
        gbc.setState(0xee6d, 0x2124, 0xd040, 0x8eb7, 0x8389, 0x1fed, 0x0, 0x1);
        gbc.writeMem(0xee6d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2124);
        EXPECT(gbc.pc(), 0xee6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6d), 0xcb);
        EXPECT(gbc.readMem(0xee6e), 0x87);
        // CB 87 00ED
        gbc.setState(0xc92c, 0x37ae, 0xef70, 0x2ccc, 0xd1ac, 0xde7, 0x0, 0x0);
        gbc.writeMem(0xc92c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x37ae);
        EXPECT(gbc.pc(), 0xc92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92c), 0xcb);
        EXPECT(gbc.readMem(0xc92d), 0x87);
        // CB 87 00EE
        gbc.setState(0x1643, 0x2bed, 0x5520, 0x1228, 0x6d44, 0x66fb, 0x1, 0x1);
        gbc.writeMem(0x1643, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2bed);
        EXPECT(gbc.pc(), 0x1645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00EF
        gbc.setState(0xb207, 0x3788, 0xa140, 0xc0e9, 0xd138, 0xfca0, 0x0, 0x1);
        gbc.writeMem(0xb207, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3788);
        EXPECT(gbc.pc(), 0xb209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb207), 0xcb);
        EXPECT(gbc.readMem(0xb208), 0x87);
        // CB 87 00F0
        gbc.setState(0xd63, 0xe0fe, 0x7190, 0xa057, 0x3e98, 0x152b, 0x0, 0x1);
        gbc.writeMem(0xd63, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe0fe);
        EXPECT(gbc.pc(), 0xd65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00F1
        gbc.setState(0xa7cc, 0x7cd1, 0x4090, 0x72c2, 0xf03e, 0x992d, 0x1, 0x0);
        gbc.writeMem(0xa7cc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7cd1);
        EXPECT(gbc.pc(), 0xa7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cc), 0xcb);
        EXPECT(gbc.readMem(0xa7cd), 0x87);
        // CB 87 00F2
        gbc.setState(0x753, 0x8750, 0xa90, 0xe58f, 0xce69, 0xa0b6, 0x1, 0x0);
        gbc.writeMem(0x753, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8750);
        EXPECT(gbc.pc(), 0x755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00F3
        gbc.setState(0x8afd, 0x75af, 0x1f60, 0xf4a1, 0x9f4, 0xb0c7, 0x0, 0x0);
        gbc.writeMem(0x8afd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x75af);
        EXPECT(gbc.pc(), 0x8aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8afd), 0xcb);
        EXPECT(gbc.readMem(0x8afe), 0x87);
        // CB 87 00F4
        gbc.setState(0xc81b, 0x3e8e, 0xa2c0, 0xdf6, 0xb941, 0x2e51, 0x1, 0x1);
        gbc.writeMem(0xc81b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3e8e);
        EXPECT(gbc.pc(), 0xc81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81b), 0xcb);
        EXPECT(gbc.readMem(0xc81c), 0x87);
        // CB 87 00F5
        gbc.setState(0x7abb, 0x86e3, 0x94e0, 0x6a9a, 0x8202, 0xba93, 0x0, 0x0);
        gbc.writeMem(0x7abb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x86e3);
        EXPECT(gbc.pc(), 0x7abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00F6
        gbc.setState(0x14dd, 0xaf07, 0xa2f0, 0x1bb5, 0xa252, 0x8626, 0x1, 0x0);
        gbc.writeMem(0x14dd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xaf07);
        EXPECT(gbc.pc(), 0x14df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00F7
        gbc.setState(0x8ba3, 0x51a9, 0x7260, 0x3da8, 0xcde2, 0x7d4d, 0x0, 0x1);
        gbc.writeMem(0x8ba3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x51a9);
        EXPECT(gbc.pc(), 0x8ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba3), 0xcb);
        EXPECT(gbc.readMem(0x8ba4), 0x87);
        // CB 87 00F8
        gbc.setState(0xddf6, 0xa2aa, 0x5fc0, 0x29f3, 0x35bb, 0x11a9, 0x1, 0x0);
        gbc.writeMem(0xddf6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa2aa);
        EXPECT(gbc.pc(), 0xddf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf6), 0xcb);
        EXPECT(gbc.readMem(0xddf7), 0x87);
        // CB 87 00F9
        gbc.setState(0xb996, 0x7b7d, 0x4820, 0x9875, 0x5cc8, 0xb4d4, 0x1, 0x1);
        gbc.writeMem(0xb996, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7b7d);
        EXPECT(gbc.pc(), 0xb998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb996), 0xcb);
        EXPECT(gbc.readMem(0xb997), 0x87);
        // CB 87 00FA
        gbc.setState(0x98e4, 0x2b86, 0x2050, 0xe081, 0x2131, 0x2529, 0x0, 0x0);
        gbc.writeMem(0x98e4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0x98e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e4), 0xcb);
        EXPECT(gbc.readMem(0x98e5), 0x87);
        // CB 87 00FB
        gbc.setState(0x4e4b, 0x40d0, 0xd1f0, 0x2861, 0xe57d, 0x1109, 0x1, 0x0);
        gbc.writeMem(0x4e4b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x40d0);
        EXPECT(gbc.pc(), 0x4e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 00FC
        gbc.setState(0xea58, 0x1ef7, 0x3f20, 0xeec1, 0x38da, 0xbae8, 0x1, 0x1);
        gbc.writeMem(0xea58, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1ef7);
        EXPECT(gbc.pc(), 0xea5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea58), 0xcb);
        EXPECT(gbc.readMem(0xea59), 0x87);
        // CB 87 00FD
        gbc.setState(0xb54f, 0xcf12, 0xf9f0, 0x935a, 0xb226, 0x3ac7, 0x1, 0x1);
        gbc.writeMem(0xb54f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcf12);
        EXPECT(gbc.pc(), 0xb551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54f), 0xcb);
        EXPECT(gbc.readMem(0xb550), 0x87);
        // CB 87 00FE
        gbc.setState(0x14f6, 0xe769, 0x1ee0, 0x79ea, 0x39b4, 0xcac4, 0x1, 0x0);
        gbc.writeMem(0x14f6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe769);
        EXPECT(gbc.pc(), 0x14f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 00FF
        gbc.setState(0x8a39, 0x148c, 0x6a10, 0x45eb, 0xd8a4, 0x9f6e, 0x0, 0x0);
        gbc.writeMem(0x8a39, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x148c);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a39), 0xcb);
        EXPECT(gbc.readMem(0x8a3a), 0x87);
        // CB 87 0100
        gbc.setState(0x39b5, 0x807b, 0xc180, 0x74b1, 0x853f, 0xefd1, 0x0, 0x1);
        gbc.writeMem(0x39b5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x807b);
        EXPECT(gbc.pc(), 0x39b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0102
        gbc.setState(0xa619, 0x24bb, 0xcb60, 0x3cb7, 0x9b2d, 0x5b4d, 0x1, 0x0);
        gbc.writeMem(0xa619, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x24bb);
        EXPECT(gbc.pc(), 0xa61b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa619), 0xcb);
        EXPECT(gbc.readMem(0xa61a), 0x87);
        // CB 87 0103
        gbc.setState(0xbad8, 0x7dd3, 0xc9f0, 0x4e55, 0x2711, 0xefd4, 0x1, 0x1);
        gbc.writeMem(0xbad8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7dd3);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad8), 0xcb);
        EXPECT(gbc.readMem(0xbad9), 0x87);
        // CB 87 0104
        gbc.setState(0x6145, 0x9789, 0x79b0, 0xc51f, 0x565f, 0xba9d, 0x0, 0x1);
        gbc.writeMem(0x6145, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9789);
        EXPECT(gbc.pc(), 0x6147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0105
        gbc.setState(0xd779, 0x8c56, 0xe480, 0x922a, 0xe849, 0xb9ef, 0x0, 0x1);
        gbc.writeMem(0xd779, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8c56);
        EXPECT(gbc.pc(), 0xd77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd779), 0xcb);
        EXPECT(gbc.readMem(0xd77a), 0x87);
        // CB 87 0106
        gbc.setState(0x33f5, 0x3507, 0x5f60, 0x95ea, 0x865e, 0x35e0, 0x0, 0x1);
        gbc.writeMem(0x33f5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3507);
        EXPECT(gbc.pc(), 0x33f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0107
        gbc.setState(0x4880, 0x345a, 0xa2a0, 0x173c, 0x69f3, 0x96d, 0x0, 0x1);
        gbc.writeMem(0x4880, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x345a);
        EXPECT(gbc.pc(), 0x4882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0108
        gbc.setState(0x867d, 0xae67, 0x2080, 0xccb2, 0x6046, 0xa059, 0x0, 0x1);
        gbc.writeMem(0x867d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xae67);
        EXPECT(gbc.pc(), 0x867f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867d), 0xcb);
        EXPECT(gbc.readMem(0x867e), 0x87);
        // CB 87 0109
        gbc.setState(0x9249, 0x841a, 0xda00, 0x346a, 0x661b, 0xb869, 0x0, 0x0);
        gbc.writeMem(0x9249, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x841a);
        EXPECT(gbc.pc(), 0x924b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9249), 0xcb);
        EXPECT(gbc.readMem(0x924a), 0x87);
        // CB 87 010A
        gbc.setState(0xe728, 0xde81, 0x8950, 0x2304, 0xef2f, 0xc93a, 0x1, 0x1);
        gbc.writeMem(0xe728, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xde81);
        EXPECT(gbc.pc(), 0xe72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe728), 0xcb);
        EXPECT(gbc.readMem(0xe729), 0x87);
        // CB 87 010B
        gbc.setState(0x89dd, 0x561c, 0xe7d0, 0x3166, 0x75c9, 0x8cdd, 0x1, 0x1);
        gbc.writeMem(0x89dd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x561c);
        EXPECT(gbc.pc(), 0x89df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89dd), 0xcb);
        EXPECT(gbc.readMem(0x89de), 0x87);
        // CB 87 010C
        gbc.setState(0x972e, 0x540a, 0x7ce0, 0xc4b9, 0x63fe, 0xd43a, 0x1, 0x1);
        gbc.writeMem(0x972e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x540a);
        EXPECT(gbc.pc(), 0x9730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x972e), 0xcb);
        EXPECT(gbc.readMem(0x972f), 0x87);
        // CB 87 010D
        gbc.setState(0xb059, 0x4c56, 0xdb20, 0x472, 0x8e, 0xff34, 0x0, 0x0);
        gbc.writeMem(0xb059, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4c56);
        EXPECT(gbc.pc(), 0xb05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb059), 0xcb);
        EXPECT(gbc.readMem(0xb05a), 0x87);
        // CB 87 010E
        gbc.setState(0x42f7, 0xa0ac, 0x6ef0, 0xca53, 0x4481, 0x6321, 0x0, 0x1);
        gbc.writeMem(0x42f7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa0ac);
        EXPECT(gbc.pc(), 0x42f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 010F
        gbc.setState(0x7481, 0x18c3, 0x51f0, 0x4756, 0x71ae, 0x134e, 0x0, 0x1);
        gbc.writeMem(0x7481, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x18c3);
        EXPECT(gbc.pc(), 0x7483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0110
        gbc.setState(0xbdb4, 0x56a8, 0xed40, 0x79cf, 0x5d33, 0x7ec1, 0x0, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x56a8);
        EXPECT(gbc.pc(), 0xbdb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb4), 0xcb);
        EXPECT(gbc.readMem(0xbdb5), 0x87);
        // CB 87 0111
        gbc.setState(0x4c53, 0x21c0, 0x4730, 0xfcf6, 0x2fb0, 0x5377, 0x0, 0x1);
        gbc.writeMem(0x4c53, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x21c0);
        EXPECT(gbc.pc(), 0x4c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0112
        gbc.setState(0x11a5, 0xf153, 0x9c0, 0xc01b, 0xc5c7, 0x25ee, 0x1, 0x1);
        gbc.writeMem(0x11a5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf153);
        EXPECT(gbc.pc(), 0x11a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0113
        gbc.setState(0xac4d, 0x57c5, 0xa3b0, 0x4e33, 0xee3e, 0xd3f9, 0x0, 0x0);
        gbc.writeMem(0xac4d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x57c5);
        EXPECT(gbc.pc(), 0xac4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4d), 0xcb);
        EXPECT(gbc.readMem(0xac4e), 0x87);
        // CB 87 0115
        gbc.setState(0x8ebe, 0xa641, 0xf380, 0x3f4, 0xbc9, 0x3a5c, 0x1, 0x0);
        gbc.writeMem(0x8ebe, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa641);
        EXPECT(gbc.pc(), 0x8ec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebe), 0xcb);
        EXPECT(gbc.readMem(0x8ebf), 0x87);
        // CB 87 0116
        gbc.setState(0x824c, 0xd1b8, 0xdc90, 0x6116, 0xe1b0, 0x9c1a, 0x1, 0x0);
        gbc.writeMem(0x824c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd1b8);
        EXPECT(gbc.pc(), 0x824e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x824c), 0xcb);
        EXPECT(gbc.readMem(0x824d), 0x87);
        // CB 87 0117
        gbc.setState(0x28cd, 0xc4dd, 0x1d80, 0x3735, 0xbfd8, 0xcc25, 0x1, 0x1);
        gbc.writeMem(0x28cd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc4dd);
        EXPECT(gbc.pc(), 0x28cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0118
        gbc.setState(0x6896, 0x87ad, 0x52d0, 0x7b12, 0xf62b, 0x2177, 0x1, 0x1);
        gbc.writeMem(0x6896, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x87ad);
        EXPECT(gbc.pc(), 0x6898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0119
        gbc.setState(0x256f, 0x1fa2, 0xfa20, 0x5e00, 0x1594, 0xf131, 0x1, 0x1);
        gbc.writeMem(0x256f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1fa2);
        EXPECT(gbc.pc(), 0x2571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 011A
        gbc.setState(0xb3f7, 0xc81f, 0xe070, 0x3961, 0x2730, 0xa2ab, 0x1, 0x1);
        gbc.writeMem(0xb3f7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc81f);
        EXPECT(gbc.pc(), 0xb3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f7), 0xcb);
        EXPECT(gbc.readMem(0xb3f8), 0x87);
        // CB 87 011B
        gbc.setState(0x80e9, 0x62d4, 0xc670, 0xe791, 0x5f2e, 0x255e, 0x0, 0x1);
        gbc.writeMem(0x80e9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x62d4);
        EXPECT(gbc.pc(), 0x80eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e9), 0xcb);
        EXPECT(gbc.readMem(0x80ea), 0x87);
        // CB 87 011C
        gbc.setState(0xe4f2, 0x7001, 0x9a20, 0xfa8f, 0xcfd1, 0xa27b, 0x1, 0x0);
        gbc.writeMem(0xe4f2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7001);
        EXPECT(gbc.pc(), 0xe4f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f2), 0xcb);
        EXPECT(gbc.readMem(0xe4f3), 0x87);
        // CB 87 011D
        gbc.setState(0xd160, 0x389e, 0x83d0, 0xafd3, 0x8ef7, 0x1082, 0x1, 0x1);
        gbc.writeMem(0xd160, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x389e);
        EXPECT(gbc.pc(), 0xd162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd160), 0xcb);
        EXPECT(gbc.readMem(0xd161), 0x87);
        // CB 87 011E
        gbc.setState(0xb71b, 0xf632, 0x3c50, 0xb047, 0xda86, 0x3b27, 0x0, 0x1);
        gbc.writeMem(0xb71b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf632);
        EXPECT(gbc.pc(), 0xb71d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb71b), 0xcb);
        EXPECT(gbc.readMem(0xb71c), 0x87);
        // CB 87 0120
        gbc.setState(0x337e, 0xdfd9, 0xafc0, 0xcc29, 0xa052, 0x849b, 0x0, 0x1);
        gbc.writeMem(0x337e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdfd9);
        EXPECT(gbc.pc(), 0x3380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0121
        gbc.setState(0x82e7, 0x6d49, 0x6400, 0xbd34, 0x1534, 0x9f9, 0x0, 0x0);
        gbc.writeMem(0x82e7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6d49);
        EXPECT(gbc.pc(), 0x82e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e7), 0xcb);
        EXPECT(gbc.readMem(0x82e8), 0x87);
        // CB 87 0122
        gbc.setState(0x6376, 0xe7b3, 0x59d0, 0x6e88, 0x2804, 0x761, 0x0, 0x0);
        gbc.writeMem(0x6376, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe7b3);
        EXPECT(gbc.pc(), 0x6378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0123
        gbc.setState(0x2079, 0xecca, 0xf500, 0x1da0, 0x10e2, 0xedd6, 0x1, 0x0);
        gbc.writeMem(0x2079, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xecca);
        EXPECT(gbc.pc(), 0x207b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0124
        gbc.setState(0x7bc8, 0xc4bf, 0x1930, 0xa363, 0x757, 0x4241, 0x0, 0x0);
        gbc.writeMem(0x7bc8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc4bf);
        EXPECT(gbc.pc(), 0x7bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0125
        gbc.setState(0x5c0a, 0xb3f8, 0x2070, 0x755b, 0xd05f, 0xc10b, 0x1, 0x1);
        gbc.writeMem(0x5c0a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb3f8);
        EXPECT(gbc.pc(), 0x5c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0126
        gbc.setState(0xca40, 0xf803, 0x2cf0, 0x1fdd, 0x9d20, 0x7fc8, 0x0, 0x0);
        gbc.writeMem(0xca40, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf803);
        EXPECT(gbc.pc(), 0xca42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca40), 0xcb);
        EXPECT(gbc.readMem(0xca41), 0x87);
        // CB 87 0127
        gbc.setState(0x240b, 0xe486, 0x47d0, 0xf3f3, 0x7ea4, 0x7c45, 0x0, 0x0);
        gbc.writeMem(0x240b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe486);
        EXPECT(gbc.pc(), 0x240d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0128
        gbc.setState(0xdaf4, 0x3c46, 0x3700, 0x1cc4, 0x710f, 0xb9ce, 0x1, 0x1);
        gbc.writeMem(0xdaf4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3c46);
        EXPECT(gbc.pc(), 0xdaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf4), 0xcb);
        EXPECT(gbc.readMem(0xdaf5), 0x87);
        // CB 87 0129
        gbc.setState(0x81fc, 0x7cc7, 0xcfc0, 0x8743, 0xdb17, 0xcb9c, 0x0, 0x0);
        gbc.writeMem(0x81fc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7cc7);
        EXPECT(gbc.pc(), 0x81fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fc), 0xcb);
        EXPECT(gbc.readMem(0x81fd), 0x87);
        // CB 87 012A
        gbc.setState(0x7085, 0x4ad6, 0x8fc0, 0x8318, 0x1937, 0x2578, 0x0, 0x1);
        gbc.writeMem(0x7085, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4ad6);
        EXPECT(gbc.pc(), 0x7087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 012B
        gbc.setState(0x43d, 0x7ca, 0xe8e0, 0xbf99, 0x774, 0xa6e9, 0x1, 0x0);
        gbc.writeMem(0x43d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7ca);
        EXPECT(gbc.pc(), 0x43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 012C
        gbc.setState(0xd021, 0x5c12, 0xe6b0, 0xe4fd, 0xee37, 0xc8b, 0x1, 0x0);
        gbc.writeMem(0xd021, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5c12);
        EXPECT(gbc.pc(), 0xd023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd021), 0xcb);
        EXPECT(gbc.readMem(0xd022), 0x87);
        // CB 87 012E
        gbc.setState(0x173e, 0x60e2, 0x38a0, 0x359c, 0x4752, 0x31dc, 0x0, 0x0);
        gbc.writeMem(0x173e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x60e2);
        EXPECT(gbc.pc(), 0x1740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 012F
        gbc.setState(0x3977, 0x2c5b, 0x87f0, 0x8228, 0x840c, 0xcdb5, 0x1, 0x0);
        gbc.writeMem(0x3977, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2c5b);
        EXPECT(gbc.pc(), 0x3979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0130
        gbc.setState(0x91f5, 0x2b04, 0x8590, 0x9221, 0xaa21, 0xf4ad, 0x1, 0x1);
        gbc.writeMem(0x91f5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2b04);
        EXPECT(gbc.pc(), 0x91f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f5), 0xcb);
        EXPECT(gbc.readMem(0x91f6), 0x87);
        // CB 87 0131
        gbc.setState(0xbb7, 0xe44e, 0x7230, 0xc0af, 0xebae, 0xb306, 0x0, 0x0);
        gbc.writeMem(0xbb7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe44e);
        EXPECT(gbc.pc(), 0xbb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0132
        gbc.setState(0xe01a, 0xb852, 0xb1e0, 0x19c4, 0xe983, 0xdbd1, 0x1, 0x0);
        gbc.writeMem(0xe01a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb852);
        EXPECT(gbc.pc(), 0xe01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01a), 0xcb);
        EXPECT(gbc.readMem(0xe01b), 0x87);
        // CB 87 0133
        gbc.setState(0x61a2, 0xb423, 0x9a90, 0x2445, 0x33d6, 0x472c, 0x0, 0x0);
        gbc.writeMem(0x61a2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb423);
        EXPECT(gbc.pc(), 0x61a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0134
        gbc.setState(0x4702, 0x62c8, 0x2730, 0xef81, 0xe255, 0xc6f2, 0x0, 0x0);
        gbc.writeMem(0x4702, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x62c8);
        EXPECT(gbc.pc(), 0x4704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0135
        gbc.setState(0x565b, 0xad26, 0xb270, 0x33d7, 0x5ddc, 0x98f5, 0x1, 0x1);
        gbc.writeMem(0x565b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xad26);
        EXPECT(gbc.pc(), 0x565d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0136
        gbc.setState(0xca7e, 0xce16, 0xc700, 0x3259, 0x33c9, 0x7084, 0x0, 0x1);
        gbc.writeMem(0xca7e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xce16);
        EXPECT(gbc.pc(), 0xca80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca7e), 0xcb);
        EXPECT(gbc.readMem(0xca7f), 0x87);
        // CB 87 0137
        gbc.setState(0x2fe0, 0x8b94, 0x530, 0x82a0, 0x4660, 0x1cfe, 0x1, 0x0);
        gbc.writeMem(0x2fe0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8b94);
        EXPECT(gbc.pc(), 0x2fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0138
        gbc.setState(0x4c5c, 0x84bc, 0x3c90, 0xf919, 0x96e3, 0xd8cb, 0x0, 0x0);
        gbc.writeMem(0x4c5c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x84bc);
        EXPECT(gbc.pc(), 0x4c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0139
        gbc.setState(0x7ef8, 0xd2cb, 0x5ea0, 0x70d6, 0xd7f7, 0xbb90, 0x0, 0x0);
        gbc.writeMem(0x7ef8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd2cb);
        EXPECT(gbc.pc(), 0x7efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 013A
        gbc.setState(0x9ec3, 0xaeee, 0x2a90, 0x9334, 0xce3a, 0x6983, 0x0, 0x1);
        gbc.writeMem(0x9ec3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xaeee);
        EXPECT(gbc.pc(), 0x9ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec3), 0xcb);
        EXPECT(gbc.readMem(0x9ec4), 0x87);
        // CB 87 013B
        gbc.setState(0xbac8, 0x89f1, 0x6f20, 0xc862, 0xc620, 0x5e8a, 0x0, 0x1);
        gbc.writeMem(0xbac8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x89f1);
        EXPECT(gbc.pc(), 0xbaca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac8), 0xcb);
        EXPECT(gbc.readMem(0xbac9), 0x87);
        // CB 87 013C
        gbc.setState(0xe4e3, 0xb68f, 0x2910, 0x5373, 0xa270, 0x27e7, 0x0, 0x0);
        gbc.writeMem(0xe4e3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb68f);
        EXPECT(gbc.pc(), 0xe4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e3), 0xcb);
        EXPECT(gbc.readMem(0xe4e4), 0x87);
        // CB 87 013D
        gbc.setState(0xd0af, 0x8c3e, 0x58b0, 0xba6a, 0x8b5, 0xec9b, 0x0, 0x1);
        gbc.writeMem(0xd0af, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8c3e);
        EXPECT(gbc.pc(), 0xd0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0af), 0xcb);
        EXPECT(gbc.readMem(0xd0b0), 0x87);
        // CB 87 013E
        gbc.setState(0x3a, 0x37cb, 0x280, 0x23e2, 0xf1a8, 0x1c4, 0x1, 0x0);
        gbc.writeMem(0x3a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x37cb);
        EXPECT(gbc.pc(), 0x3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0140
        gbc.setState(0xbc95, 0x55f1, 0x2020, 0x4e47, 0x253f, 0x93c6, 0x1, 0x1);
        gbc.writeMem(0xbc95, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x55f1);
        EXPECT(gbc.pc(), 0xbc97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc95), 0xcb);
        EXPECT(gbc.readMem(0xbc96), 0x87);
        // CB 87 0141
        gbc.setState(0x1379, 0x9ecc, 0xf3d0, 0xb9cb, 0x872c, 0x5295, 0x0, 0x0);
        gbc.writeMem(0x1379, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9ecc);
        EXPECT(gbc.pc(), 0x137b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0142
        gbc.setState(0x13ea, 0x9955, 0x910, 0x6d36, 0xf1a1, 0xd003, 0x0, 0x1);
        gbc.writeMem(0x13ea, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9955);
        EXPECT(gbc.pc(), 0x13ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0143
        gbc.setState(0x2144, 0x5a42, 0xf0d0, 0xd9a6, 0xc29f, 0x7cd4, 0x0, 0x0);
        gbc.writeMem(0x2144, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5a42);
        EXPECT(gbc.pc(), 0x2146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0144
        gbc.setState(0xb1a6, 0xed90, 0x5bd0, 0x5ddf, 0x8c0f, 0x680a, 0x1, 0x0);
        gbc.writeMem(0xb1a6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xed90);
        EXPECT(gbc.pc(), 0xb1a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a6), 0xcb);
        EXPECT(gbc.readMem(0xb1a7), 0x87);
        // CB 87 0145
        gbc.setState(0x481a, 0x2a42, 0xecc0, 0x7921, 0x75ef, 0x438, 0x1, 0x0);
        gbc.writeMem(0x481a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2a42);
        EXPECT(gbc.pc(), 0x481c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0146
        gbc.setState(0xcde0, 0xa65a, 0xfcb0, 0x9c66, 0x7811, 0xa19, 0x0, 0x0);
        gbc.writeMem(0xcde0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa65a);
        EXPECT(gbc.pc(), 0xcde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde0), 0xcb);
        EXPECT(gbc.readMem(0xcde1), 0x87);
        // CB 87 0147
        gbc.setState(0x2b01, 0xd3ea, 0xfe60, 0xcb97, 0x7f2d, 0x78ea, 0x1, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd3ea);
        EXPECT(gbc.pc(), 0x2b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0148
        gbc.setState(0x7d64, 0x5189, 0x34b0, 0xe7ce, 0x9139, 0xcdb0, 0x1, 0x0);
        gbc.writeMem(0x7d64, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5189);
        EXPECT(gbc.pc(), 0x7d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0149
        gbc.setState(0x30a8, 0x11c4, 0x2980, 0x4657, 0x7224, 0x326a, 0x0, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x11c4);
        EXPECT(gbc.pc(), 0x30aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 014A
        gbc.setState(0xac43, 0x3ded, 0xbf50, 0x2281, 0x7678, 0xefdc, 0x0, 0x1);
        gbc.writeMem(0xac43, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3ded);
        EXPECT(gbc.pc(), 0xac45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac43), 0xcb);
        EXPECT(gbc.readMem(0xac44), 0x87);
        // CB 87 014B
        gbc.setState(0xdab9, 0xb417, 0x3160, 0xc57f, 0x1c0, 0xd8ee, 0x1, 0x0);
        gbc.writeMem(0xdab9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb417);
        EXPECT(gbc.pc(), 0xdabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab9), 0xcb);
        EXPECT(gbc.readMem(0xdaba), 0x87);
        // CB 87 014C
        gbc.setState(0xefb6, 0x244b, 0x35a0, 0xa662, 0x1b11, 0x683a, 0x1, 0x1);
        gbc.writeMem(0xefb6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x244b);
        EXPECT(gbc.pc(), 0xefb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb6), 0xcb);
        EXPECT(gbc.readMem(0xefb7), 0x87);
        // CB 87 014E
        gbc.setState(0xac53, 0x592e, 0xe870, 0xbcfc, 0x535a, 0xaecf, 0x1, 0x1);
        gbc.writeMem(0xac53, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x592e);
        EXPECT(gbc.pc(), 0xac55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac53), 0xcb);
        EXPECT(gbc.readMem(0xac54), 0x87);
        // CB 87 014F
        gbc.setState(0x9288, 0xafcb, 0xdde0, 0xb3d9, 0x7d49, 0xbf51, 0x1, 0x0);
        gbc.writeMem(0x9288, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xafcb);
        EXPECT(gbc.pc(), 0x928a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9288), 0xcb);
        EXPECT(gbc.readMem(0x9289), 0x87);
        // CB 87 0150
        gbc.setState(0x4048, 0x7c41, 0x3410, 0xfbed, 0xeb7f, 0x9fde, 0x1, 0x0);
        gbc.writeMem(0x4048, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7c41);
        EXPECT(gbc.pc(), 0x404a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0151
        gbc.setState(0x97e0, 0x52c, 0x4e00, 0x85ce, 0xf41, 0x87b, 0x0, 0x1);
        gbc.writeMem(0x97e0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x52c);
        EXPECT(gbc.pc(), 0x97e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e0), 0xcb);
        EXPECT(gbc.readMem(0x97e1), 0x87);
        // CB 87 0152
        gbc.setState(0xa48f, 0x8031, 0xa0e0, 0x20cb, 0xeeee, 0x319e, 0x1, 0x1);
        gbc.writeMem(0xa48f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8031);
        EXPECT(gbc.pc(), 0xa491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa48f), 0xcb);
        EXPECT(gbc.readMem(0xa490), 0x87);
        // CB 87 0153
        gbc.setState(0x7962, 0x5d60, 0xc5a0, 0xc649, 0xbfc2, 0xd05e, 0x1, 0x0);
        gbc.writeMem(0x7962, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5d60);
        EXPECT(gbc.pc(), 0x7964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0154
        gbc.setState(0x80f, 0x4d8, 0x9150, 0x50d6, 0x4ce4, 0x3af5, 0x1, 0x1);
        gbc.writeMem(0x80f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4d8);
        EXPECT(gbc.pc(), 0x811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0155
        gbc.setState(0x7e18, 0xd86f, 0x9860, 0x4dfd, 0x2bb9, 0x7607, 0x1, 0x1);
        gbc.writeMem(0x7e18, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd86f);
        EXPECT(gbc.pc(), 0x7e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0156
        gbc.setState(0xc7e1, 0x3ea6, 0xfe00, 0x3c91, 0x6add, 0x43be, 0x0, 0x0);
        gbc.writeMem(0xc7e1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3ea6);
        EXPECT(gbc.pc(), 0xc7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e1), 0xcb);
        EXPECT(gbc.readMem(0xc7e2), 0x87);
        // CB 87 0157
        gbc.setState(0x273a, 0x9587, 0xce80, 0x6092, 0x4227, 0xbe18, 0x1, 0x0);
        gbc.writeMem(0x273a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9587);
        EXPECT(gbc.pc(), 0x273c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0158
        gbc.setState(0x8b6c, 0x2206, 0x9ff0, 0x9af0, 0x1b7d, 0x6367, 0x0, 0x1);
        gbc.writeMem(0x8b6c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2206);
        EXPECT(gbc.pc(), 0x8b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6c), 0xcb);
        EXPECT(gbc.readMem(0x8b6d), 0x87);
        // CB 87 0159
        gbc.setState(0x6783, 0xad9b, 0xb040, 0xfe9e, 0xf1e6, 0xdaad, 0x0, 0x0);
        gbc.writeMem(0x6783, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xad9b);
        EXPECT(gbc.pc(), 0x6785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 015A
        gbc.setState(0x2d04, 0x2c7a, 0x43b0, 0x12de, 0x3f38, 0xcbf8, 0x0, 0x0);
        gbc.writeMem(0x2d04, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2c7a);
        EXPECT(gbc.pc(), 0x2d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 015B
        gbc.setState(0xd458, 0xd51b, 0x5b0, 0xddf6, 0x3a56, 0x81d4, 0x0, 0x0);
        gbc.writeMem(0xd458, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd51b);
        EXPECT(gbc.pc(), 0xd45a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd458), 0xcb);
        EXPECT(gbc.readMem(0xd459), 0x87);
        // CB 87 015C
        gbc.setState(0x7e41, 0x50cf, 0x77e0, 0x76da, 0xbe8c, 0x295d, 0x0, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x50cf);
        EXPECT(gbc.pc(), 0x7e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 015D
        gbc.setState(0x9b1, 0xbcd8, 0x3310, 0x12e7, 0xe197, 0x8e8c, 0x1, 0x1);
        gbc.writeMem(0x9b1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbcd8);
        EXPECT(gbc.pc(), 0x9b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 015E
        gbc.setState(0x1636, 0x808d, 0x37a0, 0x3e67, 0x338c, 0x796b, 0x0, 0x0);
        gbc.writeMem(0x1636, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x808d);
        EXPECT(gbc.pc(), 0x1638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 015F
        gbc.setState(0x3fb, 0xafc9, 0xdb50, 0xdf27, 0xb7ef, 0xa51e, 0x0, 0x0);
        gbc.writeMem(0x3fb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xafc9);
        EXPECT(gbc.pc(), 0x3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0161
        gbc.setState(0xaafd, 0xe321, 0x4bf0, 0x3349, 0xe3dc, 0xab67, 0x1, 0x1);
        gbc.writeMem(0xaafd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe321);
        EXPECT(gbc.pc(), 0xaaff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafd), 0xcb);
        EXPECT(gbc.readMem(0xaafe), 0x87);
        // CB 87 0162
        gbc.setState(0x8fdc, 0x5da6, 0x40e0, 0x9be0, 0x822, 0x4286, 0x1, 0x0);
        gbc.writeMem(0x8fdc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5da6);
        EXPECT(gbc.pc(), 0x8fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fdc), 0xcb);
        EXPECT(gbc.readMem(0x8fdd), 0x87);
        // CB 87 0163
        gbc.setState(0xdb87, 0x85a5, 0x1d00, 0x1935, 0x79b4, 0xa348, 0x1, 0x1);
        gbc.writeMem(0xdb87, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x85a5);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb87), 0xcb);
        EXPECT(gbc.readMem(0xdb88), 0x87);
        // CB 87 0164
        gbc.setState(0x4e8a, 0xb914, 0xe8e0, 0x15ab, 0x8509, 0xf0e4, 0x0, 0x0);
        gbc.writeMem(0x4e8a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb914);
        EXPECT(gbc.pc(), 0x4e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0165
        gbc.setState(0x1c70, 0x6c28, 0x8e40, 0xb651, 0x7ea, 0x9eb4, 0x1, 0x1);
        gbc.writeMem(0x1c70, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6c28);
        EXPECT(gbc.pc(), 0x1c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0166
        gbc.setState(0x73cf, 0x8634, 0xa320, 0x616b, 0x5112, 0xd135, 0x0, 0x1);
        gbc.writeMem(0x73cf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8634);
        EXPECT(gbc.pc(), 0x73d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0167
        gbc.setState(0xcd9e, 0xd273, 0x5ba0, 0xe4da, 0xec79, 0x3989, 0x1, 0x1);
        gbc.writeMem(0xcd9e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd273);
        EXPECT(gbc.pc(), 0xcda0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9e), 0xcb);
        EXPECT(gbc.readMem(0xcd9f), 0x87);
        // CB 87 0168
        gbc.setState(0xd4d8, 0x667, 0xfc40, 0x87a6, 0x9c9c, 0xb6ae, 0x1, 0x1);
        gbc.writeMem(0xd4d8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x667);
        EXPECT(gbc.pc(), 0xd4da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d8), 0xcb);
        EXPECT(gbc.readMem(0xd4d9), 0x87);
        // CB 87 0169
        gbc.setState(0xa434, 0xb2f7, 0xdff0, 0x26b0, 0x49ee, 0x730f, 0x1, 0x0);
        gbc.writeMem(0xa434, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb2f7);
        EXPECT(gbc.pc(), 0xa436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa434), 0xcb);
        EXPECT(gbc.readMem(0xa435), 0x87);
        // CB 87 016A
        gbc.setState(0xaabf, 0x826e, 0xab70, 0x4b5b, 0x30dd, 0x2785, 0x0, 0x1);
        gbc.writeMem(0xaabf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x826e);
        EXPECT(gbc.pc(), 0xaac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaabf), 0xcb);
        EXPECT(gbc.readMem(0xaac0), 0x87);
        // CB 87 016B
        gbc.setState(0x3624, 0x93eb, 0xc440, 0xbf04, 0xd9fa, 0x4fca, 0x1, 0x0);
        gbc.writeMem(0x3624, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x93eb);
        EXPECT(gbc.pc(), 0x3626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 016C
        gbc.setState(0x41bd, 0xae51, 0x6970, 0xd410, 0x370c, 0x434f, 0x0, 0x1);
        gbc.writeMem(0x41bd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xae51);
        EXPECT(gbc.pc(), 0x41bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 016D
        gbc.setState(0x95e0, 0x1ba1, 0xe9b0, 0xcfc4, 0xd09c, 0xec5e, 0x1, 0x0);
        gbc.writeMem(0x95e0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1ba1);
        EXPECT(gbc.pc(), 0x95e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e0), 0xcb);
        EXPECT(gbc.readMem(0x95e1), 0x87);
        // CB 87 016E
        gbc.setState(0x54d6, 0xdb70, 0x8cf0, 0xf491, 0xf4f6, 0xdd34, 0x1, 0x0);
        gbc.writeMem(0x54d6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdb70);
        EXPECT(gbc.pc(), 0x54d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 016F
        gbc.setState(0x33c8, 0xf37d, 0x7920, 0xafa7, 0x2c2e, 0x2526, 0x0, 0x0);
        gbc.writeMem(0x33c8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf37d);
        EXPECT(gbc.pc(), 0x33ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0170
        gbc.setState(0x5066, 0x4b00, 0xde30, 0xb1ad, 0xa813, 0x7408, 0x1, 0x0);
        gbc.writeMem(0x5066, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4b00);
        EXPECT(gbc.pc(), 0x5068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0171
        gbc.setState(0xe87b, 0x699, 0xec20, 0x5579, 0x8262, 0x7f8d, 0x1, 0x1);
        gbc.writeMem(0xe87b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x699);
        EXPECT(gbc.pc(), 0xe87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe87b), 0xcb);
        EXPECT(gbc.readMem(0xe87c), 0x87);
        // CB 87 0172
        gbc.setState(0x7116, 0xadb2, 0xfb0, 0xad6e, 0x32fa, 0x4165, 0x1, 0x0);
        gbc.writeMem(0x7116, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xadb2);
        EXPECT(gbc.pc(), 0x7118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0173
        gbc.setState(0x4c2c, 0x1c65, 0xdff0, 0x82e4, 0x72bb, 0x2c37, 0x0, 0x0);
        gbc.writeMem(0x4c2c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1c65);
        EXPECT(gbc.pc(), 0x4c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0174
        gbc.setState(0xefa7, 0xe6d1, 0x9b80, 0x2606, 0x51b1, 0xf0d8, 0x0, 0x0);
        gbc.writeMem(0xefa7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe6d1);
        EXPECT(gbc.pc(), 0xefa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa7), 0xcb);
        EXPECT(gbc.readMem(0xefa8), 0x87);
        // CB 87 0175
        gbc.setState(0x7b02, 0xbcfe, 0xe1b0, 0x9228, 0x70ca, 0x9709, 0x0, 0x0);
        gbc.writeMem(0x7b02, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbcfe);
        EXPECT(gbc.pc(), 0x7b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0176
        gbc.setState(0xa5d6, 0x9f9e, 0x97c0, 0xae6b, 0xedc8, 0x6512, 0x0, 0x1);
        gbc.writeMem(0xa5d6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9f9e);
        EXPECT(gbc.pc(), 0xa5d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d6), 0xcb);
        EXPECT(gbc.readMem(0xa5d7), 0x87);
        // CB 87 0177
        gbc.setState(0x70c9, 0x5ad, 0x1b90, 0x1ec1, 0xbcd8, 0x3ec7, 0x1, 0x0);
        gbc.writeMem(0x70c9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5ad);
        EXPECT(gbc.pc(), 0x70cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0178
        gbc.setState(0xa896, 0x8bd6, 0x8600, 0x36f3, 0x234f, 0xc457, 0x1, 0x0);
        gbc.writeMem(0xa896, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8bd6);
        EXPECT(gbc.pc(), 0xa898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa896), 0xcb);
        EXPECT(gbc.readMem(0xa897), 0x87);
        // CB 87 0179
        gbc.setState(0xdc95, 0xd1bb, 0xd440, 0x3134, 0xe59e, 0xd175, 0x0, 0x1);
        gbc.writeMem(0xdc95, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd1bb);
        EXPECT(gbc.pc(), 0xdc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc95), 0xcb);
        EXPECT(gbc.readMem(0xdc96), 0x87);
        // CB 87 017A
        gbc.setState(0x47a7, 0xaa88, 0xeb90, 0xf0e8, 0x306d, 0x463b, 0x1, 0x0);
        gbc.writeMem(0x47a7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xaa88);
        EXPECT(gbc.pc(), 0x47a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 017B
        gbc.setState(0x133c, 0x4cd7, 0x440, 0x6b66, 0xd870, 0x3797, 0x0, 0x0);
        gbc.writeMem(0x133c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4cd7);
        EXPECT(gbc.pc(), 0x133e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 017C
        gbc.setState(0x4400, 0x274d, 0x9800, 0xc7ef, 0xc6b6, 0xeb8d, 0x1, 0x1);
        gbc.writeMem(0x4400, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x274d);
        EXPECT(gbc.pc(), 0x4402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 017D
        gbc.setState(0x19a8, 0x4217, 0x3600, 0x7ea3, 0xda, 0xe870, 0x0, 0x1);
        gbc.writeMem(0x19a8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4217);
        EXPECT(gbc.pc(), 0x19aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 017E
        gbc.setState(0xb6b5, 0x82b7, 0x52b0, 0x8b70, 0x26e4, 0x5424, 0x0, 0x0);
        gbc.writeMem(0xb6b5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x82b7);
        EXPECT(gbc.pc(), 0xb6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b5), 0xcb);
        EXPECT(gbc.readMem(0xb6b6), 0x87);
        // CB 87 017F
        gbc.setState(0x6087, 0xf516, 0x7f70, 0x7e, 0xf259, 0x4e7d, 0x1, 0x1);
        gbc.writeMem(0x6087, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf516);
        EXPECT(gbc.pc(), 0x6089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0180
        gbc.setState(0xa932, 0x64ea, 0x5820, 0x8a1a, 0xb03, 0x81d2, 0x0, 0x0);
        gbc.writeMem(0xa932, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x64ea);
        EXPECT(gbc.pc(), 0xa934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa932), 0xcb);
        EXPECT(gbc.readMem(0xa933), 0x87);
        // CB 87 0181
        gbc.setState(0x4c02, 0xb6c8, 0x6500, 0xb01c, 0xa60, 0x7ba6, 0x1, 0x0);
        gbc.writeMem(0x4c02, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb6c8);
        EXPECT(gbc.pc(), 0x4c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0182
        gbc.setState(0x4d37, 0xd257, 0x3400, 0xd1d0, 0xd9d2, 0x2700, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd257);
        EXPECT(gbc.pc(), 0x4d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0184
        gbc.setState(0x5b3d, 0xb4b1, 0x55b0, 0xe624, 0xfe24, 0x1464, 0x0, 0x1);
        gbc.writeMem(0x5b3d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb4b1);
        EXPECT(gbc.pc(), 0x5b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0186
        gbc.setState(0x239e, 0xe18c, 0xc0e0, 0x9dca, 0x2303, 0xd451, 0x0, 0x1);
        gbc.writeMem(0x239e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe18c);
        EXPECT(gbc.pc(), 0x23a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0187
        gbc.setState(0xdae7, 0xb581, 0x5890, 0x6844, 0xd12f, 0x3916, 0x1, 0x0);
        gbc.writeMem(0xdae7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb581);
        EXPECT(gbc.pc(), 0xdae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae7), 0xcb);
        EXPECT(gbc.readMem(0xdae8), 0x87);
        // CB 87 0188
        gbc.setState(0x4551, 0x2bf2, 0xd9c0, 0x4c9e, 0xdc5c, 0x23f6, 0x1, 0x0);
        gbc.writeMem(0x4551, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2bf2);
        EXPECT(gbc.pc(), 0x4553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0189
        gbc.setState(0x208d, 0x675e, 0x6c00, 0x531e, 0x663c, 0x16f1, 0x1, 0x0);
        gbc.writeMem(0x208d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x675e);
        EXPECT(gbc.pc(), 0x208f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 018A
        gbc.setState(0xeec0, 0xb6ee, 0xbd10, 0x9200, 0x1c00, 0x9cfd, 0x0, 0x1);
        gbc.writeMem(0xeec0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb6ee);
        EXPECT(gbc.pc(), 0xeec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec0), 0xcb);
        EXPECT(gbc.readMem(0xeec1), 0x87);
        // CB 87 018B
        gbc.setState(0x5360, 0xbbe, 0x7cb0, 0x77c9, 0x55b5, 0x7ee, 0x1, 0x0);
        gbc.writeMem(0x5360, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbbe);
        EXPECT(gbc.pc(), 0x5362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 018C
        gbc.setState(0x471e, 0x1732, 0xa890, 0x921f, 0x2efd, 0xe64e, 0x1, 0x0);
        gbc.writeMem(0x471e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1732);
        EXPECT(gbc.pc(), 0x4720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 018D
        gbc.setState(0x7d54, 0x538c, 0x9d00, 0xc626, 0xc45, 0x5e98, 0x0, 0x1);
        gbc.writeMem(0x7d54, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x538c);
        EXPECT(gbc.pc(), 0x7d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 018F
        gbc.setState(0x8f02, 0xd5c9, 0xf540, 0xb92a, 0xd2c0, 0xa079, 0x0, 0x0);
        gbc.writeMem(0x8f02, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd5c9);
        EXPECT(gbc.pc(), 0x8f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f02), 0xcb);
        EXPECT(gbc.readMem(0x8f03), 0x87);
        // CB 87 0190
        gbc.setState(0x2e7b, 0x2b87, 0xd5d0, 0x869a, 0xb894, 0xa89c, 0x1, 0x1);
        gbc.writeMem(0x2e7b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2b87);
        EXPECT(gbc.pc(), 0x2e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0191
        gbc.setState(0xdab8, 0x4a9, 0xf060, 0xdfcf, 0xba17, 0x3c58, 0x1, 0x0);
        gbc.writeMem(0xdab8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4a9);
        EXPECT(gbc.pc(), 0xdaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab8), 0xcb);
        EXPECT(gbc.readMem(0xdab9), 0x87);
        // CB 87 0192
        gbc.setState(0xaabe, 0xda96, 0xbc60, 0x9f1a, 0x9ee1, 0x84d, 0x1, 0x1);
        gbc.writeMem(0xaabe, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xda96);
        EXPECT(gbc.pc(), 0xaac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaabe), 0xcb);
        EXPECT(gbc.readMem(0xaabf), 0x87);
        // CB 87 0193
        gbc.setState(0xcd8d, 0xec3c, 0xd690, 0x2c22, 0xcd1b, 0xf9ae, 0x1, 0x0);
        gbc.writeMem(0xcd8d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xec3c);
        EXPECT(gbc.pc(), 0xcd8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8d), 0xcb);
        EXPECT(gbc.readMem(0xcd8e), 0x87);
        // CB 87 0194
        gbc.setState(0x5ab4, 0x797f, 0xb340, 0x76e2, 0xeed4, 0x43d9, 0x1, 0x0);
        gbc.writeMem(0x5ab4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x797f);
        EXPECT(gbc.pc(), 0x5ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0195
        gbc.setState(0xb97c, 0x963d, 0xc70, 0xa873, 0xa527, 0xd719, 0x1, 0x1);
        gbc.writeMem(0xb97c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x963d);
        EXPECT(gbc.pc(), 0xb97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97c), 0xcb);
        EXPECT(gbc.readMem(0xb97d), 0x87);
        // CB 87 0196
        gbc.setState(0x375d, 0x7c5b, 0x3350, 0xc617, 0x3ab7, 0x3d2c, 0x0, 0x0);
        gbc.writeMem(0x375d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7c5b);
        EXPECT(gbc.pc(), 0x375f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0197
        gbc.setState(0x4143, 0xfacf, 0x3670, 0x630a, 0xaeb6, 0x7a88, 0x1, 0x1);
        gbc.writeMem(0x4143, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfacf);
        EXPECT(gbc.pc(), 0x4145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0198
        gbc.setState(0x3aa7, 0x2b0e, 0x3690, 0x81db, 0x96ae, 0x70fd, 0x1, 0x0);
        gbc.writeMem(0x3aa7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2b0e);
        EXPECT(gbc.pc(), 0x3aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0199
        gbc.setState(0xe8b5, 0x44b0, 0x2700, 0x6ecb, 0xb968, 0x4bb, 0x1, 0x0);
        gbc.writeMem(0xe8b5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x44b0);
        EXPECT(gbc.pc(), 0xe8b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b5), 0xcb);
        EXPECT(gbc.readMem(0xe8b6), 0x87);
        // CB 87 019A
        gbc.setState(0x3104, 0x10f0, 0xc170, 0x72ca, 0x2a5c, 0x529e, 0x0, 0x1);
        gbc.writeMem(0x3104, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0x3106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 019B
        gbc.setState(0x7b9c, 0xe7aa, 0x72e0, 0x79b2, 0x1ec, 0x1858, 0x0, 0x1);
        gbc.writeMem(0x7b9c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe7aa);
        EXPECT(gbc.pc(), 0x7b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 019C
        gbc.setState(0x6bcf, 0x2d7, 0xa900, 0xa2f8, 0xca9f, 0x38c2, 0x0, 0x0);
        gbc.writeMem(0x6bcf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2d7);
        EXPECT(gbc.pc(), 0x6bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 019E
        gbc.setState(0x63b8, 0xd72d, 0xf010, 0x8e82, 0x904e, 0xa3dd, 0x0, 0x0);
        gbc.writeMem(0x63b8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd72d);
        EXPECT(gbc.pc(), 0x63ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 019F
        gbc.setState(0x69a8, 0x5bc7, 0x3dd0, 0xa950, 0xc35b, 0x2f5, 0x1, 0x0);
        gbc.writeMem(0x69a8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5bc7);
        EXPECT(gbc.pc(), 0x69aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01A0
        gbc.setState(0x591b, 0x7d59, 0x3120, 0xe313, 0x3308, 0x42bc, 0x0, 0x1);
        gbc.writeMem(0x591b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7d59);
        EXPECT(gbc.pc(), 0x591d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01A1
        gbc.setState(0x40d5, 0x52c6, 0x80a0, 0xdbc1, 0xba25, 0x154c, 0x0, 0x1);
        gbc.writeMem(0x40d5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x52c6);
        EXPECT(gbc.pc(), 0x40d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01A2
        gbc.setState(0x3969, 0xd892, 0xca60, 0x7369, 0xe992, 0xe8db, 0x0, 0x1);
        gbc.writeMem(0x3969, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd892);
        EXPECT(gbc.pc(), 0x396b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01A3
        gbc.setState(0x3c36, 0xcda9, 0x31d0, 0x3f11, 0xaa6a, 0x4ddb, 0x1, 0x1);
        gbc.writeMem(0x3c36, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcda9);
        EXPECT(gbc.pc(), 0x3c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01A4
        gbc.setState(0x5995, 0x22cb, 0x3060, 0x952e, 0xfdcd, 0x72ee, 0x1, 0x1);
        gbc.writeMem(0x5995, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x22cb);
        EXPECT(gbc.pc(), 0x5997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01A5
        gbc.setState(0xc13c, 0xc0ec, 0x3610, 0xe545, 0x6c64, 0xd005, 0x1, 0x1);
        gbc.writeMem(0xc13c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc0ec);
        EXPECT(gbc.pc(), 0xc13e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc13c), 0xcb);
        EXPECT(gbc.readMem(0xc13d), 0x87);
        // CB 87 01A6
        gbc.setState(0x4a55, 0x3d66, 0x5250, 0x3e11, 0xd018, 0x8029, 0x1, 0x0);
        gbc.writeMem(0x4a55, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3d66);
        EXPECT(gbc.pc(), 0x4a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01A7
        gbc.setState(0xdc97, 0xb573, 0x3e0, 0xcb41, 0x569, 0x55d0, 0x0, 0x1);
        gbc.writeMem(0xdc97, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb573);
        EXPECT(gbc.pc(), 0xdc99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc97), 0xcb);
        EXPECT(gbc.readMem(0xdc98), 0x87);
        // CB 87 01A8
        gbc.setState(0xe429, 0x1eaf, 0x3d60, 0x3aaa, 0x58c5, 0x56ba, 0x0, 0x1);
        gbc.writeMem(0xe429, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1eaf);
        EXPECT(gbc.pc(), 0xe42b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe429), 0xcb);
        EXPECT(gbc.readMem(0xe42a), 0x87);
        // CB 87 01A9
        gbc.setState(0xe655, 0x4e4c, 0x5ac0, 0xdb90, 0x8301, 0xcc5b, 0x0, 0x0);
        gbc.writeMem(0xe655, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4e4c);
        EXPECT(gbc.pc(), 0xe657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe655), 0xcb);
        EXPECT(gbc.readMem(0xe656), 0x87);
        // CB 87 01AA
        gbc.setState(0x8cd8, 0xe13b, 0xba90, 0x8da9, 0xe978, 0xa980, 0x1, 0x1);
        gbc.writeMem(0x8cd8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe13b);
        EXPECT(gbc.pc(), 0x8cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd8), 0xcb);
        EXPECT(gbc.readMem(0x8cd9), 0x87);
        // CB 87 01AC
        gbc.setState(0x22d1, 0x74f5, 0x2c30, 0x1ed4, 0x49ad, 0xad23, 0x1, 0x0);
        gbc.writeMem(0x22d1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x74f5);
        EXPECT(gbc.pc(), 0x22d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01AD
        gbc.setState(0xae95, 0x25ca, 0xf470, 0xd934, 0x49fb, 0x71eb, 0x0, 0x0);
        gbc.writeMem(0xae95, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x25ca);
        EXPECT(gbc.pc(), 0xae97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae95), 0xcb);
        EXPECT(gbc.readMem(0xae96), 0x87);
        // CB 87 01AE
        gbc.setState(0xc7c8, 0x8bc7, 0x9de0, 0x74b0, 0xeef3, 0xa6f6, 0x0, 0x0);
        gbc.writeMem(0xc7c8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8bc7);
        EXPECT(gbc.pc(), 0xc7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c8), 0xcb);
        EXPECT(gbc.readMem(0xc7c9), 0x87);
        // CB 87 01AF
        gbc.setState(0xd52b, 0x83aa, 0xc6e0, 0x99cb, 0x2d98, 0xcff9, 0x0, 0x0);
        gbc.writeMem(0xd52b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x83aa);
        EXPECT(gbc.pc(), 0xd52d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52b), 0xcb);
        EXPECT(gbc.readMem(0xd52c), 0x87);
        // CB 87 01B0
        gbc.setState(0x4559, 0xba77, 0x5bd0, 0xea0d, 0xc8e0, 0x4cd5, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xba77);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01B1
        gbc.setState(0x1e58, 0x5bcb, 0xdf90, 0x3c22, 0xcffd, 0xb5bd, 0x0, 0x1);
        gbc.writeMem(0x1e58, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5bcb);
        EXPECT(gbc.pc(), 0x1e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01B2
        gbc.setState(0xe0a5, 0xd30f, 0x6700, 0x106, 0xb186, 0xe67a, 0x0, 0x0);
        gbc.writeMem(0xe0a5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd30f);
        EXPECT(gbc.pc(), 0xe0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a5), 0xcb);
        EXPECT(gbc.readMem(0xe0a6), 0x87);
        // CB 87 01B3
        gbc.setState(0xebdf, 0xd13d, 0x2c50, 0xb1f3, 0x3358, 0x114f, 0x1, 0x1);
        gbc.writeMem(0xebdf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd13d);
        EXPECT(gbc.pc(), 0xebe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebdf), 0xcb);
        EXPECT(gbc.readMem(0xebe0), 0x87);
        // CB 87 01B4
        gbc.setState(0xe1bd, 0xc1b8, 0xd7b0, 0xd3f5, 0x5724, 0x2655, 0x1, 0x0);
        gbc.writeMem(0xe1bd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc1b8);
        EXPECT(gbc.pc(), 0xe1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1bd), 0xcb);
        EXPECT(gbc.readMem(0xe1be), 0x87);
        // CB 87 01B5
        gbc.setState(0x76dd, 0x255f, 0xa4d0, 0x3e93, 0x1c38, 0x2fae, 0x0, 0x1);
        gbc.writeMem(0x76dd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x255f);
        EXPECT(gbc.pc(), 0x76df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01B6
        gbc.setState(0xdc75, 0xc158, 0x99d0, 0xdd36, 0x711c, 0xf531, 0x1, 0x1);
        gbc.writeMem(0xdc75, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc158);
        EXPECT(gbc.pc(), 0xdc77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc75), 0xcb);
        EXPECT(gbc.readMem(0xdc76), 0x87);
        // CB 87 01B7
        gbc.setState(0x9d7, 0x3527, 0x8970, 0x945d, 0x7ce0, 0x41ee, 0x0, 0x0);
        gbc.writeMem(0x9d7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3527);
        EXPECT(gbc.pc(), 0x9d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01B8
        gbc.setState(0xeed5, 0x3768, 0x5870, 0x8023, 0xf705, 0xc792, 0x1, 0x0);
        gbc.writeMem(0xeed5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3768);
        EXPECT(gbc.pc(), 0xeed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed5), 0xcb);
        EXPECT(gbc.readMem(0xeed6), 0x87);
        // CB 87 01B9
        gbc.setState(0x4f1d, 0x1c6d, 0xc730, 0xfcc0, 0x3192, 0x845, 0x0, 0x0);
        gbc.writeMem(0x4f1d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1c6d);
        EXPECT(gbc.pc(), 0x4f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01BA
        gbc.setState(0xdd26, 0xe6e1, 0xf450, 0x13f9, 0xbec6, 0x8ded, 0x1, 0x0);
        gbc.writeMem(0xdd26, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe6e1);
        EXPECT(gbc.pc(), 0xdd28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd26), 0xcb);
        EXPECT(gbc.readMem(0xdd27), 0x87);
        // CB 87 01BB
        gbc.setState(0xa8f, 0x2215, 0xff10, 0x9b82, 0x429d, 0xea68, 0x1, 0x0);
        gbc.writeMem(0xa8f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2215);
        EXPECT(gbc.pc(), 0xa91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01BD
        gbc.setState(0x6f06, 0x26f, 0x5940, 0x1eb3, 0x790a, 0xf028, 0x0, 0x1);
        gbc.writeMem(0x6f06, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x26f);
        EXPECT(gbc.pc(), 0x6f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01BE
        gbc.setState(0xa61e, 0x7543, 0x8720, 0x5ff6, 0x19df, 0xcfe4, 0x0, 0x0);
        gbc.writeMem(0xa61e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7543);
        EXPECT(gbc.pc(), 0xa620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61e), 0xcb);
        EXPECT(gbc.readMem(0xa61f), 0x87);
        // CB 87 01BF
        gbc.setState(0x51ce, 0xd377, 0xf1d0, 0xb902, 0xbe96, 0xf3f4, 0x0, 0x0);
        gbc.writeMem(0x51ce, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd377);
        EXPECT(gbc.pc(), 0x51d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01C0
        gbc.setState(0xd7e9, 0xad81, 0xb420, 0xe1db, 0x3175, 0xe818, 0x0, 0x1);
        gbc.writeMem(0xd7e9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0xd7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e9), 0xcb);
        EXPECT(gbc.readMem(0xd7ea), 0x87);
        // CB 87 01C1
        gbc.setState(0x3b05, 0x44f4, 0x6c30, 0x4a93, 0xa9d1, 0x7b41, 0x1, 0x1);
        gbc.writeMem(0x3b05, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x44f4);
        EXPECT(gbc.pc(), 0x3b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01C2
        gbc.setState(0x9c71, 0xff02, 0xc320, 0xf05e, 0xe920, 0xcd24, 0x1, 0x1);
        gbc.writeMem(0x9c71, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xff02);
        EXPECT(gbc.pc(), 0x9c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c71), 0xcb);
        EXPECT(gbc.readMem(0x9c72), 0x87);
        // CB 87 01C4
        gbc.setState(0x744, 0x50d, 0xbc70, 0x749b, 0x21c5, 0x9c91, 0x1, 0x1);
        gbc.writeMem(0x744, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x50d);
        EXPECT(gbc.pc(), 0x746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01C5
        gbc.setState(0xc21, 0xe9e2, 0x28d0, 0xc566, 0x8f97, 0x4c01, 0x1, 0x0);
        gbc.writeMem(0xc21, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe9e2);
        EXPECT(gbc.pc(), 0xc23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01C6
        gbc.setState(0xe7bc, 0xfe95, 0xb000, 0x24e2, 0x3e73, 0xa316, 0x0, 0x0);
        gbc.writeMem(0xe7bc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfe95);
        EXPECT(gbc.pc(), 0xe7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7bc), 0xcb);
        EXPECT(gbc.readMem(0xe7bd), 0x87);
        // CB 87 01C7
        gbc.setState(0xcea2, 0xaaf5, 0x8770, 0xd3ef, 0xc5c6, 0x5b5b, 0x0, 0x0);
        gbc.writeMem(0xcea2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaaf5);
        EXPECT(gbc.pc(), 0xcea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea2), 0xcb);
        EXPECT(gbc.readMem(0xcea3), 0x87);
        // CB 87 01C8
        gbc.setState(0x12ac, 0x630c, 0x4d0, 0xf0a6, 0x85fb, 0x9f1c, 0x0, 0x0);
        gbc.writeMem(0x12ac, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x630c);
        EXPECT(gbc.pc(), 0x12ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01C9
        gbc.setState(0x3904, 0xc4ea, 0x50e0, 0x9b08, 0xd479, 0xaa85, 0x0, 0x1);
        gbc.writeMem(0x3904, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc4ea);
        EXPECT(gbc.pc(), 0x3906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01CA
        gbc.setState(0xcebe, 0x6cc4, 0x4640, 0x8747, 0x5457, 0x7243, 0x1, 0x1);
        gbc.writeMem(0xcebe, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6cc4);
        EXPECT(gbc.pc(), 0xcec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcebe), 0xcb);
        EXPECT(gbc.readMem(0xcebf), 0x87);
        // CB 87 01CB
        gbc.setState(0x71d2, 0x45fb, 0xad30, 0x6807, 0x9d97, 0x72e5, 0x1, 0x0);
        gbc.writeMem(0x71d2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x45fb);
        EXPECT(gbc.pc(), 0x71d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01CC
        gbc.setState(0x8ead, 0x1177, 0x54d0, 0x3945, 0x9e95, 0xbbe9, 0x1, 0x1);
        gbc.writeMem(0x8ead, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1177);
        EXPECT(gbc.pc(), 0x8eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ead), 0xcb);
        EXPECT(gbc.readMem(0x8eae), 0x87);
        // CB 87 01CD
        gbc.setState(0xe499, 0x84ac, 0x98b0, 0x8750, 0x6e37, 0xc066, 0x0, 0x1);
        gbc.writeMem(0xe499, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0xe49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe499), 0xcb);
        EXPECT(gbc.readMem(0xe49a), 0x87);
        // CB 87 01CE
        gbc.setState(0x5727, 0x22c9, 0xd7f0, 0x71ef, 0xcaeb, 0xd5b6, 0x1, 0x0);
        gbc.writeMem(0x5727, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x22c9);
        EXPECT(gbc.pc(), 0x5729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01CF
        gbc.setState(0x6fe5, 0x679b, 0xdf40, 0x62ff, 0xcb0b, 0x6b27, 0x0, 0x0);
        gbc.writeMem(0x6fe5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x679b);
        EXPECT(gbc.pc(), 0x6fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01D0
        gbc.setState(0x790a, 0x8c6d, 0xd5a0, 0xdebc, 0x5aa, 0xaf8b, 0x1, 0x1);
        gbc.writeMem(0x790a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8c6d);
        EXPECT(gbc.pc(), 0x790c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01D1
        gbc.setState(0x16c1, 0x9a34, 0x3940, 0xb4b7, 0xb217, 0xdb79, 0x1, 0x0);
        gbc.writeMem(0x16c1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9a34);
        EXPECT(gbc.pc(), 0x16c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01D2
        gbc.setState(0x5e11, 0x360a, 0x6680, 0xb0eb, 0x88a3, 0x4ec, 0x0, 0x1);
        gbc.writeMem(0x5e11, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x360a);
        EXPECT(gbc.pc(), 0x5e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01D3
        gbc.setState(0x684a, 0xf7fb, 0xc930, 0x3cbc, 0x82fa, 0x9ecc, 0x0, 0x1);
        gbc.writeMem(0x684a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf7fb);
        EXPECT(gbc.pc(), 0x684c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01D4
        gbc.setState(0xc829, 0xbe9, 0x9e40, 0x64ad, 0x2668, 0x2816, 0x0, 0x0);
        gbc.writeMem(0xc829, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbe9);
        EXPECT(gbc.pc(), 0xc82b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc829), 0xcb);
        EXPECT(gbc.readMem(0xc82a), 0x87);
        // CB 87 01D5
        gbc.setState(0x30d7, 0x746d, 0x6fd0, 0xa7ee, 0x3812, 0x3adc, 0x0, 0x0);
        gbc.writeMem(0x30d7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x746d);
        EXPECT(gbc.pc(), 0x30d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01D6
        gbc.setState(0xc64f, 0x3671, 0xaf0, 0x14e8, 0x8af2, 0x1dd7, 0x1, 0x1);
        gbc.writeMem(0xc64f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3671);
        EXPECT(gbc.pc(), 0xc651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64f), 0xcb);
        EXPECT(gbc.readMem(0xc650), 0x87);
        // CB 87 01D7
        gbc.setState(0x2829, 0x75df, 0xc7c0, 0x27f2, 0x927e, 0x5532, 0x1, 0x0);
        gbc.writeMem(0x2829, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x75df);
        EXPECT(gbc.pc(), 0x282b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01D9
        gbc.setState(0x6f62, 0xd2cf, 0xf8f0, 0x7038, 0xddea, 0xc97a, 0x0, 0x1);
        gbc.writeMem(0x6f62, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd2cf);
        EXPECT(gbc.pc(), 0x6f64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01DA
        gbc.setState(0x9201, 0x24d5, 0x7fa0, 0x3ff, 0xc7d8, 0xc98e, 0x1, 0x1);
        gbc.writeMem(0x9201, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x24d5);
        EXPECT(gbc.pc(), 0x9203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9201), 0xcb);
        EXPECT(gbc.readMem(0x9202), 0x87);
        // CB 87 01DC
        gbc.setState(0xb20, 0x628e, 0x2fc0, 0x4347, 0x29d2, 0xd04, 0x0, 0x0);
        gbc.writeMem(0xb20, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x628e);
        EXPECT(gbc.pc(), 0xb22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01DD
        gbc.setState(0x93a9, 0xb3db, 0x2af0, 0xd627, 0xce7, 0x55a0, 0x0, 0x0);
        gbc.writeMem(0x93a9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb3db);
        EXPECT(gbc.pc(), 0x93ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a9), 0xcb);
        EXPECT(gbc.readMem(0x93aa), 0x87);
        // CB 87 01DE
        gbc.setState(0xef78, 0xfb77, 0x62a0, 0xadc9, 0xb0dc, 0x6369, 0x0, 0x1);
        gbc.writeMem(0xef78, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xfb77);
        EXPECT(gbc.pc(), 0xef7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef78), 0xcb);
        EXPECT(gbc.readMem(0xef79), 0x87);
        // CB 87 01DF
        gbc.setState(0x54e7, 0x74c4, 0xc370, 0xadc2, 0x3c1, 0xd695, 0x0, 0x1);
        gbc.writeMem(0x54e7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x74c4);
        EXPECT(gbc.pc(), 0x54e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01E0
        gbc.setState(0x59ec, 0xe089, 0xdb30, 0x76d4, 0x1abe, 0xa294, 0x0, 0x0);
        gbc.writeMem(0x59ec, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe089);
        EXPECT(gbc.pc(), 0x59ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01E2
        gbc.setState(0x458b, 0x1184, 0xd510, 0x42f0, 0x5c3d, 0xbe5e, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1184);
        EXPECT(gbc.pc(), 0x458d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01E3
        gbc.setState(0xce9c, 0xfbc1, 0xb950, 0x5fce, 0x6bdf, 0x7137, 0x0, 0x0);
        gbc.writeMem(0xce9c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfbc1);
        EXPECT(gbc.pc(), 0xce9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9c), 0xcb);
        EXPECT(gbc.readMem(0xce9d), 0x87);
        // CB 87 01E4
        gbc.setState(0x855f, 0x7a2f, 0x5b0, 0x894b, 0x25e9, 0x8faf, 0x1, 0x1);
        gbc.writeMem(0x855f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7a2f);
        EXPECT(gbc.pc(), 0x8561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855f), 0xcb);
        EXPECT(gbc.readMem(0x8560), 0x87);
        // CB 87 01E5
        gbc.setState(0xe969, 0xaeb1, 0x90f0, 0x7cc6, 0x15b9, 0xee63, 0x1, 0x1);
        gbc.writeMem(0xe969, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xaeb1);
        EXPECT(gbc.pc(), 0xe96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe969), 0xcb);
        EXPECT(gbc.readMem(0xe96a), 0x87);
        // CB 87 01E6
        gbc.setState(0x5a44, 0xb298, 0xa510, 0xcc92, 0xba1, 0x6eb5, 0x0, 0x1);
        gbc.writeMem(0x5a44, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb298);
        EXPECT(gbc.pc(), 0x5a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01E7
        gbc.setState(0xa54, 0x2213, 0x5560, 0x5225, 0xc7b, 0x7aff, 0x1, 0x0);
        gbc.writeMem(0xa54, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2213);
        EXPECT(gbc.pc(), 0xa56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01E8
        gbc.setState(0xc7d3, 0xc553, 0x3a50, 0x2234, 0x5f5, 0xaa23, 0x0, 0x1);
        gbc.writeMem(0xc7d3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc553);
        EXPECT(gbc.pc(), 0xc7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d3), 0xcb);
        EXPECT(gbc.readMem(0xc7d4), 0x87);
        // CB 87 01E9
        gbc.setState(0xdd09, 0x7810, 0x6780, 0x55e0, 0x71c7, 0x6fb3, 0x1, 0x1);
        gbc.writeMem(0xdd09, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7810);
        EXPECT(gbc.pc(), 0xdd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd09), 0xcb);
        EXPECT(gbc.readMem(0xdd0a), 0x87);
        // CB 87 01EA
        gbc.setState(0xbb78, 0x5f4a, 0x6ed0, 0x211, 0x5d5e, 0x9144, 0x1, 0x1);
        gbc.writeMem(0xbb78, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5f4a);
        EXPECT(gbc.pc(), 0xbb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb78), 0xcb);
        EXPECT(gbc.readMem(0xbb79), 0x87);
        // CB 87 01EB
        gbc.setState(0x62c5, 0xa107, 0xfca0, 0xa4e5, 0x7c4f, 0x1fbf, 0x1, 0x0);
        gbc.writeMem(0x62c5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0x62c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01EC
        gbc.setState(0x7b2d, 0x4dc2, 0xeb20, 0x6409, 0x1595, 0xad0f, 0x1, 0x1);
        gbc.writeMem(0x7b2d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4dc2);
        EXPECT(gbc.pc(), 0x7b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01ED
        gbc.setState(0xd6c2, 0x1d0c, 0x4920, 0x29e5, 0xbccf, 0x9d0e, 0x0, 0x1);
        gbc.writeMem(0xd6c2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1d0c);
        EXPECT(gbc.pc(), 0xd6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c2), 0xcb);
        EXPECT(gbc.readMem(0xd6c3), 0x87);
        // CB 87 01EE
        gbc.setState(0xe0e, 0xb991, 0x39b0, 0xe8aa, 0x7ff1, 0xa4d4, 0x1, 0x1);
        gbc.writeMem(0xe0e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb991);
        EXPECT(gbc.pc(), 0xe10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01EF
        gbc.setState(0xeaa9, 0x621a, 0x8df0, 0x6638, 0xe8fe, 0x6cdd, 0x1, 0x1);
        gbc.writeMem(0xeaa9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x621a);
        EXPECT(gbc.pc(), 0xeaab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa9), 0xcb);
        EXPECT(gbc.readMem(0xeaaa), 0x87);
        // CB 87 01F0
        gbc.setState(0x962, 0x738, 0xa8f0, 0x9561, 0x734b, 0x3d4, 0x1, 0x1);
        gbc.writeMem(0x962, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x738);
        EXPECT(gbc.pc(), 0x964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01F1
        gbc.setState(0x82f5, 0xcc09, 0x67d0, 0x932b, 0xc464, 0x138, 0x1, 0x1);
        gbc.writeMem(0x82f5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcc09);
        EXPECT(gbc.pc(), 0x82f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f5), 0xcb);
        EXPECT(gbc.readMem(0x82f6), 0x87);
        // CB 87 01F2
        gbc.setState(0x9182, 0xa7b7, 0x8360, 0x2805, 0x3c45, 0xfb10, 0x0, 0x0);
        gbc.writeMem(0x9182, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa7b7);
        EXPECT(gbc.pc(), 0x9184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9182), 0xcb);
        EXPECT(gbc.readMem(0x9183), 0x87);
        // CB 87 01F3
        gbc.setState(0x5157, 0xf899, 0xa250, 0x3ad6, 0x424b, 0x8f4, 0x1, 0x0);
        gbc.writeMem(0x5157, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf899);
        EXPECT(gbc.pc(), 0x5159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01F4
        gbc.setState(0x53ad, 0x6341, 0x3400, 0x1594, 0x7b0a, 0x2db7, 0x1, 0x0);
        gbc.writeMem(0x53ad, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6341);
        EXPECT(gbc.pc(), 0x53af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 01F6
        gbc.setState(0xac27, 0x626d, 0xc00, 0xc3e0, 0x152e, 0x373d, 0x0, 0x1);
        gbc.writeMem(0xac27, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x626d);
        EXPECT(gbc.pc(), 0xac29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac27), 0xcb);
        EXPECT(gbc.readMem(0xac28), 0x87);
        // CB 87 01F7
        gbc.setState(0x66f2, 0x9e30, 0xb050, 0x852c, 0x533e, 0x119c, 0x1, 0x0);
        gbc.writeMem(0x66f2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9e30);
        EXPECT(gbc.pc(), 0x66f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01F8
        gbc.setState(0x9659, 0x34e4, 0x4090, 0xdef9, 0x3b37, 0xcc59, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x34e4);
        EXPECT(gbc.pc(), 0x965b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9659), 0xcb);
        EXPECT(gbc.readMem(0x965a), 0x87);
        // CB 87 01F9
        gbc.setState(0xa3a9, 0x5acc, 0x78f0, 0x4aa, 0x603e, 0xc771, 0x0, 0x1);
        gbc.writeMem(0xa3a9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5acc);
        EXPECT(gbc.pc(), 0xa3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a9), 0xcb);
        EXPECT(gbc.readMem(0xa3aa), 0x87);
        // CB 87 01FA
        gbc.setState(0xbcf5, 0xb9e1, 0x5c10, 0x295d, 0x8152, 0x3aea, 0x0, 0x1);
        gbc.writeMem(0xbcf5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb9e1);
        EXPECT(gbc.pc(), 0xbcf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf5), 0xcb);
        EXPECT(gbc.readMem(0xbcf6), 0x87);
        // CB 87 01FB
        gbc.setState(0xacdf, 0x48b6, 0xb50, 0x1aa0, 0xb810, 0xe1d4, 0x0, 0x1);
        gbc.writeMem(0xacdf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x48b6);
        EXPECT(gbc.pc(), 0xace1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacdf), 0xcb);
        EXPECT(gbc.readMem(0xace0), 0x87);
        // CB 87 01FC
        gbc.setState(0x8c77, 0xad47, 0x79d0, 0x7d4c, 0x937f, 0xf13c, 0x1, 0x0);
        gbc.writeMem(0x8c77, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xad47);
        EXPECT(gbc.pc(), 0x8c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c77), 0xcb);
        EXPECT(gbc.readMem(0x8c78), 0x87);
        // CB 87 01FD
        gbc.setState(0xbf1f, 0x4044, 0x7ba0, 0xad20, 0xbdf6, 0xf25e, 0x1, 0x1);
        gbc.writeMem(0xbf1f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4044);
        EXPECT(gbc.pc(), 0xbf21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1f), 0xcb);
        EXPECT(gbc.readMem(0xbf20), 0x87);
        // CB 87 01FE
        gbc.setState(0x5766, 0xb22f, 0x7b30, 0x4068, 0x5713, 0x4289, 0x1, 0x0);
        gbc.writeMem(0x5766, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb22f);
        EXPECT(gbc.pc(), 0x5768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 01FF
        gbc.setState(0xb500, 0xe065, 0xac90, 0xd565, 0x1d2f, 0xd7e2, 0x0, 0x1);
        gbc.writeMem(0xb500, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe065);
        EXPECT(gbc.pc(), 0xb502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb500), 0xcb);
        EXPECT(gbc.readMem(0xb501), 0x87);
        // CB 87 0200
        gbc.setState(0x7ee, 0xf81, 0xed00, 0xb02f, 0xb4a9, 0xbeda, 0x1, 0x0);
        gbc.writeMem(0x7ee, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf81);
        EXPECT(gbc.pc(), 0x7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0201
        gbc.setState(0x6d69, 0x6056, 0x4240, 0x23b9, 0xc2e5, 0xa1ac, 0x1, 0x0);
        gbc.writeMem(0x6d69, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6056);
        EXPECT(gbc.pc(), 0x6d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0202
        gbc.setState(0x2ca3, 0x7c34, 0xebf0, 0x81bb, 0x6af1, 0x4d12, 0x0, 0x1);
        gbc.writeMem(0x2ca3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7c34);
        EXPECT(gbc.pc(), 0x2ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0203
        gbc.setState(0x7952, 0x1f7e, 0xfb10, 0x31aa, 0x96a1, 0x8d6, 0x1, 0x0);
        gbc.writeMem(0x7952, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1f7e);
        EXPECT(gbc.pc(), 0x7954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0204
        gbc.setState(0xd443, 0xceb5, 0x81a0, 0x525b, 0x9c75, 0x5ddc, 0x1, 0x0);
        gbc.writeMem(0xd443, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xceb5);
        EXPECT(gbc.pc(), 0xd445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd443), 0xcb);
        EXPECT(gbc.readMem(0xd444), 0x87);
        // CB 87 0205
        gbc.setState(0xfab, 0x5f28, 0xb6e0, 0x27ca, 0x75b6, 0xfaac, 0x0, 0x0);
        gbc.writeMem(0xfab, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5f28);
        EXPECT(gbc.pc(), 0xfad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0206
        gbc.setState(0x84e7, 0x1e04, 0xdc30, 0xc813, 0x2cfa, 0x9ae3, 0x1, 0x1);
        gbc.writeMem(0x84e7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1e04);
        EXPECT(gbc.pc(), 0x84e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e7), 0xcb);
        EXPECT(gbc.readMem(0x84e8), 0x87);
        // CB 87 0207
        gbc.setState(0x564e, 0x37bf, 0x40f0, 0x76ed, 0xa91a, 0xdd5, 0x0, 0x0);
        gbc.writeMem(0x564e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x37bf);
        EXPECT(gbc.pc(), 0x5650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0208
        gbc.setState(0xb3d1, 0x8da4, 0xe570, 0xb3d4, 0x1b08, 0x3474, 0x0, 0x1);
        gbc.writeMem(0xb3d1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8da4);
        EXPECT(gbc.pc(), 0xb3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d1), 0xcb);
        EXPECT(gbc.readMem(0xb3d2), 0x87);
        // CB 87 020A
        gbc.setState(0xd88c, 0x8c7d, 0xfd40, 0x188b, 0xd8b4, 0x9add, 0x1, 0x1);
        gbc.writeMem(0xd88c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8c7d);
        EXPECT(gbc.pc(), 0xd88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88c), 0xcb);
        EXPECT(gbc.readMem(0xd88d), 0x87);
        // CB 87 020B
        gbc.setState(0xd809, 0x762d, 0x5640, 0x632f, 0x3acd, 0x98bc, 0x0, 0x0);
        gbc.writeMem(0xd809, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x762d);
        EXPECT(gbc.pc(), 0xd80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd809), 0xcb);
        EXPECT(gbc.readMem(0xd80a), 0x87);
        // CB 87 020C
        gbc.setState(0x42a9, 0xb668, 0x1410, 0x3194, 0x73a3, 0x437e, 0x0, 0x0);
        gbc.writeMem(0x42a9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb668);
        EXPECT(gbc.pc(), 0x42ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 020D
        gbc.setState(0xbcdb, 0x6d0c, 0xcda0, 0x5bb4, 0xb956, 0x4ac8, 0x0, 0x1);
        gbc.writeMem(0xbcdb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6d0c);
        EXPECT(gbc.pc(), 0xbcdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcdb), 0xcb);
        EXPECT(gbc.readMem(0xbcdc), 0x87);
        // CB 87 020E
        gbc.setState(0x557b, 0xfb31, 0xaad0, 0xe443, 0x816f, 0x9ce2, 0x0, 0x0);
        gbc.writeMem(0x557b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfb31);
        EXPECT(gbc.pc(), 0x557d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 020F
        gbc.setState(0x9ffd, 0xb64f, 0x9be0, 0x1a2, 0x420f, 0xc4c8, 0x0, 0x0);
        gbc.writeMem(0x9ffd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb64f);
        EXPECT(gbc.pc(), 0x9fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffd), 0xcb);
        EXPECT(gbc.readMem(0x9ffe), 0x87);
        // CB 87 0210
        gbc.setState(0xdbcd, 0xbeb7, 0x9c90, 0x74ed, 0xbd44, 0xe27a, 0x0, 0x0);
        gbc.writeMem(0xdbcd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbeb7);
        EXPECT(gbc.pc(), 0xdbcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbcd), 0xcb);
        EXPECT(gbc.readMem(0xdbce), 0x87);
        // CB 87 0211
        gbc.setState(0x58df, 0x1dbb, 0xc5d0, 0x840e, 0xbdc5, 0x3f26, 0x1, 0x0);
        gbc.writeMem(0x58df, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1dbb);
        EXPECT(gbc.pc(), 0x58e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0212
        gbc.setState(0x4c5, 0xc0e8, 0xcb30, 0x45ad, 0x1209, 0x1790, 0x1, 0x0);
        gbc.writeMem(0x4c5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc0e8);
        EXPECT(gbc.pc(), 0x4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0214
        gbc.setState(0x8866, 0x29e1, 0xc500, 0x130a, 0x8ae, 0xf93d, 0x1, 0x0);
        gbc.writeMem(0x8866, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x29e1);
        EXPECT(gbc.pc(), 0x8868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8866), 0xcb);
        EXPECT(gbc.readMem(0x8867), 0x87);
        // CB 87 0215
        gbc.setState(0x128d, 0xcb34, 0xf9e0, 0x6a4d, 0xed4c, 0x7eab, 0x0, 0x1);
        gbc.writeMem(0x128d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcb34);
        EXPECT(gbc.pc(), 0x128f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0216
        gbc.setState(0xdb62, 0xd0f1, 0x9a40, 0x6ec1, 0xc273, 0xca98, 0x0, 0x0);
        gbc.writeMem(0xdb62, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd0f1);
        EXPECT(gbc.pc(), 0xdb64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb62), 0xcb);
        EXPECT(gbc.readMem(0xdb63), 0x87);
        // CB 87 0217
        gbc.setState(0x8675, 0x4dd4, 0xd200, 0x92bd, 0x9b, 0xd1fd, 0x0, 0x1);
        gbc.writeMem(0x8675, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4dd4);
        EXPECT(gbc.pc(), 0x8677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8675), 0xcb);
        EXPECT(gbc.readMem(0x8676), 0x87);
        // CB 87 0218
        gbc.setState(0xe7c5, 0x4921, 0x3890, 0x1839, 0x21af, 0xcb07, 0x0, 0x1);
        gbc.writeMem(0xe7c5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4921);
        EXPECT(gbc.pc(), 0xe7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c5), 0xcb);
        EXPECT(gbc.readMem(0xe7c6), 0x87);
        // CB 87 0219
        gbc.setState(0x2cee, 0x6714, 0x8170, 0x6c24, 0x4b65, 0xca58, 0x1, 0x0);
        gbc.writeMem(0x2cee, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6714);
        EXPECT(gbc.pc(), 0x2cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 021A
        gbc.setState(0xdae, 0x7e0c, 0x10a0, 0x68e, 0x2428, 0xef62, 0x0, 0x0);
        gbc.writeMem(0xdae, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7e0c);
        EXPECT(gbc.pc(), 0xdb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 021B
        gbc.setState(0x5988, 0x629c, 0xc200, 0xf7d1, 0xc0df, 0x4220, 0x0, 0x0);
        gbc.writeMem(0x5988, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x629c);
        EXPECT(gbc.pc(), 0x598a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 021C
        gbc.setState(0x150b, 0x668a, 0xdd10, 0x8216, 0x36ed, 0xb45, 0x1, 0x0);
        gbc.writeMem(0x150b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x668a);
        EXPECT(gbc.pc(), 0x150d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 021D
        gbc.setState(0x17be, 0xe545, 0x5530, 0xc2b2, 0x4e8d, 0xd7ea, 0x1, 0x0);
        gbc.writeMem(0x17be, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe545);
        EXPECT(gbc.pc(), 0x17c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 021F
        gbc.setState(0xb4d9, 0xa838, 0xea20, 0x8afb, 0xa36c, 0x1f8, 0x1, 0x0);
        gbc.writeMem(0xb4d9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa838);
        EXPECT(gbc.pc(), 0xb4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d9), 0xcb);
        EXPECT(gbc.readMem(0xb4da), 0x87);
        // CB 87 0220
        gbc.setState(0xaf74, 0x9156, 0x2c90, 0x1245, 0xb45b, 0x5fe3, 0x1, 0x1);
        gbc.writeMem(0xaf74, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9156);
        EXPECT(gbc.pc(), 0xaf76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf74), 0xcb);
        EXPECT(gbc.readMem(0xaf75), 0x87);
        // CB 87 0221
        gbc.setState(0x72e8, 0x91e5, 0xa5b0, 0x52ff, 0x5d7a, 0xaafa, 0x1, 0x1);
        gbc.writeMem(0x72e8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x91e5);
        EXPECT(gbc.pc(), 0x72ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0222
        gbc.setState(0x126d, 0xeadd, 0x8b10, 0xc288, 0x1b45, 0xe403, 0x1, 0x0);
        gbc.writeMem(0x126d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xeadd);
        EXPECT(gbc.pc(), 0x126f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0223
        gbc.setState(0xacd, 0xcb06, 0x2780, 0x9341, 0xcbf0, 0x1569, 0x0, 0x1);
        gbc.writeMem(0xacd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcb06);
        EXPECT(gbc.pc(), 0xacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0224
        gbc.setState(0x2e33, 0xf8c5, 0x560, 0xf122, 0xf550, 0xbed7, 0x0, 0x1);
        gbc.writeMem(0x2e33, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf8c5);
        EXPECT(gbc.pc(), 0x2e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0225
        gbc.setState(0x1b12, 0xc524, 0xfba0, 0xcf72, 0xf527, 0x5e3a, 0x1, 0x1);
        gbc.writeMem(0x1b12, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc524);
        EXPECT(gbc.pc(), 0x1b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0226
        gbc.setState(0xaaf5, 0xc8b3, 0x3dc0, 0x44be, 0x145e, 0xe3c8, 0x1, 0x0);
        gbc.writeMem(0xaaf5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc8b3);
        EXPECT(gbc.pc(), 0xaaf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf5), 0xcb);
        EXPECT(gbc.readMem(0xaaf6), 0x87);
        // CB 87 0227
        gbc.setState(0x8235, 0xf2f3, 0x41b0, 0x3527, 0xd5c, 0x13c, 0x1, 0x0);
        gbc.writeMem(0x8235, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf2f3);
        EXPECT(gbc.pc(), 0x8237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8235), 0xcb);
        EXPECT(gbc.readMem(0x8236), 0x87);
        // CB 87 0228
        gbc.setState(0xe7f5, 0xe9bd, 0xe560, 0x536f, 0x54e8, 0xad9, 0x1, 0x0);
        gbc.writeMem(0xe7f5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe9bd);
        EXPECT(gbc.pc(), 0xe7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f5), 0xcb);
        EXPECT(gbc.readMem(0xe7f6), 0x87);
        // CB 87 0229
        gbc.setState(0x645b, 0x87d8, 0x1ff0, 0xa176, 0x4de4, 0x80f2, 0x0, 0x1);
        gbc.writeMem(0x645b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x87d8);
        EXPECT(gbc.pc(), 0x645d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 022A
        gbc.setState(0x7148, 0xa927, 0x6460, 0x1803, 0x648e, 0x352c, 0x0, 0x1);
        gbc.writeMem(0x7148, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa927);
        EXPECT(gbc.pc(), 0x714a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 022B
        gbc.setState(0x5a75, 0xe4ab, 0x14f0, 0x2923, 0x8eed, 0x7890, 0x0, 0x1);
        gbc.writeMem(0x5a75, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe4ab);
        EXPECT(gbc.pc(), 0x5a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 022C
        gbc.setState(0x7c3f, 0x5a7c, 0x1a10, 0x55d4, 0x841e, 0x462b, 0x0, 0x0);
        gbc.writeMem(0x7c3f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5a7c);
        EXPECT(gbc.pc(), 0x7c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 022D
        gbc.setState(0x39fe, 0x8286, 0x77d0, 0x20f, 0x36e0, 0xe1ad, 0x0, 0x0);
        gbc.writeMem(0x39fe, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8286);
        EXPECT(gbc.pc(), 0x3a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 022E
        gbc.setState(0x708e, 0x2433, 0x9af0, 0xc4b0, 0xdad1, 0x222f, 0x1, 0x0);
        gbc.writeMem(0x708e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2433);
        EXPECT(gbc.pc(), 0x7090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 022F
        gbc.setState(0x25c2, 0x86b3, 0x7c10, 0x4582, 0xce6a, 0xefeb, 0x0, 0x1);
        gbc.writeMem(0x25c2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x86b3);
        EXPECT(gbc.pc(), 0x25c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0230
        gbc.setState(0x57d7, 0xf8e7, 0xcf0, 0x5886, 0x2ab, 0xf623, 0x0, 0x1);
        gbc.writeMem(0x57d7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf8e7);
        EXPECT(gbc.pc(), 0x57d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0231
        gbc.setState(0xc67a, 0xdf83, 0xf600, 0x93bf, 0x772d, 0xdc33, 0x1, 0x1);
        gbc.writeMem(0xc67a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdf83);
        EXPECT(gbc.pc(), 0xc67c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67a), 0xcb);
        EXPECT(gbc.readMem(0xc67b), 0x87);
        // CB 87 0232
        gbc.setState(0x8bfa, 0x82da, 0x4a50, 0x527d, 0xfa4f, 0xeb7f, 0x1, 0x0);
        gbc.writeMem(0x8bfa, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x82da);
        EXPECT(gbc.pc(), 0x8bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bfa), 0xcb);
        EXPECT(gbc.readMem(0x8bfb), 0x87);
        // CB 87 0233
        gbc.setState(0xefa7, 0x2225, 0xa620, 0x266, 0x254c, 0x19d9, 0x0, 0x1);
        gbc.writeMem(0xefa7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2225);
        EXPECT(gbc.pc(), 0xefa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa7), 0xcb);
        EXPECT(gbc.readMem(0xefa8), 0x87);
        // CB 87 0234
        gbc.setState(0x4c80, 0x2159, 0xfb40, 0x1222, 0x17d3, 0xf75d, 0x0, 0x1);
        gbc.writeMem(0x4c80, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2159);
        EXPECT(gbc.pc(), 0x4c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0235
        gbc.setState(0xd7d7, 0xd9a2, 0x5a70, 0xa4bb, 0xb69d, 0x9e0f, 0x1, 0x0);
        gbc.writeMem(0xd7d7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd9a2);
        EXPECT(gbc.pc(), 0xd7d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d7), 0xcb);
        EXPECT(gbc.readMem(0xd7d8), 0x87);
        // CB 87 0236
        gbc.setState(0x3f20, 0x9314, 0xaaf0, 0xde15, 0x57bc, 0xc935, 0x0, 0x0);
        gbc.writeMem(0x3f20, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9314);
        EXPECT(gbc.pc(), 0x3f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0237
        gbc.setState(0x9c6a, 0xddfb, 0x640, 0x198f, 0x73a9, 0x6ac8, 0x1, 0x1);
        gbc.writeMem(0x9c6a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xddfb);
        EXPECT(gbc.pc(), 0x9c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c6a), 0xcb);
        EXPECT(gbc.readMem(0x9c6b), 0x87);
        // CB 87 0238
        gbc.setState(0xbbd9, 0x2a4f, 0xc0f0, 0x9d6a, 0x2752, 0x2572, 0x0, 0x0);
        gbc.writeMem(0xbbd9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2a4f);
        EXPECT(gbc.pc(), 0xbbdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd9), 0xcb);
        EXPECT(gbc.readMem(0xbbda), 0x87);
        // CB 87 0239
        gbc.setState(0x6b88, 0x58d0, 0xc8a0, 0x630d, 0x50e7, 0x69b5, 0x0, 0x1);
        gbc.writeMem(0x6b88, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x58d0);
        EXPECT(gbc.pc(), 0x6b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 023A
        gbc.setState(0xa99d, 0xf602, 0x95f0, 0xd4d5, 0xa487, 0xe5a9, 0x1, 0x0);
        gbc.writeMem(0xa99d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf602);
        EXPECT(gbc.pc(), 0xa99f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa99d), 0xcb);
        EXPECT(gbc.readMem(0xa99e), 0x87);
        // CB 87 023B
        gbc.setState(0x3270, 0xd12f, 0x5a30, 0xe337, 0x31d0, 0xb130, 0x0, 0x1);
        gbc.writeMem(0x3270, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd12f);
        EXPECT(gbc.pc(), 0x3272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 023C
        gbc.setState(0xb1dd, 0x55, 0x8ee0, 0x768f, 0x26c0, 0xe059, 0x1, 0x1);
        gbc.writeMem(0xb1dd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x55);
        EXPECT(gbc.pc(), 0xb1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1dd), 0xcb);
        EXPECT(gbc.readMem(0xb1de), 0x87);
        // CB 87 023D
        gbc.setState(0x1d5b, 0x6485, 0x620, 0x4ad4, 0xf06b, 0x16b8, 0x0, 0x1);
        gbc.writeMem(0x1d5b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6485);
        EXPECT(gbc.pc(), 0x1d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 023E
        gbc.setState(0x4978, 0xb7c0, 0x2ad0, 0x6733, 0xdc21, 0xd9ec, 0x0, 0x1);
        gbc.writeMem(0x4978, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb7c0);
        EXPECT(gbc.pc(), 0x497a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 023F
        gbc.setState(0x2311, 0x634a, 0x4440, 0x26cf, 0xa0b2, 0x318a, 0x1, 0x0);
        gbc.writeMem(0x2311, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x634a);
        EXPECT(gbc.pc(), 0x2313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0240
        gbc.setState(0x652a, 0xfd2b, 0xb980, 0xabc9, 0xdc55, 0xc440, 0x0, 0x1);
        gbc.writeMem(0x652a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfd2b);
        EXPECT(gbc.pc(), 0x652c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0241
        gbc.setState(0x9bd4, 0xa8d6, 0x76d0, 0xfe76, 0xfedd, 0xdc1c, 0x1, 0x0);
        gbc.writeMem(0x9bd4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa8d6);
        EXPECT(gbc.pc(), 0x9bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd4), 0xcb);
        EXPECT(gbc.readMem(0x9bd5), 0x87);
        // CB 87 0242
        gbc.setState(0x799a, 0xdcb7, 0x1970, 0xb968, 0x61bc, 0xb5a8, 0x1, 0x0);
        gbc.writeMem(0x799a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdcb7);
        EXPECT(gbc.pc(), 0x799c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0243
        gbc.setState(0x6506, 0xca1a, 0x2130, 0x35f2, 0xcd89, 0x20bd, 0x1, 0x0);
        gbc.writeMem(0x6506, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xca1a);
        EXPECT(gbc.pc(), 0x6508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0244
        gbc.setState(0xbcb1, 0xc27b, 0x2e60, 0x762a, 0x2a81, 0x54bb, 0x0, 0x0);
        gbc.writeMem(0xbcb1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc27b);
        EXPECT(gbc.pc(), 0xbcb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb1), 0xcb);
        EXPECT(gbc.readMem(0xbcb2), 0x87);
        // CB 87 0245
        gbc.setState(0x31ea, 0x4d58, 0x8e0, 0xedca, 0xf853, 0x789e, 0x0, 0x1);
        gbc.writeMem(0x31ea, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4d58);
        EXPECT(gbc.pc(), 0x31ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0246
        gbc.setState(0xbb86, 0x2eea, 0x5dc0, 0x6f08, 0x88d3, 0xd81c, 0x1, 0x1);
        gbc.writeMem(0xbb86, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2eea);
        EXPECT(gbc.pc(), 0xbb88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb86), 0xcb);
        EXPECT(gbc.readMem(0xbb87), 0x87);
        // CB 87 0247
        gbc.setState(0x698, 0x2576, 0x3500, 0x81a2, 0xe69b, 0xa689, 0x1, 0x1);
        gbc.writeMem(0x698, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2576);
        EXPECT(gbc.pc(), 0x69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0248
        gbc.setState(0x1fbd, 0x11c1, 0x7490, 0x82a, 0x29ae, 0x5c1f, 0x1, 0x0);
        gbc.writeMem(0x1fbd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x11c1);
        EXPECT(gbc.pc(), 0x1fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0249
        gbc.setState(0x3dd0, 0xf90d, 0xc090, 0x65e6, 0xba0a, 0x6765, 0x0, 0x0);
        gbc.writeMem(0x3dd0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf90d);
        EXPECT(gbc.pc(), 0x3dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 024B
        gbc.setState(0x7e07, 0xbe5c, 0xb0c0, 0x6321, 0xcbf5, 0xc39c, 0x0, 0x1);
        gbc.writeMem(0x7e07, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbe5c);
        EXPECT(gbc.pc(), 0x7e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 024C
        gbc.setState(0x7bc9, 0x84f2, 0x8ab0, 0x65aa, 0x7a1d, 0x9534, 0x1, 0x0);
        gbc.writeMem(0x7bc9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x84f2);
        EXPECT(gbc.pc(), 0x7bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 024D
        gbc.setState(0x6792, 0xf181, 0x4900, 0xbaab, 0x381a, 0x9a81, 0x1, 0x1);
        gbc.writeMem(0x6792, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf181);
        EXPECT(gbc.pc(), 0x6794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 024E
        gbc.setState(0xa2ea, 0xa3d8, 0x22c0, 0xab1b, 0xe993, 0xc7cf, 0x0, 0x0);
        gbc.writeMem(0xa2ea, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa3d8);
        EXPECT(gbc.pc(), 0xa2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ea), 0xcb);
        EXPECT(gbc.readMem(0xa2eb), 0x87);
        // CB 87 024F
        gbc.setState(0x835e, 0x2c34, 0x56d0, 0xbd2a, 0x194b, 0xc6da, 0x1, 0x0);
        gbc.writeMem(0x835e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2c34);
        EXPECT(gbc.pc(), 0x8360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835e), 0xcb);
        EXPECT(gbc.readMem(0x835f), 0x87);
        // CB 87 0250
        gbc.setState(0xc095, 0xf284, 0x5240, 0x3aaf, 0x3c97, 0xb5a8, 0x1, 0x1);
        gbc.writeMem(0xc095, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf284);
        EXPECT(gbc.pc(), 0xc097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc095), 0xcb);
        EXPECT(gbc.readMem(0xc096), 0x87);
        // CB 87 0251
        gbc.setState(0x28be, 0x723d, 0xe8f0, 0xb2ca, 0x287b, 0x4a24, 0x1, 0x1);
        gbc.writeMem(0x28be, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x723d);
        EXPECT(gbc.pc(), 0x28c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0252
        gbc.setState(0x9592, 0x6752, 0xf580, 0x1c72, 0x3441, 0xaaeb, 0x0, 0x1);
        gbc.writeMem(0x9592, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6752);
        EXPECT(gbc.pc(), 0x9594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9592), 0xcb);
        EXPECT(gbc.readMem(0x9593), 0x87);
        // CB 87 0253
        gbc.setState(0x58e6, 0xa457, 0xf6b0, 0x85d4, 0x6b74, 0x18c9, 0x0, 0x1);
        gbc.writeMem(0x58e6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa457);
        EXPECT(gbc.pc(), 0x58e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0254
        gbc.setState(0x797b, 0x5b89, 0xf530, 0xecc2, 0xf0c7, 0x3ab3, 0x1, 0x0);
        gbc.writeMem(0x797b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5b89);
        EXPECT(gbc.pc(), 0x797d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0255
        gbc.setState(0xed3d, 0x33f7, 0xf030, 0x91eb, 0xadce, 0x8029, 0x1, 0x1);
        gbc.writeMem(0xed3d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x33f7);
        EXPECT(gbc.pc(), 0xed3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3d), 0xcb);
        EXPECT(gbc.readMem(0xed3e), 0x87);
        // CB 87 0256
        gbc.setState(0xcc2d, 0xa217, 0xae40, 0x4764, 0xc5c1, 0xd58a, 0x1, 0x1);
        gbc.writeMem(0xcc2d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa217);
        EXPECT(gbc.pc(), 0xcc2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc2d), 0xcb);
        EXPECT(gbc.readMem(0xcc2e), 0x87);
        // CB 87 0257
        gbc.setState(0x3ed8, 0xec3, 0x7a50, 0xefb9, 0x1298, 0x7906, 0x0, 0x1);
        gbc.writeMem(0x3ed8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xec3);
        EXPECT(gbc.pc(), 0x3eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0259
        gbc.setState(0xb320, 0x4eb5, 0x7e20, 0xc92d, 0x2728, 0x2cbf, 0x0, 0x0);
        gbc.writeMem(0xb320, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4eb5);
        EXPECT(gbc.pc(), 0xb322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb320), 0xcb);
        EXPECT(gbc.readMem(0xb321), 0x87);
        // CB 87 025A
        gbc.setState(0x9760, 0x9781, 0x7650, 0x8af5, 0xd51f, 0x4ef5, 0x1, 0x0);
        gbc.writeMem(0x9760, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9781);
        EXPECT(gbc.pc(), 0x9762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9760), 0xcb);
        EXPECT(gbc.readMem(0x9761), 0x87);
        // CB 87 025B
        gbc.setState(0xb2a1, 0xbafb, 0x9e40, 0x4057, 0xac4b, 0x5ecf, 0x1, 0x0);
        gbc.writeMem(0xb2a1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbafb);
        EXPECT(gbc.pc(), 0xb2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a1), 0xcb);
        EXPECT(gbc.readMem(0xb2a2), 0x87);
        // CB 87 025C
        gbc.setState(0xa576, 0x2d9f, 0x1330, 0xa3ba, 0x830f, 0x1f57, 0x0, 0x1);
        gbc.writeMem(0xa576, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2d9f);
        EXPECT(gbc.pc(), 0xa578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa576), 0xcb);
        EXPECT(gbc.readMem(0xa577), 0x87);
        // CB 87 025D
        gbc.setState(0x1276, 0x232f, 0x2690, 0xd6ea, 0x9724, 0x8e3e, 0x1, 0x1);
        gbc.writeMem(0x1276, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x232f);
        EXPECT(gbc.pc(), 0x1278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 025E
        gbc.setState(0x9d78, 0x84f7, 0x1d60, 0x6a14, 0xa4ff, 0xdb5e, 0x1, 0x0);
        gbc.writeMem(0x9d78, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x84f7);
        EXPECT(gbc.pc(), 0x9d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d78), 0xcb);
        EXPECT(gbc.readMem(0x9d79), 0x87);
        // CB 87 025F
        gbc.setState(0x6395, 0x156, 0xe980, 0x839e, 0x61e4, 0xeb2b, 0x1, 0x1);
        gbc.writeMem(0x6395, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x156);
        EXPECT(gbc.pc(), 0x6397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0260
        gbc.setState(0x1e81, 0x4890, 0x7d50, 0xb93, 0x743, 0xd014, 0x0, 0x1);
        gbc.writeMem(0x1e81, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4890);
        EXPECT(gbc.pc(), 0x1e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0261
        gbc.setState(0x8f6b, 0xc1b6, 0x8b40, 0xb5c0, 0xc4b7, 0x4f57, 0x1, 0x0);
        gbc.writeMem(0x8f6b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc1b6);
        EXPECT(gbc.pc(), 0x8f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6b), 0xcb);
        EXPECT(gbc.readMem(0x8f6c), 0x87);
        // CB 87 0262
        gbc.setState(0xa6ed, 0x83c5, 0x3b50, 0xbf08, 0x3f4f, 0x7cfa, 0x1, 0x1);
        gbc.writeMem(0xa6ed, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x83c5);
        EXPECT(gbc.pc(), 0xa6ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ed), 0xcb);
        EXPECT(gbc.readMem(0xa6ee), 0x87);
        // CB 87 0263
        gbc.setState(0xb4b4, 0x2693, 0x7a40, 0x1a96, 0xdf0d, 0xe3d1, 0x0, 0x1);
        gbc.writeMem(0xb4b4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2693);
        EXPECT(gbc.pc(), 0xb4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b4), 0xcb);
        EXPECT(gbc.readMem(0xb4b5), 0x87);
        // CB 87 0264
        gbc.setState(0x9e51, 0x7a37, 0x5990, 0xa520, 0x714, 0xc8d, 0x1, 0x0);
        gbc.writeMem(0x9e51, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7a37);
        EXPECT(gbc.pc(), 0x9e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e51), 0xcb);
        EXPECT(gbc.readMem(0x9e52), 0x87);
        // CB 87 0265
        gbc.setState(0xa656, 0x7305, 0x9230, 0x47bb, 0xc228, 0xc92a, 0x1, 0x1);
        gbc.writeMem(0xa656, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7305);
        EXPECT(gbc.pc(), 0xa658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa656), 0xcb);
        EXPECT(gbc.readMem(0xa657), 0x87);
        // CB 87 0266
        gbc.setState(0x418a, 0xb49f, 0x2a30, 0x6d67, 0xae9d, 0x8b07, 0x1, 0x1);
        gbc.writeMem(0x418a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb49f);
        EXPECT(gbc.pc(), 0x418c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0267
        gbc.setState(0xe83b, 0x42a1, 0x5d00, 0xee08, 0xc819, 0x7621, 0x0, 0x0);
        gbc.writeMem(0xe83b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x42a1);
        EXPECT(gbc.pc(), 0xe83d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83b), 0xcb);
        EXPECT(gbc.readMem(0xe83c), 0x87);
        // CB 87 0268
        gbc.setState(0xcd18, 0xbaa5, 0x3c90, 0x2884, 0x6dc3, 0x22fd, 0x1, 0x1);
        gbc.writeMem(0xcd18, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbaa5);
        EXPECT(gbc.pc(), 0xcd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd18), 0xcb);
        EXPECT(gbc.readMem(0xcd19), 0x87);
        // CB 87 0269
        gbc.setState(0x9cec, 0x5180, 0x7870, 0xe787, 0x8bf0, 0x1e02, 0x1, 0x1);
        gbc.writeMem(0x9cec, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5180);
        EXPECT(gbc.pc(), 0x9cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cec), 0xcb);
        EXPECT(gbc.readMem(0x9ced), 0x87);
        // CB 87 026A
        gbc.setState(0xe31, 0xcd69, 0xa4b0, 0xddca, 0x44ea, 0xbf2d, 0x0, 0x0);
        gbc.writeMem(0xe31, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xcd69);
        EXPECT(gbc.pc(), 0xe33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 026B
        gbc.setState(0xe946, 0x440f, 0x1360, 0x4fc, 0x4e36, 0xecf0, 0x1, 0x1);
        gbc.writeMem(0xe946, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x440f);
        EXPECT(gbc.pc(), 0xe948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe946), 0xcb);
        EXPECT(gbc.readMem(0xe947), 0x87);
        // CB 87 026C
        gbc.setState(0x513d, 0xaa62, 0xc0b0, 0xb5c4, 0x21ae, 0xe4d9, 0x0, 0x0);
        gbc.writeMem(0x513d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xaa62);
        EXPECT(gbc.pc(), 0x513f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 026D
        gbc.setState(0xdb8a, 0x34f1, 0x8860, 0x1714, 0xbe90, 0x10c5, 0x1, 0x0);
        gbc.writeMem(0xdb8a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x34f1);
        EXPECT(gbc.pc(), 0xdb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8a), 0xcb);
        EXPECT(gbc.readMem(0xdb8b), 0x87);
        // CB 87 026E
        gbc.setState(0x117d, 0xd5e5, 0x1240, 0xe618, 0xeb59, 0xb08a, 0x1, 0x1);
        gbc.writeMem(0x117d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd5e5);
        EXPECT(gbc.pc(), 0x117f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 026F
        gbc.setState(0xdd23, 0xd12, 0x8880, 0xc404, 0xfc56, 0x5af6, 0x0, 0x1);
        gbc.writeMem(0xdd23, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd12);
        EXPECT(gbc.pc(), 0xdd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd23), 0xcb);
        EXPECT(gbc.readMem(0xdd24), 0x87);
        // CB 87 0270
        gbc.setState(0x6271, 0x1abc, 0xbfc0, 0x8a1d, 0x5f60, 0x4f06, 0x0, 0x1);
        gbc.writeMem(0x6271, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1abc);
        EXPECT(gbc.pc(), 0x6273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0271
        gbc.setState(0x6617, 0x329c, 0xca30, 0x7f19, 0xcaf, 0x8305, 0x0, 0x1);
        gbc.writeMem(0x6617, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x329c);
        EXPECT(gbc.pc(), 0x6619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0272
        gbc.setState(0x5f90, 0xcb57, 0xa3f0, 0xcd51, 0x37fd, 0x512d, 0x0, 0x0);
        gbc.writeMem(0x5f90, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xcb57);
        EXPECT(gbc.pc(), 0x5f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0273
        gbc.setState(0x4af1, 0x6dc9, 0x9f20, 0x86f, 0x29ee, 0xa32f, 0x1, 0x0);
        gbc.writeMem(0x4af1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6dc9);
        EXPECT(gbc.pc(), 0x4af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0274
        gbc.setState(0x3ee0, 0xab43, 0xd0c0, 0x8a82, 0x3ca2, 0x12d5, 0x0, 0x0);
        gbc.writeMem(0x3ee0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xab43);
        EXPECT(gbc.pc(), 0x3ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0275
        gbc.setState(0x5f68, 0xa4b4, 0x63b0, 0x39d1, 0x95dc, 0x4d2c, 0x1, 0x0);
        gbc.writeMem(0x5f68, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa4b4);
        EXPECT(gbc.pc(), 0x5f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0276
        gbc.setState(0x31c4, 0xac61, 0x8230, 0xb19f, 0x703f, 0xd5b9, 0x1, 0x1);
        gbc.writeMem(0x31c4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xac61);
        EXPECT(gbc.pc(), 0x31c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0278
        gbc.setState(0xeb2c, 0x6a57, 0x5d50, 0xdd93, 0xf6ac, 0xe8e, 0x1, 0x0);
        gbc.writeMem(0xeb2c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6a57);
        EXPECT(gbc.pc(), 0xeb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2c), 0xcb);
        EXPECT(gbc.readMem(0xeb2d), 0x87);
        // CB 87 0279
        gbc.setState(0xe307, 0x8966, 0xa8f0, 0x47fb, 0xf2d, 0x1d3c, 0x1, 0x1);
        gbc.writeMem(0xe307, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8966);
        EXPECT(gbc.pc(), 0xe309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe307), 0xcb);
        EXPECT(gbc.readMem(0xe308), 0x87);
        // CB 87 027A
        gbc.setState(0xac5b, 0xc686, 0x6020, 0xf4b2, 0x93de, 0x989a, 0x0, 0x0);
        gbc.writeMem(0xac5b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc686);
        EXPECT(gbc.pc(), 0xac5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5b), 0xcb);
        EXPECT(gbc.readMem(0xac5c), 0x87);
        // CB 87 027B
        gbc.setState(0xa881, 0xc19e, 0x8500, 0x606f, 0x35c9, 0xd5eb, 0x0, 0x1);
        gbc.writeMem(0xa881, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc19e);
        EXPECT(gbc.pc(), 0xa883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa881), 0xcb);
        EXPECT(gbc.readMem(0xa882), 0x87);
        // CB 87 027C
        gbc.setState(0x9951, 0xcb9a, 0xba70, 0xf4db, 0x8816, 0xe86, 0x1, 0x0);
        gbc.writeMem(0x9951, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcb9a);
        EXPECT(gbc.pc(), 0x9953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9951), 0xcb);
        EXPECT(gbc.readMem(0x9952), 0x87);
        // CB 87 027D
        gbc.setState(0x82b0, 0x9d07, 0xa0a0, 0x29a8, 0x4687, 0x289d, 0x0, 0x0);
        gbc.writeMem(0x82b0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9d07);
        EXPECT(gbc.pc(), 0x82b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b0), 0xcb);
        EXPECT(gbc.readMem(0x82b1), 0x87);
        // CB 87 027E
        gbc.setState(0x99ac, 0xdf97, 0xeda0, 0x2dcb, 0xa647, 0x938b, 0x1, 0x0);
        gbc.writeMem(0x99ac, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdf97);
        EXPECT(gbc.pc(), 0x99ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ac), 0xcb);
        EXPECT(gbc.readMem(0x99ad), 0x87);
        // CB 87 027F
        gbc.setState(0xcc18, 0xdae0, 0xc2e0, 0x544, 0xbd9c, 0xbd60, 0x1, 0x1);
        gbc.writeMem(0xcc18, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdae0);
        EXPECT(gbc.pc(), 0xcc1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc18), 0xcb);
        EXPECT(gbc.readMem(0xcc19), 0x87);
        // CB 87 0280
        gbc.setState(0x9165, 0x1712, 0xea10, 0x7c9, 0xb32a, 0x8796, 0x1, 0x1);
        gbc.writeMem(0x9165, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1712);
        EXPECT(gbc.pc(), 0x9167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9165), 0xcb);
        EXPECT(gbc.readMem(0x9166), 0x87);
        // CB 87 0281
        gbc.setState(0x34a4, 0xa6e8, 0x2900, 0x59d4, 0x1ee9, 0x1000, 0x1, 0x0);
        gbc.writeMem(0x34a4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa6e8);
        EXPECT(gbc.pc(), 0x34a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0282
        gbc.setState(0x36ee, 0x3c1b, 0x6560, 0x9f5e, 0x306b, 0x68b7, 0x1, 0x1);
        gbc.writeMem(0x36ee, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3c1b);
        EXPECT(gbc.pc(), 0x36f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0283
        gbc.setState(0x37e6, 0x8245, 0x1fc0, 0xd149, 0x168f, 0xe106, 0x1, 0x1);
        gbc.writeMem(0x37e6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8245);
        EXPECT(gbc.pc(), 0x37e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0284
        gbc.setState(0x85c7, 0xbd5e, 0x17b0, 0x1045, 0xca5b, 0x908, 0x0, 0x1);
        gbc.writeMem(0x85c7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbd5e);
        EXPECT(gbc.pc(), 0x85c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c7), 0xcb);
        EXPECT(gbc.readMem(0x85c8), 0x87);
        // CB 87 0285
        gbc.setState(0x7f70, 0x1358, 0xa000, 0x6de4, 0xc0a5, 0x1d81, 0x0, 0x0);
        gbc.writeMem(0x7f70, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1358);
        EXPECT(gbc.pc(), 0x7f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0286
        gbc.setState(0x3106, 0x4d65, 0x4040, 0xbf8, 0x9de1, 0x12a7, 0x0, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4d65);
        EXPECT(gbc.pc(), 0x3108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0287
        gbc.setState(0xe5c4, 0xade9, 0xe9c0, 0x19e3, 0x2ca8, 0x101d, 0x0, 0x1);
        gbc.writeMem(0xe5c4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xade9);
        EXPECT(gbc.pc(), 0xe5c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c4), 0xcb);
        EXPECT(gbc.readMem(0xe5c5), 0x87);
        // CB 87 0288
        gbc.setState(0x5602, 0xa17c, 0x7f90, 0xc011, 0x1ed2, 0x21f4, 0x1, 0x1);
        gbc.writeMem(0x5602, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa17c);
        EXPECT(gbc.pc(), 0x5604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0289
        gbc.setState(0xa146, 0xc28c, 0x6cf0, 0x4a2a, 0xa01e, 0x1e2a, 0x0, 0x0);
        gbc.writeMem(0xa146, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc28c);
        EXPECT(gbc.pc(), 0xa148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa146), 0xcb);
        EXPECT(gbc.readMem(0xa147), 0x87);
        // CB 87 028A
        gbc.setState(0x328d, 0x9aef, 0xc100, 0x1da3, 0xba67, 0xc49d, 0x1, 0x1);
        gbc.writeMem(0x328d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9aef);
        EXPECT(gbc.pc(), 0x328f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 028B
        gbc.setState(0x289d, 0x7b44, 0x9f50, 0xc4ec, 0x8f87, 0xadbe, 0x1, 0x0);
        gbc.writeMem(0x289d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7b44);
        EXPECT(gbc.pc(), 0x289f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 028C
        gbc.setState(0x7bd, 0x802f, 0x5c20, 0xcb52, 0x5bfd, 0xa420, 0x0, 0x1);
        gbc.writeMem(0x7bd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x802f);
        EXPECT(gbc.pc(), 0x7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 028D
        gbc.setState(0xfdc, 0x7532, 0xf660, 0x4291, 0xbd8, 0xa629, 0x0, 0x0);
        gbc.writeMem(0xfdc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7532);
        EXPECT(gbc.pc(), 0xfde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 028E
        gbc.setState(0xe16b, 0xbd1c, 0x7d80, 0x61a4, 0xfd37, 0xa23b, 0x0, 0x0);
        gbc.writeMem(0xe16b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbd1c);
        EXPECT(gbc.pc(), 0xe16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16b), 0xcb);
        EXPECT(gbc.readMem(0xe16c), 0x87);
        // CB 87 028F
        gbc.setState(0xb16b, 0x561b, 0x4750, 0x1ecc, 0x1c48, 0xba59, 0x1, 0x0);
        gbc.writeMem(0xb16b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x561b);
        EXPECT(gbc.pc(), 0xb16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16b), 0xcb);
        EXPECT(gbc.readMem(0xb16c), 0x87);
        // CB 87 0290
        gbc.setState(0xcc23, 0xb511, 0xfce0, 0xc4fb, 0x4fd, 0x3495, 0x1, 0x0);
        gbc.writeMem(0xcc23, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb511);
        EXPECT(gbc.pc(), 0xcc25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc23), 0xcb);
        EXPECT(gbc.readMem(0xcc24), 0x87);
        // CB 87 0293
        gbc.setState(0x97b4, 0x7cf5, 0x17e0, 0x19d8, 0x1402, 0xd9e5, 0x0, 0x1);
        gbc.writeMem(0x97b4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7cf5);
        EXPECT(gbc.pc(), 0x97b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b4), 0xcb);
        EXPECT(gbc.readMem(0x97b5), 0x87);
        // CB 87 0294
        gbc.setState(0xdff8, 0x615c, 0x4e50, 0x3e4c, 0xf0c1, 0x3bc, 0x0, 0x1);
        gbc.writeMem(0xdff8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x615c);
        EXPECT(gbc.pc(), 0xdffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff8), 0xcb);
        EXPECT(gbc.readMem(0xdff9), 0x87);
        // CB 87 0295
        gbc.setState(0x1154, 0xa674, 0x9e0, 0x6828, 0xe102, 0x6eae, 0x0, 0x1);
        gbc.writeMem(0x1154, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa674);
        EXPECT(gbc.pc(), 0x1156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0296
        gbc.setState(0xd013, 0x3bcd, 0xd970, 0x1504, 0x804e, 0x9a7a, 0x1, 0x0);
        gbc.writeMem(0xd013, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3bcd);
        EXPECT(gbc.pc(), 0xd015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd013), 0xcb);
        EXPECT(gbc.readMem(0xd014), 0x87);
        // CB 87 0297
        gbc.setState(0xc1a5, 0xe76c, 0x1400, 0xaef5, 0xee64, 0x8d6b, 0x0, 0x0);
        gbc.writeMem(0xc1a5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe76c);
        EXPECT(gbc.pc(), 0xc1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a5), 0xcb);
        EXPECT(gbc.readMem(0xc1a6), 0x87);
        // CB 87 0298
        gbc.setState(0xa528, 0x4381, 0xc5a0, 0x7366, 0x9620, 0x9134, 0x1, 0x1);
        gbc.writeMem(0xa528, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4381);
        EXPECT(gbc.pc(), 0xa52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa528), 0xcb);
        EXPECT(gbc.readMem(0xa529), 0x87);
        // CB 87 0299
        gbc.setState(0x2ce6, 0xe1e4, 0xbc20, 0x39b6, 0x1cd4, 0xc3cb, 0x0, 0x0);
        gbc.writeMem(0x2ce6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe1e4);
        EXPECT(gbc.pc(), 0x2ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 029A
        gbc.setState(0xce52, 0xfa6c, 0x2d0, 0x2f46, 0x14a6, 0x4dfb, 0x1, 0x1);
        gbc.writeMem(0xce52, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfa6c);
        EXPECT(gbc.pc(), 0xce54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce52), 0xcb);
        EXPECT(gbc.readMem(0xce53), 0x87);
        // CB 87 029B
        gbc.setState(0x69cd, 0x54c0, 0x21d0, 0x5a5a, 0xe25b, 0x896b, 0x0, 0x0);
        gbc.writeMem(0x69cd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x54c0);
        EXPECT(gbc.pc(), 0x69cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 029C
        gbc.setState(0xca77, 0x5a1e, 0x7910, 0x1536, 0xb7f2, 0x40a8, 0x0, 0x0);
        gbc.writeMem(0xca77, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5a1e);
        EXPECT(gbc.pc(), 0xca79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca77), 0xcb);
        EXPECT(gbc.readMem(0xca78), 0x87);
        // CB 87 029D
        gbc.setState(0x8c45, 0xb4d0, 0x1180, 0x5389, 0x34fc, 0xe5e1, 0x1, 0x1);
        gbc.writeMem(0x8c45, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb4d0);
        EXPECT(gbc.pc(), 0x8c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c45), 0xcb);
        EXPECT(gbc.readMem(0x8c46), 0x87);
        // CB 87 029E
        gbc.setState(0x7ad1, 0x74eb, 0xbb40, 0x3d38, 0x109c, 0x3322, 0x0, 0x1);
        gbc.writeMem(0x7ad1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x74eb);
        EXPECT(gbc.pc(), 0x7ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 029F
        gbc.setState(0xed41, 0x3757, 0x8760, 0x9baa, 0x9112, 0x97a0, 0x1, 0x1);
        gbc.writeMem(0xed41, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3757);
        EXPECT(gbc.pc(), 0xed43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed41), 0xcb);
        EXPECT(gbc.readMem(0xed42), 0x87);
        // CB 87 02A0
        gbc.setState(0xb4c6, 0xf68c, 0x88f0, 0x1aa3, 0xea72, 0x32c8, 0x0, 0x0);
        gbc.writeMem(0xb4c6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf68c);
        EXPECT(gbc.pc(), 0xb4c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c6), 0xcb);
        EXPECT(gbc.readMem(0xb4c7), 0x87);
        // CB 87 02A1
        gbc.setState(0x4b8b, 0xce77, 0xe910, 0x56f, 0x5fd, 0x9050, 0x0, 0x0);
        gbc.writeMem(0x4b8b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xce77);
        EXPECT(gbc.pc(), 0x4b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02A2
        gbc.setState(0xbe73, 0xa26e, 0x3be0, 0x9461, 0x3c03, 0xae57, 0x1, 0x0);
        gbc.writeMem(0xbe73, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa26e);
        EXPECT(gbc.pc(), 0xbe75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe73), 0xcb);
        EXPECT(gbc.readMem(0xbe74), 0x87);
        // CB 87 02A3
        gbc.setState(0x9388, 0x9698, 0x58b0, 0x92a1, 0x69e8, 0x5c0d, 0x0, 0x1);
        gbc.writeMem(0x9388, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9698);
        EXPECT(gbc.pc(), 0x938a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9388), 0xcb);
        EXPECT(gbc.readMem(0x9389), 0x87);
        // CB 87 02A4
        gbc.setState(0x6874, 0xfee4, 0x2440, 0x62d0, 0x2467, 0xb5df, 0x1, 0x0);
        gbc.writeMem(0x6874, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfee4);
        EXPECT(gbc.pc(), 0x6876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02A5
        gbc.setState(0xad06, 0x67ab, 0x8450, 0x18fb, 0xde09, 0x389f, 0x1, 0x1);
        gbc.writeMem(0xad06, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x67ab);
        EXPECT(gbc.pc(), 0xad08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad06), 0xcb);
        EXPECT(gbc.readMem(0xad07), 0x87);
        // CB 87 02A6
        gbc.setState(0x64bb, 0x95cc, 0x17f0, 0xff09, 0x9607, 0xb015, 0x0, 0x0);
        gbc.writeMem(0x64bb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x95cc);
        EXPECT(gbc.pc(), 0x64bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02A7
        gbc.setState(0x3ef5, 0xe524, 0x2030, 0x781, 0x8bd3, 0x9b8a, 0x0, 0x0);
        gbc.writeMem(0x3ef5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe524);
        EXPECT(gbc.pc(), 0x3ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02A8
        gbc.setState(0x6146, 0x6511, 0x7d00, 0x2a47, 0xd8c, 0xa0c1, 0x1, 0x1);
        gbc.writeMem(0x6146, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6511);
        EXPECT(gbc.pc(), 0x6148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02A9
        gbc.setState(0x660d, 0x7a09, 0xc20, 0x9ff6, 0x59f8, 0x159b, 0x0, 0x1);
        gbc.writeMem(0x660d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7a09);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02AA
        gbc.setState(0xe81e, 0xda18, 0x7910, 0x4366, 0x402, 0xcd4c, 0x1, 0x1);
        gbc.writeMem(0xe81e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xda18);
        EXPECT(gbc.pc(), 0xe820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe81e), 0xcb);
        EXPECT(gbc.readMem(0xe81f), 0x87);
        // CB 87 02AB
        gbc.setState(0xd256, 0x84b, 0x6800, 0x15a, 0xd415, 0x1d00, 0x0, 0x0);
        gbc.writeMem(0xd256, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x84b);
        EXPECT(gbc.pc(), 0xd258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd256), 0xcb);
        EXPECT(gbc.readMem(0xd257), 0x87);
        // CB 87 02AC
        gbc.setState(0x8868, 0xc772, 0xf470, 0x41d0, 0x8daf, 0x895a, 0x1, 0x1);
        gbc.writeMem(0x8868, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc772);
        EXPECT(gbc.pc(), 0x886a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8868), 0xcb);
        EXPECT(gbc.readMem(0x8869), 0x87);
        // CB 87 02AD
        gbc.setState(0x9f3c, 0xdf37, 0xc480, 0x694c, 0xac11, 0x6ee0, 0x0, 0x1);
        gbc.writeMem(0x9f3c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdf37);
        EXPECT(gbc.pc(), 0x9f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3c), 0xcb);
        EXPECT(gbc.readMem(0x9f3d), 0x87);
        // CB 87 02AE
        gbc.setState(0x2166, 0x154d, 0x4b00, 0xfa11, 0x3493, 0x93a3, 0x1, 0x1);
        gbc.writeMem(0x2166, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x154d);
        EXPECT(gbc.pc(), 0x2168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02AF
        gbc.setState(0x5ae0, 0xbaff, 0x3420, 0x1879, 0xd204, 0x4745, 0x1, 0x1);
        gbc.writeMem(0x5ae0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbaff);
        EXPECT(gbc.pc(), 0x5ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02B0
        gbc.setState(0x13a9, 0xd55d, 0xfbb0, 0xa9f6, 0x33b6, 0xb246, 0x0, 0x0);
        gbc.writeMem(0x13a9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd55d);
        EXPECT(gbc.pc(), 0x13ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02B1
        gbc.setState(0x7c35, 0x354e, 0x9590, 0x2bf2, 0x92f6, 0xc778, 0x1, 0x0);
        gbc.writeMem(0x7c35, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x354e);
        EXPECT(gbc.pc(), 0x7c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02B2
        gbc.setState(0x10b7, 0xb06b, 0x7770, 0x714c, 0x7948, 0xe4e1, 0x1, 0x0);
        gbc.writeMem(0x10b7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb06b);
        EXPECT(gbc.pc(), 0x10b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02B3
        gbc.setState(0x9267, 0x1d49, 0xe30, 0x24f2, 0xd1e2, 0x1f45, 0x1, 0x1);
        gbc.writeMem(0x9267, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1d49);
        EXPECT(gbc.pc(), 0x9269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9267), 0xcb);
        EXPECT(gbc.readMem(0x9268), 0x87);
        // CB 87 02B4
        gbc.setState(0xc5bd, 0x7670, 0xfef0, 0xed35, 0x2f8d, 0xd8cd, 0x1, 0x0);
        gbc.writeMem(0xc5bd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0xc5bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bd), 0xcb);
        EXPECT(gbc.readMem(0xc5be), 0x87);
        // CB 87 02B5
        gbc.setState(0xb167, 0x8699, 0x6830, 0x8811, 0x6834, 0x3790, 0x0, 0x0);
        gbc.writeMem(0xb167, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8699);
        EXPECT(gbc.pc(), 0xb169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb167), 0xcb);
        EXPECT(gbc.readMem(0xb168), 0x87);
        // CB 87 02B6
        gbc.setState(0x40c9, 0xcb4d, 0x100, 0xcda1, 0x8ccd, 0xc6fb, 0x1, 0x0);
        gbc.writeMem(0x40c9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcb4d);
        EXPECT(gbc.pc(), 0x40cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02B7
        gbc.setState(0x70a9, 0x3b14, 0xf500, 0x191, 0x57b5, 0xd59c, 0x1, 0x0);
        gbc.writeMem(0x70a9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3b14);
        EXPECT(gbc.pc(), 0x70ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02B9
        gbc.setState(0x52e6, 0xb060, 0x5b80, 0x5b63, 0xd12, 0x2b55, 0x0, 0x1);
        gbc.writeMem(0x52e6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb060);
        EXPECT(gbc.pc(), 0x52e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02BA
        gbc.setState(0x4f9d, 0x67d0, 0x4770, 0xaa47, 0xa6f1, 0x9359, 0x1, 0x1);
        gbc.writeMem(0x4f9d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x67d0);
        EXPECT(gbc.pc(), 0x4f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02BB
        gbc.setState(0x6e41, 0xa99e, 0x1950, 0xe09e, 0xf7c9, 0x6688, 0x1, 0x1);
        gbc.writeMem(0x6e41, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa99e);
        EXPECT(gbc.pc(), 0x6e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02BC
        gbc.setState(0xc2da, 0x9506, 0x4390, 0xf10e, 0xdb1a, 0x5d85, 0x0, 0x0);
        gbc.writeMem(0xc2da, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9506);
        EXPECT(gbc.pc(), 0xc2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2da), 0xcb);
        EXPECT(gbc.readMem(0xc2db), 0x87);
        // CB 87 02BE
        gbc.setState(0x2993, 0x6792, 0x9fc0, 0xd410, 0x8353, 0x3f08, 0x0, 0x1);
        gbc.writeMem(0x2993, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6792);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02BF
        gbc.setState(0x80e0, 0xe180, 0x860, 0x8c2e, 0x6144, 0x7cd8, 0x1, 0x1);
        gbc.writeMem(0x80e0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe180);
        EXPECT(gbc.pc(), 0x80e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e0), 0xcb);
        EXPECT(gbc.readMem(0x80e1), 0x87);
        // CB 87 02C0
        gbc.setState(0x9b0d, 0x4bc2, 0xa740, 0xc0fc, 0x46a, 0x2405, 0x1, 0x1);
        gbc.writeMem(0x9b0d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4bc2);
        EXPECT(gbc.pc(), 0x9b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0d), 0xcb);
        EXPECT(gbc.readMem(0x9b0e), 0x87);
        // CB 87 02C1
        gbc.setState(0xb906, 0xcd29, 0x4740, 0x22cc, 0x6191, 0x1c76, 0x1, 0x0);
        gbc.writeMem(0xb906, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcd29);
        EXPECT(gbc.pc(), 0xb908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb906), 0xcb);
        EXPECT(gbc.readMem(0xb907), 0x87);
        // CB 87 02C2
        gbc.setState(0xc9b, 0xa45c, 0xbaf0, 0x387a, 0xcc86, 0x982, 0x1, 0x0);
        gbc.writeMem(0xc9b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa45c);
        EXPECT(gbc.pc(), 0xc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02C3
        gbc.setState(0xabdb, 0x206f, 0xac80, 0x1e75, 0x34ef, 0xefa3, 0x1, 0x1);
        gbc.writeMem(0xabdb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x206f);
        EXPECT(gbc.pc(), 0xabdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabdb), 0xcb);
        EXPECT(gbc.readMem(0xabdc), 0x87);
        // CB 87 02C4
        gbc.setState(0x587f, 0xb39a, 0x4ea0, 0xbea6, 0x2e8e, 0x657b, 0x1, 0x1);
        gbc.writeMem(0x587f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb39a);
        EXPECT(gbc.pc(), 0x5881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02C5
        gbc.setState(0x16c, 0xd984, 0x2700, 0xca25, 0x45cb, 0xcc9c, 0x1, 0x0);
        gbc.writeMem(0x16c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd984);
        EXPECT(gbc.pc(), 0x16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02C6
        gbc.setState(0xeea1, 0xbf8f, 0xb5b0, 0x4073, 0xf009, 0x966b, 0x1, 0x0);
        gbc.writeMem(0xeea1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbf8f);
        EXPECT(gbc.pc(), 0xeea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea1), 0xcb);
        EXPECT(gbc.readMem(0xeea2), 0x87);
        // CB 87 02C7
        gbc.setState(0x7cc8, 0x1147, 0x3630, 0x61a3, 0x2653, 0xd385, 0x0, 0x1);
        gbc.writeMem(0x7cc8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1147);
        EXPECT(gbc.pc(), 0x7cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02C8
        gbc.setState(0x3929, 0xdab4, 0x8100, 0xd38d, 0xefc, 0xc9e6, 0x0, 0x0);
        gbc.writeMem(0x3929, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdab4);
        EXPECT(gbc.pc(), 0x392b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02C9
        gbc.setState(0x30be, 0x4a7a, 0x3c0, 0xcd0b, 0x99dc, 0xc468, 0x0, 0x0);
        gbc.writeMem(0x30be, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4a7a);
        EXPECT(gbc.pc(), 0x30c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02CA
        gbc.setState(0xba15, 0x42fa, 0x1d00, 0x9ca8, 0xf88c, 0xeb9b, 0x0, 0x0);
        gbc.writeMem(0xba15, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x42fa);
        EXPECT(gbc.pc(), 0xba17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba15), 0xcb);
        EXPECT(gbc.readMem(0xba16), 0x87);
        // CB 87 02CB
        gbc.setState(0x9286, 0x126a, 0x70d0, 0x5323, 0x26c7, 0xb35, 0x1, 0x1);
        gbc.writeMem(0x9286, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x126a);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9286), 0xcb);
        EXPECT(gbc.readMem(0x9287), 0x87);
        // CB 87 02CC
        gbc.setState(0x12b7, 0xcbde, 0x5cb0, 0xab35, 0x2126, 0x7c5a, 0x0, 0x0);
        gbc.writeMem(0x12b7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcbde);
        EXPECT(gbc.pc(), 0x12b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02CD
        gbc.setState(0x638, 0x6bd6, 0xae80, 0x4ee6, 0x3016, 0xf3ff, 0x0, 0x1);
        gbc.writeMem(0x638, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6bd6);
        EXPECT(gbc.pc(), 0x63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02CE
        gbc.setState(0x7427, 0xdb3, 0x2140, 0xc4ac, 0x7944, 0xaa34, 0x0, 0x1);
        gbc.writeMem(0x7427, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdb3);
        EXPECT(gbc.pc(), 0x7429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02CF
        gbc.setState(0xb6f2, 0x8843, 0xd000, 0xd178, 0xcb60, 0x608a, 0x1, 0x0);
        gbc.writeMem(0xb6f2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8843);
        EXPECT(gbc.pc(), 0xb6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f2), 0xcb);
        EXPECT(gbc.readMem(0xb6f3), 0x87);
        // CB 87 02D0
        gbc.setState(0x311f, 0x9d96, 0x930, 0x9032, 0x5e3f, 0xb7eb, 0x0, 0x0);
        gbc.writeMem(0x311f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9d96);
        EXPECT(gbc.pc(), 0x3121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02D1
        gbc.setState(0x5cd4, 0x1013, 0x7120, 0x3889, 0x9e4d, 0x24b1, 0x0, 0x1);
        gbc.writeMem(0x5cd4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1013);
        EXPECT(gbc.pc(), 0x5cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02D2
        gbc.setState(0x8e95, 0xfac3, 0x13d0, 0x2cad, 0x11d, 0xd758, 0x1, 0x1);
        gbc.writeMem(0x8e95, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfac3);
        EXPECT(gbc.pc(), 0x8e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e95), 0xcb);
        EXPECT(gbc.readMem(0x8e96), 0x87);
        // CB 87 02D3
        gbc.setState(0x4f0, 0x482a, 0x6d0, 0x76a3, 0x382a, 0x240, 0x0, 0x0);
        gbc.writeMem(0x4f0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x482a);
        EXPECT(gbc.pc(), 0x4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02D4
        gbc.setState(0x1e3e, 0x910b, 0xe670, 0xf093, 0xeb, 0x98c1, 0x0, 0x0);
        gbc.writeMem(0x1e3e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x910b);
        EXPECT(gbc.pc(), 0x1e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02D5
        gbc.setState(0xda5, 0xfed0, 0xb580, 0x54c7, 0x5b6, 0x956a, 0x1, 0x1);
        gbc.writeMem(0xda5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfed0);
        EXPECT(gbc.pc(), 0xda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02D7
        gbc.setState(0xca03, 0xa89e, 0x43a0, 0x4676, 0xcbfd, 0xc2a0, 0x1, 0x0);
        gbc.writeMem(0xca03, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa89e);
        EXPECT(gbc.pc(), 0xca05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca03), 0xcb);
        EXPECT(gbc.readMem(0xca04), 0x87);
        // CB 87 02D8
        gbc.setState(0x3b42, 0x176e, 0x4810, 0x3215, 0x52c1, 0x5d3f, 0x0, 0x0);
        gbc.writeMem(0x3b42, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x176e);
        EXPECT(gbc.pc(), 0x3b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02D9
        gbc.setState(0xb7e6, 0xfc75, 0x5770, 0x35c1, 0x3023, 0x78d7, 0x0, 0x1);
        gbc.writeMem(0xb7e6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfc75);
        EXPECT(gbc.pc(), 0xb7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e6), 0xcb);
        EXPECT(gbc.readMem(0xb7e7), 0x87);
        // CB 87 02DA
        gbc.setState(0xcea7, 0x5952, 0xbdf0, 0xea98, 0x979a, 0x105b, 0x1, 0x1);
        gbc.writeMem(0xcea7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5952);
        EXPECT(gbc.pc(), 0xcea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea7), 0xcb);
        EXPECT(gbc.readMem(0xcea8), 0x87);
        // CB 87 02DB
        gbc.setState(0x5346, 0x7c86, 0xb60, 0xe4ed, 0xc085, 0x5b54, 0x1, 0x0);
        gbc.writeMem(0x5346, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7c86);
        EXPECT(gbc.pc(), 0x5348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02DC
        gbc.setState(0xa252, 0xce5a, 0xabc0, 0xd989, 0x7bea, 0xf1b0, 0x1, 0x0);
        gbc.writeMem(0xa252, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xce5a);
        EXPECT(gbc.pc(), 0xa254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa252), 0xcb);
        EXPECT(gbc.readMem(0xa253), 0x87);
        // CB 87 02DD
        gbc.setState(0x2c52, 0xa9d4, 0x6630, 0x9b61, 0x5d7f, 0x5e5c, 0x1, 0x0);
        gbc.writeMem(0x2c52, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa9d4);
        EXPECT(gbc.pc(), 0x2c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02DE
        gbc.setState(0x3d1e, 0x7cc0, 0xf030, 0x7bf, 0xe68c, 0x6ddd, 0x1, 0x1);
        gbc.writeMem(0x3d1e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7cc0);
        EXPECT(gbc.pc(), 0x3d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02DF
        gbc.setState(0x5254, 0x9da3, 0x9ce0, 0xa07a, 0x7bf3, 0xa9e3, 0x1, 0x1);
        gbc.writeMem(0x5254, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9da3);
        EXPECT(gbc.pc(), 0x5256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02E0
        gbc.setState(0xe60f, 0x59eb, 0x170, 0xfc17, 0x68c0, 0x3394, 0x0, 0x0);
        gbc.writeMem(0xe60f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x59eb);
        EXPECT(gbc.pc(), 0xe611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60f), 0xcb);
        EXPECT(gbc.readMem(0xe610), 0x87);
        // CB 87 02E1
        gbc.setState(0x30e0, 0x8abb, 0xc740, 0x5a28, 0x160c, 0x73f1, 0x1, 0x0);
        gbc.writeMem(0x30e0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8abb);
        EXPECT(gbc.pc(), 0x30e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02E2
        gbc.setState(0x938a, 0x1aeb, 0x7dd0, 0x99b7, 0xdf48, 0x8d04, 0x0, 0x1);
        gbc.writeMem(0x938a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1aeb);
        EXPECT(gbc.pc(), 0x938c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938a), 0xcb);
        EXPECT(gbc.readMem(0x938b), 0x87);
        // CB 87 02E3
        gbc.setState(0x6fe0, 0xf2da, 0x6400, 0x4e9e, 0x7831, 0xbacb, 0x1, 0x0);
        gbc.writeMem(0x6fe0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf2da);
        EXPECT(gbc.pc(), 0x6fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02E4
        gbc.setState(0x17d5, 0x79a1, 0xc1a0, 0xf3a3, 0xa88, 0xc84b, 0x0, 0x1);
        gbc.writeMem(0x17d5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x79a1);
        EXPECT(gbc.pc(), 0x17d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02E5
        gbc.setState(0xd4ac, 0xe66c, 0xd840, 0x71fc, 0x7dc5, 0x2d73, 0x0, 0x1);
        gbc.writeMem(0xd4ac, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe66c);
        EXPECT(gbc.pc(), 0xd4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ac), 0xcb);
        EXPECT(gbc.readMem(0xd4ad), 0x87);
        // CB 87 02E6
        gbc.setState(0x687c, 0x5c5, 0xb5f0, 0x2509, 0x2e86, 0x2c41, 0x1, 0x0);
        gbc.writeMem(0x687c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5c5);
        EXPECT(gbc.pc(), 0x687e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02E7
        gbc.setState(0xa4, 0x5984, 0x3160, 0x4bb4, 0xc489, 0x8413, 0x1, 0x1);
        gbc.writeMem(0xa4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5984);
        EXPECT(gbc.pc(), 0xa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02E9
        gbc.setState(0xc24a, 0x8216, 0xf8e0, 0x5e9c, 0xd4b4, 0xa00d, 0x0, 0x1);
        gbc.writeMem(0xc24a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8216);
        EXPECT(gbc.pc(), 0xc24c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24a), 0xcb);
        EXPECT(gbc.readMem(0xc24b), 0x87);
        // CB 87 02EB
        gbc.setState(0xe9be, 0xd5aa, 0xfd70, 0xc3c9, 0x5af1, 0x2f27, 0x1, 0x1);
        gbc.writeMem(0xe9be, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd5aa);
        EXPECT(gbc.pc(), 0xe9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9be), 0xcb);
        EXPECT(gbc.readMem(0xe9bf), 0x87);
        // CB 87 02EC
        gbc.setState(0xc691, 0xc47a, 0x7e20, 0xc649, 0x9da, 0x549d, 0x0, 0x1);
        gbc.writeMem(0xc691, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc47a);
        EXPECT(gbc.pc(), 0xc693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc691), 0xcb);
        EXPECT(gbc.readMem(0xc692), 0x87);
        // CB 87 02ED
        gbc.setState(0x5ec1, 0x954, 0xda20, 0x19da, 0x4316, 0xd435, 0x1, 0x0);
        gbc.writeMem(0x5ec1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x954);
        EXPECT(gbc.pc(), 0x5ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02EF
        gbc.setState(0x8833, 0xb501, 0xeb30, 0xc1e8, 0x14de, 0xc11a, 0x1, 0x0);
        gbc.writeMem(0x8833, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb501);
        EXPECT(gbc.pc(), 0x8835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8833), 0xcb);
        EXPECT(gbc.readMem(0x8834), 0x87);
        // CB 87 02F0
        gbc.setState(0x3c0, 0x3f6f, 0x60f0, 0x454, 0x8891, 0xc907, 0x1, 0x1);
        gbc.writeMem(0x3c0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3f6f);
        EXPECT(gbc.pc(), 0x3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02F1
        gbc.setState(0x62af, 0xf7d1, 0xf560, 0x44ee, 0x53db, 0x502a, 0x1, 0x0);
        gbc.writeMem(0x62af, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf7d1);
        EXPECT(gbc.pc(), 0x62b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02F2
        gbc.setState(0xbe6, 0xe280, 0xb490, 0xec33, 0x2a50, 0xb0d1, 0x0, 0x0);
        gbc.writeMem(0xbe6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe280);
        EXPECT(gbc.pc(), 0xbe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02F3
        gbc.setState(0x4845, 0xea7e, 0xc380, 0xe23, 0xb4ba, 0x4889, 0x1, 0x0);
        gbc.writeMem(0x4845, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xea7e);
        EXPECT(gbc.pc(), 0x4847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02F4
        gbc.setState(0x23a1, 0xce62, 0xba70, 0x59fd, 0xa01, 0x828a, 0x0, 0x1);
        gbc.writeMem(0x23a1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xce62);
        EXPECT(gbc.pc(), 0x23a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02F5
        gbc.setState(0x8c43, 0xfc12, 0x1e90, 0x7906, 0x8618, 0x731b, 0x1, 0x0);
        gbc.writeMem(0x8c43, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfc12);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c43), 0xcb);
        EXPECT(gbc.readMem(0x8c44), 0x87);
        // CB 87 02F6
        gbc.setState(0x8295, 0xeeb2, 0xf910, 0xb35a, 0x9671, 0x31c6, 0x0, 0x1);
        gbc.writeMem(0x8295, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xeeb2);
        EXPECT(gbc.pc(), 0x8297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8295), 0xcb);
        EXPECT(gbc.readMem(0x8296), 0x87);
        // CB 87 02F7
        gbc.setState(0x9c3c, 0xc3f, 0xdad0, 0xd74a, 0xc252, 0x77a6, 0x1, 0x1);
        gbc.writeMem(0x9c3c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc3f);
        EXPECT(gbc.pc(), 0x9c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3c), 0xcb);
        EXPECT(gbc.readMem(0x9c3d), 0x87);
        // CB 87 02F8
        gbc.setState(0x43fd, 0x6a91, 0x27a0, 0x38bf, 0x6695, 0xe8ba, 0x0, 0x0);
        gbc.writeMem(0x43fd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6a91);
        EXPECT(gbc.pc(), 0x43ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02F9
        gbc.setState(0x47d2, 0x9520, 0x2b80, 0x5614, 0xcf07, 0x59a9, 0x1, 0x0);
        gbc.writeMem(0x47d2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9520);
        EXPECT(gbc.pc(), 0x47d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 02FA
        gbc.setState(0xbbf6, 0x4e9d, 0x8df0, 0x17ab, 0x26be, 0x4b8c, 0x0, 0x0);
        gbc.writeMem(0xbbf6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4e9d);
        EXPECT(gbc.pc(), 0xbbf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf6), 0xcb);
        EXPECT(gbc.readMem(0xbbf7), 0x87);
        // CB 87 02FB
        gbc.setState(0xe815, 0x7e6c, 0xac40, 0x7caf, 0x7cd0, 0xeb05, 0x1, 0x1);
        gbc.writeMem(0xe815, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7e6c);
        EXPECT(gbc.pc(), 0xe817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe815), 0xcb);
        EXPECT(gbc.readMem(0xe816), 0x87);
        // CB 87 02FC
        gbc.setState(0xe3e1, 0xddb6, 0x7180, 0x9b67, 0x11e2, 0x6c6e, 0x1, 0x1);
        gbc.writeMem(0xe3e1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xddb6);
        EXPECT(gbc.pc(), 0xe3e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e1), 0xcb);
        EXPECT(gbc.readMem(0xe3e2), 0x87);
        // CB 87 02FD
        gbc.setState(0x301d, 0x7405, 0x5810, 0xacc2, 0x68b5, 0xb884, 0x0, 0x1);
        gbc.writeMem(0x301d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7405);
        EXPECT(gbc.pc(), 0x301f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 02FE
        gbc.setState(0x8826, 0x854c, 0xc930, 0x781e, 0x934e, 0xdf87, 0x0, 0x0);
        gbc.writeMem(0x8826, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x854c);
        EXPECT(gbc.pc(), 0x8828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8826), 0xcb);
        EXPECT(gbc.readMem(0x8827), 0x87);
        // CB 87 02FF
        gbc.setState(0x82ff, 0x584f, 0xc300, 0xe72a, 0xc368, 0x1092, 0x0, 0x1);
        gbc.writeMem(0x82ff, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x584f);
        EXPECT(gbc.pc(), 0x8301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ff), 0xcb);
        EXPECT(gbc.readMem(0x8300), 0x87);
        // CB 87 0300
        gbc.setState(0xd8c2, 0x2de9, 0xc650, 0x6c58, 0x85bb, 0x8a, 0x1, 0x0);
        gbc.writeMem(0xd8c2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2de9);
        EXPECT(gbc.pc(), 0xd8c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c2), 0xcb);
        EXPECT(gbc.readMem(0xd8c3), 0x87);
        // CB 87 0301
        gbc.setState(0x3330, 0x4a3e, 0xda10, 0x2fdc, 0x4792, 0xd67c, 0x0, 0x1);
        gbc.writeMem(0x3330, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4a3e);
        EXPECT(gbc.pc(), 0x3332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0302
        gbc.setState(0x4f4b, 0xc8d6, 0x2f80, 0xf90e, 0x4283, 0xdc21, 0x1, 0x1);
        gbc.writeMem(0x4f4b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc8d6);
        EXPECT(gbc.pc(), 0x4f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0303
        gbc.setState(0xeda8, 0x3dcf, 0x5710, 0x776a, 0xba65, 0x2322, 0x0, 0x1);
        gbc.writeMem(0xeda8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3dcf);
        EXPECT(gbc.pc(), 0xedaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda8), 0xcb);
        EXPECT(gbc.readMem(0xeda9), 0x87);
        // CB 87 0304
        gbc.setState(0x48f, 0x5d61, 0xef90, 0xd7d, 0x33e3, 0xc874, 0x1, 0x0);
        gbc.writeMem(0x48f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5d61);
        EXPECT(gbc.pc(), 0x491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0305
        gbc.setState(0x225e, 0x3743, 0xb440, 0xa235, 0x9f94, 0xbda1, 0x1, 0x0);
        gbc.writeMem(0x225e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3743);
        EXPECT(gbc.pc(), 0x2260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0306
        gbc.setState(0x1425, 0xa1ae, 0x1ae0, 0xf8c9, 0xcda0, 0xa6b0, 0x0, 0x1);
        gbc.writeMem(0x1425, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa1ae);
        EXPECT(gbc.pc(), 0x1427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0307
        gbc.setState(0x4839, 0xbdaf, 0x34e0, 0xef1b, 0x9d00, 0x1d3c, 0x1, 0x1);
        gbc.writeMem(0x4839, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbdaf);
        EXPECT(gbc.pc(), 0x483b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0308
        gbc.setState(0xd422, 0x320c, 0x360, 0xc376, 0xa82e, 0x25b7, 0x1, 0x1);
        gbc.writeMem(0xd422, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x320c);
        EXPECT(gbc.pc(), 0xd424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd422), 0xcb);
        EXPECT(gbc.readMem(0xd423), 0x87);
        // CB 87 0309
        gbc.setState(0x9896, 0xaed9, 0xe8a0, 0xd41b, 0x5a25, 0x31d4, 0x1, 0x1);
        gbc.writeMem(0x9896, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xaed9);
        EXPECT(gbc.pc(), 0x9898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9896), 0xcb);
        EXPECT(gbc.readMem(0x9897), 0x87);
        // CB 87 030A
        gbc.setState(0x9b36, 0x1979, 0x4060, 0x7511, 0x2a2f, 0x8e72, 0x0, 0x1);
        gbc.writeMem(0x9b36, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1979);
        EXPECT(gbc.pc(), 0x9b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b36), 0xcb);
        EXPECT(gbc.readMem(0x9b37), 0x87);
        // CB 87 030B
        gbc.setState(0x758d, 0x65c9, 0x5cb0, 0x7157, 0x8af5, 0x8112, 0x0, 0x1);
        gbc.writeMem(0x758d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x65c9);
        EXPECT(gbc.pc(), 0x758f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 030C
        gbc.setState(0x45b2, 0x417f, 0xa960, 0x31cd, 0x9cd6, 0xa7c5, 0x1, 0x0);
        gbc.writeMem(0x45b2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0x45b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 030D
        gbc.setState(0x5aa9, 0x155e, 0x6a40, 0x2613, 0x19b6, 0x6561, 0x1, 0x0);
        gbc.writeMem(0x5aa9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x155e);
        EXPECT(gbc.pc(), 0x5aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 030E
        gbc.setState(0x7519, 0x5783, 0x5a40, 0xaae2, 0x9c60, 0xfb96, 0x1, 0x0);
        gbc.writeMem(0x7519, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5783);
        EXPECT(gbc.pc(), 0x751b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 030F
        gbc.setState(0xb5a5, 0x8bec, 0x4e30, 0xbb04, 0xf173, 0xa9b3, 0x0, 0x0);
        gbc.writeMem(0xb5a5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8bec);
        EXPECT(gbc.pc(), 0xb5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a5), 0xcb);
        EXPECT(gbc.readMem(0xb5a6), 0x87);
        // CB 87 0310
        gbc.setState(0x671d, 0x1afc, 0x5470, 0x1d8e, 0x99e2, 0x7aa3, 0x0, 0x1);
        gbc.writeMem(0x671d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1afc);
        EXPECT(gbc.pc(), 0x671f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0311
        gbc.setState(0x15b6, 0xa7c4, 0x27d0, 0x1c7c, 0x3f5, 0xed06, 0x0, 0x1);
        gbc.writeMem(0x15b6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa7c4);
        EXPECT(gbc.pc(), 0x15b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0312
        gbc.setState(0xe60e, 0x6ca5, 0x9a00, 0x6fd6, 0xb3f0, 0xa7ce, 0x1, 0x0);
        gbc.writeMem(0xe60e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6ca5);
        EXPECT(gbc.pc(), 0xe610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe60e), 0xcb);
        EXPECT(gbc.readMem(0xe60f), 0x87);
        // CB 87 0313
        gbc.setState(0xa307, 0xb3df, 0x44f0, 0x745a, 0x160c, 0x783f, 0x0, 0x1);
        gbc.writeMem(0xa307, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb3df);
        EXPECT(gbc.pc(), 0xa309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa307), 0xcb);
        EXPECT(gbc.readMem(0xa308), 0x87);
        // CB 87 0314
        gbc.setState(0x4b01, 0x2886, 0xbef0, 0xc003, 0x872f, 0xc9f4, 0x0, 0x0);
        gbc.writeMem(0x4b01, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2886);
        EXPECT(gbc.pc(), 0x4b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0315
        gbc.setState(0x20fd, 0xb638, 0x3500, 0xdade, 0xd0ba, 0x2f42, 0x1, 0x0);
        gbc.writeMem(0x20fd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb638);
        EXPECT(gbc.pc(), 0x20ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0316
        gbc.setState(0x7aa4, 0xcd68, 0x9f60, 0xc078, 0x7d43, 0xe69, 0x1, 0x1);
        gbc.writeMem(0x7aa4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcd68);
        EXPECT(gbc.pc(), 0x7aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0317
        gbc.setState(0x8d01, 0xf23e, 0x8a10, 0x98b7, 0x6d53, 0x3531, 0x1, 0x0);
        gbc.writeMem(0x8d01, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf23e);
        EXPECT(gbc.pc(), 0x8d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d01), 0xcb);
        EXPECT(gbc.readMem(0x8d02), 0x87);
        // CB 87 0318
        gbc.setState(0x64b8, 0x35ae, 0x19b0, 0xcd75, 0x9f1a, 0xb835, 0x1, 0x1);
        gbc.writeMem(0x64b8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x35ae);
        EXPECT(gbc.pc(), 0x64ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0319
        gbc.setState(0x2db2, 0xed5e, 0x20f0, 0x5fa5, 0x6b26, 0x4708, 0x0, 0x0);
        gbc.writeMem(0x2db2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xed5e);
        EXPECT(gbc.pc(), 0x2db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 031A
        gbc.setState(0x4a77, 0x1f4c, 0x2890, 0x6e3, 0x3c, 0x392e, 0x0, 0x0);
        gbc.writeMem(0x4a77, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1f4c);
        EXPECT(gbc.pc(), 0x4a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 031B
        gbc.setState(0xaf56, 0x317b, 0xe1d0, 0xf36e, 0xeb77, 0x5a50, 0x1, 0x1);
        gbc.writeMem(0xaf56, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x317b);
        EXPECT(gbc.pc(), 0xaf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf56), 0xcb);
        EXPECT(gbc.readMem(0xaf57), 0x87);
        // CB 87 031C
        gbc.setState(0xe9d9, 0x3977, 0xe940, 0x7472, 0x79ae, 0x4544, 0x1, 0x0);
        gbc.writeMem(0xe9d9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3977);
        EXPECT(gbc.pc(), 0xe9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d9), 0xcb);
        EXPECT(gbc.readMem(0xe9da), 0x87);
        // CB 87 031D
        gbc.setState(0x7770, 0x7226, 0xf270, 0x1d4f, 0x36a3, 0xa1f8, 0x1, 0x1);
        gbc.writeMem(0x7770, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7226);
        EXPECT(gbc.pc(), 0x7772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 031E
        gbc.setState(0x7d75, 0x1e83, 0xd2f0, 0xd2e7, 0x4709, 0x5d95, 0x0, 0x0);
        gbc.writeMem(0x7d75, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1e83);
        EXPECT(gbc.pc(), 0x7d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 031F
        gbc.setState(0x9ec8, 0x9844, 0x25c0, 0xa275, 0xaeb2, 0x7eac, 0x1, 0x1);
        gbc.writeMem(0x9ec8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9844);
        EXPECT(gbc.pc(), 0x9eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec8), 0xcb);
        EXPECT(gbc.readMem(0x9ec9), 0x87);
        // CB 87 0320
        gbc.setState(0x8497, 0x4cf8, 0x9ad0, 0xed9f, 0xf50b, 0x55c, 0x0, 0x1);
        gbc.writeMem(0x8497, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4cf8);
        EXPECT(gbc.pc(), 0x8499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8497), 0xcb);
        EXPECT(gbc.readMem(0x8498), 0x87);
        // CB 87 0321
        gbc.setState(0x84ba, 0x12e1, 0x4a50, 0xc141, 0x6a38, 0x4607, 0x0, 0x0);
        gbc.writeMem(0x84ba, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x12e1);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ba), 0xcb);
        EXPECT(gbc.readMem(0x84bb), 0x87);
        // CB 87 0322
        gbc.setState(0x5463, 0xe27e, 0x7580, 0xb632, 0x6f01, 0x38f3, 0x1, 0x0);
        gbc.writeMem(0x5463, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe27e);
        EXPECT(gbc.pc(), 0x5465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0323
        gbc.setState(0x98d, 0x33c8, 0x4c30, 0x676d, 0xee1f, 0x26f7, 0x0, 0x0);
        gbc.writeMem(0x98d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x33c8);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0324
        gbc.setState(0xbbdf, 0xb97e, 0x3140, 0x315a, 0x7a3f, 0x9d23, 0x1, 0x1);
        gbc.writeMem(0xbbdf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb97e);
        EXPECT(gbc.pc(), 0xbbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdf), 0xcb);
        EXPECT(gbc.readMem(0xbbe0), 0x87);
        // CB 87 0325
        gbc.setState(0xc645, 0xd737, 0xc890, 0x573f, 0x3d45, 0x9e08, 0x1, 0x1);
        gbc.writeMem(0xc645, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd737);
        EXPECT(gbc.pc(), 0xc647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc645), 0xcb);
        EXPECT(gbc.readMem(0xc646), 0x87);
        // CB 87 0326
        gbc.setState(0xb2f2, 0x4d31, 0xa450, 0xaf8d, 0xb326, 0x9eb6, 0x1, 0x1);
        gbc.writeMem(0xb2f2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4d31);
        EXPECT(gbc.pc(), 0xb2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f2), 0xcb);
        EXPECT(gbc.readMem(0xb2f3), 0x87);
        // CB 87 0327
        gbc.setState(0x29c7, 0xc6c6, 0xb8c0, 0x95ea, 0xce00, 0x2544, 0x1, 0x1);
        gbc.writeMem(0x29c7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc6c6);
        EXPECT(gbc.pc(), 0x29c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0329
        gbc.setState(0x8519, 0x5531, 0x5700, 0x286f, 0xea92, 0xb8f6, 0x0, 0x1);
        gbc.writeMem(0x8519, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5531);
        EXPECT(gbc.pc(), 0x851b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8519), 0xcb);
        EXPECT(gbc.readMem(0x851a), 0x87);
        // CB 87 032A
        gbc.setState(0x2bf0, 0x6ee5, 0xf5e0, 0x8097, 0xf423, 0x9ea3, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6ee5);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 032B
        gbc.setState(0x4142, 0xbb2c, 0x9e80, 0xb0d4, 0x1a94, 0xf974, 0x1, 0x0);
        gbc.writeMem(0x4142, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbb2c);
        EXPECT(gbc.pc(), 0x4144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 032C
        gbc.setState(0x7771, 0xe1dc, 0x9b60, 0x87b5, 0xeae, 0xb30c, 0x0, 0x1);
        gbc.writeMem(0x7771, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe1dc);
        EXPECT(gbc.pc(), 0x7773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 032D
        gbc.setState(0x7758, 0x24e5, 0x2240, 0xfeb3, 0xb994, 0x89bb, 0x0, 0x0);
        gbc.writeMem(0x7758, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x24e5);
        EXPECT(gbc.pc(), 0x775a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 032E
        gbc.setState(0x9811, 0x1be9, 0xdbf0, 0x1deb, 0xdf98, 0x43f8, 0x0, 0x1);
        gbc.writeMem(0x9811, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1be9);
        EXPECT(gbc.pc(), 0x9813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9811), 0xcb);
        EXPECT(gbc.readMem(0x9812), 0x87);
        // CB 87 032F
        gbc.setState(0x770f, 0xd38c, 0x6b0, 0xec07, 0xc878, 0xeded, 0x0, 0x0);
        gbc.writeMem(0x770f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd38c);
        EXPECT(gbc.pc(), 0x7711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0330
        gbc.setState(0x1f88, 0xf1fe, 0x2520, 0x25d7, 0x2a25, 0x1b6e, 0x0, 0x0);
        gbc.writeMem(0x1f88, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf1fe);
        EXPECT(gbc.pc(), 0x1f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0331
        gbc.setState(0xca01, 0xaf6b, 0xd760, 0x1b81, 0xfe55, 0xb3b1, 0x1, 0x1);
        gbc.writeMem(0xca01, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaf6b);
        EXPECT(gbc.pc(), 0xca03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca01), 0xcb);
        EXPECT(gbc.readMem(0xca02), 0x87);
        // CB 87 0332
        gbc.setState(0x95ed, 0x3c7, 0x2170, 0xf721, 0x8615, 0xeba8, 0x0, 0x1);
        gbc.writeMem(0x95ed, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3c7);
        EXPECT(gbc.pc(), 0x95ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ed), 0xcb);
        EXPECT(gbc.readMem(0x95ee), 0x87);
        // CB 87 0333
        gbc.setState(0xc53e, 0xdb50, 0x3a50, 0x63c, 0x350f, 0x653c, 0x1, 0x1);
        gbc.writeMem(0xc53e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdb50);
        EXPECT(gbc.pc(), 0xc540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53e), 0xcb);
        EXPECT(gbc.readMem(0xc53f), 0x87);
        // CB 87 0334
        gbc.setState(0xb784, 0x5b3d, 0xcac0, 0x5e5a, 0xcd37, 0x59c, 0x0, 0x0);
        gbc.writeMem(0xb784, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5b3d);
        EXPECT(gbc.pc(), 0xb786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb784), 0xcb);
        EXPECT(gbc.readMem(0xb785), 0x87);
        // CB 87 0335
        gbc.setState(0xee93, 0xa4f1, 0x37c0, 0x51d, 0xfddd, 0x2a30, 0x0, 0x0);
        gbc.writeMem(0xee93, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa4f1);
        EXPECT(gbc.pc(), 0xee95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee93), 0xcb);
        EXPECT(gbc.readMem(0xee94), 0x87);
        // CB 87 0336
        gbc.setState(0x221b, 0xae53, 0xe8c0, 0x2ada, 0xef69, 0x3ec1, 0x1, 0x0);
        gbc.writeMem(0x221b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xae53);
        EXPECT(gbc.pc(), 0x221d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0337
        gbc.setState(0xdc22, 0xaee8, 0xe370, 0xac74, 0xc748, 0x47c9, 0x1, 0x0);
        gbc.writeMem(0xdc22, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaee8);
        EXPECT(gbc.pc(), 0xdc24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc22), 0xcb);
        EXPECT(gbc.readMem(0xdc23), 0x87);
        // CB 87 0338
        gbc.setState(0x2a69, 0x2039, 0xc8e0, 0xf7f9, 0xe74c, 0x31d, 0x0, 0x1);
        gbc.writeMem(0x2a69, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2039);
        EXPECT(gbc.pc(), 0x2a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0339
        gbc.setState(0x6a49, 0x14d3, 0xc9c0, 0xe14b, 0x2e26, 0x6512, 0x0, 0x0);
        gbc.writeMem(0x6a49, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x14d3);
        EXPECT(gbc.pc(), 0x6a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 033A
        gbc.setState(0x19eb, 0xda6e, 0x11e0, 0x35a7, 0x8446, 0xcb1a, 0x1, 0x1);
        gbc.writeMem(0x19eb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xda6e);
        EXPECT(gbc.pc(), 0x19ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 033B
        gbc.setState(0x3a9f, 0xf541, 0xee0, 0xb657, 0x949d, 0x82ec, 0x0, 0x0);
        gbc.writeMem(0x3a9f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf541);
        EXPECT(gbc.pc(), 0x3aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 033C
        gbc.setState(0x5a5f, 0xe8c8, 0x2740, 0x729f, 0x8fbb, 0xc3ae, 0x0, 0x0);
        gbc.writeMem(0x5a5f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe8c8);
        EXPECT(gbc.pc(), 0x5a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 033D
        gbc.setState(0x1ba, 0x77e6, 0xb5d0, 0xf9bd, 0x3583, 0xd2e1, 0x0, 0x1);
        gbc.writeMem(0x1ba, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x77e6);
        EXPECT(gbc.pc(), 0x1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 033E
        gbc.setState(0x7e50, 0x4002, 0x9440, 0x6131, 0xb705, 0xe05c, 0x1, 0x1);
        gbc.writeMem(0x7e50, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4002);
        EXPECT(gbc.pc(), 0x7e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 033F
        gbc.setState(0x8bfe, 0xe48d, 0x9370, 0xb1cc, 0x56cf, 0x5b, 0x1, 0x1);
        gbc.writeMem(0x8bfe, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe48d);
        EXPECT(gbc.pc(), 0x8c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bfe), 0xcb);
        EXPECT(gbc.readMem(0x8bff), 0x87);
        // CB 87 0340
        gbc.setState(0x9fb0, 0x6b78, 0x2240, 0xc4f6, 0xad7d, 0xc58b, 0x1, 0x0);
        gbc.writeMem(0x9fb0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6b78);
        EXPECT(gbc.pc(), 0x9fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb0), 0xcb);
        EXPECT(gbc.readMem(0x9fb1), 0x87);
        // CB 87 0341
        gbc.setState(0x931e, 0xf9e3, 0xd460, 0xd118, 0x61f2, 0x6bc3, 0x1, 0x1);
        gbc.writeMem(0x931e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf9e3);
        EXPECT(gbc.pc(), 0x9320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x931e), 0xcb);
        EXPECT(gbc.readMem(0x931f), 0x87);
        // CB 87 0342
        gbc.setState(0xde88, 0xa635, 0xb3d0, 0xfc6a, 0x8c2a, 0xab00, 0x0, 0x1);
        gbc.writeMem(0xde88, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa635);
        EXPECT(gbc.pc(), 0xde8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde88), 0xcb);
        EXPECT(gbc.readMem(0xde89), 0x87);
        // CB 87 0343
        gbc.setState(0xd520, 0xa460, 0x9060, 0xda32, 0xbd6a, 0x67a9, 0x1, 0x0);
        gbc.writeMem(0xd520, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa460);
        EXPECT(gbc.pc(), 0xd522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd520), 0xcb);
        EXPECT(gbc.readMem(0xd521), 0x87);
        // CB 87 0344
        gbc.setState(0xe175, 0x22a8, 0x6fe0, 0x1ccd, 0x8cd8, 0x36eb, 0x1, 0x0);
        gbc.writeMem(0xe175, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x22a8);
        EXPECT(gbc.pc(), 0xe177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe175), 0xcb);
        EXPECT(gbc.readMem(0xe176), 0x87);
        // CB 87 0345
        gbc.setState(0x7dc2, 0xadc4, 0xb450, 0x448f, 0x7e59, 0xaeed, 0x1, 0x1);
        gbc.writeMem(0x7dc2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xadc4);
        EXPECT(gbc.pc(), 0x7dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0346
        gbc.setState(0x3fae, 0x26b, 0xf3f0, 0x91da, 0x992b, 0xb2a7, 0x0, 0x0);
        gbc.writeMem(0x3fae, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x26b);
        EXPECT(gbc.pc(), 0x3fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0347
        gbc.setState(0xc7d7, 0x211b, 0x5c50, 0x9215, 0x4e7, 0xa69d, 0x0, 0x1);
        gbc.writeMem(0xc7d7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x211b);
        EXPECT(gbc.pc(), 0xc7d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d7), 0xcb);
        EXPECT(gbc.readMem(0xc7d8), 0x87);
        // CB 87 0348
        gbc.setState(0x4151, 0xbf7f, 0xd170, 0xfa0a, 0xbaa0, 0x793c, 0x0, 0x0);
        gbc.writeMem(0x4151, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbf7f);
        EXPECT(gbc.pc(), 0x4153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0349
        gbc.setState(0xd98e, 0x986a, 0x40e0, 0x6185, 0x7a9c, 0xaf15, 0x1, 0x1);
        gbc.writeMem(0xd98e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x986a);
        EXPECT(gbc.pc(), 0xd990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98e), 0xcb);
        EXPECT(gbc.readMem(0xd98f), 0x87);
        // CB 87 034A
        gbc.setState(0xc9f5, 0xcefe, 0xf0b0, 0x7017, 0xc909, 0x4b2e, 0x1, 0x0);
        gbc.writeMem(0xc9f5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcefe);
        EXPECT(gbc.pc(), 0xc9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f5), 0xcb);
        EXPECT(gbc.readMem(0xc9f6), 0x87);
        // CB 87 034B
        gbc.setState(0xd7b6, 0xe209, 0x3a40, 0xee3d, 0x3813, 0x5e26, 0x1, 0x1);
        gbc.writeMem(0xd7b6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe209);
        EXPECT(gbc.pc(), 0xd7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b6), 0xcb);
        EXPECT(gbc.readMem(0xd7b7), 0x87);
        // CB 87 034C
        gbc.setState(0xbf8a, 0xcd36, 0x8810, 0x7ddf, 0xd20c, 0x7e28, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcd36);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8a), 0xcb);
        EXPECT(gbc.readMem(0xbf8b), 0x87);
        // CB 87 034D
        gbc.setState(0x8f51, 0x97ea, 0xb870, 0xfe4b, 0xa72c, 0x34d, 0x1, 0x1);
        gbc.writeMem(0x8f51, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x97ea);
        EXPECT(gbc.pc(), 0x8f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f51), 0xcb);
        EXPECT(gbc.readMem(0x8f52), 0x87);
        // CB 87 034F
        gbc.setState(0xf42, 0x8aa4, 0xd5d0, 0x3dbd, 0x4743, 0xdfa2, 0x0, 0x0);
        gbc.writeMem(0xf42, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8aa4);
        EXPECT(gbc.pc(), 0xf44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0350
        gbc.setState(0xc338, 0xa7ba, 0x2250, 0xfb18, 0xa353, 0x7c0f, 0x0, 0x1);
        gbc.writeMem(0xc338, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa7ba);
        EXPECT(gbc.pc(), 0xc33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc338), 0xcb);
        EXPECT(gbc.readMem(0xc339), 0x87);
        // CB 87 0351
        gbc.setState(0xa46b, 0x239, 0x7840, 0x54fd, 0xcff, 0xcb02, 0x1, 0x0);
        gbc.writeMem(0xa46b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x239);
        EXPECT(gbc.pc(), 0xa46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46b), 0xcb);
        EXPECT(gbc.readMem(0xa46c), 0x87);
        // CB 87 0352
        gbc.setState(0x78e, 0xf80a, 0x2ee0, 0x1681, 0xa8ce, 0x7b0b, 0x1, 0x0);
        gbc.writeMem(0x78e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf80a);
        EXPECT(gbc.pc(), 0x790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0353
        gbc.setState(0xa276, 0xa42c, 0xf5e0, 0xee8d, 0x6974, 0xd9d9, 0x0, 0x1);
        gbc.writeMem(0xa276, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa42c);
        EXPECT(gbc.pc(), 0xa278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa276), 0xcb);
        EXPECT(gbc.readMem(0xa277), 0x87);
        // CB 87 0354
        gbc.setState(0x3e8, 0x9a3a, 0xaf30, 0x4e34, 0x4541, 0xa128, 0x1, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9a3a);
        EXPECT(gbc.pc(), 0x3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0355
        gbc.setState(0x5768, 0xaeea, 0xda80, 0xf9ae, 0x9232, 0x2d9a, 0x1, 0x0);
        gbc.writeMem(0x5768, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xaeea);
        EXPECT(gbc.pc(), 0x576a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0356
        gbc.setState(0x1bd2, 0x110d, 0x2d30, 0x6f1f, 0x529a, 0xce07, 0x1, 0x0);
        gbc.writeMem(0x1bd2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x110d);
        EXPECT(gbc.pc(), 0x1bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0357
        gbc.setState(0x4296, 0x8825, 0x9220, 0xdb3, 0x4f24, 0x3f3f, 0x0, 0x1);
        gbc.writeMem(0x4296, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8825);
        EXPECT(gbc.pc(), 0x4298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0358
        gbc.setState(0xac6f, 0x2eb5, 0x2330, 0x5298, 0x780a, 0xc6b8, 0x1, 0x0);
        gbc.writeMem(0xac6f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2eb5);
        EXPECT(gbc.pc(), 0xac71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6f), 0xcb);
        EXPECT(gbc.readMem(0xac70), 0x87);
        // CB 87 0359
        gbc.setState(0x92aa, 0x3e39, 0xc40, 0xb7da, 0x1b3f, 0xc3e8, 0x1, 0x1);
        gbc.writeMem(0x92aa, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3e39);
        EXPECT(gbc.pc(), 0x92ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92aa), 0xcb);
        EXPECT(gbc.readMem(0x92ab), 0x87);
        // CB 87 035A
        gbc.setState(0x448e, 0x9d8f, 0xa610, 0x4bbf, 0x5807, 0xb955, 0x0, 0x1);
        gbc.writeMem(0x448e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9d8f);
        EXPECT(gbc.pc(), 0x4490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 035B
        gbc.setState(0x711e, 0xdbf, 0x21b0, 0xa338, 0x5860, 0xed9a, 0x0, 0x1);
        gbc.writeMem(0x711e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdbf);
        EXPECT(gbc.pc(), 0x7120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 035C
        gbc.setState(0x7e9b, 0x917e, 0x82a0, 0x406d, 0x14fe, 0x28b6, 0x0, 0x0);
        gbc.writeMem(0x7e9b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x917e);
        EXPECT(gbc.pc(), 0x7e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 035D
        gbc.setState(0x1f51, 0x391c, 0x16c0, 0xbdfc, 0x5f52, 0xd550, 0x0, 0x1);
        gbc.writeMem(0x1f51, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x391c);
        EXPECT(gbc.pc(), 0x1f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 035E
        gbc.setState(0xba0e, 0x39ac, 0x4310, 0x240e, 0x57db, 0x48bc, 0x1, 0x1);
        gbc.writeMem(0xba0e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x39ac);
        EXPECT(gbc.pc(), 0xba10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0e), 0xcb);
        EXPECT(gbc.readMem(0xba0f), 0x87);
        // CB 87 035F
        gbc.setState(0x771c, 0xba02, 0x370, 0xe5a3, 0x516c, 0x2350, 0x0, 0x1);
        gbc.writeMem(0x771c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xba02);
        EXPECT(gbc.pc(), 0x771e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0360
        gbc.setState(0x2b06, 0x531c, 0x75b0, 0xa3a6, 0x3d7f, 0x4d55, 0x1, 0x1);
        gbc.writeMem(0x2b06, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x531c);
        EXPECT(gbc.pc(), 0x2b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0361
        gbc.setState(0x4032, 0xcc7e, 0xf960, 0x826a, 0x8d57, 0x639, 0x0, 0x1);
        gbc.writeMem(0x4032, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcc7e);
        EXPECT(gbc.pc(), 0x4034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0362
        gbc.setState(0x9458, 0xfc96, 0xa230, 0x1215, 0xe90c, 0xd985, 0x0, 0x1);
        gbc.writeMem(0x9458, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfc96);
        EXPECT(gbc.pc(), 0x945a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9458), 0xcb);
        EXPECT(gbc.readMem(0x9459), 0x87);
        // CB 87 0363
        gbc.setState(0x357a, 0x12c0, 0x9310, 0x6d5b, 0x5781, 0x9db4, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x12c0);
        EXPECT(gbc.pc(), 0x357c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0364
        gbc.setState(0x501c, 0x7062, 0x9f0, 0xf206, 0xcfde, 0x6b3c, 0x1, 0x0);
        gbc.writeMem(0x501c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7062);
        EXPECT(gbc.pc(), 0x501e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0365
        gbc.setState(0xca34, 0x4464, 0x4910, 0x3b5a, 0xf7cf, 0xf52e, 0x1, 0x1);
        gbc.writeMem(0xca34, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4464);
        EXPECT(gbc.pc(), 0xca36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca34), 0xcb);
        EXPECT(gbc.readMem(0xca35), 0x87);
        // CB 87 0366
        gbc.setState(0xb288, 0xda68, 0x6510, 0x453d, 0x922c, 0x870b, 0x0, 0x1);
        gbc.writeMem(0xb288, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xda68);
        EXPECT(gbc.pc(), 0xb28a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb288), 0xcb);
        EXPECT(gbc.readMem(0xb289), 0x87);
        // CB 87 0367
        gbc.setState(0x8fc3, 0x7417, 0xf370, 0x3e19, 0x7727, 0xb9a1, 0x1, 0x0);
        gbc.writeMem(0x8fc3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7417);
        EXPECT(gbc.pc(), 0x8fc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc3), 0xcb);
        EXPECT(gbc.readMem(0x8fc4), 0x87);
        // CB 87 0368
        gbc.setState(0xa97b, 0x3b12, 0xd00, 0xb93c, 0x8f59, 0x3651, 0x1, 0x0);
        gbc.writeMem(0xa97b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3b12);
        EXPECT(gbc.pc(), 0xa97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97b), 0xcb);
        EXPECT(gbc.readMem(0xa97c), 0x87);
        // CB 87 0369
        gbc.setState(0x3a50, 0x3398, 0x3b00, 0xc1e8, 0x776a, 0xfd48, 0x0, 0x0);
        gbc.writeMem(0x3a50, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3398);
        EXPECT(gbc.pc(), 0x3a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 036A
        gbc.setState(0x67f7, 0x4345, 0xba00, 0x79c5, 0x6967, 0xb8fa, 0x1, 0x0);
        gbc.writeMem(0x67f7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4345);
        EXPECT(gbc.pc(), 0x67f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 036B
        gbc.setState(0x5032, 0x2315, 0x7da0, 0x5abb, 0x5361, 0xa56b, 0x0, 0x0);
        gbc.writeMem(0x5032, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2315);
        EXPECT(gbc.pc(), 0x5034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 036C
        gbc.setState(0x9222, 0x545d, 0x5de0, 0x4ce7, 0xd56a, 0xb58, 0x0, 0x1);
        gbc.writeMem(0x9222, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x545d);
        EXPECT(gbc.pc(), 0x9224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9222), 0xcb);
        EXPECT(gbc.readMem(0x9223), 0x87);
        // CB 87 036D
        gbc.setState(0x5b03, 0xa6f7, 0x93c0, 0xed3c, 0x1db6, 0x556f, 0x0, 0x1);
        gbc.writeMem(0x5b03, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa6f7);
        EXPECT(gbc.pc(), 0x5b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 036E
        gbc.setState(0x35e, 0xdfa7, 0xb3e0, 0xe901, 0x6c59, 0x1ec7, 0x1, 0x1);
        gbc.writeMem(0x35e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdfa7);
        EXPECT(gbc.pc(), 0x360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 036F
        gbc.setState(0x5b57, 0xfeab, 0xede0, 0x597, 0xa1e3, 0x269d, 0x0, 0x0);
        gbc.writeMem(0x5b57, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfeab);
        EXPECT(gbc.pc(), 0x5b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0370
        gbc.setState(0x9115, 0x5fed, 0x48c0, 0x2993, 0x52df, 0x6e8a, 0x1, 0x0);
        gbc.writeMem(0x9115, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5fed);
        EXPECT(gbc.pc(), 0x9117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9115), 0xcb);
        EXPECT(gbc.readMem(0x9116), 0x87);
        // CB 87 0371
        gbc.setState(0xb5b5, 0xc455, 0x65c0, 0x4f3e, 0x508e, 0x5021, 0x1, 0x0);
        gbc.writeMem(0xb5b5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc455);
        EXPECT(gbc.pc(), 0xb5b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b5), 0xcb);
        EXPECT(gbc.readMem(0xb5b6), 0x87);
        // CB 87 0372
        gbc.setState(0x4c6d, 0x29b, 0x5230, 0xc72d, 0x876b, 0xa2dd, 0x0, 0x1);
        gbc.writeMem(0x4c6d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x29b);
        EXPECT(gbc.pc(), 0x4c6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0373
        gbc.setState(0xaa28, 0x195b, 0xbdc0, 0x5593, 0xe93e, 0xfbb0, 0x1, 0x0);
        gbc.writeMem(0xaa28, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x195b);
        EXPECT(gbc.pc(), 0xaa2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa28), 0xcb);
        EXPECT(gbc.readMem(0xaa29), 0x87);
        // CB 87 0374
        gbc.setState(0x69c0, 0x3b26, 0xa2c0, 0xfb36, 0x33ed, 0x3f87, 0x0, 0x1);
        gbc.writeMem(0x69c0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3b26);
        EXPECT(gbc.pc(), 0x69c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0375
        gbc.setState(0x2fd0, 0xd86c, 0x6c60, 0x40f1, 0xd27d, 0xe65, 0x0, 0x0);
        gbc.writeMem(0x2fd0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd86c);
        EXPECT(gbc.pc(), 0x2fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0376
        gbc.setState(0xb3e8, 0x4db4, 0xbf70, 0xe072, 0x8f0a, 0x266, 0x1, 0x1);
        gbc.writeMem(0xb3e8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4db4);
        EXPECT(gbc.pc(), 0xb3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e8), 0xcb);
        EXPECT(gbc.readMem(0xb3e9), 0x87);
        // CB 87 0377
        gbc.setState(0x883e, 0xe943, 0x2850, 0xeb46, 0xb7d5, 0xab53, 0x1, 0x0);
        gbc.writeMem(0x883e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe943);
        EXPECT(gbc.pc(), 0x8840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x883e), 0xcb);
        EXPECT(gbc.readMem(0x883f), 0x87);
        // CB 87 0378
        gbc.setState(0x7426, 0x62c6, 0xaa60, 0xd693, 0x78e1, 0xf293, 0x0, 0x1);
        gbc.writeMem(0x7426, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x62c6);
        EXPECT(gbc.pc(), 0x7428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0379
        gbc.setState(0x4bf5, 0x14c9, 0x91c0, 0xecce, 0xd52, 0x5765, 0x0, 0x0);
        gbc.writeMem(0x4bf5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x14c9);
        EXPECT(gbc.pc(), 0x4bf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 037A
        gbc.setState(0x9479, 0x8761, 0x49f0, 0x883b, 0x1e54, 0x6920, 0x1, 0x1);
        gbc.writeMem(0x9479, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8761);
        EXPECT(gbc.pc(), 0x947b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9479), 0xcb);
        EXPECT(gbc.readMem(0x947a), 0x87);
        // CB 87 037B
        gbc.setState(0x9992, 0x1efb, 0xe880, 0xaddc, 0xdf72, 0x5d8b, 0x1, 0x1);
        gbc.writeMem(0x9992, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1efb);
        EXPECT(gbc.pc(), 0x9994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9992), 0xcb);
        EXPECT(gbc.readMem(0x9993), 0x87);
        // CB 87 037C
        gbc.setState(0x23f2, 0x9b1b, 0x5660, 0xd76c, 0xa398, 0x5167, 0x0, 0x0);
        gbc.writeMem(0x23f2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9b1b);
        EXPECT(gbc.pc(), 0x23f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 037D
        gbc.setState(0xbd34, 0x91d8, 0xcbd0, 0x9eb5, 0xfa9f, 0x1458, 0x0, 0x0);
        gbc.writeMem(0xbd34, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x91d8);
        EXPECT(gbc.pc(), 0xbd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd34), 0xcb);
        EXPECT(gbc.readMem(0xbd35), 0x87);
        // CB 87 037E
        gbc.setState(0x79c1, 0x1a67, 0x8810, 0xde43, 0x8598, 0x86de, 0x0, 0x1);
        gbc.writeMem(0x79c1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1a67);
        EXPECT(gbc.pc(), 0x79c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 037F
        gbc.setState(0xee90, 0x5773, 0x410, 0xf698, 0xd758, 0x7864, 0x0, 0x0);
        gbc.writeMem(0xee90, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5773);
        EXPECT(gbc.pc(), 0xee92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee90), 0xcb);
        EXPECT(gbc.readMem(0xee91), 0x87);
        // CB 87 0380
        gbc.setState(0x4a98, 0x8061, 0x2d00, 0xfa5e, 0xa4a, 0x1455, 0x1, 0x1);
        gbc.writeMem(0x4a98, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8061);
        EXPECT(gbc.pc(), 0x4a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0381
        gbc.setState(0x2da, 0x9c86, 0xfea0, 0x944, 0xf240, 0x31ce, 0x1, 0x1);
        gbc.writeMem(0x2da, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9c86);
        EXPECT(gbc.pc(), 0x2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0382
        gbc.setState(0x1a4a, 0xeae3, 0xf6b0, 0x9691, 0x1e5d, 0xa2da, 0x1, 0x0);
        gbc.writeMem(0x1a4a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xeae3);
        EXPECT(gbc.pc(), 0x1a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0383
        gbc.setState(0x1514, 0xcc77, 0x42a0, 0xf795, 0x4b6c, 0x563a, 0x1, 0x0);
        gbc.writeMem(0x1514, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcc77);
        EXPECT(gbc.pc(), 0x1516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 0384
        gbc.setState(0xe26e, 0x19cf, 0x9150, 0x31cd, 0xf975, 0x2ffa, 0x0, 0x1);
        gbc.writeMem(0xe26e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x19cf);
        EXPECT(gbc.pc(), 0xe270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26e), 0xcb);
        EXPECT(gbc.readMem(0xe26f), 0x87);
        // CB 87 0385
        gbc.setState(0x9d09, 0x2e1d, 0xb0c0, 0x4a39, 0x1cbc, 0xa20d, 0x1, 0x0);
        gbc.writeMem(0x9d09, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2e1d);
        EXPECT(gbc.pc(), 0x9d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d09), 0xcb);
        EXPECT(gbc.readMem(0x9d0a), 0x87);
        // CB 87 0386
        gbc.setState(0xbc08, 0x6f54, 0x8de0, 0x3ce2, 0xfc18, 0x3916, 0x0, 0x0);
        gbc.writeMem(0xbc08, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6f54);
        EXPECT(gbc.pc(), 0xbc0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc08), 0xcb);
        EXPECT(gbc.readMem(0xbc09), 0x87);
        // CB 87 0388
        gbc.setState(0xe481, 0x5977, 0xb310, 0x81ca, 0x98d5, 0x4b56, 0x1, 0x0);
        gbc.writeMem(0xe481, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5977);
        EXPECT(gbc.pc(), 0xe483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe481), 0xcb);
        EXPECT(gbc.readMem(0xe482), 0x87);
        // CB 87 0389
        gbc.setState(0xaa24, 0xc5d9, 0xb640, 0xec9a, 0xcfc7, 0xc9b4, 0x0, 0x1);
        gbc.writeMem(0xaa24, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc5d9);
        EXPECT(gbc.pc(), 0xaa26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa24), 0xcb);
        EXPECT(gbc.readMem(0xaa25), 0x87);
        // CB 87 038A
        gbc.setState(0x6241, 0x3b67, 0xae50, 0xe61e, 0x20ec, 0xcebb, 0x1, 0x0);
        gbc.writeMem(0x6241, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3b67);
        EXPECT(gbc.pc(), 0x6243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 038B
        gbc.setState(0x40ab, 0xef6f, 0xef50, 0x25dc, 0x8a24, 0xd976, 0x0, 0x0);
        gbc.writeMem(0x40ab, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xef6f);
        EXPECT(gbc.pc(), 0x40ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 038C
        gbc.setState(0x1e3c, 0x938b, 0xd600, 0x6eea, 0xdfd6, 0x40af, 0x0, 0x0);
        gbc.writeMem(0x1e3c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x938b);
        EXPECT(gbc.pc(), 0x1e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 038D
        gbc.setState(0x1b0c, 0x307, 0xf650, 0x38c6, 0xb04d, 0x4da, 0x1, 0x0);
        gbc.writeMem(0x1b0c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x307);
        EXPECT(gbc.pc(), 0x1b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 038E
        gbc.setState(0x137d, 0x8551, 0x7b10, 0xe69d, 0x7b4b, 0xfa0d, 0x0, 0x0);
        gbc.writeMem(0x137d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8551);
        EXPECT(gbc.pc(), 0x137f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 038F
        gbc.setState(0x27aa, 0x1a10, 0x7770, 0xef54, 0x4031, 0xe9e6, 0x1, 0x0);
        gbc.writeMem(0x27aa, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1a10);
        EXPECT(gbc.pc(), 0x27ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0390
        gbc.setState(0x83cd, 0x6558, 0xdf50, 0x8e33, 0xde89, 0xe60a, 0x0, 0x1);
        gbc.writeMem(0x83cd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6558);
        EXPECT(gbc.pc(), 0x83cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cd), 0xcb);
        EXPECT(gbc.readMem(0x83ce), 0x87);
        // CB 87 0391
        gbc.setState(0xb7c3, 0xd379, 0x62c0, 0x8deb, 0xa2b9, 0x5212, 0x0, 0x0);
        gbc.writeMem(0xb7c3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd379);
        EXPECT(gbc.pc(), 0xb7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c3), 0xcb);
        EXPECT(gbc.readMem(0xb7c4), 0x87);
        // CB 87 0392
        gbc.setState(0x52a0, 0x8bb7, 0x5390, 0xb447, 0x98b, 0x2680, 0x0, 0x0);
        gbc.writeMem(0x52a0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8bb7);
        EXPECT(gbc.pc(), 0x52a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0393
        gbc.setState(0x33c3, 0xdf3e, 0x2830, 0x5871, 0xdc4a, 0x57c4, 0x0, 0x0);
        gbc.writeMem(0x33c3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdf3e);
        EXPECT(gbc.pc(), 0x33c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 0394
        gbc.setState(0x9c1b, 0xc67b, 0xdf10, 0x860e, 0xc0ce, 0x5f5f, 0x1, 0x1);
        gbc.writeMem(0x9c1b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc67b);
        EXPECT(gbc.pc(), 0x9c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1b), 0xcb);
        EXPECT(gbc.readMem(0x9c1c), 0x87);
        // CB 87 0396
        gbc.setState(0xda90, 0xdc58, 0x7420, 0x607f, 0xf73e, 0x3006, 0x1, 0x0);
        gbc.writeMem(0xda90, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdc58);
        EXPECT(gbc.pc(), 0xda92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda90), 0xcb);
        EXPECT(gbc.readMem(0xda91), 0x87);
        // CB 87 0397
        gbc.setState(0x91cd, 0xd095, 0x860, 0xad58, 0x359d, 0xfda7, 0x0, 0x1);
        gbc.writeMem(0x91cd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd095);
        EXPECT(gbc.pc(), 0x91cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91cd), 0xcb);
        EXPECT(gbc.readMem(0x91ce), 0x87);
        // CB 87 0398
        gbc.setState(0x9bf6, 0xc2cb, 0x3640, 0x2d09, 0x3ce9, 0xb109, 0x1, 0x1);
        gbc.writeMem(0x9bf6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc2cb);
        EXPECT(gbc.pc(), 0x9bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf6), 0xcb);
        EXPECT(gbc.readMem(0x9bf7), 0x87);
        // CB 87 0399
        gbc.setState(0x592c, 0xfcbe, 0x53d0, 0xda7a, 0x2c1c, 0xb51, 0x1, 0x1);
        gbc.writeMem(0x592c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfcbe);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 039A
        gbc.setState(0xd9a6, 0x6a78, 0xe6d0, 0xf90b, 0xcc19, 0x9b4b, 0x1, 0x1);
        gbc.writeMem(0xd9a6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6a78);
        EXPECT(gbc.pc(), 0xd9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a6), 0xcb);
        EXPECT(gbc.readMem(0xd9a7), 0x87);
        // CB 87 039B
        gbc.setState(0x4c1a, 0x973a, 0x9450, 0x7ea0, 0xd66f, 0x777f, 0x1, 0x1);
        gbc.writeMem(0x4c1a, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x973a);
        EXPECT(gbc.pc(), 0x4c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 039C
        gbc.setState(0x6db0, 0x9139, 0x48b0, 0xc6a, 0xdc51, 0xa742, 0x1, 0x0);
        gbc.writeMem(0x6db0, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9139);
        EXPECT(gbc.pc(), 0x6db2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 039D
        gbc.setState(0x4c28, 0x23f8, 0x7b70, 0x8630, 0x36b7, 0x9ff6, 0x0, 0x0);
        gbc.writeMem(0x4c28, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x23f8);
        EXPECT(gbc.pc(), 0x4c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 039E
        gbc.setState(0x9aff, 0xba45, 0xe7e0, 0xb9d9, 0xcc20, 0x841b, 0x1, 0x0);
        gbc.writeMem(0x9aff, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xba45);
        EXPECT(gbc.pc(), 0x9b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aff), 0xcb);
        EXPECT(gbc.readMem(0x9b00), 0x87);
        // CB 87 039F
        gbc.setState(0xe5e1, 0x45a0, 0xb540, 0x6d41, 0xbcc9, 0xb8de, 0x1, 0x1);
        gbc.writeMem(0xe5e1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x45a0);
        EXPECT(gbc.pc(), 0xe5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e1), 0xcb);
        EXPECT(gbc.readMem(0xe5e2), 0x87);
        // CB 87 03A0
        gbc.setState(0x6de7, 0x536e, 0xaef0, 0xc60f, 0xc31b, 0x2faf, 0x1, 0x1);
        gbc.writeMem(0x6de7, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x536e);
        EXPECT(gbc.pc(), 0x6de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03A1
        gbc.setState(0x832, 0x1fc8, 0x1450, 0x495f, 0x640b, 0x24bb, 0x1, 0x0);
        gbc.writeMem(0x832, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1fc8);
        EXPECT(gbc.pc(), 0x834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03A2
        gbc.setState(0x12c5, 0xf2f4, 0x1db0, 0x253, 0xb0fc, 0xb3c8, 0x0, 0x0);
        gbc.writeMem(0x12c5, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf2f4);
        EXPECT(gbc.pc(), 0x12c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03A3
        gbc.setState(0x476, 0x7078, 0x8dc0, 0xb6a, 0x9c69, 0x5706, 0x0, 0x1);
        gbc.writeMem(0x476, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7078);
        EXPECT(gbc.pc(), 0x478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03A4
        gbc.setState(0xd6b1, 0x5f32, 0x9df0, 0x84fa, 0x1d5e, 0x9d8d, 0x0, 0x0);
        gbc.writeMem(0xd6b1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5f32);
        EXPECT(gbc.pc(), 0xd6b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b1), 0xcb);
        EXPECT(gbc.readMem(0xd6b2), 0x87);
        // CB 87 03A5
        gbc.setState(0x9445, 0x37d8, 0x88d0, 0xd35c, 0xab0d, 0xc73a, 0x1, 0x1);
        gbc.writeMem(0x9445, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x37d8);
        EXPECT(gbc.pc(), 0x9447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9445), 0xcb);
        EXPECT(gbc.readMem(0x9446), 0x87);
        // CB 87 03A6
        gbc.setState(0x2308, 0xcc82, 0xd960, 0x5536, 0xb134, 0x7983, 0x0, 0x1);
        gbc.writeMem(0x2308, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcc82);
        EXPECT(gbc.pc(), 0x230a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03A7
        gbc.setState(0x315d, 0x8d05, 0x2bb0, 0x7e4d, 0xb937, 0x7db, 0x1, 0x1);
        gbc.writeMem(0x315d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8d05);
        EXPECT(gbc.pc(), 0x315f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03A9
        gbc.setState(0x2c77, 0x5faa, 0x8d90, 0xf388, 0xf821, 0x1e40, 0x0, 0x0);
        gbc.writeMem(0x2c77, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5faa);
        EXPECT(gbc.pc(), 0x2c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03AA
        gbc.setState(0xc239, 0xd363, 0xcef0, 0x5f70, 0xb1ae, 0x8203, 0x0, 0x1);
        gbc.writeMem(0xc239, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd363);
        EXPECT(gbc.pc(), 0xc23b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc239), 0xcb);
        EXPECT(gbc.readMem(0xc23a), 0x87);
        // CB 87 03AB
        gbc.setState(0x8b61, 0x686b, 0xc0b0, 0xbf5, 0x8730, 0xb54b, 0x0, 0x0);
        gbc.writeMem(0x8b61, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x686b);
        EXPECT(gbc.pc(), 0x8b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b61), 0xcb);
        EXPECT(gbc.readMem(0x8b62), 0x87);
        // CB 87 03AC
        gbc.setState(0xe6eb, 0x6b59, 0xb320, 0x1619, 0xf2d3, 0x3250, 0x0, 0x1);
        gbc.writeMem(0xe6eb, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0xe6ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6eb), 0xcb);
        EXPECT(gbc.readMem(0xe6ec), 0x87);
        // CB 87 03AE
        gbc.setState(0x7c64, 0x9f8b, 0x4bd0, 0x3bb0, 0x21d4, 0x5577, 0x0, 0x1);
        gbc.writeMem(0x7c64, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9f8b);
        EXPECT(gbc.pc(), 0x7c66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03AF
        gbc.setState(0xbb30, 0x8c96, 0x4a60, 0xa4e3, 0x8b73, 0xb043, 0x0, 0x0);
        gbc.writeMem(0xbb30, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8c96);
        EXPECT(gbc.pc(), 0xbb32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb30), 0xcb);
        EXPECT(gbc.readMem(0xbb31), 0x87);
        // CB 87 03B0
        gbc.setState(0x2ddd, 0x676d, 0x42a0, 0xb7ef, 0x553c, 0x72a5, 0x0, 0x0);
        gbc.writeMem(0x2ddd, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x676d);
        EXPECT(gbc.pc(), 0x2ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03B1
        gbc.setState(0x7856, 0x79f5, 0xca50, 0x19f2, 0x7feb, 0xae6d, 0x0, 0x1);
        gbc.writeMem(0x7856, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x79f5);
        EXPECT(gbc.pc(), 0x7858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03B2
        gbc.setState(0x4cd9, 0xd5bd, 0x8d00, 0xcd23, 0xaac9, 0x3827, 0x1, 0x1);
        gbc.writeMem(0x4cd9, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd5bd);
        EXPECT(gbc.pc(), 0x4cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03B3
        gbc.setState(0x32c4, 0xabfb, 0x7440, 0xcdf, 0xefc1, 0x260d, 0x0, 0x0);
        gbc.writeMem(0x32c4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xabfb);
        EXPECT(gbc.pc(), 0x32c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03B4
        gbc.setState(0x1472, 0xf1a9, 0x8350, 0x2def, 0xff17, 0x5bf8, 0x1, 0x0);
        gbc.writeMem(0x1472, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf1a9);
        EXPECT(gbc.pc(), 0x1474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03B5
        gbc.setState(0x905e, 0xdfce, 0x8cb0, 0x544, 0x207a, 0x2f8c, 0x0, 0x0);
        gbc.writeMem(0x905e, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdfce);
        EXPECT(gbc.pc(), 0x9060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x905e), 0xcb);
        EXPECT(gbc.readMem(0x905f), 0x87);
        // CB 87 03B6
        gbc.setState(0x4518, 0xf33e, 0x6e00, 0xf907, 0xa7f8, 0xe08d, 0x1, 0x0);
        gbc.writeMem(0x4518, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf33e);
        EXPECT(gbc.pc(), 0x451a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03B7
        gbc.setState(0x7b5c, 0xc94a, 0x90d0, 0x586e, 0x78da, 0x258e, 0x0, 0x0);
        gbc.writeMem(0x7b5c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc94a);
        EXPECT(gbc.pc(), 0x7b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03B8
        gbc.setState(0x705, 0xc208, 0x8d10, 0xb1b0, 0xa762, 0x4ad2, 0x0, 0x1);
        gbc.writeMem(0x705, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc208);
        EXPECT(gbc.pc(), 0x707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03B9
        gbc.setState(0xd4aa, 0xdee1, 0xf470, 0xde76, 0x15e8, 0x80c0, 0x1, 0x1);
        gbc.writeMem(0xd4aa, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdee1);
        EXPECT(gbc.pc(), 0xd4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4aa), 0xcb);
        EXPECT(gbc.readMem(0xd4ab), 0x87);
        // CB 87 03BA
        gbc.setState(0x63f1, 0x3af7, 0x8520, 0x1b82, 0x7ab0, 0x8b77, 0x1, 0x0);
        gbc.writeMem(0x63f1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3af7);
        EXPECT(gbc.pc(), 0x63f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03BB
        gbc.setState(0xc141, 0x53d9, 0x1000, 0xcc10, 0xa8bb, 0xc885, 0x1, 0x0);
        gbc.writeMem(0xc141, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x53d9);
        EXPECT(gbc.pc(), 0xc143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc141), 0xcb);
        EXPECT(gbc.readMem(0xc142), 0x87);
        // CB 87 03BC
        gbc.setState(0xaeac, 0x1d4c, 0xaa00, 0xf215, 0x7a2d, 0x7560, 0x1, 0x0);
        gbc.writeMem(0xaeac, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1d4c);
        EXPECT(gbc.pc(), 0xaeae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeac), 0xcb);
        EXPECT(gbc.readMem(0xaead), 0x87);
        // CB 87 03BE
        gbc.setState(0x73f4, 0x1338, 0x3650, 0x113, 0xf51f, 0x5dec, 0x1, 0x1);
        gbc.writeMem(0x73f4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1338);
        EXPECT(gbc.pc(), 0x73f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03BF
        gbc.setState(0x2de2, 0xec84, 0x2000, 0x5f9b, 0x9634, 0xbf8f, 0x1, 0x1);
        gbc.writeMem(0x2de2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xec84);
        EXPECT(gbc.pc(), 0x2de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03C0
        gbc.setState(0xe26f, 0x2121, 0x9ac0, 0xf0ad, 0x7f1e, 0x388b, 0x0, 0x1);
        gbc.writeMem(0xe26f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2121);
        EXPECT(gbc.pc(), 0xe271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26f), 0xcb);
        EXPECT(gbc.readMem(0xe270), 0x87);
        // CB 87 03C1
        gbc.setState(0xc808, 0xad50, 0x2b10, 0xe2bc, 0xd2d2, 0x465c, 0x0, 0x1);
        gbc.writeMem(0xc808, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xad50);
        EXPECT(gbc.pc(), 0xc80a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc808), 0xcb);
        EXPECT(gbc.readMem(0xc809), 0x87);
        // CB 87 03C2
        gbc.setState(0x4379, 0xcfeb, 0x2d30, 0x276f, 0xf9ed, 0xda3a, 0x1, 0x0);
        gbc.writeMem(0x4379, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcfeb);
        EXPECT(gbc.pc(), 0x437b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03C3
        gbc.setState(0x38f2, 0xc659, 0x6d90, 0x2afe, 0xdddb, 0xb852, 0x1, 0x0);
        gbc.writeMem(0x38f2, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc659);
        EXPECT(gbc.pc(), 0x38f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03C4
        gbc.setState(0x499c, 0x64e, 0x9b10, 0xb830, 0xbb78, 0x8531, 0x0, 0x1);
        gbc.writeMem(0x499c, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x64e);
        EXPECT(gbc.pc(), 0x499e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03C5
        gbc.setState(0x6a79, 0x1b2, 0xf520, 0x15d1, 0x162c, 0xe108, 0x1, 0x0);
        gbc.writeMem(0x6a79, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1b2);
        EXPECT(gbc.pc(), 0x6a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03C6
        gbc.setState(0x88ad, 0xa40d, 0x7480, 0xb6cd, 0x4300, 0xe5dc, 0x0, 0x0);
        gbc.writeMem(0x88ad, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa40d);
        EXPECT(gbc.pc(), 0x88af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ad), 0xcb);
        EXPECT(gbc.readMem(0x88ae), 0x87);
        // CB 87 03C7
        gbc.setState(0xbda, 0xcee3, 0xe7e0, 0xf3cd, 0xd2e3, 0xceb6, 0x1, 0x1);
        gbc.writeMem(0xbda, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcee3);
        EXPECT(gbc.pc(), 0xbdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03C8
        gbc.setState(0xd0c8, 0x36ce, 0xa080, 0xc81f, 0x5c15, 0x3347, 0x1, 0x0);
        gbc.writeMem(0xd0c8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x36ce);
        EXPECT(gbc.pc(), 0xd0ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c8), 0xcb);
        EXPECT(gbc.readMem(0xd0c9), 0x87);
        // CB 87 03C9
        gbc.setState(0x4a47, 0x9b93, 0xc8a0, 0x6a8f, 0x66c6, 0xf5e4, 0x1, 0x0);
        gbc.writeMem(0x4a47, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9b93);
        EXPECT(gbc.pc(), 0x4a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03CA
        gbc.setState(0x1c7f, 0xd73, 0x3160, 0xd198, 0xab3b, 0x89d4, 0x0, 0x0);
        gbc.writeMem(0x1c7f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd73);
        EXPECT(gbc.pc(), 0x1c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03CB
        gbc.setState(0x4bd1, 0x6145, 0x4b50, 0x8cf5, 0x461f, 0x4669, 0x1, 0x1);
        gbc.writeMem(0x4bd1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6145);
        EXPECT(gbc.pc(), 0x4bd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03CC
        gbc.setState(0xdea4, 0xcd52, 0xb7d0, 0x857a, 0x4f62, 0xa778, 0x0, 0x1);
        gbc.writeMem(0xdea4, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcd52);
        EXPECT(gbc.pc(), 0xdea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea4), 0xcb);
        EXPECT(gbc.readMem(0xdea5), 0x87);
        // CB 87 03CD
        gbc.setState(0xce0d, 0x6e72, 0x30f0, 0x17cb, 0x4e00, 0xe196, 0x1, 0x0);
        gbc.writeMem(0xce0d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6e72);
        EXPECT(gbc.pc(), 0xce0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0d), 0xcb);
        EXPECT(gbc.readMem(0xce0e), 0x87);
        // CB 87 03CE
        gbc.setState(0xbe5f, 0x956e, 0x3d20, 0x4ad8, 0x44ae, 0x5c8c, 0x1, 0x1);
        gbc.writeMem(0xbe5f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x956e);
        EXPECT(gbc.pc(), 0xbe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe5f), 0xcb);
        EXPECT(gbc.readMem(0xbe60), 0x87);
        // CB 87 03CF
        gbc.setState(0x8052, 0xa9de, 0xabf0, 0x57d7, 0x2930, 0xb, 0x0, 0x1);
        gbc.writeMem(0x8052, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa9de);
        EXPECT(gbc.pc(), 0x8054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8052), 0xcb);
        EXPECT(gbc.readMem(0x8053), 0x87);
        // CB 87 03D0
        gbc.setState(0x88, 0x159b, 0x2fc0, 0x8183, 0x8ded, 0x499b, 0x1, 0x1);
        gbc.writeMem(0x88, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x159b);
        EXPECT(gbc.pc(), 0x8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03D1
        gbc.setState(0xd3f3, 0xf7c1, 0xb2c0, 0xe6fe, 0xc3bf, 0x6550, 0x1, 0x1);
        gbc.writeMem(0xd3f3, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf7c1);
        EXPECT(gbc.pc(), 0xd3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f3), 0xcb);
        EXPECT(gbc.readMem(0xd3f4), 0x87);
        // CB 87 03D2
        gbc.setState(0x208b, 0x5fcd, 0xc680, 0xa5fa, 0xa68, 0x52d0, 0x1, 0x0);
        gbc.writeMem(0x208b, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5fcd);
        EXPECT(gbc.pc(), 0x208d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03D3
        gbc.setState(0xe892, 0xbae7, 0xac00, 0xfdb, 0xc9bd, 0x4467, 0x0, 0x0);
        gbc.writeMem(0xe892, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbae7);
        EXPECT(gbc.pc(), 0xe894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe892), 0xcb);
        EXPECT(gbc.readMem(0xe893), 0x87);
        // CB 87 03D4
        gbc.setState(0x33c1, 0xc563, 0x3ba0, 0x15e9, 0x6f84, 0x603b, 0x0, 0x1);
        gbc.writeMem(0x33c1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc563);
        EXPECT(gbc.pc(), 0x33c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03D5
        gbc.setState(0x5fd1, 0x99b1, 0xace0, 0xa780, 0x3c31, 0x60d0, 0x0, 0x1);
        gbc.writeMem(0x5fd1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x99b1);
        EXPECT(gbc.pc(), 0x5fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03D6
        gbc.setState(0xe8c8, 0xe80c, 0x2120, 0x633c, 0xa0f5, 0xf4bd, 0x1, 0x1);
        gbc.writeMem(0xe8c8, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe80c);
        EXPECT(gbc.pc(), 0xe8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c8), 0xcb);
        EXPECT(gbc.readMem(0xe8c9), 0x87);
        // CB 87 03D7
        gbc.setState(0xc04d, 0x1961, 0x8360, 0xd935, 0x91, 0x5d32, 0x1, 0x1);
        gbc.writeMem(0xc04d, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1961);
        EXPECT(gbc.pc(), 0xc04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04d), 0xcb);
        EXPECT(gbc.readMem(0xc04e), 0x87);
        // CB 87 03D8
        gbc.setState(0x8291, 0xbc48, 0xa4b0, 0x4459, 0xbfcc, 0x414b, 0x1, 0x0);
        gbc.writeMem(0x8291, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbc48);
        EXPECT(gbc.pc(), 0x8293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8291), 0xcb);
        EXPECT(gbc.readMem(0x8292), 0x87);
        // CB 87 03D9
        gbc.setState(0xc604, 0xf63, 0xd8b0, 0x8ab8, 0x62cc, 0xe8f7, 0x0, 0x0);
        gbc.writeMem(0xc604, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf63);
        EXPECT(gbc.pc(), 0xc606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc604), 0xcb);
        EXPECT(gbc.readMem(0xc605), 0x87);
        // CB 87 03DA
        gbc.setState(0xebed, 0xb156, 0x8e70, 0x6a16, 0x79a, 0x453, 0x1, 0x1);
        gbc.writeMem(0xebed, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb156);
        EXPECT(gbc.pc(), 0xebef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebed), 0xcb);
        EXPECT(gbc.readMem(0xebee), 0x87);
        // CB 87 03DB
        gbc.setState(0x9baf, 0xa9e5, 0x1140, 0x17d, 0xcfc1, 0xeabf, 0x1, 0x0);
        gbc.writeMem(0x9baf, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa9e5);
        EXPECT(gbc.pc(), 0x9bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baf), 0xcb);
        EXPECT(gbc.readMem(0x9bb0), 0x87);
        // CB 87 03DC
        gbc.setState(0xc080, 0x614, 0x1a40, 0xfbb, 0x8341, 0x6904, 0x1, 0x0);
        gbc.writeMem(0xc080, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x614);
        EXPECT(gbc.pc(), 0xc082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc080), 0xcb);
        EXPECT(gbc.readMem(0xc081), 0x87);
        // CB 87 03DD
        gbc.setState(0xab53, 0x1c77, 0xb60, 0x9df6, 0xda1e, 0xae23, 0x0, 0x0);
        gbc.writeMem(0xab53, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1c77);
        EXPECT(gbc.pc(), 0xab55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab53), 0xcb);
        EXPECT(gbc.readMem(0xab54), 0x87);
        // CB 87 03DE
        gbc.setState(0xcefc, 0xa9e3, 0x42f0, 0xe634, 0x1d63, 0xb16b, 0x1, 0x1);
        gbc.writeMem(0xcefc, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa9e3);
        EXPECT(gbc.pc(), 0xcefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcefc), 0xcb);
        EXPECT(gbc.readMem(0xcefd), 0x87);
        // CB 87 03DF
        gbc.setState(0x4fa1, 0xc472, 0x40b0, 0xe448, 0xbf01, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0x4fa1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc472);
        EXPECT(gbc.pc(), 0x4fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03E0
        gbc.setState(0x1574, 0x217c, 0x7a70, 0x39e1, 0x5326, 0x4676, 0x0, 0x0);
        gbc.writeMem(0x1574, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x217c);
        EXPECT(gbc.pc(), 0x1576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03E1
        gbc.setState(0xa7c1, 0xbf8a, 0xc1a0, 0x2983, 0x2b1a, 0x1505, 0x0, 0x0);
        gbc.writeMem(0xa7c1, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbf8a);
        EXPECT(gbc.pc(), 0xa7c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c1), 0xcb);
        EXPECT(gbc.readMem(0xa7c2), 0x87);
        // CB 87 03E2
        gbc.setState(0x13e6, 0x73c, 0xaeb0, 0x35ee, 0xbc31, 0xe81a, 0x1, 0x1);
        gbc.writeMem(0x13e6, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x73c);
        EXPECT(gbc.pc(), 0x13e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03E3
        gbc.setState(0xcd33, 0x69d6, 0x6320, 0xa88b, 0x5a5d, 0x93c6, 0x0, 0x0);
        gbc.writeMem(0xcd33, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x69d6);
        EXPECT(gbc.pc(), 0xcd35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd33), 0xcb);
        EXPECT(gbc.readMem(0xcd34), 0x87);
        // CB 87 03E4
        gbc.setState(0x5d13, 0xc084, 0xd310, 0x1784, 0xaa3e, 0x2143, 0x0, 0x1);
        gbc.writeMem(0x5d13, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc084);
        EXPECT(gbc.pc(), 0x5d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 87 03E5
        gbc.setState(0x5047, 0x1010, 0x5ee0, 0xe48b, 0x79c5, 0xf3b6, 0x1, 0x1);
        gbc.writeMem(0x5047, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1010);
        EXPECT(gbc.pc(), 0x5049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 87 03E6
        gbc.setState(0xb488, 0x278c, 0xbbd0, 0xc4ff, 0x7f47, 0xeb55, 0x1, 0x1);
        gbc.writeMem(0xb488, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x278c);
        EXPECT(gbc.pc(), 0xb48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb488), 0xcb);
        EXPECT(gbc.readMem(0xb489), 0x87);
        // CB 87 03E7
        gbc.setState(0xa19f, 0x1f7e, 0x41d0, 0x4774, 0x25, 0xd103, 0x0, 0x0);
        gbc.writeMem(0xa19f, { 0xcb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1f7e);
        EXPECT(gbc.pc(), 0xa1a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19f), 0xcb);
        EXPECT(gbc.readMem(0xa1a0), 0x87);
    }
}
#endif
