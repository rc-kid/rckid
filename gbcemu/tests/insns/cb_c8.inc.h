    TEST(gbcemu, opcode_cb_c8) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C8 0000
        gbc.setState(0x64a6, 0xb50b, 0xa500, 0x7cb, 0x719, 0x62cb, 0x0, 0x1);
        gbc.writeMem(0x64a6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb50b);
        EXPECT(gbc.pc(), 0x64a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0001
        gbc.setState(0x3950, 0x6881, 0xdce0, 0xbd8b, 0xa5f2, 0x618c, 0x0, 0x0);
        gbc.writeMem(0x3950, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6881);
        EXPECT(gbc.pc(), 0x3952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0002
        gbc.setState(0x484f, 0x4bd1, 0xb9c0, 0xa58f, 0x1884, 0xf299, 0x0, 0x1);
        gbc.writeMem(0x484f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4bd1);
        EXPECT(gbc.pc(), 0x4851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0003
        gbc.setState(0xc9a1, 0xef1f, 0x3d10, 0x9ce, 0x198c, 0xbb0, 0x0, 0x0);
        gbc.writeMem(0xc9a1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xef1f);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a1), 0xcb);
        EXPECT(gbc.readMem(0xc9a2), 0xc8);
        // CB C8 0004
        gbc.setState(0x62b2, 0xbb1e, 0x7c60, 0x935e, 0x115, 0x7f9f, 0x1, 0x1);
        gbc.writeMem(0x62b2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbb1e);
        EXPECT(gbc.pc(), 0x62b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0005
        gbc.setState(0xcf91, 0x39f6, 0xaf20, 0x6afb, 0x5daf, 0x71b0, 0x0, 0x1);
        gbc.writeMem(0xcf91, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x39f6);
        EXPECT(gbc.pc(), 0xcf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf91), 0xcb);
        EXPECT(gbc.readMem(0xcf92), 0xc8);
        // CB C8 0006
        gbc.setState(0x7ce0, 0x67ea, 0x5f20, 0x4adc, 0x81eb, 0x81e2, 0x1, 0x1);
        gbc.writeMem(0x7ce0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x67ea);
        EXPECT(gbc.pc(), 0x7ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0008
        gbc.setState(0xaff1, 0x22c, 0x9d00, 0xcba8, 0x7976, 0xa8bd, 0x0, 0x1);
        gbc.writeMem(0xaff1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x22c);
        EXPECT(gbc.pc(), 0xaff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff1), 0xcb);
        EXPECT(gbc.readMem(0xaff2), 0xc8);
        // CB C8 0009
        gbc.setState(0x1667, 0x8486, 0x6390, 0xf74, 0x86f8, 0x3462, 0x0, 0x1);
        gbc.writeMem(0x1667, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8486);
        EXPECT(gbc.pc(), 0x1669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 000A
        gbc.setState(0xac1b, 0x24ec, 0x5bd0, 0x76d9, 0xa881, 0xf3a4, 0x1, 0x0);
        gbc.writeMem(0xac1b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x24ec);
        EXPECT(gbc.pc(), 0xac1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac1b), 0xcb);
        EXPECT(gbc.readMem(0xac1c), 0xc8);
        // CB C8 000B
        gbc.setState(0x6c7f, 0x8920, 0x8fc0, 0x4ab, 0xf365, 0xeb71, 0x0, 0x0);
        gbc.writeMem(0x6c7f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8920);
        EXPECT(gbc.pc(), 0x6c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 000C
        gbc.setState(0x97d2, 0x77aa, 0x3720, 0xaaa2, 0x6c69, 0x393, 0x0, 0x1);
        gbc.writeMem(0x97d2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x77aa);
        EXPECT(gbc.pc(), 0x97d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d2), 0xcb);
        EXPECT(gbc.readMem(0x97d3), 0xc8);
        // CB C8 000D
        gbc.setState(0x289a, 0x87be, 0x7ec0, 0x7d19, 0xf004, 0x8fb5, 0x0, 0x1);
        gbc.writeMem(0x289a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x87be);
        EXPECT(gbc.pc(), 0x289c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 000E
        gbc.setState(0x1f74, 0x6c88, 0xdf90, 0x53d5, 0xe0fd, 0x6b4e, 0x1, 0x1);
        gbc.writeMem(0x1f74, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6c88);
        EXPECT(gbc.pc(), 0x1f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 000F
        gbc.setState(0xc69, 0xc36c, 0x1820, 0xf608, 0xbeb9, 0x1570, 0x1, 0x0);
        gbc.writeMem(0xc69, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc36c);
        EXPECT(gbc.pc(), 0xc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0010
        gbc.setState(0x8274, 0x239c, 0xeca0, 0xfd81, 0x96f3, 0x6bb0, 0x1, 0x1);
        gbc.writeMem(0x8274, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x239c);
        EXPECT(gbc.pc(), 0x8276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8274), 0xcb);
        EXPECT(gbc.readMem(0x8275), 0xc8);
        // CB C8 0011
        gbc.setState(0x2e89, 0xfea3, 0xc6b0, 0x6960, 0xbc1b, 0xa454, 0x0, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfea3);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0012
        gbc.setState(0x9cef, 0x52d2, 0x58d0, 0x83d9, 0xc2f4, 0x5033, 0x0, 0x0);
        gbc.writeMem(0x9cef, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x52d2);
        EXPECT(gbc.pc(), 0x9cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cef), 0xcb);
        EXPECT(gbc.readMem(0x9cf0), 0xc8);
        // CB C8 0013
        gbc.setState(0xc676, 0xd46f, 0x360, 0x35d0, 0x63b3, 0xc26a, 0x0, 0x0);
        gbc.writeMem(0xc676, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd46f);
        EXPECT(gbc.pc(), 0xc678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc676), 0xcb);
        EXPECT(gbc.readMem(0xc677), 0xc8);
        // CB C8 0014
        gbc.setState(0x4ce3, 0x33c5, 0x8a30, 0x1ce1, 0x2a14, 0xb481, 0x0, 0x1);
        gbc.writeMem(0x4ce3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x33c5);
        EXPECT(gbc.pc(), 0x4ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0015
        gbc.setState(0x6da0, 0x68c3, 0xef80, 0xf43a, 0x75ea, 0xce2a, 0x1, 0x0);
        gbc.writeMem(0x6da0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x68c3);
        EXPECT(gbc.pc(), 0x6da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0016
        gbc.setState(0xc8ff, 0xae4b, 0x9800, 0x638c, 0x63ae, 0xf0c1, 0x0, 0x1);
        gbc.writeMem(0xc8ff, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xae4b);
        EXPECT(gbc.pc(), 0xc901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ff), 0xcb);
        EXPECT(gbc.readMem(0xc900), 0xc8);
        // CB C8 0017
        gbc.setState(0x61d0, 0x3f9a, 0x77b0, 0x22dc, 0xaa19, 0xb6a3, 0x0, 0x0);
        gbc.writeMem(0x61d0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3f9a);
        EXPECT(gbc.pc(), 0x61d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0018
        gbc.setState(0x7ceb, 0xe27c, 0x5c60, 0xbec5, 0xfde4, 0x84f, 0x1, 0x1);
        gbc.writeMem(0x7ceb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe27c);
        EXPECT(gbc.pc(), 0x7ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0019
        gbc.setState(0x57ac, 0x549b, 0x8b0, 0x1532, 0x2297, 0xd558, 0x1, 0x0);
        gbc.writeMem(0x57ac, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x549b);
        EXPECT(gbc.pc(), 0x57ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 001A
        gbc.setState(0x909, 0x3f60, 0xb0b0, 0x4e84, 0xd21a, 0x1f1, 0x1, 0x1);
        gbc.writeMem(0x909, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3f60);
        EXPECT(gbc.pc(), 0x90b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 001B
        gbc.setState(0x950b, 0xfb26, 0x59c0, 0xf598, 0xe674, 0xaaad, 0x0, 0x1);
        gbc.writeMem(0x950b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfb26);
        EXPECT(gbc.pc(), 0x950d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950b), 0xcb);
        EXPECT(gbc.readMem(0x950c), 0xc8);
        // CB C8 001C
        gbc.setState(0xd709, 0x59e3, 0x72b0, 0xce58, 0x3272, 0x1b5e, 0x0, 0x0);
        gbc.writeMem(0xd709, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x59e3);
        EXPECT(gbc.pc(), 0xd70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd709), 0xcb);
        EXPECT(gbc.readMem(0xd70a), 0xc8);
        // CB C8 001D
        gbc.setState(0xdb79, 0xe124, 0x2780, 0xaef1, 0x3947, 0x7528, 0x1, 0x0);
        gbc.writeMem(0xdb79, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe124);
        EXPECT(gbc.pc(), 0xdb7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb79), 0xcb);
        EXPECT(gbc.readMem(0xdb7a), 0xc8);
        // CB C8 001E
        gbc.setState(0x776c, 0x3052, 0xcae0, 0x1888, 0xb884, 0xc19f, 0x1, 0x0);
        gbc.writeMem(0x776c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3052);
        EXPECT(gbc.pc(), 0x776e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 001F
        gbc.setState(0x74da, 0xac01, 0xc4f0, 0x503a, 0xf2e6, 0x17a9, 0x1, 0x1);
        gbc.writeMem(0x74da, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xac01);
        EXPECT(gbc.pc(), 0x74dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0020
        gbc.setState(0x22da, 0x418a, 0x3b0, 0x40e3, 0x31d6, 0x9556, 0x1, 0x0);
        gbc.writeMem(0x22da, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x418a);
        EXPECT(gbc.pc(), 0x22dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0021
        gbc.setState(0xcb1d, 0x2998, 0x8ec0, 0xc195, 0x7498, 0xc1de, 0x1, 0x0);
        gbc.writeMem(0xcb1d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2998);
        EXPECT(gbc.pc(), 0xcb1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1d), 0xcb);
        EXPECT(gbc.readMem(0xcb1e), 0xc8);
        // CB C8 0022
        gbc.setState(0x271f, 0xd7b, 0xe0f0, 0x1eea, 0x8c1a, 0xf5e2, 0x0, 0x1);
        gbc.writeMem(0x271f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd7b);
        EXPECT(gbc.pc(), 0x2721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0023
        gbc.setState(0xcce1, 0x6e3e, 0x75f0, 0xaee3, 0x3e35, 0xd1f1, 0x1, 0x1);
        gbc.writeMem(0xcce1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6e3e);
        EXPECT(gbc.pc(), 0xcce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce1), 0xcb);
        EXPECT(gbc.readMem(0xcce2), 0xc8);
        // CB C8 0024
        gbc.setState(0xb9bf, 0x73bc, 0x83b0, 0x7820, 0xdfe7, 0xd9c8, 0x1, 0x1);
        gbc.writeMem(0xb9bf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x73bc);
        EXPECT(gbc.pc(), 0xb9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bf), 0xcb);
        EXPECT(gbc.readMem(0xb9c0), 0xc8);
        // CB C8 0025
        gbc.setState(0x2518, 0x6a88, 0x6d40, 0x5631, 0x6e48, 0xc3ec, 0x1, 0x1);
        gbc.writeMem(0x2518, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6a88);
        EXPECT(gbc.pc(), 0x251a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0026
        gbc.setState(0xaeac, 0xe97a, 0x9c40, 0xe20a, 0xe195, 0xfe28, 0x1, 0x0);
        gbc.writeMem(0xaeac, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe97a);
        EXPECT(gbc.pc(), 0xaeae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeac), 0xcb);
        EXPECT(gbc.readMem(0xaead), 0xc8);
        // CB C8 0027
        gbc.setState(0x910a, 0xa321, 0x8330, 0xb519, 0x777b, 0x1d18, 0x0, 0x1);
        gbc.writeMem(0x910a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa321);
        EXPECT(gbc.pc(), 0x910c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910a), 0xcb);
        EXPECT(gbc.readMem(0x910b), 0xc8);
        // CB C8 0028
        gbc.setState(0x52cd, 0xc01f, 0xb230, 0x42c0, 0xb7c5, 0x871f, 0x1, 0x1);
        gbc.writeMem(0x52cd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc01f);
        EXPECT(gbc.pc(), 0x52cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0029
        gbc.setState(0xada9, 0xc8a, 0x42e0, 0xf191, 0xc86, 0x4b20, 0x0, 0x0);
        gbc.writeMem(0xada9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc8a);
        EXPECT(gbc.pc(), 0xadab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada9), 0xcb);
        EXPECT(gbc.readMem(0xadaa), 0xc8);
        // CB C8 002A
        gbc.setState(0x678f, 0x1887, 0x9d60, 0x2ec8, 0x1b54, 0xcffa, 0x1, 0x1);
        gbc.writeMem(0x678f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1887);
        EXPECT(gbc.pc(), 0x6791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 002B
        gbc.setState(0xaedf, 0x2a9a, 0x2840, 0xabc0, 0x2cee, 0x6a50, 0x1, 0x1);
        gbc.writeMem(0xaedf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2a9a);
        EXPECT(gbc.pc(), 0xaee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaedf), 0xcb);
        EXPECT(gbc.readMem(0xaee0), 0xc8);
        // CB C8 002C
        gbc.setState(0x6115, 0x7f17, 0x93a0, 0x98f3, 0x874e, 0xbea2, 0x0, 0x0);
        gbc.writeMem(0x6115, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7f17);
        EXPECT(gbc.pc(), 0x6117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 002D
        gbc.setState(0x52ba, 0x2c93, 0x6c00, 0xe581, 0x3bdc, 0xecca, 0x1, 0x1);
        gbc.writeMem(0x52ba, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2c93);
        EXPECT(gbc.pc(), 0x52bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 002E
        gbc.setState(0x77e9, 0x4e96, 0x83c0, 0x7964, 0x4d1f, 0x6578, 0x0, 0x1);
        gbc.writeMem(0x77e9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4e96);
        EXPECT(gbc.pc(), 0x77eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 002F
        gbc.setState(0x4c3c, 0x42d0, 0xae20, 0x8187, 0xe479, 0x6ac, 0x1, 0x1);
        gbc.writeMem(0x4c3c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x42d0);
        EXPECT(gbc.pc(), 0x4c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0030
        gbc.setState(0x643, 0x6306, 0x1d50, 0x9623, 0xdd70, 0x318, 0x0, 0x0);
        gbc.writeMem(0x643, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6306);
        EXPECT(gbc.pc(), 0x645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0031
        gbc.setState(0x9de9, 0x8690, 0x1ec0, 0x2e2e, 0xd6db, 0xa6f2, 0x1, 0x1);
        gbc.writeMem(0x9de9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8690);
        EXPECT(gbc.pc(), 0x9deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de9), 0xcb);
        EXPECT(gbc.readMem(0x9dea), 0xc8);
        // CB C8 0032
        gbc.setState(0xe93a, 0x179b, 0x3ac0, 0x3bb, 0x1ad, 0x8c5, 0x0, 0x0);
        gbc.writeMem(0xe93a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x179b);
        EXPECT(gbc.pc(), 0xe93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93a), 0xcb);
        EXPECT(gbc.readMem(0xe93b), 0xc8);
        // CB C8 0033
        gbc.setState(0x2e76, 0xb4bb, 0xd890, 0x43f8, 0x3211, 0x45b9, 0x1, 0x1);
        gbc.writeMem(0x2e76, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb4bb);
        EXPECT(gbc.pc(), 0x2e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0034
        gbc.setState(0xd26c, 0x6ea, 0x58a0, 0xedcb, 0x73a6, 0x121, 0x0, 0x1);
        gbc.writeMem(0xd26c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6ea);
        EXPECT(gbc.pc(), 0xd26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26c), 0xcb);
        EXPECT(gbc.readMem(0xd26d), 0xc8);
        // CB C8 0035
        gbc.setState(0x55e7, 0xdeab, 0xe470, 0xd2ee, 0x25b6, 0xc4e1, 0x0, 0x1);
        gbc.writeMem(0x55e7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdeab);
        EXPECT(gbc.pc(), 0x55e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0036
        gbc.setState(0x1f1f, 0x3343, 0x23f0, 0x5fbb, 0x5b28, 0x7589, 0x1, 0x1);
        gbc.writeMem(0x1f1f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3343);
        EXPECT(gbc.pc(), 0x1f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0037
        gbc.setState(0xa806, 0xde76, 0xfb30, 0xb89a, 0xbe1d, 0x8547, 0x0, 0x1);
        gbc.writeMem(0xa806, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xde76);
        EXPECT(gbc.pc(), 0xa808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa806), 0xcb);
        EXPECT(gbc.readMem(0xa807), 0xc8);
        // CB C8 0038
        gbc.setState(0x49e, 0xb6a3, 0xb100, 0x154d, 0x78c0, 0x1db3, 0x0, 0x0);
        gbc.writeMem(0x49e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb6a3);
        EXPECT(gbc.pc(), 0x4a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0039
        gbc.setState(0xcce, 0x86a3, 0x6fd0, 0xdc5, 0x7ba0, 0xe365, 0x0, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x86a3);
        EXPECT(gbc.pc(), 0xcd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 003A
        gbc.setState(0xa0b2, 0x9928, 0x2ce0, 0x3606, 0x85a5, 0xca00, 0x0, 0x1);
        gbc.writeMem(0xa0b2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9928);
        EXPECT(gbc.pc(), 0xa0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b2), 0xcb);
        EXPECT(gbc.readMem(0xa0b3), 0xc8);
        // CB C8 003B
        gbc.setState(0xe8de, 0x9d50, 0xcf00, 0x5161, 0x6e53, 0x99e9, 0x1, 0x0);
        gbc.writeMem(0xe8de, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9d50);
        EXPECT(gbc.pc(), 0xe8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8de), 0xcb);
        EXPECT(gbc.readMem(0xe8df), 0xc8);
        // CB C8 003C
        gbc.setState(0xe1e5, 0x12d, 0x20e0, 0xab7f, 0xceba, 0x504c, 0x1, 0x1);
        gbc.writeMem(0xe1e5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x12d);
        EXPECT(gbc.pc(), 0xe1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e5), 0xcb);
        EXPECT(gbc.readMem(0xe1e6), 0xc8);
        // CB C8 003E
        gbc.setState(0xa926, 0x3859, 0xd140, 0x48ac, 0x7abc, 0xd787, 0x1, 0x0);
        gbc.writeMem(0xa926, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3859);
        EXPECT(gbc.pc(), 0xa928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa926), 0xcb);
        EXPECT(gbc.readMem(0xa927), 0xc8);
        // CB C8 003F
        gbc.setState(0xef75, 0xc71d, 0xaae0, 0xa7b2, 0xe720, 0x5367, 0x0, 0x0);
        gbc.writeMem(0xef75, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc71d);
        EXPECT(gbc.pc(), 0xef77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef75), 0xcb);
        EXPECT(gbc.readMem(0xef76), 0xc8);
        // CB C8 0040
        gbc.setState(0x49c1, 0x25fa, 0x20, 0xdc46, 0x19c3, 0x9ec3, 0x0, 0x1);
        gbc.writeMem(0x49c1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x25fa);
        EXPECT(gbc.pc(), 0x49c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0041
        gbc.setState(0x3110, 0x6a43, 0xe870, 0x2207, 0x8045, 0x51a3, 0x1, 0x0);
        gbc.writeMem(0x3110, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6a43);
        EXPECT(gbc.pc(), 0x3112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0043
        gbc.setState(0x6250, 0xe56f, 0xf820, 0x712c, 0xa1d5, 0xd541, 0x0, 0x1);
        gbc.writeMem(0x6250, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe56f);
        EXPECT(gbc.pc(), 0x6252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0044
        gbc.setState(0x6889, 0x4b49, 0xee70, 0x2992, 0xbf51, 0x531f, 0x1, 0x0);
        gbc.writeMem(0x6889, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4b49);
        EXPECT(gbc.pc(), 0x688b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0045
        gbc.setState(0xae6e, 0xe8e7, 0x95f0, 0x3980, 0x404c, 0x1c57, 0x0, 0x0);
        gbc.writeMem(0xae6e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe8e7);
        EXPECT(gbc.pc(), 0xae70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6e), 0xcb);
        EXPECT(gbc.readMem(0xae6f), 0xc8);
        // CB C8 0046
        gbc.setState(0x1ad9, 0xe9e6, 0xd060, 0xa3b8, 0xdf50, 0x3e51, 0x0, 0x0);
        gbc.writeMem(0x1ad9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe9e6);
        EXPECT(gbc.pc(), 0x1adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0047
        gbc.setState(0xaf10, 0x53b8, 0xe500, 0xe57b, 0x7fd8, 0x8558, 0x1, 0x0);
        gbc.writeMem(0xaf10, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x53b8);
        EXPECT(gbc.pc(), 0xaf12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf10), 0xcb);
        EXPECT(gbc.readMem(0xaf11), 0xc8);
        // CB C8 0049
        gbc.setState(0x2235, 0x1117, 0xbf90, 0xf47d, 0xfd3f, 0x726e, 0x1, 0x1);
        gbc.writeMem(0x2235, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1117);
        EXPECT(gbc.pc(), 0x2237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 004A
        gbc.setState(0x310b, 0x61d2, 0xbcd0, 0x33f4, 0x82d4, 0x4735, 0x0, 0x0);
        gbc.writeMem(0x310b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x61d2);
        EXPECT(gbc.pc(), 0x310d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 004B
        gbc.setState(0x1ce8, 0x9cc, 0xdae0, 0x3f6a, 0x2bc, 0xe4ac, 0x1, 0x1);
        gbc.writeMem(0x1ce8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9cc);
        EXPECT(gbc.pc(), 0x1cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 004C
        gbc.setState(0xc7a8, 0xe9b9, 0x6f10, 0x993c, 0xb3ad, 0xc594, 0x1, 0x1);
        gbc.writeMem(0xc7a8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe9b9);
        EXPECT(gbc.pc(), 0xc7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a8), 0xcb);
        EXPECT(gbc.readMem(0xc7a9), 0xc8);
        // CB C8 004D
        gbc.setState(0x9c35, 0x9b21, 0x2f50, 0x585e, 0x1b13, 0xfe71, 0x1, 0x0);
        gbc.writeMem(0x9c35, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9b21);
        EXPECT(gbc.pc(), 0x9c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c35), 0xcb);
        EXPECT(gbc.readMem(0x9c36), 0xc8);
        // CB C8 004F
        gbc.setState(0xcc06, 0xe1fb, 0xce60, 0xa489, 0x7b2b, 0x3f83, 0x0, 0x1);
        gbc.writeMem(0xcc06, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe1fb);
        EXPECT(gbc.pc(), 0xcc08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc06), 0xcb);
        EXPECT(gbc.readMem(0xcc07), 0xc8);
        // CB C8 0051
        gbc.setState(0x2071, 0x33d7, 0xb010, 0x1801, 0xc66f, 0xe34e, 0x0, 0x1);
        gbc.writeMem(0x2071, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x33d7);
        EXPECT(gbc.pc(), 0x2073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0052
        gbc.setState(0x2745, 0x3ad1, 0xf380, 0x3fc7, 0x8bcd, 0xd85f, 0x1, 0x0);
        gbc.writeMem(0x2745, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3ad1);
        EXPECT(gbc.pc(), 0x2747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0053
        gbc.setState(0xd7a5, 0x1592, 0xc130, 0xd4ec, 0xf472, 0xc964, 0x0, 0x1);
        gbc.writeMem(0xd7a5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1592);
        EXPECT(gbc.pc(), 0xd7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a5), 0xcb);
        EXPECT(gbc.readMem(0xd7a6), 0xc8);
        // CB C8 0054
        gbc.setState(0x81e0, 0xf112, 0x4c60, 0x1b3, 0x2625, 0xf26a, 0x1, 0x1);
        gbc.writeMem(0x81e0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf112);
        EXPECT(gbc.pc(), 0x81e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e0), 0xcb);
        EXPECT(gbc.readMem(0x81e1), 0xc8);
        // CB C8 0055
        gbc.setState(0x1d72, 0x34b9, 0xb9e0, 0x9c1a, 0xf68, 0x59ec, 0x1, 0x1);
        gbc.writeMem(0x1d72, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x34b9);
        EXPECT(gbc.pc(), 0x1d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0056
        gbc.setState(0xe4be, 0xe39e, 0xdb40, 0x86e1, 0xafff, 0x55d3, 0x1, 0x1);
        gbc.writeMem(0xe4be, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe39e);
        EXPECT(gbc.pc(), 0xe4c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4be), 0xcb);
        EXPECT(gbc.readMem(0xe4bf), 0xc8);
        // CB C8 0057
        gbc.setState(0x63c4, 0x97b1, 0xe520, 0x1f89, 0x394e, 0xf241, 0x1, 0x0);
        gbc.writeMem(0x63c4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x97b1);
        EXPECT(gbc.pc(), 0x63c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0058
        gbc.setState(0x5026, 0x9c46, 0x4ce0, 0xef24, 0xbe7a, 0x7d2f, 0x1, 0x1);
        gbc.writeMem(0x5026, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9c46);
        EXPECT(gbc.pc(), 0x5028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0059
        gbc.setState(0x3461, 0x318b, 0x4210, 0xa113, 0x52e4, 0x0, 0x1, 0x1);
        gbc.writeMem(0x3461, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x318b);
        EXPECT(gbc.pc(), 0x3463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 005A
        gbc.setState(0x431d, 0xf985, 0xf080, 0x46ee, 0xb37c, 0x7cf3, 0x0, 0x0);
        gbc.writeMem(0x431d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf985);
        EXPECT(gbc.pc(), 0x431f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 005B
        gbc.setState(0x196f, 0x6ac3, 0x74c0, 0x3200, 0x74c5, 0xbc88, 0x1, 0x1);
        gbc.writeMem(0x196f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6ac3);
        EXPECT(gbc.pc(), 0x1971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 005C
        gbc.setState(0xe3bf, 0xc2c9, 0x1090, 0xf14c, 0xed02, 0x28d8, 0x0, 0x0);
        gbc.writeMem(0xe3bf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc2c9);
        EXPECT(gbc.pc(), 0xe3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bf), 0xcb);
        EXPECT(gbc.readMem(0xe3c0), 0xc8);
        // CB C8 005D
        gbc.setState(0x6e7a, 0x1be0, 0xd650, 0x1a29, 0xe353, 0x10f6, 0x0, 0x0);
        gbc.writeMem(0x6e7a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1be0);
        EXPECT(gbc.pc(), 0x6e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 005E
        gbc.setState(0x2a24, 0x66c5, 0x6940, 0x4faf, 0x951f, 0xac59, 0x0, 0x0);
        gbc.writeMem(0x2a24, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x66c5);
        EXPECT(gbc.pc(), 0x2a26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 005F
        gbc.setState(0x86cb, 0xfb29, 0x30c0, 0xdec1, 0xaf33, 0x82ab, 0x1, 0x0);
        gbc.writeMem(0x86cb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfb29);
        EXPECT(gbc.pc(), 0x86cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86cb), 0xcb);
        EXPECT(gbc.readMem(0x86cc), 0xc8);
        // CB C8 0060
        gbc.setState(0x2042, 0x387c, 0x1ad0, 0xb042, 0x59bc, 0xe92e, 0x1, 0x1);
        gbc.writeMem(0x2042, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x387c);
        EXPECT(gbc.pc(), 0x2044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0061
        gbc.setState(0x3699, 0x930a, 0x7460, 0xa041, 0x50ac, 0xc614, 0x1, 0x0);
        gbc.writeMem(0x3699, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x930a);
        EXPECT(gbc.pc(), 0x369b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0062
        gbc.setState(0x3ffb, 0xbe4f, 0x84d0, 0xab54, 0xd09f, 0x7e05, 0x1, 0x0);
        gbc.writeMem(0x3ffb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbe4f);
        EXPECT(gbc.pc(), 0x3ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0063
        gbc.setState(0x98c6, 0x8235, 0x7430, 0x1ee3, 0xca7a, 0x5330, 0x1, 0x0);
        gbc.writeMem(0x98c6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8235);
        EXPECT(gbc.pc(), 0x98c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c6), 0xcb);
        EXPECT(gbc.readMem(0x98c7), 0xc8);
        // CB C8 0064
        gbc.setState(0x660e, 0xf301, 0xda50, 0x8f5e, 0x674e, 0xb147, 0x0, 0x1);
        gbc.writeMem(0x660e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf301);
        EXPECT(gbc.pc(), 0x6610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0065
        gbc.setState(0xac35, 0x614f, 0x3020, 0x4726, 0x40e8, 0x3cb8, 0x0, 0x0);
        gbc.writeMem(0xac35, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x614f);
        EXPECT(gbc.pc(), 0xac37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac35), 0xcb);
        EXPECT(gbc.readMem(0xac36), 0xc8);
        // CB C8 0067
        gbc.setState(0xbfe8, 0xd383, 0x4470, 0xd2be, 0x429, 0x1a49, 0x1, 0x1);
        gbc.writeMem(0xbfe8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd383);
        EXPECT(gbc.pc(), 0xbfea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe8), 0xcb);
        EXPECT(gbc.readMem(0xbfe9), 0xc8);
        // CB C8 0069
        gbc.setState(0xb324, 0xf794, 0x47e0, 0x8732, 0xe668, 0x7b3b, 0x1, 0x0);
        gbc.writeMem(0xb324, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf794);
        EXPECT(gbc.pc(), 0xb326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb324), 0xcb);
        EXPECT(gbc.readMem(0xb325), 0xc8);
        // CB C8 006A
        gbc.setState(0xa45c, 0x8333, 0x58a0, 0xb39c, 0xe31d, 0x8f21, 0x0, 0x1);
        gbc.writeMem(0xa45c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8333);
        EXPECT(gbc.pc(), 0xa45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45c), 0xcb);
        EXPECT(gbc.readMem(0xa45d), 0xc8);
        // CB C8 006B
        gbc.setState(0xcaae, 0x4db3, 0xb350, 0x9e71, 0x6f6a, 0x5684, 0x1, 0x0);
        gbc.writeMem(0xcaae, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4db3);
        EXPECT(gbc.pc(), 0xcab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaae), 0xcb);
        EXPECT(gbc.readMem(0xcaaf), 0xc8);
        // CB C8 006C
        gbc.setState(0xada, 0x8371, 0xbf0, 0x597a, 0x7b57, 0x25e5, 0x1, 0x0);
        gbc.writeMem(0xada, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8371);
        EXPECT(gbc.pc(), 0xadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 006D
        gbc.setState(0x38d1, 0xaa00, 0x1ef0, 0x223c, 0x607f, 0xe032, 0x0, 0x1);
        gbc.writeMem(0x38d1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaa00);
        EXPECT(gbc.pc(), 0x38d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 006E
        gbc.setState(0x1a9a, 0x3e84, 0x5cd0, 0x5e90, 0x7e4b, 0x130f, 0x0, 0x1);
        gbc.writeMem(0x1a9a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3e84);
        EXPECT(gbc.pc(), 0x1a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 006F
        gbc.setState(0x2c15, 0xe2e5, 0x4b90, 0xa54e, 0x27ad, 0x1dc, 0x1, 0x1);
        gbc.writeMem(0x2c15, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe2e5);
        EXPECT(gbc.pc(), 0x2c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0070
        gbc.setState(0xc3ff, 0x4fb4, 0xa700, 0x4985, 0x9673, 0xfbf4, 0x1, 0x1);
        gbc.writeMem(0xc3ff, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4fb4);
        EXPECT(gbc.pc(), 0xc401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ff), 0xcb);
        EXPECT(gbc.readMem(0xc400), 0xc8);
        // CB C8 0071
        gbc.setState(0x6fe, 0x1b47, 0xc310, 0x222f, 0xe21b, 0x63e1, 0x0, 0x1);
        gbc.writeMem(0x6fe, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1b47);
        EXPECT(gbc.pc(), 0x700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0072
        gbc.setState(0x2a17, 0xac6f, 0x9bb0, 0x5b0d, 0xa250, 0xb537, 0x0, 0x1);
        gbc.writeMem(0x2a17, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xac6f);
        EXPECT(gbc.pc(), 0x2a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0073
        gbc.setState(0x21d2, 0x8302, 0x6940, 0x7c27, 0x9d58, 0xb2da, 0x0, 0x0);
        gbc.writeMem(0x21d2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8302);
        EXPECT(gbc.pc(), 0x21d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0074
        gbc.setState(0x647e, 0x654c, 0x8800, 0x1102, 0xe07, 0x1926, 0x1, 0x1);
        gbc.writeMem(0x647e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x654c);
        EXPECT(gbc.pc(), 0x6480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0075
        gbc.setState(0xdbcc, 0x2647, 0xc4c0, 0xc2c0, 0x85c3, 0xc7c5, 0x0, 0x1);
        gbc.writeMem(0xdbcc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2647);
        EXPECT(gbc.pc(), 0xdbce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbcc), 0xcb);
        EXPECT(gbc.readMem(0xdbcd), 0xc8);
        // CB C8 0076
        gbc.setState(0xa9fa, 0xbc20, 0x5ed0, 0xb740, 0x3dfb, 0x31b1, 0x0, 0x1);
        gbc.writeMem(0xa9fa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbc20);
        EXPECT(gbc.pc(), 0xa9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9fa), 0xcb);
        EXPECT(gbc.readMem(0xa9fb), 0xc8);
        // CB C8 0077
        gbc.setState(0x3c73, 0x7ede, 0xac60, 0x35d9, 0xde3f, 0x9924, 0x1, 0x0);
        gbc.writeMem(0x3c73, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7ede);
        EXPECT(gbc.pc(), 0x3c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 007A
        gbc.setState(0x9306, 0x6ea0, 0xd850, 0x66c7, 0x5e0c, 0x9898, 0x1, 0x1);
        gbc.writeMem(0x9306, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6ea0);
        EXPECT(gbc.pc(), 0x9308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9306), 0xcb);
        EXPECT(gbc.readMem(0x9307), 0xc8);
        // CB C8 007B
        gbc.setState(0x6f5c, 0x344e, 0x2960, 0xfab, 0xbbde, 0x52a1, 0x0, 0x1);
        gbc.writeMem(0x6f5c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x344e);
        EXPECT(gbc.pc(), 0x6f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 007C
        gbc.setState(0x461f, 0x71f, 0xdfa0, 0x9fa6, 0x2f3e, 0x56e9, 0x1, 0x0);
        gbc.writeMem(0x461f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x71f);
        EXPECT(gbc.pc(), 0x4621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 007D
        gbc.setState(0xc6c0, 0xd17d, 0x49d0, 0x2a2, 0xebfd, 0xcef, 0x0, 0x1);
        gbc.writeMem(0xc6c0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd17d);
        EXPECT(gbc.pc(), 0xc6c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c0), 0xcb);
        EXPECT(gbc.readMem(0xc6c1), 0xc8);
        // CB C8 007E
        gbc.setState(0x6e29, 0x5cd, 0x9540, 0xd3ff, 0x5bd8, 0x823f, 0x1, 0x0);
        gbc.writeMem(0x6e29, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5cd);
        EXPECT(gbc.pc(), 0x6e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0080
        gbc.setState(0x9b5a, 0xbac1, 0x15f0, 0x88ba, 0x70ba, 0x29b0, 0x0, 0x1);
        gbc.writeMem(0x9b5a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbac1);
        EXPECT(gbc.pc(), 0x9b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5a), 0xcb);
        EXPECT(gbc.readMem(0x9b5b), 0xc8);
        // CB C8 0083
        gbc.setState(0xbb97, 0xec3c, 0xcb70, 0x6bc4, 0x951d, 0xb09c, 0x1, 0x1);
        gbc.writeMem(0xbb97, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xec3c);
        EXPECT(gbc.pc(), 0xbb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb97), 0xcb);
        EXPECT(gbc.readMem(0xbb98), 0xc8);
        // CB C8 0084
        gbc.setState(0x88e6, 0xf622, 0xb250, 0xf980, 0x3670, 0x4a26, 0x0, 0x1);
        gbc.writeMem(0x88e6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf622);
        EXPECT(gbc.pc(), 0x88e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e6), 0xcb);
        EXPECT(gbc.readMem(0x88e7), 0xc8);
        // CB C8 0085
        gbc.setState(0x201a, 0xcc88, 0x8470, 0x12e2, 0x580f, 0xb142, 0x1, 0x1);
        gbc.writeMem(0x201a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcc88);
        EXPECT(gbc.pc(), 0x201c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0086
        gbc.setState(0x360c, 0x20b, 0xf9c0, 0x15f9, 0xa851, 0x6300, 0x0, 0x0);
        gbc.writeMem(0x360c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x20b);
        EXPECT(gbc.pc(), 0x360e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0087
        gbc.setState(0x3dc2, 0x8f71, 0x190, 0x500a, 0x7c67, 0x5229, 0x0, 0x0);
        gbc.writeMem(0x3dc2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8f71);
        EXPECT(gbc.pc(), 0x3dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0088
        gbc.setState(0xaa02, 0x3a92, 0x2660, 0xe7eb, 0xaaaa, 0x81e2, 0x0, 0x0);
        gbc.writeMem(0xaa02, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3a92);
        EXPECT(gbc.pc(), 0xaa04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa02), 0xcb);
        EXPECT(gbc.readMem(0xaa03), 0xc8);
        // CB C8 0089
        gbc.setState(0x9dae, 0x300a, 0x1290, 0x3ad9, 0x10c, 0xa5f5, 0x1, 0x1);
        gbc.writeMem(0x9dae, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x300a);
        EXPECT(gbc.pc(), 0x9db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dae), 0xcb);
        EXPECT(gbc.readMem(0x9daf), 0xc8);
        // CB C8 008A
        gbc.setState(0xd80f, 0xd020, 0x3380, 0xba42, 0xea48, 0xa1a5, 0x1, 0x0);
        gbc.writeMem(0xd80f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd020);
        EXPECT(gbc.pc(), 0xd811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80f), 0xcb);
        EXPECT(gbc.readMem(0xd810), 0xc8);
        // CB C8 008B
        gbc.setState(0x7ca1, 0xe469, 0x3f0, 0x4830, 0xcab9, 0x1975, 0x0, 0x0);
        gbc.writeMem(0x7ca1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe469);
        EXPECT(gbc.pc(), 0x7ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 008C
        gbc.setState(0xcf4c, 0xf390, 0x6380, 0x4ed9, 0x6fbe, 0x4432, 0x1, 0x1);
        gbc.writeMem(0xcf4c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf390);
        EXPECT(gbc.pc(), 0xcf4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4c), 0xcb);
        EXPECT(gbc.readMem(0xcf4d), 0xc8);
        // CB C8 008D
        gbc.setState(0x4458, 0x19c9, 0xe670, 0x1988, 0x1c8a, 0xb330, 0x1, 0x1);
        gbc.writeMem(0x4458, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x19c9);
        EXPECT(gbc.pc(), 0x445a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 008E
        gbc.setState(0xdcb9, 0xe7cf, 0xc830, 0xdb67, 0xf31e, 0x7c2c, 0x0, 0x1);
        gbc.writeMem(0xdcb9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe7cf);
        EXPECT(gbc.pc(), 0xdcbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb9), 0xcb);
        EXPECT(gbc.readMem(0xdcba), 0xc8);
        // CB C8 008F
        gbc.setState(0xa90d, 0xfada, 0x8550, 0xdacf, 0x351b, 0x5176, 0x0, 0x1);
        gbc.writeMem(0xa90d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfada);
        EXPECT(gbc.pc(), 0xa90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa90d), 0xcb);
        EXPECT(gbc.readMem(0xa90e), 0xc8);
        // CB C8 0090
        gbc.setState(0x2d1a, 0x45e4, 0xf550, 0xaf6e, 0xc1c3, 0x1e0, 0x1, 0x0);
        gbc.writeMem(0x2d1a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x45e4);
        EXPECT(gbc.pc(), 0x2d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0091
        gbc.setState(0x40ea, 0xa4c, 0x1200, 0x616d, 0xe55a, 0x98b7, 0x1, 0x1);
        gbc.writeMem(0x40ea, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa4c);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0092
        gbc.setState(0x40c4, 0x1443, 0x3600, 0x734a, 0xc07e, 0xc881, 0x0, 0x1);
        gbc.writeMem(0x40c4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1443);
        EXPECT(gbc.pc(), 0x40c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0093
        gbc.setState(0x3152, 0xfd2f, 0x7750, 0xfd90, 0x227c, 0x7219, 0x0, 0x0);
        gbc.writeMem(0x3152, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfd2f);
        EXPECT(gbc.pc(), 0x3154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0094
        gbc.setState(0xb690, 0xa243, 0x5a00, 0x2431, 0x725d, 0x3762, 0x0, 0x0);
        gbc.writeMem(0xb690, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa243);
        EXPECT(gbc.pc(), 0xb692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb690), 0xcb);
        EXPECT(gbc.readMem(0xb691), 0xc8);
        // CB C8 0095
        gbc.setState(0xc944, 0x3faf, 0xf220, 0x249b, 0x9e7c, 0x788, 0x1, 0x0);
        gbc.writeMem(0xc944, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3faf);
        EXPECT(gbc.pc(), 0xc946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc944), 0xcb);
        EXPECT(gbc.readMem(0xc945), 0xc8);
        // CB C8 0096
        gbc.setState(0xb7e0, 0x9602, 0x2390, 0xad70, 0x8856, 0xda55, 0x1, 0x0);
        gbc.writeMem(0xb7e0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9602);
        EXPECT(gbc.pc(), 0xb7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e0), 0xcb);
        EXPECT(gbc.readMem(0xb7e1), 0xc8);
        // CB C8 0097
        gbc.setState(0xa8a1, 0x9c0b, 0x22f0, 0xa5cf, 0xa770, 0xd955, 0x0, 0x0);
        gbc.writeMem(0xa8a1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9c0b);
        EXPECT(gbc.pc(), 0xa8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a1), 0xcb);
        EXPECT(gbc.readMem(0xa8a2), 0xc8);
        // CB C8 0098
        gbc.setState(0x9a9a, 0xd4, 0x2640, 0x2e0f, 0xd872, 0x3fed, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd4);
        EXPECT(gbc.pc(), 0x9a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9a), 0xcb);
        EXPECT(gbc.readMem(0x9a9b), 0xc8);
        // CB C8 0099
        gbc.setState(0x9b86, 0xdc31, 0xd630, 0x9a33, 0x812d, 0x3983, 0x1, 0x0);
        gbc.writeMem(0x9b86, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdc31);
        EXPECT(gbc.pc(), 0x9b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b86), 0xcb);
        EXPECT(gbc.readMem(0x9b87), 0xc8);
        // CB C8 009A
        gbc.setState(0xd63e, 0x8bf3, 0xb30, 0x4878, 0x4fda, 0xbdee, 0x1, 0x1);
        gbc.writeMem(0xd63e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8bf3);
        EXPECT(gbc.pc(), 0xd640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63e), 0xcb);
        EXPECT(gbc.readMem(0xd63f), 0xc8);
        // CB C8 009B
        gbc.setState(0x529e, 0xce2f, 0x4a0, 0x44f, 0x407f, 0xfeb9, 0x1, 0x1);
        gbc.writeMem(0x529e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xce2f);
        EXPECT(gbc.pc(), 0x52a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 009C
        gbc.setState(0xda71, 0x256a, 0x7a0, 0xe8db, 0x2df2, 0x354f, 0x1, 0x1);
        gbc.writeMem(0xda71, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x256a);
        EXPECT(gbc.pc(), 0xda73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda71), 0xcb);
        EXPECT(gbc.readMem(0xda72), 0xc8);
        // CB C8 009D
        gbc.setState(0x8e2e, 0x40cc, 0x650, 0xa3d9, 0x6165, 0x6f1a, 0x0, 0x1);
        gbc.writeMem(0x8e2e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x40cc);
        EXPECT(gbc.pc(), 0x8e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e2e), 0xcb);
        EXPECT(gbc.readMem(0x8e2f), 0xc8);
        // CB C8 009E
        gbc.setState(0x3262, 0x910c, 0xb250, 0x31d4, 0xf99f, 0xaccc, 0x1, 0x0);
        gbc.writeMem(0x3262, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x910c);
        EXPECT(gbc.pc(), 0x3264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 009F
        gbc.setState(0xc86, 0xfc12, 0xaed0, 0xc924, 0xbac5, 0x9c1d, 0x0, 0x0);
        gbc.writeMem(0xc86, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfc12);
        EXPECT(gbc.pc(), 0xc88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00A0
        gbc.setState(0x9817, 0x1934, 0xcf60, 0x5f2c, 0x3d45, 0xfe06, 0x1, 0x1);
        gbc.writeMem(0x9817, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1934);
        EXPECT(gbc.pc(), 0x9819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9817), 0xcb);
        EXPECT(gbc.readMem(0x9818), 0xc8);
        // CB C8 00A1
        gbc.setState(0x53fe, 0xc150, 0xf020, 0xe8e0, 0x2907, 0x3d92, 0x1, 0x0);
        gbc.writeMem(0x53fe, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc150);
        EXPECT(gbc.pc(), 0x5400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00A2
        gbc.setState(0x69f7, 0x8c66, 0xfbb0, 0x1873, 0x3318, 0xf55a, 0x1, 0x1);
        gbc.writeMem(0x69f7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8c66);
        EXPECT(gbc.pc(), 0x69f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00A3
        gbc.setState(0x9a24, 0xe29e, 0x2450, 0x526, 0xbf1e, 0x91a8, 0x1, 0x1);
        gbc.writeMem(0x9a24, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe29e);
        EXPECT(gbc.pc(), 0x9a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a24), 0xcb);
        EXPECT(gbc.readMem(0x9a25), 0xc8);
        // CB C8 00A4
        gbc.setState(0x678a, 0xd50, 0x7c60, 0xd2e1, 0x6719, 0xeccd, 0x1, 0x1);
        gbc.writeMem(0x678a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd50);
        EXPECT(gbc.pc(), 0x678c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00A5
        gbc.setState(0x7133, 0xb08f, 0xac60, 0xc172, 0x6e61, 0x4821, 0x0, 0x1);
        gbc.writeMem(0x7133, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb08f);
        EXPECT(gbc.pc(), 0x7135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00A6
        gbc.setState(0xe2f, 0x7083, 0xc9a0, 0x1e2c, 0x4f89, 0x9d4f, 0x1, 0x0);
        gbc.writeMem(0xe2f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7083);
        EXPECT(gbc.pc(), 0xe31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00A7
        gbc.setState(0x2b33, 0xe7e2, 0x2370, 0xd7d5, 0xf108, 0xf510, 0x1, 0x0);
        gbc.writeMem(0x2b33, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe7e2);
        EXPECT(gbc.pc(), 0x2b35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00A8
        gbc.setState(0x7fb5, 0x840e, 0x2850, 0xf17, 0xee7d, 0xd0b3, 0x0, 0x1);
        gbc.writeMem(0x7fb5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x840e);
        EXPECT(gbc.pc(), 0x7fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00A9
        gbc.setState(0x1714, 0x5d68, 0x7020, 0x3d3c, 0x6e27, 0xff71, 0x1, 0x1);
        gbc.writeMem(0x1714, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5d68);
        EXPECT(gbc.pc(), 0x1716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00AA
        gbc.setState(0x6dd1, 0x6c19, 0xec90, 0x449f, 0x174c, 0xd679, 0x0, 0x0);
        gbc.writeMem(0x6dd1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6c19);
        EXPECT(gbc.pc(), 0x6dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00AB
        gbc.setState(0x66e7, 0xc0da, 0xeec0, 0xfb99, 0x1dea, 0x6bb5, 0x0, 0x0);
        gbc.writeMem(0x66e7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc0da);
        EXPECT(gbc.pc(), 0x66e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00AC
        gbc.setState(0x19a6, 0xe4ef, 0x4280, 0xe12c, 0xfe27, 0x3ba4, 0x0, 0x1);
        gbc.writeMem(0x19a6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe4ef);
        EXPECT(gbc.pc(), 0x19a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00AD
        gbc.setState(0x916, 0x1af2, 0x6710, 0x57f1, 0x46c4, 0xa5e6, 0x1, 0x1);
        gbc.writeMem(0x916, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1af2);
        EXPECT(gbc.pc(), 0x918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00AE
        gbc.setState(0xcf8, 0xdf90, 0xbf60, 0xa546, 0x5e35, 0xc529, 0x1, 0x1);
        gbc.writeMem(0xcf8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdf90);
        EXPECT(gbc.pc(), 0xcfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00AF
        gbc.setState(0xb5f, 0xa04d, 0x5730, 0x9b55, 0x59b5, 0x34ab, 0x1, 0x0);
        gbc.writeMem(0xb5f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa04d);
        EXPECT(gbc.pc(), 0xb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00B0
        gbc.setState(0x8e30, 0xe040, 0x3dc0, 0xdb05, 0xd47c, 0x509e, 0x0, 0x1);
        gbc.writeMem(0x8e30, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe040);
        EXPECT(gbc.pc(), 0x8e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e30), 0xcb);
        EXPECT(gbc.readMem(0x8e31), 0xc8);
        // CB C8 00B1
        gbc.setState(0x4323, 0xe397, 0xf670, 0x98ca, 0x80dd, 0x93a4, 0x0, 0x0);
        gbc.writeMem(0x4323, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe397);
        EXPECT(gbc.pc(), 0x4325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00B2
        gbc.setState(0x45e0, 0x3f8a, 0x2870, 0x6d9f, 0xa23a, 0x7348, 0x1, 0x1);
        gbc.writeMem(0x45e0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3f8a);
        EXPECT(gbc.pc(), 0x45e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00B3
        gbc.setState(0xec7d, 0x8214, 0x47e0, 0xae93, 0xe73a, 0xb714, 0x1, 0x0);
        gbc.writeMem(0xec7d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8214);
        EXPECT(gbc.pc(), 0xec7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7d), 0xcb);
        EXPECT(gbc.readMem(0xec7e), 0xc8);
        // CB C8 00B4
        gbc.setState(0x6cbb, 0x82c3, 0xfec0, 0xbd59, 0x5cbd, 0x2da6, 0x1, 0x0);
        gbc.writeMem(0x6cbb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x82c3);
        EXPECT(gbc.pc(), 0x6cbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00B5
        gbc.setState(0x6ad9, 0xecad, 0x6b00, 0x3874, 0x6815, 0x14a1, 0x1, 0x0);
        gbc.writeMem(0x6ad9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xecad);
        EXPECT(gbc.pc(), 0x6adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00B6
        gbc.setState(0xad7b, 0x686f, 0xb280, 0xbe9, 0x63ea, 0xa521, 0x1, 0x0);
        gbc.writeMem(0xad7b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x686f);
        EXPECT(gbc.pc(), 0xad7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7b), 0xcb);
        EXPECT(gbc.readMem(0xad7c), 0xc8);
        // CB C8 00B7
        gbc.setState(0x4f14, 0x7fc0, 0xffc0, 0x4549, 0x84bf, 0x8f81, 0x0, 0x0);
        gbc.writeMem(0x4f14, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7fc0);
        EXPECT(gbc.pc(), 0x4f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00B8
        gbc.setState(0x42b8, 0x305d, 0x3df0, 0xaca2, 0x262b, 0xc2b0, 0x1, 0x0);
        gbc.writeMem(0x42b8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x305d);
        EXPECT(gbc.pc(), 0x42ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00B9
        gbc.setState(0xcb6d, 0xed57, 0xa060, 0x50e0, 0xff3e, 0x19d2, 0x1, 0x0);
        gbc.writeMem(0xcb6d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xed57);
        EXPECT(gbc.pc(), 0xcb6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb6d), 0xcb);
        EXPECT(gbc.readMem(0xcb6e), 0xc8);
        // CB C8 00BA
        gbc.setState(0x4740, 0x6180, 0x1980, 0xe1bb, 0x785a, 0xd90b, 0x0, 0x0);
        gbc.writeMem(0x4740, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6180);
        EXPECT(gbc.pc(), 0x4742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00BB
        gbc.setState(0x8798, 0x577c, 0x1f70, 0x3494, 0x17f1, 0xd0c7, 0x0, 0x0);
        gbc.writeMem(0x8798, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x577c);
        EXPECT(gbc.pc(), 0x879a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8798), 0xcb);
        EXPECT(gbc.readMem(0x8799), 0xc8);
        // CB C8 00BC
        gbc.setState(0x8033, 0x799e, 0xf210, 0xd5c5, 0x3546, 0x8742, 0x1, 0x0);
        gbc.writeMem(0x8033, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x799e);
        EXPECT(gbc.pc(), 0x8035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8033), 0xcb);
        EXPECT(gbc.readMem(0x8034), 0xc8);
        // CB C8 00BD
        gbc.setState(0x67d7, 0xa15d, 0xad00, 0x338a, 0x1f8b, 0x5f3d, 0x1, 0x1);
        gbc.writeMem(0x67d7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa15d);
        EXPECT(gbc.pc(), 0x67d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00BE
        gbc.setState(0xdbaa, 0xf845, 0xd950, 0xb9a4, 0x60d3, 0xdfcd, 0x1, 0x1);
        gbc.writeMem(0xdbaa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf845);
        EXPECT(gbc.pc(), 0xdbac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbaa), 0xcb);
        EXPECT(gbc.readMem(0xdbab), 0xc8);
        // CB C8 00BF
        gbc.setState(0xcc46, 0x84f3, 0xc8a0, 0x7677, 0x6af3, 0xc353, 0x0, 0x1);
        gbc.writeMem(0xcc46, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x84f3);
        EXPECT(gbc.pc(), 0xcc48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc46), 0xcb);
        EXPECT(gbc.readMem(0xcc47), 0xc8);
        // CB C8 00C1
        gbc.setState(0xbd33, 0x90e3, 0x1fe0, 0x1123, 0x1c26, 0x3f66, 0x1, 0x0);
        gbc.writeMem(0xbd33, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x90e3);
        EXPECT(gbc.pc(), 0xbd35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd33), 0xcb);
        EXPECT(gbc.readMem(0xbd34), 0xc8);
        // CB C8 00C2
        gbc.setState(0x569b, 0x6ce5, 0x6650, 0x796e, 0xff0e, 0xc05b, 0x1, 0x0);
        gbc.writeMem(0x569b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6ce5);
        EXPECT(gbc.pc(), 0x569d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00C3
        gbc.setState(0x2bf9, 0x20e0, 0x8c60, 0x8bb6, 0x944a, 0x5bdf, 0x0, 0x0);
        gbc.writeMem(0x2bf9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x20e0);
        EXPECT(gbc.pc(), 0x2bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00C4
        gbc.setState(0x5155, 0xb29b, 0xa7b0, 0x49eb, 0x785d, 0xd5a0, 0x1, 0x1);
        gbc.writeMem(0x5155, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb29b);
        EXPECT(gbc.pc(), 0x5157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00C5
        gbc.setState(0xe782, 0x521a, 0xa1f0, 0xae7d, 0x93d3, 0xa837, 0x1, 0x1);
        gbc.writeMem(0xe782, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x521a);
        EXPECT(gbc.pc(), 0xe784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe782), 0xcb);
        EXPECT(gbc.readMem(0xe783), 0xc8);
        // CB C8 00C6
        gbc.setState(0x45bf, 0x601d, 0x22a0, 0x86e3, 0x9440, 0xdebe, 0x0, 0x0);
        gbc.writeMem(0x45bf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x601d);
        EXPECT(gbc.pc(), 0x45c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00C8
        gbc.setState(0xd3b3, 0x68b1, 0x4420, 0x7544, 0xcf52, 0xbc8d, 0x1, 0x1);
        gbc.writeMem(0xd3b3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x68b1);
        EXPECT(gbc.pc(), 0xd3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b3), 0xcb);
        EXPECT(gbc.readMem(0xd3b4), 0xc8);
        // CB C8 00C9
        gbc.setState(0x6a3f, 0xb47b, 0xa7e0, 0x89c6, 0xb911, 0x53ef, 0x1, 0x1);
        gbc.writeMem(0x6a3f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb47b);
        EXPECT(gbc.pc(), 0x6a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00CA
        gbc.setState(0x5cd1, 0xaac6, 0x2670, 0x4ab3, 0xbdfd, 0x1e35, 0x1, 0x1);
        gbc.writeMem(0x5cd1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xaac6);
        EXPECT(gbc.pc(), 0x5cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00CB
        gbc.setState(0x8654, 0x71db, 0x3330, 0xcd2d, 0xec00, 0x694a, 0x1, 0x1);
        gbc.writeMem(0x8654, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x71db);
        EXPECT(gbc.pc(), 0x8656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8654), 0xcb);
        EXPECT(gbc.readMem(0x8655), 0xc8);
        // CB C8 00CC
        gbc.setState(0xddb, 0x5610, 0xd230, 0x6518, 0x6a58, 0x55ee, 0x1, 0x0);
        gbc.writeMem(0xddb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5610);
        EXPECT(gbc.pc(), 0xddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00CD
        gbc.setState(0xb531, 0xd498, 0x39e0, 0xa9c4, 0xafff, 0x5802, 0x0, 0x0);
        gbc.writeMem(0xb531, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd498);
        EXPECT(gbc.pc(), 0xb533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb531), 0xcb);
        EXPECT(gbc.readMem(0xb532), 0xc8);
        // CB C8 00CE
        gbc.setState(0x25e7, 0x10f4, 0x8c00, 0x5033, 0xe710, 0x94aa, 0x0, 0x1);
        gbc.writeMem(0x25e7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x10f4);
        EXPECT(gbc.pc(), 0x25e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00CF
        gbc.setState(0x733a, 0x7d07, 0x1730, 0x120c, 0x4e7e, 0x57e7, 0x1, 0x0);
        gbc.writeMem(0x733a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7d07);
        EXPECT(gbc.pc(), 0x733c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00D0
        gbc.setState(0x88ae, 0x5647, 0x9b0, 0x760f, 0x664f, 0xb1ee, 0x0, 0x0);
        gbc.writeMem(0x88ae, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5647);
        EXPECT(gbc.pc(), 0x88b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ae), 0xcb);
        EXPECT(gbc.readMem(0x88af), 0xc8);
        // CB C8 00D1
        gbc.setState(0x5ff, 0xcd7, 0x4d10, 0x3cf2, 0x1de2, 0x213e, 0x0, 0x0);
        gbc.writeMem(0x5ff, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xcd7);
        EXPECT(gbc.pc(), 0x601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00D2
        gbc.setState(0x17fc, 0xc470, 0x7a50, 0x43e7, 0xb668, 0xc09e, 0x0, 0x0);
        gbc.writeMem(0x17fc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc470);
        EXPECT(gbc.pc(), 0x17fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00D3
        gbc.setState(0xa6f2, 0x2c0e, 0x4c40, 0xc76f, 0x2961, 0x1da9, 0x1, 0x0);
        gbc.writeMem(0xa6f2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2c0e);
        EXPECT(gbc.pc(), 0xa6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f2), 0xcb);
        EXPECT(gbc.readMem(0xa6f3), 0xc8);
        // CB C8 00D4
        gbc.setState(0x372c, 0x8a94, 0xa390, 0x99a3, 0xd4ab, 0x6d96, 0x0, 0x1);
        gbc.writeMem(0x372c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8a94);
        EXPECT(gbc.pc(), 0x372e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00D5
        gbc.setState(0xb1db, 0x75ae, 0x2f30, 0xc3dd, 0xa24b, 0xdd91, 0x1, 0x0);
        gbc.writeMem(0xb1db, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x75ae);
        EXPECT(gbc.pc(), 0xb1dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1db), 0xcb);
        EXPECT(gbc.readMem(0xb1dc), 0xc8);
        // CB C8 00D6
        gbc.setState(0x831e, 0xf425, 0xf50, 0x550, 0x1479, 0xb06c, 0x0, 0x0);
        gbc.writeMem(0x831e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf425);
        EXPECT(gbc.pc(), 0x8320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831e), 0xcb);
        EXPECT(gbc.readMem(0x831f), 0xc8);
        // CB C8 00D7
        gbc.setState(0x3a0, 0xd043, 0x3da0, 0x60ef, 0x5e6b, 0xcea0, 0x1, 0x1);
        gbc.writeMem(0x3a0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd043);
        EXPECT(gbc.pc(), 0x3a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00D8
        gbc.setState(0x893e, 0xd0d8, 0xc9a0, 0x257a, 0xd86b, 0x41a3, 0x0, 0x1);
        gbc.writeMem(0x893e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd0d8);
        EXPECT(gbc.pc(), 0x8940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x893e), 0xcb);
        EXPECT(gbc.readMem(0x893f), 0xc8);
        // CB C8 00D9
        gbc.setState(0xdb00, 0x33c8, 0x3950, 0x41ff, 0x4409, 0xa981, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x33c8);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb00), 0xcb);
        EXPECT(gbc.readMem(0xdb01), 0xc8);
        // CB C8 00DA
        gbc.setState(0xcc92, 0x3a36, 0x99e0, 0x8b4, 0x27f9, 0xeb2e, 0x0, 0x0);
        gbc.writeMem(0xcc92, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3a36);
        EXPECT(gbc.pc(), 0xcc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc92), 0xcb);
        EXPECT(gbc.readMem(0xcc93), 0xc8);
        // CB C8 00DB
        gbc.setState(0xd22e, 0x77d2, 0xcdc0, 0xb11a, 0x9ecc, 0xd28d, 0x1, 0x0);
        gbc.writeMem(0xd22e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x77d2);
        EXPECT(gbc.pc(), 0xd230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22e), 0xcb);
        EXPECT(gbc.readMem(0xd22f), 0xc8);
        // CB C8 00DC
        gbc.setState(0x515e, 0xa74a, 0x29c0, 0xd9ed, 0xa29a, 0x8d25, 0x1, 0x1);
        gbc.writeMem(0x515e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa74a);
        EXPECT(gbc.pc(), 0x5160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00DD
        gbc.setState(0x638d, 0xcc66, 0x9e20, 0x62c5, 0x7181, 0x467c, 0x1, 0x1);
        gbc.writeMem(0x638d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcc66);
        EXPECT(gbc.pc(), 0x638f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00DE
        gbc.setState(0x43c2, 0xf2f4, 0xd810, 0x7ebf, 0x6ee, 0x4a5, 0x0, 0x0);
        gbc.writeMem(0x43c2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf2f4);
        EXPECT(gbc.pc(), 0x43c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00DF
        gbc.setState(0x6ae0, 0x4672, 0xca00, 0x2381, 0x1802, 0x9907, 0x0, 0x1);
        gbc.writeMem(0x6ae0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4672);
        EXPECT(gbc.pc(), 0x6ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00E0
        gbc.setState(0x3ae7, 0xf1a7, 0x63a0, 0x5f06, 0xfc7f, 0x5d72, 0x1, 0x1);
        gbc.writeMem(0x3ae7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf1a7);
        EXPECT(gbc.pc(), 0x3ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00E1
        gbc.setState(0x24f, 0x98c8, 0x4150, 0x73c6, 0x30fd, 0xb3ff, 0x0, 0x0);
        gbc.writeMem(0x24f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x98c8);
        EXPECT(gbc.pc(), 0x251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00E2
        gbc.setState(0x438f, 0xdddf, 0xe4c0, 0xfe42, 0x347, 0xcae8, 0x0, 0x1);
        gbc.writeMem(0x438f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdddf);
        EXPECT(gbc.pc(), 0x4391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00E3
        gbc.setState(0xbf, 0xb6f4, 0xe290, 0x951c, 0x900c, 0x87fb, 0x0, 0x1);
        gbc.writeMem(0xbf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb6f4);
        EXPECT(gbc.pc(), 0xc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00E4
        gbc.setState(0x96aa, 0xa0a4, 0xb740, 0xdb1, 0x1f80, 0x83b3, 0x1, 0x0);
        gbc.writeMem(0x96aa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa0a4);
        EXPECT(gbc.pc(), 0x96ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96aa), 0xcb);
        EXPECT(gbc.readMem(0x96ab), 0xc8);
        // CB C8 00E5
        gbc.setState(0x62be, 0x5eb1, 0xfb10, 0xb674, 0xb85e, 0x8b70, 0x0, 0x1);
        gbc.writeMem(0x62be, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5eb1);
        EXPECT(gbc.pc(), 0x62c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00E6
        gbc.setState(0x7af0, 0x224b, 0x21c0, 0xdea2, 0x6736, 0x86bf, 0x0, 0x1);
        gbc.writeMem(0x7af0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x224b);
        EXPECT(gbc.pc(), 0x7af2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00E7
        gbc.setState(0xa912, 0x6de5, 0x4b30, 0xf102, 0x1af, 0xe4b7, 0x1, 0x0);
        gbc.writeMem(0xa912, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6de5);
        EXPECT(gbc.pc(), 0xa914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa912), 0xcb);
        EXPECT(gbc.readMem(0xa913), 0xc8);
        // CB C8 00E8
        gbc.setState(0x7c79, 0x5364, 0x290, 0x5919, 0xc9e4, 0xec7a, 0x1, 0x1);
        gbc.writeMem(0x7c79, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5364);
        EXPECT(gbc.pc(), 0x7c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00E9
        gbc.setState(0x1af1, 0xd5a, 0xe890, 0x5fd8, 0xa7f0, 0xd19f, 0x1, 0x1);
        gbc.writeMem(0x1af1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd5a);
        EXPECT(gbc.pc(), 0x1af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00EA
        gbc.setState(0x1703, 0x5f40, 0xcb90, 0xdee7, 0x8b5d, 0x7d97, 0x1, 0x1);
        gbc.writeMem(0x1703, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5f40);
        EXPECT(gbc.pc(), 0x1705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00EB
        gbc.setState(0xec38, 0x5442, 0x9370, 0x3674, 0xa2be, 0x20ae, 0x1, 0x0);
        gbc.writeMem(0xec38, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5442);
        EXPECT(gbc.pc(), 0xec3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec38), 0xcb);
        EXPECT(gbc.readMem(0xec39), 0xc8);
        // CB C8 00EC
        gbc.setState(0x3ae4, 0xeed4, 0xcac0, 0x81d0, 0xcbc7, 0xe52f, 0x1, 0x0);
        gbc.writeMem(0x3ae4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xeed4);
        EXPECT(gbc.pc(), 0x3ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00ED
        gbc.setState(0x55df, 0xbbed, 0x4cd0, 0x453c, 0xcd8b, 0x1ada, 0x0, 0x1);
        gbc.writeMem(0x55df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbbed);
        EXPECT(gbc.pc(), 0x55e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00EE
        gbc.setState(0xe4de, 0x29df, 0x5490, 0x7ae2, 0xb949, 0x3c0c, 0x0, 0x1);
        gbc.writeMem(0xe4de, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x29df);
        EXPECT(gbc.pc(), 0xe4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4de), 0xcb);
        EXPECT(gbc.readMem(0xe4df), 0xc8);
        // CB C8 00EF
        gbc.setState(0x61f7, 0xc707, 0x66b0, 0x1986, 0xa36b, 0xbbb2, 0x1, 0x0);
        gbc.writeMem(0x61f7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc707);
        EXPECT(gbc.pc(), 0x61f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00F0
        gbc.setState(0x56df, 0x29c4, 0xcd0, 0xe2f5, 0xf614, 0xe8c4, 0x1, 0x0);
        gbc.writeMem(0x56df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x29c4);
        EXPECT(gbc.pc(), 0x56e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00F1
        gbc.setState(0x8d32, 0x59f1, 0x8960, 0x369a, 0x7809, 0x6c5d, 0x0, 0x1);
        gbc.writeMem(0x8d32, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x59f1);
        EXPECT(gbc.pc(), 0x8d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d32), 0xcb);
        EXPECT(gbc.readMem(0x8d33), 0xc8);
        // CB C8 00F2
        gbc.setState(0x555f, 0x41fd, 0x3180, 0x1291, 0xdf0, 0xe0a2, 0x0, 0x1);
        gbc.writeMem(0x555f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x5561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00F3
        gbc.setState(0x1736, 0x2718, 0x8170, 0xc199, 0x42de, 0xbe3c, 0x1, 0x1);
        gbc.writeMem(0x1736, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2718);
        EXPECT(gbc.pc(), 0x1738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00F4
        gbc.setState(0x96de, 0x3633, 0x6970, 0x29df, 0x6dc, 0x9e3d, 0x0, 0x1);
        gbc.writeMem(0x96de, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3633);
        EXPECT(gbc.pc(), 0x96e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96de), 0xcb);
        EXPECT(gbc.readMem(0x96df), 0xc8);
        // CB C8 00F5
        gbc.setState(0x350, 0xded, 0x4060, 0xdf09, 0x4086, 0x4988, 0x0, 0x0);
        gbc.writeMem(0x350, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xded);
        EXPECT(gbc.pc(), 0x352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00F6
        gbc.setState(0x89ef, 0x7da6, 0xcbb0, 0x5e6e, 0x6652, 0xbae6, 0x1, 0x0);
        gbc.writeMem(0x89ef, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7da6);
        EXPECT(gbc.pc(), 0x89f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ef), 0xcb);
        EXPECT(gbc.readMem(0x89f0), 0xc8);
        // CB C8 00F7
        gbc.setState(0x2edd, 0xbb29, 0x8ae0, 0x3711, 0x23c0, 0xaeb, 0x1, 0x1);
        gbc.writeMem(0x2edd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbb29);
        EXPECT(gbc.pc(), 0x2edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 00F8
        gbc.setState(0x579f, 0x716a, 0xd9b0, 0x6930, 0x1daa, 0x4789, 0x0, 0x0);
        gbc.writeMem(0x579f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x716a);
        EXPECT(gbc.pc(), 0x57a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00F9
        gbc.setState(0x61da, 0x369, 0xb350, 0x9c3b, 0xe7dd, 0xef12, 0x1, 0x1);
        gbc.writeMem(0x61da, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x369);
        EXPECT(gbc.pc(), 0x61dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00FA
        gbc.setState(0xeba6, 0x4152, 0x870, 0x15e2, 0x844d, 0x7484, 0x0, 0x1);
        gbc.writeMem(0xeba6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4152);
        EXPECT(gbc.pc(), 0xeba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba6), 0xcb);
        EXPECT(gbc.readMem(0xeba7), 0xc8);
        // CB C8 00FB
        gbc.setState(0x765b, 0x679f, 0xeb70, 0x3c1, 0xd979, 0x95ba, 0x1, 0x0);
        gbc.writeMem(0x765b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x679f);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 00FC
        gbc.setState(0xae4f, 0xc99b, 0xdc40, 0x7b78, 0x34e1, 0x6c2c, 0x0, 0x1);
        gbc.writeMem(0xae4f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc99b);
        EXPECT(gbc.pc(), 0xae51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4f), 0xcb);
        EXPECT(gbc.readMem(0xae50), 0xc8);
        // CB C8 00FE
        gbc.setState(0x8af5, 0xa032, 0x5130, 0x672d, 0x1a7e, 0x2b93, 0x1, 0x0);
        gbc.writeMem(0x8af5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa032);
        EXPECT(gbc.pc(), 0x8af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af5), 0xcb);
        EXPECT(gbc.readMem(0x8af6), 0xc8);
        // CB C8 00FF
        gbc.setState(0xbd6b, 0xd43b, 0xca60, 0x5296, 0x8a21, 0x6128, 0x0, 0x1);
        gbc.writeMem(0xbd6b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd43b);
        EXPECT(gbc.pc(), 0xbd6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6b), 0xcb);
        EXPECT(gbc.readMem(0xbd6c), 0xc8);
        // CB C8 0100
        gbc.setState(0xbf90, 0x260a, 0x7270, 0xb2b2, 0x6bc1, 0x6c27, 0x0, 0x1);
        gbc.writeMem(0xbf90, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x260a);
        EXPECT(gbc.pc(), 0xbf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf90), 0xcb);
        EXPECT(gbc.readMem(0xbf91), 0xc8);
        // CB C8 0101
        gbc.setState(0xab9d, 0xb402, 0xe9c0, 0xa05a, 0xb157, 0x8176, 0x0, 0x1);
        gbc.writeMem(0xab9d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb402);
        EXPECT(gbc.pc(), 0xab9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9d), 0xcb);
        EXPECT(gbc.readMem(0xab9e), 0xc8);
        // CB C8 0103
        gbc.setState(0x566d, 0x792a, 0xc690, 0x3571, 0xc55d, 0xefe3, 0x0, 0x0);
        gbc.writeMem(0x566d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x792a);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0104
        gbc.setState(0xca09, 0xe9f2, 0x8470, 0x25a0, 0xdae, 0xa13f, 0x1, 0x1);
        gbc.writeMem(0xca09, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe9f2);
        EXPECT(gbc.pc(), 0xca0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca09), 0xcb);
        EXPECT(gbc.readMem(0xca0a), 0xc8);
        // CB C8 0106
        gbc.setState(0x6cb8, 0xdb03, 0xf6a0, 0x723c, 0xe6ec, 0x956a, 0x1, 0x0);
        gbc.writeMem(0x6cb8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdb03);
        EXPECT(gbc.pc(), 0x6cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0107
        gbc.setState(0x59e2, 0x6e07, 0xe40, 0x4689, 0xddda, 0xe836, 0x1, 0x0);
        gbc.writeMem(0x59e2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6e07);
        EXPECT(gbc.pc(), 0x59e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0108
        gbc.setState(0x2a5c, 0x7748, 0x6c50, 0x9c66, 0xe064, 0xa647, 0x1, 0x1);
        gbc.writeMem(0x2a5c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7748);
        EXPECT(gbc.pc(), 0x2a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0109
        gbc.setState(0xebde, 0x1bea, 0xf860, 0xdfe5, 0xab70, 0x43f1, 0x0, 0x0);
        gbc.writeMem(0xebde, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1bea);
        EXPECT(gbc.pc(), 0xebe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebde), 0xcb);
        EXPECT(gbc.readMem(0xebdf), 0xc8);
        // CB C8 010A
        gbc.setState(0x945f, 0xea95, 0x8600, 0xaad3, 0x3a19, 0xf45b, 0x0, 0x0);
        gbc.writeMem(0x945f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xea95);
        EXPECT(gbc.pc(), 0x9461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945f), 0xcb);
        EXPECT(gbc.readMem(0x9460), 0xc8);
        // CB C8 010B
        gbc.setState(0xa3ec, 0x7dc2, 0x6dc0, 0x9c2f, 0xf82c, 0xf3aa, 0x1, 0x0);
        gbc.writeMem(0xa3ec, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7dc2);
        EXPECT(gbc.pc(), 0xa3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ec), 0xcb);
        EXPECT(gbc.readMem(0xa3ed), 0xc8);
        // CB C8 010C
        gbc.setState(0x2087, 0x371a, 0xbc90, 0xcb0b, 0xe88e, 0xf, 0x1, 0x1);
        gbc.writeMem(0x2087, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x371a);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 010D
        gbc.setState(0x758b, 0xe5cc, 0x6920, 0xf186, 0xb6a4, 0x1186, 0x0, 0x1);
        gbc.writeMem(0x758b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe5cc);
        EXPECT(gbc.pc(), 0x758d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 010E
        gbc.setState(0x3d24, 0x2c3e, 0xf450, 0xa4db, 0x158f, 0x936c, 0x1, 0x0);
        gbc.writeMem(0x3d24, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2c3e);
        EXPECT(gbc.pc(), 0x3d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 010F
        gbc.setState(0x3baf, 0x4da2, 0xb210, 0x65d6, 0xf64d, 0xe10a, 0x1, 0x1);
        gbc.writeMem(0x3baf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4da2);
        EXPECT(gbc.pc(), 0x3bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0110
        gbc.setState(0x7b44, 0x4e14, 0x2da0, 0x7256, 0x9901, 0xc233, 0x1, 0x1);
        gbc.writeMem(0x7b44, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4e14);
        EXPECT(gbc.pc(), 0x7b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0111
        gbc.setState(0xc346, 0x51f0, 0x2a90, 0x300f, 0xaac1, 0x457, 0x1, 0x1);
        gbc.writeMem(0xc346, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x51f0);
        EXPECT(gbc.pc(), 0xc348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc346), 0xcb);
        EXPECT(gbc.readMem(0xc347), 0xc8);
        // CB C8 0112
        gbc.setState(0x970f, 0x79c0, 0x3080, 0x520f, 0xde2e, 0x7ca5, 0x0, 0x1);
        gbc.writeMem(0x970f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x79c0);
        EXPECT(gbc.pc(), 0x9711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970f), 0xcb);
        EXPECT(gbc.readMem(0x9710), 0xc8);
        // CB C8 0113
        gbc.setState(0xa8f, 0x15ac, 0x5b30, 0x4c26, 0xd35e, 0x6936, 0x0, 0x0);
        gbc.writeMem(0xa8f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x15ac);
        EXPECT(gbc.pc(), 0xa91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0114
        gbc.setState(0xa4ff, 0x167c, 0x65a0, 0x9119, 0xca3b, 0xabe9, 0x1, 0x0);
        gbc.writeMem(0xa4ff, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x167c);
        EXPECT(gbc.pc(), 0xa501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ff), 0xcb);
        EXPECT(gbc.readMem(0xa500), 0xc8);
        // CB C8 0115
        gbc.setState(0xd9f9, 0x8aae, 0x9270, 0xc6f, 0x9d0e, 0xd7bc, 0x0, 0x1);
        gbc.writeMem(0xd9f9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8aae);
        EXPECT(gbc.pc(), 0xd9fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f9), 0xcb);
        EXPECT(gbc.readMem(0xd9fa), 0xc8);
        // CB C8 0116
        gbc.setState(0x6fd7, 0x7cc4, 0x9b50, 0x54db, 0xc08e, 0x1e86, 0x1, 0x1);
        gbc.writeMem(0x6fd7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7cc4);
        EXPECT(gbc.pc(), 0x6fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0117
        gbc.setState(0x7da9, 0x5f85, 0x3fc0, 0xa117, 0x9355, 0x84fa, 0x1, 0x1);
        gbc.writeMem(0x7da9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5f85);
        EXPECT(gbc.pc(), 0x7dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0118
        gbc.setState(0x208d, 0x66a, 0xcb0, 0x8279, 0x55cb, 0x1f9e, 0x0, 0x0);
        gbc.writeMem(0x208d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x66a);
        EXPECT(gbc.pc(), 0x208f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0119
        gbc.setState(0xa2a5, 0xf1c6, 0xf270, 0xe1f1, 0x9466, 0x8684, 0x1, 0x0);
        gbc.writeMem(0xa2a5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf1c6);
        EXPECT(gbc.pc(), 0xa2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a5), 0xcb);
        EXPECT(gbc.readMem(0xa2a6), 0xc8);
        // CB C8 011A
        gbc.setState(0x4901, 0x2732, 0xf7f0, 0x73d1, 0xf435, 0x5d50, 0x1, 0x0);
        gbc.writeMem(0x4901, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2732);
        EXPECT(gbc.pc(), 0x4903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 011B
        gbc.setState(0x916a, 0x5dd0, 0xe8b0, 0x51b1, 0xeb8, 0x3579, 0x0, 0x0);
        gbc.writeMem(0x916a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5dd0);
        EXPECT(gbc.pc(), 0x916c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916a), 0xcb);
        EXPECT(gbc.readMem(0x916b), 0xc8);
        // CB C8 011C
        gbc.setState(0x859a, 0xc9f9, 0x1150, 0x1c6d, 0x551b, 0xee72, 0x1, 0x0);
        gbc.writeMem(0x859a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc9f9);
        EXPECT(gbc.pc(), 0x859c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859a), 0xcb);
        EXPECT(gbc.readMem(0x859b), 0xc8);
        // CB C8 011D
        gbc.setState(0x3a9c, 0xd5f8, 0x3fc0, 0xb867, 0x9a1a, 0xf8d4, 0x0, 0x0);
        gbc.writeMem(0x3a9c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd5f8);
        EXPECT(gbc.pc(), 0x3a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 011E
        gbc.setState(0xbc2b, 0x87e6, 0xe9b0, 0xfe94, 0xa4cd, 0x6e4c, 0x1, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x87e6);
        EXPECT(gbc.pc(), 0xbc2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2b), 0xcb);
        EXPECT(gbc.readMem(0xbc2c), 0xc8);
        // CB C8 011F
        gbc.setState(0x61a4, 0xe969, 0xe0e0, 0xd320, 0xa760, 0xd70e, 0x1, 0x0);
        gbc.writeMem(0x61a4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe969);
        EXPECT(gbc.pc(), 0x61a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0120
        gbc.setState(0xe5a1, 0xc5df, 0x3c80, 0xa8d9, 0x893e, 0x4af3, 0x0, 0x1);
        gbc.writeMem(0xe5a1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc5df);
        EXPECT(gbc.pc(), 0xe5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a1), 0xcb);
        EXPECT(gbc.readMem(0xe5a2), 0xc8);
        // CB C8 0121
        gbc.setState(0x8097, 0xef8, 0xa20, 0x47f1, 0xe4dd, 0x8492, 0x0, 0x1);
        gbc.writeMem(0x8097, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xef8);
        EXPECT(gbc.pc(), 0x8099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8097), 0xcb);
        EXPECT(gbc.readMem(0x8098), 0xc8);
        // CB C8 0122
        gbc.setState(0x78ca, 0x6478, 0x7440, 0x6c6c, 0x53e4, 0x8676, 0x1, 0x1);
        gbc.writeMem(0x78ca, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6478);
        EXPECT(gbc.pc(), 0x78cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0123
        gbc.setState(0x28b0, 0xbd83, 0xb180, 0x6d99, 0x85b7, 0x4203, 0x1, 0x0);
        gbc.writeMem(0x28b0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbd83);
        EXPECT(gbc.pc(), 0x28b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0124
        gbc.setState(0xb3f4, 0x6dc3, 0x6190, 0xcec6, 0xe02e, 0xf312, 0x1, 0x0);
        gbc.writeMem(0xb3f4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6dc3);
        EXPECT(gbc.pc(), 0xb3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f4), 0xcb);
        EXPECT(gbc.readMem(0xb3f5), 0xc8);
        // CB C8 0125
        gbc.setState(0x1aa5, 0xcf8c, 0xb850, 0x3212, 0xf112, 0xfbcb, 0x1, 0x1);
        gbc.writeMem(0x1aa5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcf8c);
        EXPECT(gbc.pc(), 0x1aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0126
        gbc.setState(0x6e0, 0x87b1, 0x7d70, 0x3cc1, 0x642f, 0x4acc, 0x1, 0x0);
        gbc.writeMem(0x6e0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0x6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0128
        gbc.setState(0xe63, 0x3e4a, 0x3230, 0xd122, 0xb0e1, 0x5638, 0x0, 0x0);
        gbc.writeMem(0xe63, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3e4a);
        EXPECT(gbc.pc(), 0xe65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0129
        gbc.setState(0x1d07, 0xdcce, 0x1b0, 0xe70a, 0x2799, 0xabf3, 0x0, 0x1);
        gbc.writeMem(0x1d07, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdcce);
        EXPECT(gbc.pc(), 0x1d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 012B
        gbc.setState(0x44a8, 0x7d9, 0xca10, 0x5719, 0xd856, 0xa103, 0x1, 0x1);
        gbc.writeMem(0x44a8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7d9);
        EXPECT(gbc.pc(), 0x44aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 012C
        gbc.setState(0x1bee, 0x412d, 0xb960, 0xefe3, 0x7c13, 0xd4, 0x1, 0x1);
        gbc.writeMem(0x1bee, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x412d);
        EXPECT(gbc.pc(), 0x1bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 012D
        gbc.setState(0x2f65, 0x2b2b, 0x6010, 0x5ac5, 0x1722, 0xf639, 0x1, 0x1);
        gbc.writeMem(0x2f65, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2b2b);
        EXPECT(gbc.pc(), 0x2f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 012E
        gbc.setState(0xe6a4, 0x818f, 0x2590, 0x4590, 0xf6cc, 0xab36, 0x0, 0x0);
        gbc.writeMem(0xe6a4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x818f);
        EXPECT(gbc.pc(), 0xe6a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a4), 0xcb);
        EXPECT(gbc.readMem(0xe6a5), 0xc8);
        // CB C8 012F
        gbc.setState(0xb40b, 0x2954, 0xa120, 0xf191, 0xbadb, 0xf503, 0x1, 0x0);
        gbc.writeMem(0xb40b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2954);
        EXPECT(gbc.pc(), 0xb40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40b), 0xcb);
        EXPECT(gbc.readMem(0xb40c), 0xc8);
        // CB C8 0130
        gbc.setState(0x314, 0x3bfc, 0xa8e0, 0x5b4f, 0x131, 0xc719, 0x1, 0x0);
        gbc.writeMem(0x314, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3bfc);
        EXPECT(gbc.pc(), 0x316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0131
        gbc.setState(0xb2b4, 0x5cb4, 0xdf10, 0x2c80, 0xc43f, 0x321e, 0x1, 0x1);
        gbc.writeMem(0xb2b4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5cb4);
        EXPECT(gbc.pc(), 0xb2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b4), 0xcb);
        EXPECT(gbc.readMem(0xb2b5), 0xc8);
        // CB C8 0132
        gbc.setState(0xef76, 0xc01a, 0xa4b0, 0xf47d, 0x98cf, 0xb409, 0x0, 0x0);
        gbc.writeMem(0xef76, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc01a);
        EXPECT(gbc.pc(), 0xef78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef76), 0xcb);
        EXPECT(gbc.readMem(0xef77), 0xc8);
        // CB C8 0133
        gbc.setState(0x2182, 0xeb9d, 0x5bf0, 0xb7d1, 0xe0b4, 0x433, 0x0, 0x1);
        gbc.writeMem(0x2182, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xeb9d);
        EXPECT(gbc.pc(), 0x2184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0134
        gbc.setState(0x5c6f, 0x56ee, 0x6540, 0x2ba3, 0x4e85, 0xda66, 0x1, 0x1);
        gbc.writeMem(0x5c6f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x56ee);
        EXPECT(gbc.pc(), 0x5c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0135
        gbc.setState(0x374f, 0xc99e, 0x1560, 0x2da4, 0x23a6, 0x58ca, 0x1, 0x0);
        gbc.writeMem(0x374f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc99e);
        EXPECT(gbc.pc(), 0x3751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0136
        gbc.setState(0xdbdd, 0x91d2, 0x9dd0, 0x4c65, 0x7767, 0xd1ac, 0x1, 0x0);
        gbc.writeMem(0xdbdd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x91d2);
        EXPECT(gbc.pc(), 0xdbdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbdd), 0xcb);
        EXPECT(gbc.readMem(0xdbde), 0xc8);
        // CB C8 0137
        gbc.setState(0xc097, 0xb604, 0x3920, 0xc39c, 0xd4e6, 0xc871, 0x1, 0x0);
        gbc.writeMem(0xc097, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb604);
        EXPECT(gbc.pc(), 0xc099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc097), 0xcb);
        EXPECT(gbc.readMem(0xc098), 0xc8);
        // CB C8 0138
        gbc.setState(0x98e1, 0xe54c, 0xf380, 0xd0df, 0xe154, 0xcb2e, 0x0, 0x1);
        gbc.writeMem(0x98e1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe54c);
        EXPECT(gbc.pc(), 0x98e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e1), 0xcb);
        EXPECT(gbc.readMem(0x98e2), 0xc8);
        // CB C8 0139
        gbc.setState(0x5e31, 0x4408, 0x66b0, 0x9a5b, 0xd422, 0x732b, 0x1, 0x0);
        gbc.writeMem(0x5e31, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4408);
        EXPECT(gbc.pc(), 0x5e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 013A
        gbc.setState(0x90e4, 0xf78a, 0x22d0, 0xae88, 0xf667, 0xb2ef, 0x1, 0x1);
        gbc.writeMem(0x90e4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf78a);
        EXPECT(gbc.pc(), 0x90e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e4), 0xcb);
        EXPECT(gbc.readMem(0x90e5), 0xc8);
        // CB C8 013B
        gbc.setState(0xc47c, 0x8, 0xfc30, 0xf7a5, 0xa998, 0xb4f4, 0x1, 0x1);
        gbc.writeMem(0xc47c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8);
        EXPECT(gbc.pc(), 0xc47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47c), 0xcb);
        EXPECT(gbc.readMem(0xc47d), 0xc8);
        // CB C8 013C
        gbc.setState(0x997e, 0xed41, 0xe970, 0x3120, 0x3b78, 0xb605, 0x0, 0x1);
        gbc.writeMem(0x997e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xed41);
        EXPECT(gbc.pc(), 0x9980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x997e), 0xcb);
        EXPECT(gbc.readMem(0x997f), 0xc8);
        // CB C8 013D
        gbc.setState(0x874a, 0x84b0, 0x1900, 0xb3b3, 0xf316, 0x49a6, 0x1, 0x0);
        gbc.writeMem(0x874a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x84b0);
        EXPECT(gbc.pc(), 0x874c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874a), 0xcb);
        EXPECT(gbc.readMem(0x874b), 0xc8);
        // CB C8 013E
        gbc.setState(0x63f2, 0xfab0, 0x97b0, 0x9188, 0x48b7, 0xd750, 0x1, 0x1);
        gbc.writeMem(0x63f2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfab0);
        EXPECT(gbc.pc(), 0x63f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 013F
        gbc.setState(0xefa2, 0xe2fd, 0x78a0, 0xef67, 0x9bd5, 0xf094, 0x1, 0x1);
        gbc.writeMem(0xefa2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe2fd);
        EXPECT(gbc.pc(), 0xefa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa2), 0xcb);
        EXPECT(gbc.readMem(0xefa3), 0xc8);
        // CB C8 0140
        gbc.setState(0x6d86, 0x8e53, 0x2950, 0xb503, 0x9b5f, 0x5ebe, 0x1, 0x1);
        gbc.writeMem(0x6d86, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8e53);
        EXPECT(gbc.pc(), 0x6d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0141
        gbc.setState(0x205a, 0xc66f, 0x3060, 0x5, 0x1f82, 0x984a, 0x0, 0x1);
        gbc.writeMem(0x205a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc66f);
        EXPECT(gbc.pc(), 0x205c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0142
        gbc.setState(0x72bf, 0x6147, 0xf280, 0x1e9f, 0xaebd, 0x5887, 0x1, 0x1);
        gbc.writeMem(0x72bf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6147);
        EXPECT(gbc.pc(), 0x72c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0143
        gbc.setState(0x624f, 0xc0d9, 0x3fb0, 0xa8a6, 0x6ab8, 0xf16e, 0x0, 0x1);
        gbc.writeMem(0x624f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc0d9);
        EXPECT(gbc.pc(), 0x6251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0144
        gbc.setState(0xe99b, 0x4068, 0xc240, 0xcfe9, 0x6694, 0x3ce5, 0x1, 0x0);
        gbc.writeMem(0xe99b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4068);
        EXPECT(gbc.pc(), 0xe99d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe99b), 0xcb);
        EXPECT(gbc.readMem(0xe99c), 0xc8);
        // CB C8 0145
        gbc.setState(0x9fd7, 0x4c4e, 0xcac0, 0x73de, 0xe3dc, 0xa72c, 0x0, 0x1);
        gbc.writeMem(0x9fd7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4c4e);
        EXPECT(gbc.pc(), 0x9fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd7), 0xcb);
        EXPECT(gbc.readMem(0x9fd8), 0xc8);
        // CB C8 0146
        gbc.setState(0xcb5e, 0x637c, 0x6d80, 0x7f2a, 0x6ba7, 0x9613, 0x1, 0x0);
        gbc.writeMem(0xcb5e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x637c);
        EXPECT(gbc.pc(), 0xcb60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5e), 0xcb);
        EXPECT(gbc.readMem(0xcb5f), 0xc8);
        // CB C8 0147
        gbc.setState(0x8b5b, 0x4ddb, 0xb920, 0x73d4, 0x9128, 0xabfb, 0x0, 0x0);
        gbc.writeMem(0x8b5b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4ddb);
        EXPECT(gbc.pc(), 0x8b5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5b), 0xcb);
        EXPECT(gbc.readMem(0x8b5c), 0xc8);
        // CB C8 0149
        gbc.setState(0x7467, 0xf048, 0xaf20, 0xefe8, 0xf41a, 0x41d7, 0x1, 0x0);
        gbc.writeMem(0x7467, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0x7469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 014A
        gbc.setState(0x9578, 0x1d03, 0x9f0, 0xab94, 0x7a3b, 0x500d, 0x0, 0x1);
        gbc.writeMem(0x9578, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1d03);
        EXPECT(gbc.pc(), 0x957a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9578), 0xcb);
        EXPECT(gbc.readMem(0x9579), 0xc8);
        // CB C8 014B
        gbc.setState(0x414a, 0xa134, 0x2c10, 0xdc25, 0x9c0a, 0x38b2, 0x0, 0x0);
        gbc.writeMem(0x414a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa134);
        EXPECT(gbc.pc(), 0x414c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 014C
        gbc.setState(0x1837, 0x16b9, 0xf850, 0x79f1, 0xc3b0, 0x47c2, 0x1, 0x0);
        gbc.writeMem(0x1837, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x16b9);
        EXPECT(gbc.pc(), 0x1839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 014D
        gbc.setState(0xf2c, 0x5af1, 0x7e10, 0xb7, 0xa926, 0x97d9, 0x0, 0x0);
        gbc.writeMem(0xf2c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5af1);
        EXPECT(gbc.pc(), 0xf2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 014E
        gbc.setState(0x5895, 0xbc2c, 0xe250, 0xf5c5, 0xe07c, 0xf4f3, 0x1, 0x1);
        gbc.writeMem(0x5895, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbc2c);
        EXPECT(gbc.pc(), 0x5897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0150
        gbc.setState(0xe12c, 0x7b93, 0x2bb0, 0x1a85, 0x13e4, 0xa006, 0x1, 0x1);
        gbc.writeMem(0xe12c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7b93);
        EXPECT(gbc.pc(), 0xe12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe12c), 0xcb);
        EXPECT(gbc.readMem(0xe12d), 0xc8);
        // CB C8 0151
        gbc.setState(0xa47a, 0x804e, 0x8920, 0x5656, 0x4454, 0x9824, 0x1, 0x1);
        gbc.writeMem(0xa47a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x804e);
        EXPECT(gbc.pc(), 0xa47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47a), 0xcb);
        EXPECT(gbc.readMem(0xa47b), 0xc8);
        // CB C8 0152
        gbc.setState(0x501a, 0xd327, 0x7180, 0x5925, 0xf4dd, 0xd20f, 0x0, 0x1);
        gbc.writeMem(0x501a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd327);
        EXPECT(gbc.pc(), 0x501c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0153
        gbc.setState(0x6ef5, 0x4132, 0x4480, 0xd733, 0x882c, 0x7a15, 0x1, 0x0);
        gbc.writeMem(0x6ef5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4132);
        EXPECT(gbc.pc(), 0x6ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0154
        gbc.setState(0x2593, 0x2c5b, 0x42c0, 0xeceb, 0x3b71, 0xf817, 0x1, 0x1);
        gbc.writeMem(0x2593, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2c5b);
        EXPECT(gbc.pc(), 0x2595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0155
        gbc.setState(0xaa4c, 0xd026, 0xe610, 0xb6e5, 0x149b, 0x6f22, 0x0, 0x1);
        gbc.writeMem(0xaa4c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd026);
        EXPECT(gbc.pc(), 0xaa4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa4c), 0xcb);
        EXPECT(gbc.readMem(0xaa4d), 0xc8);
        // CB C8 0156
        gbc.setState(0x48bc, 0x86f4, 0x9fe0, 0x4740, 0x76fd, 0x64c0, 0x0, 0x1);
        gbc.writeMem(0x48bc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x86f4);
        EXPECT(gbc.pc(), 0x48be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0157
        gbc.setState(0xc791, 0x37d3, 0x47d0, 0x84d3, 0x470, 0x63a0, 0x0, 0x1);
        gbc.writeMem(0xc791, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x37d3);
        EXPECT(gbc.pc(), 0xc793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc791), 0xcb);
        EXPECT(gbc.readMem(0xc792), 0xc8);
        // CB C8 0158
        gbc.setState(0x7ad7, 0xdaca, 0x3e90, 0x34a6, 0xf8a5, 0xa588, 0x1, 0x1);
        gbc.writeMem(0x7ad7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdaca);
        EXPECT(gbc.pc(), 0x7ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0159
        gbc.setState(0x6e73, 0x401, 0x1110, 0xd1c3, 0xf0c1, 0xa0f3, 0x0, 0x1);
        gbc.writeMem(0x6e73, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x401);
        EXPECT(gbc.pc(), 0x6e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 015A
        gbc.setState(0x307a, 0xdecd, 0xa360, 0x67a3, 0x97de, 0xee9, 0x0, 0x0);
        gbc.writeMem(0x307a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdecd);
        EXPECT(gbc.pc(), 0x307c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 015B
        gbc.setState(0x76a1, 0x4672, 0x59c0, 0x380a, 0x7757, 0x319b, 0x1, 0x1);
        gbc.writeMem(0x76a1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4672);
        EXPECT(gbc.pc(), 0x76a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 015C
        gbc.setState(0x6ac8, 0x65a, 0x35a0, 0x9ef7, 0xb82e, 0xbe7e, 0x1, 0x1);
        gbc.writeMem(0x6ac8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x65a);
        EXPECT(gbc.pc(), 0x6aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 015E
        gbc.setState(0x58e, 0x8430, 0x7a10, 0x1907, 0xec2f, 0x4b9e, 0x1, 0x0);
        gbc.writeMem(0x58e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0x590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 015F
        gbc.setState(0x6c11, 0xe25, 0xa820, 0x2493, 0xea00, 0x37fa, 0x1, 0x0);
        gbc.writeMem(0x6c11, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe25);
        EXPECT(gbc.pc(), 0x6c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0160
        gbc.setState(0x9b5e, 0x4134, 0x3390, 0xd619, 0xee6c, 0x29f, 0x0, 0x0);
        gbc.writeMem(0x9b5e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4134);
        EXPECT(gbc.pc(), 0x9b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5e), 0xcb);
        EXPECT(gbc.readMem(0x9b5f), 0xc8);
        // CB C8 0161
        gbc.setState(0x866b, 0x34c, 0x5230, 0x7d01, 0xa7f1, 0x9f4c, 0x1, 0x1);
        gbc.writeMem(0x866b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x34c);
        EXPECT(gbc.pc(), 0x866d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866b), 0xcb);
        EXPECT(gbc.readMem(0x866c), 0xc8);
        // CB C8 0162
        gbc.setState(0xdd4e, 0x9cc4, 0x6910, 0x8550, 0xa9b4, 0x93db, 0x0, 0x1);
        gbc.writeMem(0xdd4e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9cc4);
        EXPECT(gbc.pc(), 0xdd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd4e), 0xcb);
        EXPECT(gbc.readMem(0xdd4f), 0xc8);
        // CB C8 0163
        gbc.setState(0xa0e9, 0x4a6f, 0x4110, 0xf314, 0xc147, 0x99fb, 0x1, 0x1);
        gbc.writeMem(0xa0e9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4a6f);
        EXPECT(gbc.pc(), 0xa0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e9), 0xcb);
        EXPECT(gbc.readMem(0xa0ea), 0xc8);
        // CB C8 0164
        gbc.setState(0x199c, 0xf45f, 0x6470, 0x4f40, 0x1de2, 0x173, 0x1, 0x0);
        gbc.writeMem(0x199c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf45f);
        EXPECT(gbc.pc(), 0x199e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0165
        gbc.setState(0x69da, 0x2a5c, 0xa670, 0x2947, 0x2976, 0xa5, 0x1, 0x0);
        gbc.writeMem(0x69da, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2a5c);
        EXPECT(gbc.pc(), 0x69dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0166
        gbc.setState(0x4e3, 0x4b82, 0xe430, 0xbce6, 0xb2d9, 0xc307, 0x1, 0x0);
        gbc.writeMem(0x4e3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4b82);
        EXPECT(gbc.pc(), 0x4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0167
        gbc.setState(0x6fb9, 0x6edc, 0x4500, 0x1a0d, 0x5a24, 0xac01, 0x1, 0x1);
        gbc.writeMem(0x6fb9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6edc);
        EXPECT(gbc.pc(), 0x6fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0168
        gbc.setState(0x8516, 0xdcf, 0x6b60, 0xf1ee, 0x6bc2, 0xb831, 0x0, 0x1);
        gbc.writeMem(0x8516, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdcf);
        EXPECT(gbc.pc(), 0x8518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8516), 0xcb);
        EXPECT(gbc.readMem(0x8517), 0xc8);
        // CB C8 0169
        gbc.setState(0x2efa, 0x647b, 0xbe80, 0x1d65, 0xe61b, 0xf1a1, 0x0, 0x1);
        gbc.writeMem(0x2efa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x647b);
        EXPECT(gbc.pc(), 0x2efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 016A
        gbc.setState(0x481b, 0xd4a2, 0x40c0, 0xb737, 0x5f97, 0x275e, 0x1, 0x1);
        gbc.writeMem(0x481b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0x481d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 016B
        gbc.setState(0x8c5a, 0x4ce8, 0x8590, 0xf484, 0x3113, 0x7d22, 0x1, 0x1);
        gbc.writeMem(0x8c5a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4ce8);
        EXPECT(gbc.pc(), 0x8c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5a), 0xcb);
        EXPECT(gbc.readMem(0x8c5b), 0xc8);
        // CB C8 016C
        gbc.setState(0xe2c8, 0xb84b, 0x5140, 0xc257, 0x9f79, 0xe189, 0x0, 0x1);
        gbc.writeMem(0xe2c8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb84b);
        EXPECT(gbc.pc(), 0xe2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c8), 0xcb);
        EXPECT(gbc.readMem(0xe2c9), 0xc8);
        // CB C8 016D
        gbc.setState(0x644b, 0x8504, 0x77d0, 0x276b, 0x9c63, 0x8dbd, 0x0, 0x0);
        gbc.writeMem(0x644b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8504);
        EXPECT(gbc.pc(), 0x644d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 016E
        gbc.setState(0xc2db, 0x1e0, 0x3790, 0xe4be, 0x4fc2, 0xadbe, 0x1, 0x0);
        gbc.writeMem(0xc2db, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1e0);
        EXPECT(gbc.pc(), 0xc2dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2db), 0xcb);
        EXPECT(gbc.readMem(0xc2dc), 0xc8);
        // CB C8 016F
        gbc.setState(0xefc1, 0x5559, 0x2d70, 0x4bb3, 0x6b26, 0xff78, 0x0, 0x1);
        gbc.writeMem(0xefc1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5559);
        EXPECT(gbc.pc(), 0xefc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc1), 0xcb);
        EXPECT(gbc.readMem(0xefc2), 0xc8);
        // CB C8 0170
        gbc.setState(0x43ec, 0x520e, 0x3360, 0x592b, 0xcf8, 0x70d, 0x0, 0x1);
        gbc.writeMem(0x43ec, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x520e);
        EXPECT(gbc.pc(), 0x43ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0171
        gbc.setState(0xd4b4, 0x1ee8, 0xee50, 0xce58, 0xd8c6, 0xe73b, 0x0, 0x0);
        gbc.writeMem(0xd4b4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1ee8);
        EXPECT(gbc.pc(), 0xd4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b4), 0xcb);
        EXPECT(gbc.readMem(0xd4b5), 0xc8);
        // CB C8 0172
        gbc.setState(0x23dc, 0x7984, 0xaf00, 0x226e, 0x81d4, 0xc34f, 0x0, 0x0);
        gbc.writeMem(0x23dc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7984);
        EXPECT(gbc.pc(), 0x23de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0173
        gbc.setState(0x3824, 0xf5ce, 0xe230, 0xf289, 0x544f, 0x2c2a, 0x1, 0x1);
        gbc.writeMem(0x3824, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf5ce);
        EXPECT(gbc.pc(), 0x3826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0174
        gbc.setState(0xab80, 0xaf10, 0x30, 0x3140, 0xa553, 0x9a9e, 0x0, 0x1);
        gbc.writeMem(0xab80, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaf10);
        EXPECT(gbc.pc(), 0xab82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab80), 0xcb);
        EXPECT(gbc.readMem(0xab81), 0xc8);
        // CB C8 0175
        gbc.setState(0xa143, 0xf2c3, 0xf840, 0x72d3, 0x3c94, 0x6229, 0x0, 0x1);
        gbc.writeMem(0xa143, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf2c3);
        EXPECT(gbc.pc(), 0xa145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa143), 0xcb);
        EXPECT(gbc.readMem(0xa144), 0xc8);
        // CB C8 0176
        gbc.setState(0x804b, 0x5639, 0x6e10, 0xfe5a, 0x4ebc, 0x1e5f, 0x0, 0x0);
        gbc.writeMem(0x804b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5639);
        EXPECT(gbc.pc(), 0x804d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804b), 0xcb);
        EXPECT(gbc.readMem(0x804c), 0xc8);
        // CB C8 0177
        gbc.setState(0x407f, 0x58f0, 0xb9b0, 0x819c, 0x263a, 0xec51, 0x1, 0x1);
        gbc.writeMem(0x407f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x58f0);
        EXPECT(gbc.pc(), 0x4081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0178
        gbc.setState(0xc240, 0x38b2, 0x3a0, 0x8911, 0x2fae, 0x6fbc, 0x0, 0x0);
        gbc.writeMem(0xc240, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x38b2);
        EXPECT(gbc.pc(), 0xc242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc240), 0xcb);
        EXPECT(gbc.readMem(0xc241), 0xc8);
        // CB C8 0179
        gbc.setState(0xa2c6, 0x85fa, 0x4680, 0x137a, 0xcc3a, 0x4e6c, 0x0, 0x0);
        gbc.writeMem(0xa2c6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x85fa);
        EXPECT(gbc.pc(), 0xa2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c6), 0xcb);
        EXPECT(gbc.readMem(0xa2c7), 0xc8);
        // CB C8 017A
        gbc.setState(0x5669, 0xa567, 0x6050, 0x446b, 0xa5f5, 0x4a49, 0x1, 0x1);
        gbc.writeMem(0x5669, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa567);
        EXPECT(gbc.pc(), 0x566b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 017B
        gbc.setState(0xc8cc, 0xff81, 0x10a0, 0xfa4, 0xea52, 0x2154, 0x0, 0x1);
        gbc.writeMem(0xc8cc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xff81);
        EXPECT(gbc.pc(), 0xc8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8cc), 0xcb);
        EXPECT(gbc.readMem(0xc8cd), 0xc8);
        // CB C8 017C
        gbc.setState(0x5e5d, 0x4134, 0xe350, 0xae4b, 0xf00d, 0xdae0, 0x0, 0x0);
        gbc.writeMem(0x5e5d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4134);
        EXPECT(gbc.pc(), 0x5e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 017E
        gbc.setState(0xe0ad, 0xd533, 0xa370, 0x25ee, 0x3bea, 0x58be, 0x0, 0x0);
        gbc.writeMem(0xe0ad, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd533);
        EXPECT(gbc.pc(), 0xe0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ad), 0xcb);
        EXPECT(gbc.readMem(0xe0ae), 0xc8);
        // CB C8 017F
        gbc.setState(0x23b5, 0xd799, 0xc130, 0xf47d, 0x9ae7, 0x92a6, 0x0, 0x0);
        gbc.writeMem(0x23b5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd799);
        EXPECT(gbc.pc(), 0x23b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0180
        gbc.setState(0x8b2c, 0x2f4, 0x7c10, 0xc196, 0xdcf7, 0xddb3, 0x1, 0x1);
        gbc.writeMem(0x8b2c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2f4);
        EXPECT(gbc.pc(), 0x8b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2c), 0xcb);
        EXPECT(gbc.readMem(0x8b2d), 0xc8);
        // CB C8 0181
        gbc.setState(0x771f, 0xa440, 0x8c70, 0xb115, 0x648f, 0x5dd8, 0x1, 0x0);
        gbc.writeMem(0x771f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa440);
        EXPECT(gbc.pc(), 0x7721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0182
        gbc.setState(0xa5f6, 0xbab5, 0xb7b0, 0xe868, 0xbc12, 0x448, 0x0, 0x1);
        gbc.writeMem(0xa5f6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbab5);
        EXPECT(gbc.pc(), 0xa5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f6), 0xcb);
        EXPECT(gbc.readMem(0xa5f7), 0xc8);
        // CB C8 0183
        gbc.setState(0x7f64, 0x8244, 0x2650, 0xd236, 0xc6d6, 0x3283, 0x1, 0x0);
        gbc.writeMem(0x7f64, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8244);
        EXPECT(gbc.pc(), 0x7f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0184
        gbc.setState(0x12e9, 0x2a48, 0xb9c0, 0x9b04, 0x8e3a, 0x7b6a, 0x0, 0x0);
        gbc.writeMem(0x12e9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2a48);
        EXPECT(gbc.pc(), 0x12eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0185
        gbc.setState(0xad5a, 0xbbfe, 0xed10, 0xc8d7, 0x2421, 0x1169, 0x1, 0x1);
        gbc.writeMem(0xad5a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbbfe);
        EXPECT(gbc.pc(), 0xad5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5a), 0xcb);
        EXPECT(gbc.readMem(0xad5b), 0xc8);
        // CB C8 0186
        gbc.setState(0x330, 0xde51, 0xc500, 0xe1d0, 0x69fe, 0xc56, 0x0, 0x0);
        gbc.writeMem(0x330, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xde51);
        EXPECT(gbc.pc(), 0x332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0187
        gbc.setState(0x3d6d, 0x44d0, 0xff20, 0x82eb, 0x3fb6, 0xf548, 0x1, 0x1);
        gbc.writeMem(0x3d6d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x44d0);
        EXPECT(gbc.pc(), 0x3d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0188
        gbc.setState(0x78f7, 0xbb41, 0x1b40, 0x86af, 0xda, 0x4b23, 0x0, 0x1);
        gbc.writeMem(0x78f7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbb41);
        EXPECT(gbc.pc(), 0x78f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0189
        gbc.setState(0x7c05, 0x3a7f, 0xd4a0, 0x2bed, 0xac94, 0x34e4, 0x1, 0x1);
        gbc.writeMem(0x7c05, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3a7f);
        EXPECT(gbc.pc(), 0x7c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 018A
        gbc.setState(0xc50d, 0xc7d9, 0x7830, 0xd7c0, 0x14ed, 0x559d, 0x1, 0x0);
        gbc.writeMem(0xc50d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc7d9);
        EXPECT(gbc.pc(), 0xc50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50d), 0xcb);
        EXPECT(gbc.readMem(0xc50e), 0xc8);
        // CB C8 018B
        gbc.setState(0xbfb0, 0x8258, 0x2500, 0x2b70, 0x94cd, 0x491e, 0x1, 0x0);
        gbc.writeMem(0xbfb0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8258);
        EXPECT(gbc.pc(), 0xbfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb0), 0xcb);
        EXPECT(gbc.readMem(0xbfb1), 0xc8);
        // CB C8 018C
        gbc.setState(0xbd36, 0xfe55, 0x3600, 0xb6b0, 0xaab2, 0x49b5, 0x1, 0x1);
        gbc.writeMem(0xbd36, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfe55);
        EXPECT(gbc.pc(), 0xbd38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd36), 0xcb);
        EXPECT(gbc.readMem(0xbd37), 0xc8);
        // CB C8 018D
        gbc.setState(0xe588, 0xee3f, 0x1920, 0x6f74, 0xe630, 0xc751, 0x0, 0x1);
        gbc.writeMem(0xe588, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xee3f);
        EXPECT(gbc.pc(), 0xe58a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe588), 0xcb);
        EXPECT(gbc.readMem(0xe589), 0xc8);
        // CB C8 018E
        gbc.setState(0x8170, 0xec3c, 0x2da0, 0xc5fb, 0x521f, 0xbef, 0x0, 0x0);
        gbc.writeMem(0x8170, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xec3c);
        EXPECT(gbc.pc(), 0x8172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8170), 0xcb);
        EXPECT(gbc.readMem(0x8171), 0xc8);
        // CB C8 018F
        gbc.setState(0x1478, 0xd2fc, 0xe540, 0xeb, 0x805f, 0xfed4, 0x0, 0x0);
        gbc.writeMem(0x1478, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd2fc);
        EXPECT(gbc.pc(), 0x147a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0190
        gbc.setState(0x5f86, 0xa41a, 0x9850, 0xedd0, 0x5650, 0xe5f9, 0x1, 0x1);
        gbc.writeMem(0x5f86, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa41a);
        EXPECT(gbc.pc(), 0x5f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0191
        gbc.setState(0x404a, 0xb02c, 0xaff0, 0xb7d, 0xacc7, 0xda84, 0x0, 0x1);
        gbc.writeMem(0x404a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb02c);
        EXPECT(gbc.pc(), 0x404c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0192
        gbc.setState(0x7214, 0x2f2f, 0x24d0, 0x575c, 0x4d1f, 0xce3b, 0x0, 0x0);
        gbc.writeMem(0x7214, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2f2f);
        EXPECT(gbc.pc(), 0x7216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0193
        gbc.setState(0xde28, 0x43df, 0x87e0, 0xdaa8, 0xcbca, 0xcef5, 0x1, 0x0);
        gbc.writeMem(0xde28, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x43df);
        EXPECT(gbc.pc(), 0xde2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde28), 0xcb);
        EXPECT(gbc.readMem(0xde29), 0xc8);
        // CB C8 0194
        gbc.setState(0x3dcb, 0x82e9, 0xe5f0, 0x164e, 0xf940, 0xe56b, 0x0, 0x1);
        gbc.writeMem(0x3dcb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x82e9);
        EXPECT(gbc.pc(), 0x3dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0195
        gbc.setState(0xd932, 0x1b3e, 0x52a0, 0x69b7, 0x6c56, 0x6af5, 0x0, 0x0);
        gbc.writeMem(0xd932, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1b3e);
        EXPECT(gbc.pc(), 0xd934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd932), 0xcb);
        EXPECT(gbc.readMem(0xd933), 0xc8);
        // CB C8 0196
        gbc.setState(0xa3a5, 0x6aa4, 0x6680, 0x7e6d, 0x8380, 0xbffc, 0x1, 0x1);
        gbc.writeMem(0xa3a5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6aa4);
        EXPECT(gbc.pc(), 0xa3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a5), 0xcb);
        EXPECT(gbc.readMem(0xa3a6), 0xc8);
        // CB C8 0197
        gbc.setState(0xba8, 0x1827, 0xdf00, 0xe427, 0x4be8, 0x5abb, 0x1, 0x0);
        gbc.writeMem(0xba8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1827);
        EXPECT(gbc.pc(), 0xbaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0198
        gbc.setState(0xdf9e, 0x312c, 0x3390, 0x4987, 0x5b92, 0xafa4, 0x0, 0x1);
        gbc.writeMem(0xdf9e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x312c);
        EXPECT(gbc.pc(), 0xdfa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9e), 0xcb);
        EXPECT(gbc.readMem(0xdf9f), 0xc8);
        // CB C8 0199
        gbc.setState(0xc3d9, 0xd034, 0xd420, 0xfcd9, 0xbd82, 0x339a, 0x1, 0x0);
        gbc.writeMem(0xc3d9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd034);
        EXPECT(gbc.pc(), 0xc3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d9), 0xcb);
        EXPECT(gbc.readMem(0xc3da), 0xc8);
        // CB C8 019A
        gbc.setState(0x14b9, 0xea21, 0x8e30, 0x55b3, 0x2968, 0xd9eb, 0x1, 0x1);
        gbc.writeMem(0x14b9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xea21);
        EXPECT(gbc.pc(), 0x14bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 019B
        gbc.setState(0x34e9, 0x77d2, 0x29a0, 0xed51, 0x7c65, 0x71bf, 0x1, 0x0);
        gbc.writeMem(0x34e9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x77d2);
        EXPECT(gbc.pc(), 0x34eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 019C
        gbc.setState(0xc36c, 0xa1b9, 0x1220, 0x2aac, 0xc744, 0xf8c0, 0x1, 0x1);
        gbc.writeMem(0xc36c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa1b9);
        EXPECT(gbc.pc(), 0xc36e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36c), 0xcb);
        EXPECT(gbc.readMem(0xc36d), 0xc8);
        // CB C8 019D
        gbc.setState(0x34e9, 0xec4c, 0xb9e0, 0xc6c3, 0x1db9, 0xc26f, 0x1, 0x0);
        gbc.writeMem(0x34e9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xec4c);
        EXPECT(gbc.pc(), 0x34eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 019E
        gbc.setState(0xec6e, 0x2b8d, 0x8de0, 0x7eca, 0xda59, 0x5b1d, 0x0, 0x0);
        gbc.writeMem(0xec6e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2b8d);
        EXPECT(gbc.pc(), 0xec70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6e), 0xcb);
        EXPECT(gbc.readMem(0xec6f), 0xc8);
        // CB C8 01A0
        gbc.setState(0xa7d1, 0x1e84, 0x97a0, 0x3740, 0x71fd, 0x5a37, 0x1, 0x0);
        gbc.writeMem(0xa7d1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1e84);
        EXPECT(gbc.pc(), 0xa7d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d1), 0xcb);
        EXPECT(gbc.readMem(0xa7d2), 0xc8);
        // CB C8 01A1
        gbc.setState(0x50c6, 0x212a, 0x3930, 0x5211, 0xccad, 0x1c51, 0x1, 0x0);
        gbc.writeMem(0x50c6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x212a);
        EXPECT(gbc.pc(), 0x50c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01A2
        gbc.setState(0x2470, 0xfe88, 0x9ce0, 0xc703, 0x7cce, 0x16c9, 0x0, 0x1);
        gbc.writeMem(0x2470, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfe88);
        EXPECT(gbc.pc(), 0x2472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01A3
        gbc.setState(0x4afd, 0xf074, 0x2990, 0xaaff, 0x9949, 0xdb81, 0x0, 0x0);
        gbc.writeMem(0x4afd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf074);
        EXPECT(gbc.pc(), 0x4aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01A4
        gbc.setState(0xbfb7, 0xdbb4, 0xf680, 0x7e82, 0x3417, 0xd99b, 0x0, 0x1);
        gbc.writeMem(0xbfb7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdbb4);
        EXPECT(gbc.pc(), 0xbfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb7), 0xcb);
        EXPECT(gbc.readMem(0xbfb8), 0xc8);
        // CB C8 01A5
        gbc.setState(0x81fb, 0xf5f, 0x4900, 0x68fb, 0xcf32, 0x6de4, 0x1, 0x1);
        gbc.writeMem(0x81fb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf5f);
        EXPECT(gbc.pc(), 0x81fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fb), 0xcb);
        EXPECT(gbc.readMem(0x81fc), 0xc8);
        // CB C8 01A6
        gbc.setState(0x1a3f, 0x3580, 0xc6f0, 0xb638, 0x5d29, 0x431c, 0x0, 0x0);
        gbc.writeMem(0x1a3f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3580);
        EXPECT(gbc.pc(), 0x1a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01A7
        gbc.setState(0x39d6, 0xddc3, 0xa410, 0x7a44, 0x282a, 0xc6, 0x0, 0x1);
        gbc.writeMem(0x39d6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xddc3);
        EXPECT(gbc.pc(), 0x39d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01A8
        gbc.setState(0x280b, 0xace7, 0xb670, 0x641d, 0x31f9, 0x1448, 0x0, 0x0);
        gbc.writeMem(0x280b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xace7);
        EXPECT(gbc.pc(), 0x280d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01A9
        gbc.setState(0xd90a, 0x628f, 0x5df0, 0xdca8, 0xc3f1, 0x9bdd, 0x1, 0x1);
        gbc.writeMem(0xd90a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x628f);
        EXPECT(gbc.pc(), 0xd90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90a), 0xcb);
        EXPECT(gbc.readMem(0xd90b), 0xc8);
        // CB C8 01AB
        gbc.setState(0x75f0, 0xef29, 0x4320, 0xbff8, 0xdf39, 0x196b, 0x0, 0x1);
        gbc.writeMem(0x75f0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xef29);
        EXPECT(gbc.pc(), 0x75f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01AD
        gbc.setState(0x3a3, 0xbe4d, 0x650, 0x5a1b, 0x3727, 0x5764, 0x0, 0x0);
        gbc.writeMem(0x3a3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbe4d);
        EXPECT(gbc.pc(), 0x3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01AE
        gbc.setState(0xb1fa, 0x461, 0xb60, 0x9157, 0x426, 0x2fa9, 0x1, 0x0);
        gbc.writeMem(0xb1fa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x461);
        EXPECT(gbc.pc(), 0xb1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fa), 0xcb);
        EXPECT(gbc.readMem(0xb1fb), 0xc8);
        // CB C8 01AF
        gbc.setState(0x4378, 0xb32b, 0xcad0, 0xe8e7, 0x900f, 0x643d, 0x1, 0x0);
        gbc.writeMem(0x4378, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb32b);
        EXPECT(gbc.pc(), 0x437a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01B0
        gbc.setState(0x17fc, 0xb990, 0x13d0, 0x5e60, 0x57ee, 0x3211, 0x0, 0x0);
        gbc.writeMem(0x17fc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb990);
        EXPECT(gbc.pc(), 0x17fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01B1
        gbc.setState(0xb2b6, 0x5489, 0x72b0, 0x9405, 0xa662, 0x608b, 0x1, 0x0);
        gbc.writeMem(0xb2b6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5489);
        EXPECT(gbc.pc(), 0xb2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b6), 0xcb);
        EXPECT(gbc.readMem(0xb2b7), 0xc8);
        // CB C8 01B2
        gbc.setState(0x98b1, 0x7fdf, 0xd050, 0xd745, 0x67e3, 0xc27e, 0x0, 0x0);
        gbc.writeMem(0x98b1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7fdf);
        EXPECT(gbc.pc(), 0x98b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b1), 0xcb);
        EXPECT(gbc.readMem(0x98b2), 0xc8);
        // CB C8 01B3
        gbc.setState(0x5876, 0x1ed6, 0x2d00, 0x7bce, 0x3b91, 0xf947, 0x1, 0x0);
        gbc.writeMem(0x5876, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1ed6);
        EXPECT(gbc.pc(), 0x5878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01B4
        gbc.setState(0x84ef, 0xbf28, 0xbe30, 0xd15c, 0xd2ef, 0xa45c, 0x1, 0x1);
        gbc.writeMem(0x84ef, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbf28);
        EXPECT(gbc.pc(), 0x84f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ef), 0xcb);
        EXPECT(gbc.readMem(0x84f0), 0xc8);
        // CB C8 01B5
        gbc.setState(0x58f0, 0x2c66, 0x1c30, 0x2b1a, 0xec8d, 0x1e79, 0x0, 0x0);
        gbc.writeMem(0x58f0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2c66);
        EXPECT(gbc.pc(), 0x58f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01B6
        gbc.setState(0x8178, 0xa24d, 0x8930, 0x85be, 0x4dbb, 0xd2d7, 0x1, 0x1);
        gbc.writeMem(0x8178, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa24d);
        EXPECT(gbc.pc(), 0x817a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8178), 0xcb);
        EXPECT(gbc.readMem(0x8179), 0xc8);
        // CB C8 01B7
        gbc.setState(0xbd4f, 0xaef1, 0x55c0, 0x9405, 0x705b, 0xa70e, 0x0, 0x1);
        gbc.writeMem(0xbd4f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xaef1);
        EXPECT(gbc.pc(), 0xbd51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4f), 0xcb);
        EXPECT(gbc.readMem(0xbd50), 0xc8);
        // CB C8 01B8
        gbc.setState(0x330d, 0x6526, 0x7e90, 0x7998, 0x11be, 0xd5c8, 0x1, 0x0);
        gbc.writeMem(0x330d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6526);
        EXPECT(gbc.pc(), 0x330f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01B9
        gbc.setState(0x73a7, 0x4547, 0xf530, 0xfc33, 0x1011, 0xd606, 0x0, 0x1);
        gbc.writeMem(0x73a7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4547);
        EXPECT(gbc.pc(), 0x73a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01BA
        gbc.setState(0xd4df, 0x7754, 0xb050, 0xb276, 0x20b4, 0xf0e1, 0x0, 0x0);
        gbc.writeMem(0xd4df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7754);
        EXPECT(gbc.pc(), 0xd4e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4df), 0xcb);
        EXPECT(gbc.readMem(0xd4e0), 0xc8);
        // CB C8 01BB
        gbc.setState(0x1934, 0x313d, 0x8fd0, 0x27e5, 0x2030, 0x527d, 0x0, 0x1);
        gbc.writeMem(0x1934, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x313d);
        EXPECT(gbc.pc(), 0x1936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01BC
        gbc.setState(0xde0c, 0x7dad, 0xd0, 0x434a, 0x467a, 0xb10c, 0x0, 0x1);
        gbc.writeMem(0xde0c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7dad);
        EXPECT(gbc.pc(), 0xde0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde0c), 0xcb);
        EXPECT(gbc.readMem(0xde0d), 0xc8);
        // CB C8 01BD
        gbc.setState(0x19df, 0x47b, 0xd5c0, 0xf519, 0xde6f, 0x44e0, 0x1, 0x0);
        gbc.writeMem(0x19df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x47b);
        EXPECT(gbc.pc(), 0x19e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01BE
        gbc.setState(0xeaab, 0xaa8f, 0x8820, 0xae6e, 0x887c, 0x7938, 0x1, 0x1);
        gbc.writeMem(0xeaab, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xaa8f);
        EXPECT(gbc.pc(), 0xeaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaab), 0xcb);
        EXPECT(gbc.readMem(0xeaac), 0xc8);
        // CB C8 01BF
        gbc.setState(0x6dcd, 0xa0bd, 0xe890, 0xd7b9, 0xb3f7, 0x65bf, 0x1, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa0bd);
        EXPECT(gbc.pc(), 0x6dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01C0
        gbc.setState(0x3ff0, 0xe820, 0x51d0, 0x3dba, 0xc0a1, 0x743f, 0x0, 0x1);
        gbc.writeMem(0x3ff0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe820);
        EXPECT(gbc.pc(), 0x3ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01C1
        gbc.setState(0x6235, 0x73c7, 0xbd90, 0x1298, 0x2a3a, 0x9e72, 0x1, 0x1);
        gbc.writeMem(0x6235, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x73c7);
        EXPECT(gbc.pc(), 0x6237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01C2
        gbc.setState(0xac96, 0x5f91, 0x2aa0, 0x6d6a, 0x3d69, 0x4825, 0x0, 0x0);
        gbc.writeMem(0xac96, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5f91);
        EXPECT(gbc.pc(), 0xac98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac96), 0xcb);
        EXPECT(gbc.readMem(0xac97), 0xc8);
        // CB C8 01C4
        gbc.setState(0xb522, 0xff8a, 0x8b10, 0x2e6, 0x2db6, 0x7cd8, 0x0, 0x1);
        gbc.writeMem(0xb522, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xff8a);
        EXPECT(gbc.pc(), 0xb524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb522), 0xcb);
        EXPECT(gbc.readMem(0xb523), 0xc8);
        // CB C8 01C5
        gbc.setState(0x9f83, 0x1469, 0x2350, 0x24a5, 0xb4ad, 0xc62c, 0x0, 0x0);
        gbc.writeMem(0x9f83, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1469);
        EXPECT(gbc.pc(), 0x9f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f83), 0xcb);
        EXPECT(gbc.readMem(0x9f84), 0xc8);
        // CB C8 01C6
        gbc.setState(0x2a2, 0x7118, 0x27a0, 0xae8b, 0xdacd, 0xdc6c, 0x1, 0x1);
        gbc.writeMem(0x2a2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7118);
        EXPECT(gbc.pc(), 0x2a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01C7
        gbc.setState(0x554, 0x6620, 0xd900, 0x49eb, 0x7719, 0x6efc, 0x1, 0x0);
        gbc.writeMem(0x554, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6620);
        EXPECT(gbc.pc(), 0x556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01C8
        gbc.setState(0x1adf, 0x8baf, 0x4350, 0xd94f, 0x6b6c, 0x1fb8, 0x0, 0x0);
        gbc.writeMem(0x1adf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8baf);
        EXPECT(gbc.pc(), 0x1ae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01C9
        gbc.setState(0xebe, 0x871d, 0x9f50, 0x88c8, 0x4797, 0x4362, 0x0, 0x0);
        gbc.writeMem(0xebe, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x871d);
        EXPECT(gbc.pc(), 0xec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01CA
        gbc.setState(0xb92b, 0xd57c, 0x4280, 0x1274, 0x381d, 0xecbd, 0x0, 0x0);
        gbc.writeMem(0xb92b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd57c);
        EXPECT(gbc.pc(), 0xb92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb92b), 0xcb);
        EXPECT(gbc.readMem(0xb92c), 0xc8);
        // CB C8 01CB
        gbc.setState(0x5f26, 0x396, 0xbb60, 0x780, 0x4b42, 0x3b62, 0x1, 0x0);
        gbc.writeMem(0x5f26, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x396);
        EXPECT(gbc.pc(), 0x5f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01CC
        gbc.setState(0xdc57, 0x7a45, 0xb460, 0x4fff, 0x7ff5, 0xf49f, 0x0, 0x0);
        gbc.writeMem(0xdc57, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7a45);
        EXPECT(gbc.pc(), 0xdc59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc57), 0xcb);
        EXPECT(gbc.readMem(0xdc58), 0xc8);
        // CB C8 01CD
        gbc.setState(0x4e9e, 0x33, 0xd00, 0x5970, 0x73f0, 0x1ffd, 0x1, 0x0);
        gbc.writeMem(0x4e9e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x33);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01CE
        gbc.setState(0xe3df, 0xbcb5, 0xd1b0, 0xdeef, 0xdd55, 0xcc15, 0x0, 0x0);
        gbc.writeMem(0xe3df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbcb5);
        EXPECT(gbc.pc(), 0xe3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3df), 0xcb);
        EXPECT(gbc.readMem(0xe3e0), 0xc8);
        // CB C8 01CF
        gbc.setState(0x78ab, 0x2c85, 0x3530, 0xdc08, 0xd556, 0x18cd, 0x0, 0x0);
        gbc.writeMem(0x78ab, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2c85);
        EXPECT(gbc.pc(), 0x78ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01D0
        gbc.setState(0x8c30, 0xb445, 0x9420, 0x38c2, 0xa393, 0xd5, 0x0, 0x0);
        gbc.writeMem(0x8c30, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb445);
        EXPECT(gbc.pc(), 0x8c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c30), 0xcb);
        EXPECT(gbc.readMem(0x8c31), 0xc8);
        // CB C8 01D1
        gbc.setState(0x39c5, 0xbb5a, 0xb110, 0xe8af, 0x234c, 0x7a6c, 0x1, 0x1);
        gbc.writeMem(0x39c5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbb5a);
        EXPECT(gbc.pc(), 0x39c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01D2
        gbc.setState(0xbc55, 0xaa14, 0x75c0, 0xc757, 0x7f42, 0x1849, 0x1, 0x1);
        gbc.writeMem(0xbc55, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xaa14);
        EXPECT(gbc.pc(), 0xbc57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc55), 0xcb);
        EXPECT(gbc.readMem(0xbc56), 0xc8);
        // CB C8 01D4
        gbc.setState(0xab41, 0xf704, 0x26b0, 0xad80, 0x33a, 0xa33f, 0x1, 0x0);
        gbc.writeMem(0xab41, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf704);
        EXPECT(gbc.pc(), 0xab43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab41), 0xcb);
        EXPECT(gbc.readMem(0xab42), 0xc8);
        // CB C8 01D5
        gbc.setState(0x7aa3, 0x2f26, 0x7ad0, 0x90d8, 0x6fb9, 0xa813, 0x0, 0x0);
        gbc.writeMem(0x7aa3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2f26);
        EXPECT(gbc.pc(), 0x7aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01D6
        gbc.setState(0xa968, 0x1216, 0xf190, 0xd1e0, 0x94c1, 0x815b, 0x1, 0x1);
        gbc.writeMem(0xa968, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1216);
        EXPECT(gbc.pc(), 0xa96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa968), 0xcb);
        EXPECT(gbc.readMem(0xa969), 0xc8);
        // CB C8 01D7
        gbc.setState(0xb029, 0xd8d6, 0x4910, 0xad31, 0x365a, 0xa942, 0x0, 0x0);
        gbc.writeMem(0xb029, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd8d6);
        EXPECT(gbc.pc(), 0xb02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb029), 0xcb);
        EXPECT(gbc.readMem(0xb02a), 0xc8);
        // CB C8 01D8
        gbc.setState(0xbd8a, 0x6161, 0x2a30, 0x580b, 0xf030, 0xd637, 0x0, 0x1);
        gbc.writeMem(0xbd8a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6161);
        EXPECT(gbc.pc(), 0xbd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8a), 0xcb);
        EXPECT(gbc.readMem(0xbd8b), 0xc8);
        // CB C8 01D9
        gbc.setState(0x6ec4, 0x5c4b, 0x2520, 0x9b69, 0x591f, 0xee9e, 0x0, 0x0);
        gbc.writeMem(0x6ec4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5c4b);
        EXPECT(gbc.pc(), 0x6ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01DA
        gbc.setState(0xe534, 0x5c35, 0xa900, 0x7710, 0x750c, 0xefcb, 0x0, 0x0);
        gbc.writeMem(0xe534, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5c35);
        EXPECT(gbc.pc(), 0xe536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe534), 0xcb);
        EXPECT(gbc.readMem(0xe535), 0xc8);
        // CB C8 01DB
        gbc.setState(0x22d0, 0xf730, 0x6f70, 0x3683, 0x84d4, 0xb558, 0x1, 0x1);
        gbc.writeMem(0x22d0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf730);
        EXPECT(gbc.pc(), 0x22d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01DC
        gbc.setState(0x2852, 0x8f77, 0xb730, 0xf5ce, 0xd231, 0x5027, 0x1, 0x1);
        gbc.writeMem(0x2852, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8f77);
        EXPECT(gbc.pc(), 0x2854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01DD
        gbc.setState(0x46c9, 0x187a, 0xe260, 0x66ca, 0x7195, 0x5ad4, 0x1, 0x1);
        gbc.writeMem(0x46c9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x187a);
        EXPECT(gbc.pc(), 0x46cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01DE
        gbc.setState(0x4d07, 0x3b4f, 0x7190, 0x3a28, 0xbf1f, 0xd7d0, 0x1, 0x0);
        gbc.writeMem(0x4d07, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3b4f);
        EXPECT(gbc.pc(), 0x4d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01DF
        gbc.setState(0x3e1a, 0x2009, 0xc560, 0x19f0, 0xa9d4, 0x3ee2, 0x0, 0x1);
        gbc.writeMem(0x3e1a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2009);
        EXPECT(gbc.pc(), 0x3e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01E1
        gbc.setState(0xa5c3, 0x2fe0, 0x350, 0x47e, 0x80be, 0xebd9, 0x0, 0x1);
        gbc.writeMem(0xa5c3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2fe0);
        EXPECT(gbc.pc(), 0xa5c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c3), 0xcb);
        EXPECT(gbc.readMem(0xa5c4), 0xc8);
        // CB C8 01E2
        gbc.setState(0xa082, 0x73c8, 0xfe30, 0x895, 0xa8c0, 0x9d7f, 0x0, 0x0);
        gbc.writeMem(0xa082, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x73c8);
        EXPECT(gbc.pc(), 0xa084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa082), 0xcb);
        EXPECT(gbc.readMem(0xa083), 0xc8);
        // CB C8 01E3
        gbc.setState(0x21ae, 0x5266, 0xbcc0, 0x111f, 0xe460, 0x755a, 0x1, 0x0);
        gbc.writeMem(0x21ae, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5266);
        EXPECT(gbc.pc(), 0x21b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01E4
        gbc.setState(0x9a60, 0x719a, 0xb1f0, 0x7da, 0x6b2e, 0xb97f, 0x1, 0x0);
        gbc.writeMem(0x9a60, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x719a);
        EXPECT(gbc.pc(), 0x9a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a60), 0xcb);
        EXPECT(gbc.readMem(0x9a61), 0xc8);
        // CB C8 01E5
        gbc.setState(0x9051, 0xb506, 0x1c80, 0xabe3, 0xb291, 0x23f5, 0x0, 0x1);
        gbc.writeMem(0x9051, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb506);
        EXPECT(gbc.pc(), 0x9053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9051), 0xcb);
        EXPECT(gbc.readMem(0x9052), 0xc8);
        // CB C8 01E7
        gbc.setState(0xe770, 0xfaf6, 0x42c0, 0xba09, 0x3042, 0x8ae5, 0x1, 0x1);
        gbc.writeMem(0xe770, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfaf6);
        EXPECT(gbc.pc(), 0xe772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe770), 0xcb);
        EXPECT(gbc.readMem(0xe771), 0xc8);
        // CB C8 01E8
        gbc.setState(0x737e, 0xe945, 0xf260, 0xe230, 0xadea, 0x78ef, 0x0, 0x1);
        gbc.writeMem(0x737e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe945);
        EXPECT(gbc.pc(), 0x7380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01E9
        gbc.setState(0x5c9a, 0x7ccf, 0x41f0, 0x9d8e, 0x9a87, 0x649f, 0x0, 0x0);
        gbc.writeMem(0x5c9a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7ccf);
        EXPECT(gbc.pc(), 0x5c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01EA
        gbc.setState(0x4bac, 0xf3a3, 0xa30, 0xeb3a, 0xb8cb, 0xbc2f, 0x0, 0x0);
        gbc.writeMem(0x4bac, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf3a3);
        EXPECT(gbc.pc(), 0x4bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01EB
        gbc.setState(0x97f0, 0xbde1, 0x9d90, 0xf8c1, 0x4840, 0x6a0c, 0x1, 0x1);
        gbc.writeMem(0x97f0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbde1);
        EXPECT(gbc.pc(), 0x97f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f0), 0xcb);
        EXPECT(gbc.readMem(0x97f1), 0xc8);
        // CB C8 01EC
        gbc.setState(0xd800, 0xacad, 0x37a0, 0xb4ae, 0x11d0, 0xd50f, 0x1, 0x0);
        gbc.writeMem(0xd800, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xacad);
        EXPECT(gbc.pc(), 0xd802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd800), 0xcb);
        EXPECT(gbc.readMem(0xd801), 0xc8);
        // CB C8 01ED
        gbc.setState(0xb19d, 0xff70, 0xefa0, 0xc341, 0xba3c, 0xcca5, 0x1, 0x1);
        gbc.writeMem(0xb19d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xff70);
        EXPECT(gbc.pc(), 0xb19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb19d), 0xcb);
        EXPECT(gbc.readMem(0xb19e), 0xc8);
        // CB C8 01EE
        gbc.setState(0xfde, 0x20a7, 0x8070, 0x39dd, 0xce43, 0x8bc2, 0x1, 0x1);
        gbc.writeMem(0xfde, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x20a7);
        EXPECT(gbc.pc(), 0xfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01EF
        gbc.setState(0x81f6, 0x7e5, 0xd200, 0x8f69, 0xa649, 0x87f9, 0x1, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7e5);
        EXPECT(gbc.pc(), 0x81f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f6), 0xcb);
        EXPECT(gbc.readMem(0x81f7), 0xc8);
        // CB C8 01F0
        gbc.setState(0x609a, 0xa4ab, 0xb3a0, 0xc5e, 0xf035, 0xf641, 0x1, 0x0);
        gbc.writeMem(0x609a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa4ab);
        EXPECT(gbc.pc(), 0x609c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01F1
        gbc.setState(0x9c9c, 0x7d7e, 0xe70, 0x70b5, 0xa623, 0xce6c, 0x1, 0x0);
        gbc.writeMem(0x9c9c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7d7e);
        EXPECT(gbc.pc(), 0x9c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9c), 0xcb);
        EXPECT(gbc.readMem(0x9c9d), 0xc8);
        // CB C8 01F2
        gbc.setState(0x16af, 0x6cbb, 0x8500, 0xc0b6, 0x13ca, 0xc7a6, 0x0, 0x0);
        gbc.writeMem(0x16af, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6cbb);
        EXPECT(gbc.pc(), 0x16b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01F3
        gbc.setState(0x4eb5, 0x2f1b, 0xf7d0, 0x201a, 0xe504, 0x55cc, 0x1, 0x1);
        gbc.writeMem(0x4eb5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2f1b);
        EXPECT(gbc.pc(), 0x4eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01F4
        gbc.setState(0x4147, 0xd0a0, 0x2890, 0x5525, 0xf83d, 0x83a5, 0x1, 0x0);
        gbc.writeMem(0x4147, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd0a0);
        EXPECT(gbc.pc(), 0x4149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01F5
        gbc.setState(0x197c, 0x1ac, 0x79b0, 0x702a, 0x2e9e, 0x70f9, 0x1, 0x0);
        gbc.writeMem(0x197c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1ac);
        EXPECT(gbc.pc(), 0x197e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01F6
        gbc.setState(0x24bc, 0x32bb, 0x2aa0, 0x1aa7, 0x8cb3, 0x20a0, 0x1, 0x0);
        gbc.writeMem(0x24bc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x32bb);
        EXPECT(gbc.pc(), 0x24be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01F7
        gbc.setState(0x9809, 0xe969, 0x3db0, 0xdadf, 0x28f0, 0xda6f, 0x1, 0x0);
        gbc.writeMem(0x9809, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe969);
        EXPECT(gbc.pc(), 0x980b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9809), 0xcb);
        EXPECT(gbc.readMem(0x980a), 0xc8);
        // CB C8 01F8
        gbc.setState(0x960a, 0x4f5, 0x2490, 0x89bf, 0x5274, 0xbbf8, 0x0, 0x0);
        gbc.writeMem(0x960a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4f5);
        EXPECT(gbc.pc(), 0x960c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960a), 0xcb);
        EXPECT(gbc.readMem(0x960b), 0xc8);
        // CB C8 01F9
        gbc.setState(0xee3, 0x9dfa, 0xa4e0, 0x21d3, 0xfa51, 0x5620, 0x0, 0x0);
        gbc.writeMem(0xee3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9dfa);
        EXPECT(gbc.pc(), 0xee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 01FA
        gbc.setState(0xe27d, 0x6d4e, 0x5000, 0x1c53, 0xa77f, 0xfada, 0x0, 0x1);
        gbc.writeMem(0xe27d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6d4e);
        EXPECT(gbc.pc(), 0xe27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe27d), 0xcb);
        EXPECT(gbc.readMem(0xe27e), 0xc8);
        // CB C8 01FB
        gbc.setState(0x342, 0x3759, 0x2510, 0x4408, 0xc38, 0xda9, 0x1, 0x0);
        gbc.writeMem(0x342, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3759);
        EXPECT(gbc.pc(), 0x344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01FC
        gbc.setState(0x345a, 0x7235, 0xec50, 0x404b, 0x9b27, 0x5c8c, 0x1, 0x0);
        gbc.writeMem(0x345a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7235);
        EXPECT(gbc.pc(), 0x345c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 01FD
        gbc.setState(0xef44, 0x1a15, 0x5b80, 0x5426, 0xf9cb, 0xa188, 0x1, 0x1);
        gbc.writeMem(0xef44, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1a15);
        EXPECT(gbc.pc(), 0xef46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef44), 0xcb);
        EXPECT(gbc.readMem(0xef45), 0xc8);
        // CB C8 01FE
        gbc.setState(0xedd7, 0x5c8e, 0x26c0, 0x7182, 0xa917, 0x3e66, 0x1, 0x0);
        gbc.writeMem(0xedd7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5c8e);
        EXPECT(gbc.pc(), 0xedd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd7), 0xcb);
        EXPECT(gbc.readMem(0xedd8), 0xc8);
        // CB C8 01FF
        gbc.setState(0x25f2, 0x2ae8, 0x72c0, 0x35fa, 0x3c73, 0x2ff9, 0x0, 0x0);
        gbc.writeMem(0x25f2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2ae8);
        EXPECT(gbc.pc(), 0x25f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0200
        gbc.setState(0x7cd7, 0x3e6, 0x9640, 0x7574, 0x6cab, 0xbd24, 0x0, 0x0);
        gbc.writeMem(0x7cd7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3e6);
        EXPECT(gbc.pc(), 0x7cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0201
        gbc.setState(0x4a3, 0x55b6, 0x4df0, 0xb024, 0x7bb4, 0x79ec, 0x1, 0x1);
        gbc.writeMem(0x4a3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x55b6);
        EXPECT(gbc.pc(), 0x4a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0202
        gbc.setState(0xd76a, 0xec15, 0x2cd0, 0x5f64, 0xdb76, 0x4999, 0x0, 0x1);
        gbc.writeMem(0xd76a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xec15);
        EXPECT(gbc.pc(), 0xd76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76a), 0xcb);
        EXPECT(gbc.readMem(0xd76b), 0xc8);
        // CB C8 0203
        gbc.setState(0x5f37, 0x4d9f, 0xe350, 0x6617, 0x7cc9, 0xdd11, 0x0, 0x0);
        gbc.writeMem(0x5f37, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4d9f);
        EXPECT(gbc.pc(), 0x5f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0204
        gbc.setState(0x69dd, 0x4dfa, 0xe870, 0xd9c2, 0xbfa2, 0x17ab, 0x1, 0x0);
        gbc.writeMem(0x69dd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4dfa);
        EXPECT(gbc.pc(), 0x69df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0205
        gbc.setState(0xa4c0, 0x4662, 0xd30, 0x6348, 0xfdfa, 0x2ca5, 0x1, 0x1);
        gbc.writeMem(0xa4c0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4662);
        EXPECT(gbc.pc(), 0xa4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c0), 0xcb);
        EXPECT(gbc.readMem(0xa4c1), 0xc8);
        // CB C8 0206
        gbc.setState(0xd376, 0x52d5, 0x93f0, 0x4357, 0xa320, 0x72ba, 0x1, 0x0);
        gbc.writeMem(0xd376, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x52d5);
        EXPECT(gbc.pc(), 0xd378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd376), 0xcb);
        EXPECT(gbc.readMem(0xd377), 0xc8);
        // CB C8 0207
        gbc.setState(0x2a1f, 0xb41b, 0x7780, 0xa29c, 0x55ed, 0xa2b9, 0x0, 0x0);
        gbc.writeMem(0x2a1f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb41b);
        EXPECT(gbc.pc(), 0x2a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0208
        gbc.setState(0xe7b4, 0xdfa8, 0xbe60, 0xbc80, 0x6218, 0x6689, 0x1, 0x1);
        gbc.writeMem(0xe7b4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdfa8);
        EXPECT(gbc.pc(), 0xe7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b4), 0xcb);
        EXPECT(gbc.readMem(0xe7b5), 0xc8);
        // CB C8 0209
        gbc.setState(0x1056, 0x1194, 0x6ad0, 0xf448, 0xb501, 0xa44e, 0x0, 0x0);
        gbc.writeMem(0x1056, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1194);
        EXPECT(gbc.pc(), 0x1058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 020A
        gbc.setState(0x53bd, 0x847a, 0xd4b0, 0xc926, 0x6516, 0x21e3, 0x0, 0x0);
        gbc.writeMem(0x53bd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x847a);
        EXPECT(gbc.pc(), 0x53bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 020B
        gbc.setState(0x7702, 0xfbc4, 0xeb00, 0x5652, 0x2980, 0x4bce, 0x0, 0x1);
        gbc.writeMem(0x7702, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfbc4);
        EXPECT(gbc.pc(), 0x7704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 020C
        gbc.setState(0x60ae, 0x60f3, 0x51d0, 0x7b4, 0xe0eb, 0x939d, 0x0, 0x0);
        gbc.writeMem(0x60ae, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x60f3);
        EXPECT(gbc.pc(), 0x60b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 020D
        gbc.setState(0xab2b, 0x2bbe, 0xd00, 0x3356, 0x6f42, 0x273f, 0x0, 0x1);
        gbc.writeMem(0xab2b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2bbe);
        EXPECT(gbc.pc(), 0xab2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2b), 0xcb);
        EXPECT(gbc.readMem(0xab2c), 0xc8);
        // CB C8 020E
        gbc.setState(0x38c0, 0x71c0, 0xc350, 0xbb26, 0xeb0, 0xdeb8, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x71c0);
        EXPECT(gbc.pc(), 0x38c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 020F
        gbc.setState(0x60d0, 0xefb3, 0x8160, 0x29b, 0xad4b, 0x40ed, 0x0, 0x0);
        gbc.writeMem(0x60d0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xefb3);
        EXPECT(gbc.pc(), 0x60d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0210
        gbc.setState(0xb8d5, 0xffdd, 0x3550, 0xf578, 0xe5, 0x5a42, 0x1, 0x1);
        gbc.writeMem(0xb8d5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xffdd);
        EXPECT(gbc.pc(), 0xb8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d5), 0xcb);
        EXPECT(gbc.readMem(0xb8d6), 0xc8);
        // CB C8 0211
        gbc.setState(0x4b4f, 0x759c, 0x1850, 0x2500, 0x495d, 0xc2ed, 0x0, 0x1);
        gbc.writeMem(0x4b4f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x759c);
        EXPECT(gbc.pc(), 0x4b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0212
        gbc.setState(0x6ce4, 0xc931, 0xf470, 0x128a, 0x93b3, 0xc7b7, 0x0, 0x1);
        gbc.writeMem(0x6ce4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc931);
        EXPECT(gbc.pc(), 0x6ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0213
        gbc.setState(0x695b, 0xe8cc, 0xe340, 0xc46e, 0xf5d5, 0xec00, 0x1, 0x1);
        gbc.writeMem(0x695b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe8cc);
        EXPECT(gbc.pc(), 0x695d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0214
        gbc.setState(0xef0a, 0xa3cd, 0x2be0, 0xfa3c, 0xf819, 0xeb8a, 0x1, 0x1);
        gbc.writeMem(0xef0a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa3cd);
        EXPECT(gbc.pc(), 0xef0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0a), 0xcb);
        EXPECT(gbc.readMem(0xef0b), 0xc8);
        // CB C8 0215
        gbc.setState(0x268a, 0x8eb4, 0x2d90, 0x4616, 0x69f6, 0xb50d, 0x0, 0x0);
        gbc.writeMem(0x268a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8eb4);
        EXPECT(gbc.pc(), 0x268c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0216
        gbc.setState(0x2a66, 0xf041, 0xe7b0, 0x7864, 0xec41, 0x7d8d, 0x1, 0x0);
        gbc.writeMem(0x2a66, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf041);
        EXPECT(gbc.pc(), 0x2a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0217
        gbc.setState(0x5d, 0x12bb, 0x3280, 0xb98b, 0x79ff, 0xb6fd, 0x1, 0x0);
        gbc.writeMem(0x5d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x12bb);
        EXPECT(gbc.pc(), 0x5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0218
        gbc.setState(0x7929, 0x7ac9, 0xe190, 0xbca2, 0x74a5, 0x5176, 0x0, 0x0);
        gbc.writeMem(0x7929, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7ac9);
        EXPECT(gbc.pc(), 0x792b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0219
        gbc.setState(0xe30d, 0x8ee1, 0xc780, 0xe5ba, 0xc270, 0x24fa, 0x0, 0x1);
        gbc.writeMem(0xe30d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8ee1);
        EXPECT(gbc.pc(), 0xe30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30d), 0xcb);
        EXPECT(gbc.readMem(0xe30e), 0xc8);
        // CB C8 021A
        gbc.setState(0xe6b, 0xe399, 0x86b0, 0xa181, 0x7496, 0xfc7b, 0x0, 0x0);
        gbc.writeMem(0xe6b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe399);
        EXPECT(gbc.pc(), 0xe6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 021B
        gbc.setState(0x1508, 0xb068, 0x2bc0, 0x2ecc, 0x6bfa, 0x5324, 0x1, 0x1);
        gbc.writeMem(0x1508, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb068);
        EXPECT(gbc.pc(), 0x150a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 021C
        gbc.setState(0xb62, 0xa542, 0xea50, 0x1717, 0x39b1, 0x43ce, 0x0, 0x0);
        gbc.writeMem(0xb62, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa542);
        EXPECT(gbc.pc(), 0xb64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 021D
        gbc.setState(0x5b0f, 0xbeef, 0xbd10, 0xd70, 0xd0f2, 0x40fb, 0x0, 0x1);
        gbc.writeMem(0x5b0f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbeef);
        EXPECT(gbc.pc(), 0x5b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 021E
        gbc.setState(0xeb14, 0x366, 0x6430, 0xff25, 0x18f2, 0x2e44, 0x0, 0x1);
        gbc.writeMem(0xeb14, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x366);
        EXPECT(gbc.pc(), 0xeb16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb14), 0xcb);
        EXPECT(gbc.readMem(0xeb15), 0xc8);
        // CB C8 021F
        gbc.setState(0xc070, 0x87d, 0x18b0, 0x7ab2, 0x67c3, 0xaf3a, 0x0, 0x0);
        gbc.writeMem(0xc070, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x87d);
        EXPECT(gbc.pc(), 0xc072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc070), 0xcb);
        EXPECT(gbc.readMem(0xc071), 0xc8);
        // CB C8 0220
        gbc.setState(0x60aa, 0x81e6, 0x4320, 0x62e0, 0xf3b9, 0x69c4, 0x0, 0x1);
        gbc.writeMem(0x60aa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x81e6);
        EXPECT(gbc.pc(), 0x60ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0221
        gbc.setState(0x1813, 0xe159, 0xd790, 0x9a8c, 0xc57, 0xd6a5, 0x1, 0x0);
        gbc.writeMem(0x1813, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe159);
        EXPECT(gbc.pc(), 0x1815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0222
        gbc.setState(0xdbfa, 0x2ff, 0xd8f0, 0x24e7, 0xa887, 0xc3f7, 0x1, 0x0);
        gbc.writeMem(0xdbfa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2ff);
        EXPECT(gbc.pc(), 0xdbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfa), 0xcb);
        EXPECT(gbc.readMem(0xdbfb), 0xc8);
        // CB C8 0223
        gbc.setState(0x26ce, 0x85ea, 0xf1c0, 0x5d56, 0xa61, 0xccb2, 0x0, 0x0);
        gbc.writeMem(0x26ce, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x85ea);
        EXPECT(gbc.pc(), 0x26d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0224
        gbc.setState(0x15ad, 0xfa44, 0x5b80, 0xd8b8, 0xa70a, 0xf9c2, 0x1, 0x1);
        gbc.writeMem(0x15ad, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfa44);
        EXPECT(gbc.pc(), 0x15af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0225
        gbc.setState(0x9b49, 0xdfd2, 0xd770, 0xbde3, 0x31d3, 0x1bd, 0x1, 0x1);
        gbc.writeMem(0x9b49, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdfd2);
        EXPECT(gbc.pc(), 0x9b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b49), 0xcb);
        EXPECT(gbc.readMem(0x9b4a), 0xc8);
        // CB C8 0226
        gbc.setState(0xcc3f, 0xdf28, 0x78d0, 0x9bb2, 0x3dd7, 0x93cb, 0x0, 0x0);
        gbc.writeMem(0xcc3f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdf28);
        EXPECT(gbc.pc(), 0xcc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3f), 0xcb);
        EXPECT(gbc.readMem(0xcc40), 0xc8);
        // CB C8 0227
        gbc.setState(0xe71f, 0xde19, 0x39f0, 0xabe9, 0xd1ad, 0x7117, 0x1, 0x1);
        gbc.writeMem(0xe71f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xde19);
        EXPECT(gbc.pc(), 0xe721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe71f), 0xcb);
        EXPECT(gbc.readMem(0xe720), 0xc8);
        // CB C8 0228
        gbc.setState(0x8f52, 0x2978, 0xa0e0, 0xe0d4, 0x76df, 0x7dc5, 0x1, 0x1);
        gbc.writeMem(0x8f52, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2978);
        EXPECT(gbc.pc(), 0x8f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f52), 0xcb);
        EXPECT(gbc.readMem(0x8f53), 0xc8);
        // CB C8 0229
        gbc.setState(0x8210, 0x5663, 0x2110, 0xdd39, 0x789b, 0x7411, 0x0, 0x1);
        gbc.writeMem(0x8210, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5663);
        EXPECT(gbc.pc(), 0x8212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8210), 0xcb);
        EXPECT(gbc.readMem(0x8211), 0xc8);
        // CB C8 022A
        gbc.setState(0xa949, 0x286d, 0xaf20, 0xcf95, 0x1de6, 0x226, 0x1, 0x0);
        gbc.writeMem(0xa949, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x286d);
        EXPECT(gbc.pc(), 0xa94b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa949), 0xcb);
        EXPECT(gbc.readMem(0xa94a), 0xc8);
        // CB C8 022B
        gbc.setState(0x9e69, 0xf80a, 0x95c0, 0x1664, 0xaa00, 0x99f4, 0x1, 0x0);
        gbc.writeMem(0x9e69, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf80a);
        EXPECT(gbc.pc(), 0x9e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e69), 0xcb);
        EXPECT(gbc.readMem(0x9e6a), 0xc8);
        // CB C8 022C
        gbc.setState(0x121a, 0xb6e, 0x8e80, 0x7e89, 0xa145, 0xa87e, 0x0, 0x0);
        gbc.writeMem(0x121a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb6e);
        EXPECT(gbc.pc(), 0x121c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 022D
        gbc.setState(0x9344, 0x7a74, 0x1d70, 0x606, 0x4e69, 0xce2b, 0x0, 0x1);
        gbc.writeMem(0x9344, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7a74);
        EXPECT(gbc.pc(), 0x9346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9344), 0xcb);
        EXPECT(gbc.readMem(0x9345), 0xc8);
        // CB C8 022E
        gbc.setState(0x942d, 0x5646, 0x9040, 0x1049, 0xec7a, 0xb35a, 0x1, 0x1);
        gbc.writeMem(0x942d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5646);
        EXPECT(gbc.pc(), 0x942f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942d), 0xcb);
        EXPECT(gbc.readMem(0x942e), 0xc8);
        // CB C8 022F
        gbc.setState(0x52f7, 0x53a0, 0x8fd0, 0x6ec8, 0x6023, 0xc12d, 0x0, 0x0);
        gbc.writeMem(0x52f7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x53a0);
        EXPECT(gbc.pc(), 0x52f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0230
        gbc.setState(0x5df3, 0x472a, 0xb3f0, 0x8335, 0xaa02, 0xa586, 0x1, 0x1);
        gbc.writeMem(0x5df3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x472a);
        EXPECT(gbc.pc(), 0x5df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0231
        gbc.setState(0x8763, 0x2bd6, 0x2fd0, 0xe9a9, 0x4761, 0x81ce, 0x0, 0x1);
        gbc.writeMem(0x8763, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2bd6);
        EXPECT(gbc.pc(), 0x8765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8763), 0xcb);
        EXPECT(gbc.readMem(0x8764), 0xc8);
        // CB C8 0232
        gbc.setState(0xbbee, 0x9c2f, 0x5f60, 0x1278, 0xfc8, 0x7527, 0x1, 0x0);
        gbc.writeMem(0xbbee, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9c2f);
        EXPECT(gbc.pc(), 0xbbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbee), 0xcb);
        EXPECT(gbc.readMem(0xbbef), 0xc8);
        // CB C8 0233
        gbc.setState(0x9c68, 0x652e, 0x7ab0, 0x5041, 0x182b, 0x62b9, 0x0, 0x0);
        gbc.writeMem(0x9c68, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x652e);
        EXPECT(gbc.pc(), 0x9c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c68), 0xcb);
        EXPECT(gbc.readMem(0x9c69), 0xc8);
        // CB C8 0234
        gbc.setState(0xcef2, 0x1360, 0x4e90, 0xf136, 0x6e31, 0x900c, 0x1, 0x0);
        gbc.writeMem(0xcef2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1360);
        EXPECT(gbc.pc(), 0xcef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef2), 0xcb);
        EXPECT(gbc.readMem(0xcef3), 0xc8);
        // CB C8 0235
        gbc.setState(0x6392, 0x54ae, 0x67c0, 0x3552, 0x58cd, 0x202a, 0x1, 0x0);
        gbc.writeMem(0x6392, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x54ae);
        EXPECT(gbc.pc(), 0x6394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0236
        gbc.setState(0x4cf0, 0xed4f, 0x9800, 0x8cf0, 0x1a44, 0xb53c, 0x0, 0x0);
        gbc.writeMem(0x4cf0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xed4f);
        EXPECT(gbc.pc(), 0x4cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0237
        gbc.setState(0x114, 0xbb6f, 0xc9a0, 0xcea1, 0xff0c, 0x6665, 0x1, 0x1);
        gbc.writeMem(0x114, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbb6f);
        EXPECT(gbc.pc(), 0x116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0238
        gbc.setState(0x1044, 0x78b1, 0x3ca0, 0xa038, 0x2927, 0xaaf3, 0x0, 0x1);
        gbc.writeMem(0x1044, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x78b1);
        EXPECT(gbc.pc(), 0x1046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0239
        gbc.setState(0x2fd4, 0x6974, 0x8860, 0xb0d4, 0x9763, 0x8e9c, 0x0, 0x0);
        gbc.writeMem(0x2fd4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6974);
        EXPECT(gbc.pc(), 0x2fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 023A
        gbc.setState(0x51b6, 0x4065, 0x4d40, 0xe365, 0xedea, 0x2946, 0x0, 0x1);
        gbc.writeMem(0x51b6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4065);
        EXPECT(gbc.pc(), 0x51b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 023B
        gbc.setState(0xacc9, 0xa95d, 0x6930, 0x1cd0, 0x6334, 0x7940, 0x0, 0x0);
        gbc.writeMem(0xacc9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa95d);
        EXPECT(gbc.pc(), 0xaccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc9), 0xcb);
        EXPECT(gbc.readMem(0xacca), 0xc8);
        // CB C8 023C
        gbc.setState(0xa55b, 0xcc19, 0x1890, 0x5ca7, 0xb632, 0xd52b, 0x0, 0x1);
        gbc.writeMem(0xa55b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcc19);
        EXPECT(gbc.pc(), 0xa55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa55b), 0xcb);
        EXPECT(gbc.readMem(0xa55c), 0xc8);
        // CB C8 023D
        gbc.setState(0xa0f7, 0x37cb, 0x9b0, 0x4e4a, 0xa6b0, 0x435d, 0x1, 0x1);
        gbc.writeMem(0xa0f7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x37cb);
        EXPECT(gbc.pc(), 0xa0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f7), 0xcb);
        EXPECT(gbc.readMem(0xa0f8), 0xc8);
        // CB C8 023E
        gbc.setState(0xbb05, 0xfe7f, 0x7a70, 0xa5ff, 0x82d7, 0xfeea, 0x0, 0x1);
        gbc.writeMem(0xbb05, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfe7f);
        EXPECT(gbc.pc(), 0xbb07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb05), 0xcb);
        EXPECT(gbc.readMem(0xbb06), 0xc8);
        // CB C8 023F
        gbc.setState(0xce29, 0x5627, 0x5a80, 0x660e, 0x269, 0x5ce, 0x1, 0x0);
        gbc.writeMem(0xce29, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5627);
        EXPECT(gbc.pc(), 0xce2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce29), 0xcb);
        EXPECT(gbc.readMem(0xce2a), 0xc8);
        // CB C8 0240
        gbc.setState(0xc177, 0xe604, 0xbb30, 0x11f1, 0x84da, 0x7dd, 0x1, 0x0);
        gbc.writeMem(0xc177, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe604);
        EXPECT(gbc.pc(), 0xc179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc177), 0xcb);
        EXPECT(gbc.readMem(0xc178), 0xc8);
        // CB C8 0241
        gbc.setState(0x6b66, 0x7ecb, 0x5560, 0xa69e, 0x6dc, 0xdfdb, 0x0, 0x1);
        gbc.writeMem(0x6b66, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7ecb);
        EXPECT(gbc.pc(), 0x6b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0242
        gbc.setState(0xcdd4, 0x63a2, 0x7230, 0x45a4, 0x7d88, 0x409b, 0x1, 0x1);
        gbc.writeMem(0xcdd4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x63a2);
        EXPECT(gbc.pc(), 0xcdd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd4), 0xcb);
        EXPECT(gbc.readMem(0xcdd5), 0xc8);
        // CB C8 0243
        gbc.setState(0x6090, 0xf331, 0x2a00, 0xbcf7, 0x23b2, 0x4702, 0x0, 0x1);
        gbc.writeMem(0x6090, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf331);
        EXPECT(gbc.pc(), 0x6092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0244
        gbc.setState(0xd494, 0xae02, 0xc950, 0xda42, 0x1889, 0x666a, 0x0, 0x1);
        gbc.writeMem(0xd494, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xae02);
        EXPECT(gbc.pc(), 0xd496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd494), 0xcb);
        EXPECT(gbc.readMem(0xd495), 0xc8);
        // CB C8 0245
        gbc.setState(0x53e1, 0x93d3, 0x5120, 0x443, 0xbdbf, 0x8d5d, 0x1, 0x1);
        gbc.writeMem(0x53e1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x93d3);
        EXPECT(gbc.pc(), 0x53e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0246
        gbc.setState(0x530, 0xbc68, 0xb010, 0x7318, 0x5eb7, 0x252d, 0x1, 0x0);
        gbc.writeMem(0x530, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbc68);
        EXPECT(gbc.pc(), 0x532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0247
        gbc.setState(0x5b04, 0x3cf, 0xe490, 0xf75c, 0x181f, 0xcf2e, 0x0, 0x0);
        gbc.writeMem(0x5b04, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3cf);
        EXPECT(gbc.pc(), 0x5b06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0248
        gbc.setState(0x6e5d, 0xeb07, 0xa200, 0x3710, 0x9b26, 0x4f7f, 0x0, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xeb07);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0249
        gbc.setState(0x59d9, 0xb188, 0x68c0, 0xa371, 0xc51a, 0xec5f, 0x0, 0x1);
        gbc.writeMem(0x59d9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb188);
        EXPECT(gbc.pc(), 0x59db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 024A
        gbc.setState(0x20c3, 0xaf1c, 0x2240, 0x76c5, 0x6820, 0x54a1, 0x0, 0x0);
        gbc.writeMem(0x20c3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xaf1c);
        EXPECT(gbc.pc(), 0x20c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 024B
        gbc.setState(0x4cc7, 0x7b45, 0x570, 0xf66, 0x7885, 0xd96d, 0x0, 0x1);
        gbc.writeMem(0x4cc7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7b45);
        EXPECT(gbc.pc(), 0x4cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 024C
        gbc.setState(0xdb3c, 0x87a2, 0xbc10, 0x3e90, 0x10eb, 0xb443, 0x1, 0x1);
        gbc.writeMem(0xdb3c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x87a2);
        EXPECT(gbc.pc(), 0xdb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3c), 0xcb);
        EXPECT(gbc.readMem(0xdb3d), 0xc8);
        // CB C8 024D
        gbc.setState(0x5d8a, 0xf23a, 0x6d30, 0xe6bd, 0xec53, 0x2bef, 0x0, 0x0);
        gbc.writeMem(0x5d8a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf23a);
        EXPECT(gbc.pc(), 0x5d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 024E
        gbc.setState(0x401e, 0x2ed1, 0xf3b0, 0x6e2e, 0x2886, 0x7d92, 0x0, 0x0);
        gbc.writeMem(0x401e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2ed1);
        EXPECT(gbc.pc(), 0x4020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 024F
        gbc.setState(0x973e, 0xd9fc, 0xdd40, 0x842e, 0x6a0f, 0xcc04, 0x1, 0x1);
        gbc.writeMem(0x973e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd9fc);
        EXPECT(gbc.pc(), 0x9740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973e), 0xcb);
        EXPECT(gbc.readMem(0x973f), 0xc8);
        // CB C8 0250
        gbc.setState(0x1fde, 0x6e80, 0x6790, 0x4a35, 0x910e, 0xac39, 0x1, 0x1);
        gbc.writeMem(0x1fde, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6e80);
        EXPECT(gbc.pc(), 0x1fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0252
        gbc.setState(0x30a2, 0xb9f3, 0x1dd0, 0x184, 0x7034, 0x9213, 0x0, 0x0);
        gbc.writeMem(0x30a2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb9f3);
        EXPECT(gbc.pc(), 0x30a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0253
        gbc.setState(0x44d8, 0x90f9, 0x7a00, 0xd71f, 0x4cf2, 0xb568, 0x1, 0x1);
        gbc.writeMem(0x44d8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x90f9);
        EXPECT(gbc.pc(), 0x44da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0255
        gbc.setState(0x2216, 0x47c2, 0xd760, 0x8b67, 0x9ba3, 0xf23, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x47c2);
        EXPECT(gbc.pc(), 0x2218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0256
        gbc.setState(0x1a94, 0x4652, 0x52d0, 0x71fa, 0x4ad5, 0x279a, 0x1, 0x0);
        gbc.writeMem(0x1a94, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4652);
        EXPECT(gbc.pc(), 0x1a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0257
        gbc.setState(0xae44, 0x1170, 0xe0, 0xa3cb, 0xd9b1, 0x8f21, 0x1, 0x1);
        gbc.writeMem(0xae44, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1170);
        EXPECT(gbc.pc(), 0xae46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae44), 0xcb);
        EXPECT(gbc.readMem(0xae45), 0xc8);
        // CB C8 0258
        gbc.setState(0x5c34, 0x29d6, 0x1ca0, 0x961c, 0xda5e, 0x7d5d, 0x0, 0x0);
        gbc.writeMem(0x5c34, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x29d6);
        EXPECT(gbc.pc(), 0x5c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0259
        gbc.setState(0x6c57, 0x16c2, 0xa570, 0xf9dc, 0x97bb, 0x9289, 0x0, 0x1);
        gbc.writeMem(0x6c57, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x16c2);
        EXPECT(gbc.pc(), 0x6c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 025A
        gbc.setState(0xae6f, 0x1279, 0x11a0, 0xb80f, 0xd030, 0x28a3, 0x1, 0x1);
        gbc.writeMem(0xae6f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1279);
        EXPECT(gbc.pc(), 0xae71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae6f), 0xcb);
        EXPECT(gbc.readMem(0xae70), 0xc8);
        // CB C8 025B
        gbc.setState(0x7b34, 0x58d, 0x3fe0, 0x47be, 0xba9d, 0x747b, 0x0, 0x1);
        gbc.writeMem(0x7b34, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x58d);
        EXPECT(gbc.pc(), 0x7b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 025C
        gbc.setState(0x880d, 0x7a40, 0xa720, 0x4fe8, 0x12de, 0x6314, 0x0, 0x0);
        gbc.writeMem(0x880d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7a40);
        EXPECT(gbc.pc(), 0x880f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880d), 0xcb);
        EXPECT(gbc.readMem(0x880e), 0xc8);
        // CB C8 025E
        gbc.setState(0xe0c5, 0xec8, 0x3970, 0x6640, 0xa8bc, 0xd774, 0x1, 0x1);
        gbc.writeMem(0xe0c5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xec8);
        EXPECT(gbc.pc(), 0xe0c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c5), 0xcb);
        EXPECT(gbc.readMem(0xe0c6), 0xc8);
        // CB C8 025F
        gbc.setState(0x7a94, 0x5b1a, 0x7e70, 0x29bd, 0x3a18, 0xfa39, 0x1, 0x1);
        gbc.writeMem(0x7a94, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5b1a);
        EXPECT(gbc.pc(), 0x7a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0260
        gbc.setState(0x27c9, 0x196a, 0x97b0, 0x2224, 0x9ef6, 0x8294, 0x0, 0x0);
        gbc.writeMem(0x27c9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x196a);
        EXPECT(gbc.pc(), 0x27cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0261
        gbc.setState(0x5de8, 0x46e, 0x70c0, 0x32ad, 0xeee7, 0xa7a0, 0x0, 0x0);
        gbc.writeMem(0x5de8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x46e);
        EXPECT(gbc.pc(), 0x5dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0262
        gbc.setState(0x9cb3, 0x5a82, 0x5380, 0xd6b4, 0x94ef, 0x513e, 0x1, 0x0);
        gbc.writeMem(0x9cb3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5a82);
        EXPECT(gbc.pc(), 0x9cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb3), 0xcb);
        EXPECT(gbc.readMem(0x9cb4), 0xc8);
        // CB C8 0263
        gbc.setState(0xabfa, 0x470e, 0x4400, 0xb72d, 0x567f, 0xb792, 0x0, 0x0);
        gbc.writeMem(0xabfa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x470e);
        EXPECT(gbc.pc(), 0xabfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfa), 0xcb);
        EXPECT(gbc.readMem(0xabfb), 0xc8);
        // CB C8 0264
        gbc.setState(0x6240, 0x2249, 0x3f80, 0xad1c, 0xed8a, 0xcae6, 0x1, 0x0);
        gbc.writeMem(0x6240, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2249);
        EXPECT(gbc.pc(), 0x6242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0265
        gbc.setState(0xbf10, 0xfff6, 0x7930, 0xe0b7, 0x5ef2, 0x1b3f, 0x0, 0x0);
        gbc.writeMem(0xbf10, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfff6);
        EXPECT(gbc.pc(), 0xbf12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf10), 0xcb);
        EXPECT(gbc.readMem(0xbf11), 0xc8);
        // CB C8 0266
        gbc.setState(0x38e6, 0xabe, 0x6010, 0xe62e, 0xb068, 0x81a3, 0x0, 0x0);
        gbc.writeMem(0x38e6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xabe);
        EXPECT(gbc.pc(), 0x38e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0267
        gbc.setState(0x5455, 0xd359, 0x55b0, 0x6a39, 0xc1cc, 0xbb53, 0x0, 0x1);
        gbc.writeMem(0x5455, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd359);
        EXPECT(gbc.pc(), 0x5457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0268
        gbc.setState(0xb1ab, 0xff41, 0x7320, 0xc028, 0xf981, 0x439, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xff41);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ab), 0xcb);
        EXPECT(gbc.readMem(0xb1ac), 0xc8);
        // CB C8 0269
        gbc.setState(0xd2d3, 0x6064, 0xd9c0, 0x1ee4, 0x42d2, 0x649, 0x1, 0x0);
        gbc.writeMem(0xd2d3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6064);
        EXPECT(gbc.pc(), 0xd2d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d3), 0xcb);
        EXPECT(gbc.readMem(0xd2d4), 0xc8);
        // CB C8 026A
        gbc.setState(0x5894, 0xd306, 0x1fc0, 0x1ccd, 0x3eb, 0x70ba, 0x0, 0x0);
        gbc.writeMem(0x5894, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd306);
        EXPECT(gbc.pc(), 0x5896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 026B
        gbc.setState(0xbda7, 0xa0b, 0xdc70, 0xc408, 0x425, 0x90f4, 0x0, 0x1);
        gbc.writeMem(0xbda7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa0b);
        EXPECT(gbc.pc(), 0xbda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda7), 0xcb);
        EXPECT(gbc.readMem(0xbda8), 0xc8);
        // CB C8 026C
        gbc.setState(0x955e, 0x2856, 0xe950, 0x1220, 0x251b, 0x9eeb, 0x0, 0x0);
        gbc.writeMem(0x955e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2856);
        EXPECT(gbc.pc(), 0x9560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955e), 0xcb);
        EXPECT(gbc.readMem(0x955f), 0xc8);
        // CB C8 026D
        gbc.setState(0x2695, 0xca7d, 0xbf70, 0x1704, 0xbfdf, 0xb866, 0x1, 0x0);
        gbc.writeMem(0x2695, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xca7d);
        EXPECT(gbc.pc(), 0x2697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 026E
        gbc.setState(0x3b46, 0x6cdc, 0xc5f0, 0x5298, 0xbe0d, 0xcd33, 0x1, 0x0);
        gbc.writeMem(0x3b46, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6cdc);
        EXPECT(gbc.pc(), 0x3b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0270
        gbc.setState(0xfc1, 0x4eca, 0xcd60, 0x1fa6, 0x1c9d, 0x341f, 0x0, 0x1);
        gbc.writeMem(0xfc1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4eca);
        EXPECT(gbc.pc(), 0xfc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0271
        gbc.setState(0xe19d, 0xe001, 0x5a80, 0xb613, 0xfbbc, 0x3aca, 0x0, 0x1);
        gbc.writeMem(0xe19d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe001);
        EXPECT(gbc.pc(), 0xe19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe19d), 0xcb);
        EXPECT(gbc.readMem(0xe19e), 0xc8);
        // CB C8 0272
        gbc.setState(0x393f, 0x1fec, 0xcde0, 0x702f, 0x9187, 0xb6ec, 0x0, 0x0);
        gbc.writeMem(0x393f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1fec);
        EXPECT(gbc.pc(), 0x3941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0273
        gbc.setState(0x3a6c, 0x37b3, 0xb700, 0x9030, 0x86cf, 0x8185, 0x0, 0x0);
        gbc.writeMem(0x3a6c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x37b3);
        EXPECT(gbc.pc(), 0x3a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0274
        gbc.setState(0x2c22, 0x96df, 0xe8b0, 0x265a, 0xa73d, 0xc414, 0x0, 0x0);
        gbc.writeMem(0x2c22, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x96df);
        EXPECT(gbc.pc(), 0x2c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0275
        gbc.setState(0x4ff0, 0x5426, 0x3440, 0x7133, 0xa641, 0x9e46, 0x0, 0x1);
        gbc.writeMem(0x4ff0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5426);
        EXPECT(gbc.pc(), 0x4ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0276
        gbc.setState(0x5f7, 0x80f7, 0xd70, 0x8554, 0x28f5, 0xe5a5, 0x1, 0x0);
        gbc.writeMem(0x5f7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x80f7);
        EXPECT(gbc.pc(), 0x5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0277
        gbc.setState(0xc487, 0xd07a, 0x5db0, 0x9cc9, 0x32a, 0x5ba1, 0x1, 0x0);
        gbc.writeMem(0xc487, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd07a);
        EXPECT(gbc.pc(), 0xc489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc487), 0xcb);
        EXPECT(gbc.readMem(0xc488), 0xc8);
        // CB C8 0278
        gbc.setState(0x3deb, 0x8c2e, 0x930, 0xefbd, 0x9be1, 0x96ce, 0x0, 0x0);
        gbc.writeMem(0x3deb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8c2e);
        EXPECT(gbc.pc(), 0x3ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0279
        gbc.setState(0xcaa7, 0x25e8, 0xd620, 0x11a9, 0x7e2a, 0xfb90, 0x0, 0x0);
        gbc.writeMem(0xcaa7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x25e8);
        EXPECT(gbc.pc(), 0xcaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa7), 0xcb);
        EXPECT(gbc.readMem(0xcaa8), 0xc8);
        // CB C8 027A
        gbc.setState(0x234c, 0xdf65, 0x1270, 0x5ae3, 0x87a4, 0xd3fb, 0x1, 0x1);
        gbc.writeMem(0x234c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdf65);
        EXPECT(gbc.pc(), 0x234e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 027B
        gbc.setState(0x3b2d, 0x80f9, 0xdd20, 0xcb55, 0x77b9, 0x26b6, 0x1, 0x0);
        gbc.writeMem(0x3b2d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x80f9);
        EXPECT(gbc.pc(), 0x3b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 027C
        gbc.setState(0xdf51, 0x881b, 0x4f00, 0xc717, 0x1f44, 0x661, 0x1, 0x1);
        gbc.writeMem(0xdf51, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x881b);
        EXPECT(gbc.pc(), 0xdf53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf51), 0xcb);
        EXPECT(gbc.readMem(0xdf52), 0xc8);
        // CB C8 027D
        gbc.setState(0x682e, 0x8774, 0x7630, 0x7ec3, 0x5475, 0x6141, 0x0, 0x1);
        gbc.writeMem(0x682e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8774);
        EXPECT(gbc.pc(), 0x6830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 027E
        gbc.setState(0xe34a, 0xca10, 0xc210, 0x4e72, 0x9e06, 0x2211, 0x1, 0x0);
        gbc.writeMem(0xe34a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xca10);
        EXPECT(gbc.pc(), 0xe34c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe34a), 0xcb);
        EXPECT(gbc.readMem(0xe34b), 0xc8);
        // CB C8 027F
        gbc.setState(0x9e9d, 0x6f4e, 0x4b60, 0xc77c, 0x5dc1, 0xb3d8, 0x1, 0x0);
        gbc.writeMem(0x9e9d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6f4e);
        EXPECT(gbc.pc(), 0x9e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9d), 0xcb);
        EXPECT(gbc.readMem(0x9e9e), 0xc8);
        // CB C8 0280
        gbc.setState(0x6b04, 0x747b, 0xca60, 0x8af8, 0x14d4, 0xf2e0, 0x1, 0x1);
        gbc.writeMem(0x6b04, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x747b);
        EXPECT(gbc.pc(), 0x6b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0281
        gbc.setState(0x10, 0xea16, 0x1f30, 0xd623, 0xadc0, 0x390, 0x1, 0x1);
        gbc.writeMem(0x10, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xea16);
        EXPECT(gbc.pc(), 0x12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0282
        gbc.setState(0x4894, 0xb614, 0xe3f0, 0xddf, 0x5cb3, 0xbc62, 0x0, 0x1);
        gbc.writeMem(0x4894, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb614);
        EXPECT(gbc.pc(), 0x4896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0283
        gbc.setState(0x849f, 0xc223, 0xc190, 0x5e91, 0x45b1, 0x6d41, 0x0, 0x1);
        gbc.writeMem(0x849f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc223);
        EXPECT(gbc.pc(), 0x84a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849f), 0xcb);
        EXPECT(gbc.readMem(0x84a0), 0xc8);
        // CB C8 0284
        gbc.setState(0xbc72, 0xa9f4, 0xee60, 0x1cf5, 0xceac, 0xa11e, 0x0, 0x1);
        gbc.writeMem(0xbc72, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa9f4);
        EXPECT(gbc.pc(), 0xbc74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc72), 0xcb);
        EXPECT(gbc.readMem(0xbc73), 0xc8);
        // CB C8 0285
        gbc.setState(0x411c, 0x5c0f, 0xd720, 0x410e, 0xde6e, 0x992e, 0x1, 0x0);
        gbc.writeMem(0x411c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5c0f);
        EXPECT(gbc.pc(), 0x411e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0286
        gbc.setState(0xa9fd, 0x296e, 0xea80, 0x9219, 0x267, 0x6cb6, 0x1, 0x0);
        gbc.writeMem(0xa9fd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x296e);
        EXPECT(gbc.pc(), 0xa9ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9fd), 0xcb);
        EXPECT(gbc.readMem(0xa9fe), 0xc8);
        // CB C8 0287
        gbc.setState(0x2767, 0x7c6b, 0xe140, 0x953f, 0x6c0e, 0x3a9, 0x0, 0x1);
        gbc.writeMem(0x2767, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7c6b);
        EXPECT(gbc.pc(), 0x2769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0288
        gbc.setState(0xdacb, 0x9690, 0x26e0, 0x8301, 0x3d65, 0x5eb1, 0x0, 0x1);
        gbc.writeMem(0xdacb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9690);
        EXPECT(gbc.pc(), 0xdacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdacb), 0xcb);
        EXPECT(gbc.readMem(0xdacc), 0xc8);
        // CB C8 0289
        gbc.setState(0xe14, 0x6e6b, 0x600, 0xb029, 0xc1bb, 0x9462, 0x1, 0x0);
        gbc.writeMem(0xe14, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6e6b);
        EXPECT(gbc.pc(), 0xe16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 028A
        gbc.setState(0xac8c, 0x101b, 0xe6b0, 0xe530, 0xdd49, 0x563d, 0x0, 0x1);
        gbc.writeMem(0xac8c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0xac8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8c), 0xcb);
        EXPECT(gbc.readMem(0xac8d), 0xc8);
        // CB C8 028B
        gbc.setState(0x599c, 0x2475, 0x1930, 0x99cf, 0xd553, 0x9821, 0x0, 0x1);
        gbc.writeMem(0x599c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2475);
        EXPECT(gbc.pc(), 0x599e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 028C
        gbc.setState(0x3b82, 0xfb1f, 0xaba0, 0x356, 0x365c, 0xaca, 0x1, 0x0);
        gbc.writeMem(0x3b82, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfb1f);
        EXPECT(gbc.pc(), 0x3b84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 028D
        gbc.setState(0xc108, 0x15e5, 0xbc0, 0x1f5, 0x34dc, 0xede4, 0x1, 0x0);
        gbc.writeMem(0xc108, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x15e5);
        EXPECT(gbc.pc(), 0xc10a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc108), 0xcb);
        EXPECT(gbc.readMem(0xc109), 0xc8);
        // CB C8 028F
        gbc.setState(0xce35, 0x3ebf, 0x7fd0, 0xb86b, 0xc5c6, 0x9570, 0x0, 0x0);
        gbc.writeMem(0xce35, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3ebf);
        EXPECT(gbc.pc(), 0xce37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce35), 0xcb);
        EXPECT(gbc.readMem(0xce36), 0xc8);
        // CB C8 0290
        gbc.setState(0x21d, 0xd952, 0xb7a0, 0x8c69, 0x6d69, 0x8da8, 0x1, 0x1);
        gbc.writeMem(0x21d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd952);
        EXPECT(gbc.pc(), 0x21f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0291
        gbc.setState(0x475a, 0x4915, 0x3ba0, 0x8be4, 0x71b9, 0x4db2, 0x0, 0x0);
        gbc.writeMem(0x475a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4915);
        EXPECT(gbc.pc(), 0x475c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0292
        gbc.setState(0xcc32, 0x7ce7, 0x9000, 0xdef5, 0xa361, 0xfb8a, 0x1, 0x1);
        gbc.writeMem(0xcc32, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7ce7);
        EXPECT(gbc.pc(), 0xcc34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc32), 0xcb);
        EXPECT(gbc.readMem(0xcc33), 0xc8);
        // CB C8 0293
        gbc.setState(0xd3ac, 0xf0bf, 0x5100, 0xa541, 0x4777, 0x1d79, 0x0, 0x0);
        gbc.writeMem(0xd3ac, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf0bf);
        EXPECT(gbc.pc(), 0xd3ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ac), 0xcb);
        EXPECT(gbc.readMem(0xd3ad), 0xc8);
        // CB C8 0295
        gbc.setState(0x38a7, 0xac02, 0x3c90, 0x5e95, 0xcef5, 0xdd76, 0x0, 0x0);
        gbc.writeMem(0x38a7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xac02);
        EXPECT(gbc.pc(), 0x38a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0296
        gbc.setState(0xeb15, 0xc7de, 0x88a0, 0x3116, 0x58, 0x9ce4, 0x0, 0x1);
        gbc.writeMem(0xeb15, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc7de);
        EXPECT(gbc.pc(), 0xeb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb15), 0xcb);
        EXPECT(gbc.readMem(0xeb16), 0xc8);
        // CB C8 0297
        gbc.setState(0x452d, 0x1fc8, 0x91e0, 0xbb22, 0x2d4, 0x9f75, 0x0, 0x1);
        gbc.writeMem(0x452d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1fc8);
        EXPECT(gbc.pc(), 0x452f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0299
        gbc.setState(0xafd7, 0x76cd, 0x7f70, 0xc4be, 0x382f, 0xbf07, 0x1, 0x1);
        gbc.writeMem(0xafd7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x76cd);
        EXPECT(gbc.pc(), 0xafd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd7), 0xcb);
        EXPECT(gbc.readMem(0xafd8), 0xc8);
        // CB C8 029A
        gbc.setState(0xbd96, 0x4d39, 0xe50, 0xcf09, 0xc0fe, 0xb591, 0x1, 0x0);
        gbc.writeMem(0xbd96, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4d39);
        EXPECT(gbc.pc(), 0xbd98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd96), 0xcb);
        EXPECT(gbc.readMem(0xbd97), 0xc8);
        // CB C8 029B
        gbc.setState(0xafa8, 0xa288, 0x9390, 0x8eea, 0x1b6b, 0xfe42, 0x0, 0x0);
        gbc.writeMem(0xafa8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa288);
        EXPECT(gbc.pc(), 0xafaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa8), 0xcb);
        EXPECT(gbc.readMem(0xafa9), 0xc8);
        // CB C8 029C
        gbc.setState(0x5b8a, 0xaa3a, 0xbb10, 0x567e, 0x4e73, 0x9ecb, 0x0, 0x0);
        gbc.writeMem(0x5b8a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xaa3a);
        EXPECT(gbc.pc(), 0x5b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 029D
        gbc.setState(0x292b, 0x18f9, 0xd920, 0x7925, 0x6fe, 0x17e4, 0x0, 0x0);
        gbc.writeMem(0x292b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x18f9);
        EXPECT(gbc.pc(), 0x292d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 029E
        gbc.setState(0x8f53, 0xda07, 0x7980, 0x1dd4, 0x75f2, 0xb8f7, 0x1, 0x0);
        gbc.writeMem(0x8f53, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xda07);
        EXPECT(gbc.pc(), 0x8f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f53), 0xcb);
        EXPECT(gbc.readMem(0x8f54), 0xc8);
        // CB C8 029F
        gbc.setState(0x51e9, 0xd099, 0x4a80, 0x1a69, 0xd5d8, 0xb1ea, 0x1, 0x0);
        gbc.writeMem(0x51e9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd099);
        EXPECT(gbc.pc(), 0x51eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02A0
        gbc.setState(0x23a8, 0x25b8, 0x13d0, 0xa912, 0xf010, 0x199d, 0x0, 0x1);
        gbc.writeMem(0x23a8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x25b8);
        EXPECT(gbc.pc(), 0x23aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02A1
        gbc.setState(0x45b5, 0xdd64, 0x5240, 0xe456, 0xc492, 0xfe14, 0x0, 0x1);
        gbc.writeMem(0x45b5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdd64);
        EXPECT(gbc.pc(), 0x45b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02A2
        gbc.setState(0xc96b, 0xdfbb, 0x1ea0, 0x55bc, 0x2259, 0xde6b, 0x0, 0x0);
        gbc.writeMem(0xc96b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdfbb);
        EXPECT(gbc.pc(), 0xc96d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc96b), 0xcb);
        EXPECT(gbc.readMem(0xc96c), 0xc8);
        // CB C8 02A3
        gbc.setState(0xe221, 0x4455, 0x1410, 0x93d3, 0x482a, 0xd351, 0x0, 0x1);
        gbc.writeMem(0xe221, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4455);
        EXPECT(gbc.pc(), 0xe223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe221), 0xcb);
        EXPECT(gbc.readMem(0xe222), 0xc8);
        // CB C8 02A4
        gbc.setState(0x3fce, 0x6898, 0x7db0, 0x86be, 0xf08b, 0x246a, 0x0, 0x0);
        gbc.writeMem(0x3fce, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6898);
        EXPECT(gbc.pc(), 0x3fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02A5
        gbc.setState(0x5000, 0x984b, 0xe9f0, 0x9fa5, 0x970e, 0x1149, 0x0, 0x1);
        gbc.writeMem(0x5000, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x984b);
        EXPECT(gbc.pc(), 0x5002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02A6
        gbc.setState(0x3f3e, 0xfc1d, 0x7330, 0xdc22, 0x8138, 0xa450, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfc1d);
        EXPECT(gbc.pc(), 0x3f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02A7
        gbc.setState(0x7b74, 0x72a9, 0x5660, 0x912, 0xb0f0, 0x5c0a, 0x1, 0x1);
        gbc.writeMem(0x7b74, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x72a9);
        EXPECT(gbc.pc(), 0x7b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02A8
        gbc.setState(0x6017, 0x73e4, 0x2f0, 0xbe82, 0xfc7d, 0xea7f, 0x1, 0x1);
        gbc.writeMem(0x6017, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x73e4);
        EXPECT(gbc.pc(), 0x6019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02A9
        gbc.setState(0xaafa, 0xda7d, 0x2860, 0x37bb, 0xc0b4, 0xe5c8, 0x0, 0x1);
        gbc.writeMem(0xaafa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xda7d);
        EXPECT(gbc.pc(), 0xaafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaafa), 0xcb);
        EXPECT(gbc.readMem(0xaafb), 0xc8);
        // CB C8 02AA
        gbc.setState(0x3491, 0xf27, 0x5ed0, 0xfc05, 0x21b2, 0x248b, 0x0, 0x0);
        gbc.writeMem(0x3491, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf27);
        EXPECT(gbc.pc(), 0x3493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02AB
        gbc.setState(0x8ec9, 0x85ee, 0xcd70, 0x4e16, 0xdf6c, 0x8ae7, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x85ee);
        EXPECT(gbc.pc(), 0x8ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec9), 0xcb);
        EXPECT(gbc.readMem(0x8eca), 0xc8);
        // CB C8 02AC
        gbc.setState(0x97f4, 0xa108, 0xbeb0, 0x8fa3, 0xcdbd, 0x2341, 0x1, 0x1);
        gbc.writeMem(0x97f4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa108);
        EXPECT(gbc.pc(), 0x97f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f4), 0xcb);
        EXPECT(gbc.readMem(0x97f5), 0xc8);
        // CB C8 02AD
        gbc.setState(0x4d4c, 0x42f5, 0x8fe0, 0x4273, 0xad50, 0xf229, 0x1, 0x0);
        gbc.writeMem(0x4d4c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x42f5);
        EXPECT(gbc.pc(), 0x4d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02AE
        gbc.setState(0x39b0, 0xf23a, 0xcf0, 0x6d1b, 0x65a8, 0x9432, 0x0, 0x1);
        gbc.writeMem(0x39b0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf23a);
        EXPECT(gbc.pc(), 0x39b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02AF
        gbc.setState(0xa729, 0xdd0f, 0xec60, 0x7799, 0x1f47, 0x9adc, 0x0, 0x0);
        gbc.writeMem(0xa729, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdd0f);
        EXPECT(gbc.pc(), 0xa72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa729), 0xcb);
        EXPECT(gbc.readMem(0xa72a), 0xc8);
        // CB C8 02B0
        gbc.setState(0xc255, 0xc282, 0x3b60, 0xe9b5, 0x30d6, 0x775e, 0x0, 0x0);
        gbc.writeMem(0xc255, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc282);
        EXPECT(gbc.pc(), 0xc257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc255), 0xcb);
        EXPECT(gbc.readMem(0xc256), 0xc8);
        // CB C8 02B1
        gbc.setState(0x899f, 0x2d67, 0x9510, 0xb1f0, 0x7dc, 0x15aa, 0x0, 0x1);
        gbc.writeMem(0x899f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2d67);
        EXPECT(gbc.pc(), 0x89a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x899f), 0xcb);
        EXPECT(gbc.readMem(0x89a0), 0xc8);
        // CB C8 02B2
        gbc.setState(0xe95d, 0x43a6, 0x8230, 0xb0cf, 0xa9fb, 0x289, 0x0, 0x1);
        gbc.writeMem(0xe95d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x43a6);
        EXPECT(gbc.pc(), 0xe95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95d), 0xcb);
        EXPECT(gbc.readMem(0xe95e), 0xc8);
        // CB C8 02B3
        gbc.setState(0x10f2, 0xf0bd, 0xa4c0, 0x3b1c, 0x4751, 0xf92f, 0x0, 0x1);
        gbc.writeMem(0x10f2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf0bd);
        EXPECT(gbc.pc(), 0x10f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02B4
        gbc.setState(0xa192, 0x67d, 0xb860, 0xb177, 0xd92e, 0xc13b, 0x0, 0x1);
        gbc.writeMem(0xa192, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x67d);
        EXPECT(gbc.pc(), 0xa194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa192), 0xcb);
        EXPECT(gbc.readMem(0xa193), 0xc8);
        // CB C8 02B6
        gbc.setState(0x5434, 0x6e6, 0xb3e0, 0xf703, 0x6081, 0xa660, 0x0, 0x1);
        gbc.writeMem(0x5434, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6e6);
        EXPECT(gbc.pc(), 0x5436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02B7
        gbc.setState(0x1674, 0x9398, 0xe110, 0x5df4, 0xf61b, 0x185a, 0x1, 0x0);
        gbc.writeMem(0x1674, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9398);
        EXPECT(gbc.pc(), 0x1676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02B8
        gbc.setState(0x7f35, 0xe941, 0x18d0, 0x566a, 0xbc59, 0x1642, 0x0, 0x0);
        gbc.writeMem(0x7f35, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe941);
        EXPECT(gbc.pc(), 0x7f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02B9
        gbc.setState(0x3499, 0xf7df, 0x8350, 0xafb4, 0x4599, 0x65b6, 0x0, 0x0);
        gbc.writeMem(0x3499, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf7df);
        EXPECT(gbc.pc(), 0x349b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02BA
        gbc.setState(0xd0d5, 0xbde3, 0xb0a0, 0x41bf, 0x5249, 0xa227, 0x1, 0x1);
        gbc.writeMem(0xd0d5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbde3);
        EXPECT(gbc.pc(), 0xd0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d5), 0xcb);
        EXPECT(gbc.readMem(0xd0d6), 0xc8);
        // CB C8 02BB
        gbc.setState(0x26f4, 0x2bbf, 0x30f0, 0xc44e, 0x1371, 0x4899, 0x1, 0x0);
        gbc.writeMem(0x26f4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2bbf);
        EXPECT(gbc.pc(), 0x26f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02BC
        gbc.setState(0x1cc1, 0x5374, 0xebc0, 0x2dfe, 0x1270, 0x8692, 0x1, 0x0);
        gbc.writeMem(0x1cc1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5374);
        EXPECT(gbc.pc(), 0x1cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02BD
        gbc.setState(0xeba5, 0x7389, 0x3c60, 0xb40d, 0x724b, 0x98e5, 0x1, 0x0);
        gbc.writeMem(0xeba5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7389);
        EXPECT(gbc.pc(), 0xeba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba5), 0xcb);
        EXPECT(gbc.readMem(0xeba6), 0xc8);
        // CB C8 02BE
        gbc.setState(0x1b35, 0x7263, 0x5420, 0x53e8, 0x9f51, 0x2bff, 0x0, 0x0);
        gbc.writeMem(0x1b35, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7263);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02BF
        gbc.setState(0x9a4f, 0x2e6f, 0xf5d0, 0x230b, 0x7589, 0x988f, 0x1, 0x1);
        gbc.writeMem(0x9a4f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2e6f);
        EXPECT(gbc.pc(), 0x9a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4f), 0xcb);
        EXPECT(gbc.readMem(0x9a50), 0xc8);
        // CB C8 02C0
        gbc.setState(0x57a0, 0x50ad, 0xfea0, 0x9bef, 0xa645, 0x28a7, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x50ad);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02C1
        gbc.setState(0xc3f4, 0xa6dd, 0xffc0, 0xab14, 0x2793, 0x9a00, 0x0, 0x0);
        gbc.writeMem(0xc3f4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa6dd);
        EXPECT(gbc.pc(), 0xc3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f4), 0xcb);
        EXPECT(gbc.readMem(0xc3f5), 0xc8);
        // CB C8 02C2
        gbc.setState(0x26f9, 0x1fb9, 0x9590, 0x81df, 0x3b35, 0x1637, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1fb9);
        EXPECT(gbc.pc(), 0x26fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02C3
        gbc.setState(0xd195, 0xeac5, 0x9960, 0x811c, 0xfb39, 0xafa7, 0x1, 0x1);
        gbc.writeMem(0xd195, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xeac5);
        EXPECT(gbc.pc(), 0xd197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd195), 0xcb);
        EXPECT(gbc.readMem(0xd196), 0xc8);
        // CB C8 02C4
        gbc.setState(0x2d75, 0x2e11, 0xf2b0, 0xdab6, 0x3f63, 0x56b, 0x0, 0x1);
        gbc.writeMem(0x2d75, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2e11);
        EXPECT(gbc.pc(), 0x2d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02C5
        gbc.setState(0x2420, 0x956, 0xd630, 0xf3fe, 0x5727, 0xae63, 0x1, 0x1);
        gbc.writeMem(0x2420, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x956);
        EXPECT(gbc.pc(), 0x2422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02C6
        gbc.setState(0x8902, 0xf424, 0x6db0, 0xa50a, 0x14ef, 0x40d0, 0x1, 0x1);
        gbc.writeMem(0x8902, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf424);
        EXPECT(gbc.pc(), 0x8904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8902), 0xcb);
        EXPECT(gbc.readMem(0x8903), 0xc8);
        // CB C8 02C8
        gbc.setState(0xdf2d, 0x324f, 0xd8c0, 0xe232, 0x3190, 0x882e, 0x1, 0x0);
        gbc.writeMem(0xdf2d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x324f);
        EXPECT(gbc.pc(), 0xdf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2d), 0xcb);
        EXPECT(gbc.readMem(0xdf2e), 0xc8);
        // CB C8 02C9
        gbc.setState(0x90bb, 0x8a43, 0xf6d0, 0xcd48, 0x8538, 0xb634, 0x0, 0x0);
        gbc.writeMem(0x90bb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8a43);
        EXPECT(gbc.pc(), 0x90bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90bb), 0xcb);
        EXPECT(gbc.readMem(0x90bc), 0xc8);
        // CB C8 02CA
        gbc.setState(0x4d32, 0x141c, 0x1180, 0x7ff6, 0xcaf1, 0xabf3, 0x1, 0x0);
        gbc.writeMem(0x4d32, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x141c);
        EXPECT(gbc.pc(), 0x4d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02CB
        gbc.setState(0x6317, 0x78cd, 0x4d00, 0x8d79, 0x4743, 0x256a, 0x0, 0x1);
        gbc.writeMem(0x6317, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x78cd);
        EXPECT(gbc.pc(), 0x6319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02CC
        gbc.setState(0x5af4, 0x994b, 0x1400, 0x7648, 0xb1f0, 0xc5ca, 0x0, 0x0);
        gbc.writeMem(0x5af4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x994b);
        EXPECT(gbc.pc(), 0x5af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02CD
        gbc.setState(0x9692, 0x1829, 0x7890, 0x25c0, 0xaa6e, 0x9e87, 0x1, 0x1);
        gbc.writeMem(0x9692, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1829);
        EXPECT(gbc.pc(), 0x9694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9692), 0xcb);
        EXPECT(gbc.readMem(0x9693), 0xc8);
        // CB C8 02CE
        gbc.setState(0xaba2, 0xf359, 0x2810, 0x8508, 0x66ff, 0x44d3, 0x0, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf359);
        EXPECT(gbc.pc(), 0xaba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba2), 0xcb);
        EXPECT(gbc.readMem(0xaba3), 0xc8);
        // CB C8 02CF
        gbc.setState(0xaf15, 0x6dc, 0x870, 0x5cb8, 0x2dee, 0x57a8, 0x0, 0x0);
        gbc.writeMem(0xaf15, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6dc);
        EXPECT(gbc.pc(), 0xaf17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf15), 0xcb);
        EXPECT(gbc.readMem(0xaf16), 0xc8);
        // CB C8 02D0
        gbc.setState(0x16f0, 0xeb3a, 0x6010, 0x195f, 0xa7a6, 0x4420, 0x1, 0x0);
        gbc.writeMem(0x16f0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xeb3a);
        EXPECT(gbc.pc(), 0x16f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02D1
        gbc.setState(0xbd0f, 0x5aef, 0x47f0, 0x3d8c, 0x65ea, 0x3127, 0x0, 0x0);
        gbc.writeMem(0xbd0f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5aef);
        EXPECT(gbc.pc(), 0xbd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0f), 0xcb);
        EXPECT(gbc.readMem(0xbd10), 0xc8);
        // CB C8 02D2
        gbc.setState(0xb0b5, 0x87f0, 0xa8b0, 0xa637, 0xe957, 0xb488, 0x1, 0x0);
        gbc.writeMem(0xb0b5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x87f0);
        EXPECT(gbc.pc(), 0xb0b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b5), 0xcb);
        EXPECT(gbc.readMem(0xb0b6), 0xc8);
        // CB C8 02D3
        gbc.setState(0xbe63, 0x4df8, 0x10d0, 0xb845, 0xdbad, 0x5d77, 0x0, 0x0);
        gbc.writeMem(0xbe63, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4df8);
        EXPECT(gbc.pc(), 0xbe65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe63), 0xcb);
        EXPECT(gbc.readMem(0xbe64), 0xc8);
        // CB C8 02D4
        gbc.setState(0x6946, 0x1b5a, 0xc9a0, 0x2488, 0x36f, 0x4c00, 0x0, 0x0);
        gbc.writeMem(0x6946, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1b5a);
        EXPECT(gbc.pc(), 0x6948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02D5
        gbc.setState(0x2564, 0x6d10, 0x3360, 0xd1b9, 0x45cc, 0x5f67, 0x0, 0x1);
        gbc.writeMem(0x2564, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6d10);
        EXPECT(gbc.pc(), 0x2566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02D6
        gbc.setState(0xee86, 0xf09c, 0xd070, 0xa734, 0x5c60, 0xb75b, 0x1, 0x1);
        gbc.writeMem(0xee86, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf09c);
        EXPECT(gbc.pc(), 0xee88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee86), 0xcb);
        EXPECT(gbc.readMem(0xee87), 0xc8);
        // CB C8 02D7
        gbc.setState(0xa921, 0x3a2, 0x73f0, 0xbe2e, 0x6d30, 0xd9f6, 0x0, 0x1);
        gbc.writeMem(0xa921, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3a2);
        EXPECT(gbc.pc(), 0xa923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa921), 0xcb);
        EXPECT(gbc.readMem(0xa922), 0xc8);
        // CB C8 02D8
        gbc.setState(0x64a4, 0x1650, 0x1490, 0x3870, 0xbc1, 0xfb32, 0x1, 0x1);
        gbc.writeMem(0x64a4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1650);
        EXPECT(gbc.pc(), 0x64a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02DA
        gbc.setState(0x2320, 0xd074, 0x740, 0x1ef6, 0x6148, 0xc65e, 0x1, 0x0);
        gbc.writeMem(0x2320, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd074);
        EXPECT(gbc.pc(), 0x2322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02DB
        gbc.setState(0xac84, 0xd241, 0xd880, 0x9458, 0xf5e, 0xa0a5, 0x0, 0x1);
        gbc.writeMem(0xac84, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd241);
        EXPECT(gbc.pc(), 0xac86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac84), 0xcb);
        EXPECT(gbc.readMem(0xac85), 0xc8);
        // CB C8 02DC
        gbc.setState(0xa88e, 0xea1, 0x8710, 0x3257, 0x522c, 0x4c9, 0x0, 0x0);
        gbc.writeMem(0xa88e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xea1);
        EXPECT(gbc.pc(), 0xa890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88e), 0xcb);
        EXPECT(gbc.readMem(0xa88f), 0xc8);
        // CB C8 02DD
        gbc.setState(0x4273, 0xb40b, 0xaa30, 0xf5ed, 0xcc9f, 0x624b, 0x0, 0x0);
        gbc.writeMem(0x4273, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb40b);
        EXPECT(gbc.pc(), 0x4275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02DE
        gbc.setState(0x8307, 0xe3ee, 0x9be0, 0x3e06, 0x4e25, 0xdc08, 0x1, 0x0);
        gbc.writeMem(0x8307, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe3ee);
        EXPECT(gbc.pc(), 0x8309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8307), 0xcb);
        EXPECT(gbc.readMem(0x8308), 0xc8);
        // CB C8 02DF
        gbc.setState(0xd7dd, 0x8512, 0xf500, 0xe04d, 0x5494, 0x6e9a, 0x1, 0x1);
        gbc.writeMem(0xd7dd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8512);
        EXPECT(gbc.pc(), 0xd7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7dd), 0xcb);
        EXPECT(gbc.readMem(0xd7de), 0xc8);
        // CB C8 02E0
        gbc.setState(0x67c4, 0x5b75, 0xcc90, 0x6cd4, 0x1996, 0xa062, 0x0, 0x1);
        gbc.writeMem(0x67c4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5b75);
        EXPECT(gbc.pc(), 0x67c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02E1
        gbc.setState(0x833f, 0xe83, 0xa9d0, 0xb43, 0xac6e, 0x475d, 0x1, 0x1);
        gbc.writeMem(0x833f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe83);
        EXPECT(gbc.pc(), 0x8341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833f), 0xcb);
        EXPECT(gbc.readMem(0x8340), 0xc8);
        // CB C8 02E2
        gbc.setState(0x623e, 0xd062, 0xc710, 0x310d, 0x7386, 0xe0c1, 0x1, 0x0);
        gbc.writeMem(0x623e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd062);
        EXPECT(gbc.pc(), 0x6240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02E3
        gbc.setState(0x5637, 0xd7d6, 0xa370, 0xbd3a, 0x9041, 0xc063, 0x0, 0x1);
        gbc.writeMem(0x5637, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd7d6);
        EXPECT(gbc.pc(), 0x5639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02E4
        gbc.setState(0x5c9b, 0x3bf3, 0x590, 0x17d9, 0x7300, 0x4949, 0x0, 0x0);
        gbc.writeMem(0x5c9b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3bf3);
        EXPECT(gbc.pc(), 0x5c9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02E5
        gbc.setState(0x62c8, 0xe76a, 0x6d00, 0xfe35, 0x8301, 0xf925, 0x1, 0x0);
        gbc.writeMem(0x62c8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe76a);
        EXPECT(gbc.pc(), 0x62ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02E7
        gbc.setState(0x9567, 0xd79f, 0x7b0, 0x8edd, 0x1c52, 0x5cfe, 0x0, 0x0);
        gbc.writeMem(0x9567, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd79f);
        EXPECT(gbc.pc(), 0x9569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9567), 0xcb);
        EXPECT(gbc.readMem(0x9568), 0xc8);
        // CB C8 02E8
        gbc.setState(0x27c5, 0x1be1, 0xbe0, 0x5ec5, 0x600e, 0x52e9, 0x1, 0x0);
        gbc.writeMem(0x27c5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1be1);
        EXPECT(gbc.pc(), 0x27c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02E9
        gbc.setState(0xc02f, 0x216e, 0x9dc0, 0x5896, 0xd1d6, 0xd7ef, 0x0, 0x1);
        gbc.writeMem(0xc02f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x216e);
        EXPECT(gbc.pc(), 0xc031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02f), 0xcb);
        EXPECT(gbc.readMem(0xc030), 0xc8);
        // CB C8 02EA
        gbc.setState(0x59df, 0x2872, 0xc400, 0x191c, 0x9c3d, 0x7d31, 0x1, 0x0);
        gbc.writeMem(0x59df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2872);
        EXPECT(gbc.pc(), 0x59e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02EC
        gbc.setState(0x21f8, 0xd7f4, 0x9b0, 0xead9, 0xadc9, 0x5afc, 0x0, 0x0);
        gbc.writeMem(0x21f8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd7f4);
        EXPECT(gbc.pc(), 0x21fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02ED
        gbc.setState(0x44c0, 0x2db1, 0x5780, 0x52eb, 0xa2ef, 0xdf89, 0x1, 0x1);
        gbc.writeMem(0x44c0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2db1);
        EXPECT(gbc.pc(), 0x44c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02EE
        gbc.setState(0xeaff, 0xe177, 0x6d00, 0x8da8, 0x9c99, 0xfb5d, 0x1, 0x1);
        gbc.writeMem(0xeaff, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe177);
        EXPECT(gbc.pc(), 0xeb01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaff), 0xcb);
        EXPECT(gbc.readMem(0xeb00), 0xc8);
        // CB C8 02EF
        gbc.setState(0x8686, 0x915, 0xa840, 0xbfc5, 0xe5d8, 0xaacb, 0x1, 0x0);
        gbc.writeMem(0x8686, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x915);
        EXPECT(gbc.pc(), 0x8688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8686), 0xcb);
        EXPECT(gbc.readMem(0x8687), 0xc8);
        // CB C8 02F0
        gbc.setState(0x7429, 0x4d1a, 0xa170, 0x5030, 0x5e95, 0xf42d, 0x0, 0x0);
        gbc.writeMem(0x7429, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4d1a);
        EXPECT(gbc.pc(), 0x742b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02F1
        gbc.setState(0xb0c4, 0x547c, 0xe80, 0xe4e8, 0xb05d, 0xdeb3, 0x0, 0x0);
        gbc.writeMem(0xb0c4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x547c);
        EXPECT(gbc.pc(), 0xb0c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c4), 0xcb);
        EXPECT(gbc.readMem(0xb0c5), 0xc8);
        // CB C8 02F2
        gbc.setState(0xaa3, 0x6431, 0x5d50, 0xfc5e, 0xdac6, 0xc931, 0x1, 0x0);
        gbc.writeMem(0xaa3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6431);
        EXPECT(gbc.pc(), 0xaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02F3
        gbc.setState(0x4a9a, 0xa6f, 0xd1c0, 0x22e2, 0x201e, 0xd93e, 0x0, 0x1);
        gbc.writeMem(0x4a9a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa6f);
        EXPECT(gbc.pc(), 0x4a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02F4
        gbc.setState(0x759a, 0x1cc2, 0xf5d0, 0x2038, 0x3cf0, 0xaa22, 0x1, 0x0);
        gbc.writeMem(0x759a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1cc2);
        EXPECT(gbc.pc(), 0x759c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02F5
        gbc.setState(0xc3ca, 0xaa94, 0x96e0, 0x8803, 0x8a8d, 0xccbf, 0x0, 0x0);
        gbc.writeMem(0xc3ca, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xaa94);
        EXPECT(gbc.pc(), 0xc3cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ca), 0xcb);
        EXPECT(gbc.readMem(0xc3cb), 0xc8);
        // CB C8 02F6
        gbc.setState(0xca25, 0xf73f, 0xcda0, 0x4db2, 0x2e95, 0x68e7, 0x1, 0x1);
        gbc.writeMem(0xca25, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf73f);
        EXPECT(gbc.pc(), 0xca27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca25), 0xcb);
        EXPECT(gbc.readMem(0xca26), 0xc8);
        // CB C8 02F7
        gbc.setState(0x6803, 0x6d6c, 0x3840, 0xd7f3, 0x2b14, 0x4e00, 0x1, 0x0);
        gbc.writeMem(0x6803, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6d6c);
        EXPECT(gbc.pc(), 0x6805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02F8
        gbc.setState(0x5c03, 0xd291, 0x8eb0, 0xba8b, 0x1c74, 0xc0aa, 0x1, 0x0);
        gbc.writeMem(0x5c03, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd291);
        EXPECT(gbc.pc(), 0x5c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02F9
        gbc.setState(0x99df, 0xe2de, 0xe5c0, 0xb6e3, 0xf3aa, 0xca32, 0x1, 0x1);
        gbc.writeMem(0x99df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe2de);
        EXPECT(gbc.pc(), 0x99e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99df), 0xcb);
        EXPECT(gbc.readMem(0x99e0), 0xc8);
        // CB C8 02FA
        gbc.setState(0x9240, 0xf326, 0x5980, 0x33c2, 0xb852, 0x5392, 0x1, 0x1);
        gbc.writeMem(0x9240, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf326);
        EXPECT(gbc.pc(), 0x9242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9240), 0xcb);
        EXPECT(gbc.readMem(0x9241), 0xc8);
        // CB C8 02FB
        gbc.setState(0x5b54, 0x1577, 0x2b80, 0x420, 0x993b, 0x2cec, 0x0, 0x0);
        gbc.writeMem(0x5b54, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1577);
        EXPECT(gbc.pc(), 0x5b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02FC
        gbc.setState(0x3438, 0xb5a3, 0x4e0, 0xbbcb, 0xef63, 0x65d9, 0x1, 0x0);
        gbc.writeMem(0x3438, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb5a3);
        EXPECT(gbc.pc(), 0x343a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 02FD
        gbc.setState(0x2fb8, 0xc78a, 0x29d0, 0xbfc3, 0xdb64, 0x9880, 0x1, 0x0);
        gbc.writeMem(0x2fb8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc78a);
        EXPECT(gbc.pc(), 0x2fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 02FE
        gbc.setState(0x80e4, 0x8dca, 0xc250, 0x5359, 0x6e8f, 0xf955, 0x0, 0x0);
        gbc.writeMem(0x80e4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8dca);
        EXPECT(gbc.pc(), 0x80e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e4), 0xcb);
        EXPECT(gbc.readMem(0x80e5), 0xc8);
        // CB C8 02FF
        gbc.setState(0x427e, 0xc27c, 0x8dc0, 0x7f60, 0x306, 0x148, 0x0, 0x0);
        gbc.writeMem(0x427e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc27c);
        EXPECT(gbc.pc(), 0x4280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0300
        gbc.setState(0x14b2, 0xc473, 0xbef0, 0x23cb, 0xf4d4, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0x14b2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc473);
        EXPECT(gbc.pc(), 0x14b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0301
        gbc.setState(0x36a5, 0x8236, 0xa9e0, 0xe1ec, 0x5db2, 0x112, 0x0, 0x1);
        gbc.writeMem(0x36a5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8236);
        EXPECT(gbc.pc(), 0x36a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0302
        gbc.setState(0x81e8, 0x8c84, 0x6b30, 0xa54f, 0x7f71, 0x57e2, 0x0, 0x1);
        gbc.writeMem(0x81e8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8c84);
        EXPECT(gbc.pc(), 0x81ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e8), 0xcb);
        EXPECT(gbc.readMem(0x81e9), 0xc8);
        // CB C8 0303
        gbc.setState(0x943d, 0x4a12, 0x3760, 0xcb1a, 0x9824, 0xb90b, 0x1, 0x1);
        gbc.writeMem(0x943d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4a12);
        EXPECT(gbc.pc(), 0x943f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943d), 0xcb);
        EXPECT(gbc.readMem(0x943e), 0xc8);
        // CB C8 0304
        gbc.setState(0x1df3, 0xf291, 0xbbc0, 0xb279, 0xef22, 0x60ae, 0x1, 0x1);
        gbc.writeMem(0x1df3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf291);
        EXPECT(gbc.pc(), 0x1df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0305
        gbc.setState(0x1b45, 0x2851, 0x8110, 0xfa24, 0xe597, 0x79e1, 0x0, 0x1);
        gbc.writeMem(0x1b45, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2851);
        EXPECT(gbc.pc(), 0x1b47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0306
        gbc.setState(0x9fca, 0x9f59, 0xbfa0, 0x7d6d, 0x1259, 0xac4a, 0x1, 0x1);
        gbc.writeMem(0x9fca, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9f59);
        EXPECT(gbc.pc(), 0x9fcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fca), 0xcb);
        EXPECT(gbc.readMem(0x9fcb), 0xc8);
        // CB C8 0307
        gbc.setState(0x1514, 0x112a, 0x5d40, 0x2e67, 0xe2ec, 0x3e84, 0x1, 0x0);
        gbc.writeMem(0x1514, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x112a);
        EXPECT(gbc.pc(), 0x1516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0308
        gbc.setState(0x2ab7, 0x2f9d, 0x6110, 0x3746, 0x7652, 0x3161, 0x1, 0x1);
        gbc.writeMem(0x2ab7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2f9d);
        EXPECT(gbc.pc(), 0x2ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0309
        gbc.setState(0xd2ec, 0xe8c8, 0x1400, 0xf02e, 0x8866, 0xb175, 0x1, 0x0);
        gbc.writeMem(0xd2ec, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe8c8);
        EXPECT(gbc.pc(), 0xd2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ec), 0xcb);
        EXPECT(gbc.readMem(0xd2ed), 0xc8);
        // CB C8 030A
        gbc.setState(0x2686, 0x58e1, 0x4960, 0x234b, 0xbbbc, 0x2371, 0x1, 0x1);
        gbc.writeMem(0x2686, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x58e1);
        EXPECT(gbc.pc(), 0x2688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 030B
        gbc.setState(0xc4b8, 0x5df8, 0x4640, 0x20e3, 0x1e7f, 0x62bb, 0x0, 0x0);
        gbc.writeMem(0xc4b8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5df8);
        EXPECT(gbc.pc(), 0xc4ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b8), 0xcb);
        EXPECT(gbc.readMem(0xc4b9), 0xc8);
        // CB C8 030C
        gbc.setState(0x16a6, 0xe7c5, 0xe770, 0x3b6f, 0x10a8, 0x87d2, 0x1, 0x0);
        gbc.writeMem(0x16a6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe7c5);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 030D
        gbc.setState(0x7c83, 0x9e04, 0x2e10, 0x3a6f, 0x7265, 0xbc52, 0x1, 0x1);
        gbc.writeMem(0x7c83, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9e04);
        EXPECT(gbc.pc(), 0x7c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 030E
        gbc.setState(0xea24, 0xb2d5, 0x88e0, 0x1abc, 0x6ea0, 0x5374, 0x1, 0x0);
        gbc.writeMem(0xea24, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb2d5);
        EXPECT(gbc.pc(), 0xea26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea24), 0xcb);
        EXPECT(gbc.readMem(0xea25), 0xc8);
        // CB C8 030F
        gbc.setState(0x980b, 0xf7dd, 0x3b30, 0xdb9f, 0x2cd2, 0x33af, 0x0, 0x0);
        gbc.writeMem(0x980b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf7dd);
        EXPECT(gbc.pc(), 0x980d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980b), 0xcb);
        EXPECT(gbc.readMem(0x980c), 0xc8);
        // CB C8 0310
        gbc.setState(0xcefe, 0xa5a2, 0x73e0, 0xfbca, 0x55fb, 0xe35, 0x0, 0x0);
        gbc.writeMem(0xcefe, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa5a2);
        EXPECT(gbc.pc(), 0xcf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefe), 0xcb);
        EXPECT(gbc.readMem(0xceff), 0xc8);
        // CB C8 0311
        gbc.setState(0x1d51, 0x46b0, 0xb7d0, 0xa44d, 0x392f, 0x6b65, 0x0, 0x1);
        gbc.writeMem(0x1d51, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x46b0);
        EXPECT(gbc.pc(), 0x1d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0312
        gbc.setState(0xc8cf, 0xdb53, 0xf160, 0xf4c0, 0x36bd, 0x9140, 0x1, 0x1);
        gbc.writeMem(0xc8cf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdb53);
        EXPECT(gbc.pc(), 0xc8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8cf), 0xcb);
        EXPECT(gbc.readMem(0xc8d0), 0xc8);
        // CB C8 0313
        gbc.setState(0x290a, 0xb929, 0x1ff0, 0x542a, 0xd05, 0x9208, 0x1, 0x0);
        gbc.writeMem(0x290a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb929);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0315
        gbc.setState(0xe963, 0x93cb, 0x5340, 0x40, 0x7e5c, 0x81b9, 0x0, 0x0);
        gbc.writeMem(0xe963, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x93cb);
        EXPECT(gbc.pc(), 0xe965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe963), 0xcb);
        EXPECT(gbc.readMem(0xe964), 0xc8);
        // CB C8 0316
        gbc.setState(0x3c7e, 0xd506, 0xfd60, 0xff6d, 0x438, 0xe015, 0x1, 0x1);
        gbc.writeMem(0x3c7e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd506);
        EXPECT(gbc.pc(), 0x3c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0317
        gbc.setState(0x96cc, 0x986a, 0x1920, 0x45b2, 0xa930, 0xdb39, 0x1, 0x0);
        gbc.writeMem(0x96cc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x986a);
        EXPECT(gbc.pc(), 0x96ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cc), 0xcb);
        EXPECT(gbc.readMem(0x96cd), 0xc8);
        // CB C8 0318
        gbc.setState(0x8ea7, 0x70c5, 0x5130, 0xa053, 0x65b6, 0x345, 0x1, 0x0);
        gbc.writeMem(0x8ea7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x70c5);
        EXPECT(gbc.pc(), 0x8ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea7), 0xcb);
        EXPECT(gbc.readMem(0x8ea8), 0xc8);
        // CB C8 0319
        gbc.setState(0x7b, 0x6fa9, 0x3a60, 0xa369, 0x4306, 0x5607, 0x1, 0x0);
        gbc.writeMem(0x7b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6fa9);
        EXPECT(gbc.pc(), 0x7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 031A
        gbc.setState(0x5708, 0x665, 0xb4c0, 0x82ac, 0xff5f, 0x3efc, 0x1, 0x1);
        gbc.writeMem(0x5708, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x665);
        EXPECT(gbc.pc(), 0x570a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 031B
        gbc.setState(0x2eea, 0xbdbe, 0x210, 0x6143, 0xb201, 0xec1f, 0x1, 0x1);
        gbc.writeMem(0x2eea, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbdbe);
        EXPECT(gbc.pc(), 0x2eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 031C
        gbc.setState(0x3074, 0x1c97, 0x2a90, 0xfd9f, 0x28bc, 0x7f59, 0x1, 0x1);
        gbc.writeMem(0x3074, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1c97);
        EXPECT(gbc.pc(), 0x3076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 031D
        gbc.setState(0xa329, 0x7f13, 0xff0, 0x4c95, 0x2262, 0xf815, 0x1, 0x1);
        gbc.writeMem(0xa329, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7f13);
        EXPECT(gbc.pc(), 0xa32b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa329), 0xcb);
        EXPECT(gbc.readMem(0xa32a), 0xc8);
        // CB C8 031E
        gbc.setState(0x7ccd, 0xcd79, 0xf270, 0x9de6, 0xc5c3, 0x85a6, 0x0, 0x0);
        gbc.writeMem(0x7ccd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcd79);
        EXPECT(gbc.pc(), 0x7ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 031F
        gbc.setState(0x49ed, 0xd38a, 0xbc90, 0xb901, 0x3730, 0x78e0, 0x1, 0x1);
        gbc.writeMem(0x49ed, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd38a);
        EXPECT(gbc.pc(), 0x49ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0322
        gbc.setState(0x5237, 0x2c2, 0x5930, 0x270c, 0xe589, 0x2391, 0x0, 0x1);
        gbc.writeMem(0x5237, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2c2);
        EXPECT(gbc.pc(), 0x5239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0323
        gbc.setState(0xa916, 0xdcb6, 0x3a30, 0x66e, 0x622b, 0x31c8, 0x0, 0x1);
        gbc.writeMem(0xa916, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdcb6);
        EXPECT(gbc.pc(), 0xa918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa916), 0xcb);
        EXPECT(gbc.readMem(0xa917), 0xc8);
        // CB C8 0324
        gbc.setState(0x312d, 0x4cc3, 0x7bf0, 0x1385, 0xd87a, 0x1206, 0x0, 0x1);
        gbc.writeMem(0x312d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4cc3);
        EXPECT(gbc.pc(), 0x312f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0325
        gbc.setState(0x4afc, 0xd212, 0xb360, 0x193d, 0xe072, 0x6e14, 0x0, 0x1);
        gbc.writeMem(0x4afc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd212);
        EXPECT(gbc.pc(), 0x4afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0326
        gbc.setState(0x5b5b, 0x31dc, 0xdd90, 0x8b3d, 0xe3bd, 0xc63f, 0x1, 0x1);
        gbc.writeMem(0x5b5b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x31dc);
        EXPECT(gbc.pc(), 0x5b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0327
        gbc.setState(0xd4e6, 0xbfa6, 0x3190, 0x4470, 0x7021, 0xf424, 0x1, 0x0);
        gbc.writeMem(0xd4e6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbfa6);
        EXPECT(gbc.pc(), 0xd4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e6), 0xcb);
        EXPECT(gbc.readMem(0xd4e7), 0xc8);
        // CB C8 0328
        gbc.setState(0x8302, 0x3da5, 0x5260, 0xdd4d, 0xaf7a, 0xdcaf, 0x1, 0x0);
        gbc.writeMem(0x8302, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3da5);
        EXPECT(gbc.pc(), 0x8304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8302), 0xcb);
        EXPECT(gbc.readMem(0x8303), 0xc8);
        // CB C8 032A
        gbc.setState(0x916, 0x486d, 0xdd50, 0xa8bc, 0x2903, 0xdfbe, 0x1, 0x0);
        gbc.writeMem(0x916, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x486d);
        EXPECT(gbc.pc(), 0x918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 032B
        gbc.setState(0xe7a2, 0xc2c0, 0xb5f0, 0x4cab, 0x1831, 0x18c0, 0x1, 0x1);
        gbc.writeMem(0xe7a2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc2c0);
        EXPECT(gbc.pc(), 0xe7a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7a2), 0xcb);
        EXPECT(gbc.readMem(0xe7a3), 0xc8);
        // CB C8 032C
        gbc.setState(0xdb8f, 0xc336, 0x5400, 0xaf13, 0xf327, 0x3722, 0x1, 0x1);
        gbc.writeMem(0xdb8f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc336);
        EXPECT(gbc.pc(), 0xdb91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8f), 0xcb);
        EXPECT(gbc.readMem(0xdb90), 0xc8);
        // CB C8 032D
        gbc.setState(0x36dc, 0xd356, 0xa7a0, 0xf377, 0x4524, 0xc32c, 0x0, 0x0);
        gbc.writeMem(0x36dc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd356);
        EXPECT(gbc.pc(), 0x36de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 032E
        gbc.setState(0x7d28, 0xdac6, 0x4250, 0x6d47, 0x3f34, 0x88f0, 0x1, 0x1);
        gbc.writeMem(0x7d28, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdac6);
        EXPECT(gbc.pc(), 0x7d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 032F
        gbc.setState(0x9844, 0xe48a, 0x9f20, 0xd0b7, 0xcd22, 0x113a, 0x1, 0x0);
        gbc.writeMem(0x9844, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe48a);
        EXPECT(gbc.pc(), 0x9846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9844), 0xcb);
        EXPECT(gbc.readMem(0x9845), 0xc8);
        // CB C8 0330
        gbc.setState(0x8ce9, 0x5793, 0x1ea0, 0x338a, 0xd9b6, 0x5ece, 0x1, 0x1);
        gbc.writeMem(0x8ce9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5793);
        EXPECT(gbc.pc(), 0x8ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce9), 0xcb);
        EXPECT(gbc.readMem(0x8cea), 0xc8);
        // CB C8 0331
        gbc.setState(0x5d1a, 0x6df4, 0x5240, 0xbe0f, 0x657b, 0x6dc, 0x0, 0x0);
        gbc.writeMem(0x5d1a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6df4);
        EXPECT(gbc.pc(), 0x5d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0332
        gbc.setState(0x5e2b, 0x390a, 0x69f0, 0x5a29, 0xfa01, 0x8e62, 0x1, 0x0);
        gbc.writeMem(0x5e2b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x390a);
        EXPECT(gbc.pc(), 0x5e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0333
        gbc.setState(0x2bfe, 0xf02e, 0xa4d0, 0xfbc8, 0x83a3, 0x6d37, 0x1, 0x1);
        gbc.writeMem(0x2bfe, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf02e);
        EXPECT(gbc.pc(), 0x2c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0336
        gbc.setState(0xce49, 0x1628, 0x6f50, 0x212f, 0xb6a3, 0x7f37, 0x0, 0x1);
        gbc.writeMem(0xce49, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1628);
        EXPECT(gbc.pc(), 0xce4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce49), 0xcb);
        EXPECT(gbc.readMem(0xce4a), 0xc8);
        // CB C8 0337
        gbc.setState(0x335a, 0x419b, 0xe910, 0x602c, 0x8bd5, 0xfcc6, 0x0, 0x1);
        gbc.writeMem(0x335a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x419b);
        EXPECT(gbc.pc(), 0x335c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0338
        gbc.setState(0x2835, 0xdf11, 0xfc70, 0xa5e8, 0x539a, 0x9950, 0x0, 0x1);
        gbc.writeMem(0x2835, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdf11);
        EXPECT(gbc.pc(), 0x2837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0339
        gbc.setState(0x4022, 0x9b68, 0xd310, 0xe8a1, 0x36b8, 0xa83f, 0x1, 0x1);
        gbc.writeMem(0x4022, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9b68);
        EXPECT(gbc.pc(), 0x4024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 033B
        gbc.setState(0xd30d, 0xe426, 0x23b0, 0xd286, 0x340e, 0xd899, 0x0, 0x1);
        gbc.writeMem(0xd30d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe426);
        EXPECT(gbc.pc(), 0xd30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30d), 0xcb);
        EXPECT(gbc.readMem(0xd30e), 0xc8);
        // CB C8 033C
        gbc.setState(0xc0cd, 0xe6a1, 0x1a90, 0x1cee, 0xbcbe, 0xa9f0, 0x0, 0x1);
        gbc.writeMem(0xc0cd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe6a1);
        EXPECT(gbc.pc(), 0xc0cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0cd), 0xcb);
        EXPECT(gbc.readMem(0xc0ce), 0xc8);
        // CB C8 033D
        gbc.setState(0xc4ee, 0xa1c1, 0x2880, 0x3d2b, 0xbf8c, 0x4053, 0x0, 0x0);
        gbc.writeMem(0xc4ee, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa1c1);
        EXPECT(gbc.pc(), 0xc4f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ee), 0xcb);
        EXPECT(gbc.readMem(0xc4ef), 0xc8);
        // CB C8 033E
        gbc.setState(0x3275, 0xf05c, 0x6740, 0x8d28, 0x1c55, 0xdbbb, 0x1, 0x0);
        gbc.writeMem(0x3275, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf05c);
        EXPECT(gbc.pc(), 0x3277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 033F
        gbc.setState(0x963e, 0x38a1, 0xaf10, 0xb8e7, 0x91a1, 0x1914, 0x1, 0x0);
        gbc.writeMem(0x963e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x38a1);
        EXPECT(gbc.pc(), 0x9640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963e), 0xcb);
        EXPECT(gbc.readMem(0x963f), 0xc8);
        // CB C8 0340
        gbc.setState(0xa297, 0x15f9, 0x4110, 0xe897, 0x628e, 0xf133, 0x0, 0x0);
        gbc.writeMem(0xa297, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x15f9);
        EXPECT(gbc.pc(), 0xa299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa297), 0xcb);
        EXPECT(gbc.readMem(0xa298), 0xc8);
        // CB C8 0341
        gbc.setState(0x284f, 0x6b9d, 0x9c20, 0x6099, 0xb195, 0x8062, 0x0, 0x0);
        gbc.writeMem(0x284f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6b9d);
        EXPECT(gbc.pc(), 0x2851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0342
        gbc.setState(0xe555, 0x12c2, 0x160, 0xe3d5, 0xc7d1, 0x5e92, 0x1, 0x1);
        gbc.writeMem(0xe555, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x12c2);
        EXPECT(gbc.pc(), 0xe557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe555), 0xcb);
        EXPECT(gbc.readMem(0xe556), 0xc8);
        // CB C8 0343
        gbc.setState(0x661e, 0x1a01, 0x5c30, 0x5ddb, 0x4dba, 0xb877, 0x0, 0x0);
        gbc.writeMem(0x661e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1a01);
        EXPECT(gbc.pc(), 0x6620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0344
        gbc.setState(0x41ea, 0x3f75, 0x1330, 0xa841, 0x9ccd, 0xfcf6, 0x1, 0x1);
        gbc.writeMem(0x41ea, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3f75);
        EXPECT(gbc.pc(), 0x41ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0345
        gbc.setState(0x7e13, 0xf0e, 0xd770, 0xaee6, 0x6202, 0x300d, 0x1, 0x1);
        gbc.writeMem(0x7e13, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf0e);
        EXPECT(gbc.pc(), 0x7e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0346
        gbc.setState(0x8de, 0x5f1b, 0x1750, 0xc31f, 0x3047, 0xb5db, 0x1, 0x0);
        gbc.writeMem(0x8de, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5f1b);
        EXPECT(gbc.pc(), 0x8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0347
        gbc.setState(0xa024, 0xeeff, 0xc380, 0x9873, 0xb723, 0x6e17, 0x1, 0x1);
        gbc.writeMem(0xa024, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xeeff);
        EXPECT(gbc.pc(), 0xa026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa024), 0xcb);
        EXPECT(gbc.readMem(0xa025), 0xc8);
        // CB C8 0348
        gbc.setState(0x3e02, 0xcb02, 0x5f90, 0x7015, 0xd9c4, 0x4f11, 0x0, 0x1);
        gbc.writeMem(0x3e02, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcb02);
        EXPECT(gbc.pc(), 0x3e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0349
        gbc.setState(0x3785, 0xe6f3, 0x1e20, 0xc92, 0x1b1f, 0x18df, 0x1, 0x1);
        gbc.writeMem(0x3785, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe6f3);
        EXPECT(gbc.pc(), 0x3787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 034A
        gbc.setState(0xc4fa, 0x6629, 0xa910, 0x3d57, 0xdd20, 0x27af, 0x0, 0x1);
        gbc.writeMem(0xc4fa, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6629);
        EXPECT(gbc.pc(), 0xc4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4fa), 0xcb);
        EXPECT(gbc.readMem(0xc4fb), 0xc8);
        // CB C8 034B
        gbc.setState(0xa493, 0xa3e0, 0x82e0, 0xfefe, 0xc973, 0xe643, 0x1, 0x0);
        gbc.writeMem(0xa493, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa3e0);
        EXPECT(gbc.pc(), 0xa495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa493), 0xcb);
        EXPECT(gbc.readMem(0xa494), 0xc8);
        // CB C8 034C
        gbc.setState(0xe381, 0x2d43, 0x5980, 0xcf12, 0xbdcf, 0x3d9d, 0x0, 0x0);
        gbc.writeMem(0xe381, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2d43);
        EXPECT(gbc.pc(), 0xe383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe381), 0xcb);
        EXPECT(gbc.readMem(0xe382), 0xc8);
        // CB C8 034E
        gbc.setState(0x833, 0xa67b, 0xca70, 0xe9a4, 0x9d0a, 0x3798, 0x1, 0x1);
        gbc.writeMem(0x833, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa67b);
        EXPECT(gbc.pc(), 0x835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 034F
        gbc.setState(0x443b, 0x9b0b, 0x3810, 0x9673, 0x8d64, 0x1900, 0x1, 0x1);
        gbc.writeMem(0x443b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9b0b);
        EXPECT(gbc.pc(), 0x443d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0350
        gbc.setState(0x52b7, 0x3b34, 0xd250, 0x37ce, 0x418c, 0x6cef, 0x1, 0x1);
        gbc.writeMem(0x52b7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3b34);
        EXPECT(gbc.pc(), 0x52b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0351
        gbc.setState(0xc96e, 0x82c8, 0xb650, 0x9503, 0xd9a7, 0xf334, 0x0, 0x0);
        gbc.writeMem(0xc96e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x82c8);
        EXPECT(gbc.pc(), 0xc970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96e), 0xcb);
        EXPECT(gbc.readMem(0xc96f), 0xc8);
        // CB C8 0352
        gbc.setState(0x4ffb, 0x320e, 0x2990, 0x2e6c, 0xb634, 0xe320, 0x1, 0x0);
        gbc.writeMem(0x4ffb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x320e);
        EXPECT(gbc.pc(), 0x4ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0353
        gbc.setState(0x447d, 0xfeaa, 0x3da0, 0xd2b6, 0x477c, 0x6d25, 0x0, 0x1);
        gbc.writeMem(0x447d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfeaa);
        EXPECT(gbc.pc(), 0x447f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0354
        gbc.setState(0x17a5, 0xca7c, 0x1880, 0x564e, 0xcad4, 0xb214, 0x1, 0x0);
        gbc.writeMem(0x17a5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xca7c);
        EXPECT(gbc.pc(), 0x17a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0355
        gbc.setState(0x8bbd, 0xfe2d, 0x26b0, 0xd61, 0x4e34, 0x66af, 0x0, 0x0);
        gbc.writeMem(0x8bbd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfe2d);
        EXPECT(gbc.pc(), 0x8bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bbd), 0xcb);
        EXPECT(gbc.readMem(0x8bbe), 0xc8);
        // CB C8 0356
        gbc.setState(0x265f, 0xa5c8, 0xe600, 0x47c0, 0xb333, 0x6a33, 0x0, 0x1);
        gbc.writeMem(0x265f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa5c8);
        EXPECT(gbc.pc(), 0x2661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0357
        gbc.setState(0x7241, 0x377c, 0x65c0, 0x543c, 0xd950, 0x8e85, 0x1, 0x1);
        gbc.writeMem(0x7241, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x377c);
        EXPECT(gbc.pc(), 0x7243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0358
        gbc.setState(0x8426, 0x2ea0, 0xdb50, 0x5bbe, 0xbcf4, 0xe363, 0x0, 0x0);
        gbc.writeMem(0x8426, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2ea0);
        EXPECT(gbc.pc(), 0x8428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8426), 0xcb);
        EXPECT(gbc.readMem(0x8427), 0xc8);
        // CB C8 0359
        gbc.setState(0x1596, 0x9a48, 0xc7c0, 0x4bc, 0x5e33, 0x175b, 0x1, 0x1);
        gbc.writeMem(0x1596, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9a48);
        EXPECT(gbc.pc(), 0x1598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 035A
        gbc.setState(0x63fb, 0x587b, 0xd580, 0xfc43, 0x3f86, 0x353b, 0x1, 0x0);
        gbc.writeMem(0x63fb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x587b);
        EXPECT(gbc.pc(), 0x63fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 035B
        gbc.setState(0x567a, 0x7c25, 0xbb10, 0xb1a0, 0x62ff, 0x37b4, 0x0, 0x0);
        gbc.writeMem(0x567a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7c25);
        EXPECT(gbc.pc(), 0x567c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 035C
        gbc.setState(0x9bc8, 0x281f, 0xf630, 0xc2d0, 0x8fd0, 0x8274, 0x1, 0x1);
        gbc.writeMem(0x9bc8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x281f);
        EXPECT(gbc.pc(), 0x9bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc8), 0xcb);
        EXPECT(gbc.readMem(0x9bc9), 0xc8);
        // CB C8 035D
        gbc.setState(0xdf3b, 0xf7ba, 0xc210, 0x179e, 0xf5b0, 0xcd57, 0x1, 0x1);
        gbc.writeMem(0xdf3b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf7ba);
        EXPECT(gbc.pc(), 0xdf3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3b), 0xcb);
        EXPECT(gbc.readMem(0xdf3c), 0xc8);
        // CB C8 035E
        gbc.setState(0x4164, 0x33de, 0xb660, 0xa1fc, 0x8293, 0x618f, 0x0, 0x0);
        gbc.writeMem(0x4164, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x33de);
        EXPECT(gbc.pc(), 0x4166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 035F
        gbc.setState(0x9e49, 0x6990, 0x7e50, 0xf43c, 0xbf7f, 0x9eff, 0x1, 0x1);
        gbc.writeMem(0x9e49, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6990);
        EXPECT(gbc.pc(), 0x9e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e49), 0xcb);
        EXPECT(gbc.readMem(0x9e4a), 0xc8);
        // CB C8 0361
        gbc.setState(0xdfcc, 0xeec3, 0xf90, 0x829d, 0xaa8f, 0x85f4, 0x1, 0x0);
        gbc.writeMem(0xdfcc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xeec3);
        EXPECT(gbc.pc(), 0xdfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcc), 0xcb);
        EXPECT(gbc.readMem(0xdfcd), 0xc8);
        // CB C8 0362
        gbc.setState(0x57c0, 0x8df0, 0x8f0, 0x9026, 0x9206, 0xc74d, 0x0, 0x1);
        gbc.writeMem(0x57c0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8df0);
        EXPECT(gbc.pc(), 0x57c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0363
        gbc.setState(0x1288, 0xfb32, 0xc5f0, 0x2713, 0x82cf, 0xc4d9, 0x0, 0x1);
        gbc.writeMem(0x1288, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfb32);
        EXPECT(gbc.pc(), 0x128a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0364
        gbc.setState(0x85cd, 0xcf94, 0xbee0, 0x179b, 0xeb02, 0xd439, 0x1, 0x1);
        gbc.writeMem(0x85cd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcf94);
        EXPECT(gbc.pc(), 0x85cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cd), 0xcb);
        EXPECT(gbc.readMem(0x85ce), 0xc8);
        // CB C8 0365
        gbc.setState(0xb949, 0x364c, 0xabe0, 0xa8df, 0x8452, 0xdea, 0x0, 0x1);
        gbc.writeMem(0xb949, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x364c);
        EXPECT(gbc.pc(), 0xb94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb949), 0xcb);
        EXPECT(gbc.readMem(0xb94a), 0xc8);
        // CB C8 0366
        gbc.setState(0xba11, 0x2f40, 0x5ec0, 0x80bd, 0xa66d, 0xc740, 0x1, 0x1);
        gbc.writeMem(0xba11, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2f40);
        EXPECT(gbc.pc(), 0xba13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba11), 0xcb);
        EXPECT(gbc.readMem(0xba12), 0xc8);
        // CB C8 0367
        gbc.setState(0x6e47, 0x7c19, 0x93e0, 0x93c8, 0x49e, 0xa311, 0x0, 0x1);
        gbc.writeMem(0x6e47, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7c19);
        EXPECT(gbc.pc(), 0x6e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0368
        gbc.setState(0x86c2, 0x266d, 0xd120, 0x933, 0x9d4f, 0x2f85, 0x0, 0x1);
        gbc.writeMem(0x86c2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x266d);
        EXPECT(gbc.pc(), 0x86c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c2), 0xcb);
        EXPECT(gbc.readMem(0x86c3), 0xc8);
        // CB C8 0369
        gbc.setState(0xb31d, 0x362c, 0xd910, 0x284a, 0x6e7a, 0x8a6e, 0x1, 0x1);
        gbc.writeMem(0xb31d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x362c);
        EXPECT(gbc.pc(), 0xb31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31d), 0xcb);
        EXPECT(gbc.readMem(0xb31e), 0xc8);
        // CB C8 036B
        gbc.setState(0x26e0, 0x16e0, 0x5300, 0x27cd, 0x6797, 0x60bc, 0x0, 0x1);
        gbc.writeMem(0x26e0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x16e0);
        EXPECT(gbc.pc(), 0x26e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 036C
        gbc.setState(0xece7, 0xfd7b, 0x8dc0, 0xbf10, 0xed7a, 0x8130, 0x1, 0x1);
        gbc.writeMem(0xece7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfd7b);
        EXPECT(gbc.pc(), 0xece9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece7), 0xcb);
        EXPECT(gbc.readMem(0xece8), 0xc8);
        // CB C8 036D
        gbc.setState(0x6e99, 0xeb78, 0x35f0, 0x6b58, 0x40e2, 0x61b3, 0x1, 0x0);
        gbc.writeMem(0x6e99, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xeb78);
        EXPECT(gbc.pc(), 0x6e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 036E
        gbc.setState(0x9751, 0x86d6, 0xdaa0, 0xb022, 0x5fa9, 0x58dd, 0x1, 0x1);
        gbc.writeMem(0x9751, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x86d6);
        EXPECT(gbc.pc(), 0x9753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9751), 0xcb);
        EXPECT(gbc.readMem(0x9752), 0xc8);
        // CB C8 036F
        gbc.setState(0x1b1b, 0xbbe9, 0xf930, 0x8ab8, 0xd493, 0x87f8, 0x0, 0x1);
        gbc.writeMem(0x1b1b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbbe9);
        EXPECT(gbc.pc(), 0x1b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0370
        gbc.setState(0x43ad, 0xe2b4, 0xa5f0, 0xda79, 0xdcc6, 0x3e48, 0x1, 0x1);
        gbc.writeMem(0x43ad, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe2b4);
        EXPECT(gbc.pc(), 0x43af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0371
        gbc.setState(0x321a, 0xe06f, 0x3590, 0xf3e9, 0x77f9, 0x4606, 0x0, 0x1);
        gbc.writeMem(0x321a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe06f);
        EXPECT(gbc.pc(), 0x321c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0372
        gbc.setState(0x7218, 0xc3d1, 0x8e90, 0x3ce9, 0x4596, 0x90b, 0x1, 0x0);
        gbc.writeMem(0x7218, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc3d1);
        EXPECT(gbc.pc(), 0x721a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0373
        gbc.setState(0x458c, 0x1ed7, 0x93a0, 0xdf25, 0x4f8b, 0x1d96, 0x0, 0x0);
        gbc.writeMem(0x458c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1ed7);
        EXPECT(gbc.pc(), 0x458e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0374
        gbc.setState(0x2e82, 0x498b, 0x7630, 0xe11a, 0xf325, 0x1ff4, 0x1, 0x1);
        gbc.writeMem(0x2e82, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x498b);
        EXPECT(gbc.pc(), 0x2e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0375
        gbc.setState(0x669d, 0xf2d5, 0x250, 0xe97f, 0x2df, 0x8932, 0x1, 0x1);
        gbc.writeMem(0x669d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf2d5);
        EXPECT(gbc.pc(), 0x669f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0376
        gbc.setState(0x4243, 0x1b01, 0x7d10, 0xf2d, 0x6c13, 0x19e0, 0x1, 0x0);
        gbc.writeMem(0x4243, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1b01);
        EXPECT(gbc.pc(), 0x4245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0377
        gbc.setState(0x89df, 0x6b6, 0x8500, 0x4211, 0xc46e, 0xf802, 0x1, 0x1);
        gbc.writeMem(0x89df, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6b6);
        EXPECT(gbc.pc(), 0x89e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89df), 0xcb);
        EXPECT(gbc.readMem(0x89e0), 0xc8);
        // CB C8 0378
        gbc.setState(0xdea5, 0xb16a, 0x8ea0, 0xecbd, 0xcbfc, 0x7317, 0x0, 0x0);
        gbc.writeMem(0xdea5, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb16a);
        EXPECT(gbc.pc(), 0xdea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea5), 0xcb);
        EXPECT(gbc.readMem(0xdea6), 0xc8);
        // CB C8 0379
        gbc.setState(0x796b, 0x333d, 0x78c0, 0x2f5b, 0xea89, 0x9ab6, 0x1, 0x1);
        gbc.writeMem(0x796b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x333d);
        EXPECT(gbc.pc(), 0x796d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 037A
        gbc.setState(0x143e, 0xf71d, 0x43c0, 0xefca, 0xe4d, 0x8ef7, 0x0, 0x0);
        gbc.writeMem(0x143e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf71d);
        EXPECT(gbc.pc(), 0x1440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 037B
        gbc.setState(0x95e6, 0xb870, 0xacc0, 0x597d, 0x3f0a, 0xcbe, 0x1, 0x0);
        gbc.writeMem(0x95e6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb870);
        EXPECT(gbc.pc(), 0x95e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e6), 0xcb);
        EXPECT(gbc.readMem(0x95e7), 0xc8);
        // CB C8 037C
        gbc.setState(0xe6b3, 0x502c, 0xa0e0, 0x562c, 0x6785, 0xd7fd, 0x1, 0x1);
        gbc.writeMem(0xe6b3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x502c);
        EXPECT(gbc.pc(), 0xe6b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b3), 0xcb);
        EXPECT(gbc.readMem(0xe6b4), 0xc8);
        // CB C8 037D
        gbc.setState(0x51e2, 0x45b5, 0x7e00, 0xee52, 0xc2a2, 0xb810, 0x0, 0x0);
        gbc.writeMem(0x51e2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x45b5);
        EXPECT(gbc.pc(), 0x51e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 037E
        gbc.setState(0xc88a, 0xa13e, 0x6b90, 0x3f3e, 0xa44d, 0xe93d, 0x1, 0x1);
        gbc.writeMem(0xc88a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa13e);
        EXPECT(gbc.pc(), 0xc88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc88a), 0xcb);
        EXPECT(gbc.readMem(0xc88b), 0xc8);
        // CB C8 037F
        gbc.setState(0x9e63, 0xee90, 0xf3d0, 0x5a84, 0x48c4, 0x431e, 0x1, 0x1);
        gbc.writeMem(0x9e63, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xee90);
        EXPECT(gbc.pc(), 0x9e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e63), 0xcb);
        EXPECT(gbc.readMem(0x9e64), 0xc8);
        // CB C8 0380
        gbc.setState(0x8918, 0x5fd0, 0x23c0, 0x8556, 0x5130, 0x93ff, 0x0, 0x0);
        gbc.writeMem(0x8918, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5fd0);
        EXPECT(gbc.pc(), 0x891a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8918), 0xcb);
        EXPECT(gbc.readMem(0x8919), 0xc8);
        // CB C8 0381
        gbc.setState(0xe442, 0x601c, 0x3cf0, 0x9567, 0x6d87, 0x6e6d, 0x0, 0x1);
        gbc.writeMem(0xe442, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x601c);
        EXPECT(gbc.pc(), 0xe444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe442), 0xcb);
        EXPECT(gbc.readMem(0xe443), 0xc8);
        // CB C8 0382
        gbc.setState(0x98ed, 0x359b, 0x7590, 0x7932, 0xd5db, 0x8f40, 0x0, 0x0);
        gbc.writeMem(0x98ed, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x359b);
        EXPECT(gbc.pc(), 0x98ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ed), 0xcb);
        EXPECT(gbc.readMem(0x98ee), 0xc8);
        // CB C8 0383
        gbc.setState(0xa1ab, 0xce28, 0xbe00, 0x2ecc, 0x2655, 0x644e, 0x1, 0x1);
        gbc.writeMem(0xa1ab, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xce28);
        EXPECT(gbc.pc(), 0xa1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ab), 0xcb);
        EXPECT(gbc.readMem(0xa1ac), 0xc8);
        // CB C8 0384
        gbc.setState(0x94ad, 0xca32, 0x6bc0, 0x822b, 0xd6b9, 0x7c6a, 0x0, 0x1);
        gbc.writeMem(0x94ad, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xca32);
        EXPECT(gbc.pc(), 0x94af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ad), 0xcb);
        EXPECT(gbc.readMem(0x94ae), 0xc8);
        // CB C8 0385
        gbc.setState(0x968a, 0x4fd7, 0x9250, 0x9b35, 0xf7da, 0x1014, 0x0, 0x0);
        gbc.writeMem(0x968a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4fd7);
        EXPECT(gbc.pc(), 0x968c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x968a), 0xcb);
        EXPECT(gbc.readMem(0x968b), 0xc8);
        // CB C8 0386
        gbc.setState(0x46ee, 0xce71, 0x4a80, 0x398b, 0x8a9b, 0xee4e, 0x1, 0x1);
        gbc.writeMem(0x46ee, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xce71);
        EXPECT(gbc.pc(), 0x46f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0387
        gbc.setState(0x49f3, 0xb200, 0x130, 0xbb97, 0xaf, 0xff90, 0x0, 0x1);
        gbc.writeMem(0x49f3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb200);
        EXPECT(gbc.pc(), 0x49f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0388
        gbc.setState(0xd4bc, 0xcde5, 0x80a0, 0xd09f, 0x600c, 0xea43, 0x0, 0x1);
        gbc.writeMem(0xd4bc, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcde5);
        EXPECT(gbc.pc(), 0xd4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4bc), 0xcb);
        EXPECT(gbc.readMem(0xd4bd), 0xc8);
        // CB C8 0389
        gbc.setState(0xd0ec, 0x3e4b, 0x95a0, 0xa132, 0x26f9, 0xae04, 0x0, 0x0);
        gbc.writeMem(0xd0ec, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3e4b);
        EXPECT(gbc.pc(), 0xd0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ec), 0xcb);
        EXPECT(gbc.readMem(0xd0ed), 0xc8);
        // CB C8 038A
        gbc.setState(0xd8cb, 0x9021, 0xf5a0, 0xbb3c, 0x424e, 0x306e, 0x0, 0x1);
        gbc.writeMem(0xd8cb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9021);
        EXPECT(gbc.pc(), 0xd8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8cb), 0xcb);
        EXPECT(gbc.readMem(0xd8cc), 0xc8);
        // CB C8 038B
        gbc.setState(0x1027, 0x71e8, 0xf5a0, 0xbb3c, 0x4636, 0x52fd, 0x0, 0x0);
        gbc.writeMem(0x1027, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x71e8);
        EXPECT(gbc.pc(), 0x1029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 038C
        gbc.setState(0xc7f, 0xafee, 0x9340, 0xd22e, 0xd1a, 0xd326, 0x0, 0x0);
        gbc.writeMem(0xc7f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xafee);
        EXPECT(gbc.pc(), 0xc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 038D
        gbc.setState(0x9690, 0x865, 0x44a0, 0x5f47, 0x5c3c, 0x5085, 0x0, 0x0);
        gbc.writeMem(0x9690, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x865);
        EXPECT(gbc.pc(), 0x9692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9690), 0xcb);
        EXPECT(gbc.readMem(0x9691), 0xc8);
        // CB C8 038E
        gbc.setState(0x686f, 0xdabe, 0x2830, 0x475d, 0x16b1, 0x80d2, 0x1, 0x0);
        gbc.writeMem(0x686f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdabe);
        EXPECT(gbc.pc(), 0x6871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 038F
        gbc.setState(0x8544, 0x19e0, 0xbdf0, 0x1f2c, 0xb6e7, 0xe79f, 0x0, 0x0);
        gbc.writeMem(0x8544, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x19e0);
        EXPECT(gbc.pc(), 0x8546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8544), 0xcb);
        EXPECT(gbc.readMem(0x8545), 0xc8);
        // CB C8 0390
        gbc.setState(0x95fd, 0x7279, 0xa520, 0x30b0, 0xed61, 0x274, 0x1, 0x1);
        gbc.writeMem(0x95fd, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7279);
        EXPECT(gbc.pc(), 0x95ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fd), 0xcb);
        EXPECT(gbc.readMem(0x95fe), 0xc8);
        // CB C8 0391
        gbc.setState(0x375c, 0x31f0, 0xd900, 0xaaa3, 0x42cd, 0x20f8, 0x1, 0x0);
        gbc.writeMem(0x375c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x31f0);
        EXPECT(gbc.pc(), 0x375e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 0392
        gbc.setState(0x2ba4, 0x39ab, 0x8310, 0x816e, 0xde74, 0x4723, 0x1, 0x1);
        gbc.writeMem(0x2ba4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x39ab);
        EXPECT(gbc.pc(), 0x2ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0393
        gbc.setState(0x7a97, 0x4ff5, 0x330, 0xf09, 0xd00, 0x3ef8, 0x1, 0x1);
        gbc.writeMem(0x7a97, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4ff5);
        EXPECT(gbc.pc(), 0x7a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0394
        gbc.setState(0x9125, 0x3918, 0x4210, 0xbd01, 0xc6f8, 0x2d9f, 0x0, 0x1);
        gbc.writeMem(0x9125, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3918);
        EXPECT(gbc.pc(), 0x9127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9125), 0xcb);
        EXPECT(gbc.readMem(0x9126), 0xc8);
        // CB C8 0396
        gbc.setState(0x3e1, 0x3f36, 0xd130, 0xb1f1, 0xd0a8, 0x6ae, 0x0, 0x0);
        gbc.writeMem(0x3e1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3f36);
        EXPECT(gbc.pc(), 0x3e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0397
        gbc.setState(0x6865, 0x8c86, 0x3db0, 0x2f41, 0x8e5, 0x7871, 0x0, 0x1);
        gbc.writeMem(0x6865, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8c86);
        EXPECT(gbc.pc(), 0x6867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 0398
        gbc.setState(0xeaa7, 0x4515, 0xae0, 0xc4c3, 0x62ab, 0xed74, 0x0, 0x0);
        gbc.writeMem(0xeaa7, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4515);
        EXPECT(gbc.pc(), 0xeaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa7), 0xcb);
        EXPECT(gbc.readMem(0xeaa8), 0xc8);
        // CB C8 0399
        gbc.setState(0xe9ca, 0x36e3, 0xc610, 0x8e83, 0xaa9a, 0xde42, 0x0, 0x0);
        gbc.writeMem(0xe9ca, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x36e3);
        EXPECT(gbc.pc(), 0xe9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ca), 0xcb);
        EXPECT(gbc.readMem(0xe9cb), 0xc8);
        // CB C8 039A
        gbc.setState(0x9f98, 0x6c65, 0x7a90, 0x6f1a, 0x1597, 0xf6e4, 0x1, 0x1);
        gbc.writeMem(0x9f98, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6c65);
        EXPECT(gbc.pc(), 0x9f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f98), 0xcb);
        EXPECT(gbc.readMem(0x9f99), 0xc8);
        // CB C8 039C
        gbc.setState(0x24d3, 0x9d6c, 0x8660, 0xba2b, 0x2ed2, 0x724d, 0x0, 0x1);
        gbc.writeMem(0x24d3, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9d6c);
        EXPECT(gbc.pc(), 0x24d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 039D
        gbc.setState(0x9b4b, 0xe1ba, 0xca40, 0xdc48, 0x9f73, 0xe3bc, 0x0, 0x1);
        gbc.writeMem(0x9b4b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe1ba);
        EXPECT(gbc.pc(), 0x9b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4b), 0xcb);
        EXPECT(gbc.readMem(0x9b4c), 0xc8);
        // CB C8 039E
        gbc.setState(0x76ac, 0xb2ee, 0xc8a0, 0x6e19, 0x492, 0xee65, 0x0, 0x1);
        gbc.writeMem(0x76ac, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb2ee);
        EXPECT(gbc.pc(), 0x76ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 039F
        gbc.setState(0x9012, 0xbe6d, 0x6d50, 0x345, 0xd986, 0x98d7, 0x0, 0x1);
        gbc.writeMem(0x9012, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbe6d);
        EXPECT(gbc.pc(), 0x9014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9012), 0xcb);
        EXPECT(gbc.readMem(0x9013), 0xc8);
        // CB C8 03A0
        gbc.setState(0xae5c, 0xb23f, 0xc110, 0xed96, 0x6d2f, 0xa8f2, 0x1, 0x1);
        gbc.writeMem(0xae5c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb23f);
        EXPECT(gbc.pc(), 0xae5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5c), 0xcb);
        EXPECT(gbc.readMem(0xae5d), 0xc8);
        // CB C8 03A1
        gbc.setState(0x9267, 0xc4d8, 0x5380, 0x2ac5, 0x2856, 0x834d, 0x0, 0x0);
        gbc.writeMem(0x9267, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc4d8);
        EXPECT(gbc.pc(), 0x9269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9267), 0xcb);
        EXPECT(gbc.readMem(0x9268), 0xc8);
        // CB C8 03A2
        gbc.setState(0xd84, 0xe53e, 0x63a0, 0x4224, 0x1e4, 0x820e, 0x1, 0x1);
        gbc.writeMem(0xd84, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe53e);
        EXPECT(gbc.pc(), 0xd86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03A3
        gbc.setState(0x5171, 0x3e11, 0x6e20, 0x4043, 0x505e, 0x727, 0x0, 0x0);
        gbc.writeMem(0x5171, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3e11);
        EXPECT(gbc.pc(), 0x5173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03A4
        gbc.setState(0xdc63, 0x715c, 0xe2d0, 0xe96d, 0xb687, 0xbc52, 0x1, 0x1);
        gbc.writeMem(0xdc63, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x715c);
        EXPECT(gbc.pc(), 0xdc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc63), 0xcb);
        EXPECT(gbc.readMem(0xdc64), 0xc8);
        // CB C8 03A5
        gbc.setState(0x4914, 0x755b, 0xdb60, 0x6048, 0x9a15, 0xc33d, 0x1, 0x0);
        gbc.writeMem(0x4914, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x755b);
        EXPECT(gbc.pc(), 0x4916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03A6
        gbc.setState(0x6601, 0x8b44, 0xdb40, 0xe7e5, 0xeae2, 0xba95, 0x1, 0x1);
        gbc.writeMem(0x6601, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8b44);
        EXPECT(gbc.pc(), 0x6603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03A7
        gbc.setState(0x9f37, 0x204b, 0x2580, 0xfbdc, 0xae41, 0xaf23, 0x1, 0x0);
        gbc.writeMem(0x9f37, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x204b);
        EXPECT(gbc.pc(), 0x9f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f37), 0xcb);
        EXPECT(gbc.readMem(0x9f38), 0xc8);
        // CB C8 03A8
        gbc.setState(0x5ad9, 0x91f6, 0xee10, 0x9093, 0xe224, 0xd6d5, 0x1, 0x1);
        gbc.writeMem(0x5ad9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x91f6);
        EXPECT(gbc.pc(), 0x5adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03A9
        gbc.setState(0xb618, 0xfcea, 0xdc20, 0xe5fe, 0xfaa8, 0x5f4d, 0x1, 0x0);
        gbc.writeMem(0xb618, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xfcea);
        EXPECT(gbc.pc(), 0xb61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb618), 0xcb);
        EXPECT(gbc.readMem(0xb619), 0xc8);
        // CB C8 03AA
        gbc.setState(0x795, 0xa1c, 0x7a80, 0x97d1, 0xebc3, 0x2798, 0x1, 0x0);
        gbc.writeMem(0x795, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa1c);
        EXPECT(gbc.pc(), 0x797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03AB
        gbc.setState(0xb21f, 0x430b, 0xae00, 0x11c, 0x498, 0x4dd4, 0x0, 0x1);
        gbc.writeMem(0xb21f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x430b);
        EXPECT(gbc.pc(), 0xb221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21f), 0xcb);
        EXPECT(gbc.readMem(0xb220), 0xc8);
        // CB C8 03AD
        gbc.setState(0xc26d, 0x5c0a, 0x3780, 0xadf2, 0xf65a, 0xb1f, 0x0, 0x0);
        gbc.writeMem(0xc26d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5c0a);
        EXPECT(gbc.pc(), 0xc26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26d), 0xcb);
        EXPECT(gbc.readMem(0xc26e), 0xc8);
        // CB C8 03AE
        gbc.setState(0x13f2, 0xcf2d, 0xb350, 0x9d65, 0xd0d2, 0xded4, 0x0, 0x1);
        gbc.writeMem(0x13f2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xcf2d);
        EXPECT(gbc.pc(), 0x13f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03AF
        gbc.setState(0x3333, 0xc8ce, 0xcd50, 0x99a5, 0xd197, 0x5c51, 0x0, 0x1);
        gbc.writeMem(0x3333, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc8ce);
        EXPECT(gbc.pc(), 0x3335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03B1
        gbc.setState(0x4a85, 0xa960, 0x41d0, 0xf3a4, 0xffe7, 0x337a, 0x1, 0x1);
        gbc.writeMem(0x4a85, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa960);
        EXPECT(gbc.pc(), 0x4a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03B2
        gbc.setState(0x53a0, 0xcc54, 0x8ea0, 0xd9a1, 0xf2f5, 0x5923, 0x1, 0x0);
        gbc.writeMem(0x53a0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcc54);
        EXPECT(gbc.pc(), 0x53a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03B3
        gbc.setState(0x35b1, 0x500c, 0x5060, 0xe3d4, 0x6a94, 0x50e7, 0x0, 0x0);
        gbc.writeMem(0x35b1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x500c);
        EXPECT(gbc.pc(), 0x35b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03B4
        gbc.setState(0x6ceb, 0x9f59, 0x70a0, 0x8565, 0x825d, 0xeac7, 0x0, 0x1);
        gbc.writeMem(0x6ceb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9f59);
        EXPECT(gbc.pc(), 0x6ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03B5
        gbc.setState(0x68cf, 0x15a5, 0x4800, 0x22cd, 0x1e7, 0x7262, 0x0, 0x0);
        gbc.writeMem(0x68cf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x15a5);
        EXPECT(gbc.pc(), 0x68d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03B6
        gbc.setState(0x4d71, 0x3d35, 0x3e0, 0xdd68, 0x2448, 0x105f, 0x0, 0x0);
        gbc.writeMem(0x4d71, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3d35);
        EXPECT(gbc.pc(), 0x4d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03B7
        gbc.setState(0x577a, 0x9933, 0xac60, 0xb180, 0x67c6, 0x5d36, 0x0, 0x1);
        gbc.writeMem(0x577a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9933);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03B8
        gbc.setState(0x4ef9, 0x99b, 0x5f0, 0x7de0, 0xe35c, 0x7b51, 0x0, 0x1);
        gbc.writeMem(0x4ef9, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x99b);
        EXPECT(gbc.pc(), 0x4efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03B9
        gbc.setState(0x3c56, 0xef80, 0xa910, 0x931f, 0xaf70, 0xabbf, 0x1, 0x1);
        gbc.writeMem(0x3c56, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xef80);
        EXPECT(gbc.pc(), 0x3c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03BB
        gbc.setState(0xa096, 0x43d7, 0x3b40, 0x395f, 0x6890, 0xc9dc, 0x0, 0x1);
        gbc.writeMem(0xa096, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x43d7);
        EXPECT(gbc.pc(), 0xa098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa096), 0xcb);
        EXPECT(gbc.readMem(0xa097), 0xc8);
        // CB C8 03BC
        gbc.setState(0xde5e, 0x4090, 0x8da0, 0xc3e6, 0xf3f8, 0x43b, 0x0, 0x1);
        gbc.writeMem(0xde5e, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4090);
        EXPECT(gbc.pc(), 0xde60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde5e), 0xcb);
        EXPECT(gbc.readMem(0xde5f), 0xc8);
        // CB C8 03BD
        gbc.setState(0xe17f, 0xb463, 0x1730, 0xb6b4, 0x9f6c, 0x1163, 0x1, 0x1);
        gbc.writeMem(0xe17f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb463);
        EXPECT(gbc.pc(), 0xe181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17f), 0xcb);
        EXPECT(gbc.readMem(0xe180), 0xc8);
        // CB C8 03BE
        gbc.setState(0xcc33, 0x860f, 0x6720, 0xb655, 0x9a0c, 0xd4f5, 0x1, 0x0);
        gbc.writeMem(0xcc33, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x860f);
        EXPECT(gbc.pc(), 0xcc35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc33), 0xcb);
        EXPECT(gbc.readMem(0xcc34), 0xc8);
        // CB C8 03BF
        gbc.setState(0x46d1, 0x3654, 0x5600, 0xb7f8, 0x94e, 0x98db, 0x0, 0x0);
        gbc.writeMem(0x46d1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3654);
        EXPECT(gbc.pc(), 0x46d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03C0
        gbc.setState(0x60, 0x8403, 0x9a10, 0x27d4, 0x942f, 0xb61f, 0x0, 0x1);
        gbc.writeMem(0x60, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8403);
        EXPECT(gbc.pc(), 0x62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03C2
        gbc.setState(0x2874, 0x9684, 0x30b0, 0xdffd, 0x1266, 0xa48c, 0x1, 0x0);
        gbc.writeMem(0x2874, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9684);
        EXPECT(gbc.pc(), 0x2876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03C3
        gbc.setState(0x5ed6, 0x7d98, 0xda00, 0xaded, 0x9338, 0x432, 0x0, 0x0);
        gbc.writeMem(0x5ed6, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7d98);
        EXPECT(gbc.pc(), 0x5ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03C4
        gbc.setState(0x58c1, 0xc792, 0x7130, 0xada7, 0x5232, 0xc23d, 0x0, 0x1);
        gbc.writeMem(0x58c1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc792);
        EXPECT(gbc.pc(), 0x58c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03C5
        gbc.setState(0x190f, 0x7c8, 0xaae0, 0xbb3e, 0x6bb3, 0x23d0, 0x0, 0x0);
        gbc.writeMem(0x190f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7c8);
        EXPECT(gbc.pc(), 0x1911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03C6
        gbc.setState(0x8bed, 0x8adc, 0x4d30, 0x646f, 0x5bb8, 0xc40b, 0x1, 0x0);
        gbc.writeMem(0x8bed, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8adc);
        EXPECT(gbc.pc(), 0x8bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bed), 0xcb);
        EXPECT(gbc.readMem(0x8bee), 0xc8);
        // CB C8 03C7
        gbc.setState(0x1552, 0xaba, 0x7340, 0x1f0c, 0xa62d, 0x5ef3, 0x1, 0x1);
        gbc.writeMem(0x1552, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xaba);
        EXPECT(gbc.pc(), 0x1554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03C8
        gbc.setState(0xbee, 0x1c70, 0x3f0, 0x54c5, 0x95d, 0xd003, 0x0, 0x1);
        gbc.writeMem(0xbee, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1c70);
        EXPECT(gbc.pc(), 0xbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03C9
        gbc.setState(0x850d, 0x5851, 0x8a90, 0x6701, 0xad03, 0x2855, 0x1, 0x0);
        gbc.writeMem(0x850d, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5851);
        EXPECT(gbc.pc(), 0x850f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850d), 0xcb);
        EXPECT(gbc.readMem(0x850e), 0xc8);
        // CB C8 03CA
        gbc.setState(0x82fb, 0xa267, 0x1410, 0x9db8, 0x6fe, 0xd2e0, 0x0, 0x0);
        gbc.writeMem(0x82fb, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa267);
        EXPECT(gbc.pc(), 0x82fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fb), 0xcb);
        EXPECT(gbc.readMem(0x82fc), 0xc8);
        // CB C8 03CB
        gbc.setState(0x4394, 0xb8a3, 0xee60, 0xc617, 0xcd66, 0x9ee8, 0x0, 0x1);
        gbc.writeMem(0x4394, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb8a3);
        EXPECT(gbc.pc(), 0x4396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03CC
        gbc.setState(0x558c, 0x859c, 0xe540, 0x1db1, 0x164, 0x9cb1, 0x1, 0x1);
        gbc.writeMem(0x558c, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x859c);
        EXPECT(gbc.pc(), 0x558e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03CD
        gbc.setState(0xa6e2, 0xb77e, 0x5510, 0x6c02, 0x933d, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0xa6e2, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb77e);
        EXPECT(gbc.pc(), 0xa6e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e2), 0xcb);
        EXPECT(gbc.readMem(0xa6e3), 0xc8);
        // CB C8 03CE
        gbc.setState(0x7ba8, 0xded2, 0xa4b0, 0x3f43, 0xfc44, 0x87f5, 0x1, 0x1);
        gbc.writeMem(0x7ba8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xded2);
        EXPECT(gbc.pc(), 0x7baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03CF
        gbc.setState(0xeb87, 0xc4ef, 0x54c0, 0xa319, 0xdaee, 0x22fe, 0x0, 0x1);
        gbc.writeMem(0xeb87, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc4ef);
        EXPECT(gbc.pc(), 0xeb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb87), 0xcb);
        EXPECT(gbc.readMem(0xeb88), 0xc8);
        // CB C8 03D0
        gbc.setState(0xc97b, 0x8277, 0xe30, 0x64a4, 0xc78c, 0xdf0a, 0x1, 0x1);
        gbc.writeMem(0xc97b, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8277);
        EXPECT(gbc.pc(), 0xc97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97b), 0xcb);
        EXPECT(gbc.readMem(0xc97c), 0xc8);
        // CB C8 03D1
        gbc.setState(0xb3f4, 0x40f6, 0xcad0, 0x8ef4, 0x4d12, 0x3db8, 0x0, 0x1);
        gbc.writeMem(0xb3f4, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x40f6);
        EXPECT(gbc.pc(), 0xb3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f4), 0xcb);
        EXPECT(gbc.readMem(0xb3f5), 0xc8);
        // CB C8 03D2
        gbc.setState(0x5751, 0xeb2e, 0xcfb0, 0x6150, 0xa5d9, 0xa080, 0x0, 0x0);
        gbc.writeMem(0x5751, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeb2e);
        EXPECT(gbc.pc(), 0x5753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03D3
        gbc.setState(0xd028, 0x38ac, 0xc4c0, 0x3197, 0x8785, 0x7b7e, 0x1, 0x1);
        gbc.writeMem(0xd028, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x38ac);
        EXPECT(gbc.pc(), 0xd02a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd028), 0xcb);
        EXPECT(gbc.readMem(0xd029), 0xc8);
        // CB C8 03D4
        gbc.setState(0xe48a, 0x2a7c, 0x9080, 0x5bb0, 0xae82, 0xdc50, 0x0, 0x0);
        gbc.writeMem(0xe48a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2a7c);
        EXPECT(gbc.pc(), 0xe48c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe48a), 0xcb);
        EXPECT(gbc.readMem(0xe48b), 0xc8);
        // CB C8 03D5
        gbc.setState(0x5028, 0x5954, 0xe1d0, 0x777, 0xfc36, 0x1cce, 0x1, 0x1);
        gbc.writeMem(0x5028, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5954);
        EXPECT(gbc.pc(), 0x502a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03D6
        gbc.setState(0xac24, 0xbfc5, 0xe20, 0x1eec, 0xd06, 0xe317, 0x0, 0x0);
        gbc.writeMem(0xac24, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbfc5);
        EXPECT(gbc.pc(), 0xac26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac24), 0xcb);
        EXPECT(gbc.readMem(0xac25), 0xc8);
        // CB C8 03D7
        gbc.setState(0xe935, 0x31e7, 0x5dd0, 0xb9c3, 0x48fc, 0xbba7, 0x1, 0x0);
        gbc.writeMem(0xe935, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x31e7);
        EXPECT(gbc.pc(), 0xe937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe935), 0xcb);
        EXPECT(gbc.readMem(0xe936), 0xc8);
        // CB C8 03D8
        gbc.setState(0x5e92, 0x57cf, 0x600, 0xdc06, 0xc82b, 0x706b, 0x0, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x57cf);
        EXPECT(gbc.pc(), 0x5e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03D9
        gbc.setState(0x459a, 0x31b6, 0xa9f0, 0xf2b7, 0xcdbc, 0x12cf, 0x1, 0x1);
        gbc.writeMem(0x459a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x31b6);
        EXPECT(gbc.pc(), 0x459c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03DA
        gbc.setState(0xacc8, 0x2d0, 0x9610, 0xb643, 0xdaed, 0x3490, 0x0, 0x1);
        gbc.writeMem(0xacc8, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2d0);
        EXPECT(gbc.pc(), 0xacca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc8), 0xcb);
        EXPECT(gbc.readMem(0xacc9), 0xc8);
        // CB C8 03DB
        gbc.setState(0x1614, 0xb640, 0x2130, 0x1ebe, 0x899a, 0xc419, 0x0, 0x1);
        gbc.writeMem(0x1614, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb640);
        EXPECT(gbc.pc(), 0x1616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03DC
        gbc.setState(0x8850, 0x2dad, 0xbfd0, 0x1d45, 0x8372, 0x22bb, 0x0, 0x1);
        gbc.writeMem(0x8850, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2dad);
        EXPECT(gbc.pc(), 0x8852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8850), 0xcb);
        EXPECT(gbc.readMem(0x8851), 0xc8);
        // CB C8 03DD
        gbc.setState(0x5acf, 0xefa0, 0xfbc0, 0xa965, 0xa1d2, 0x3cca, 0x0, 0x1);
        gbc.writeMem(0x5acf, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xefa0);
        EXPECT(gbc.pc(), 0x5ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03DE
        gbc.setState(0xc1b0, 0x8bb8, 0x8a80, 0x1e22, 0x4f61, 0x6582, 0x1, 0x1);
        gbc.writeMem(0xc1b0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8bb8);
        EXPECT(gbc.pc(), 0xc1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b0), 0xcb);
        EXPECT(gbc.readMem(0xc1b1), 0xc8);
        // CB C8 03DF
        gbc.setState(0x5d3a, 0x547e, 0xcbe0, 0xf51a, 0x7585, 0x429b, 0x0, 0x1);
        gbc.writeMem(0x5d3a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x547e);
        EXPECT(gbc.pc(), 0x5d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03E0
        gbc.setState(0x39c0, 0xdc18, 0x2910, 0x374b, 0xef5a, 0x3c44, 0x0, 0x1);
        gbc.writeMem(0x39c0, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdc18);
        EXPECT(gbc.pc(), 0x39c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03E1
        gbc.setState(0x491f, 0x738c, 0xc540, 0x7547, 0x78b1, 0xf63, 0x0, 0x0);
        gbc.writeMem(0x491f, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x738c);
        EXPECT(gbc.pc(), 0x4921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03E2
        gbc.setState(0x5d77, 0xd991, 0xe660, 0xe619, 0x5e00, 0x73a8, 0x0, 0x0);
        gbc.writeMem(0x5d77, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd991);
        EXPECT(gbc.pc(), 0x5d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03E3
        gbc.setState(0x1cd1, 0x7317, 0x1010, 0x3310, 0xfa93, 0x2074, 0x0, 0x1);
        gbc.writeMem(0x1cd1, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7317);
        EXPECT(gbc.pc(), 0x1cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03E4
        gbc.setState(0x179a, 0x89ee, 0x4420, 0x8f22, 0x2769, 0x869b, 0x1, 0x0);
        gbc.writeMem(0x179a, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x89ee);
        EXPECT(gbc.pc(), 0x179c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C8 03E5
        gbc.setState(0x5159, 0xde8c, 0x150, 0x8403, 0xe3a9, 0xc35d, 0x0, 0x1);
        gbc.writeMem(0x5159, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xde8c);
        EXPECT(gbc.pc(), 0x515b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C8 03E7
        gbc.setState(0x2b13, 0x5fd9, 0xd930, 0x2eff, 0x67f1, 0xf038, 0x1, 0x1);
        gbc.writeMem(0x2b13, { 0xcb, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5fd9);
        EXPECT(gbc.pc(), 0x2b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
