    TEST(gbcemu, opcode_98) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 98 0000
        gbc.setState(0x9251, 0xf787, 0xc010, 0x5421, 0xfd9f, 0x3f0c, 0x1, 0x1);
        gbc.writeMem(0x9251, { 0x98 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x9252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9251));
        // 98 0001
        gbc.setState(0xaa52, 0x59d6, 0x9190, 0x96b9, 0xab3d, 0xfc6e, 0x0, 0x0);
        gbc.writeMem(0xaa52, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaa52));
        // 98 0002
        gbc.setState(0x32da, 0x8358, 0xb8a0, 0x4fd3, 0xa2b2, 0x10c2, 0x1, 0x1);
        gbc.writeMem(0x32da, { 0x98 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8358, gbc.sp());
        EXPECT(0x32db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0003
        gbc.setState(0x6c5b, 0x867f, 0x5700, 0xef64, 0x6161, 0x2def, 0x0, 0x0);
        gbc.writeMem(0x6c5b, { 0x98 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x867f, gbc.sp());
        EXPECT(0x6c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0005
        gbc.setState(0x9d7d, 0x9d77, 0xecd0, 0xc91c, 0x8ee3, 0x3bd6, 0x0, 0x1);
        gbc.writeMem(0x9d7d, { 0x98 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9d77, gbc.sp());
        EXPECT(0x9d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9d7d));
        // 98 0006
        gbc.setState(0x5292, 0x7ca, 0x4820, 0xa365, 0x6c72, 0x9eee, 0x0, 0x1);
        gbc.writeMem(0x5292, { 0x98 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7ca, gbc.sp());
        EXPECT(0x5293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0007
        gbc.setState(0x311f, 0x73b, 0x9690, 0x46a3, 0xc653, 0xe154, 0x0, 0x0);
        gbc.writeMem(0x311f, { 0x98 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x73b, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0009
        gbc.setState(0xc32e, 0x5764, 0xab50, 0x5fe7, 0x3de0, 0x2c95, 0x1, 0x1);
        gbc.writeMem(0xc32e, { 0x98 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5764, gbc.sp());
        EXPECT(0xc32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc32e));
        // 98 000A
        gbc.setState(0xd789, 0x582, 0xd3f0, 0x58b4, 0x9bfc, 0x7faf, 0x1, 0x0);
        gbc.writeMem(0xd789, { 0x98 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0xd78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd789));
        // 98 000C
        gbc.setState(0x1de7, 0x7fed, 0xa7c0, 0x5729, 0x49a6, 0xc2ca, 0x1, 0x0);
        gbc.writeMem(0x1de7, { 0x98 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7fed, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 000D
        gbc.setState(0x68f6, 0x59f3, 0x7d80, 0x4008, 0x96ff, 0x8b0, 0x0, 0x1);
        gbc.writeMem(0x68f6, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x59f3, gbc.sp());
        EXPECT(0x68f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 000E
        gbc.setState(0xdea9, 0x6761, 0x5c20, 0x428d, 0xfda0, 0x6105, 0x0, 0x0);
        gbc.writeMem(0xdea9, { 0x98 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0xdeaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdea9));
        // 98 000F
        gbc.setState(0x5d20, 0x232b, 0x1bf0, 0x1ff7, 0x8a74, 0x6293, 0x0, 0x1);
        gbc.writeMem(0x5d20, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x232b, gbc.sp());
        EXPECT(0x5d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0010
        gbc.setState(0x5d05, 0x60e9, 0xa5a0, 0x89ec, 0xee9a, 0x8b92, 0x1, 0x1);
        gbc.writeMem(0x5d05, { 0x98 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x60e9, gbc.sp());
        EXPECT(0x5d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0011
        gbc.setState(0xce35, 0xdcd7, 0xe0d0, 0x946c, 0x9816, 0x2a54, 0x1, 0x0);
        gbc.writeMem(0xce35, { 0x98 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdcd7, gbc.sp());
        EXPECT(0xce36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xce35));
        // 98 0013
        gbc.setState(0x6bda, 0x237a, 0xbf10, 0xe2a6, 0x28bc, 0x4e2b, 0x1, 0x0);
        gbc.writeMem(0x6bda, { 0x98 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x237a, gbc.sp());
        EXPECT(0x6bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0014
        gbc.setState(0x8e9c, 0x2016, 0xd970, 0x45f7, 0xd4, 0x2586, 0x1, 0x1);
        gbc.writeMem(0x8e9c, { 0x98 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2016, gbc.sp());
        EXPECT(0x8e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8e9c));
        // 98 0015
        gbc.setState(0xdf10, 0xc8aa, 0x3920, 0xe158, 0xf293, 0xedd4, 0x1, 0x0);
        gbc.writeMem(0xdf10, { 0x98 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0xdf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdf10));
        // 98 0016
        gbc.setState(0x98b3, 0xf9c2, 0x4570, 0xc623, 0x25bf, 0xa095, 0x0, 0x0);
        gbc.writeMem(0x98b3, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf9c2, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x98b3));
        // 98 0017
        gbc.setState(0xebe3, 0x93a3, 0x6d80, 0xfda4, 0x7098, 0x266d, 0x0, 0x1);
        gbc.writeMem(0xebe3, { 0x98 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x93a3, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xebe3));
        // 98 0018
        gbc.setState(0x5df, 0x9e69, 0x8830, 0x5242, 0xaa3d, 0x743f, 0x0, 0x1);
        gbc.writeMem(0x5df, { 0x98 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0019
        gbc.setState(0xb255, 0xd888, 0xa0, 0xbe38, 0x38b5, 0x8f4, 0x0, 0x0);
        gbc.writeMem(0xb255, { 0x98 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd888, gbc.sp());
        EXPECT(0xb256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb255));
        // 98 001A
        gbc.setState(0x6ca5, 0x56aa, 0x8740, 0x6718, 0x17d3, 0xb7b3, 0x1, 0x0);
        gbc.writeMem(0x6ca5, { 0x98 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x56aa, gbc.sp());
        EXPECT(0x6ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 001B
        gbc.setState(0xd8c4, 0x7bf6, 0xe4e0, 0x5183, 0x49c0, 0x97fd, 0x0, 0x1);
        gbc.writeMem(0xd8c4, { 0x98 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7bf6, gbc.sp());
        EXPECT(0xd8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd8c4));
        // 98 001C
        gbc.setState(0x33f, 0x7c9e, 0xaa90, 0xba61, 0x31b3, 0x5849, 0x1, 0x1);
        gbc.writeMem(0x33f, { 0x98 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7c9e, gbc.sp());
        EXPECT(0x340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 001D
        gbc.setState(0xa556, 0x5b53, 0x5400, 0x74a0, 0xfc44, 0x8ce9, 0x0, 0x1);
        gbc.writeMem(0xa556, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5b53, gbc.sp());
        EXPECT(0xa557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa556));
        // 98 001E
        gbc.setState(0xb07, 0x629a, 0x8800, 0x7db3, 0x6149, 0xdc34, 0x0, 0x0);
        gbc.writeMem(0xb07, { 0x98 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x629a, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 001F
        gbc.setState(0x22fe, 0x1710, 0x1ec0, 0x9a55, 0x5b0f, 0xfde, 0x1, 0x1);
        gbc.writeMem(0x22fe, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1710, gbc.sp());
        EXPECT(0x22ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0020
        gbc.setState(0x4ead, 0x16d4, 0xa540, 0x2c60, 0x9a4, 0x4303, 0x0, 0x0);
        gbc.writeMem(0x4ead, { 0x98 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x16d4, gbc.sp());
        EXPECT(0x4eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0021
        gbc.setState(0x94a, 0xfab1, 0x59a0, 0x9e4e, 0xa211, 0x62ec, 0x1, 0x0);
        gbc.writeMem(0x94a, { 0x98 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfab1, gbc.sp());
        EXPECT(0x94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0022
        gbc.setState(0x63e6, 0x74a6, 0xee70, 0xf193, 0x1915, 0xd85e, 0x1, 0x0);
        gbc.writeMem(0x63e6, { 0x98 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x74a6, gbc.sp());
        EXPECT(0x63e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0023
        gbc.setState(0xbec2, 0xf4fc, 0x6210, 0xf21b, 0x9f46, 0xe4a3, 0x1, 0x1);
        gbc.writeMem(0xbec2, { 0x98 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf4fc, gbc.sp());
        EXPECT(0xbec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbec2));
        // 98 0024
        gbc.setState(0x537f, 0x273, 0x82d0, 0x74d, 0x90b, 0xf76e, 0x0, 0x1);
        gbc.writeMem(0x537f, { 0x98 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x273, gbc.sp());
        EXPECT(0x5380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0025
        gbc.setState(0x7003, 0x3899, 0xdb40, 0x9f15, 0x8d83, 0x3b80, 0x1, 0x1);
        gbc.writeMem(0x7003, { 0x98 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3899, gbc.sp());
        EXPECT(0x7004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0026
        gbc.setState(0x9f40, 0x3493, 0xefd0, 0xfbbf, 0x7575, 0xaf45, 0x0, 0x1);
        gbc.writeMem(0x9f40, { 0x98 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3493, gbc.sp());
        EXPECT(0x9f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9f40));
        // 98 0027
        gbc.setState(0x6ad2, 0xbf96, 0xa7c0, 0x95e1, 0x6e92, 0xf9b0, 0x1, 0x0);
        gbc.writeMem(0x6ad2, { 0x98 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbf96, gbc.sp());
        EXPECT(0x6ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0028
        gbc.setState(0x52c7, 0xdcd7, 0x2550, 0x5760, 0x28a1, 0x2ad6, 0x1, 0x0);
        gbc.writeMem(0x52c7, { 0x98 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdcd7, gbc.sp());
        EXPECT(0x52c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0029
        gbc.setState(0xc51b, 0x45c3, 0x9df0, 0x9475, 0x54e8, 0x60b7, 0x1, 0x0);
        gbc.writeMem(0xc51b, { 0x98 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc51b));
        // 98 002B
        gbc.setState(0x13f3, 0x5cec, 0xe1f0, 0x50ff, 0x6c08, 0x4287, 0x0, 0x1);
        gbc.writeMem(0x13f3, { 0x98 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5cec, gbc.sp());
        EXPECT(0x13f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 002C
        gbc.setState(0x7de3, 0x1014, 0xb3d0, 0x46af, 0x3732, 0x2e83, 0x1, 0x0);
        gbc.writeMem(0x7de3, { 0x98 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1014, gbc.sp());
        EXPECT(0x7de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 002D
        gbc.setState(0x9d79, 0x9f3a, 0x4aa0, 0x3351, 0xd250, 0x87ab, 0x0, 0x0);
        gbc.writeMem(0x9d79, { 0x98 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9d79));
        // 98 002E
        gbc.setState(0xcdf4, 0x17f7, 0x89f0, 0x3060, 0x972e, 0x1f22, 0x1, 0x1);
        gbc.writeMem(0xcdf4, { 0x98 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x17f7, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcdf4));
        // 98 002F
        gbc.setState(0x715c, 0x5413, 0xad50, 0xb6d8, 0xeb96, 0xa1b6, 0x0, 0x1);
        gbc.writeMem(0x715c, { 0x98 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5413, gbc.sp());
        EXPECT(0x715d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0030
        gbc.setState(0x70d0, 0xff2a, 0x18c0, 0xbf89, 0xde94, 0x3165, 0x1, 0x0);
        gbc.writeMem(0x70d0, { 0x98 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xff2a, gbc.sp());
        EXPECT(0x70d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0031
        gbc.setState(0x7c52, 0x787, 0x5010, 0x7e7e, 0x7159, 0x3915, 0x1, 0x0);
        gbc.writeMem(0x7c52, { 0x98 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x787, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0032
        gbc.setState(0xe4b3, 0x42ed, 0x8440, 0x759d, 0x2ea5, 0x49c9, 0x1, 0x0);
        gbc.writeMem(0xe4b3, { 0x98 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x42ed, gbc.sp());
        EXPECT(0xe4b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe4b3));
        // 98 0033
        gbc.setState(0x75e8, 0x6a98, 0x6d40, 0x8efe, 0x5892, 0x3382, 0x0, 0x0);
        gbc.writeMem(0x75e8, { 0x98 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6a98, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0034
        gbc.setState(0xe502, 0x8ae3, 0x3d40, 0x1df3, 0xd900, 0x8bde, 0x0, 0x1);
        gbc.writeMem(0xe502, { 0x98 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8ae3, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe502));
        // 98 0035
        gbc.setState(0x536c, 0x2b75, 0x1f50, 0xbd08, 0x7428, 0x1ebd, 0x0, 0x1);
        gbc.writeMem(0x536c, { 0x98 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x536d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0036
        gbc.setState(0x861, 0x1aa4, 0x9bc0, 0xa08b, 0x7f70, 0x400f, 0x0, 0x0);
        gbc.writeMem(0x861, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1aa4, gbc.sp());
        EXPECT(0x862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0037
        gbc.setState(0x8b09, 0xe0c2, 0xa0d0, 0x304, 0x7598, 0xb6e8, 0x0, 0x1);
        gbc.writeMem(0x8b09, { 0x98 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe0c2, gbc.sp());
        EXPECT(0x8b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8b09));
        // 98 0038
        gbc.setState(0x448e, 0xefbd, 0xe1c0, 0xaafc, 0x3595, 0x5461, 0x0, 0x1);
        gbc.writeMem(0x448e, { 0x98 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xefbd, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0039
        gbc.setState(0x221c, 0x5633, 0x9da0, 0x55b8, 0xa4f5, 0x44aa, 0x0, 0x1);
        gbc.writeMem(0x221c, { 0x98 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5633, gbc.sp());
        EXPECT(0x221d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 003A
        gbc.setState(0xa6d6, 0x8ad0, 0x2f20, 0x42e6, 0xa159, 0x50e5, 0x1, 0x0);
        gbc.writeMem(0xa6d6, { 0x98 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8ad0, gbc.sp());
        EXPECT(0xa6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa6d6));
        // 98 003B
        gbc.setState(0x714a, 0x6324, 0xd1e0, 0xec4c, 0xcc4, 0x390b, 0x0, 0x1);
        gbc.writeMem(0x714a, { 0x98 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6324, gbc.sp());
        EXPECT(0x714b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 003C
        gbc.setState(0x2dfb, 0x6eb1, 0xef90, 0xe429, 0x204a, 0xccd5, 0x1, 0x1);
        gbc.writeMem(0x2dfb, { 0x98 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6eb1, gbc.sp());
        EXPECT(0x2dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 003D
        gbc.setState(0xb3d2, 0x99d8, 0x1350, 0x15e5, 0x6f96, 0x83a9, 0x1, 0x0);
        gbc.writeMem(0xb3d2, { 0x98 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x99d8, gbc.sp());
        EXPECT(0xb3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb3d2));
        // 98 003E
        gbc.setState(0xe956, 0x5f47, 0x4a60, 0x366d, 0x6ad5, 0xd89f, 0x0, 0x1);
        gbc.writeMem(0xe956, { 0x98 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5f47, gbc.sp());
        EXPECT(0xe957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe956));
        // 98 003F
        gbc.setState(0x5ec9, 0xd666, 0x6650, 0xe156, 0xc3a8, 0xc88b, 0x0, 0x1);
        gbc.writeMem(0x5ec9, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd666, gbc.sp());
        EXPECT(0x5eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0040
        gbc.setState(0x89e5, 0xaeb7, 0xfb10, 0x14c4, 0x62c, 0x65ae, 0x0, 0x1);
        gbc.writeMem(0x89e5, { 0x98 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaeb7, gbc.sp());
        EXPECT(0x89e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x89e5));
        // 98 0041
        gbc.setState(0xcea3, 0xafaa, 0x2490, 0x150f, 0x6326, 0xabe4, 0x1, 0x1);
        gbc.writeMem(0xcea3, { 0x98 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xafaa, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcea3));
        // 98 0042
        gbc.setState(0x232c, 0xadb8, 0xdb30, 0x15df, 0xb863, 0x5adf, 0x0, 0x1);
        gbc.writeMem(0x232c, { 0x98 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0x232d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0043
        gbc.setState(0x3e98, 0xc6f1, 0xc6b0, 0xd5c8, 0x8701, 0x74be, 0x0, 0x1);
        gbc.writeMem(0x3e98, { 0x98 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc6f1, gbc.sp());
        EXPECT(0x3e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0044
        gbc.setState(0x2c26, 0xad8d, 0xc150, 0x5228, 0x9fb7, 0xee40, 0x0, 0x1);
        gbc.writeMem(0x2c26, { 0x98 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0045
        gbc.setState(0xd404, 0x81ae, 0x57d0, 0x4f82, 0x8db1, 0x58d9, 0x0, 0x1);
        gbc.writeMem(0xd404, { 0x98 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x81ae, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd404));
        // 98 0046
        gbc.setState(0x910c, 0x71e1, 0x2bc0, 0x71ea, 0x5fa9, 0x56cb, 0x1, 0x0);
        gbc.writeMem(0x910c, { 0x98 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x71e1, gbc.sp());
        EXPECT(0x910d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x910c));
        // 98 0047
        gbc.setState(0x6aba, 0x7129, 0x8960, 0x9598, 0x2a03, 0xd890, 0x1, 0x1);
        gbc.writeMem(0x6aba, { 0x98 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7129, gbc.sp());
        EXPECT(0x6abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0048
        gbc.setState(0x94d3, 0x8d80, 0xea00, 0x6680, 0xe37a, 0x1da, 0x1, 0x0);
        gbc.writeMem(0x94d3, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d80, gbc.sp());
        EXPECT(0x94d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x94d3));
        // 98 0049
        gbc.setState(0x4c0a, 0x25cf, 0x630, 0x90f1, 0x3ffb, 0x3b88, 0x1, 0x0);
        gbc.writeMem(0x4c0a, { 0x98 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x25cf, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 004A
        gbc.setState(0x6e6e, 0x1f66, 0xc70, 0x9ade, 0x3f8d, 0x49a3, 0x1, 0x1);
        gbc.writeMem(0x6e6e, { 0x98 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1f66, gbc.sp());
        EXPECT(0x6e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 004B
        gbc.setState(0xc3ba, 0x8b20, 0xedc0, 0x6915, 0x7e6d, 0x6518, 0x0, 0x0);
        gbc.writeMem(0xc3ba, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8b20, gbc.sp());
        EXPECT(0xc3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc3ba));
        // 98 004C
        gbc.setState(0x2044, 0xa6bd, 0x300, 0xf856, 0xb364, 0x4029, 0x1, 0x1);
        gbc.writeMem(0x2044, { 0x98 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa6bd, gbc.sp());
        EXPECT(0x2045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 004E
        gbc.setState(0x160e, 0xc92b, 0x3c70, 0xd7ad, 0xa437, 0x65d8, 0x0, 0x0);
        gbc.writeMem(0x160e, { 0x98 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc92b, gbc.sp());
        EXPECT(0x160f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 004F
        gbc.setState(0xb282, 0xadfa, 0xdb0, 0xc4dd, 0x3ca2, 0xbbd7, 0x1, 0x0);
        gbc.writeMem(0xb282, { 0x98 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xadfa, gbc.sp());
        EXPECT(0xb283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb282));
        // 98 0050
        gbc.setState(0x9a80, 0x4cad, 0xfd50, 0x66e7, 0xa54, 0x2a1d, 0x1, 0x1);
        gbc.writeMem(0x9a80, { 0x98 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4cad, gbc.sp());
        EXPECT(0x9a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9a80));
        // 98 0051
        gbc.setState(0xe9c0, 0x290c, 0x6760, 0x8d1, 0xcf51, 0xd5cd, 0x0, 0x0);
        gbc.writeMem(0xe9c0, { 0x98 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x290c, gbc.sp());
        EXPECT(0xe9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe9c0));
        // 98 0052
        gbc.setState(0x3c32, 0x9a01, 0x49b0, 0x4930, 0x86f6, 0xaae5, 0x0, 0x1);
        gbc.writeMem(0x3c32, { 0x98 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9a01, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0053
        gbc.setState(0x9c0c, 0xb0f4, 0xeb50, 0x64ae, 0xe621, 0xb43f, 0x0, 0x0);
        gbc.writeMem(0x9c0c, { 0x98 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb0f4, gbc.sp());
        EXPECT(0x9c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9c0c));
        // 98 0054
        gbc.setState(0xc6b8, 0x3f93, 0x15e0, 0xa5e1, 0xff5, 0x89b1, 0x0, 0x1);
        gbc.writeMem(0xc6b8, { 0x98 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3f93, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc6b8));
        // 98 0055
        gbc.setState(0x6062, 0xbe4f, 0xcb00, 0x90f9, 0x4d91, 0x81af, 0x1, 0x0);
        gbc.writeMem(0x6062, { 0x98 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbe4f, gbc.sp());
        EXPECT(0x6063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0056
        gbc.setState(0x9b3d, 0x7db3, 0x220, 0x5bad, 0x261e, 0xb8e6, 0x0, 0x1);
        gbc.writeMem(0x9b3d, { 0x98 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7db3, gbc.sp());
        EXPECT(0x9b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9b3d));
        // 98 0057
        gbc.setState(0x908b, 0xab2d, 0x6180, 0x84dd, 0x91cd, 0xb05b, 0x1, 0x0);
        gbc.writeMem(0x908b, { 0x98 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab2d, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x908b));
        // 98 0058
        gbc.setState(0xb91b, 0x1e95, 0x8010, 0x63f2, 0x433b, 0x167c, 0x1, 0x0);
        gbc.writeMem(0xb91b, { 0x98 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1e95, gbc.sp());
        EXPECT(0xb91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb91b));
        // 98 0059
        gbc.setState(0x33ef, 0xc16c, 0xe770, 0x449, 0xcde8, 0x3271, 0x0, 0x0);
        gbc.writeMem(0x33ef, { 0x98 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc16c, gbc.sp());
        EXPECT(0x33f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 005A
        gbc.setState(0xbed4, 0x9b30, 0x55d0, 0xe5c9, 0x8c2a, 0xc1ec, 0x1, 0x0);
        gbc.writeMem(0xbed4, { 0x98 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0xbed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbed4));
        // 98 005B
        gbc.setState(0x1c39, 0x3ff6, 0x28a0, 0x2268, 0x778e, 0x9e47, 0x1, 0x1);
        gbc.writeMem(0x1c39, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3ff6, gbc.sp());
        EXPECT(0x1c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 005C
        gbc.setState(0x929b, 0xfd09, 0x3fb0, 0x8344, 0x540d, 0xb316, 0x0, 0x1);
        gbc.writeMem(0x929b, { 0x98 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfd09, gbc.sp());
        EXPECT(0x929c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x929b));
        // 98 005D
        gbc.setState(0xd6e9, 0x8bf0, 0xd4f0, 0xfbe4, 0x8c89, 0x25cc, 0x0, 0x0);
        gbc.writeMem(0xd6e9, { 0x98 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8bf0, gbc.sp());
        EXPECT(0xd6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd6e9));
        // 98 005E
        gbc.setState(0x892c, 0xeb19, 0xad10, 0xeeca, 0xa308, 0x4d09, 0x0, 0x0);
        gbc.writeMem(0x892c, { 0x98 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeb19, gbc.sp());
        EXPECT(0x892d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x892c));
        // 98 005F
        gbc.setState(0x3a16, 0xa8a9, 0xdfc0, 0xc2ba, 0x644e, 0x9ab5, 0x1, 0x1);
        gbc.writeMem(0x3a16, { 0x98 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa8a9, gbc.sp());
        EXPECT(0x3a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0060
        gbc.setState(0xbc7, 0x571e, 0xdfa0, 0x22a1, 0xdfc6, 0x5b2a, 0x0, 0x1);
        gbc.writeMem(0xbc7, { 0x98 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x571e, gbc.sp());
        EXPECT(0xbc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0061
        gbc.setState(0xb587, 0xaa22, 0x6e70, 0x1f70, 0xc1f4, 0x609a, 0x0, 0x1);
        gbc.writeMem(0xb587, { 0x98 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaa22, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb587));
        // 98 0062
        gbc.setState(0xb8e, 0xf948, 0x8820, 0xb119, 0x2f29, 0xc520, 0x0, 0x0);
        gbc.writeMem(0xb8e, { 0x98 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf948, gbc.sp());
        EXPECT(0xb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0063
        gbc.setState(0xdac6, 0x3934, 0x6200, 0x96a0, 0x3bf7, 0xd7c1, 0x1, 0x0);
        gbc.writeMem(0xdac6, { 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3934, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdac6));
        // 98 0064
        gbc.setState(0x57ec, 0xae17, 0xce60, 0x7dad, 0x66bf, 0x121, 0x0, 0x1);
        gbc.writeMem(0x57ec, { 0x98 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xae17, gbc.sp());
        EXPECT(0x57ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0066
        gbc.setState(0x18e9, 0x4a49, 0x6df0, 0x773e, 0x8baa, 0x6154, 0x0, 0x0);
        gbc.writeMem(0x18e9, { 0x98 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4a49, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0067
        gbc.setState(0xdf5c, 0xff44, 0x270, 0x8740, 0x35bc, 0xd5ce, 0x0, 0x1);
        gbc.writeMem(0xdf5c, { 0x98 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0xdf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdf5c));
        // 98 0068
        gbc.setState(0x6529, 0xe3b7, 0x45b0, 0x3cd7, 0x1152, 0x876c, 0x1, 0x1);
        gbc.writeMem(0x6529, { 0x98 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe3b7, gbc.sp());
        EXPECT(0x652a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0069
        gbc.setState(0x51d6, 0xca0a, 0xb0f0, 0xf69c, 0x1c29, 0xe16c, 0x0, 0x0);
        gbc.writeMem(0x51d6, { 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xca0a, gbc.sp());
        EXPECT(0x51d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 006A
        gbc.setState(0x6a10, 0x395f, 0xa160, 0x2dd4, 0xeb8c, 0x9c32, 0x0, 0x0);
        gbc.writeMem(0x6a10, { 0x98 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x395f, gbc.sp());
        EXPECT(0x6a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 006B
        gbc.setState(0x6dbe, 0x67fc, 0xe460, 0x6850, 0x38f4, 0xaa30, 0x0, 0x1);
        gbc.writeMem(0x6dbe, { 0x98 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x67fc, gbc.sp());
        EXPECT(0x6dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 006C
        gbc.setState(0x68f9, 0x504a, 0x79a0, 0x7882, 0x7336, 0x1366, 0x0, 0x0);
        gbc.writeMem(0x68f9, { 0x98 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x504a, gbc.sp());
        EXPECT(0x68fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 006D
        gbc.setState(0x3bdc, 0x70e2, 0xbe60, 0xf76d, 0x369e, 0x4f49, 0x1, 0x0);
        gbc.writeMem(0x3bdc, { 0x98 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x70e2, gbc.sp());
        EXPECT(0x3bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 006E
        gbc.setState(0x67e0, 0xa817, 0xc700, 0x27f3, 0x20a6, 0xa438, 0x0, 0x1);
        gbc.writeMem(0x67e0, { 0x98 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa817, gbc.sp());
        EXPECT(0x67e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 006F
        gbc.setState(0x8c22, 0x4796, 0x79a0, 0x7ecb, 0xd1a9, 0xe2f4, 0x0, 0x1);
        gbc.writeMem(0x8c22, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4796, gbc.sp());
        EXPECT(0x8c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8c22));
        // 98 0071
        gbc.setState(0x59d7, 0x1de5, 0x30b0, 0xadb3, 0xd3dc, 0xf0b7, 0x1, 0x1);
        gbc.writeMem(0x59d7, { 0x98 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1de5, gbc.sp());
        EXPECT(0x59d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0072
        gbc.setState(0x141f, 0xcd95, 0xb00, 0xe24d, 0x2004, 0x7bea, 0x1, 0x0);
        gbc.writeMem(0x141f, { 0x98 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcd95, gbc.sp());
        EXPECT(0x1420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0073
        gbc.setState(0x1e0e, 0x2f6d, 0x6d50, 0x3698, 0x5e35, 0xa12e, 0x1, 0x1);
        gbc.writeMem(0x1e0e, { 0x98 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2f6d, gbc.sp());
        EXPECT(0x1e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0074
        gbc.setState(0x1739, 0x4414, 0x45c0, 0x7a3a, 0x358a, 0xe352, 0x0, 0x0);
        gbc.writeMem(0x1739, { 0x98 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4414, gbc.sp());
        EXPECT(0x173a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0075
        gbc.setState(0x15a5, 0x720d, 0xe4f0, 0xbb53, 0x713b, 0x8339, 0x0, 0x1);
        gbc.writeMem(0x15a5, { 0x98 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x720d, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0076
        gbc.setState(0x8945, 0x63ed, 0xa1d0, 0x59a7, 0xaf55, 0x3abb, 0x1, 0x0);
        gbc.writeMem(0x8945, { 0x98 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x63ed, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8945));
        // 98 0077
        gbc.setState(0x5b05, 0xd869, 0x4030, 0x748, 0xb8dc, 0xdd0e, 0x0, 0x1);
        gbc.writeMem(0x5b05, { 0x98 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x5b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0078
        gbc.setState(0x9c0c, 0xd182, 0x8f70, 0xc643, 0x91ae, 0x201a, 0x0, 0x1);
        gbc.writeMem(0x9c0c, { 0x98 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd182, gbc.sp());
        EXPECT(0x9c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9c0c));
        // 98 0079
        gbc.setState(0x6895, 0x827c, 0xd6a0, 0x213f, 0xcfbc, 0xb106, 0x0, 0x0);
        gbc.writeMem(0x6895, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 007A
        gbc.setState(0xf42, 0x3987, 0x3c0, 0x1f20, 0xfa11, 0x3902, 0x0, 0x1);
        gbc.writeMem(0xf42, { 0x98 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0xf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 007B
        gbc.setState(0x5c6b, 0xe0a0, 0x89a0, 0x9930, 0x8396, 0x1da0, 0x0, 0x0);
        gbc.writeMem(0x5c6b, { 0x98 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe0a0, gbc.sp());
        EXPECT(0x5c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 007D
        gbc.setState(0x6192, 0xccc5, 0x85e0, 0x5947, 0xdc9b, 0x7c70, 0x0, 0x0);
        gbc.writeMem(0x6192, { 0x98 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xccc5, gbc.sp());
        EXPECT(0x6193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 007E
        gbc.setState(0xc905, 0xdb66, 0x9560, 0xc79c, 0x5d68, 0x8ba4, 0x1, 0x0);
        gbc.writeMem(0xc905, { 0x98 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdb66, gbc.sp());
        EXPECT(0xc906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc905));
        // 98 007F
        gbc.setState(0x9fbb, 0x64b8, 0x610, 0x211a, 0x2cef, 0x2c31, 0x0, 0x0);
        gbc.writeMem(0x9fbb, { 0x98 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x64b8, gbc.sp());
        EXPECT(0x9fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9fbb));
        // 98 0080
        gbc.setState(0xb98b, 0x71fa, 0x5b60, 0xc4fa, 0x2d7, 0x3b4e, 0x0, 0x0);
        gbc.writeMem(0xb98b, { 0x98 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x71fa, gbc.sp());
        EXPECT(0xb98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb98b));
        // 98 0081
        gbc.setState(0xc644, 0xdc26, 0xb490, 0x6b3b, 0x1449, 0x5b99, 0x1, 0x0);
        gbc.writeMem(0xc644, { 0x98 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdc26, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc644));
        // 98 0082
        gbc.setState(0xc9a9, 0xe957, 0xd5e0, 0x2293, 0x4e18, 0x538e, 0x1, 0x0);
        gbc.writeMem(0xc9a9, { 0x98 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe957, gbc.sp());
        EXPECT(0xc9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc9a9));
        // 98 0083
        gbc.setState(0x8f22, 0x1e4e, 0x8030, 0xd8ad, 0xe58c, 0xa5bb, 0x0, 0x0);
        gbc.writeMem(0x8f22, { 0x98 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1e4e, gbc.sp());
        EXPECT(0x8f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8f22));
        // 98 0084
        gbc.setState(0x9db2, 0xc25a, 0xc700, 0x9785, 0xfa84, 0x4438, 0x0, 0x0);
        gbc.writeMem(0x9db2, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9db2));
        // 98 0085
        gbc.setState(0x920e, 0xb3d1, 0x8fc0, 0xa969, 0x32bb, 0x1abf, 0x1, 0x0);
        gbc.writeMem(0x920e, { 0x98 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb3d1, gbc.sp());
        EXPECT(0x920f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x920e));
        // 98 0086
        gbc.setState(0xaa18, 0xbfd4, 0x70f0, 0xcd4c, 0xece9, 0x8007, 0x1, 0x0);
        gbc.writeMem(0xaa18, { 0x98 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbfd4, gbc.sp());
        EXPECT(0xaa19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaa18));
        // 98 0087
        gbc.setState(0x7a9b, 0x1367, 0xc390, 0xe6ae, 0x207f, 0xa82d, 0x0, 0x0);
        gbc.writeMem(0x7a9b, { 0x98 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1367, gbc.sp());
        EXPECT(0x7a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0088
        gbc.setState(0x376b, 0xa649, 0x6e40, 0xf606, 0x869c, 0xe8d2, 0x0, 0x0);
        gbc.writeMem(0x376b, { 0x98 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa649, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0089
        gbc.setState(0xed75, 0xdb7c, 0x7c30, 0xedcf, 0x1ebb, 0x43ac, 0x0, 0x0);
        gbc.writeMem(0xed75, { 0x98 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdb7c, gbc.sp());
        EXPECT(0xed76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xed75));
        // 98 008A
        gbc.setState(0x4899, 0xad5a, 0x3a90, 0x3608, 0xa501, 0xb87c, 0x1, 0x0);
        gbc.writeMem(0x4899, { 0x98 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xad5a, gbc.sp());
        EXPECT(0x489a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 008B
        gbc.setState(0x7742, 0x7c74, 0xe430, 0x5b96, 0x8415, 0xe916, 0x0, 0x0);
        gbc.writeMem(0x7742, { 0x98 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7c74, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 008C
        gbc.setState(0x6c19, 0xb62c, 0xae80, 0x9a44, 0xd131, 0x4a81, 0x0, 0x0);
        gbc.writeMem(0x6c19, { 0x98 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb62c, gbc.sp());
        EXPECT(0x6c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 008D
        gbc.setState(0xadf, 0x97a6, 0xd060, 0x4c3c, 0x9b3, 0xe66f, 0x1, 0x0);
        gbc.writeMem(0xadf, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x97a6, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 008E
        gbc.setState(0x5f98, 0xc93c, 0x77d0, 0x4b79, 0x59c, 0x6bd9, 0x1, 0x1);
        gbc.writeMem(0x5f98, { 0x98 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc93c, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 008F
        gbc.setState(0x52db, 0x832c, 0x69f0, 0x6be9, 0xe85b, 0x5f4b, 0x0, 0x1);
        gbc.writeMem(0x52db, { 0x98 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x832c, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0091
        gbc.setState(0x29f3, 0xbcc3, 0x20f0, 0xfc01, 0x6a41, 0x8576, 0x0, 0x0);
        gbc.writeMem(0x29f3, { 0x98 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbcc3, gbc.sp());
        EXPECT(0x29f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0092
        gbc.setState(0x482b, 0xd94d, 0x5560, 0x3ce5, 0x1764, 0xd4d8, 0x1, 0x0);
        gbc.writeMem(0x482b, { 0x98 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd94d, gbc.sp());
        EXPECT(0x482c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0094
        gbc.setState(0x1ad7, 0x59bb, 0xc5c0, 0x98fc, 0x9a28, 0xd4e0, 0x1, 0x0);
        gbc.writeMem(0x1ad7, { 0x98 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0095
        gbc.setState(0x9662, 0x8e22, 0x62b0, 0xaed2, 0x211c, 0xe78c, 0x1, 0x0);
        gbc.writeMem(0x9662, { 0x98 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8e22, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9662));
        // 98 0096
        gbc.setState(0xd8aa, 0xeb16, 0xe20, 0xcf1c, 0x59b3, 0x66fe, 0x1, 0x0);
        gbc.writeMem(0xd8aa, { 0x98 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeb16, gbc.sp());
        EXPECT(0xd8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd8aa));
        // 98 0097
        gbc.setState(0x19a6, 0xc268, 0xcdf0, 0x89, 0xd209, 0x3e9e, 0x1, 0x1);
        gbc.writeMem(0x19a6, { 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc268, gbc.sp());
        EXPECT(0x19a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0098
        gbc.setState(0x6457, 0xe098, 0xf260, 0x866f, 0xa69c, 0x2f6f, 0x1, 0x1);
        gbc.writeMem(0x6457, { 0x98 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe098, gbc.sp());
        EXPECT(0x6458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0099
        gbc.setState(0x3084, 0x1a0e, 0x92a0, 0xfdc5, 0xa34d, 0x9b30, 0x0, 0x1);
        gbc.writeMem(0x3084, { 0x98 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1a0e, gbc.sp());
        EXPECT(0x3085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 009A
        gbc.setState(0xed60, 0xfae0, 0x2440, 0x29b1, 0x15, 0xa934, 0x0, 0x0);
        gbc.writeMem(0xed60, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0xed61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xed60));
        // 98 009B
        gbc.setState(0x83ea, 0xc60f, 0xbd80, 0x97fd, 0xdd5b, 0x5da2, 0x1, 0x0);
        gbc.writeMem(0x83ea, { 0x98 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc60f, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x83ea));
        // 98 009C
        gbc.setState(0x5b77, 0x1743, 0xed50, 0x537a, 0xe41c, 0x32f0, 0x0, 0x0);
        gbc.writeMem(0x5b77, { 0x98 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1743, gbc.sp());
        EXPECT(0x5b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 009D
        gbc.setState(0xb8c9, 0xa4eb, 0x2a40, 0x8737, 0xf510, 0xa860, 0x1, 0x0);
        gbc.writeMem(0xb8c9, { 0x98 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa4eb, gbc.sp());
        EXPECT(0xb8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb8c9));
        // 98 009E
        gbc.setState(0x5116, 0xf6c6, 0xae50, 0x4eb4, 0xbb6d, 0x9c1c, 0x1, 0x0);
        gbc.writeMem(0x5116, { 0x98 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0x5117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 009F
        gbc.setState(0x3412, 0x4f9d, 0x3b50, 0x2644, 0x3e0b, 0xa0f3, 0x0, 0x1);
        gbc.writeMem(0x3412, { 0x98 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4f9d, gbc.sp());
        EXPECT(0x3413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00A0
        gbc.setState(0x824d, 0x355, 0x39a0, 0x9b51, 0xb98c, 0xf81f, 0x1, 0x0);
        gbc.writeMem(0x824d, { 0x98 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x355, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x824d));
        // 98 00A1
        gbc.setState(0x8398, 0x6d24, 0x970, 0xd8fd, 0x7115, 0xca77, 0x0, 0x0);
        gbc.writeMem(0x8398, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6d24, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8398));
        // 98 00A3
        gbc.setState(0xa0c9, 0x1c26, 0x30d0, 0x33c2, 0x3e37, 0x498c, 0x0, 0x1);
        gbc.writeMem(0xa0c9, { 0x98 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1c26, gbc.sp());
        EXPECT(0xa0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa0c9));
        // 98 00A4
        gbc.setState(0x992e, 0x6ba1, 0x5040, 0xfbda, 0x683f, 0xbd1e, 0x1, 0x0);
        gbc.writeMem(0x992e, { 0x98 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6ba1, gbc.sp());
        EXPECT(0x992f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x992e));
        // 98 00A5
        gbc.setState(0x87cf, 0x71cf, 0x5670, 0x4d87, 0x6621, 0x20c3, 0x1, 0x1);
        gbc.writeMem(0x87cf, { 0x98 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x71cf, gbc.sp());
        EXPECT(0x87d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x87cf));
        // 98 00A6
        gbc.setState(0x5ac9, 0xe038, 0x6bc0, 0x3fde, 0x4332, 0x2b8f, 0x0, 0x0);
        gbc.writeMem(0x5ac9, { 0x98 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe038, gbc.sp());
        EXPECT(0x5aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00A7
        gbc.setState(0x55a7, 0x3753, 0x75f0, 0x90eb, 0x9a1b, 0x40ab, 0x1, 0x1);
        gbc.writeMem(0x55a7, { 0x98 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3753, gbc.sp());
        EXPECT(0x55a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00A8
        gbc.setState(0xafff, 0x773d, 0xe8f0, 0x5f49, 0x3a26, 0x6fdb, 0x1, 0x0);
        gbc.writeMem(0xafff, { 0x98 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x773d, gbc.sp());
        EXPECT(0xb000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xafff));
        // 98 00A9
        gbc.setState(0xd794, 0x4e9, 0xb880, 0xab4b, 0xc437, 0x3dc8, 0x0, 0x1);
        gbc.writeMem(0xd794, { 0x98 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4e9, gbc.sp());
        EXPECT(0xd795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd794));
        // 98 00AA
        gbc.setState(0xc26, 0x835, 0xba60, 0x1d92, 0xf968, 0x96f4, 0x1, 0x1);
        gbc.writeMem(0xc26, { 0x98 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x835, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00AB
        gbc.setState(0xb9be, 0x1a5d, 0xb350, 0xbf11, 0xc6af, 0xa091, 0x0, 0x0);
        gbc.writeMem(0xb9be, { 0x98 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1a5d, gbc.sp());
        EXPECT(0xb9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb9be));
        // 98 00AC
        gbc.setState(0xee79, 0x6b83, 0x3800, 0x7526, 0xa08a, 0x3657, 0x1, 0x1);
        gbc.writeMem(0xee79, { 0x98 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0xee7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xee79));
        // 98 00AD
        gbc.setState(0x978b, 0xc1c7, 0xa1b0, 0x3e9f, 0xa749, 0xa275, 0x1, 0x0);
        gbc.writeMem(0x978b, { 0x98 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc1c7, gbc.sp());
        EXPECT(0x978c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x978b));
        // 98 00AE
        gbc.setState(0xe9cc, 0xde26, 0x2860, 0x6966, 0xf2a6, 0xe026, 0x0, 0x1);
        gbc.writeMem(0xe9cc, { 0x98 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xde26, gbc.sp());
        EXPECT(0xe9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe9cc));
        // 98 00B0
        gbc.setState(0xc2e6, 0x5c40, 0xe40, 0x622d, 0x555b, 0x75ea, 0x1, 0x1);
        gbc.writeMem(0xc2e6, { 0x98 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5c40, gbc.sp());
        EXPECT(0xc2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc2e6));
        // 98 00B1
        gbc.setState(0x6862, 0xe533, 0x5c0, 0xb926, 0x1110, 0x495, 0x0, 0x0);
        gbc.writeMem(0x6862, { 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe533, gbc.sp());
        EXPECT(0x6863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00B2
        gbc.setState(0xa070, 0x7baa, 0x3880, 0x5330, 0x3fa9, 0xd430, 0x0, 0x0);
        gbc.writeMem(0xa070, { 0x98 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7baa, gbc.sp());
        EXPECT(0xa071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa070));
        // 98 00B3
        gbc.setState(0x734a, 0x271c, 0x8b20, 0xa1f7, 0xc119, 0xdbe9, 0x0, 0x1);
        gbc.writeMem(0x734a, { 0x98 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x271c, gbc.sp());
        EXPECT(0x734b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00B4
        gbc.setState(0x33eb, 0xade5, 0xfe80, 0x5d9d, 0x81bc, 0x3a06, 0x1, 0x0);
        gbc.writeMem(0x33eb, { 0x98 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0x33ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00B5
        gbc.setState(0x85d5, 0x9fcd, 0x7b00, 0x9ba0, 0xd5ea, 0x1b1d, 0x0, 0x0);
        gbc.writeMem(0x85d5, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9fcd, gbc.sp());
        EXPECT(0x85d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x85d5));
        // 98 00B7
        gbc.setState(0xef99, 0x9b3c, 0xaaa0, 0xf90d, 0x2678, 0x95b2, 0x1, 0x1);
        gbc.writeMem(0xef99, { 0x98 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9b3c, gbc.sp());
        EXPECT(0xef9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xef99));
        // 98 00B8
        gbc.setState(0x5ebb, 0x3136, 0xc280, 0x27c6, 0xf66f, 0x556c, 0x0, 0x0);
        gbc.writeMem(0x5ebb, { 0x98 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3136, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00B9
        gbc.setState(0xcbb6, 0x4093, 0xb10, 0x22a8, 0x2aff, 0x6673, 0x0, 0x0);
        gbc.writeMem(0xcbb6, { 0x98 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4093, gbc.sp());
        EXPECT(0xcbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcbb6));
        // 98 00BA
        gbc.setState(0x8d01, 0xee1d, 0xa220, 0x7ab2, 0x1150, 0x2ff1, 0x0, 0x1);
        gbc.writeMem(0x8d01, { 0x98 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xee1d, gbc.sp());
        EXPECT(0x8d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8d01));
        // 98 00BB
        gbc.setState(0x95ee, 0x8d59, 0x6ac0, 0x68b0, 0x9d97, 0x340e, 0x1, 0x0);
        gbc.writeMem(0x95ee, { 0x98 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8d59, gbc.sp());
        EXPECT(0x95ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x95ee));
        // 98 00BC
        gbc.setState(0x825d, 0xedd2, 0x20, 0xdf96, 0xb7d6, 0x4686, 0x1, 0x1);
        gbc.writeMem(0x825d, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0x825e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x825d));
        // 98 00BD
        gbc.setState(0x7975, 0xf73e, 0x8bc0, 0xd9ac, 0x5111, 0x192e, 0x1, 0x0);
        gbc.writeMem(0x7975, { 0x98 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0x7976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00BE
        gbc.setState(0x1be2, 0xb662, 0x4c60, 0x7a39, 0x2f76, 0x2b31, 0x1, 0x0);
        gbc.writeMem(0x1be2, { 0x98 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb662, gbc.sp());
        EXPECT(0x1be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00BF
        gbc.setState(0x432a, 0xedc3, 0xcd00, 0x8509, 0x4635, 0x35bb, 0x0, 0x0);
        gbc.writeMem(0x432a, { 0x98 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xedc3, gbc.sp());
        EXPECT(0x432b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00C0
        gbc.setState(0xbbb6, 0x6acb, 0xe9f0, 0x46d6, 0x124a, 0x3d99, 0x0, 0x0);
        gbc.writeMem(0xbbb6, { 0x98 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6acb, gbc.sp());
        EXPECT(0xbbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbbb6));
        // 98 00C1
        gbc.setState(0xcdbe, 0xa739, 0x6a20, 0x59ff, 0x932c, 0xacc7, 0x0, 0x0);
        gbc.writeMem(0xcdbe, { 0x98 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0xcdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcdbe));
        // 98 00C2
        gbc.setState(0x6a56, 0xa16, 0x18f0, 0x92ec, 0x93dc, 0x87c2, 0x0, 0x1);
        gbc.writeMem(0x6a56, { 0x98 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa16, gbc.sp());
        EXPECT(0x6a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00C3
        gbc.setState(0x6c77, 0x3b32, 0x91f0, 0xcaa0, 0xe0e2, 0x5ef, 0x0, 0x1);
        gbc.writeMem(0x6c77, { 0x98 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b32, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00C4
        gbc.setState(0x6741, 0x574c, 0x5330, 0x141f, 0x9344, 0xc4e2, 0x1, 0x0);
        gbc.writeMem(0x6741, { 0x98 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x574c, gbc.sp());
        EXPECT(0x6742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00C5
        gbc.setState(0x87cf, 0x4, 0x9000, 0x8288, 0xd75b, 0x5825, 0x1, 0x0);
        gbc.writeMem(0x87cf, { 0x98 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4, gbc.sp());
        EXPECT(0x87d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x87cf));
        // 98 00C6
        gbc.setState(0x75f0, 0x8e92, 0xc180, 0x80bb, 0x5497, 0xe2e8, 0x1, 0x0);
        gbc.writeMem(0x75f0, { 0x98 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8e92, gbc.sp());
        EXPECT(0x75f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00C7
        gbc.setState(0x49be, 0xc6fe, 0xc840, 0x1984, 0xc52c, 0xd0df, 0x0, 0x1);
        gbc.writeMem(0x49be, { 0x98 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc6fe, gbc.sp());
        EXPECT(0x49bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00C8
        gbc.setState(0xc794, 0x2531, 0x3190, 0x70ec, 0x4b6e, 0xdd5, 0x0, 0x0);
        gbc.writeMem(0xc794, { 0x98 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2531, gbc.sp());
        EXPECT(0xc795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc794));
        // 98 00C9
        gbc.setState(0xd736, 0x7733, 0x95a0, 0xee9a, 0x849, 0xc824, 0x1, 0x0);
        gbc.writeMem(0xd736, { 0x98 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7733, gbc.sp());
        EXPECT(0xd737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd736));
        // 98 00CA
        gbc.setState(0xb00, 0x7f73, 0x44d0, 0x4050, 0x6249, 0xc3d0, 0x0, 0x0);
        gbc.writeMem(0xb00, { 0x98 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f73, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00CB
        gbc.setState(0xd866, 0x2198, 0xe7e0, 0x3ae9, 0x584a, 0x8f0a, 0x1, 0x0);
        gbc.writeMem(0xd866, { 0x98 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2198, gbc.sp());
        EXPECT(0xd867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd866));
        // 98 00CD
        gbc.setState(0x4ca4, 0xd3db, 0xcd70, 0xa554, 0xa7ea, 0x9414, 0x1, 0x1);
        gbc.writeMem(0x4ca4, { 0x98 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd3db, gbc.sp());
        EXPECT(0x4ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00CE
        gbc.setState(0x61c1, 0xddce, 0xe950, 0xf3c8, 0x7a4b, 0xadc3, 0x0, 0x1);
        gbc.writeMem(0x61c1, { 0x98 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xddce, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00CF
        gbc.setState(0xda1a, 0x5db9, 0xb0a0, 0xb366, 0x82a3, 0x4bce, 0x1, 0x1);
        gbc.writeMem(0xda1a, { 0x98 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5db9, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xda1a));
        // 98 00D0
        gbc.setState(0xa669, 0x6033, 0xf4c0, 0xc419, 0x1547, 0xbca3, 0x1, 0x1);
        gbc.writeMem(0xa669, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6033, gbc.sp());
        EXPECT(0xa66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa669));
        // 98 00D2
        gbc.setState(0x149b, 0xbe55, 0x7710, 0x5900, 0xc2c5, 0x8035, 0x1, 0x1);
        gbc.writeMem(0x149b, { 0x98 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe55, gbc.sp());
        EXPECT(0x149c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00D3
        gbc.setState(0xe6e5, 0xa285, 0x4210, 0x585f, 0xb7c6, 0xabd2, 0x0, 0x1);
        gbc.writeMem(0xe6e5, { 0x98 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0xe6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe6e5));
        // 98 00D4
        gbc.setState(0xa4, 0xa234, 0x79e0, 0x1bd4, 0xf5c, 0x6438, 0x1, 0x1);
        gbc.writeMem(0xa4, { 0x98 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa234, gbc.sp());
        EXPECT(0xa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00D6
        gbc.setState(0x56a3, 0xde49, 0xf020, 0x6c3a, 0xb786, 0x6db9, 0x1, 0x0);
        gbc.writeMem(0x56a3, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xde49, gbc.sp());
        EXPECT(0x56a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00D7
        gbc.setState(0x8374, 0x454c, 0x9b40, 0xc446, 0x29dd, 0x924f, 0x0, 0x0);
        gbc.writeMem(0x8374, { 0x98 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x454c, gbc.sp());
        EXPECT(0x8375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8374));
        // 98 00D8
        gbc.setState(0xdb20, 0x3f59, 0xade0, 0xe8f5, 0x9ddd, 0x4093, 0x0, 0x0);
        gbc.writeMem(0xdb20, { 0x98 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3f59, gbc.sp());
        EXPECT(0xdb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdb20));
        // 98 00D9
        gbc.setState(0x8d35, 0xf8ba, 0xe600, 0x6c13, 0xcd81, 0x876c, 0x0, 0x1);
        gbc.writeMem(0x8d35, { 0x98 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf8ba, gbc.sp());
        EXPECT(0x8d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8d35));
        // 98 00DA
        gbc.setState(0x53c6, 0xf735, 0xfca0, 0xef25, 0x9202, 0xae00, 0x0, 0x0);
        gbc.writeMem(0x53c6, { 0x98 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf735, gbc.sp());
        EXPECT(0x53c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00DB
        gbc.setState(0x3c5, 0xa993, 0x9260, 0xdd84, 0xce97, 0x7aaf, 0x1, 0x0);
        gbc.writeMem(0x3c5, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa993, gbc.sp());
        EXPECT(0x3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00DC
        gbc.setState(0x7614, 0xdfe8, 0x1810, 0x383b, 0x657c, 0x22f0, 0x1, 0x0);
        gbc.writeMem(0x7614, { 0x98 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdfe8, gbc.sp());
        EXPECT(0x7615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00DD
        gbc.setState(0xe3fb, 0xf050, 0x41d0, 0x93b8, 0x63f4, 0x51f5, 0x0, 0x1);
        gbc.writeMem(0xe3fb, { 0x98 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0xe3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe3fb));
        // 98 00DE
        gbc.setState(0xcb13, 0xa21d, 0x3980, 0x107a, 0x3c95, 0xab1b, 0x0, 0x0);
        gbc.writeMem(0xcb13, { 0x98 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa21d, gbc.sp());
        EXPECT(0xcb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcb13));
        // 98 00DF
        gbc.setState(0x60ec, 0x14fe, 0x4ca0, 0x3147, 0xf54b, 0x9ba3, 0x0, 0x0);
        gbc.writeMem(0x60ec, { 0x98 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x14fe, gbc.sp());
        EXPECT(0x60ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00E0
        gbc.setState(0x5fdb, 0x3a16, 0xd350, 0xb4ec, 0xa962, 0xa136, 0x0, 0x1);
        gbc.writeMem(0x5fdb, { 0x98 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0x5fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00E2
        gbc.setState(0xce5, 0xaf46, 0xde40, 0x1b3b, 0xac2a, 0x4d52, 0x1, 0x0);
        gbc.writeMem(0xce5, { 0x98 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0xce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00E3
        gbc.setState(0x4b6f, 0x3022, 0x1fb0, 0x6463, 0x5c69, 0x3a40, 0x1, 0x1);
        gbc.writeMem(0x4b6f, { 0x98 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3022, gbc.sp());
        EXPECT(0x4b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00E4
        gbc.setState(0x22c6, 0xe54a, 0x4520, 0xc143, 0xb53, 0x5f3, 0x0, 0x0);
        gbc.writeMem(0x22c6, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe54a, gbc.sp());
        EXPECT(0x22c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00E5
        gbc.setState(0x13b6, 0x62e, 0xed90, 0x179c, 0xe4ee, 0x34ed, 0x1, 0x1);
        gbc.writeMem(0x13b6, { 0x98 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x62e, gbc.sp());
        EXPECT(0x13b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00E6
        gbc.setState(0x2c5b, 0x510e, 0xda50, 0x91b5, 0x8c93, 0x579a, 0x0, 0x1);
        gbc.writeMem(0x2c5b, { 0x98 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00E7
        gbc.setState(0xda50, 0x5f22, 0xc0a0, 0xc867, 0xce74, 0x62c9, 0x1, 0x1);
        gbc.writeMem(0xda50, { 0x98 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5f22, gbc.sp());
        EXPECT(0xda51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xda50));
        // 98 00E8
        gbc.setState(0x5eea, 0xdf31, 0xbe20, 0xc61, 0xf210, 0x9b1b, 0x1, 0x1);
        gbc.writeMem(0x5eea, { 0x98 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdf31, gbc.sp());
        EXPECT(0x5eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00E9
        gbc.setState(0x44e4, 0x98fa, 0xa660, 0x2012, 0x36ec, 0x55cf, 0x0, 0x1);
        gbc.writeMem(0x44e4, { 0x98 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x98fa, gbc.sp());
        EXPECT(0x44e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00EA
        gbc.setState(0x188, 0xa0b, 0xb350, 0xc1d7, 0xf3ab, 0xd887, 0x0, 0x1);
        gbc.writeMem(0x188, { 0x98 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa0b, gbc.sp());
        EXPECT(0x189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00EB
        gbc.setState(0xfc6, 0x5fd5, 0xd2e0, 0x7192, 0x7ae3, 0x289e, 0x0, 0x1);
        gbc.writeMem(0xfc6, { 0x98 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5fd5, gbc.sp());
        EXPECT(0xfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00EC
        gbc.setState(0xb66d, 0x95b1, 0x2f40, 0xe4f4, 0x60c1, 0x1357, 0x1, 0x1);
        gbc.writeMem(0xb66d, { 0x98 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x95b1, gbc.sp());
        EXPECT(0xb66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb66d));
        // 98 00ED
        gbc.setState(0x4388, 0xf60b, 0x9d00, 0xd44d, 0xd153, 0x1591, 0x0, 0x1);
        gbc.writeMem(0x4388, { 0x98 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00EE
        gbc.setState(0x2ee5, 0xf61f, 0x9670, 0x74c1, 0x8f0f, 0x737, 0x1, 0x1);
        gbc.writeMem(0x2ee5, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf61f, gbc.sp());
        EXPECT(0x2ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00EF
        gbc.setState(0x31b9, 0xee82, 0x7ea0, 0x6e97, 0x1e1c, 0x3f31, 0x0, 0x0);
        gbc.writeMem(0x31b9, { 0x98 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F0
        gbc.setState(0x31b2, 0x46da, 0x9cf0, 0x93e7, 0xd513, 0x58b, 0x1, 0x1);
        gbc.writeMem(0x31b2, { 0x98 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x46da, gbc.sp());
        EXPECT(0x31b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F1
        gbc.setState(0x6178, 0x434b, 0xfc00, 0xdc4, 0xd915, 0x497d, 0x1, 0x0);
        gbc.writeMem(0x6178, { 0x98 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x434b, gbc.sp());
        EXPECT(0x6179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F2
        gbc.setState(0x42c0, 0x53ed, 0x9590, 0x7ab1, 0x9bfb, 0xe37a, 0x1, 0x0);
        gbc.writeMem(0x42c0, { 0x98 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x53ed, gbc.sp());
        EXPECT(0x42c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F3
        gbc.setState(0x95c0, 0x89af, 0x8330, 0x54f5, 0xca4b, 0xc0ff, 0x0, 0x1);
        gbc.writeMem(0x95c0, { 0x98 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x89af, gbc.sp());
        EXPECT(0x95c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x95c0));
        // 98 00F4
        gbc.setState(0xaf7b, 0xaa46, 0x21b0, 0x293, 0xca26, 0x8694, 0x1, 0x1);
        gbc.writeMem(0xaf7b, { 0x98 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaa46, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaf7b));
        // 98 00F5
        gbc.setState(0x59a2, 0xdd5b, 0x9020, 0x2378, 0x3d64, 0xf4db, 0x1, 0x0);
        gbc.writeMem(0x59a2, { 0x98 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdd5b, gbc.sp());
        EXPECT(0x59a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F6
        gbc.setState(0x3cce, 0x83c7, 0x3cf0, 0x39ed, 0x8685, 0x135d, 0x0, 0x0);
        gbc.writeMem(0x3cce, { 0x98 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x83c7, gbc.sp());
        EXPECT(0x3ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F7
        gbc.setState(0x6556, 0x2d9b, 0x9760, 0x4ea, 0xcc23, 0x3646, 0x0, 0x0);
        gbc.writeMem(0x6556, { 0x98 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2d9b, gbc.sp());
        EXPECT(0x6557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F8
        gbc.setState(0x353e, 0xc557, 0xed90, 0xebc7, 0x175d, 0x4895, 0x1, 0x1);
        gbc.writeMem(0x353e, { 0x98 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc557, gbc.sp());
        EXPECT(0x353f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 00F9
        gbc.setState(0xc2c9, 0x2058, 0x9ef0, 0x8230, 0xb5e6, 0xe6a, 0x0, 0x0);
        gbc.writeMem(0xc2c9, { 0x98 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2058, gbc.sp());
        EXPECT(0xc2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc2c9));
        // 98 00FA
        gbc.setState(0x6e0, 0xc3de, 0x2490, 0x2a41, 0x9ef7, 0xa753, 0x0, 0x0);
        gbc.writeMem(0x6e0, { 0x98 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc3de, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00FB
        gbc.setState(0x227, 0x1cad, 0x7990, 0xc34b, 0x79e8, 0x6e4d, 0x1, 0x0);
        gbc.writeMem(0x227, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1cad, gbc.sp());
        EXPECT(0x228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 00FC
        gbc.setState(0xa821, 0x96f7, 0x77c0, 0xfac0, 0x7b64, 0xcc82, 0x1, 0x1);
        gbc.writeMem(0xa821, { 0x98 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x96f7, gbc.sp());
        EXPECT(0xa822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa821));
        // 98 00FD
        gbc.setState(0xda2a, 0x4777, 0xe0b0, 0xa5f6, 0x41b6, 0x4923, 0x1, 0x1);
        gbc.writeMem(0xda2a, { 0x98 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4777, gbc.sp());
        EXPECT(0xda2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xda2a));
        // 98 00FE
        gbc.setState(0x8b10, 0xd808, 0xaef0, 0x709f, 0xb419, 0xa949, 0x0, 0x0);
        gbc.writeMem(0x8b10, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8b10));
        // 98 00FF
        gbc.setState(0xd819, 0x6e0a, 0x8070, 0x8d65, 0x7c12, 0xb1f3, 0x1, 0x1);
        gbc.writeMem(0xd819, { 0x98 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6e0a, gbc.sp());
        EXPECT(0xd81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd819));
        // 98 0100
        gbc.setState(0xc091, 0x2072, 0xcc00, 0xee90, 0x56ef, 0x8974, 0x1, 0x1);
        gbc.writeMem(0xc091, { 0x98 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2072, gbc.sp());
        EXPECT(0xc092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc091));
        // 98 0102
        gbc.setState(0xb6f8, 0xc849, 0x1900, 0xda94, 0x6df1, 0xa4fe, 0x1, 0x0);
        gbc.writeMem(0xb6f8, { 0x98 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc849, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb6f8));
        // 98 0103
        gbc.setState(0xd6b4, 0xc3db, 0xf250, 0x5891, 0x7d0, 0x21c2, 0x1, 0x0);
        gbc.writeMem(0xd6b4, { 0x98 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc3db, gbc.sp());
        EXPECT(0xd6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd6b4));
        // 98 0104
        gbc.setState(0xe2dd, 0x395c, 0x1e50, 0x7fb6, 0x22ab, 0x8dcf, 0x1, 0x0);
        gbc.writeMem(0xe2dd, { 0x98 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x395c, gbc.sp());
        EXPECT(0xe2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe2dd));
        // 98 0105
        gbc.setState(0x2f3, 0x8aa2, 0x57a0, 0x4e84, 0xd13d, 0x2b84, 0x1, 0x1);
        gbc.writeMem(0x2f3, { 0x98 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8aa2, gbc.sp());
        EXPECT(0x2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0106
        gbc.setState(0xe023, 0x9405, 0x93b0, 0x6db, 0x1d0a, 0xed12, 0x0, 0x1);
        gbc.writeMem(0xe023, { 0x98 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9405, gbc.sp());
        EXPECT(0xe024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe023));
        // 98 0107
        gbc.setState(0x9250, 0x2365, 0xfcb0, 0xcd2c, 0xac1b, 0xec83, 0x1, 0x0);
        gbc.writeMem(0x9250, { 0x98 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0x9251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9250));
        // 98 0108
        gbc.setState(0xdeb7, 0xbc9c, 0x67f0, 0x362e, 0x106f, 0xfd2c, 0x1, 0x1);
        gbc.writeMem(0xdeb7, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0xdeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdeb7));
        // 98 0109
        gbc.setState(0x90a2, 0xd2b4, 0xe400, 0xcd12, 0xf8d5, 0x5d7e, 0x1, 0x0);
        gbc.writeMem(0x90a2, { 0x98 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd2b4, gbc.sp());
        EXPECT(0x90a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x90a2));
        // 98 010B
        gbc.setState(0xef8e, 0xfdb5, 0x7290, 0x45be, 0xb557, 0x5a1, 0x0, 0x1);
        gbc.writeMem(0xef8e, { 0x98 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfdb5, gbc.sp());
        EXPECT(0xef8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xef8e));
        // 98 010D
        gbc.setState(0xbaab, 0xf94f, 0xfb50, 0x9744, 0x4023, 0xd48f, 0x0, 0x0);
        gbc.writeMem(0xbaab, { 0x98 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf94f, gbc.sp());
        EXPECT(0xbaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbaab));
        // 98 010E
        gbc.setState(0xde3d, 0xeefc, 0xa40, 0xbe99, 0x614f, 0xd38, 0x0, 0x0);
        gbc.writeMem(0xde3d, { 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xeefc, gbc.sp());
        EXPECT(0xde3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xde3d));
        // 98 010F
        gbc.setState(0x971d, 0xe616, 0x3270, 0x4af, 0xde54, 0xf0c6, 0x0, 0x0);
        gbc.writeMem(0x971d, { 0x98 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe616, gbc.sp());
        EXPECT(0x971e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x971d));
        // 98 0110
        gbc.setState(0xb383, 0x3781, 0x1810, 0x5812, 0x9038, 0xc707, 0x1, 0x1);
        gbc.writeMem(0xb383, { 0x98 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3781, gbc.sp());
        EXPECT(0xb384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb383));
        // 98 0112
        gbc.setState(0x4804, 0xbb31, 0x4ea0, 0xfa8e, 0xa9, 0xe9cb, 0x1, 0x1);
        gbc.writeMem(0x4804, { 0x98 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbb31, gbc.sp());
        EXPECT(0x4805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0113
        gbc.setState(0x9c49, 0xce1a, 0x8b20, 0x4b3f, 0x7624, 0xb630, 0x1, 0x1);
        gbc.writeMem(0x9c49, { 0x98 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0x9c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9c49));
        // 98 0114
        gbc.setState(0x9fa4, 0x7147, 0xac40, 0xfe72, 0xdd50, 0x79b1, 0x1, 0x0);
        gbc.writeMem(0x9fa4, { 0x98 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7147, gbc.sp());
        EXPECT(0x9fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9fa4));
        // 98 0115
        gbc.setState(0x51e6, 0x4b9a, 0x4e10, 0xd5c6, 0x77c9, 0xaa1a, 0x0, 0x0);
        gbc.writeMem(0x51e6, { 0x98 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4b9a, gbc.sp());
        EXPECT(0x51e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0116
        gbc.setState(0xbf7, 0xc5d3, 0x22d0, 0xa6c, 0xa3c, 0xde5e, 0x0, 0x1);
        gbc.writeMem(0xbf7, { 0x98 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc5d3, gbc.sp());
        EXPECT(0xbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0117
        gbc.setState(0xcb96, 0xc12, 0x8930, 0x5c24, 0x4f39, 0x9e30, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0x98 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc12, gbc.sp());
        EXPECT(0xcb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcb96));
        // 98 0118
        gbc.setState(0xc0bf, 0x19e8, 0xb770, 0x455b, 0x32cb, 0xed53, 0x1, 0x0);
        gbc.writeMem(0xc0bf, { 0x98 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x19e8, gbc.sp());
        EXPECT(0xc0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc0bf));
        // 98 0119
        gbc.setState(0x666a, 0x7a8f, 0x8410, 0x5dfb, 0x774a, 0x9e22, 0x0, 0x1);
        gbc.writeMem(0x666a, { 0x98 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7a8f, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 011A
        gbc.setState(0x7cc0, 0xfda, 0x28b0, 0x45a2, 0x5887, 0xb2c5, 0x0, 0x0);
        gbc.writeMem(0x7cc0, { 0x98 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfda, gbc.sp());
        EXPECT(0x7cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 011B
        gbc.setState(0x6583, 0x7e4f, 0x4f40, 0xb61a, 0x8cfb, 0xaa0a, 0x0, 0x0);
        gbc.writeMem(0x6583, { 0x98 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7e4f, gbc.sp());
        EXPECT(0x6584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 011C
        gbc.setState(0xb133, 0x68af, 0x8790, 0xcc9b, 0xed97, 0xd38, 0x0, 0x0);
        gbc.writeMem(0xb133, { 0x98 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x68af, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb133));
        // 98 011D
        gbc.setState(0xe22, 0x8135, 0x30c0, 0x3c3f, 0x1ffa, 0xb669, 0x1, 0x1);
        gbc.writeMem(0xe22, { 0x98 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8135, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 011F
        gbc.setState(0x6b0, 0xb8ab, 0xc920, 0x4b5, 0x883, 0xe115, 0x0, 0x1);
        gbc.writeMem(0x6b0, { 0x98 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb8ab, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0120
        gbc.setState(0xc0ec, 0x9be2, 0x96f0, 0x6d52, 0x75b6, 0x5742, 0x1, 0x1);
        gbc.writeMem(0xc0ec, { 0x98 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc0ec));
        // 98 0121
        gbc.setState(0xde16, 0x80b7, 0xa470, 0xcb23, 0xbe7d, 0xcca3, 0x1, 0x1);
        gbc.writeMem(0xde16, { 0x98 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x80b7, gbc.sp());
        EXPECT(0xde17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xde16));
        // 98 0122
        gbc.setState(0xd5a6, 0x5d08, 0x49f0, 0xde6e, 0x519d, 0xbfe4, 0x1, 0x1);
        gbc.writeMem(0xd5a6, { 0x98 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0xd5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd5a6));
        // 98 0123
        gbc.setState(0x8e21, 0x7951, 0xd490, 0x5599, 0x4c6e, 0xab2d, 0x0, 0x1);
        gbc.writeMem(0x8e21, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7951, gbc.sp());
        EXPECT(0x8e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8e21));
        // 98 0124
        gbc.setState(0xb157, 0x199b, 0x78c0, 0x9fba, 0xbb83, 0xe3be, 0x0, 0x1);
        gbc.writeMem(0xb157, { 0x98 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x199b, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb157));
        // 98 0125
        gbc.setState(0xbcbf, 0xd84d, 0x5970, 0x81ed, 0x7219, 0x67b4, 0x0, 0x1);
        gbc.writeMem(0xbcbf, { 0x98 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd84d, gbc.sp());
        EXPECT(0xbcc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbcbf));
        // 98 0126
        gbc.setState(0x4450, 0xd5a7, 0xe600, 0x556d, 0x8d13, 0x2605, 0x1, 0x1);
        gbc.writeMem(0x4450, { 0x98 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd5a7, gbc.sp());
        EXPECT(0x4451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0127
        gbc.setState(0xaa52, 0xb096, 0x7940, 0x67ce, 0x11eb, 0xbf7c, 0x1, 0x0);
        gbc.writeMem(0xaa52, { 0x98 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb096, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaa52));
        // 98 0128
        gbc.setState(0x9dde, 0x6c35, 0xe8d0, 0xfafc, 0x4a2a, 0xcddc, 0x0, 0x1);
        gbc.writeMem(0x9dde, { 0x98 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0x9ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9dde));
        // 98 0129
        gbc.setState(0x3148, 0x5fa9, 0x790, 0x67ec, 0x480c, 0x19c8, 0x0, 0x1);
        gbc.writeMem(0x3148, { 0x98 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5fa9, gbc.sp());
        EXPECT(0x3149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 012A
        gbc.setState(0x1919, 0x9929, 0x72e0, 0x569a, 0xd3a0, 0xc0d9, 0x1, 0x1);
        gbc.writeMem(0x1919, { 0x98 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0x191a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 012B
        gbc.setState(0x1346, 0xdf2f, 0xa560, 0x1e46, 0xaed1, 0xa478, 0x0, 0x1);
        gbc.writeMem(0x1346, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0x1347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 012C
        gbc.setState(0x5e55, 0x63e1, 0xf330, 0x9212, 0x45c7, 0xe0c7, 0x0, 0x0);
        gbc.writeMem(0x5e55, { 0x98 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x63e1, gbc.sp());
        EXPECT(0x5e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 012D
        gbc.setState(0x35fd, 0xde36, 0xee40, 0xb770, 0xb172, 0x36, 0x1, 0x0);
        gbc.writeMem(0x35fd, { 0x98 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 012E
        gbc.setState(0xd673, 0x800c, 0xaa90, 0xbbfc, 0x20cd, 0xf04d, 0x0, 0x1);
        gbc.writeMem(0xd673, { 0x98 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x800c, gbc.sp());
        EXPECT(0xd674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd673));
        // 98 012F
        gbc.setState(0x28e6, 0xece9, 0x1890, 0x678a, 0x2bf6, 0x4667, 0x1, 0x1);
        gbc.writeMem(0x28e6, { 0x98 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0130
        gbc.setState(0xd3eb, 0x1100, 0x9980, 0xa8f1, 0x83ed, 0x3447, 0x0, 0x0);
        gbc.writeMem(0xd3eb, { 0x98 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1100, gbc.sp());
        EXPECT(0xd3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd3eb));
        // 98 0131
        gbc.setState(0x9ba5, 0x7996, 0xae70, 0x1ee2, 0x8eee, 0x1c1f, 0x1, 0x1);
        gbc.writeMem(0x9ba5, { 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0x9ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9ba5));
        // 98 0132
        gbc.setState(0xdaf6, 0x7078, 0x8070, 0x5e15, 0x6e9e, 0x1df0, 0x1, 0x0);
        gbc.writeMem(0xdaf6, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7078, gbc.sp());
        EXPECT(0xdaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdaf6));
        // 98 0133
        gbc.setState(0xece, 0x6da6, 0xe140, 0xaa56, 0xcb62, 0xd204, 0x0, 0x1);
        gbc.writeMem(0xece, { 0x98 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6da6, gbc.sp());
        EXPECT(0xecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0134
        gbc.setState(0xdf44, 0xa456, 0x6040, 0x2cba, 0xacc4, 0xab75, 0x1, 0x1);
        gbc.writeMem(0xdf44, { 0x98 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa456, gbc.sp());
        EXPECT(0xdf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdf44));
        // 98 0135
        gbc.setState(0x14e2, 0xf479, 0xf1b0, 0x18f4, 0x5c4d, 0x9182, 0x1, 0x0);
        gbc.writeMem(0x14e2, { 0x98 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf479, gbc.sp());
        EXPECT(0x14e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0136
        gbc.setState(0x4f43, 0xd6d2, 0xc360, 0x6bd5, 0x2c78, 0x36b6, 0x1, 0x0);
        gbc.writeMem(0x4f43, { 0x98 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd6d2, gbc.sp());
        EXPECT(0x4f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0137
        gbc.setState(0xc5fd, 0xecfe, 0x79c0, 0x7360, 0x4e45, 0x7e64, 0x1, 0x0);
        gbc.writeMem(0xc5fd, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0xc5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc5fd));
        // 98 0138
        gbc.setState(0x78a, 0x5d02, 0xba70, 0x881b, 0xa8cf, 0xf60d, 0x0, 0x1);
        gbc.writeMem(0x78a, { 0x98 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5d02, gbc.sp());
        EXPECT(0x78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0139
        gbc.setState(0xa613, 0xf732, 0x7a90, 0xb2a2, 0x2b9f, 0x2ecc, 0x0, 0x1);
        gbc.writeMem(0xa613, { 0x98 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0xa614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa613));
        // 98 013A
        gbc.setState(0xb30f, 0x584e, 0xee0, 0x65e3, 0x50c4, 0x2d6c, 0x0, 0x0);
        gbc.writeMem(0xb30f, { 0x98 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x584e, gbc.sp());
        EXPECT(0xb310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb30f));
        // 98 013B
        gbc.setState(0x2397, 0x9cc, 0x4880, 0xc5e, 0x32cb, 0x413, 0x1, 0x1);
        gbc.writeMem(0x2397, { 0x98 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9cc, gbc.sp());
        EXPECT(0x2398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 013C
        gbc.setState(0x449d, 0x8e34, 0x83e0, 0x1ac8, 0x1e3b, 0xafd3, 0x1, 0x1);
        gbc.writeMem(0x449d, { 0x98 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8e34, gbc.sp());
        EXPECT(0x449e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 013D
        gbc.setState(0x3779, 0x459b, 0x2020, 0x7efd, 0xd7f7, 0x5d38, 0x1, 0x1);
        gbc.writeMem(0x3779, { 0x98 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x459b, gbc.sp());
        EXPECT(0x377a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 013E
        gbc.setState(0x44dc, 0xcf29, 0x8980, 0x8d90, 0x20d4, 0xf9eb, 0x0, 0x0);
        gbc.writeMem(0x44dc, { 0x98 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcf29, gbc.sp());
        EXPECT(0x44dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 013F
        gbc.setState(0xc7de, 0x31ac, 0x4a0, 0x273d, 0x83ff, 0x152, 0x0, 0x1);
        gbc.writeMem(0xc7de, { 0x98 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x31ac, gbc.sp());
        EXPECT(0xc7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc7de));
        // 98 0140
        gbc.setState(0x1b8a, 0xa04a, 0xab90, 0x94ba, 0xdf2d, 0x24d1, 0x1, 0x1);
        gbc.writeMem(0x1b8a, { 0x98 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa04a, gbc.sp());
        EXPECT(0x1b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0141
        gbc.setState(0x74ec, 0x7c73, 0xbc30, 0x4650, 0x36d7, 0x51ec, 0x1, 0x1);
        gbc.writeMem(0x74ec, { 0x98 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7c73, gbc.sp());
        EXPECT(0x74ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0142
        gbc.setState(0xaab5, 0x3849, 0x1e0, 0x930e, 0xfd48, 0x2cd, 0x1, 0x0);
        gbc.writeMem(0xaab5, { 0x98 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3849, gbc.sp());
        EXPECT(0xaab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaab5));
        // 98 0143
        gbc.setState(0x9583, 0x31fd, 0xfbf0, 0x7057, 0xf4bf, 0x56bf, 0x0, 0x1);
        gbc.writeMem(0x9583, { 0x98 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9583));
        // 98 0144
        gbc.setState(0xe1dc, 0xfcb0, 0x1a00, 0x9a1f, 0xd3d7, 0x6ae8, 0x0, 0x1);
        gbc.writeMem(0xe1dc, { 0x98 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfcb0, gbc.sp());
        EXPECT(0xe1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe1dc));
        // 98 0145
        gbc.setState(0xfae, 0xd1c8, 0xf210, 0x9a66, 0x6a98, 0x3300, 0x0, 0x1);
        gbc.writeMem(0xfae, { 0x98 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0146
        gbc.setState(0xc86f, 0xd1c2, 0xf350, 0xe721, 0xe7a9, 0x8863, 0x1, 0x0);
        gbc.writeMem(0xc86f, { 0x98 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd1c2, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc86f));
        // 98 0147
        gbc.setState(0x9019, 0x6206, 0x3b50, 0x5004, 0x3967, 0xbda1, 0x1, 0x1);
        gbc.writeMem(0x9019, { 0x98 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6206, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9019));
        // 98 0148
        gbc.setState(0xc45d, 0x6f2d, 0xa300, 0x4f27, 0x123f, 0xb0a9, 0x0, 0x1);
        gbc.writeMem(0xc45d, { 0x98 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc45d));
        // 98 0149
        gbc.setState(0xb9a1, 0x7594, 0x3c30, 0xa3ef, 0x129c, 0xaf80, 0x1, 0x1);
        gbc.writeMem(0xb9a1, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7594, gbc.sp());
        EXPECT(0xb9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb9a1));
        // 98 014A
        gbc.setState(0xa592, 0xabcb, 0x1930, 0x4b8b, 0x9c68, 0xb418, 0x1, 0x1);
        gbc.writeMem(0xa592, { 0x98 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xabcb, gbc.sp());
        EXPECT(0xa593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa592));
        // 98 014B
        gbc.setState(0xbb56, 0xc511, 0x4960, 0xec9f, 0xcb89, 0xf6c7, 0x0, 0x1);
        gbc.writeMem(0xbb56, { 0x98 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc511, gbc.sp());
        EXPECT(0xbb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbb56));
        // 98 014C
        gbc.setState(0x44c4, 0x3182, 0x3390, 0xa448, 0x661d, 0x9d62, 0x1, 0x1);
        gbc.writeMem(0x44c4, { 0x98 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3182, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 014D
        gbc.setState(0xe842, 0x98af, 0x3d20, 0x18df, 0xd3c1, 0xae83, 0x0, 0x1);
        gbc.writeMem(0xe842, { 0x98 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x98af, gbc.sp());
        EXPECT(0xe843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe842));
        // 98 014E
        gbc.setState(0xa7b4, 0xccb4, 0x9710, 0x3cf, 0xbb79, 0x3ff6, 0x1, 0x0);
        gbc.writeMem(0xa7b4, { 0x98 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xccb4, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa7b4));
        // 98 014F
        gbc.setState(0x44b5, 0xed1a, 0xc8a0, 0x4af1, 0x7a14, 0x75f1, 0x0, 0x1);
        gbc.writeMem(0x44b5, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xed1a, gbc.sp());
        EXPECT(0x44b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0150
        gbc.setState(0x327d, 0xa115, 0x6d80, 0x7ea8, 0x438f, 0xecf4, 0x0, 0x1);
        gbc.writeMem(0x327d, { 0x98 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa115, gbc.sp());
        EXPECT(0x327e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0151
        gbc.setState(0xce67, 0xe47d, 0xb910, 0xccd9, 0x53bf, 0x3812, 0x1, 0x0);
        gbc.writeMem(0xce67, { 0x98 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe47d, gbc.sp());
        EXPECT(0xce68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xce67));
        // 98 0152
        gbc.setState(0x7849, 0x412c, 0x3070, 0x7f2a, 0x4aca, 0xad70, 0x0, 0x0);
        gbc.writeMem(0x7849, { 0x98 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x412c, gbc.sp());
        EXPECT(0x784a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0153
        gbc.setState(0x711d, 0xc433, 0x630, 0xe52b, 0xe126, 0xbc45, 0x1, 0x0);
        gbc.writeMem(0x711d, { 0x98 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc433, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0154
        gbc.setState(0x6e51, 0xa232, 0x1350, 0xe37d, 0x6c0, 0xab80, 0x1, 0x0);
        gbc.writeMem(0x6e51, { 0x98 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa232, gbc.sp());
        EXPECT(0x6e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0155
        gbc.setState(0xd2ed, 0x6ed3, 0x85a0, 0xe612, 0xd1ad, 0x47e1, 0x0, 0x1);
        gbc.writeMem(0xd2ed, { 0x98 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6ed3, gbc.sp());
        EXPECT(0xd2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd2ed));
        // 98 0156
        gbc.setState(0x5bbe, 0x823b, 0xd380, 0x7f1c, 0x5ea6, 0xa3c1, 0x0, 0x1);
        gbc.writeMem(0x5bbe, { 0x98 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x823b, gbc.sp());
        EXPECT(0x5bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0158
        gbc.setState(0xe4ff, 0x467, 0x9940, 0xca59, 0xef74, 0xe500, 0x1, 0x0);
        gbc.writeMem(0xe4ff, { 0x98 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x467, gbc.sp());
        EXPECT(0xe500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe4ff));
        // 98 0159
        gbc.setState(0x22cb, 0xba, 0x2b0, 0xc2a4, 0xf55b, 0xeedf, 0x0, 0x0);
        gbc.writeMem(0x22cb, { 0x98 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xba, gbc.sp());
        EXPECT(0x22cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 015A
        gbc.setState(0xaf7, 0x938a, 0xc890, 0xc3a9, 0xa08a, 0xc22f, 0x1, 0x1);
        gbc.writeMem(0xaf7, { 0x98 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x938a, gbc.sp());
        EXPECT(0xaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 015B
        gbc.setState(0xd6c7, 0xf0, 0xbb40, 0x6006, 0xe897, 0xb9b5, 0x0, 0x0);
        gbc.writeMem(0xd6c7, { 0x98 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0xd6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd6c7));
        // 98 015C
        gbc.setState(0x1322, 0x6850, 0xdb40, 0x2fbb, 0xe1fa, 0x84a1, 0x1, 0x1);
        gbc.writeMem(0x1322, { 0x98 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6850, gbc.sp());
        EXPECT(0x1323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 015D
        gbc.setState(0xd0b5, 0xa57a, 0x5250, 0x7f54, 0xe67d, 0x295c, 0x0, 0x1);
        gbc.writeMem(0xd0b5, { 0x98 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa57a, gbc.sp());
        EXPECT(0xd0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd0b5));
        // 98 015E
        gbc.setState(0x2c39, 0xbd19, 0x3eb0, 0xf1fa, 0xcf04, 0x98ea, 0x0, 0x1);
        gbc.writeMem(0x2c39, { 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbd19, gbc.sp());
        EXPECT(0x2c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 015F
        gbc.setState(0x7779, 0xf279, 0x1260, 0x3f55, 0xcbda, 0xc4ba, 0x1, 0x1);
        gbc.writeMem(0x7779, { 0x98 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf279, gbc.sp());
        EXPECT(0x777a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0160
        gbc.setState(0x8b6f, 0xafdf, 0xb6d0, 0x9608, 0xf919, 0x1b61, 0x0, 0x1);
        gbc.writeMem(0x8b6f, { 0x98 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xafdf, gbc.sp());
        EXPECT(0x8b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8b6f));
        // 98 0161
        gbc.setState(0x7f9f, 0xe94c, 0x8d10, 0xe470, 0x4ff0, 0x5d56, 0x0, 0x1);
        gbc.writeMem(0x7f9f, { 0x98 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0x7fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0162
        gbc.setState(0x97e3, 0x4661, 0x77d0, 0x87cd, 0x7603, 0xd3b7, 0x1, 0x1);
        gbc.writeMem(0x97e3, { 0x98 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4661, gbc.sp());
        EXPECT(0x97e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x97e3));
        // 98 0163
        gbc.setState(0x5c4b, 0x855a, 0x320, 0x782b, 0x5fd5, 0xdda9, 0x0, 0x0);
        gbc.writeMem(0x5c4b, { 0x98 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x855a, gbc.sp());
        EXPECT(0x5c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0164
        gbc.setState(0x5c6a, 0x90e5, 0x83d0, 0xe535, 0xcc49, 0x2df6, 0x1, 0x0);
        gbc.writeMem(0x5c6a, { 0x98 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x90e5, gbc.sp());
        EXPECT(0x5c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0165
        gbc.setState(0x5c28, 0xb72, 0x8210, 0x9f5c, 0x9645, 0xfe38, 0x1, 0x0);
        gbc.writeMem(0x5c28, { 0x98 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb72, gbc.sp());
        EXPECT(0x5c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0166
        gbc.setState(0xea4, 0x4853, 0x5920, 0x27af, 0xc0e2, 0xb398, 0x1, 0x1);
        gbc.writeMem(0xea4, { 0x98 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4853, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0167
        gbc.setState(0xbef9, 0x7fb6, 0xf7c0, 0xd49d, 0x99e8, 0x8ad6, 0x0, 0x0);
        gbc.writeMem(0xbef9, { 0x98 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0xbefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbef9));
        // 98 0168
        gbc.setState(0x8a45, 0xce9f, 0x2870, 0x6f6, 0xbb70, 0x59da, 0x1, 0x0);
        gbc.writeMem(0x8a45, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8a45));
        // 98 0169
        gbc.setState(0x1e7f, 0x82ad, 0x1760, 0x6cb2, 0x99c3, 0xaa75, 0x0, 0x0);
        gbc.writeMem(0x1e7f, { 0x98 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x82ad, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 016A
        gbc.setState(0xdfd0, 0xbc10, 0x2bd0, 0x857b, 0x66b9, 0x5a60, 0x1, 0x1);
        gbc.writeMem(0xdfd0, { 0x98 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbc10, gbc.sp());
        EXPECT(0xdfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdfd0));
        // 98 016B
        gbc.setState(0x4d07, 0x651e, 0x5a40, 0xa950, 0xba1b, 0x1d2d, 0x1, 0x0);
        gbc.writeMem(0x4d07, { 0x98 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x651e, gbc.sp());
        EXPECT(0x4d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 016C
        gbc.setState(0x5f13, 0x9da, 0x3a40, 0x71e6, 0xb2c, 0x53e8, 0x0, 0x1);
        gbc.writeMem(0x5f13, { 0x98 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0x5f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 016D
        gbc.setState(0x7697, 0x247, 0x5d90, 0xb8d0, 0x72da, 0x8ba5, 0x0, 0x0);
        gbc.writeMem(0x7697, { 0x98 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x247, gbc.sp());
        EXPECT(0x7698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 016E
        gbc.setState(0x3ef, 0x3067, 0xde10, 0x4ea4, 0xb289, 0x3ab, 0x0, 0x1);
        gbc.writeMem(0x3ef, { 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3067, gbc.sp());
        EXPECT(0x3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 016F
        gbc.setState(0xd1d4, 0xd169, 0xcc10, 0xfeb5, 0xf863, 0xc427, 0x0, 0x1);
        gbc.writeMem(0xd1d4, { 0x98 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd169, gbc.sp());
        EXPECT(0xd1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd1d4));
        // 98 0170
        gbc.setState(0xe501, 0xa7ac, 0x72d0, 0xe1ca, 0xc8f1, 0x567a, 0x1, 0x1);
        gbc.writeMem(0xe501, { 0x98 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa7ac, gbc.sp());
        EXPECT(0xe502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe501));
        // 98 0171
        gbc.setState(0x9ad, 0x9a47, 0xa140, 0x576a, 0xee43, 0xbf68, 0x0, 0x1);
        gbc.writeMem(0x9ad, { 0x98 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9a47, gbc.sp());
        EXPECT(0x9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0172
        gbc.setState(0x5332, 0xfe5b, 0x88d0, 0xea5d, 0x9892, 0x4f5d, 0x1, 0x0);
        gbc.writeMem(0x5332, { 0x98 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfe5b, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0173
        gbc.setState(0xc239, 0xc4a0, 0x29a0, 0x3e6d, 0x86e9, 0xccbb, 0x1, 0x0);
        gbc.writeMem(0xc239, { 0x98 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc4a0, gbc.sp());
        EXPECT(0xc23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc239));
        // 98 0174
        gbc.setState(0x1d7c, 0x33be, 0x5ac0, 0xd120, 0xb8e6, 0x51f4, 0x0, 0x0);
        gbc.writeMem(0x1d7c, { 0x98 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x33be, gbc.sp());
        EXPECT(0x1d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0175
        gbc.setState(0x20db, 0x4f25, 0xdfa0, 0x1bd1, 0xe91c, 0x56f2, 0x1, 0x1);
        gbc.writeMem(0x20db, { 0x98 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4f25, gbc.sp());
        EXPECT(0x20dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0176
        gbc.setState(0x2c6c, 0x48c7, 0x85c0, 0x254b, 0x1492, 0x5c5f, 0x0, 0x0);
        gbc.writeMem(0x2c6c, { 0x98 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x48c7, gbc.sp());
        EXPECT(0x2c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0177
        gbc.setState(0x1193, 0x9c2f, 0xbb60, 0xd699, 0xccac, 0x6d95, 0x0, 0x0);
        gbc.writeMem(0x1193, { 0x98 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9c2f, gbc.sp());
        EXPECT(0x1194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0178
        gbc.setState(0xe1e1, 0xd107, 0xb610, 0x67ec, 0x5e44, 0x301e, 0x1, 0x1);
        gbc.writeMem(0xe1e1, { 0x98 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd107, gbc.sp());
        EXPECT(0xe1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe1e1));
        // 98 0179
        gbc.setState(0x2b4a, 0x44ff, 0xa410, 0xb42a, 0x4318, 0xe925, 0x0, 0x1);
        gbc.writeMem(0x2b4a, { 0x98 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x44ff, gbc.sp());
        EXPECT(0x2b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 017A
        gbc.setState(0x700e, 0x89a1, 0x8870, 0x9fe, 0x95ad, 0x10a4, 0x1, 0x1);
        gbc.writeMem(0x700e, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x89a1, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 017B
        gbc.setState(0xb361, 0x2be4, 0xa400, 0x4ed0, 0x836f, 0xeb5c, 0x1, 0x0);
        gbc.writeMem(0xb361, { 0x98 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2be4, gbc.sp());
        EXPECT(0xb362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb361));
        // 98 017C
        gbc.setState(0xcd, 0xee93, 0x4520, 0xb82a, 0xa9c1, 0x98a8, 0x1, 0x1);
        gbc.writeMem(0xcd, { 0x98 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xee93, gbc.sp());
        EXPECT(0xce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 017D
        gbc.setState(0x76f2, 0x40b0, 0x31d0, 0x2f39, 0xcee, 0x5c87, 0x0, 0x1);
        gbc.writeMem(0x76f2, { 0x98 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x40b0, gbc.sp());
        EXPECT(0x76f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 017E
        gbc.setState(0x5dc0, 0xc0e4, 0xcf90, 0x88ab, 0x1b37, 0x3091, 0x1, 0x1);
        gbc.writeMem(0x5dc0, { 0x98 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc0e4, gbc.sp());
        EXPECT(0x5dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 017F
        gbc.setState(0x86d7, 0x27fd, 0xc500, 0x47fe, 0xff21, 0x42c9, 0x0, 0x1);
        gbc.writeMem(0x86d7, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x27fd, gbc.sp());
        EXPECT(0x86d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x86d7));
        // 98 0180
        gbc.setState(0xa354, 0x8821, 0x9ae0, 0xa1cf, 0xec32, 0xb434, 0x0, 0x1);
        gbc.writeMem(0xa354, { 0x98 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8821, gbc.sp());
        EXPECT(0xa355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa354));
        // 98 0181
        gbc.setState(0x9340, 0x8cae, 0x5590, 0xcb75, 0xaea, 0xcba4, 0x0, 0x0);
        gbc.writeMem(0x9340, { 0x98 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8cae, gbc.sp());
        EXPECT(0x9341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9340));
        // 98 0182
        gbc.setState(0xa3c8, 0x36ff, 0xe5c0, 0x6e16, 0xfeae, 0x99ca, 0x0, 0x1);
        gbc.writeMem(0xa3c8, { 0x98 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0xa3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa3c8));
        // 98 0183
        gbc.setState(0xab23, 0x4d17, 0x30d0, 0xff75, 0xa89e, 0x5038, 0x0, 0x0);
        gbc.writeMem(0xab23, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4d17, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xab23));
        // 98 0184
        gbc.setState(0x4c47, 0x5f78, 0x3680, 0xd64, 0xf456, 0x424f, 0x1, 0x1);
        gbc.writeMem(0x4c47, { 0x98 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5f78, gbc.sp());
        EXPECT(0x4c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0185
        gbc.setState(0x2989, 0xed3a, 0xaab0, 0xafa7, 0x6d06, 0x1519, 0x1, 0x0);
        gbc.writeMem(0x2989, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0x298a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0186
        gbc.setState(0x6163, 0xc6d0, 0x8fb0, 0xd5cf, 0x590c, 0x1bce, 0x1, 0x1);
        gbc.writeMem(0x6163, { 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc6d0, gbc.sp());
        EXPECT(0x6164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0187
        gbc.setState(0x32e9, 0x4343, 0x1460, 0x38b1, 0x8a4f, 0xe8a4, 0x0, 0x1);
        gbc.writeMem(0x32e9, { 0x98 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4343, gbc.sp());
        EXPECT(0x32ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0189
        gbc.setState(0x5f8e, 0x7942, 0xf900, 0x52c9, 0x76cc, 0x127a, 0x0, 0x1);
        gbc.writeMem(0x5f8e, { 0x98 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7942, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 018A
        gbc.setState(0x623d, 0xdd2a, 0x4390, 0xb71f, 0xd9c1, 0xf6b8, 0x0, 0x1);
        gbc.writeMem(0x623d, { 0x98 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdd2a, gbc.sp());
        EXPECT(0x623e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 018B
        gbc.setState(0x1592, 0x4bc7, 0xee40, 0x44d7, 0x8df, 0x5283, 0x0, 0x0);
        gbc.writeMem(0x1592, { 0x98 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4bc7, gbc.sp());
        EXPECT(0x1593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 018C
        gbc.setState(0x27ff, 0xa84, 0x3fb0, 0x59ee, 0xcbe2, 0x6b27, 0x0, 0x0);
        gbc.writeMem(0x27ff, { 0x98 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa84, gbc.sp());
        EXPECT(0x2800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 018D
        gbc.setState(0x705d, 0x3266, 0x6b20, 0x6fe6, 0x2ab6, 0xd16c, 0x1, 0x1);
        gbc.writeMem(0x705d, { 0x98 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3266, gbc.sp());
        EXPECT(0x705e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 018E
        gbc.setState(0xbaa3, 0x1ee4, 0x6000, 0xe202, 0x3a, 0xc688, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1ee4, gbc.sp());
        EXPECT(0xbaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbaa3));
        // 98 018F
        gbc.setState(0xea01, 0x9ffc, 0xaf60, 0xba86, 0x8bc2, 0xd7ff, 0x0, 0x0);
        gbc.writeMem(0xea01, { 0x98 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9ffc, gbc.sp());
        EXPECT(0xea02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xea01));
        // 98 0190
        gbc.setState(0x45, 0x15df, 0x61c0, 0xe7d4, 0xbb0d, 0x6e6d, 0x0, 0x1);
        gbc.writeMem(0x45, { 0x98 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0x46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0191
        gbc.setState(0xa828, 0x5c53, 0x4df0, 0xcb04, 0x6ba4, 0x882d, 0x1, 0x1);
        gbc.writeMem(0xa828, { 0x98 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5c53, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa828));
        // 98 0192
        gbc.setState(0xd042, 0x699b, 0x8310, 0x5d29, 0x8a60, 0x4b6d, 0x1, 0x1);
        gbc.writeMem(0xd042, { 0x98 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0xd043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd042));
        // 98 0193
        gbc.setState(0x6901, 0xa255, 0xb7c0, 0x8b70, 0x2d25, 0xa025, 0x0, 0x0);
        gbc.writeMem(0x6901, { 0x98 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa255, gbc.sp());
        EXPECT(0x6902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0194
        gbc.setState(0x4d09, 0x3ec8, 0x1f00, 0x22c, 0xcf0, 0x45f5, 0x0, 0x1);
        gbc.writeMem(0x4d09, { 0x98 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3ec8, gbc.sp());
        EXPECT(0x4d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0195
        gbc.setState(0x70ff, 0x6d2f, 0xbb60, 0x4a34, 0x69a5, 0x447, 0x1, 0x0);
        gbc.writeMem(0x70ff, { 0x98 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6d2f, gbc.sp());
        EXPECT(0x7100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0196
        gbc.setState(0xb98d, 0xf9ba, 0x8280, 0x3031, 0x8d30, 0x1d31, 0x0, 0x0);
        gbc.writeMem(0xb98d, { 0x98 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf9ba, gbc.sp());
        EXPECT(0xb98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb98d));
        // 98 0197
        gbc.setState(0x6d1f, 0xaf2a, 0x4fb0, 0xc8c4, 0x9d32, 0x636f, 0x0, 0x1);
        gbc.writeMem(0x6d1f, { 0x98 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaf2a, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0198
        gbc.setState(0x5e06, 0x4831, 0x24f0, 0x7486, 0x860b, 0xd634, 0x0, 0x1);
        gbc.writeMem(0x5e06, { 0x98 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4831, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0199
        gbc.setState(0x7711, 0xadb1, 0xb920, 0x237b, 0x10, 0x9ac3, 0x0, 0x0);
        gbc.writeMem(0x7711, { 0x98 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xadb1, gbc.sp());
        EXPECT(0x7712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 019A
        gbc.setState(0xc817, 0x93ba, 0x32d0, 0x71ee, 0x792d, 0x1134, 0x1, 0x1);
        gbc.writeMem(0xc817, { 0x98 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x93ba, gbc.sp());
        EXPECT(0xc818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc817));
        // 98 019B
        gbc.setState(0xd034, 0xc4e8, 0xeb10, 0x554f, 0xcdb, 0x3989, 0x0, 0x1);
        gbc.writeMem(0xd034, { 0x98 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc4e8, gbc.sp());
        EXPECT(0xd035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd034));
        // 98 019C
        gbc.setState(0x6b35, 0xb8c, 0x2f70, 0x2bdb, 0x8573, 0xc188, 0x0, 0x1);
        gbc.writeMem(0x6b35, { 0x98 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb8c, gbc.sp());
        EXPECT(0x6b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 019D
        gbc.setState(0xfb8, 0x8446, 0x68a0, 0x1b17, 0xb4b, 0xa72d, 0x1, 0x0);
        gbc.writeMem(0xfb8, { 0x98 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8446, gbc.sp());
        EXPECT(0xfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 019E
        gbc.setState(0x90d8, 0xa956, 0xd670, 0x537b, 0xdac, 0x17c4, 0x1, 0x0);
        gbc.writeMem(0x90d8, { 0x98 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa956, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x90d8));
        // 98 019F
        gbc.setState(0xd722, 0x3431, 0xeb90, 0xa5a3, 0xb4a7, 0x23e9, 0x0, 0x1);
        gbc.writeMem(0xd722, { 0x98 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3431, gbc.sp());
        EXPECT(0xd723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd722));
        // 98 01A0
        gbc.setState(0x2100, 0xf5b, 0x4a20, 0x608b, 0x5f6f, 0xe5a4, 0x0, 0x1);
        gbc.writeMem(0x2100, { 0x98 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf5b, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01A1
        gbc.setState(0xae65, 0x9b7b, 0xb6b0, 0x5dcb, 0xc5ec, 0x70fc, 0x1, 0x0);
        gbc.writeMem(0xae65, { 0x98 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9b7b, gbc.sp());
        EXPECT(0xae66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xae65));
        // 98 01A2
        gbc.setState(0x3df4, 0xd3fe, 0xe230, 0x208b, 0x48e9, 0xe988, 0x1, 0x1);
        gbc.writeMem(0x3df4, { 0x98 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd3fe, gbc.sp());
        EXPECT(0x3df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01A3
        gbc.setState(0x2541, 0x25c6, 0x3560, 0xbf53, 0xe669, 0x92, 0x1, 0x1);
        gbc.writeMem(0x2541, { 0x98 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x25c6, gbc.sp());
        EXPECT(0x2542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01A4
        gbc.setState(0xa755, 0x534f, 0x6cc0, 0xd1ce, 0x5fa2, 0xa059, 0x1, 0x0);
        gbc.writeMem(0xa755, { 0x98 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x534f, gbc.sp());
        EXPECT(0xa756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa755));
        // 98 01A5
        gbc.setState(0xdd7e, 0x5a74, 0x71c0, 0x9fbb, 0x848f, 0xeb43, 0x1, 0x0);
        gbc.writeMem(0xdd7e, { 0x98 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0xdd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdd7e));
        // 98 01A6
        gbc.setState(0x7e9d, 0x4198, 0x6390, 0x36af, 0xa39b, 0x61cd, 0x0, 0x1);
        gbc.writeMem(0x7e9d, { 0x98 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4198, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01A7
        gbc.setState(0x188, 0xde3e, 0x4f30, 0xb99a, 0x2d0b, 0x421, 0x0, 0x0);
        gbc.writeMem(0x188, { 0x98 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xde3e, gbc.sp());
        EXPECT(0x189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01A8
        gbc.setState(0x61f1, 0x8491, 0x14a0, 0x4337, 0x2d98, 0x616b, 0x1, 0x1);
        gbc.writeMem(0x61f1, { 0x98 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8491, gbc.sp());
        EXPECT(0x61f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01A9
        gbc.setState(0x6674, 0xbeaa, 0xdaf0, 0xcd0e, 0x7d4f, 0xfe67, 0x0, 0x0);
        gbc.writeMem(0x6674, { 0x98 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbeaa, gbc.sp());
        EXPECT(0x6675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01AA
        gbc.setState(0x4a11, 0xd68a, 0xc710, 0x896d, 0x8a78, 0x1c1, 0x0, 0x0);
        gbc.writeMem(0x4a11, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd68a, gbc.sp());
        EXPECT(0x4a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01AB
        gbc.setState(0xb5df, 0x3115, 0x6710, 0x3d7f, 0xc123, 0x4f4e, 0x0, 0x0);
        gbc.writeMem(0xb5df, { 0x98 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0xb5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb5df));
        // 98 01AC
        gbc.setState(0xe0bd, 0xa09, 0x4800, 0x1dae, 0x499c, 0x5542, 0x0, 0x0);
        gbc.writeMem(0xe0bd, { 0x98 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa09, gbc.sp());
        EXPECT(0xe0be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe0bd));
        // 98 01AD
        gbc.setState(0x5ea6, 0xdc22, 0x4460, 0x7cb3, 0xa27c, 0xedd1, 0x1, 0x0);
        gbc.writeMem(0x5ea6, { 0x98 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdc22, gbc.sp());
        EXPECT(0x5ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01AE
        gbc.setState(0x2839, 0xfb3, 0x8cf0, 0x2d9c, 0xbdee, 0x6530, 0x1, 0x0);
        gbc.writeMem(0x2839, { 0x98 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfb3, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01AF
        gbc.setState(0xcfee, 0x8441, 0x13d0, 0xddd2, 0xfc58, 0x33fd, 0x1, 0x1);
        gbc.writeMem(0xcfee, { 0x98 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8441, gbc.sp());
        EXPECT(0xcfef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcfee));
        // 98 01B0
        gbc.setState(0xa758, 0x768d, 0x9300, 0xa224, 0x6810, 0xad3c, 0x1, 0x1);
        gbc.writeMem(0xa758, { 0x98 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x768d, gbc.sp());
        EXPECT(0xa759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa758));
        // 98 01B1
        gbc.setState(0x221, 0xbcdf, 0xedd0, 0x1387, 0x75cc, 0xbc44, 0x1, 0x0);
        gbc.writeMem(0x221, { 0x98 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbcdf, gbc.sp());
        EXPECT(0x222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01B3
        gbc.setState(0xb6a7, 0xca9e, 0xadd0, 0x20d4, 0x7cbb, 0xa57e, 0x1, 0x1);
        gbc.writeMem(0xb6a7, { 0x98 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xca9e, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb6a7));
        // 98 01B4
        gbc.setState(0x9089, 0xfe58, 0x6a40, 0x70d6, 0x226b, 0xfb96, 0x0, 0x0);
        gbc.writeMem(0x9089, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfe58, gbc.sp());
        EXPECT(0x908a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9089));
        // 98 01B5
        gbc.setState(0xbdd, 0xc18d, 0xd5f0, 0x1306, 0x2d6f, 0x5169, 0x0, 0x1);
        gbc.writeMem(0xbdd, { 0x98 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc18d, gbc.sp());
        EXPECT(0xbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01B6
        gbc.setState(0x71b, 0x8245, 0x7380, 0xbecf, 0x2976, 0x3f6a, 0x0, 0x0);
        gbc.writeMem(0x71b, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8245, gbc.sp());
        EXPECT(0x71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01B7
        gbc.setState(0x2c62, 0x66f6, 0x7270, 0x29f7, 0xdda7, 0xa47, 0x1, 0x1);
        gbc.writeMem(0x2c62, { 0x98 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x66f6, gbc.sp());
        EXPECT(0x2c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01B8
        gbc.setState(0x3b00, 0xba38, 0x5410, 0xd52f, 0x8aca, 0xe64f, 0x1, 0x1);
        gbc.writeMem(0x3b00, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xba38, gbc.sp());
        EXPECT(0x3b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01B9
        gbc.setState(0x877e, 0xabff, 0xde40, 0x83d4, 0x79bf, 0x166c, 0x1, 0x1);
        gbc.writeMem(0x877e, { 0x98 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xabff, gbc.sp());
        EXPECT(0x877f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x877e));
        // 98 01BA
        gbc.setState(0x34a1, 0xce4f, 0x8f70, 0x6aae, 0x61b7, 0x7cf6, 0x0, 0x0);
        gbc.writeMem(0x34a1, { 0x98 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xce4f, gbc.sp());
        EXPECT(0x34a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01BB
        gbc.setState(0x722d, 0xf3ce, 0x11a0, 0x623a, 0x6ba3, 0x5fe, 0x0, 0x1);
        gbc.writeMem(0x722d, { 0x98 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf3ce, gbc.sp());
        EXPECT(0x722e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01BC
        gbc.setState(0x5b4d, 0x83a6, 0xc050, 0xc24, 0xd0ab, 0xbed7, 0x0, 0x0);
        gbc.writeMem(0x5b4d, { 0x98 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x83a6, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01BD
        gbc.setState(0x77e5, 0x4e2b, 0xf940, 0x5ce6, 0x617e, 0x2433, 0x1, 0x1);
        gbc.writeMem(0x77e5, { 0x98 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4e2b, gbc.sp());
        EXPECT(0x77e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01BE
        gbc.setState(0x85b9, 0xca33, 0x5f50, 0xc912, 0x230e, 0x65df, 0x1, 0x1);
        gbc.writeMem(0x85b9, { 0x98 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0x85ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x85b9));
        // 98 01BF
        gbc.setState(0x3fff, 0xa71a, 0xa50, 0x820c, 0x53fb, 0xb904, 0x1, 0x0);
        gbc.writeMem(0x3fff, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0x4000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01C3
        gbc.setState(0x861e, 0x4533, 0x73b0, 0xc48c, 0xac85, 0xc1a2, 0x1, 0x0);
        gbc.writeMem(0x861e, { 0x98 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4533, gbc.sp());
        EXPECT(0x861f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x861e));
        // 98 01C4
        gbc.setState(0x52e, 0xbf78, 0x3ef0, 0x7b94, 0x3639, 0xef79, 0x1, 0x0);
        gbc.writeMem(0x52e, { 0x98 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbf78, gbc.sp());
        EXPECT(0x52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01C5
        gbc.setState(0x3d37, 0x50c2, 0x73f0, 0xf685, 0x111b, 0xed33, 0x0, 0x1);
        gbc.writeMem(0x3d37, { 0x98 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x50c2, gbc.sp());
        EXPECT(0x3d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01C6
        gbc.setState(0x3385, 0xaf3f, 0x97e0, 0x7e28, 0xbe17, 0x55ca, 0x0, 0x1);
        gbc.writeMem(0x3385, { 0x98 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaf3f, gbc.sp());
        EXPECT(0x3386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01C7
        gbc.setState(0x9ac0, 0xc55c, 0x23f0, 0x28f9, 0x6906, 0x3049, 0x0, 0x1);
        gbc.writeMem(0x9ac0, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc55c, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9ac0));
        // 98 01C8
        gbc.setState(0x5868, 0x9480, 0xeec0, 0xe4a, 0x9b23, 0xe73f, 0x1, 0x0);
        gbc.writeMem(0x5868, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9480, gbc.sp());
        EXPECT(0x5869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01C9
        gbc.setState(0xaca1, 0x621e, 0xc2e0, 0xd572, 0x86a7, 0x90b, 0x1, 0x1);
        gbc.writeMem(0xaca1, { 0x98 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x621e, gbc.sp());
        EXPECT(0xaca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaca1));
        // 98 01CA
        gbc.setState(0xb3ef, 0x3e64, 0xedc0, 0x5b6d, 0x3bcf, 0xabf9, 0x0, 0x0);
        gbc.writeMem(0xb3ef, { 0x98 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3e64, gbc.sp());
        EXPECT(0xb3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb3ef));
        // 98 01CB
        gbc.setState(0xf4d, 0xdf15, 0x64b0, 0x78f3, 0x3129, 0xb3b8, 0x1, 0x0);
        gbc.writeMem(0xf4d, { 0x98 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdf15, gbc.sp());
        EXPECT(0xf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01CC
        gbc.setState(0x49d2, 0x64c1, 0x8850, 0x3b7d, 0x131f, 0xe12, 0x0, 0x1);
        gbc.writeMem(0x49d2, { 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x64c1, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01CD
        gbc.setState(0x8714, 0x5171, 0x7080, 0x75e9, 0x715, 0x72a0, 0x0, 0x0);
        gbc.writeMem(0x8714, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5171, gbc.sp());
        EXPECT(0x8715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8714));
        // 98 01CE
        gbc.setState(0xb52f, 0x7923, 0xb2b0, 0x52da, 0xb7df, 0xdc40, 0x0, 0x0);
        gbc.writeMem(0xb52f, { 0x98 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7923, gbc.sp());
        EXPECT(0xb530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb52f));
        // 98 01CF
        gbc.setState(0xce3f, 0x77ce, 0x870, 0x30c6, 0x79c0, 0x3f11, 0x1, 0x1);
        gbc.writeMem(0xce3f, { 0x98 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x77ce, gbc.sp());
        EXPECT(0xce40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xce3f));
        // 98 01D0
        gbc.setState(0x1239, 0xc66a, 0x7370, 0x3fe, 0xd0a0, 0xe977, 0x1, 0x1);
        gbc.writeMem(0x1239, { 0x98 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc66a, gbc.sp());
        EXPECT(0x123a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01D2
        gbc.setState(0x857, 0x9482, 0x2930, 0x7cfc, 0xa736, 0x963, 0x0, 0x0);
        gbc.writeMem(0x857, { 0x98 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9482, gbc.sp());
        EXPECT(0x858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01D3
        gbc.setState(0xda35, 0xf889, 0xa0d0, 0x5a72, 0x1304, 0x2cf, 0x0, 0x1);
        gbc.writeMem(0xda35, { 0x98 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf889, gbc.sp());
        EXPECT(0xda36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xda35));
        // 98 01D4
        gbc.setState(0x9993, 0xe7f6, 0xcaf0, 0x3799, 0x8cc6, 0xa735, 0x0, 0x1);
        gbc.writeMem(0x9993, { 0x98 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe7f6, gbc.sp());
        EXPECT(0x9994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9993));
        // 98 01D5
        gbc.setState(0x57a9, 0x20d0, 0x2520, 0xac8b, 0xfe6b, 0xb3c9, 0x0, 0x1);
        gbc.writeMem(0x57a9, { 0x98 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x20d0, gbc.sp());
        EXPECT(0x57aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01D6
        gbc.setState(0x5890, 0xcca7, 0x44b0, 0x4f5a, 0x8160, 0x9818, 0x1, 0x0);
        gbc.writeMem(0x5890, { 0x98 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcca7, gbc.sp());
        EXPECT(0x5891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01D7
        gbc.setState(0x7312, 0xd5f0, 0xc800, 0x9a3e, 0x7d3c, 0x8378, 0x1, 0x0);
        gbc.writeMem(0x7312, { 0x98 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd5f0, gbc.sp());
        EXPECT(0x7313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01D8
        gbc.setState(0x3e01, 0x3bb5, 0xf310, 0x34cf, 0xe03b, 0x49eb, 0x0, 0x1);
        gbc.writeMem(0x3e01, { 0x98 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3bb5, gbc.sp());
        EXPECT(0x3e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01D9
        gbc.setState(0xd489, 0xb2e4, 0xa980, 0xcd8e, 0x6e93, 0x448e, 0x1, 0x0);
        gbc.writeMem(0xd489, { 0x98 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb2e4, gbc.sp());
        EXPECT(0xd48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd489));
        // 98 01DA
        gbc.setState(0x6037, 0xdcb3, 0xd700, 0x2519, 0xb0dd, 0xc09a, 0x0, 0x0);
        gbc.writeMem(0x6037, { 0x98 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0x6038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01DB
        gbc.setState(0x3a91, 0x7f0a, 0x1a40, 0xe8f6, 0x5414, 0x9fb8, 0x1, 0x0);
        gbc.writeMem(0x3a91, { 0x98 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0x3a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01DC
        gbc.setState(0xbcd5, 0x1ae0, 0xe560, 0x768f, 0x73ea, 0xdf9, 0x1, 0x1);
        gbc.writeMem(0xbcd5, { 0x98 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1ae0, gbc.sp());
        EXPECT(0xbcd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbcd5));
        // 98 01DD
        gbc.setState(0xb547, 0x5a2c, 0xf570, 0x2d51, 0x7757, 0x4102, 0x1, 0x1);
        gbc.writeMem(0xb547, { 0x98 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5a2c, gbc.sp());
        EXPECT(0xb548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb547));
        // 98 01DF
        gbc.setState(0x76ec, 0x9c7f, 0x8250, 0xd2e6, 0x2df9, 0x3a74, 0x0, 0x1);
        gbc.writeMem(0x76ec, { 0x98 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9c7f, gbc.sp());
        EXPECT(0x76ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01E0
        gbc.setState(0x6671, 0x1ae, 0x3b20, 0xa9cc, 0x87eb, 0x2fe5, 0x0, 0x1);
        gbc.writeMem(0x6671, { 0x98 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1ae, gbc.sp());
        EXPECT(0x6672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01E1
        gbc.setState(0x3898, 0x5280, 0x6380, 0xb38f, 0x8eaa, 0x8203, 0x0, 0x1);
        gbc.writeMem(0x3898, { 0x98 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5280, gbc.sp());
        EXPECT(0x3899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01E3
        gbc.setState(0x9172, 0xd765, 0xeaa0, 0x43e3, 0x1186, 0x87f1, 0x1, 0x0);
        gbc.writeMem(0x9172, { 0x98 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9172));
        // 98 01E4
        gbc.setState(0x4edb, 0xc301, 0xe8a0, 0x2691, 0xff60, 0x190d, 0x0, 0x0);
        gbc.writeMem(0x4edb, { 0x98 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc301, gbc.sp());
        EXPECT(0x4edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01E5
        gbc.setState(0xbe7b, 0x28f8, 0x8a00, 0xe858, 0xe415, 0x6f3b, 0x1, 0x0);
        gbc.writeMem(0xbe7b, { 0x98 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x28f8, gbc.sp());
        EXPECT(0xbe7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbe7b));
        // 98 01E6
        gbc.setState(0x2c60, 0x20df, 0x5a60, 0xb90, 0x4476, 0xb46a, 0x0, 0x1);
        gbc.writeMem(0x2c60, { 0x98 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x20df, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01E7
        gbc.setState(0x5ab, 0x5e00, 0x1980, 0x7bc3, 0xeab0, 0x3187, 0x1, 0x1);
        gbc.writeMem(0x5ab, { 0x98 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5e00, gbc.sp());
        EXPECT(0x5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01E8
        gbc.setState(0xb0f5, 0x9580, 0xb9c0, 0x81a4, 0xd0c5, 0xd64e, 0x0, 0x0);
        gbc.writeMem(0xb0f5, { 0x98 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9580, gbc.sp());
        EXPECT(0xb0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb0f5));
        // 98 01E9
        gbc.setState(0xd5b0, 0x88fd, 0x6250, 0x8e69, 0xd73f, 0x7bd5, 0x1, 0x0);
        gbc.writeMem(0xd5b0, { 0x98 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x88fd, gbc.sp());
        EXPECT(0xd5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd5b0));
        // 98 01EA
        gbc.setState(0x1012, 0xf08d, 0x3bf0, 0x825e, 0x75f1, 0xe8a0, 0x1, 0x1);
        gbc.writeMem(0x1012, { 0x98 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01EB
        gbc.setState(0x51d4, 0xb732, 0x89d0, 0x1788, 0xfc09, 0x9d32, 0x0, 0x1);
        gbc.writeMem(0x51d4, { 0x98 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb732, gbc.sp());
        EXPECT(0x51d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01EC
        gbc.setState(0x3e7e, 0xe616, 0xc500, 0xe3d8, 0x6f0a, 0x6ca3, 0x1, 0x1);
        gbc.writeMem(0x3e7e, { 0x98 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe616, gbc.sp());
        EXPECT(0x3e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01ED
        gbc.setState(0xe51b, 0xff8b, 0x86b0, 0xb7da, 0xfb1c, 0xbbd, 0x0, 0x0);
        gbc.writeMem(0xe51b, { 0x98 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xff8b, gbc.sp());
        EXPECT(0xe51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe51b));
        // 98 01EE
        gbc.setState(0xbda4, 0xd13e, 0xa650, 0xf543, 0xdb3e, 0xfb99, 0x0, 0x0);
        gbc.writeMem(0xbda4, { 0x98 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd13e, gbc.sp());
        EXPECT(0xbda5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbda4));
        // 98 01EF
        gbc.setState(0x4d71, 0xfa41, 0xaf20, 0xc580, 0x3282, 0x76a2, 0x1, 0x1);
        gbc.writeMem(0x4d71, { 0x98 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfa41, gbc.sp());
        EXPECT(0x4d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01F0
        gbc.setState(0xe4b5, 0x22f0, 0x76c0, 0xa5fc, 0x3fd5, 0x9e2a, 0x0, 0x1);
        gbc.writeMem(0xe4b5, { 0x98 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0xe4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe4b5));
        // 98 01F1
        gbc.setState(0xc8d, 0x8a60, 0xf770, 0x4ced, 0xacb7, 0xfc60, 0x1, 0x0);
        gbc.writeMem(0xc8d, { 0x98 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a60, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01F2
        gbc.setState(0x76f0, 0x5848, 0xa350, 0x511b, 0x862, 0xb6db, 0x0, 0x0);
        gbc.writeMem(0x76f0, { 0x98 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5848, gbc.sp());
        EXPECT(0x76f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01F3
        gbc.setState(0x421f, 0xa02e, 0x2460, 0xa060, 0xaeab, 0x98b6, 0x0, 0x1);
        gbc.writeMem(0x421f, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa02e, gbc.sp());
        EXPECT(0x4220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01F4
        gbc.setState(0xd605, 0x7264, 0x6720, 0xb61c, 0xaa9e, 0xa05d, 0x1, 0x1);
        gbc.writeMem(0xd605, { 0x98 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7264, gbc.sp());
        EXPECT(0xd606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd605));
        // 98 01F5
        gbc.setState(0x37de, 0x9fc9, 0x90a0, 0x49df, 0xc0a6, 0x7953, 0x1, 0x0);
        gbc.writeMem(0x37de, { 0x98 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9fc9, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01F6
        gbc.setState(0xa588, 0x149b, 0x1500, 0xeb2e, 0xb4fb, 0xb66c, 0x1, 0x0);
        gbc.writeMem(0xa588, { 0x98 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x149b, gbc.sp());
        EXPECT(0xa589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa588));
        // 98 01F7
        gbc.setState(0xeccf, 0xae68, 0x2190, 0x795d, 0x1c6c, 0xcd0d, 0x0, 0x1);
        gbc.writeMem(0xeccf, { 0x98 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xae68, gbc.sp());
        EXPECT(0xecd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xeccf));
        // 98 01F8
        gbc.setState(0x8770, 0xe207, 0x4ad0, 0xe585, 0x7209, 0x1b36, 0x0, 0x1);
        gbc.writeMem(0x8770, { 0x98 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe207, gbc.sp());
        EXPECT(0x8771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8770));
        // 98 01F9
        gbc.setState(0x938a, 0xc714, 0xbc70, 0xb6ff, 0x5a24, 0x62dc, 0x1, 0x1);
        gbc.writeMem(0x938a, { 0x98 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc714, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x938a));
        // 98 01FA
        gbc.setState(0x219f, 0xa42f, 0xa0, 0xfa52, 0x61ea, 0x9733, 0x0, 0x1);
        gbc.writeMem(0x219f, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa42f, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 01FB
        gbc.setState(0xcefe, 0xefda, 0xf3c0, 0x721a, 0xe766, 0x1f14, 0x1, 0x1);
        gbc.writeMem(0xcefe, { 0x98 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xefda, gbc.sp());
        EXPECT(0xceff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcefe));
        // 98 01FC
        gbc.setState(0xc85e, 0x774, 0x6410, 0x3f8e, 0x249c, 0xdb30, 0x1, 0x0);
        gbc.writeMem(0xc85e, { 0x98 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x774, gbc.sp());
        EXPECT(0xc85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc85e));
        // 98 01FD
        gbc.setState(0xe7cf, 0x6ffd, 0xe3c0, 0xd57b, 0xfb6c, 0xa087, 0x0, 0x1);
        gbc.writeMem(0xe7cf, { 0x98 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0xe7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe7cf));
        // 98 01FE
        gbc.setState(0x2164, 0xe263, 0xa6f0, 0x1d36, 0xbaa9, 0xf43, 0x0, 0x1);
        gbc.writeMem(0x2164, { 0x98 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe263, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 01FF
        gbc.setState(0x4c46, 0xf9a3, 0xfb0, 0x8fa0, 0xa48, 0x3705, 0x1, 0x0);
        gbc.writeMem(0x4c46, { 0x98 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf9a3, gbc.sp());
        EXPECT(0x4c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0200
        gbc.setState(0x9ec5, 0x30e4, 0x9270, 0x5e84, 0x5be6, 0x8ab4, 0x1, 0x1);
        gbc.writeMem(0x9ec5, { 0x98 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x30e4, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9ec5));
        // 98 0201
        gbc.setState(0x6973, 0x7979, 0x3da0, 0x3ac1, 0x9757, 0x7a5, 0x1, 0x0);
        gbc.writeMem(0x6973, { 0x98 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0x6974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0202
        gbc.setState(0x7394, 0x5a67, 0xa9e0, 0x23c0, 0xbcd7, 0x4588, 0x0, 0x1);
        gbc.writeMem(0x7394, { 0x98 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5a67, gbc.sp());
        EXPECT(0x7395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0203
        gbc.setState(0x7e00, 0x674f, 0x5ae0, 0x75d0, 0xd11d, 0x6da, 0x0, 0x1);
        gbc.writeMem(0x7e00, { 0x98 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0x7e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0204
        gbc.setState(0x2bf3, 0x8463, 0x99c0, 0x817d, 0x6d69, 0x6902, 0x0, 0x1);
        gbc.writeMem(0x2bf3, { 0x98 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8463, gbc.sp());
        EXPECT(0x2bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0205
        gbc.setState(0x9e37, 0xa794, 0x8cd0, 0xd750, 0x56e2, 0xae14, 0x1, 0x0);
        gbc.writeMem(0x9e37, { 0x98 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa794, gbc.sp());
        EXPECT(0x9e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9e37));
        // 98 0206
        gbc.setState(0x22c9, 0x3e0c, 0x4860, 0x1883, 0x7c65, 0xbdda, 0x1, 0x1);
        gbc.writeMem(0x22c9, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3e0c, gbc.sp());
        EXPECT(0x22ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0207
        gbc.setState(0xed2e, 0xddb4, 0x6570, 0x4791, 0xc3e2, 0xdebc, 0x0, 0x0);
        gbc.writeMem(0xed2e, { 0x98 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xddb4, gbc.sp());
        EXPECT(0xed2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xed2e));
        // 98 0208
        gbc.setState(0x221d, 0x4290, 0x5880, 0x796d, 0x12a, 0x2705, 0x1, 0x0);
        gbc.writeMem(0x221d, { 0x98 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4290, gbc.sp());
        EXPECT(0x221e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0209
        gbc.setState(0xe9a1, 0xaa50, 0xce60, 0xc40c, 0x64b7, 0x426e, 0x0, 0x1);
        gbc.writeMem(0xe9a1, { 0x98 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaa50, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe9a1));
        // 98 020A
        gbc.setState(0x2ee4, 0xc293, 0xa780, 0xdac3, 0x12ab, 0x900, 0x1, 0x0);
        gbc.writeMem(0x2ee4, { 0x98 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc293, gbc.sp());
        EXPECT(0x2ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 020B
        gbc.setState(0xd0ab, 0x237f, 0x4920, 0xc0a, 0x9925, 0x6d20, 0x1, 0x1);
        gbc.writeMem(0xd0ab, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0xd0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd0ab));
        // 98 020C
        gbc.setState(0x94eb, 0xdda5, 0x2cb0, 0xb4cc, 0xa98, 0x3133, 0x1, 0x0);
        gbc.writeMem(0x94eb, { 0x98 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdda5, gbc.sp());
        EXPECT(0x94ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x94eb));
        // 98 020D
        gbc.setState(0x230b, 0xc443, 0x5820, 0xa131, 0x8031, 0x74ab, 0x0, 0x1);
        gbc.writeMem(0x230b, { 0x98 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc443, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 020E
        gbc.setState(0x4076, 0x52ac, 0x4820, 0x7e60, 0x9b79, 0xac86, 0x0, 0x0);
        gbc.writeMem(0x4076, { 0x98 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0x4077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 020F
        gbc.setState(0xbef0, 0xcaa3, 0xfe20, 0xcf7e, 0x6f94, 0x6c83, 0x0, 0x1);
        gbc.writeMem(0xbef0, { 0x98 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcaa3, gbc.sp());
        EXPECT(0xbef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbef0));
        // 98 0210
        gbc.setState(0x3c7d, 0x9aa3, 0xe510, 0x1350, 0x6924, 0x92de, 0x1, 0x0);
        gbc.writeMem(0x3c7d, { 0x98 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9aa3, gbc.sp());
        EXPECT(0x3c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0211
        gbc.setState(0x8177, 0x6243, 0x7620, 0x735a, 0x9623, 0xc2d3, 0x1, 0x0);
        gbc.writeMem(0x8177, { 0x98 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6243, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8177));
        // 98 0212
        gbc.setState(0x2428, 0x6f54, 0x3af0, 0xc61a, 0x54e5, 0xeca7, 0x0, 0x1);
        gbc.writeMem(0x2428, { 0x98 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6f54, gbc.sp());
        EXPECT(0x2429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0213
        gbc.setState(0x37f8, 0x8f38, 0xdd20, 0x918a, 0xcccb, 0x987, 0x1, 0x0);
        gbc.writeMem(0x37f8, { 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8f38, gbc.sp());
        EXPECT(0x37f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0214
        gbc.setState(0xc5cc, 0x183c, 0x4280, 0xc6b9, 0x8f2b, 0x2206, 0x1, 0x0);
        gbc.writeMem(0xc5cc, { 0x98 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x183c, gbc.sp());
        EXPECT(0xc5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc5cc));
        // 98 0215
        gbc.setState(0x66f3, 0xfd8, 0x3a60, 0x90b, 0x9690, 0x8400, 0x1, 0x1);
        gbc.writeMem(0x66f3, { 0x98 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfd8, gbc.sp());
        EXPECT(0x66f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0216
        gbc.setState(0x4a57, 0xe376, 0xe4e0, 0x1778, 0xe241, 0xc09, 0x0, 0x1);
        gbc.writeMem(0x4a57, { 0x98 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe376, gbc.sp());
        EXPECT(0x4a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0217
        gbc.setState(0x6d21, 0x78dc, 0x90c0, 0xb020, 0x6888, 0xe7b0, 0x1, 0x1);
        gbc.writeMem(0x6d21, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x78dc, gbc.sp());
        EXPECT(0x6d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0218
        gbc.setState(0x7347, 0x96b5, 0xc520, 0x30be, 0xf2c7, 0x192e, 0x0, 0x1);
        gbc.writeMem(0x7347, { 0x98 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x96b5, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0219
        gbc.setState(0x9738, 0xcc5, 0x2400, 0xe03f, 0x671f, 0x139a, 0x1, 0x0);
        gbc.writeMem(0x9738, { 0x98 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcc5, gbc.sp());
        EXPECT(0x9739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9738));
        // 98 021A
        gbc.setState(0xadf, 0xbe6, 0x6780, 0x26f8, 0xbdcb, 0xb13c, 0x0, 0x1);
        gbc.writeMem(0xadf, { 0x98 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbe6, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 021B
        gbc.setState(0xa0a0, 0xb6a9, 0x6350, 0x93c, 0x9a15, 0x714, 0x1, 0x0);
        gbc.writeMem(0xa0a0, { 0x98 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb6a9, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa0a0));
        // 98 021C
        gbc.setState(0x8154, 0xa37b, 0x4c0, 0xb868, 0x9ceb, 0xd32e, 0x1, 0x1);
        gbc.writeMem(0x8154, { 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa37b, gbc.sp());
        EXPECT(0x8155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8154));
        // 98 021D
        gbc.setState(0x7a18, 0xd544, 0xf8a0, 0x4b42, 0x16b4, 0x9da5, 0x1, 0x0);
        gbc.writeMem(0x7a18, { 0x98 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd544, gbc.sp());
        EXPECT(0x7a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 021F
        gbc.setState(0x24e6, 0xadf8, 0x4720, 0xee83, 0xb17b, 0x9ebf, 0x1, 0x0);
        gbc.writeMem(0x24e6, { 0x98 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0x24e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0220
        gbc.setState(0x1020, 0x49a3, 0x9620, 0x4023, 0x6aaf, 0x12cf, 0x0, 0x0);
        gbc.writeMem(0x1020, { 0x98 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x49a3, gbc.sp());
        EXPECT(0x1021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0221
        gbc.setState(0x4018, 0x1310, 0x9f70, 0x9f, 0x4169, 0x9b59, 0x1, 0x1);
        gbc.writeMem(0x4018, { 0x98 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1310, gbc.sp());
        EXPECT(0x4019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0222
        gbc.setState(0x5e98, 0xc7de, 0x1920, 0xfa90, 0xcd44, 0x19d8, 0x0, 0x0);
        gbc.writeMem(0x5e98, { 0x98 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc7de, gbc.sp());
        EXPECT(0x5e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0223
        gbc.setState(0x48f6, 0x963c, 0xb310, 0x5dd0, 0xa088, 0xe69, 0x1, 0x0);
        gbc.writeMem(0x48f6, { 0x98 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x963c, gbc.sp());
        EXPECT(0x48f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0224
        gbc.setState(0x25db, 0xffbb, 0x3cc0, 0x2ee, 0x211, 0xbf5f, 0x1, 0x0);
        gbc.writeMem(0x25db, { 0x98 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xffbb, gbc.sp());
        EXPECT(0x25dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0225
        gbc.setState(0xe636, 0x4fb4, 0x36b0, 0x45ef, 0xbb77, 0xe8ee, 0x0, 0x1);
        gbc.writeMem(0xe636, { 0x98 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4fb4, gbc.sp());
        EXPECT(0xe637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe636));
        // 98 0226
        gbc.setState(0xe7e2, 0x5e0, 0xce40, 0x8d82, 0x5b12, 0xef13, 0x0, 0x1);
        gbc.writeMem(0xe7e2, { 0x98 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5e0, gbc.sp());
        EXPECT(0xe7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe7e2));
        // 98 0227
        gbc.setState(0x97f4, 0x8f14, 0xf690, 0xd955, 0xcb58, 0xed0f, 0x0, 0x0);
        gbc.writeMem(0x97f4, { 0x98 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x97f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x97f4));
        // 98 0228
        gbc.setState(0x1a73, 0x4fcc, 0x18a0, 0xea23, 0x0, 0xa9ea, 0x1, 0x0);
        gbc.writeMem(0x1a73, { 0x98 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4fcc, gbc.sp());
        EXPECT(0x1a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0229
        gbc.setState(0x3b54, 0x104c, 0x37b0, 0x6876, 0x1a5f, 0xcbb, 0x1, 0x1);
        gbc.writeMem(0x3b54, { 0x98 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x104c, gbc.sp());
        EXPECT(0x3b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 022A
        gbc.setState(0x1f3b, 0x298a, 0x1ff0, 0x2b93, 0x81ec, 0x26d8, 0x1, 0x0);
        gbc.writeMem(0x1f3b, { 0x98 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x298a, gbc.sp());
        EXPECT(0x1f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 022B
        gbc.setState(0xddfb, 0x841f, 0x7940, 0xe842, 0xd347, 0x7117, 0x0, 0x0);
        gbc.writeMem(0xddfb, { 0x98 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x841f, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xddfb));
        // 98 022C
        gbc.setState(0x5aaa, 0x7627, 0x9920, 0xb23c, 0x22b3, 0xc369, 0x1, 0x1);
        gbc.writeMem(0x5aaa, { 0x98 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7627, gbc.sp());
        EXPECT(0x5aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 022D
        gbc.setState(0xb774, 0xf8a7, 0x5230, 0xadb3, 0x9c49, 0xe806, 0x1, 0x1);
        gbc.writeMem(0xb774, { 0x98 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf8a7, gbc.sp());
        EXPECT(0xb775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb774));
        // 98 022E
        gbc.setState(0x21c, 0x48a1, 0x8e40, 0x7693, 0x3c04, 0xe131, 0x1, 0x1);
        gbc.writeMem(0x21c, { 0x98 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x48a1, gbc.sp());
        EXPECT(0x21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 022F
        gbc.setState(0x6f6e, 0xbfdf, 0x9170, 0x5a4, 0x8b3c, 0xbdbb, 0x1, 0x0);
        gbc.writeMem(0x6f6e, { 0x98 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbfdf, gbc.sp());
        EXPECT(0x6f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0230
        gbc.setState(0xd926, 0x2210, 0x5d10, 0xae8b, 0xb6d, 0xdff3, 0x0, 0x0);
        gbc.writeMem(0xd926, { 0x98 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0xd927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd926));
        // 98 0231
        gbc.setState(0x187c, 0x6e33, 0xb800, 0x863e, 0xea10, 0x1ebd, 0x0, 0x1);
        gbc.writeMem(0x187c, { 0x98 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6e33, gbc.sp());
        EXPECT(0x187d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0232
        gbc.setState(0xc4e8, 0xf98, 0x4200, 0x987a, 0xb55d, 0xd957, 0x1, 0x0);
        gbc.writeMem(0xc4e8, { 0x98 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf98, gbc.sp());
        EXPECT(0xc4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc4e8));
        // 98 0233
        gbc.setState(0x44a2, 0x69a, 0x4ce0, 0x5f5f, 0x5646, 0x1542, 0x0, 0x0);
        gbc.writeMem(0x44a2, { 0x98 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x69a, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0234
        gbc.setState(0xbd62, 0x94eb, 0x1cf0, 0x3d7b, 0xadca, 0xb2e2, 0x1, 0x0);
        gbc.writeMem(0xbd62, { 0x98 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x94eb, gbc.sp());
        EXPECT(0xbd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbd62));
        // 98 0235
        gbc.setState(0xb5e5, 0xc2a5, 0x8a0, 0x2204, 0x7d96, 0x7d43, 0x0, 0x1);
        gbc.writeMem(0xb5e5, { 0x98 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc2a5, gbc.sp());
        EXPECT(0xb5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb5e5));
        // 98 0236
        gbc.setState(0x3174, 0x445f, 0xc0e0, 0x9e0a, 0xfebe, 0x9f53, 0x1, 0x1);
        gbc.writeMem(0x3174, { 0x98 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x445f, gbc.sp());
        EXPECT(0x3175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0237
        gbc.setState(0x3c9b, 0x37d3, 0xc5a0, 0xa664, 0xe9e4, 0x128a, 0x1, 0x0);
        gbc.writeMem(0x3c9b, { 0x98 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x37d3, gbc.sp());
        EXPECT(0x3c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0238
        gbc.setState(0x5116, 0x763b, 0x1700, 0x550a, 0x1855, 0x541e, 0x1, 0x1);
        gbc.writeMem(0x5116, { 0x98 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x763b, gbc.sp());
        EXPECT(0x5117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0239
        gbc.setState(0xbb21, 0xe382, 0x42c0, 0x85f5, 0xc4d7, 0x6b32, 0x0, 0x1);
        gbc.writeMem(0xbb21, { 0x98 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe382, gbc.sp());
        EXPECT(0xbb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbb21));
        // 98 023A
        gbc.setState(0x785, 0x4f5f, 0x4d80, 0x2b57, 0xebe0, 0x41bd, 0x0, 0x1);
        gbc.writeMem(0x785, { 0x98 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4f5f, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 023B
        gbc.setState(0xd54d, 0x5a74, 0xefb0, 0x8370, 0x35ad, 0x2094, 0x1, 0x1);
        gbc.writeMem(0xd54d, { 0x98 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0xd54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd54d));
        // 98 023C
        gbc.setState(0x89aa, 0xf593, 0xd770, 0xc6e, 0x6304, 0xd9f1, 0x0, 0x0);
        gbc.writeMem(0x89aa, { 0x98 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf593, gbc.sp());
        EXPECT(0x89ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x89aa));
        // 98 023D
        gbc.setState(0xee90, 0xc163, 0xdbb0, 0x22c2, 0xd17d, 0xbf8a, 0x0, 0x0);
        gbc.writeMem(0xee90, { 0x98 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc163, gbc.sp());
        EXPECT(0xee91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xee90));
        // 98 023E
        gbc.setState(0xeec4, 0x7c6f, 0xb5d0, 0x7855, 0xe140, 0xa801, 0x0, 0x0);
        gbc.writeMem(0xeec4, { 0x98 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0xeec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xeec4));
        // 98 023F
        gbc.setState(0x928a, 0x5a65, 0xdf80, 0xa115, 0xdc62, 0xc649, 0x0, 0x0);
        gbc.writeMem(0x928a, { 0x98 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x928b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x928a));
        // 98 0240
        gbc.setState(0x1057, 0xde15, 0x5ad0, 0xb602, 0xaeb4, 0x3582, 0x0, 0x1);
        gbc.writeMem(0x1057, { 0x98 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xde15, gbc.sp());
        EXPECT(0x1058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0241
        gbc.setState(0x812c, 0xd1de, 0x2b20, 0x9ca6, 0x2a20, 0x88de, 0x1, 0x1);
        gbc.writeMem(0x812c, { 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd1de, gbc.sp());
        EXPECT(0x812d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x812c));
        // 98 0242
        gbc.setState(0x51ba, 0xd829, 0xb620, 0xe134, 0x4c8d, 0x5b8b, 0x0, 0x0);
        gbc.writeMem(0x51ba, { 0x98 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd829, gbc.sp());
        EXPECT(0x51bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0243
        gbc.setState(0x7138, 0xad12, 0x2c90, 0x5672, 0xe7e, 0xdfd5, 0x1, 0x0);
        gbc.writeMem(0x7138, { 0x98 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xad12, gbc.sp());
        EXPECT(0x7139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0244
        gbc.setState(0x186c, 0x316d, 0x1910, 0x7584, 0x50d9, 0xe456, 0x1, 0x0);
        gbc.writeMem(0x186c, { 0x98 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x316d, gbc.sp());
        EXPECT(0x186d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0245
        gbc.setState(0x8d8b, 0x7bc5, 0xa7c0, 0x4048, 0x450f, 0xb04e, 0x1, 0x1);
        gbc.writeMem(0x8d8b, { 0x98 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7bc5, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8d8b));
        // 98 0246
        gbc.setState(0xa9f9, 0xd10d, 0xa6b0, 0x4cb6, 0x4909, 0x526a, 0x1, 0x0);
        gbc.writeMem(0xa9f9, { 0x98 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd10d, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa9f9));
        // 98 0247
        gbc.setState(0x4da1, 0xd288, 0xfbf0, 0xc79f, 0x15e8, 0x7ecd, 0x1, 0x1);
        gbc.writeMem(0x4da1, { 0x98 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd288, gbc.sp());
        EXPECT(0x4da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0248
        gbc.setState(0x5c0f, 0x75d9, 0x4e80, 0x2ba0, 0xec7d, 0xcef0, 0x1, 0x0);
        gbc.writeMem(0x5c0f, { 0x98 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x75d9, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0249
        gbc.setState(0x4b23, 0x8a4a, 0xc080, 0x7d6, 0x8ff7, 0xfb76, 0x1, 0x1);
        gbc.writeMem(0x4b23, { 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8a4a, gbc.sp());
        EXPECT(0x4b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 024A
        gbc.setState(0x866, 0x5cea, 0xaea0, 0x7149, 0x281f, 0xcb3a, 0x1, 0x0);
        gbc.writeMem(0x866, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5cea, gbc.sp());
        EXPECT(0x867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 024B
        gbc.setState(0xb774, 0xb867, 0x6880, 0xa76c, 0x9f8f, 0xb327, 0x1, 0x1);
        gbc.writeMem(0xb774, { 0x98 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb867, gbc.sp());
        EXPECT(0xb775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb774));
        // 98 024C
        gbc.setState(0x90d5, 0x22b2, 0x7b80, 0x5b91, 0xe39f, 0xc5fe, 0x0, 0x1);
        gbc.writeMem(0x90d5, { 0x98 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x22b2, gbc.sp());
        EXPECT(0x90d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x90d5));
        // 98 024D
        gbc.setState(0x5b8a, 0x1960, 0x50a0, 0x3222, 0xf112, 0x6e34, 0x1, 0x0);
        gbc.writeMem(0x5b8a, { 0x98 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1960, gbc.sp());
        EXPECT(0x5b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 024E
        gbc.setState(0xcc70, 0x70db, 0xb080, 0x84ba, 0xc7b8, 0x2314, 0x0, 0x0);
        gbc.writeMem(0xcc70, { 0x98 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0xcc71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcc70));
        // 98 024F
        gbc.setState(0x4717, 0xcd45, 0x79b0, 0x14ea, 0x1fa0, 0xf1f7, 0x1, 0x0);
        gbc.writeMem(0x4717, { 0x98 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcd45, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0250
        gbc.setState(0x29d9, 0xe2f2, 0xe4e0, 0x5d85, 0x3b76, 0xbe07, 0x1, 0x0);
        gbc.writeMem(0x29d9, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe2f2, gbc.sp());
        EXPECT(0x29da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0251
        gbc.setState(0xeb1f, 0x7f03, 0x5280, 0x1017, 0xc1c0, 0x6a17, 0x1, 0x1);
        gbc.writeMem(0xeb1f, { 0x98 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7f03, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xeb1f));
        // 98 0252
        gbc.setState(0x6d88, 0x5111, 0x28e0, 0x7321, 0x509c, 0x4c20, 0x1, 0x0);
        gbc.writeMem(0x6d88, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5111, gbc.sp());
        EXPECT(0x6d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0253
        gbc.setState(0x2d5b, 0x547, 0x32c0, 0xc3af, 0x4ce4, 0xd4e3, 0x1, 0x1);
        gbc.writeMem(0x2d5b, { 0x98 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x547, gbc.sp());
        EXPECT(0x2d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0254
        gbc.setState(0xe2e2, 0x5d5a, 0x9b10, 0x2581, 0x222, 0xba6a, 0x1, 0x0);
        gbc.writeMem(0xe2e2, { 0x98 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5d5a, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe2e2));
        // 98 0255
        gbc.setState(0x88e5, 0x9f38, 0x5b00, 0x831f, 0xa857, 0x213, 0x1, 0x0);
        gbc.writeMem(0x88e5, { 0x98 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9f38, gbc.sp());
        EXPECT(0x88e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x88e5));
        // 98 0256
        gbc.setState(0xd6dc, 0x139f, 0xcd20, 0xaecf, 0x3b34, 0x5cc, 0x1, 0x0);
        gbc.writeMem(0xd6dc, { 0x98 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x139f, gbc.sp());
        EXPECT(0xd6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd6dc));
        // 98 0257
        gbc.setState(0x58e1, 0x44da, 0x9320, 0xbf4b, 0x8dc7, 0x5f30, 0x0, 0x1);
        gbc.writeMem(0x58e1, { 0x98 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x44da, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0258
        gbc.setState(0x7d6e, 0x9780, 0xf7d0, 0x9ccb, 0x2842, 0x5b0, 0x1, 0x0);
        gbc.writeMem(0x7d6e, { 0x98 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9780, gbc.sp());
        EXPECT(0x7d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0259
        gbc.setState(0x9bfb, 0xc434, 0x1aa0, 0x4ada, 0xa32a, 0x393d, 0x0, 0x0);
        gbc.writeMem(0x9bfb, { 0x98 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc434, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9bfb));
        // 98 025A
        gbc.setState(0x9fdb, 0x5758, 0xacf0, 0xeaab, 0x7f6d, 0x1b52, 0x0, 0x1);
        gbc.writeMem(0x9fdb, { 0x98 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5758, gbc.sp());
        EXPECT(0x9fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9fdb));
        // 98 025B
        gbc.setState(0xea74, 0x8eb4, 0x4260, 0xbf17, 0x7be4, 0x6bb, 0x1, 0x0);
        gbc.writeMem(0xea74, { 0x98 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8eb4, gbc.sp());
        EXPECT(0xea75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xea74));
        // 98 025C
        gbc.setState(0x1cc2, 0x12db, 0x89b0, 0x9755, 0x6f63, 0xe69f, 0x0, 0x0);
        gbc.writeMem(0x1cc2, { 0x98 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0x1cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 025D
        gbc.setState(0xda7, 0x38d7, 0x66a0, 0x3e80, 0xa653, 0xc51d, 0x0, 0x1);
        gbc.writeMem(0xda7, { 0x98 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0xda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 025E
        gbc.setState(0x60b6, 0xa6b9, 0x39b0, 0xa83a, 0x531e, 0x6505, 0x1, 0x0);
        gbc.writeMem(0x60b6, { 0x98 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa6b9, gbc.sp());
        EXPECT(0x60b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 025F
        gbc.setState(0xb6d1, 0x83b4, 0x9680, 0xa519, 0xf481, 0x175b, 0x1, 0x1);
        gbc.writeMem(0xb6d1, { 0x98 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x83b4, gbc.sp());
        EXPECT(0xb6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb6d1));
        // 98 0260
        gbc.setState(0xe72a, 0x1f79, 0x9750, 0x5a15, 0x5f93, 0x169b, 0x0, 0x0);
        gbc.writeMem(0xe72a, { 0x98 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1f79, gbc.sp());
        EXPECT(0xe72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe72a));
        // 98 0261
        gbc.setState(0x2223, 0x6b5d, 0x7600, 0x2dcd, 0x32a2, 0xe99c, 0x0, 0x1);
        gbc.writeMem(0x2223, { 0x98 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0x2224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0262
        gbc.setState(0x1c9c, 0x658, 0x5df0, 0xd56e, 0x2632, 0x2615, 0x0, 0x1);
        gbc.writeMem(0x1c9c, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x658, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0263
        gbc.setState(0x5319, 0x2238, 0x5a50, 0x9c16, 0xa3dc, 0xb512, 0x0, 0x1);
        gbc.writeMem(0x5319, { 0x98 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2238, gbc.sp());
        EXPECT(0x531a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0265
        gbc.setState(0xe1f6, 0x7b69, 0x2270, 0x4207, 0x7520, 0x24cb, 0x1, 0x0);
        gbc.writeMem(0xe1f6, { 0x98 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7b69, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe1f6));
        // 98 0266
        gbc.setState(0xc599, 0xf303, 0x6100, 0xe22d, 0x810d, 0x96eb, 0x1, 0x1);
        gbc.writeMem(0xc599, { 0x98 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf303, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc599));
        // 98 0267
        gbc.setState(0x5537, 0xe010, 0xa2e0, 0x962b, 0xba0d, 0x9d5b, 0x0, 0x0);
        gbc.writeMem(0x5537, { 0x98 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x5538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0268
        gbc.setState(0xd631, 0x7dc, 0x7500, 0xc107, 0xe348, 0xe063, 0x1, 0x1);
        gbc.writeMem(0xd631, { 0x98 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7dc, gbc.sp());
        EXPECT(0xd632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd631));
        // 98 0269
        gbc.setState(0x964c, 0x371a, 0x2b10, 0xf25e, 0xc82, 0x4e85, 0x0, 0x1);
        gbc.writeMem(0x964c, { 0x98 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x371a, gbc.sp());
        EXPECT(0x964d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x964c));
        // 98 026B
        gbc.setState(0x96cc, 0x38ff, 0x80e0, 0x6779, 0xe48, 0xe317, 0x1, 0x1);
        gbc.writeMem(0x96cc, { 0x98 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x38ff, gbc.sp());
        EXPECT(0x96cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x96cc));
        // 98 026C
        gbc.setState(0x9d38, 0x358b, 0x6880, 0x5ea2, 0x86f6, 0xf030, 0x0, 0x1);
        gbc.writeMem(0x9d38, { 0x98 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x358b, gbc.sp());
        EXPECT(0x9d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9d38));
        // 98 026D
        gbc.setState(0xdc71, 0x5f40, 0x5ce0, 0x5fda, 0x2cef, 0xffe3, 0x0, 0x0);
        gbc.writeMem(0xdc71, { 0x98 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5f40, gbc.sp());
        EXPECT(0xdc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdc71));
        // 98 026E
        gbc.setState(0x204f, 0x8500, 0xa950, 0x454d, 0x9080, 0x3a5d, 0x0, 0x1);
        gbc.writeMem(0x204f, { 0x98 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8500, gbc.sp());
        EXPECT(0x2050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0270
        gbc.setState(0xd3ae, 0xc90e, 0x6290, 0x96bf, 0xa62a, 0xd8b5, 0x1, 0x0);
        gbc.writeMem(0xd3ae, { 0x98 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0xd3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd3ae));
        // 98 0271
        gbc.setState(0x78d9, 0xd482, 0x5b90, 0x9833, 0x9982, 0x7301, 0x1, 0x1);
        gbc.writeMem(0x78d9, { 0x98 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd482, gbc.sp());
        EXPECT(0x78da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0272
        gbc.setState(0x9de4, 0xdeb8, 0x1e50, 0x44f3, 0xd8, 0xd25d, 0x0, 0x0);
        gbc.writeMem(0x9de4, { 0x98 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdeb8, gbc.sp());
        EXPECT(0x9de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9de4));
        // 98 0273
        gbc.setState(0x3e12, 0x537f, 0xd9d0, 0xd916, 0x9f76, 0xa030, 0x1, 0x0);
        gbc.writeMem(0x3e12, { 0x98 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x3e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0275
        gbc.setState(0x232e, 0x338b, 0xbf10, 0xc55e, 0xd1b, 0x366e, 0x0, 0x0);
        gbc.writeMem(0x232e, { 0x98 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x338b, gbc.sp());
        EXPECT(0x232f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0276
        gbc.setState(0x2dda, 0xeb2a, 0xde20, 0x70f2, 0xc253, 0xbb94, 0x0, 0x0);
        gbc.writeMem(0x2dda, { 0x98 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeb2a, gbc.sp());
        EXPECT(0x2ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0277
        gbc.setState(0xd1e5, 0x7613, 0xec30, 0xa6c2, 0xfa46, 0xd4c5, 0x1, 0x1);
        gbc.writeMem(0xd1e5, { 0x98 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7613, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd1e5));
        // 98 0278
        gbc.setState(0x6fff, 0x3c84, 0x9fe0, 0x5595, 0x5fe9, 0x5960, 0x0, 0x1);
        gbc.writeMem(0x6fff, { 0x98 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3c84, gbc.sp());
        EXPECT(0x7000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0279
        gbc.setState(0x1501, 0x8ef6, 0xd190, 0x9917, 0x17d7, 0xf5a5, 0x1, 0x1);
        gbc.writeMem(0x1501, { 0x98 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x1502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 027A
        gbc.setState(0x92b9, 0x15e8, 0xea30, 0x61e8, 0x287a, 0xfc10, 0x0, 0x1);
        gbc.writeMem(0x92b9, { 0x98 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x15e8, gbc.sp());
        EXPECT(0x92ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x92b9));
        // 98 027C
        gbc.setState(0xec66, 0xbe6c, 0xd210, 0x530c, 0x4395, 0x687b, 0x1, 0x0);
        gbc.writeMem(0xec66, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbe6c, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xec66));
        // 98 027D
        gbc.setState(0xd51f, 0xb42d, 0x9450, 0xe48d, 0xd0e4, 0xb682, 0x0, 0x0);
        gbc.writeMem(0xd51f, { 0x98 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb42d, gbc.sp());
        EXPECT(0xd520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd51f));
        // 98 027F
        gbc.setState(0xdad, 0xf77a, 0xdf60, 0xb277, 0xa754, 0x1261, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0x98 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0280
        gbc.setState(0x2b23, 0xe72b, 0x54c0, 0x579, 0xd89e, 0xac7a, 0x0, 0x0);
        gbc.writeMem(0x2b23, { 0x98 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe72b, gbc.sp());
        EXPECT(0x2b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0281
        gbc.setState(0xa518, 0xacc7, 0xc8a0, 0x4835, 0xeba3, 0xe35e, 0x1, 0x1);
        gbc.writeMem(0xa518, { 0x98 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xacc7, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa518));
        // 98 0282
        gbc.setState(0xad1d, 0x9e74, 0x6230, 0x2b3b, 0xa3, 0xc069, 0x1, 0x0);
        gbc.writeMem(0xad1d, { 0x98 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9e74, gbc.sp());
        EXPECT(0xad1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xad1d));
        // 98 0283
        gbc.setState(0xe2a0, 0x4ef1, 0x8840, 0x846d, 0xdc5e, 0xc608, 0x1, 0x1);
        gbc.writeMem(0xe2a0, { 0x98 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4ef1, gbc.sp());
        EXPECT(0xe2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe2a0));
        // 98 0284
        gbc.setState(0x6b3c, 0x5f48, 0x32d0, 0x321a, 0x185a, 0x46a1, 0x0, 0x0);
        gbc.writeMem(0x6b3c, { 0x98 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5f48, gbc.sp());
        EXPECT(0x6b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0285
        gbc.setState(0x4fa6, 0x8cd2, 0x8720, 0x81f5, 0xda9d, 0x362, 0x1, 0x0);
        gbc.writeMem(0x4fa6, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8cd2, gbc.sp());
        EXPECT(0x4fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0286
        gbc.setState(0x4e94, 0x9f7, 0xc410, 0xb9c9, 0x3952, 0xb456, 0x1, 0x1);
        gbc.writeMem(0x4e94, { 0x98 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9f7, gbc.sp());
        EXPECT(0x4e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0287
        gbc.setState(0x6638, 0x8774, 0x4670, 0xd4a4, 0xefe3, 0x3141, 0x1, 0x0);
        gbc.writeMem(0x6638, { 0x98 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8774, gbc.sp());
        EXPECT(0x6639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0288
        gbc.setState(0x4b9c, 0x47fa, 0x4990, 0x2263, 0xf1ce, 0x372, 0x0, 0x1);
        gbc.writeMem(0x4b9c, { 0x98 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x47fa, gbc.sp());
        EXPECT(0x4b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0289
        gbc.setState(0x326e, 0xe8fe, 0xb2a0, 0x45fa, 0xf8c1, 0x3613, 0x0, 0x0);
        gbc.writeMem(0x326e, { 0x98 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0x326f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 028A
        gbc.setState(0xe218, 0xe929, 0x7700, 0xed4, 0x3e1c, 0x946d, 0x0, 0x0);
        gbc.writeMem(0xe218, { 0x98 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe929, gbc.sp());
        EXPECT(0xe219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe218));
        // 98 028B
        gbc.setState(0xceba, 0x41c0, 0x4150, 0x664b, 0x2f6d, 0x9f7c, 0x0, 0x0);
        gbc.writeMem(0xceba, { 0x98 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x41c0, gbc.sp());
        EXPECT(0xcebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xceba));
        // 98 028C
        gbc.setState(0x10ee, 0x3a67, 0xf9f0, 0x975a, 0x333e, 0x4987, 0x1, 0x1);
        gbc.writeMem(0x10ee, { 0x98 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3a67, gbc.sp());
        EXPECT(0x10ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 028D
        gbc.setState(0x1dd1, 0x6f70, 0x1940, 0xbe9a, 0x640f, 0x2a4e, 0x0, 0x1);
        gbc.writeMem(0x1dd1, { 0x98 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6f70, gbc.sp());
        EXPECT(0x1dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 028E
        gbc.setState(0x7b43, 0xed03, 0xef50, 0xe82e, 0x324b, 0x595e, 0x1, 0x0);
        gbc.writeMem(0x7b43, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xed03, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 028F
        gbc.setState(0x7dac, 0x4c53, 0x7100, 0xad6f, 0x5e27, 0x5077, 0x0, 0x0);
        gbc.writeMem(0x7dac, { 0x98 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4c53, gbc.sp());
        EXPECT(0x7dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0290
        gbc.setState(0xa69d, 0xce29, 0xe090, 0xa774, 0x6942, 0x2ea6, 0x1, 0x1);
        gbc.writeMem(0xa69d, { 0x98 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xce29, gbc.sp());
        EXPECT(0xa69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa69d));
        // 98 0291
        gbc.setState(0xd5e3, 0x2685, 0x3840, 0x98ad, 0x8e66, 0x6363, 0x1, 0x1);
        gbc.writeMem(0xd5e3, { 0x98 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2685, gbc.sp());
        EXPECT(0xd5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd5e3));
        // 98 0292
        gbc.setState(0x750a, 0x7046, 0xabe0, 0xb15e, 0xd5e0, 0x5cf3, 0x0, 0x1);
        gbc.writeMem(0x750a, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7046, gbc.sp());
        EXPECT(0x750b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0293
        gbc.setState(0x1a33, 0x9485, 0xe510, 0xe924, 0xca98, 0x3928, 0x1, 0x0);
        gbc.writeMem(0x1a33, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0294
        gbc.setState(0x8a10, 0xcf2c, 0xa210, 0x1208, 0x656f, 0x127c, 0x1, 0x0);
        gbc.writeMem(0x8a10, { 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcf2c, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8a10));
        // 98 0295
        gbc.setState(0x34be, 0x71a1, 0x9810, 0xe958, 0x5777, 0x739c, 0x0, 0x1);
        gbc.writeMem(0x34be, { 0x98 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x71a1, gbc.sp());
        EXPECT(0x34bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0296
        gbc.setState(0x31fd, 0x3836, 0xa1a0, 0xa22b, 0xa106, 0x2917, 0x1, 0x1);
        gbc.writeMem(0x31fd, { 0x98 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3836, gbc.sp());
        EXPECT(0x31fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0297
        gbc.setState(0xeed5, 0x6d3f, 0x9b60, 0x17f7, 0xb2df, 0x19b8, 0x1, 0x0);
        gbc.writeMem(0xeed5, { 0x98 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0xeed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xeed5));
        // 98 0298
        gbc.setState(0xb88e, 0x9949, 0x4e70, 0x2e70, 0x4c24, 0xe256, 0x0, 0x1);
        gbc.writeMem(0xb88e, { 0x98 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9949, gbc.sp());
        EXPECT(0xb88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb88e));
        // 98 0299
        gbc.setState(0x1f0a, 0x22e9, 0x85c0, 0x3a54, 0x12f, 0xb590, 0x0, 0x0);
        gbc.writeMem(0x1f0a, { 0x98 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x22e9, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 029A
        gbc.setState(0x6e76, 0x3f09, 0x1600, 0x8dcc, 0x892e, 0xc531, 0x1, 0x0);
        gbc.writeMem(0x6e76, { 0x98 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3f09, gbc.sp());
        EXPECT(0x6e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 029B
        gbc.setState(0x2c5d, 0x15aa, 0x9170, 0xfd5d, 0x202c, 0xfa2a, 0x0, 0x1);
        gbc.writeMem(0x2c5d, { 0x98 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x15aa, gbc.sp());
        EXPECT(0x2c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 029C
        gbc.setState(0x6f4b, 0x65d3, 0x6c40, 0xc66d, 0x8feb, 0x5a0a, 0x0, 0x0);
        gbc.writeMem(0x6f4b, { 0x98 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x65d3, gbc.sp());
        EXPECT(0x6f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 029D
        gbc.setState(0xaf77, 0xa25d, 0x860, 0x5abf, 0xea5d, 0x53d7, 0x0, 0x1);
        gbc.writeMem(0xaf77, { 0x98 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa25d, gbc.sp());
        EXPECT(0xaf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaf77));
        // 98 029E
        gbc.setState(0x8537, 0xd0c1, 0xcd40, 0x8a1b, 0x26a5, 0xf0e5, 0x1, 0x1);
        gbc.writeMem(0x8537, { 0x98 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd0c1, gbc.sp());
        EXPECT(0x8538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8537));
        // 98 029F
        gbc.setState(0xaa67, 0xd6bd, 0x7900, 0x6b6b, 0xb910, 0x3d91, 0x1, 0x1);
        gbc.writeMem(0xaa67, { 0x98 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd6bd, gbc.sp());
        EXPECT(0xaa68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaa67));
        // 98 02A0
        gbc.setState(0xd1b3, 0x9d59, 0x970, 0x6269, 0x606f, 0x918, 0x0, 0x1);
        gbc.writeMem(0xd1b3, { 0x98 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0xd1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd1b3));
        // 98 02A1
        gbc.setState(0x9909, 0xb3e9, 0xece0, 0xbfd6, 0xdd1f, 0x50aa, 0x1, 0x1);
        gbc.writeMem(0x9909, { 0x98 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb3e9, gbc.sp());
        EXPECT(0x990a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9909));
        // 98 02A2
        gbc.setState(0xbac2, 0x47f3, 0xe600, 0xebec, 0xd4b, 0xffcf, 0x0, 0x1);
        gbc.writeMem(0xbac2, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x47f3, gbc.sp());
        EXPECT(0xbac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbac2));
        // 98 02A3
        gbc.setState(0x31bb, 0x4d25, 0xd050, 0xf174, 0x676b, 0xcf91, 0x1, 0x1);
        gbc.writeMem(0x31bb, { 0x98 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0x31bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02A4
        gbc.setState(0x9a09, 0x703f, 0x21c0, 0x274f, 0x7339, 0x65fc, 0x1, 0x1);
        gbc.writeMem(0x9a09, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x703f, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9a09));
        // 98 02A5
        gbc.setState(0x492f, 0x1042, 0x4390, 0x2d31, 0x8302, 0x3a2d, 0x0, 0x0);
        gbc.writeMem(0x492f, { 0x98 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1042, gbc.sp());
        EXPECT(0x4930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02A7
        gbc.setState(0x6f59, 0x6881, 0x96b0, 0x6b4c, 0xbe9f, 0xf07a, 0x1, 0x0);
        gbc.writeMem(0x6f59, { 0x98 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6881, gbc.sp());
        EXPECT(0x6f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02A8
        gbc.setState(0x7d3a, 0x1a06, 0x1b10, 0x81ac, 0x4769, 0x3efb, 0x1, 0x0);
        gbc.writeMem(0x7d3a, { 0x98 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1a06, gbc.sp());
        EXPECT(0x7d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02A9
        gbc.setState(0x4875, 0x93eb, 0xbc60, 0x49b4, 0x2711, 0xe09, 0x1, 0x0);
        gbc.writeMem(0x4875, { 0x98 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x93eb, gbc.sp());
        EXPECT(0x4876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02AA
        gbc.setState(0xd892, 0xa287, 0xe920, 0xc883, 0xd895, 0x426d, 0x1, 0x0);
        gbc.writeMem(0xd892, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa287, gbc.sp());
        EXPECT(0xd893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd892));
        // 98 02AB
        gbc.setState(0xd323, 0xb829, 0x5200, 0x7770, 0x6959, 0xa6d8, 0x1, 0x1);
        gbc.writeMem(0xd323, { 0x98 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb829, gbc.sp());
        EXPECT(0xd324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd323));
        // 98 02AC
        gbc.setState(0xe57a, 0x8a99, 0x5c20, 0x68e5, 0xfb10, 0xa41a, 0x1, 0x0);
        gbc.writeMem(0xe57a, { 0x98 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8a99, gbc.sp());
        EXPECT(0xe57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe57a));
        // 98 02AD
        gbc.setState(0x197e, 0x4630, 0x94f0, 0x57ac, 0xce9f, 0x4ce, 0x1, 0x1);
        gbc.writeMem(0x197e, { 0x98 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4630, gbc.sp());
        EXPECT(0x197f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02AF
        gbc.setState(0x506c, 0x36be, 0x66e0, 0x1a57, 0xb170, 0x7d6f, 0x1, 0x1);
        gbc.writeMem(0x506c, { 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x36be, gbc.sp());
        EXPECT(0x506d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02B0
        gbc.setState(0xb793, 0xc9c5, 0xb7c0, 0x3885, 0xf70c, 0xe18c, 0x0, 0x1);
        gbc.writeMem(0xb793, { 0x98 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0xb794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb793));
        // 98 02B1
        gbc.setState(0x4294, 0xe41a, 0xf520, 0x3d17, 0x599c, 0x9fbc, 0x0, 0x0);
        gbc.writeMem(0x4294, { 0x98 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe41a, gbc.sp());
        EXPECT(0x4295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02B2
        gbc.setState(0x670e, 0xf93b, 0x4db0, 0xefe9, 0xbb56, 0xdd50, 0x0, 0x0);
        gbc.writeMem(0x670e, { 0x98 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf93b, gbc.sp());
        EXPECT(0x670f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02B3
        gbc.setState(0xe237, 0x3507, 0xbcb0, 0x5f5f, 0x6ccc, 0xfa84, 0x1, 0x1);
        gbc.writeMem(0xe237, { 0x98 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3507, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe237));
        // 98 02B4
        gbc.setState(0xe22a, 0xf0cf, 0xb4e0, 0x6243, 0xa0a6, 0x3a6d, 0x0, 0x0);
        gbc.writeMem(0xe22a, { 0x98 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf0cf, gbc.sp());
        EXPECT(0xe22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe22a));
        // 98 02B5
        gbc.setState(0x497e, 0x759e, 0x9290, 0xf5cb, 0x749d, 0x250a, 0x0, 0x1);
        gbc.writeMem(0x497e, { 0x98 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x759e, gbc.sp());
        EXPECT(0x497f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02B6
        gbc.setState(0x97e6, 0x1b5e, 0xd6a0, 0x20b9, 0xa348, 0xedd3, 0x1, 0x0);
        gbc.writeMem(0x97e6, { 0x98 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x97e6));
        // 98 02B7
        gbc.setState(0x2ca0, 0xabda, 0x750, 0x4d72, 0x76f7, 0x28b0, 0x1, 0x0);
        gbc.writeMem(0x2ca0, { 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0x2ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02B8
        gbc.setState(0xa321, 0x1f39, 0xfd30, 0xab06, 0x839a, 0xf48c, 0x1, 0x0);
        gbc.writeMem(0xa321, { 0x98 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0xa322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa321));
        // 98 02B9
        gbc.setState(0x96c4, 0x97af, 0xb2b0, 0x9d9c, 0x12de, 0x5115, 0x1, 0x0);
        gbc.writeMem(0x96c4, { 0x98 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x97af, gbc.sp());
        EXPECT(0x96c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x96c4));
        // 98 02BA
        gbc.setState(0xe1eb, 0x303, 0x29d0, 0xbd95, 0xb396, 0xb579, 0x1, 0x0);
        gbc.writeMem(0xe1eb, { 0x98 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x303, gbc.sp());
        EXPECT(0xe1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe1eb));
        // 98 02BB
        gbc.setState(0x4909, 0x4508, 0x8800, 0x69f, 0x140f, 0xbbf3, 0x1, 0x0);
        gbc.writeMem(0x4909, { 0x98 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4508, gbc.sp());
        EXPECT(0x490a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02BC
        gbc.setState(0xea4a, 0x9ab3, 0x3ef0, 0xd809, 0xce92, 0x8ff8, 0x1, 0x1);
        gbc.writeMem(0xea4a, { 0x98 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9ab3, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xea4a));
        // 98 02BD
        gbc.setState(0x61c3, 0xf1b6, 0x2e0, 0xb08f, 0xdf2, 0x23bc, 0x0, 0x0);
        gbc.writeMem(0x61c3, { 0x98 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0x61c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02BE
        gbc.setState(0x211, 0x10ff, 0x8000, 0xf670, 0x3c10, 0xc675, 0x0, 0x1);
        gbc.writeMem(0x211, { 0x98 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x10ff, gbc.sp());
        EXPECT(0x212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02BF
        gbc.setState(0xca41, 0x9c8a, 0xcd30, 0xc690, 0xa98a, 0x873f, 0x0, 0x1);
        gbc.writeMem(0xca41, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0xca42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xca41));
        // 98 02C0
        gbc.setState(0x9a59, 0xc2b8, 0x7250, 0xeeb2, 0x5031, 0x4c0f, 0x1, 0x0);
        gbc.writeMem(0x9a59, { 0x98 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc2b8, gbc.sp());
        EXPECT(0x9a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9a59));
        // 98 02C1
        gbc.setState(0xa545, 0x4be0, 0x4510, 0x7d8c, 0xb189, 0x88a8, 0x1, 0x0);
        gbc.writeMem(0xa545, { 0x98 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4be0, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa545));
        // 98 02C2
        gbc.setState(0xcde2, 0x23cc, 0x2c30, 0x9c3d, 0x4d4, 0x45, 0x1, 0x0);
        gbc.writeMem(0xcde2, { 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x23cc, gbc.sp());
        EXPECT(0xcde3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcde2));
        // 98 02C3
        gbc.setState(0xae8c, 0xb65f, 0x9c40, 0xf76b, 0x4090, 0x4830, 0x1, 0x0);
        gbc.writeMem(0xae8c, { 0x98 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb65f, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xae8c));
        // 98 02C4
        gbc.setState(0x644b, 0x5336, 0x2fc0, 0x1b52, 0xefa2, 0x4479, 0x1, 0x1);
        gbc.writeMem(0x644b, { 0x98 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5336, gbc.sp());
        EXPECT(0x644c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02C5
        gbc.setState(0x3824, 0xe15f, 0xd8a0, 0x2695, 0x9c50, 0x22d7, 0x1, 0x1);
        gbc.writeMem(0x3824, { 0x98 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe15f, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02C6
        gbc.setState(0xdd02, 0x577b, 0x6e70, 0x534e, 0x9ba, 0x26d5, 0x0, 0x1);
        gbc.writeMem(0xdd02, { 0x98 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdd02));
        // 98 02C7
        gbc.setState(0x875f, 0x8235, 0x36c0, 0xd727, 0xc47f, 0xbfed, 0x1, 0x1);
        gbc.writeMem(0x875f, { 0x98 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8235, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x875f));
        // 98 02C8
        gbc.setState(0x1f82, 0x5587, 0x8640, 0x5f95, 0xd89f, 0x5516, 0x1, 0x1);
        gbc.writeMem(0x1f82, { 0x98 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5587, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02C9
        gbc.setState(0xda15, 0x30c0, 0x4e30, 0x275c, 0xbb29, 0x700, 0x1, 0x1);
        gbc.writeMem(0xda15, { 0x98 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x30c0, gbc.sp());
        EXPECT(0xda16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xda15));
        // 98 02CA
        gbc.setState(0x11b6, 0x1b8a, 0xb940, 0xb0b8, 0x7a12, 0x836b, 0x1, 0x0);
        gbc.writeMem(0x11b6, { 0x98 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1b8a, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02CB
        gbc.setState(0x63db, 0xc1bc, 0x400, 0x24b6, 0x4711, 0xa283, 0x0, 0x0);
        gbc.writeMem(0x63db, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc1bc, gbc.sp());
        EXPECT(0x63dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02CC
        gbc.setState(0x59aa, 0xd221, 0x9330, 0xffa2, 0x15c2, 0xb7b4, 0x0, 0x1);
        gbc.writeMem(0x59aa, { 0x98 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd221, gbc.sp());
        EXPECT(0x59ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02CD
        gbc.setState(0xd92f, 0x40d2, 0xc6c0, 0x59b9, 0x296f, 0xe42c, 0x0, 0x0);
        gbc.writeMem(0xd92f, { 0x98 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0xd930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd92f));
        // 98 02CE
        gbc.setState(0x6ff2, 0x2c00, 0xa070, 0xc7e2, 0xbe1a, 0x368e, 0x0, 0x1);
        gbc.writeMem(0x6ff2, { 0x98 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2c00, gbc.sp());
        EXPECT(0x6ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02CF
        gbc.setState(0x985c, 0xbdec, 0x1f80, 0x4164, 0xd5db, 0x3662, 0x0, 0x0);
        gbc.writeMem(0x985c, { 0x98 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbdec, gbc.sp());
        EXPECT(0x985d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x985c));
        // 98 02D0
        gbc.setState(0x722b, 0xf7ea, 0x7530, 0xa3c9, 0x94b, 0x323f, 0x1, 0x1);
        gbc.writeMem(0x722b, { 0x98 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf7ea, gbc.sp());
        EXPECT(0x722c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02D1
        gbc.setState(0x93ac, 0x25ea, 0xa860, 0x5a3e, 0xf856, 0xf39a, 0x1, 0x1);
        gbc.writeMem(0x93ac, { 0x98 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x25ea, gbc.sp());
        EXPECT(0x93ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x93ac));
        // 98 02D2
        gbc.setState(0x935, 0x653c, 0x9560, 0x7a6a, 0xf49d, 0x145f, 0x1, 0x1);
        gbc.writeMem(0x935, { 0x98 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x653c, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02D4
        gbc.setState(0x45e2, 0x1e3e, 0x60, 0xaef8, 0x3812, 0x4956, 0x1, 0x0);
        gbc.writeMem(0x45e2, { 0x98 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1e3e, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02D5
        gbc.setState(0xf42, 0xc9b1, 0xeaa0, 0xef23, 0xd7f2, 0x4a5e, 0x0, 0x0);
        gbc.writeMem(0xf42, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc9b1, gbc.sp());
        EXPECT(0xf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02D6
        gbc.setState(0xcc5a, 0x15a, 0x4180, 0xd74d, 0x45db, 0x7986, 0x0, 0x1);
        gbc.writeMem(0xcc5a, { 0x98 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x15a, gbc.sp());
        EXPECT(0xcc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcc5a));
        // 98 02D7
        gbc.setState(0xda83, 0xc9ee, 0x2900, 0xc4f8, 0x9065, 0xe765, 0x0, 0x1);
        gbc.writeMem(0xda83, { 0x98 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc9ee, gbc.sp());
        EXPECT(0xda84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xda83));
        // 98 02D8
        gbc.setState(0x62b5, 0x530a, 0xcee0, 0xd9ee, 0x1b59, 0x2162, 0x1, 0x1);
        gbc.writeMem(0x62b5, { 0x98 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0x62b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02D9
        gbc.setState(0x43a2, 0xa41a, 0xa370, 0xff55, 0x4ab1, 0xdbab, 0x0, 0x0);
        gbc.writeMem(0x43a2, { 0x98 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa41a, gbc.sp());
        EXPECT(0x43a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02DB
        gbc.setState(0x3c15, 0x746, 0xef60, 0xc054, 0xbd16, 0xc6d2, 0x0, 0x1);
        gbc.writeMem(0x3c15, { 0x98 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x746, gbc.sp());
        EXPECT(0x3c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02DD
        gbc.setState(0x6bc7, 0xf551, 0x1f50, 0xebc6, 0xf12f, 0x648a, 0x0, 0x0);
        gbc.writeMem(0x6bc7, { 0x98 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf551, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02DE
        gbc.setState(0x2215, 0xd190, 0x7ef0, 0xa831, 0x8545, 0x92c3, 0x1, 0x0);
        gbc.writeMem(0x2215, { 0x98 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd190, gbc.sp());
        EXPECT(0x2216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02DF
        gbc.setState(0xecab, 0x2c7d, 0x6b90, 0xb2d6, 0x57b2, 0x4a7b, 0x1, 0x1);
        gbc.writeMem(0xecab, { 0x98 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2c7d, gbc.sp());
        EXPECT(0xecac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xecab));
        // 98 02E0
        gbc.setState(0x3c94, 0x7caf, 0x3d60, 0xac4e, 0xedb, 0xbff4, 0x1, 0x1);
        gbc.writeMem(0x3c94, { 0x98 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7caf, gbc.sp());
        EXPECT(0x3c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02E1
        gbc.setState(0x2cb, 0xece0, 0xf420, 0xa6f6, 0x2ef8, 0x67c5, 0x1, 0x0);
        gbc.writeMem(0x2cb, { 0x98 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xece0, gbc.sp());
        EXPECT(0x2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02E2
        gbc.setState(0x8fa1, 0x5678, 0xb5f0, 0x46e1, 0x2598, 0x824f, 0x0, 0x1);
        gbc.writeMem(0x8fa1, { 0x98 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5678, gbc.sp());
        EXPECT(0x8fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8fa1));
        // 98 02E3
        gbc.setState(0x622a, 0x9e9b, 0x7d10, 0x981e, 0x97a8, 0xef24, 0x1, 0x0);
        gbc.writeMem(0x622a, { 0x98 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0x622b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02E4
        gbc.setState(0x2187, 0xfd25, 0x6fe0, 0x8e5d, 0xb212, 0xab5a, 0x0, 0x0);
        gbc.writeMem(0x2187, { 0x98 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfd25, gbc.sp());
        EXPECT(0x2188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02E5
        gbc.setState(0xef12, 0xf651, 0x9f60, 0x7ebe, 0x7501, 0x640, 0x0, 0x0);
        gbc.writeMem(0xef12, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf651, gbc.sp());
        EXPECT(0xef13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xef12));
        // 98 02E6
        gbc.setState(0xc137, 0xa214, 0xe570, 0x2a4d, 0xc1f5, 0x1a6, 0x1, 0x1);
        gbc.writeMem(0xc137, { 0x98 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa214, gbc.sp());
        EXPECT(0xc138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc137));
        // 98 02E7
        gbc.setState(0x4aae, 0x3308, 0x52f0, 0x77e6, 0xaa52, 0xe0c1, 0x0, 0x0);
        gbc.writeMem(0x4aae, { 0x98 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3308, gbc.sp());
        EXPECT(0x4aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02E8
        gbc.setState(0x5179, 0x3954, 0xf6d0, 0x657d, 0x3cd9, 0x3b0d, 0x0, 0x1);
        gbc.writeMem(0x5179, { 0x98 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3954, gbc.sp());
        EXPECT(0x517a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02E9
        gbc.setState(0x21d9, 0xcfd, 0xffe0, 0x367e, 0x1e3c, 0x1abf, 0x1, 0x0);
        gbc.writeMem(0x21d9, { 0x98 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcfd, gbc.sp());
        EXPECT(0x21da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02EB
        gbc.setState(0x13f3, 0x10a5, 0x490, 0x1508, 0x478c, 0x5bb, 0x1, 0x0);
        gbc.writeMem(0x13f3, { 0x98 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x10a5, gbc.sp());
        EXPECT(0x13f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02EC
        gbc.setState(0xaa4b, 0x4769, 0x9f90, 0xd60c, 0xfd64, 0xd8ac, 0x1, 0x1);
        gbc.writeMem(0xaa4b, { 0x98 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0xaa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaa4b));
        // 98 02ED
        gbc.setState(0xc5f9, 0xc437, 0xba80, 0xa90b, 0xde73, 0x5835, 0x0, 0x0);
        gbc.writeMem(0xc5f9, { 0x98 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc437, gbc.sp());
        EXPECT(0xc5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc5f9));
        // 98 02EE
        gbc.setState(0x2700, 0xdfdd, 0xc130, 0x530e, 0x27d, 0xa38f, 0x1, 0x1);
        gbc.writeMem(0x2700, { 0x98 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdfdd, gbc.sp());
        EXPECT(0x2701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02EF
        gbc.setState(0x3660, 0x9218, 0x840, 0x7063, 0xcf4c, 0xb4cc, 0x0, 0x0);
        gbc.writeMem(0x3660, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9218, gbc.sp());
        EXPECT(0x3661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02F0
        gbc.setState(0x6df0, 0xf7ca, 0xe3e0, 0x5348, 0x11e3, 0xcbdb, 0x1, 0x1);
        gbc.writeMem(0x6df0, { 0x98 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf7ca, gbc.sp());
        EXPECT(0x6df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02F1
        gbc.setState(0xb24, 0x8a5d, 0x7a40, 0xd720, 0xa571, 0x65c6, 0x0, 0x1);
        gbc.writeMem(0xb24, { 0x98 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8a5d, gbc.sp());
        EXPECT(0xb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02F2
        gbc.setState(0x14d3, 0xf68d, 0x8ff0, 0x1b8c, 0xa68e, 0xa24b, 0x0, 0x0);
        gbc.writeMem(0x14d3, { 0x98 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf68d, gbc.sp());
        EXPECT(0x14d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02F3
        gbc.setState(0x6bb8, 0x578c, 0x3b90, 0x971e, 0x8f22, 0x709a, 0x1, 0x0);
        gbc.writeMem(0x6bb8, { 0x98 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x578c, gbc.sp());
        EXPECT(0x6bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02F4
        gbc.setState(0x8522, 0x28f2, 0xcc80, 0x14e3, 0x4aa7, 0xfeb4, 0x1, 0x1);
        gbc.writeMem(0x8522, { 0x98 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x28f2, gbc.sp());
        EXPECT(0x8523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8522));
        // 98 02F5
        gbc.setState(0x1180, 0xc267, 0xf6c0, 0xbc6e, 0x25b9, 0xdda8, 0x0, 0x1);
        gbc.writeMem(0x1180, { 0x98 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc267, gbc.sp());
        EXPECT(0x1181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02F6
        gbc.setState(0x9cbd, 0x7a73, 0xb320, 0x22, 0xf9e3, 0x3732, 0x0, 0x0);
        gbc.writeMem(0x9cbd, { 0x98 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9cbd));
        // 98 02F7
        gbc.setState(0x512a, 0x8638, 0x7210, 0xd673, 0x19f1, 0x341f, 0x1, 0x0);
        gbc.writeMem(0x512a, { 0x98 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0x512b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02F8
        gbc.setState(0xed2c, 0x511e, 0x110, 0x45e8, 0xdbe7, 0xde17, 0x0, 0x1);
        gbc.writeMem(0xed2c, { 0x98 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x511e, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xed2c));
        // 98 02F9
        gbc.setState(0x2a00, 0xbab5, 0x2100, 0xd04b, 0xa129, 0xcbbe, 0x1, 0x0);
        gbc.writeMem(0x2a00, { 0x98 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbab5, gbc.sp());
        EXPECT(0x2a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02FA
        gbc.setState(0x31ec, 0x549, 0x17e0, 0x941, 0x81f3, 0xa3ea, 0x0, 0x1);
        gbc.writeMem(0x31ec, { 0x98 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x549, gbc.sp());
        EXPECT(0x31ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02FB
        gbc.setState(0x9290, 0x3f93, 0x2310, 0xdf5d, 0xd84b, 0x350a, 0x0, 0x0);
        gbc.writeMem(0x9290, { 0x98 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3f93, gbc.sp());
        EXPECT(0x9291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9290));
        // 98 02FC
        gbc.setState(0x7c3e, 0x4f2a, 0xa7b0, 0x8dec, 0x6776, 0xb93e, 0x0, 0x1);
        gbc.writeMem(0x7c3e, { 0x98 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4f2a, gbc.sp());
        EXPECT(0x7c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 02FD
        gbc.setState(0x60e7, 0xc4dd, 0x66f0, 0xf5e8, 0xce77, 0xbea9, 0x1, 0x0);
        gbc.writeMem(0x60e7, { 0x98 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc4dd, gbc.sp());
        EXPECT(0x60e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02FE
        gbc.setState(0xf17, 0x3cd2, 0x6480, 0xd55c, 0x1632, 0xbeee, 0x0, 0x1);
        gbc.writeMem(0xf17, { 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 02FF
        gbc.setState(0x847d, 0x8451, 0xa740, 0x5a5b, 0xefd4, 0xe0c3, 0x0, 0x1);
        gbc.writeMem(0x847d, { 0x98 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0x847e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x847d));
        // 98 0300
        gbc.setState(0x2935, 0xd2b, 0xe6b0, 0x7d40, 0x64fe, 0xc9e9, 0x1, 0x1);
        gbc.writeMem(0x2935, { 0x98 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd2b, gbc.sp());
        EXPECT(0x2936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0301
        gbc.setState(0xbc6d, 0x96a8, 0x4f70, 0xc3e1, 0x23b4, 0x4d7b, 0x1, 0x1);
        gbc.writeMem(0xbc6d, { 0x98 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x96a8, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbc6d));
        // 98 0302
        gbc.setState(0xb982, 0xe090, 0x2080, 0xd933, 0xf5da, 0x4743, 0x1, 0x1);
        gbc.writeMem(0xb982, { 0x98 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0xb983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb982));
        // 98 0303
        gbc.setState(0x8b41, 0xf225, 0xb240, 0x4dfd, 0x7912, 0x92c9, 0x1, 0x1);
        gbc.writeMem(0x8b41, { 0x98 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf225, gbc.sp());
        EXPECT(0x8b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8b41));
        // 98 0304
        gbc.setState(0x7341, 0xa4d, 0x54e0, 0xb490, 0x9dfe, 0xe585, 0x0, 0x0);
        gbc.writeMem(0x7341, { 0x98 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0x7342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0305
        gbc.setState(0xb842, 0x8b3f, 0xbcf0, 0xc7c9, 0xeb6f, 0xdd93, 0x0, 0x1);
        gbc.writeMem(0xb842, { 0x98 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8b3f, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb842));
        // 98 0306
        gbc.setState(0xb2f8, 0xbab3, 0x6520, 0x42a8, 0x12e2, 0x56f1, 0x1, 0x0);
        gbc.writeMem(0xb2f8, { 0x98 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0xb2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb2f8));
        // 98 0307
        gbc.setState(0xd110, 0x75c6, 0x2b00, 0x45e9, 0xc4db, 0xddc3, 0x0, 0x1);
        gbc.writeMem(0xd110, { 0x98 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x75c6, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd110));
        // 98 0308
        gbc.setState(0x428f, 0xd6ad, 0x4cd0, 0x1d7f, 0x68b8, 0x4ae0, 0x1, 0x0);
        gbc.writeMem(0x428f, { 0x98 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd6ad, gbc.sp());
        EXPECT(0x4290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0309
        gbc.setState(0x56bc, 0xb04b, 0x8c50, 0xcd4d, 0xb0ab, 0xaa6d, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0x98 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb04b, gbc.sp());
        EXPECT(0x56bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 030A
        gbc.setState(0x828b, 0xd49, 0x8d40, 0x164c, 0x779a, 0x362a, 0x1, 0x1);
        gbc.writeMem(0x828b, { 0x98 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd49, gbc.sp());
        EXPECT(0x828c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x828b));
        // 98 030B
        gbc.setState(0x58b4, 0xdaf5, 0xe940, 0x61ad, 0x2c23, 0xf215, 0x0, 0x1);
        gbc.writeMem(0x58b4, { 0x98 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdaf5, gbc.sp());
        EXPECT(0x58b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 030C
        gbc.setState(0xe7c5, 0xf8ec, 0xb390, 0x7b97, 0x2dfd, 0xb258, 0x0, 0x0);
        gbc.writeMem(0xe7c5, { 0x98 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf8ec, gbc.sp());
        EXPECT(0xe7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe7c5));
        // 98 030D
        gbc.setState(0x70bc, 0x2b1e, 0x97b0, 0xfc04, 0xbc72, 0xbf77, 0x0, 0x1);
        gbc.writeMem(0x70bc, { 0x98 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2b1e, gbc.sp());
        EXPECT(0x70bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 030E
        gbc.setState(0xea4, 0xede, 0xdf70, 0x2aca, 0x6989, 0xbba7, 0x1, 0x1);
        gbc.writeMem(0xea4, { 0x98 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xede, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 030F
        gbc.setState(0x3619, 0x4549, 0xf790, 0xd7ee, 0x3bd4, 0xb8c7, 0x1, 0x0);
        gbc.writeMem(0x3619, { 0x98 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4549, gbc.sp());
        EXPECT(0x361a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0310
        gbc.setState(0x4554, 0x54c7, 0x82d0, 0x6e8, 0x1a9b, 0x2b98, 0x0, 0x0);
        gbc.writeMem(0x4554, { 0x98 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x54c7, gbc.sp());
        EXPECT(0x4555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0311
        gbc.setState(0x48ff, 0xd2ae, 0x64b0, 0xbb31, 0xa20c, 0xa0c8, 0x1, 0x1);
        gbc.writeMem(0x48ff, { 0x98 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd2ae, gbc.sp());
        EXPECT(0x4900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0312
        gbc.setState(0xccfe, 0x8a09, 0x78f0, 0x8be7, 0x77bf, 0xd122, 0x0, 0x1);
        gbc.writeMem(0xccfe, { 0x98 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8a09, gbc.sp());
        EXPECT(0xccff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xccfe));
        // 98 0313
        gbc.setState(0xc5a0, 0xee8a, 0x6600, 0x79d, 0x5ac7, 0xb791, 0x1, 0x0);
        gbc.writeMem(0xc5a0, { 0x98 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xee8a, gbc.sp());
        EXPECT(0xc5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc5a0));
        // 98 0314
        gbc.setState(0x6f01, 0x1909, 0x4570, 0x9861, 0x6465, 0x2959, 0x0, 0x0);
        gbc.writeMem(0x6f01, { 0x98 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1909, gbc.sp());
        EXPECT(0x6f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0315
        gbc.setState(0x6985, 0xe49a, 0x3ab0, 0x80ed, 0xc046, 0xc732, 0x0, 0x0);
        gbc.writeMem(0x6985, { 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe49a, gbc.sp());
        EXPECT(0x6986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0316
        gbc.setState(0xd217, 0xdc66, 0x3b30, 0x14f0, 0x321, 0xfce5, 0x0, 0x0);
        gbc.writeMem(0xd217, { 0x98 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdc66, gbc.sp());
        EXPECT(0xd218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd217));
        // 98 0317
        gbc.setState(0x49f7, 0x47eb, 0xf120, 0x313a, 0xf946, 0x8ae5, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0x98 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x47eb, gbc.sp());
        EXPECT(0x49f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0318
        gbc.setState(0x98bd, 0x65fc, 0x5f00, 0xe245, 0x3cb5, 0xd4d5, 0x1, 0x1);
        gbc.writeMem(0x98bd, { 0x98 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x65fc, gbc.sp());
        EXPECT(0x98be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x98bd));
        // 98 0319
        gbc.setState(0x827a, 0xd704, 0x36e0, 0x8cd7, 0x3656, 0x5407, 0x1, 0x1);
        gbc.writeMem(0x827a, { 0x98 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd704, gbc.sp());
        EXPECT(0x827b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x827a));
        // 98 031A
        gbc.setState(0x92c, 0x1965, 0x7400, 0x53e1, 0x292a, 0x691b, 0x1, 0x0);
        gbc.writeMem(0x92c, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1965, gbc.sp());
        EXPECT(0x92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 031C
        gbc.setState(0xea71, 0x9e26, 0x2660, 0xe493, 0x2b9f, 0xf816, 0x0, 0x0);
        gbc.writeMem(0xea71, { 0x98 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9e26, gbc.sp());
        EXPECT(0xea72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xea71));
        // 98 031D
        gbc.setState(0x444a, 0x701, 0x84c0, 0xab83, 0x6e22, 0xab81, 0x1, 0x1);
        gbc.writeMem(0x444a, { 0x98 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0x444b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 031E
        gbc.setState(0xc8e3, 0x4ac3, 0xa1b0, 0x3f7, 0xe402, 0xb5d0, 0x1, 0x0);
        gbc.writeMem(0xc8e3, { 0x98 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4ac3, gbc.sp());
        EXPECT(0xc8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc8e3));
        // 98 031F
        gbc.setState(0xb711, 0x8a8d, 0x30e0, 0x1610, 0x7520, 0x85ea, 0x0, 0x1);
        gbc.writeMem(0xb711, { 0x98 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8a8d, gbc.sp());
        EXPECT(0xb712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb711));
        // 98 0321
        gbc.setState(0x8522, 0xe751, 0x90a0, 0x6af, 0xfaa4, 0x6b03, 0x1, 0x1);
        gbc.writeMem(0x8522, { 0x98 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe751, gbc.sp());
        EXPECT(0x8523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8522));
        // 98 0322
        gbc.setState(0x84e4, 0x6786, 0xab10, 0x124b, 0x4f1c, 0x9c48, 0x0, 0x1);
        gbc.writeMem(0x84e4, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6786, gbc.sp());
        EXPECT(0x84e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x84e4));
        // 98 0323
        gbc.setState(0x3dbf, 0x3531, 0x6aa0, 0xb7b, 0x93e5, 0xec3b, 0x0, 0x1);
        gbc.writeMem(0x3dbf, { 0x98 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3531, gbc.sp());
        EXPECT(0x3dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0324
        gbc.setState(0x7348, 0xb86d, 0x9550, 0x6f1b, 0xa217, 0xf64b, 0x1, 0x0);
        gbc.writeMem(0x7348, { 0x98 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb86d, gbc.sp());
        EXPECT(0x7349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0325
        gbc.setState(0xd89d, 0x603b, 0x3ab0, 0x997, 0xbdbe, 0x94c3, 0x0, 0x0);
        gbc.writeMem(0xd89d, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x603b, gbc.sp());
        EXPECT(0xd89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd89d));
        // 98 0326
        gbc.setState(0x39d6, 0x9b20, 0x88d0, 0x1567, 0x3cb3, 0xae41, 0x0, 0x1);
        gbc.writeMem(0x39d6, { 0x98 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9b20, gbc.sp());
        EXPECT(0x39d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0327
        gbc.setState(0x258a, 0xdcec, 0xdda0, 0x6b90, 0xf961, 0x5119, 0x0, 0x0);
        gbc.writeMem(0x258a, { 0x98 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdcec, gbc.sp());
        EXPECT(0x258b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0328
        gbc.setState(0x408e, 0xe3af, 0x4c10, 0xfb87, 0x4a36, 0xda79, 0x0, 0x0);
        gbc.writeMem(0x408e, { 0x98 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe3af, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 032A
        gbc.setState(0x4491, 0xac73, 0xa6c0, 0x71bf, 0xf278, 0x297, 0x1, 0x1);
        gbc.writeMem(0x4491, { 0x98 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xac73, gbc.sp());
        EXPECT(0x4492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 032B
        gbc.setState(0xc37d, 0xe7b9, 0x6f80, 0x3249, 0x891d, 0x8dbf, 0x1, 0x0);
        gbc.writeMem(0xc37d, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0xc37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc37d));
        // 98 032C
        gbc.setState(0xab0c, 0x3acb, 0xf2b0, 0x1187, 0x3ead, 0xc4e9, 0x1, 0x1);
        gbc.writeMem(0xab0c, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3acb, gbc.sp());
        EXPECT(0xab0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xab0c));
        // 98 032D
        gbc.setState(0xd425, 0xc01c, 0x7b00, 0x7d96, 0xe9d9, 0xbaa0, 0x0, 0x0);
        gbc.writeMem(0xd425, { 0x98 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc01c, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd425));
        // 98 032E
        gbc.setState(0x685c, 0x9f8a, 0x7c90, 0x1854, 0x575, 0x9b1e, 0x1, 0x0);
        gbc.writeMem(0x685c, { 0x98 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9f8a, gbc.sp());
        EXPECT(0x685d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 032F
        gbc.setState(0xd3e3, 0x3167, 0xf6f0, 0xb4b7, 0x6fc, 0x13a6, 0x1, 0x1);
        gbc.writeMem(0xd3e3, { 0x98 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3167, gbc.sp());
        EXPECT(0xd3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd3e3));
        // 98 0330
        gbc.setState(0x5a63, 0x7b83, 0xf860, 0xad2f, 0xce90, 0x6ab9, 0x0, 0x0);
        gbc.writeMem(0x5a63, { 0x98 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7b83, gbc.sp());
        EXPECT(0x5a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0331
        gbc.setState(0xa4e1, 0x2b86, 0x3570, 0x3c2a, 0xce2a, 0x907d, 0x1, 0x0);
        gbc.writeMem(0xa4e1, { 0x98 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0xa4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa4e1));
        // 98 0332
        gbc.setState(0xc73f, 0xaf71, 0xdc80, 0x457d, 0x54de, 0x65cd, 0x1, 0x1);
        gbc.writeMem(0xc73f, { 0x98 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xaf71, gbc.sp());
        EXPECT(0xc740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc73f));
        // 98 0333
        gbc.setState(0x7a5b, 0xdf41, 0xfa70, 0xb860, 0x7e31, 0xbb82, 0x0, 0x1);
        gbc.writeMem(0x7a5b, { 0x98 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0x7a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0334
        gbc.setState(0xb48d, 0x2a45, 0x53f0, 0xebf0, 0x94c8, 0xd14a, 0x1, 0x0);
        gbc.writeMem(0xb48d, { 0x98 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2a45, gbc.sp());
        EXPECT(0xb48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb48d));
        // 98 0335
        gbc.setState(0xb07, 0xeb89, 0xbec0, 0x34cc, 0xccf8, 0x2a0, 0x0, 0x0);
        gbc.writeMem(0xb07, { 0x98 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeb89, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0336
        gbc.setState(0x7c14, 0x41be, 0x2820, 0x60ae, 0x4651, 0x1bda, 0x0, 0x0);
        gbc.writeMem(0x7c14, { 0x98 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x41be, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0337
        gbc.setState(0xbf0, 0x3570, 0x28f0, 0x9e30, 0x3561, 0x128d, 0x0, 0x0);
        gbc.writeMem(0xbf0, { 0x98 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3570, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0338
        gbc.setState(0xa251, 0xa532, 0x1440, 0xfc41, 0x3399, 0x76cd, 0x1, 0x0);
        gbc.writeMem(0xa251, { 0x98 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa532, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa251));
        // 98 0339
        gbc.setState(0xd59e, 0x718d, 0x59f0, 0x1f63, 0xcb9d, 0xa118, 0x1, 0x1);
        gbc.writeMem(0xd59e, { 0x98 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x718d, gbc.sp());
        EXPECT(0xd59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd59e));
        // 98 033B
        gbc.setState(0x5ac1, 0x2d20, 0x7240, 0x36b, 0xfd7a, 0xbbea, 0x1, 0x0);
        gbc.writeMem(0x5ac1, { 0x98 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x5ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 033C
        gbc.setState(0x8ab6, 0x256d, 0x76e0, 0x2d06, 0x7e8d, 0x4a4c, 0x1, 0x0);
        gbc.writeMem(0x8ab6, { 0x98 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x256d, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8ab6));
        // 98 033D
        gbc.setState(0xe187, 0x4783, 0xa200, 0x1f39, 0x6059, 0x6d4d, 0x0, 0x1);
        gbc.writeMem(0xe187, { 0x98 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4783, gbc.sp());
        EXPECT(0xe188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe187));
        // 98 033F
        gbc.setState(0x4aec, 0x55a0, 0x6700, 0xde70, 0x3d03, 0xf9c7, 0x0, 0x0);
        gbc.writeMem(0x4aec, { 0x98 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0x4aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0341
        gbc.setState(0x9b1f, 0x3c8b, 0x5660, 0xc20c, 0xc27b, 0xcc6d, 0x0, 0x1);
        gbc.writeMem(0x9b1f, { 0x98 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3c8b, gbc.sp());
        EXPECT(0x9b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9b1f));
        // 98 0342
        gbc.setState(0x4160, 0x8ab5, 0xe090, 0xbbe3, 0x1b1f, 0xe161, 0x1, 0x0);
        gbc.writeMem(0x4160, { 0x98 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8ab5, gbc.sp());
        EXPECT(0x4161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0343
        gbc.setState(0x1996, 0xa6a, 0x7aa0, 0x64b, 0x444b, 0x7479, 0x0, 0x1);
        gbc.writeMem(0x1996, { 0x98 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0x1997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0344
        gbc.setState(0x2d7d, 0x3c4c, 0x74a0, 0xd96b, 0x6504, 0x333, 0x0, 0x0);
        gbc.writeMem(0x2d7d, { 0x98 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3c4c, gbc.sp());
        EXPECT(0x2d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0345
        gbc.setState(0xc56a, 0x1a2d, 0x70, 0x6d32, 0xd683, 0xf0ce, 0x1, 0x1);
        gbc.writeMem(0xc56a, { 0x98 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1a2d, gbc.sp());
        EXPECT(0xc56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc56a));
        // 98 0346
        gbc.setState(0x827, 0xccc9, 0x8290, 0xb61d, 0x5bf8, 0xb8e2, 0x0, 0x0);
        gbc.writeMem(0x827, { 0x98 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xccc9, gbc.sp());
        EXPECT(0x828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0347
        gbc.setState(0xdbe5, 0x4fcc, 0xf400, 0x25d, 0x396b, 0x6fc6, 0x0, 0x1);
        gbc.writeMem(0xdbe5, { 0x98 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4fcc, gbc.sp());
        EXPECT(0xdbe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdbe5));
        // 98 0348
        gbc.setState(0x429, 0x352f, 0xc0b0, 0x5e29, 0x85d5, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0x429, { 0x98 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x352f, gbc.sp());
        EXPECT(0x42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0349
        gbc.setState(0xd2ef, 0xfd06, 0x4e30, 0x422b, 0xd229, 0x67c9, 0x0, 0x0);
        gbc.writeMem(0xd2ef, { 0x98 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfd06, gbc.sp());
        EXPECT(0xd2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd2ef));
        // 98 034A
        gbc.setState(0x62ac, 0xeb8a, 0xa570, 0xaa4c, 0xfaf, 0x3f1f, 0x1, 0x0);
        gbc.writeMem(0x62ac, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeb8a, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 034B
        gbc.setState(0xdbc2, 0x8aba, 0x9050, 0x533, 0x2583, 0x9dab, 0x1, 0x0);
        gbc.writeMem(0xdbc2, { 0x98 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8aba, gbc.sp());
        EXPECT(0xdbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdbc2));
        // 98 034C
        gbc.setState(0xd085, 0xe1b, 0x2620, 0x3e9e, 0xde15, 0xf8d4, 0x0, 0x1);
        gbc.writeMem(0xd085, { 0x98 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe1b, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd085));
        // 98 034D
        gbc.setState(0x5a62, 0xe532, 0xa5b0, 0x51dd, 0xebbe, 0xc27e, 0x1, 0x1);
        gbc.writeMem(0x5a62, { 0x98 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe532, gbc.sp());
        EXPECT(0x5a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 034E
        gbc.setState(0x4865, 0x4701, 0x1230, 0x5894, 0x506d, 0xe5fc, 0x0, 0x0);
        gbc.writeMem(0x4865, { 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4701, gbc.sp());
        EXPECT(0x4866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 034F
        gbc.setState(0x7e49, 0x4475, 0xb660, 0x7cfe, 0x20c8, 0x2e02, 0x0, 0x1);
        gbc.writeMem(0x7e49, { 0x98 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4475, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0350
        gbc.setState(0x65cf, 0xd714, 0x3f20, 0x999a, 0x901d, 0x638, 0x0, 0x1);
        gbc.writeMem(0x65cf, { 0x98 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd714, gbc.sp());
        EXPECT(0x65d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0351
        gbc.setState(0x3e70, 0x9fd2, 0x6b20, 0x7329, 0x1bd2, 0xa1e6, 0x0, 0x0);
        gbc.writeMem(0x3e70, { 0x98 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9fd2, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0352
        gbc.setState(0x5333, 0x557d, 0x3450, 0x137c, 0x61ea, 0xad14, 0x0, 0x1);
        gbc.writeMem(0x5333, { 0x98 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x557d, gbc.sp());
        EXPECT(0x5334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0354
        gbc.setState(0xa188, 0xf0cf, 0x3bd0, 0xf04b, 0x17d7, 0x8b39, 0x0, 0x1);
        gbc.writeMem(0xa188, { 0x98 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf0cf, gbc.sp());
        EXPECT(0xa189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa188));
        // 98 0355
        gbc.setState(0x58ca, 0x2b10, 0xcc30, 0x95ad, 0xd622, 0x80cc, 0x1, 0x0);
        gbc.writeMem(0x58ca, { 0x98 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2b10, gbc.sp());
        EXPECT(0x58cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0356
        gbc.setState(0x46e5, 0xc50e, 0x8260, 0x452a, 0x5d1d, 0xbe95, 0x1, 0x1);
        gbc.writeMem(0x46e5, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc50e, gbc.sp());
        EXPECT(0x46e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0357
        gbc.setState(0x7c27, 0x1c87, 0xcbc0, 0x8306, 0x917f, 0x84e2, 0x0, 0x0);
        gbc.writeMem(0x7c27, { 0x98 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1c87, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0358
        gbc.setState(0x431c, 0x2abb, 0x44f0, 0xf396, 0x98ae, 0xad0f, 0x0, 0x0);
        gbc.writeMem(0x431c, { 0x98 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0359
        gbc.setState(0x8ec3, 0x93c6, 0x7d50, 0x7a3a, 0xcd1a, 0xe0b9, 0x0, 0x1);
        gbc.writeMem(0x8ec3, { 0x98 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x93c6, gbc.sp());
        EXPECT(0x8ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8ec3));
        // 98 035A
        gbc.setState(0x77bf, 0x1f6a, 0x4ba0, 0x96fa, 0x8614, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0x77bf, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1f6a, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 035B
        gbc.setState(0xc223, 0xd4a1, 0xd910, 0x8301, 0x7949, 0xdfad, 0x1, 0x0);
        gbc.writeMem(0xc223, { 0x98 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd4a1, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc223));
        // 98 035C
        gbc.setState(0xdb95, 0xcdae, 0xb370, 0x3d3f, 0x5461, 0xd10d, 0x0, 0x0);
        gbc.writeMem(0xdb95, { 0x98 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcdae, gbc.sp());
        EXPECT(0xdb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdb95));
        // 98 035D
        gbc.setState(0x201c, 0x5742, 0xc10, 0x849d, 0x91a, 0x453f, 0x0, 0x0);
        gbc.writeMem(0x201c, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5742, gbc.sp());
        EXPECT(0x201d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 035E
        gbc.setState(0xe3d1, 0x4d8e, 0xa290, 0xea91, 0xddce, 0x4360, 0x1, 0x0);
        gbc.writeMem(0xe3d1, { 0x98 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4d8e, gbc.sp());
        EXPECT(0xe3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe3d1));
        // 98 035F
        gbc.setState(0x3ba3, 0xd80e, 0x61e0, 0x314b, 0x1f30, 0x29ca, 0x0, 0x0);
        gbc.writeMem(0x3ba3, { 0x98 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd80e, gbc.sp());
        EXPECT(0x3ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0361
        gbc.setState(0x2f8e, 0x347d, 0x6970, 0xf58d, 0x80a8, 0x6f70, 0x0, 0x0);
        gbc.writeMem(0x2f8e, { 0x98 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x347d, gbc.sp());
        EXPECT(0x2f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0362
        gbc.setState(0x2422, 0xf6fb, 0x3e80, 0xb6fd, 0xee94, 0x8db2, 0x0, 0x0);
        gbc.writeMem(0x2422, { 0x98 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf6fb, gbc.sp());
        EXPECT(0x2423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0363
        gbc.setState(0x1acb, 0xb2ad, 0xe480, 0x28a4, 0xbe96, 0x9ce5, 0x0, 0x0);
        gbc.writeMem(0x1acb, { 0x98 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb2ad, gbc.sp());
        EXPECT(0x1acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0364
        gbc.setState(0x79b3, 0xf69d, 0xde50, 0x3eec, 0x4554, 0xd54e, 0x1, 0x0);
        gbc.writeMem(0x79b3, { 0x98 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf69d, gbc.sp());
        EXPECT(0x79b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0365
        gbc.setState(0xbda8, 0xa8b0, 0x8f10, 0x4fc2, 0xc10, 0x2394, 0x0, 0x0);
        gbc.writeMem(0xbda8, { 0x98 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa8b0, gbc.sp());
        EXPECT(0xbda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbda8));
        // 98 0366
        gbc.setState(0xa1c0, 0xa3c1, 0xb70, 0x1024, 0x4d61, 0x7ec2, 0x1, 0x1);
        gbc.writeMem(0xa1c0, { 0x98 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa3c1, gbc.sp());
        EXPECT(0xa1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa1c0));
        // 98 0367
        gbc.setState(0x10f3, 0xbe7c, 0x2550, 0x15d9, 0xd8d3, 0x7bd5, 0x0, 0x0);
        gbc.writeMem(0x10f3, { 0x98 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbe7c, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0368
        gbc.setState(0x5214, 0x542d, 0xd8e0, 0xb462, 0x257d, 0x5e0c, 0x1, 0x1);
        gbc.writeMem(0x5214, { 0x98 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x5215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0369
        gbc.setState(0x224e, 0x9944, 0x7eb0, 0xe750, 0xdb95, 0xa12d, 0x1, 0x1);
        gbc.writeMem(0x224e, { 0x98 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9944, gbc.sp());
        EXPECT(0x224f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 036A
        gbc.setState(0x1334, 0x6928, 0xfec0, 0x2a00, 0xdcd, 0x85bc, 0x1, 0x1);
        gbc.writeMem(0x1334, { 0x98 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6928, gbc.sp());
        EXPECT(0x1335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 036B
        gbc.setState(0xd326, 0xbc25, 0xf6b0, 0xb853, 0x6743, 0x529e, 0x0, 0x1);
        gbc.writeMem(0xd326, { 0x98 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbc25, gbc.sp());
        EXPECT(0xd327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd326));
        // 98 036C
        gbc.setState(0xe69e, 0x3dad, 0x8060, 0xa537, 0x5a25, 0xe48a, 0x0, 0x1);
        gbc.writeMem(0xe69e, { 0x98 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3dad, gbc.sp());
        EXPECT(0xe69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe69e));
        // 98 036D
        gbc.setState(0x37b6, 0x5f65, 0x1280, 0xab8d, 0x3a5c, 0x60b, 0x0, 0x0);
        gbc.writeMem(0x37b6, { 0x98 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5f65, gbc.sp());
        EXPECT(0x37b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 036E
        gbc.setState(0xcc53, 0xce50, 0x8c00, 0x359d, 0xac82, 0xe1b9, 0x0, 0x1);
        gbc.writeMem(0xcc53, { 0x98 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xce50, gbc.sp());
        EXPECT(0xcc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcc53));
        // 98 036F
        gbc.setState(0x5efb, 0x776c, 0xe520, 0xc9eb, 0x4290, 0x2e33, 0x0, 0x0);
        gbc.writeMem(0x5efb, { 0x98 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0x5efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0370
        gbc.setState(0x238c, 0xf776, 0xdb90, 0x93c0, 0xd466, 0xd32a, 0x0, 0x1);
        gbc.writeMem(0x238c, { 0x98 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf776, gbc.sp());
        EXPECT(0x238d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0371
        gbc.setState(0x35f1, 0xde7f, 0x4820, 0x351f, 0xdad8, 0x6c52, 0x0, 0x1);
        gbc.writeMem(0x35f1, { 0x98 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xde7f, gbc.sp());
        EXPECT(0x35f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0372
        gbc.setState(0xa3a8, 0x256a, 0x4850, 0x4c59, 0xbab5, 0x276c, 0x0, 0x1);
        gbc.writeMem(0xa3a8, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x256a, gbc.sp());
        EXPECT(0xa3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa3a8));
        // 98 0373
        gbc.setState(0x3824, 0x1db7, 0xaf40, 0xcb69, 0xbcaa, 0xc82d, 0x1, 0x1);
        gbc.writeMem(0x3824, { 0x98 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1db7, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0374
        gbc.setState(0x3481, 0x1025, 0x7270, 0x1cb0, 0x524d, 0x4f5a, 0x0, 0x1);
        gbc.writeMem(0x3481, { 0x98 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1025, gbc.sp());
        EXPECT(0x3482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0375
        gbc.setState(0x63a5, 0xcf35, 0x4e70, 0x138e, 0xb07d, 0x3cec, 0x1, 0x1);
        gbc.writeMem(0x63a5, { 0x98 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcf35, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0377
        gbc.setState(0x9218, 0x19b5, 0x34f0, 0x9a06, 0x6bdc, 0xa0f5, 0x1, 0x1);
        gbc.writeMem(0x9218, { 0x98 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x19b5, gbc.sp());
        EXPECT(0x9219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9218));
        // 98 0378
        gbc.setState(0x7c64, 0x87cf, 0xbe30, 0x8b86, 0x91cf, 0x2980, 0x1, 0x1);
        gbc.writeMem(0x7c64, { 0x98 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x87cf, gbc.sp());
        EXPECT(0x7c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0379
        gbc.setState(0x64d5, 0xc2c5, 0x3580, 0x1149, 0x4c24, 0x2ad0, 0x1, 0x0);
        gbc.writeMem(0x64d5, { 0x98 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc2c5, gbc.sp());
        EXPECT(0x64d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 037A
        gbc.setState(0x2e88, 0xb54d, 0x570, 0x4f36, 0x823d, 0x7ba7, 0x0, 0x1);
        gbc.writeMem(0x2e88, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb54d, gbc.sp());
        EXPECT(0x2e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 037B
        gbc.setState(0x9bff, 0xcafd, 0x6c0, 0x8d20, 0x57c5, 0x4cb4, 0x1, 0x0);
        gbc.writeMem(0x9bff, { 0x98 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcafd, gbc.sp());
        EXPECT(0x9c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9bff));
        // 98 037C
        gbc.setState(0x1b0, 0xb145, 0xa570, 0x34cd, 0x9dbf, 0x114, 0x0, 0x0);
        gbc.writeMem(0x1b0, { 0x98 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 037D
        gbc.setState(0xcdc6, 0xd921, 0x5f80, 0xdc82, 0x6798, 0xb4d4, 0x1, 0x1);
        gbc.writeMem(0xcdc6, { 0x98 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd921, gbc.sp());
        EXPECT(0xcdc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcdc6));
        // 98 037E
        gbc.setState(0x388c, 0xd4d1, 0x87a0, 0xb7e6, 0xa4e, 0xa5ff, 0x0, 0x1);
        gbc.writeMem(0x388c, { 0x98 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd4d1, gbc.sp());
        EXPECT(0x388d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 037F
        gbc.setState(0xc6b8, 0x7bef, 0xb630, 0x20f0, 0x6273, 0xdc27, 0x0, 0x0);
        gbc.writeMem(0xc6b8, { 0x98 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc6b8));
        // 98 0380
        gbc.setState(0x293a, 0xdcd0, 0x2230, 0xe576, 0x7163, 0x8f41, 0x0, 0x1);
        gbc.writeMem(0x293a, { 0x98 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdcd0, gbc.sp());
        EXPECT(0x293b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0381
        gbc.setState(0x2085, 0x7c7e, 0x7630, 0x1b1b, 0xb705, 0xa069, 0x0, 0x1);
        gbc.writeMem(0x2085, { 0x98 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7c7e, gbc.sp());
        EXPECT(0x2086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0382
        gbc.setState(0x868b, 0xbabf, 0x5d00, 0x74ca, 0x236e, 0xd39b, 0x0, 0x0);
        gbc.writeMem(0x868b, { 0x98 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbabf, gbc.sp());
        EXPECT(0x868c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x868b));
        // 98 0383
        gbc.setState(0xccac, 0x90df, 0x150, 0x6029, 0xcac, 0x48ea, 0x1, 0x1);
        gbc.writeMem(0xccac, { 0x98 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x90df, gbc.sp());
        EXPECT(0xccad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xccac));
        // 98 0384
        gbc.setState(0x24c7, 0xd15a, 0x3190, 0x44df, 0xf107, 0x5b46, 0x1, 0x0);
        gbc.writeMem(0x24c7, { 0x98 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd15a, gbc.sp());
        EXPECT(0x24c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0385
        gbc.setState(0xa400, 0x6a4d, 0x6ad0, 0x2dc8, 0x7885, 0x997d, 0x0, 0x0);
        gbc.writeMem(0xa400, { 0x98 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6a4d, gbc.sp());
        EXPECT(0xa401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa400));
        // 98 0386
        gbc.setState(0x6b0e, 0x8646, 0x3130, 0x4017, 0xffb5, 0x6ada, 0x0, 0x1);
        gbc.writeMem(0x6b0e, { 0x98 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0x6b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0387
        gbc.setState(0x323, 0xf389, 0x2520, 0x2bd, 0xc594, 0xfb83, 0x1, 0x0);
        gbc.writeMem(0x323, { 0x98 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0x324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0388
        gbc.setState(0x7b6e, 0x680f, 0xace0, 0xf19e, 0x4820, 0xd727, 0x0, 0x1);
        gbc.writeMem(0x7b6e, { 0x98 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x680f, gbc.sp());
        EXPECT(0x7b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0389
        gbc.setState(0x73ff, 0x8ca5, 0x4420, 0x94bd, 0x97d9, 0x6067, 0x0, 0x0);
        gbc.writeMem(0x73ff, { 0x98 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8ca5, gbc.sp());
        EXPECT(0x7400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 038A
        gbc.setState(0x79ac, 0xc102, 0x1990, 0x80af, 0x66e7, 0xd179, 0x1, 0x0);
        gbc.writeMem(0x79ac, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc102, gbc.sp());
        EXPECT(0x79ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 038B
        gbc.setState(0x1478, 0xea8d, 0xbbe0, 0x28d1, 0x4b7e, 0xc8ce, 0x0, 0x0);
        gbc.writeMem(0x1478, { 0x98 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xea8d, gbc.sp());
        EXPECT(0x1479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 038C
        gbc.setState(0x6f53, 0x2d46, 0x29a0, 0xfbc, 0x53ea, 0xf48f, 0x1, 0x0);
        gbc.writeMem(0x6f53, { 0x98 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2d46, gbc.sp());
        EXPECT(0x6f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 038D
        gbc.setState(0xe2b8, 0xe8f4, 0x45f0, 0xe6f2, 0xab03, 0xf7cd, 0x1, 0x1);
        gbc.writeMem(0xe2b8, { 0x98 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe8f4, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe2b8));
        // 98 038E
        gbc.setState(0x46fa, 0x5463, 0xb560, 0xc767, 0x1b6e, 0xa6fe, 0x1, 0x1);
        gbc.writeMem(0x46fa, { 0x98 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5463, gbc.sp());
        EXPECT(0x46fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 038F
        gbc.setState(0x66d9, 0xd698, 0x42d0, 0x8154, 0x9720, 0xebe8, 0x1, 0x1);
        gbc.writeMem(0x66d9, { 0x98 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd698, gbc.sp());
        EXPECT(0x66da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0390
        gbc.setState(0x9fbf, 0x309d, 0x2550, 0x65f, 0x5d42, 0xa67a, 0x1, 0x0);
        gbc.writeMem(0x9fbf, { 0x98 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0x9fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9fbf));
        // 98 0391
        gbc.setState(0x5960, 0xb470, 0x98e0, 0xb340, 0x1560, 0xb9ad, 0x1, 0x0);
        gbc.writeMem(0x5960, { 0x98 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb470, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0392
        gbc.setState(0x59ca, 0x7869, 0x7270, 0x7eba, 0x578d, 0x4570, 0x0, 0x1);
        gbc.writeMem(0x59ca, { 0x98 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7869, gbc.sp());
        EXPECT(0x59cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0393
        gbc.setState(0x8539, 0x8742, 0xacc0, 0xbec, 0xcf36, 0x46b0, 0x1, 0x0);
        gbc.writeMem(0x8539, { 0x98 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8742, gbc.sp());
        EXPECT(0x853a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8539));
        // 98 0394
        gbc.setState(0xe59b, 0x2363, 0xafd0, 0x4f3e, 0x4ece, 0xe417, 0x0, 0x1);
        gbc.writeMem(0xe59b, { 0x98 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0xe59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe59b));
        // 98 0395
        gbc.setState(0x94ac, 0x6ca2, 0xfe10, 0x4137, 0x9e48, 0x8ccf, 0x1, 0x1);
        gbc.writeMem(0x94ac, { 0x98 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6ca2, gbc.sp());
        EXPECT(0x94ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x94ac));
        // 98 0396
        gbc.setState(0x201f, 0x366f, 0x6c10, 0xff6f, 0xff34, 0xd7ea, 0x0, 0x1);
        gbc.writeMem(0x201f, { 0x98 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x366f, gbc.sp());
        EXPECT(0x2020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 0397
        gbc.setState(0xe722, 0x476b, 0x2280, 0x801a, 0xbcfb, 0xfe6f, 0x1, 0x1);
        gbc.writeMem(0xe722, { 0x98 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0xe723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe722));
        // 98 0398
        gbc.setState(0x29e8, 0x85f1, 0x4e30, 0x25f, 0xe54c, 0xb935, 0x0, 0x0);
        gbc.writeMem(0x29e8, { 0x98 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x85f1, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 0399
        gbc.setState(0x685b, 0x979c, 0xee60, 0xefe0, 0xa966, 0xef3b, 0x1, 0x1);
        gbc.writeMem(0x685b, { 0x98 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x979c, gbc.sp());
        EXPECT(0x685c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 039A
        gbc.setState(0xee24, 0x8068, 0x6160, 0xf9f5, 0xe9df, 0xb27a, 0x0, 0x0);
        gbc.writeMem(0xee24, { 0x98 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8068, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xee24));
        // 98 039B
        gbc.setState(0x5d75, 0x9ee6, 0xeac0, 0x638b, 0x9ef8, 0x1256, 0x1, 0x0);
        gbc.writeMem(0x5d75, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0x5d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 039C
        gbc.setState(0x4fda, 0xae25, 0x1470, 0x2d6c, 0x5573, 0x8c0f, 0x1, 0x0);
        gbc.writeMem(0x4fda, { 0x98 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xae25, gbc.sp());
        EXPECT(0x4fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 039D
        gbc.setState(0x8a82, 0xfc79, 0x7eb0, 0xf12a, 0x839c, 0x9, 0x1, 0x1);
        gbc.writeMem(0x8a82, { 0x98 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfc79, gbc.sp());
        EXPECT(0x8a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8a82));
        // 98 039F
        gbc.setState(0x98b3, 0xbcfe, 0x5ac0, 0x8eb5, 0x2d79, 0x2fe9, 0x0, 0x0);
        gbc.writeMem(0x98b3, { 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbcfe, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x98b3));
        // 98 03A0
        gbc.setState(0x6a2d, 0xf705, 0xb410, 0x3bd8, 0x35cf, 0x96d2, 0x1, 0x0);
        gbc.writeMem(0x6a2d, { 0x98 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0x6a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03A1
        gbc.setState(0xea2c, 0x8db0, 0xa80, 0x8c1c, 0x3338, 0x9d53, 0x0, 0x0);
        gbc.writeMem(0xea2c, { 0x98 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8db0, gbc.sp());
        EXPECT(0xea2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xea2c));
        // 98 03A2
        gbc.setState(0x72d4, 0x1775, 0x2d10, 0x173e, 0x3332, 0x2db4, 0x1, 0x0);
        gbc.writeMem(0x72d4, { 0x98 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1775, gbc.sp());
        EXPECT(0x72d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03A3
        gbc.setState(0xbf67, 0xa270, 0x4f50, 0xa4ab, 0x6d14, 0xd51e, 0x0, 0x0);
        gbc.writeMem(0xbf67, { 0x98 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0xbf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbf67));
        // 98 03A4
        gbc.setState(0x38b9, 0x1816, 0x1c40, 0x7b32, 0x16d5, 0x2895, 0x0, 0x0);
        gbc.writeMem(0x38b9, { 0x98 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0x38ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03A5
        gbc.setState(0x1cc8, 0x40bf, 0xba10, 0x9ae3, 0x6c12, 0x73ef, 0x1, 0x1);
        gbc.writeMem(0x1cc8, { 0x98 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0x1cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03A6
        gbc.setState(0x8fad, 0x7fd8, 0x6bf0, 0x48c6, 0x3823, 0x6be8, 0x1, 0x1);
        gbc.writeMem(0x8fad, { 0x98 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7fd8, gbc.sp());
        EXPECT(0x8fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8fad));
        // 98 03A7
        gbc.setState(0x32d7, 0xb74a, 0x3390, 0x7164, 0xf0f5, 0x1595, 0x1, 0x0);
        gbc.writeMem(0x32d7, { 0x98 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb74a, gbc.sp());
        EXPECT(0x32d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03A9
        gbc.setState(0x7615, 0xf3c7, 0xe830, 0xa741, 0xc948, 0x3470, 0x1, 0x1);
        gbc.writeMem(0x7615, { 0x98 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf3c7, gbc.sp());
        EXPECT(0x7616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03AA
        gbc.setState(0x4520, 0x3adb, 0xf900, 0xfe2f, 0xf352, 0xdef1, 0x0, 0x0);
        gbc.writeMem(0x4520, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3adb, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03AB
        gbc.setState(0x8dd5, 0xc8cf, 0x1d20, 0x71df, 0xed01, 0xfeff, 0x1, 0x0);
        gbc.writeMem(0x8dd5, { 0x98 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc8cf, gbc.sp());
        EXPECT(0x8dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8dd5));
        // 98 03AC
        gbc.setState(0x29fd, 0xf137, 0x4b20, 0x9646, 0x8d96, 0x7893, 0x1, 0x1);
        gbc.writeMem(0x29fd, { 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf137, gbc.sp());
        EXPECT(0x29fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03AD
        gbc.setState(0x5bd4, 0xef28, 0x1ec0, 0xb35, 0xb16a, 0x59e5, 0x0, 0x1);
        gbc.writeMem(0x5bd4, { 0x98 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xef28, gbc.sp());
        EXPECT(0x5bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03AE
        gbc.setState(0x6627, 0xb7a4, 0x9d60, 0x9036, 0x6fab, 0x4bc8, 0x1, 0x1);
        gbc.writeMem(0x6627, { 0x98 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb7a4, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03AF
        gbc.setState(0x9e0a, 0x2d4e, 0x6f30, 0xdee0, 0x844c, 0xa28, 0x1, 0x0);
        gbc.writeMem(0x9e0a, { 0x98 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0x9e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9e0a));
        // 98 03B0
        gbc.setState(0xb6f2, 0x87a, 0x7b10, 0x18af, 0x8525, 0xb9c1, 0x0, 0x0);
        gbc.writeMem(0xb6f2, { 0x98 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x87a, gbc.sp());
        EXPECT(0xb6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb6f2));
        // 98 03B1
        gbc.setState(0x1426, 0xc71d, 0xf710, 0xdfa5, 0x81f2, 0x1385, 0x1, 0x0);
        gbc.writeMem(0x1426, { 0x98 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc71d, gbc.sp());
        EXPECT(0x1427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03B2
        gbc.setState(0x5dfc, 0x379, 0x5eb0, 0xd670, 0xc732, 0xe0b5, 0x1, 0x1);
        gbc.writeMem(0x5dfc, { 0x98 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x379, gbc.sp());
        EXPECT(0x5dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03B3
        gbc.setState(0x72d, 0x8b39, 0x2990, 0x3423, 0x5c18, 0x80a4, 0x0, 0x1);
        gbc.writeMem(0x72d, { 0x98 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8b39, gbc.sp());
        EXPECT(0x72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03B4
        gbc.setState(0x7a94, 0xd092, 0xa230, 0xaf7c, 0x8c39, 0x21ae, 0x1, 0x1);
        gbc.writeMem(0x7a94, { 0x98 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd092, gbc.sp());
        EXPECT(0x7a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03B5
        gbc.setState(0xc80d, 0xabaa, 0x470, 0x2dc, 0x27a3, 0x47e6, 0x0, 0x0);
        gbc.writeMem(0xc80d, { 0x98 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xabaa, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc80d));
        // 98 03B6
        gbc.setState(0x37e4, 0x1524, 0x9270, 0x5b62, 0xa4e5, 0xb292, 0x0, 0x0);
        gbc.writeMem(0x37e4, { 0x98 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03B7
        gbc.setState(0x4fec, 0xf857, 0x3370, 0xf81d, 0xf696, 0x573c, 0x0, 0x0);
        gbc.writeMem(0x4fec, { 0x98 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf857, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03B8
        gbc.setState(0xb00c, 0xccac, 0x6e60, 0x2a60, 0x834c, 0x978e, 0x0, 0x1);
        gbc.writeMem(0xb00c, { 0x98 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xccac, gbc.sp());
        EXPECT(0xb00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb00c));
        // 98 03BA
        gbc.setState(0x28a9, 0x4c7c, 0xe3e0, 0xd990, 0xb1f, 0xfec7, 0x1, 0x1);
        gbc.writeMem(0x28a9, { 0x98 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4c7c, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03BB
        gbc.setState(0xcbf, 0xdc28, 0x8a10, 0x7a7, 0xb653, 0x99f4, 0x1, 0x1);
        gbc.writeMem(0xcbf, { 0x98 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdc28, gbc.sp());
        EXPECT(0xcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03BC
        gbc.setState(0x29ef, 0x8fa6, 0x6860, 0x149c, 0xdc8d, 0x4da, 0x0, 0x0);
        gbc.writeMem(0x29ef, { 0x98 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8fa6, gbc.sp());
        EXPECT(0x29f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03BE
        gbc.setState(0x7804, 0x23a9, 0xe590, 0xd180, 0xba5c, 0x8c22, 0x0, 0x1);
        gbc.writeMem(0x7804, { 0x98 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x23a9, gbc.sp());
        EXPECT(0x7805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03BF
        gbc.setState(0x2b8a, 0xc519, 0xbb20, 0x53e4, 0x9edf, 0xb4a5, 0x0, 0x0);
        gbc.writeMem(0x2b8a, { 0x98 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0x2b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03C0
        gbc.setState(0xbfec, 0xd36d, 0x53f0, 0x599f, 0x95ba, 0x99a1, 0x1, 0x1);
        gbc.writeMem(0xbfec, { 0x98 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd36d, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbfec));
        // 98 03C1
        gbc.setState(0xede7, 0x1334, 0x7480, 0x4c29, 0x352c, 0x1db6, 0x1, 0x1);
        gbc.writeMem(0xede7, { 0x98 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1334, gbc.sp());
        EXPECT(0xede8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xede7));
        // 98 03C3
        gbc.setState(0x58cc, 0x7dfe, 0x36d0, 0xefef, 0xe056, 0xcd4e, 0x1, 0x1);
        gbc.writeMem(0x58cc, { 0x98 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7dfe, gbc.sp());
        EXPECT(0x58cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03C4
        gbc.setState(0x4a96, 0x2308, 0x4140, 0x3ce, 0xbe95, 0xb2fb, 0x0, 0x0);
        gbc.writeMem(0x4a96, { 0x98 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2308, gbc.sp());
        EXPECT(0x4a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03C5
        gbc.setState(0x85fc, 0xfed, 0x5e00, 0xa6de, 0xb819, 0xfbea, 0x0, 0x1);
        gbc.writeMem(0x85fc, { 0x98 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfed, gbc.sp());
        EXPECT(0x85fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x85fc));
        // 98 03C6
        gbc.setState(0xcce8, 0xaa02, 0x1210, 0x7dc2, 0xfab8, 0xcb34, 0x0, 0x1);
        gbc.writeMem(0xcce8, { 0x98 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaa02, gbc.sp());
        EXPECT(0xcce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcce8));
        // 98 03C7
        gbc.setState(0x41cc, 0xfe16, 0x8de0, 0x72d7, 0x7b0c, 0x5ee4, 0x1, 0x1);
        gbc.writeMem(0x41cc, { 0x98 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfe16, gbc.sp());
        EXPECT(0x41cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03C8
        gbc.setState(0x3014, 0x4602, 0x40c0, 0x1377, 0x66bf, 0x6d39, 0x1, 0x1);
        gbc.writeMem(0x3014, { 0x98 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4602, gbc.sp());
        EXPECT(0x3015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03C9
        gbc.setState(0x6a91, 0xa6db, 0x2360, 0x4ed6, 0xdc11, 0x4862, 0x1, 0x1);
        gbc.writeMem(0x6a91, { 0x98 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa6db, gbc.sp());
        EXPECT(0x6a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03CA
        gbc.setState(0x9afd, 0x2995, 0x59a0, 0x8e43, 0x66, 0x7c44, 0x1, 0x1);
        gbc.writeMem(0x9afd, { 0x98 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2995, gbc.sp());
        EXPECT(0x9afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9afd));
        // 98 03CB
        gbc.setState(0x43a, 0x6ae9, 0xd340, 0x8ceb, 0xb23a, 0xc0a8, 0x1, 0x1);
        gbc.writeMem(0x43a, { 0x98 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6ae9, gbc.sp());
        EXPECT(0x43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03CC
        gbc.setState(0x4ac4, 0xb481, 0x8a80, 0xc880, 0x3b4c, 0xcc18, 0x1, 0x1);
        gbc.writeMem(0x4ac4, { 0x98 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb481, gbc.sp());
        EXPECT(0x4ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03CD
        gbc.setState(0xdc57, 0x57fa, 0x68d0, 0x9c7c, 0x76a3, 0xbde8, 0x0, 0x0);
        gbc.writeMem(0xdc57, { 0x98 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x57fa, gbc.sp());
        EXPECT(0xdc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdc57));
        // 98 03CE
        gbc.setState(0x2079, 0x3b52, 0x1540, 0x353f, 0x6932, 0xd33a, 0x1, 0x0);
        gbc.writeMem(0x2079, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3b52, gbc.sp());
        EXPECT(0x207a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03CF
        gbc.setState(0x633d, 0x379a, 0xd6f0, 0x268b, 0xfa75, 0xe139, 0x0, 0x0);
        gbc.writeMem(0x633d, { 0x98 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x379a, gbc.sp());
        EXPECT(0x633e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03D1
        gbc.setState(0x797a, 0x4e60, 0x6f60, 0x6266, 0x53d, 0x841e, 0x0, 0x0);
        gbc.writeMem(0x797a, { 0x98 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4e60, gbc.sp());
        EXPECT(0x797b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03D2
        gbc.setState(0xabff, 0x8340, 0x41d0, 0x8f45, 0xb270, 0x4947, 0x0, 0x1);
        gbc.writeMem(0xabff, { 0x98 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8340, gbc.sp());
        EXPECT(0xac00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xabff));
        // 98 03D3
        gbc.setState(0xc3c9, 0x1e27, 0xa540, 0x6e66, 0xf88a, 0x66ea, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0x98 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1e27, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc3c9));
        // 98 03D4
        gbc.setState(0x7788, 0x479a, 0xa920, 0xdb74, 0x8d5c, 0x6c66, 0x0, 0x0);
        gbc.writeMem(0x7788, { 0x98 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x479a, gbc.sp());
        EXPECT(0x7789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03D5
        gbc.setState(0x37f6, 0xec46, 0x6fa0, 0xa3a7, 0x9bd6, 0x74fd, 0x1, 0x0);
        gbc.writeMem(0x37f6, { 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xec46, gbc.sp());
        EXPECT(0x37f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03D6
        gbc.setState(0xdb75, 0xddfd, 0x7ce0, 0x2474, 0x5344, 0x3d1b, 0x1, 0x0);
        gbc.writeMem(0xdb75, { 0x98 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xddfd, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdb75));
        // 98 03D7
        gbc.setState(0x418e, 0xea9b, 0xd660, 0x78f, 0xe0a8, 0xd35c, 0x1, 0x0);
        gbc.writeMem(0x418e, { 0x98 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xea9b, gbc.sp());
        EXPECT(0x418f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03D8
        gbc.setState(0x2ee1, 0x41b6, 0x8e90, 0xf335, 0x6d79, 0x9cbe, 0x1, 0x1);
        gbc.writeMem(0x2ee1, { 0x98 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0x2ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03D9
        gbc.setState(0xb8f0, 0xeea, 0x8d0, 0x7000, 0x2143, 0xa60f, 0x1, 0x0);
        gbc.writeMem(0xb8f0, { 0x98 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeea, gbc.sp());
        EXPECT(0xb8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb8f0));
        // 98 03DA
        gbc.setState(0x169e, 0xfe80, 0xc3e0, 0xeaf5, 0xdb49, 0x3cc8, 0x0, 0x1);
        gbc.writeMem(0x169e, { 0x98 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfe80, gbc.sp());
        EXPECT(0x169f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03DB
        gbc.setState(0xac34, 0x3ede, 0x7510, 0x94bf, 0x79b8, 0x758d, 0x1, 0x1);
        gbc.writeMem(0xac34, { 0x98 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3ede, gbc.sp());
        EXPECT(0xac35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xac34));
        // 98 03DC
        gbc.setState(0xdc94, 0xcd11, 0xba40, 0xf180, 0x9fa, 0x8568, 0x1, 0x0);
        gbc.writeMem(0xdc94, { 0x98 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0xdc95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdc94));
        // 98 03DD
        gbc.setState(0x387c, 0xc2fe, 0x1d20, 0xd95, 0x88cf, 0xb1b9, 0x1, 0x0);
        gbc.writeMem(0x387c, { 0x98 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc2fe, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03DE
        gbc.setState(0x707c, 0x783b, 0x7b10, 0xa9a5, 0xd4ad, 0xf81c, 0x0, 0x0);
        gbc.writeMem(0x707c, { 0x98 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0x707d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03DF
        gbc.setState(0x9109, 0xff7e, 0xca80, 0x8ae4, 0xa1a9, 0x4143, 0x1, 0x0);
        gbc.writeMem(0x9109, { 0x98 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xff7e, gbc.sp());
        EXPECT(0x910a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9109));
        // 98 03E0
        gbc.setState(0x17b9, 0x56a7, 0x1f10, 0x317e, 0xbebc, 0x8c63, 0x0, 0x0);
        gbc.writeMem(0x17b9, { 0x98 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0x17ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03E1
        gbc.setState(0x3495, 0xb407, 0x7b80, 0x7b59, 0x845d, 0x1871, 0x0, 0x1);
        gbc.writeMem(0x3495, { 0x98 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0x3496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 98 03E2
        gbc.setState(0xdb44, 0x2e78, 0xa40, 0xfb3e, 0x3586, 0xaaf1, 0x1, 0x1);
        gbc.writeMem(0xdb44, { 0x98 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2e78, gbc.sp());
        EXPECT(0xdb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdb44));
        // 98 03E3
        gbc.setState(0x8684, 0x53b3, 0x11e0, 0xc17, 0x2d0a, 0xca15, 0x1, 0x0);
        gbc.writeMem(0x8684, { 0x98 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x53b3, gbc.sp());
        EXPECT(0x8685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8684));
        // 98 03E4
        gbc.setState(0x6bd6, 0xf0f1, 0x3c90, 0xc509, 0x3281, 0x3342, 0x1, 0x1);
        gbc.writeMem(0x6bd6, { 0x98 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf0f1, gbc.sp());
        EXPECT(0x6bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03E5
        gbc.setState(0x499e, 0x293a, 0x9990, 0xd0c2, 0xe255, 0xfbe8, 0x1, 0x1);
        gbc.writeMem(0x499e, { 0x98 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x293a, gbc.sp());
        EXPECT(0x499f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 98 03E6
        gbc.setState(0x8a84, 0xebd, 0x8ee0, 0x431e, 0x9d9e, 0xda0, 0x1, 0x1);
        gbc.writeMem(0x8a84, { 0x98 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xebd, gbc.sp());
        EXPECT(0x8a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8a84));
        // 98 03E7
        gbc.setState(0xe4af, 0x3516, 0xe290, 0xc0b9, 0x510d, 0x807a, 0x1, 0x1);
        gbc.writeMem(0xe4af, { 0x98 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe4af));
    }
