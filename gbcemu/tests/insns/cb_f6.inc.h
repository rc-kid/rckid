    TEST(gbcemu, opcode_cb_f6) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F6 0000
        gbc.setState(0x793a, 0x6150, 0x4470, 0xbd37, 0x4002, 0x87a5, 0x1, 0x0);
        gbc.writeMem(0x793a, { 0xcb, 0xf6 });
        gbc.writeMem(0x87a5, { 0x62 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6150, gbc.sp());
        EXPECT(0x793c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x87a5));
        // CB F6 0002
        gbc.setState(0x62cf, 0xf4d3, 0xee00, 0xf472, 0x471f, 0xa8d1, 0x0, 0x0);
        gbc.writeMem(0x62cf, { 0xcb, 0xf6 });
        gbc.writeMem(0xa8d1, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf4d3, gbc.sp());
        EXPECT(0x62d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa8d1));
        // CB F6 0003
        gbc.setState(0x64ec, 0xc3c7, 0x7ee0, 0x2b14, 0x6c78, 0xd134, 0x1, 0x0);
        gbc.writeMem(0x64ec, { 0xcb, 0xf6 });
        gbc.writeMem(0xd134, { 0x7c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc3c7, gbc.sp());
        EXPECT(0x64ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xd134));
        // CB F6 0004
        gbc.setState(0x5fcd, 0x27e3, 0xe00, 0x36b9, 0x731, 0xbf9b, 0x1, 0x1);
        gbc.writeMem(0x5fcd, { 0xcb, 0xf6 });
        gbc.writeMem(0xbf9b, { 0xf6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0x5fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xbf9b));
        // CB F6 0006
        gbc.setState(0x40b, 0xfe12, 0xda40, 0x1d2e, 0xf271, 0xc257, 0x0, 0x0);
        gbc.writeMem(0x40b, { 0xcb, 0xf6 });
        gbc.writeMem(0xc257, { 0x4f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe12, gbc.sp());
        EXPECT(0x40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xc257));
        // CB F6 0007
        gbc.setState(0xc692, 0x2316, 0xe2b0, 0x98c7, 0x7bc7, 0xf2c0, 0x0, 0x1);
        gbc.writeMem(0xc692, { 0xcb, 0xf6 });
        gbc.writeMem(0xf2c0, { 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0xc694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc692));
        EXPECT(0xf6, gbc.readMem(0xc693));
        EXPECT(0xdf, gbc.readMem(0xf2c0));
        // CB F6 0008
        gbc.setState(0x3177, 0xed0b, 0x13e0, 0x4f20, 0x7087, 0xfd40, 0x0, 0x1);
        gbc.writeMem(0x3177, { 0xcb, 0xf6 });
        gbc.writeMem(0xfd40, { 0xd6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0x3179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xfd40));
        // CB F6 000A
        gbc.setState(0x2ebe, 0xdbf3, 0x4af0, 0x521c, 0x2a46, 0xfaf1, 0x1, 0x0);
        gbc.writeMem(0x2ebe, { 0xcb, 0xf6 });
        gbc.writeMem(0xfaf1, { 0xf6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdbf3, gbc.sp());
        EXPECT(0x2ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xfaf1));
        // CB F6 000B
        gbc.setState(0xd7d9, 0xf854, 0xf90, 0xd682, 0xa2b0, 0x2bc8, 0x0, 0x1);
        gbc.writeMem(0x2bc8, { 0xe2 });
        gbc.writeMem(0xd7d9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf854, gbc.sp());
        EXPECT(0xd7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d9));
        EXPECT(0xf6, gbc.readMem(0xd7da));
        // CB F6 000C
        gbc.setState(0x8a5, 0xaf6d, 0x98e0, 0x142f, 0xcf11, 0x417e, 0x0, 0x1);
        gbc.writeMem(0x8a5, { 0xcb, 0xf6 });
        gbc.writeMem(0x417e, { 0xec });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaf6d, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 000D
        gbc.setState(0xb4c3, 0x1f4a, 0x1a80, 0x81bc, 0x9f19, 0xdfc8, 0x0, 0x1);
        gbc.writeMem(0xb4c3, { 0xcb, 0xf6 });
        gbc.writeMem(0xdfc8, { 0x72 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1f4a, gbc.sp());
        EXPECT(0xb4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c3));
        EXPECT(0xf6, gbc.readMem(0xb4c4));
        EXPECT(0x72, gbc.readMem(0xdfc8));
        // CB F6 000E
        gbc.setState(0x2bd, 0x4365, 0x5560, 0xf5aa, 0xe289, 0x23fb, 0x0, 0x0);
        gbc.writeMem(0x2bd, { 0xcb, 0xf6 });
        gbc.writeMem(0x23fb, { 0x5c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4365, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0010
        gbc.setState(0xa3eb, 0x1b5c, 0x8080, 0x2a38, 0xfe6a, 0xa61c, 0x0, 0x1);
        gbc.writeMem(0xa3eb, { 0xcb, 0xf6 });
        gbc.writeMem(0xa61c, { 0x40 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1b5c, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3eb));
        EXPECT(0xf6, gbc.readMem(0xa3ec));
        EXPECT(0x40, gbc.readMem(0xa61c));
        // CB F6 0011
        gbc.setState(0x9dc1, 0x17ad, 0xb190, 0x1a4c, 0x4fd8, 0x722c, 0x1, 0x0);
        gbc.writeMem(0x722c, { 0x4e });
        gbc.writeMem(0x9dc1, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x9dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc1));
        EXPECT(0xf6, gbc.readMem(0x9dc2));
        // CB F6 0012
        gbc.setState(0xefa1, 0xa9fe, 0x7e10, 0x8ff1, 0x5eb2, 0x44e2, 0x0, 0x1);
        gbc.writeMem(0x44e2, { 0xcb });
        gbc.writeMem(0xefa1, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa9fe, gbc.sp());
        EXPECT(0xefa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa1));
        EXPECT(0xf6, gbc.readMem(0xefa2));
        // CB F6 0014
        gbc.setState(0xa63d, 0x8b3c, 0x3040, 0xc7f0, 0xd350, 0xb407, 0x1, 0x0);
        gbc.writeMem(0xa63d, { 0xcb, 0xf6 });
        gbc.writeMem(0xb407, { 0xc3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8b3c, gbc.sp());
        EXPECT(0xa63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63d));
        EXPECT(0xf6, gbc.readMem(0xa63e));
        EXPECT(0xc3, gbc.readMem(0xb407));
        // CB F6 0015
        gbc.setState(0x5940, 0x74e2, 0x9270, 0x114a, 0x69d8, 0xd22c, 0x0, 0x1);
        gbc.writeMem(0x5940, { 0xcb, 0xf6 });
        gbc.writeMem(0xd22c, { 0x8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x74e2, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd22c));
        // CB F6 0016
        gbc.setState(0xb2ee, 0x3d69, 0xbd30, 0x2f28, 0xf0ba, 0xd7ae, 0x1, 0x0);
        gbc.writeMem(0xb2ee, { 0xcb, 0xf6 });
        gbc.writeMem(0xd7ae, { 0x80 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0xb2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ee));
        EXPECT(0xf6, gbc.readMem(0xb2ef));
        EXPECT(0xc0, gbc.readMem(0xd7ae));
        // CB F6 0017
        gbc.setState(0xd7e8, 0x59b8, 0xa690, 0x2553, 0x79b9, 0x9980, 0x1, 0x0);
        gbc.writeMem(0x9980, { 0xf4 });
        gbc.writeMem(0xd7e8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x59b8, gbc.sp());
        EXPECT(0xd7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9980));
        EXPECT(0xcb, gbc.readMem(0xd7e8));
        EXPECT(0xf6, gbc.readMem(0xd7e9));
        // CB F6 0018
        gbc.setState(0x8c3d, 0xa5b8, 0x22f0, 0x12a3, 0xb866, 0x8f04, 0x0, 0x1);
        gbc.writeMem(0x8c3d, { 0xcb, 0xf6 });
        gbc.writeMem(0x8f04, { 0xeb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa5b8, gbc.sp());
        EXPECT(0x8c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3d));
        EXPECT(0xf6, gbc.readMem(0x8c3e));
        EXPECT(0xeb, gbc.readMem(0x8f04));
        // CB F6 0019
        gbc.setState(0x103a, 0x8840, 0x510, 0x64f9, 0x67cd, 0x7883, 0x0, 0x1);
        gbc.writeMem(0x103a, { 0xcb, 0xf6 });
        gbc.writeMem(0x7883, { 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8840, gbc.sp());
        EXPECT(0x103c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 001A
        gbc.setState(0x76f3, 0x7cef, 0x60a0, 0x17a9, 0xb7da, 0xb515, 0x0, 0x1);
        gbc.writeMem(0x76f3, { 0xcb, 0xf6 });
        gbc.writeMem(0xb515, { 0xdd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7cef, gbc.sp());
        EXPECT(0x76f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xb515));
        // CB F6 001B
        gbc.setState(0x6585, 0x576a, 0x5f20, 0x9e0c, 0x13e0, 0xfd, 0x0, 0x0);
        gbc.writeMem(0xfd, { 0x46 });
        gbc.writeMem(0x6585, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0x6587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 001D
        gbc.setState(0x446e, 0x417, 0xd890, 0x78d6, 0xffed, 0xeda1, 0x0, 0x0);
        gbc.writeMem(0x446e, { 0xcb, 0xf6 });
        gbc.writeMem(0xeda1, { 0x51 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x417, gbc.sp());
        EXPECT(0x4470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeda1));
        // CB F6 001F
        gbc.setState(0x71c, 0x10f0, 0xb300, 0x5bb6, 0x444d, 0xf3d5, 0x1, 0x0);
        gbc.writeMem(0x71c, { 0xcb, 0xf6 });
        gbc.writeMem(0xf3d5, { 0xfd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xf3d5));
        // CB F6 0021
        gbc.setState(0x7577, 0x4031, 0xa810, 0xdf43, 0x1c23, 0xdfab, 0x0, 0x1);
        gbc.writeMem(0x7577, { 0xcb, 0xf6 });
        gbc.writeMem(0xdfab, { 0x6c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4031, gbc.sp());
        EXPECT(0x7579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdfab));
        // CB F6 0023
        gbc.setState(0x95b8, 0x9ef, 0xe580, 0xfe04, 0x4eb7, 0xe27b, 0x0, 0x1);
        gbc.writeMem(0x95b8, { 0xcb, 0xf6 });
        gbc.writeMem(0xe27b, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9ef, gbc.sp());
        EXPECT(0x95ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b8));
        EXPECT(0xf6, gbc.readMem(0x95b9));
        EXPECT(0xdc, gbc.readMem(0xe27b));
        // CB F6 0024
        gbc.setState(0xc64b, 0x7f2c, 0x6010, 0xa303, 0x5abe, 0xe280, 0x1, 0x1);
        gbc.writeMem(0xc64b, { 0xcb, 0xf6 });
        gbc.writeMem(0xe280, { 0x9a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7f2c, gbc.sp());
        EXPECT(0xc64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64b));
        EXPECT(0xf6, gbc.readMem(0xc64c));
        EXPECT(0xda, gbc.readMem(0xe280));
        // CB F6 0026
        gbc.setState(0x3b16, 0xf95b, 0xc120, 0x4191, 0x3c9b, 0xf041, 0x0, 0x0);
        gbc.writeMem(0x3b16, { 0xcb, 0xf6 });
        gbc.writeMem(0xf041, { 0x92 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xf041));
        // CB F6 0027
        gbc.setState(0x4b7d, 0x5ce5, 0x1470, 0xcdac, 0x9e44, 0x8c9d, 0x1, 0x0);
        gbc.writeMem(0x4b7d, { 0xcb, 0xf6 });
        gbc.writeMem(0x8c9d, { 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5ce5, gbc.sp());
        EXPECT(0x4b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8c9d));
        // CB F6 0028
        gbc.setState(0x8c91, 0x4178, 0xb4a0, 0x9d81, 0x4bed, 0xf83a, 0x0, 0x0);
        gbc.writeMem(0x8c91, { 0xcb, 0xf6 });
        gbc.writeMem(0xf83a, { 0x83 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4178, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c91));
        EXPECT(0xf6, gbc.readMem(0x8c92));
        EXPECT(0xc3, gbc.readMem(0xf83a));
        // CB F6 0029
        gbc.setState(0x57f6, 0x4a0b, 0x4c60, 0xb281, 0xb6b5, 0xa998, 0x0, 0x0);
        gbc.writeMem(0x57f6, { 0xcb, 0xf6 });
        gbc.writeMem(0xa998, { 0x5e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4a0b, gbc.sp());
        EXPECT(0x57f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa998));
        // CB F6 002A
        gbc.setState(0xb65e, 0xf76e, 0xb6e0, 0xafb5, 0x6a6f, 0xe000, 0x0, 0x0);
        gbc.writeMem(0xb65e, { 0xcb, 0xf6 });
        gbc.writeMem(0xe000, { 0x17 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf76e, gbc.sp());
        EXPECT(0xb660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65e));
        EXPECT(0xf6, gbc.readMem(0xb65f));
        EXPECT(0x57, gbc.readMem(0xe000));
        // CB F6 002B
        gbc.setState(0x2ee2, 0x5593, 0x97e0, 0x7ce5, 0x9c55, 0xa5ba, 0x0, 0x1);
        gbc.writeMem(0x2ee2, { 0xcb, 0xf6 });
        gbc.writeMem(0xa5ba, { 0x23 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xa5ba));
        // CB F6 002C
        gbc.setState(0x43d8, 0x8344, 0xa7f0, 0xbaca, 0x720f, 0x5821, 0x1, 0x0);
        gbc.writeMem(0x43d8, { 0xcb, 0xf6 });
        gbc.writeMem(0x5821, { 0x7c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8344, gbc.sp());
        EXPECT(0x43da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 002D
        gbc.setState(0x77b2, 0x3a31, 0xb460, 0x532, 0x1a7d, 0x2b92, 0x0, 0x1);
        gbc.writeMem(0x2b92, { 0x4a });
        gbc.writeMem(0x77b2, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a31, gbc.sp());
        EXPECT(0x77b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0030
        gbc.setState(0x9fca, 0xa3f5, 0x5010, 0x597b, 0x9484, 0x48ab, 0x0, 0x0);
        gbc.writeMem(0x48ab, { 0xe2 });
        gbc.writeMem(0x9fca, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0x9fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fca));
        EXPECT(0xf6, gbc.readMem(0x9fcb));
        // CB F6 0034
        gbc.setState(0x9c90, 0x780e, 0x46e0, 0x1e5f, 0x973c, 0xb05f, 0x1, 0x1);
        gbc.writeMem(0x9c90, { 0xcb, 0xf6 });
        gbc.writeMem(0xb05f, { 0xfa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x780e, gbc.sp());
        EXPECT(0x9c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c90));
        EXPECT(0xf6, gbc.readMem(0x9c91));
        EXPECT(0xfa, gbc.readMem(0xb05f));
        // CB F6 0035
        gbc.setState(0x8d26, 0x3acd, 0x2de0, 0x4a2c, 0xb05e, 0xfb2a, 0x0, 0x0);
        gbc.writeMem(0x8d26, { 0xcb, 0xf6 });
        gbc.writeMem(0xfb2a, { 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3acd, gbc.sp());
        EXPECT(0x8d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d26));
        EXPECT(0xf6, gbc.readMem(0x8d27));
        EXPECT(0xf5, gbc.readMem(0xfb2a));
        // CB F6 0036
        gbc.setState(0x3450, 0xdebc, 0xa790, 0xa9d4, 0xf4b8, 0x9505, 0x1, 0x1);
        gbc.writeMem(0x3450, { 0xcb, 0xf6 });
        gbc.writeMem(0x9505, { 0x87 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdebc, gbc.sp());
        EXPECT(0x3452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9505));
        // CB F6 0038
        gbc.setState(0x1780, 0xd2c4, 0x8f90, 0xbcfe, 0x9d33, 0xd5ae, 0x0, 0x0);
        gbc.writeMem(0x1780, { 0xcb, 0xf6 });
        gbc.writeMem(0xd5ae, { 0xf1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd2c4, gbc.sp());
        EXPECT(0x1782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd5ae));
        // CB F6 0039
        gbc.setState(0xeb6e, 0x9de1, 0xb9d0, 0xeb37, 0xfd87, 0x9c67, 0x1, 0x1);
        gbc.writeMem(0x9c67, { 0x94 });
        gbc.writeMem(0xeb6e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9de1, gbc.sp());
        EXPECT(0xeb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9c67));
        EXPECT(0xcb, gbc.readMem(0xeb6e));
        EXPECT(0xf6, gbc.readMem(0xeb6f));
        // CB F6 003B
        gbc.setState(0x952, 0x20f5, 0xc3c0, 0x1279, 0xda41, 0x9ec5, 0x0, 0x1);
        gbc.writeMem(0x952, { 0xcb, 0xf6 });
        gbc.writeMem(0x9ec5, { 0xb8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x20f5, gbc.sp());
        EXPECT(0x954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9ec5));
        // CB F6 003C
        gbc.setState(0x7e3b, 0x3883, 0x1380, 0xcb78, 0x1995, 0x2aef, 0x1, 0x1);
        gbc.writeMem(0x2aef, { 0x41 });
        gbc.writeMem(0x7e3b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3883, gbc.sp());
        EXPECT(0x7e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 003E
        gbc.setState(0xc746, 0x4f2, 0xe60, 0xbd9b, 0xf4be, 0x1205, 0x0, 0x1);
        gbc.writeMem(0x1205, { 0x69 });
        gbc.writeMem(0xc746, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4f2, gbc.sp());
        EXPECT(0xc748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc746));
        EXPECT(0xf6, gbc.readMem(0xc747));
        // CB F6 003F
        gbc.setState(0x4efa, 0xa81b, 0x5af0, 0x5918, 0x2143, 0xf2b1, 0x0, 0x0);
        gbc.writeMem(0x4efa, { 0xcb, 0xf6 });
        gbc.writeMem(0xf2b1, { 0xec });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0x4efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xf2b1));
        // CB F6 0040
        gbc.setState(0x115, 0xdb83, 0xe170, 0x44fb, 0xa498, 0x113a, 0x1, 0x1);
        gbc.writeMem(0x115, { 0xcb, 0xf6 });
        gbc.writeMem(0x113a, { 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdb83, gbc.sp());
        EXPECT(0x117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0043
        gbc.setState(0x75a6, 0xb73a, 0xf170, 0x51bb, 0x5b82, 0x9288, 0x0, 0x0);
        gbc.writeMem(0x75a6, { 0xcb, 0xf6 });
        gbc.writeMem(0x9288, { 0x5a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb73a, gbc.sp());
        EXPECT(0x75a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9288));
        // CB F6 0044
        gbc.setState(0x1fc3, 0x2d30, 0xddc0, 0xc73e, 0xcb82, 0x8a9f, 0x1, 0x1);
        gbc.writeMem(0x1fc3, { 0xcb, 0xf6 });
        gbc.writeMem(0x8a9f, { 0xcd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x1fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8a9f));
        // CB F6 0045
        gbc.setState(0xcf01, 0x3a9e, 0xf90, 0x4d2d, 0x4a5e, 0x6977, 0x0, 0x1);
        gbc.writeMem(0x6977, { 0x4c });
        gbc.writeMem(0xcf01, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3a9e, gbc.sp());
        EXPECT(0xcf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf01));
        EXPECT(0xf6, gbc.readMem(0xcf02));
        // CB F6 0046
        gbc.setState(0x97a8, 0x798b, 0xfda0, 0xf567, 0xf167, 0x5b4f, 0x1, 0x1);
        gbc.writeMem(0x5b4f, { 0xd3 });
        gbc.writeMem(0x97a8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x798b, gbc.sp());
        EXPECT(0x97aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a8));
        EXPECT(0xf6, gbc.readMem(0x97a9));
        // CB F6 0047
        gbc.setState(0x3f43, 0x9a92, 0xb9f0, 0x40d1, 0x8a6e, 0x9ba9, 0x1, 0x0);
        gbc.writeMem(0x3f43, { 0xcb, 0xf6 });
        gbc.writeMem(0x9ba9, { 0xab });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9a92, gbc.sp());
        EXPECT(0x3f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9ba9));
        // CB F6 0048
        gbc.setState(0x74df, 0x8169, 0xc5d0, 0x94d6, 0xa337, 0xb983, 0x0, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0xf6 });
        gbc.writeMem(0xb983, { 0xb9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xb983));
        // CB F6 0049
        gbc.setState(0x95c3, 0x383d, 0xf8e0, 0x457f, 0x3694, 0xcb9f, 0x0, 0x0);
        gbc.writeMem(0x95c3, { 0xcb, 0xf6 });
        gbc.writeMem(0xcb9f, { 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0x95c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c3));
        EXPECT(0xf6, gbc.readMem(0x95c4));
        EXPECT(0xc9, gbc.readMem(0xcb9f));
        // CB F6 004E
        gbc.setState(0x5eff, 0x646f, 0x3110, 0x7071, 0xe6db, 0xac70, 0x0, 0x1);
        gbc.writeMem(0x5eff, { 0xcb, 0xf6 });
        gbc.writeMem(0xac70, { 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0x5f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xac70));
        // CB F6 004F
        gbc.setState(0xb9f8, 0x2aee, 0x1410, 0x3a79, 0xdf34, 0xa119, 0x1, 0x0);
        gbc.writeMem(0xa119, { 0x3c });
        gbc.writeMem(0xb9f8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2aee, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa119));
        EXPECT(0xcb, gbc.readMem(0xb9f8));
        EXPECT(0xf6, gbc.readMem(0xb9f9));
        // CB F6 0050
        gbc.setState(0x1517, 0x4ab0, 0xc470, 0x8641, 0xac33, 0xa16c, 0x1, 0x0);
        gbc.writeMem(0x1517, { 0xcb, 0xf6 });
        gbc.writeMem(0xa16c, { 0xb0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4ab0, gbc.sp());
        EXPECT(0x1519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa16c));
        // CB F6 0051
        gbc.setState(0x5908, 0x8790, 0xbe70, 0x7b49, 0xdd5f, 0xad28, 0x0, 0x1);
        gbc.writeMem(0x5908, { 0xcb, 0xf6 });
        gbc.writeMem(0xad28, { 0xaf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8790, gbc.sp());
        EXPECT(0x590a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xad28));
        // CB F6 0052
        gbc.setState(0x8c4e, 0xe0d4, 0x28c0, 0x37c3, 0x7349, 0x72d5, 0x0, 0x1);
        gbc.writeMem(0x72d5, { 0x4b });
        gbc.writeMem(0x8c4e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe0d4, gbc.sp());
        EXPECT(0x8c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4e));
        EXPECT(0xf6, gbc.readMem(0x8c4f));
        // CB F6 0054
        gbc.setState(0x2e66, 0x6f94, 0x5750, 0x80b8, 0xbad3, 0xc2c9, 0x0, 0x0);
        gbc.writeMem(0x2e66, { 0xcb, 0xf6 });
        gbc.writeMem(0xc2c9, { 0xf3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6f94, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xc2c9));
        // CB F6 0055
        gbc.setState(0x3323, 0x66a2, 0xb5f0, 0x8097, 0xf5bd, 0xcc26, 0x0, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0xf6 });
        gbc.writeMem(0xcc26, { 0x4c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x66a2, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcc26));
        // CB F6 0056
        gbc.setState(0x5d68, 0x4f5a, 0xe010, 0x671, 0x6120, 0x6a5, 0x0, 0x1);
        gbc.writeMem(0x6a5, { 0xc1 });
        gbc.writeMem(0x5d68, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4f5a, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0057
        gbc.setState(0x2c7b, 0xfdf, 0xada0, 0x5232, 0x69f, 0x8a8c, 0x0, 0x1);
        gbc.writeMem(0x2c7b, { 0xcb, 0xf6 });
        gbc.writeMem(0x8a8c, { 0xf2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfdf, gbc.sp());
        EXPECT(0x2c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8a8c));
        // CB F6 0058
        gbc.setState(0x6221, 0xfb66, 0xcb00, 0x8003, 0xc4ed, 0xbe12, 0x0, 0x1);
        gbc.writeMem(0x6221, { 0xcb, 0xf6 });
        gbc.writeMem(0xbe12, { 0x71 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfb66, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbe12));
        // CB F6 0059
        gbc.setState(0xcd9d, 0x68e9, 0xec70, 0x7282, 0x94d5, 0x1125, 0x0, 0x1);
        gbc.writeMem(0x1125, { 0xde });
        gbc.writeMem(0xcd9d, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x68e9, gbc.sp());
        EXPECT(0xcd9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9d));
        EXPECT(0xf6, gbc.readMem(0xcd9e));
        // CB F6 005B
        gbc.setState(0xebf1, 0x516b, 0xac20, 0x5469, 0xacd8, 0xf42e, 0x1, 0x1);
        gbc.writeMem(0xebf1, { 0xcb, 0xf6 });
        gbc.writeMem(0xf42e, { 0x21 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0xebf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf1));
        EXPECT(0xf6, gbc.readMem(0xebf2));
        EXPECT(0x61, gbc.readMem(0xf42e));
        // CB F6 005C
        gbc.setState(0x8a85, 0x5d21, 0x9c80, 0x6dfc, 0x912c, 0x82be, 0x0, 0x1);
        gbc.writeMem(0x82be, { 0xac });
        gbc.writeMem(0x8a85, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0x8a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x82be));
        EXPECT(0xcb, gbc.readMem(0x8a85));
        EXPECT(0xf6, gbc.readMem(0x8a86));
        // CB F6 005D
        gbc.setState(0x53e9, 0x303f, 0x8490, 0x9627, 0xd736, 0xa9a9, 0x1, 0x0);
        gbc.writeMem(0x53e9, { 0xcb, 0xf6 });
        gbc.writeMem(0xa9a9, { 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x303f, gbc.sp());
        EXPECT(0x53eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa9a9));
        // CB F6 005E
        gbc.setState(0x7252, 0x332, 0x5250, 0xb413, 0x577f, 0x4096, 0x0, 0x0);
        gbc.writeMem(0x4096, { 0x67 });
        gbc.writeMem(0x7252, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x332, gbc.sp());
        EXPECT(0x7254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 005F
        gbc.setState(0xdb66, 0x81cc, 0x8df0, 0xa623, 0x677, 0x31ba, 0x0, 0x1);
        gbc.writeMem(0x31ba, { 0x57 });
        gbc.writeMem(0xdb66, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x81cc, gbc.sp());
        EXPECT(0xdb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb66));
        EXPECT(0xf6, gbc.readMem(0xdb67));
        // CB F6 0061
        gbc.setState(0xde16, 0x1108, 0xe230, 0x480e, 0x5a4e, 0x39ed, 0x1, 0x1);
        gbc.writeMem(0x39ed, { 0xfe });
        gbc.writeMem(0xde16, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1108, gbc.sp());
        EXPECT(0xde18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde16));
        EXPECT(0xf6, gbc.readMem(0xde17));
        // CB F6 0063
        gbc.setState(0x5360, 0x7dd, 0x1360, 0x2604, 0xbda4, 0x4c4e, 0x1, 0x0);
        gbc.writeMem(0x4c4e, { 0xcc });
        gbc.writeMem(0x5360, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7dd, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0064
        gbc.setState(0x9978, 0x33fb, 0x3e10, 0xf591, 0xfd5, 0xc4f6, 0x0, 0x1);
        gbc.writeMem(0x9978, { 0xcb, 0xf6 });
        gbc.writeMem(0xc4f6, { 0xe });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x33fb, gbc.sp());
        EXPECT(0x997a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9978));
        EXPECT(0xf6, gbc.readMem(0x9979));
        EXPECT(0x4e, gbc.readMem(0xc4f6));
        // CB F6 0065
        gbc.setState(0xc696, 0xd40a, 0xa2c0, 0x6144, 0xf8b9, 0xd11b, 0x0, 0x1);
        gbc.writeMem(0xc696, { 0xcb, 0xf6 });
        gbc.writeMem(0xd11b, { 0xf7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd40a, gbc.sp());
        EXPECT(0xc698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc696));
        EXPECT(0xf6, gbc.readMem(0xc697));
        EXPECT(0xf7, gbc.readMem(0xd11b));
        // CB F6 0066
        gbc.setState(0xea9e, 0xedff, 0x76e0, 0xd557, 0x51dc, 0x832b, 0x0, 0x1);
        gbc.writeMem(0x832b, { 0x5f });
        gbc.writeMem(0xea9e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xedff, gbc.sp());
        EXPECT(0xeaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x832b));
        EXPECT(0xcb, gbc.readMem(0xea9e));
        EXPECT(0xf6, gbc.readMem(0xea9f));
        // CB F6 0067
        gbc.setState(0x8ebd, 0xbcb1, 0x48d0, 0x7af2, 0xd084, 0x4b0e, 0x0, 0x1);
        gbc.writeMem(0x4b0e, { 0xd8 });
        gbc.writeMem(0x8ebd, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbcb1, gbc.sp());
        EXPECT(0x8ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebd));
        EXPECT(0xf6, gbc.readMem(0x8ebe));
        // CB F6 0068
        gbc.setState(0xb497, 0x30a2, 0x9940, 0x78fa, 0x64c7, 0xe8df, 0x0, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0xf6 });
        gbc.writeMem(0xe8df, { 0x45 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x30a2, gbc.sp());
        EXPECT(0xb499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb497));
        EXPECT(0xf6, gbc.readMem(0xb498));
        EXPECT(0x45, gbc.readMem(0xe8df));
        // CB F6 0069
        gbc.setState(0x1d0f, 0x1091, 0x8140, 0xb998, 0x6260, 0xa7c2, 0x1, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0xf6 });
        gbc.writeMem(0xa7c2, { 0x20 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa7c2));
        // CB F6 006B
        gbc.setState(0xa21e, 0x7b20, 0x3de0, 0xfef6, 0x3ff9, 0x8228, 0x1, 0x1);
        gbc.writeMem(0x8228, { 0x3 });
        gbc.writeMem(0xa21e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7b20, gbc.sp());
        EXPECT(0xa220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8228));
        EXPECT(0xcb, gbc.readMem(0xa21e));
        EXPECT(0xf6, gbc.readMem(0xa21f));
        // CB F6 006D
        gbc.setState(0xec5a, 0x6ec2, 0xe500, 0x26e8, 0x27bc, 0x8bf7, 0x0, 0x1);
        gbc.writeMem(0x8bf7, { 0x12 });
        gbc.writeMem(0xec5a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6ec2, gbc.sp());
        EXPECT(0xec5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8bf7));
        EXPECT(0xcb, gbc.readMem(0xec5a));
        EXPECT(0xf6, gbc.readMem(0xec5b));
        // CB F6 006F
        gbc.setState(0xac54, 0xa7d8, 0xdea0, 0xef53, 0x3774, 0xec1c, 0x1, 0x1);
        gbc.writeMem(0xac54, { 0xcb, 0xf6 });
        gbc.writeMem(0xec1c, { 0xef });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa7d8, gbc.sp());
        EXPECT(0xac56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac54));
        EXPECT(0xf6, gbc.readMem(0xac55));
        EXPECT(0xef, gbc.readMem(0xec1c));
        // CB F6 0070
        gbc.setState(0xdee5, 0x9a2d, 0xc880, 0x9def, 0x255, 0x8ec0, 0x0, 0x0);
        gbc.writeMem(0x8ec0, { 0xda });
        gbc.writeMem(0xdee5, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9a2d, gbc.sp());
        EXPECT(0xdee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8ec0));
        EXPECT(0xcb, gbc.readMem(0xdee5));
        EXPECT(0xf6, gbc.readMem(0xdee6));
        // CB F6 0072
        gbc.setState(0x450, 0x4a04, 0xa430, 0x594d, 0x6bc1, 0xc53f, 0x0, 0x0);
        gbc.writeMem(0x450, { 0xcb, 0xf6 });
        gbc.writeMem(0xc53f, { 0xf6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4a04, gbc.sp());
        EXPECT(0x452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc53f));
        // CB F6 0073
        gbc.setState(0x8573, 0xfa98, 0x7a50, 0xd66b, 0xc17f, 0x7d3a, 0x0, 0x0);
        gbc.writeMem(0x7d3a, { 0x58 });
        gbc.writeMem(0x8573, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa98, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8573));
        EXPECT(0xf6, gbc.readMem(0x8574));
        // CB F6 0076
        gbc.setState(0xb2e9, 0xb711, 0xf240, 0x87ee, 0x9bae, 0x9d0, 0x1, 0x0);
        gbc.writeMem(0x9d0, { 0xc6 });
        gbc.writeMem(0xb2e9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb711, gbc.sp());
        EXPECT(0xb2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e9));
        EXPECT(0xf6, gbc.readMem(0xb2ea));
        // CB F6 0077
        gbc.setState(0x5857, 0xaf9f, 0xb060, 0x9003, 0xa266, 0xc5ea, 0x1, 0x1);
        gbc.writeMem(0x5857, { 0xcb, 0xf6 });
        gbc.writeMem(0xc5ea, { 0xae });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xaf9f, gbc.sp());
        EXPECT(0x5859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xc5ea));
        // CB F6 0078
        gbc.setState(0x9cbb, 0x90a4, 0xf310, 0x5d79, 0x4da6, 0x634c, 0x1, 0x0);
        gbc.writeMem(0x634c, { 0x46 });
        gbc.writeMem(0x9cbb, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x90a4, gbc.sp());
        EXPECT(0x9cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbb));
        EXPECT(0xf6, gbc.readMem(0x9cbc));
        // CB F6 0079
        gbc.setState(0xa176, 0x2331, 0xbe0, 0xa560, 0x6317, 0xe5f9, 0x0, 0x0);
        gbc.writeMem(0xa176, { 0xcb, 0xf6 });
        gbc.writeMem(0xe5f9, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2331, gbc.sp());
        EXPECT(0xa178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa176));
        EXPECT(0xf6, gbc.readMem(0xa177));
        EXPECT(0xfc, gbc.readMem(0xe5f9));
        // CB F6 007A
        gbc.setState(0xb625, 0x5398, 0xd790, 0x1179, 0x9e57, 0xedec, 0x1, 0x1);
        gbc.writeMem(0xb625, { 0xcb, 0xf6 });
        gbc.writeMem(0xedec, { 0xe8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5398, gbc.sp());
        EXPECT(0xb627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb625));
        EXPECT(0xf6, gbc.readMem(0xb626));
        EXPECT(0xe8, gbc.readMem(0xedec));
        // CB F6 007C
        gbc.setState(0xd083, 0x2e18, 0xfcb0, 0x2d6d, 0x6c5e, 0xcba1, 0x1, 0x1);
        gbc.writeMem(0xcba1, { 0x51 });
        gbc.writeMem(0xd083, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2e18, gbc.sp());
        EXPECT(0xd085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcba1));
        EXPECT(0xcb, gbc.readMem(0xd083));
        EXPECT(0xf6, gbc.readMem(0xd084));
        // CB F6 007D
        gbc.setState(0x5bf1, 0x2142, 0xca50, 0x9b91, 0x520e, 0x9826, 0x1, 0x0);
        gbc.writeMem(0x5bf1, { 0xcb, 0xf6 });
        gbc.writeMem(0x9826, { 0x49 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2142, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9826));
        // CB F6 007E
        gbc.setState(0x165b, 0xec82, 0xbbf0, 0xcdb3, 0x5e17, 0x5693, 0x1, 0x0);
        gbc.writeMem(0x165b, { 0xcb, 0xf6 });
        gbc.writeMem(0x5693, { 0x58 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xec82, gbc.sp());
        EXPECT(0x165d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 007F
        gbc.setState(0x957, 0xf2d1, 0x9020, 0x9d, 0xf2f6, 0xade3, 0x1, 0x0);
        gbc.writeMem(0x957, { 0xcb, 0xf6 });
        gbc.writeMem(0xade3, { 0xa6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf2d1, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xade3));
        // CB F6 0080
        gbc.setState(0x950d, 0xcb54, 0x4490, 0x5772, 0xabdd, 0x31f9, 0x0, 0x1);
        gbc.writeMem(0x31f9, { 0xf0 });
        gbc.writeMem(0x950d, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcb54, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950d));
        EXPECT(0xf6, gbc.readMem(0x950e));
        // CB F6 0082
        gbc.setState(0x732e, 0xf6e5, 0xe770, 0xa4b2, 0xf684, 0xd037, 0x1, 0x1);
        gbc.writeMem(0x732e, { 0xcb, 0xf6 });
        gbc.writeMem(0xd037, { 0x81 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf6e5, gbc.sp());
        EXPECT(0x7330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd037));
        // CB F6 0083
        gbc.setState(0xb81f, 0x314f, 0xe5b0, 0xfa1c, 0x2a5e, 0x3eb0, 0x0, 0x1);
        gbc.writeMem(0x3eb0, { 0x4f });
        gbc.writeMem(0xb81f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x314f, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81f));
        EXPECT(0xf6, gbc.readMem(0xb820));
        // CB F6 0084
        gbc.setState(0xa351, 0x9b6, 0xf9e0, 0xb425, 0xf735, 0xf86e, 0x0, 0x1);
        gbc.writeMem(0xa351, { 0xcb, 0xf6 });
        gbc.writeMem(0xf86e, { 0x7f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9b6, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa351));
        EXPECT(0xf6, gbc.readMem(0xa352));
        EXPECT(0x7f, gbc.readMem(0xf86e));
        // CB F6 0085
        gbc.setState(0xc2fd, 0xfdee, 0x5150, 0xa2f4, 0x1dff, 0xcb0a, 0x1, 0x1);
        gbc.writeMem(0xc2fd, { 0xcb, 0xf6 });
        gbc.writeMem(0xcb0a, { 0x5b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0xc2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2fd));
        EXPECT(0xf6, gbc.readMem(0xc2fe));
        EXPECT(0x5b, gbc.readMem(0xcb0a));
        // CB F6 0086
        gbc.setState(0x900c, 0xda94, 0x4400, 0x5d87, 0x1670, 0xd8b4, 0x0, 0x1);
        gbc.writeMem(0x900c, { 0xcb, 0xf6 });
        gbc.writeMem(0xd8b4, { 0x3f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xda94, gbc.sp());
        EXPECT(0x900e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900c));
        EXPECT(0xf6, gbc.readMem(0x900d));
        EXPECT(0x7f, gbc.readMem(0xd8b4));
        // CB F6 0087
        gbc.setState(0x144, 0x1469, 0x20c0, 0x22c0, 0x6f61, 0x9a4d, 0x1, 0x0);
        gbc.writeMem(0x144, { 0xcb, 0xf6 });
        gbc.writeMem(0x9a4d, { 0x5a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0x146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9a4d));
        // CB F6 0089
        gbc.setState(0x88a4, 0xfaae, 0x7d60, 0x8328, 0x3288, 0xcf71, 0x0, 0x0);
        gbc.writeMem(0x88a4, { 0xcb, 0xf6 });
        gbc.writeMem(0xcf71, { 0xa8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfaae, gbc.sp());
        EXPECT(0x88a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a4));
        EXPECT(0xf6, gbc.readMem(0x88a5));
        EXPECT(0xe8, gbc.readMem(0xcf71));
        // CB F6 008A
        gbc.setState(0x26d5, 0x539e, 0xdce0, 0xab4c, 0x1e52, 0xdac6, 0x0, 0x1);
        gbc.writeMem(0x26d5, { 0xcb, 0xf6 });
        gbc.writeMem(0xdac6, { 0xa6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x539e, gbc.sp());
        EXPECT(0x26d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdac6));
        // CB F6 008B
        gbc.setState(0x2598, 0x656e, 0x8310, 0x5a14, 0x2c12, 0xe407, 0x1, 0x0);
        gbc.writeMem(0x2598, { 0xcb, 0xf6 });
        gbc.writeMem(0xe407, { 0x9a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x656e, gbc.sp());
        EXPECT(0x259a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe407));
        // CB F6 008D
        gbc.setState(0x5da9, 0xd82e, 0x8e50, 0xc320, 0xc589, 0xb9ee, 0x0, 0x1);
        gbc.writeMem(0x5da9, { 0xcb, 0xf6 });
        gbc.writeMem(0xb9ee, { 0xbf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd82e, gbc.sp());
        EXPECT(0x5dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb9ee));
        // CB F6 008E
        gbc.setState(0x39c, 0xe967, 0xa6b0, 0x8a9c, 0xa57c, 0xe4e3, 0x1, 0x1);
        gbc.writeMem(0x39c, { 0xcb, 0xf6 });
        gbc.writeMem(0xe4e3, { 0x61 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe4e3));
        // CB F6 008F
        gbc.setState(0x59d5, 0xc2cb, 0x4e70, 0xf310, 0x5fb4, 0xdb81, 0x1, 0x1);
        gbc.writeMem(0x59d5, { 0xcb, 0xf6 });
        gbc.writeMem(0xdb81, { 0x1e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc2cb, gbc.sp());
        EXPECT(0x59d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdb81));
        // CB F6 0090
        gbc.setState(0xa25c, 0xd0be, 0xdae0, 0xface, 0x221, 0x9600, 0x0, 0x1);
        gbc.writeMem(0x9600, { 0x5d });
        gbc.writeMem(0xa25c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd0be, gbc.sp());
        EXPECT(0xa25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9600));
        EXPECT(0xcb, gbc.readMem(0xa25c));
        EXPECT(0xf6, gbc.readMem(0xa25d));
        // CB F6 0091
        gbc.setState(0x7979, 0x1033, 0x40c0, 0x588b, 0x56d, 0xc88b, 0x1, 0x1);
        gbc.writeMem(0x7979, { 0xcb, 0xf6 });
        gbc.writeMem(0xc88b, { 0x22 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1033, gbc.sp());
        EXPECT(0x797b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xc88b));
        // CB F6 0093
        gbc.setState(0x6675, 0xde25, 0xf400, 0x53cb, 0xa039, 0x5a19, 0x0, 0x1);
        gbc.writeMem(0x5a19, { 0x61 });
        gbc.writeMem(0x6675, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xde25, gbc.sp());
        EXPECT(0x6677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0094
        gbc.setState(0x85ce, 0x462e, 0xa3a0, 0x7ab9, 0x2ae9, 0xfd95, 0x1, 0x1);
        gbc.writeMem(0x85ce, { 0xcb, 0xf6 });
        gbc.writeMem(0xfd95, { 0xdc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0x85d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ce));
        EXPECT(0xf6, gbc.readMem(0x85cf));
        EXPECT(0xdc, gbc.readMem(0xfd95));
        // CB F6 0095
        gbc.setState(0xa929, 0xc415, 0x3170, 0x8678, 0x834c, 0xcdcc, 0x0, 0x1);
        gbc.writeMem(0xa929, { 0xcb, 0xf6 });
        gbc.writeMem(0xcdcc, { 0x1b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc415, gbc.sp());
        EXPECT(0xa92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa929));
        EXPECT(0xf6, gbc.readMem(0xa92a));
        EXPECT(0x5b, gbc.readMem(0xcdcc));
        // CB F6 0096
        gbc.setState(0xda23, 0x604f, 0xcf60, 0xb68d, 0xf411, 0x98b7, 0x0, 0x0);
        gbc.writeMem(0x98b7, { 0x3b });
        gbc.writeMem(0xda23, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x604f, gbc.sp());
        EXPECT(0xda25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x98b7));
        EXPECT(0xcb, gbc.readMem(0xda23));
        EXPECT(0xf6, gbc.readMem(0xda24));
        // CB F6 0097
        gbc.setState(0xb886, 0x3030, 0x1330, 0xe885, 0x770f, 0x56bd, 0x1, 0x0);
        gbc.writeMem(0x56bd, { 0x49 });
        gbc.writeMem(0xb886, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0xb888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb886));
        EXPECT(0xf6, gbc.readMem(0xb887));
        // CB F6 0098
        gbc.setState(0x92b, 0xdb26, 0x22a0, 0x1d, 0xaa84, 0x1fe1, 0x0, 0x0);
        gbc.writeMem(0x92b, { 0xcb, 0xf6 });
        gbc.writeMem(0x1fe1, { 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdb26, gbc.sp());
        EXPECT(0x92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0099
        gbc.setState(0x3218, 0xc114, 0x2a50, 0x4343, 0xc848, 0xcafe, 0x1, 0x1);
        gbc.writeMem(0x3218, { 0xcb, 0xf6 });
        gbc.writeMem(0xcafe, { 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc114, gbc.sp());
        EXPECT(0x321a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xcafe));
        // CB F6 009A
        gbc.setState(0x1835, 0x4f48, 0x3870, 0x8da1, 0x4c58, 0xff18, 0x0, 0x1);
        gbc.writeMem(0x1835, { 0xcb, 0xf6 });
        gbc.writeMem(0xff18, { 0x2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4f48, gbc.sp());
        EXPECT(0x1837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xff18));
        // CB F6 009E
        gbc.setState(0x89db, 0xa1b5, 0x300, 0xf4f7, 0x37e8, 0x440e, 0x0, 0x0);
        gbc.writeMem(0x440e, { 0x74 });
        gbc.writeMem(0x89db, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0x89dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89db));
        EXPECT(0xf6, gbc.readMem(0x89dc));
        // CB F6 009F
        gbc.setState(0xaf3, 0x425b, 0xf3b0, 0xff57, 0x1a92, 0xbb6, 0x1, 0x1);
        gbc.writeMem(0xaf3, { 0xcb, 0xf6 });
        gbc.writeMem(0xbb6, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x425b, gbc.sp());
        EXPECT(0xaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 00A0
        gbc.setState(0x89fa, 0x2b11, 0xb30, 0x9a83, 0xd261, 0x6bcd, 0x0, 0x1);
        gbc.writeMem(0x6bcd, { 0x54 });
        gbc.writeMem(0x89fa, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2b11, gbc.sp());
        EXPECT(0x89fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fa));
        EXPECT(0xf6, gbc.readMem(0x89fb));
        // CB F6 00A1
        gbc.setState(0xdc2, 0xfd87, 0x5e50, 0x4219, 0x3cb6, 0x4fa2, 0x1, 0x1);
        gbc.writeMem(0xdc2, { 0xcb, 0xf6 });
        gbc.writeMem(0x4fa2, { 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfd87, gbc.sp());
        EXPECT(0xdc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 00A2
        gbc.setState(0x7def, 0x20d8, 0xf990, 0xabf0, 0xdaa7, 0xc044, 0x0, 0x0);
        gbc.writeMem(0x7def, { 0xcb, 0xf6 });
        gbc.writeMem(0xc044, { 0x1c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0x7df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc044));
        // CB F6 00A5
        gbc.setState(0x656b, 0x614f, 0x11e0, 0xda82, 0x506f, 0x772b, 0x1, 0x0);
        gbc.writeMem(0x656b, { 0xcb, 0xf6 });
        gbc.writeMem(0x772b, { 0xc8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x614f, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 00A6
        gbc.setState(0x3abf, 0x4018, 0xc340, 0xaa1e, 0xb64f, 0xf4a9, 0x0, 0x0);
        gbc.writeMem(0x3abf, { 0xcb, 0xf6 });
        gbc.writeMem(0xf4a9, { 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4018, gbc.sp());
        EXPECT(0x3ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xf4a9));
        // CB F6 00A8
        gbc.setState(0x2991, 0x82b0, 0x5e50, 0xe860, 0x28d2, 0xb499, 0x1, 0x1);
        gbc.writeMem(0x2991, { 0xcb, 0xf6 });
        gbc.writeMem(0xb499, { 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x82b0, gbc.sp());
        EXPECT(0x2993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xb499));
        // CB F6 00A9
        gbc.setState(0xba4b, 0x9551, 0x4110, 0xfb45, 0x3777, 0xcc65, 0x0, 0x1);
        gbc.writeMem(0xba4b, { 0xcb, 0xf6 });
        gbc.writeMem(0xcc65, { 0xc2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0xba4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4b));
        EXPECT(0xf6, gbc.readMem(0xba4c));
        EXPECT(0xc2, gbc.readMem(0xcc65));
        // CB F6 00AA
        gbc.setState(0x2644, 0x57f2, 0x8250, 0x519e, 0x2d4d, 0x92f7, 0x0, 0x0);
        gbc.writeMem(0x2644, { 0xcb, 0xf6 });
        gbc.writeMem(0x92f7, { 0x19 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x57f2, gbc.sp());
        EXPECT(0x2646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x92f7));
        // CB F6 00AC
        gbc.setState(0x5f06, 0x10d2, 0xf070, 0x8cfa, 0x26b1, 0xdd75, 0x0, 0x0);
        gbc.writeMem(0x5f06, { 0xcb, 0xf6 });
        gbc.writeMem(0xdd75, { 0x2a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x10d2, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdd75));
        // CB F6 00AE
        gbc.setState(0x2aa5, 0xa8a2, 0x1ae0, 0xcb0c, 0x5249, 0x9d3f, 0x0, 0x1);
        gbc.writeMem(0x2aa5, { 0xcb, 0xf6 });
        gbc.writeMem(0x9d3f, { 0xb1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa8a2, gbc.sp());
        EXPECT(0x2aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9d3f));
        // CB F6 00B0
        gbc.setState(0x14b0, 0xf94, 0xb8b0, 0x84d7, 0xe6d4, 0xb900, 0x1, 0x0);
        gbc.writeMem(0x14b0, { 0xcb, 0xf6 });
        gbc.writeMem(0xb900, { 0xf7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf94, gbc.sp());
        EXPECT(0x14b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb900));
        // CB F6 00B2
        gbc.setState(0xbdb7, 0x47ff, 0x58f0, 0x5666, 0x30d, 0xb529, 0x0, 0x0);
        gbc.writeMem(0xb529, { 0xf4 });
        gbc.writeMem(0xbdb7, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x47ff, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xb529));
        EXPECT(0xcb, gbc.readMem(0xbdb7));
        EXPECT(0xf6, gbc.readMem(0xbdb8));
        // CB F6 00B3
        gbc.setState(0x15da, 0x1dae, 0x76a0, 0x1e7e, 0xec20, 0xa614, 0x1, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0xf6 });
        gbc.writeMem(0xa614, { 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1dae, gbc.sp());
        EXPECT(0x15dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa614));
        // CB F6 00B5
        gbc.setState(0xa551, 0xee56, 0xbaa0, 0x4449, 0x3ae7, 0xa816, 0x1, 0x1);
        gbc.writeMem(0xa551, { 0xcb, 0xf6 });
        gbc.writeMem(0xa816, { 0x5e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xee56, gbc.sp());
        EXPECT(0xa553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa551));
        EXPECT(0xf6, gbc.readMem(0xa552));
        EXPECT(0x5e, gbc.readMem(0xa816));
        // CB F6 00B6
        gbc.setState(0xed28, 0x1641, 0x7c10, 0x71f5, 0xf0b3, 0xe5b6, 0x1, 0x0);
        gbc.writeMem(0xe5b6, { 0xac });
        gbc.writeMem(0xed28, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xe5b6));
        EXPECT(0xcb, gbc.readMem(0xed28));
        EXPECT(0xf6, gbc.readMem(0xed29));
        // CB F6 00B7
        gbc.setState(0x3e0e, 0x8e70, 0x3500, 0xc4d6, 0x986c, 0xd366, 0x1, 0x1);
        gbc.writeMem(0x3e0e, { 0xcb, 0xf6 });
        gbc.writeMem(0xd366, { 0xa8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8e70, gbc.sp());
        EXPECT(0x3e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xd366));
        // CB F6 00B9
        gbc.setState(0x3447, 0x3017, 0xca10, 0x9860, 0x8982, 0x7a77, 0x1, 0x1);
        gbc.writeMem(0x3447, { 0xcb, 0xf6 });
        gbc.writeMem(0x7a77, { 0xfd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3017, gbc.sp());
        EXPECT(0x3449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 00BA
        gbc.setState(0x1396, 0x6933, 0x60e0, 0xd6f3, 0x7b58, 0x8230, 0x1, 0x1);
        gbc.writeMem(0x1396, { 0xcb, 0xf6 });
        gbc.writeMem(0x8230, { 0xe2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6933, gbc.sp());
        EXPECT(0x1398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8230));
        // CB F6 00BB
        gbc.setState(0xd7e1, 0x81c7, 0xf300, 0x2a68, 0x77b0, 0x7f71, 0x1, 0x1);
        gbc.writeMem(0x7f71, { 0xc7 });
        gbc.writeMem(0xd7e1, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x81c7, gbc.sp());
        EXPECT(0xd7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e1));
        EXPECT(0xf6, gbc.readMem(0xd7e2));
        // CB F6 00BC
        gbc.setState(0x892c, 0x6c80, 0xf740, 0x18a8, 0xea3e, 0x9548, 0x0, 0x1);
        gbc.writeMem(0x892c, { 0xcb, 0xf6 });
        gbc.writeMem(0x9548, { 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6c80, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892c));
        EXPECT(0xf6, gbc.readMem(0x892d));
        EXPECT(0xe0, gbc.readMem(0x9548));
        // CB F6 00BD
        gbc.setState(0x4ce4, 0xff65, 0x1020, 0x39bb, 0xd8ff, 0x7cd3, 0x1, 0x1);
        gbc.writeMem(0x4ce4, { 0xcb, 0xf6 });
        gbc.writeMem(0x7cd3, { 0x6f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0x4ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 00BE
        gbc.setState(0xbc03, 0xea30, 0xb500, 0x6de0, 0xf7e1, 0x8771, 0x1, 0x0);
        gbc.writeMem(0x8771, { 0xf5 });
        gbc.writeMem(0xbc03, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xea30, gbc.sp());
        EXPECT(0xbc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8771));
        EXPECT(0xcb, gbc.readMem(0xbc03));
        EXPECT(0xf6, gbc.readMem(0xbc04));
        // CB F6 00BF
        gbc.setState(0x994f, 0xb256, 0xb150, 0xb15c, 0xd9e8, 0xf485, 0x0, 0x1);
        gbc.writeMem(0x994f, { 0xcb, 0xf6 });
        gbc.writeMem(0xf485, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb256, gbc.sp());
        EXPECT(0x9951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994f));
        EXPECT(0xf6, gbc.readMem(0x9950));
        EXPECT(0x40, gbc.readMem(0xf485));
        // CB F6 00C0
        gbc.setState(0x1d61, 0x3524, 0x2a50, 0x2527, 0xb65d, 0xd0a9, 0x0, 0x0);
        gbc.writeMem(0x1d61, { 0xcb, 0xf6 });
        gbc.writeMem(0xd0a9, { 0x8b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x1d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a9));
        // CB F6 00C2
        gbc.setState(0x74bc, 0xb2ff, 0x3760, 0x6e56, 0x6440, 0xa1e0, 0x0, 0x0);
        gbc.writeMem(0x74bc, { 0xcb, 0xf6 });
        gbc.writeMem(0xa1e0, { 0xad });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb2ff, gbc.sp());
        EXPECT(0x74be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa1e0));
        // CB F6 00C3
        gbc.setState(0x6432, 0xfb2c, 0x7f80, 0x5cdb, 0x18dd, 0xd32a, 0x0, 0x0);
        gbc.writeMem(0x6432, { 0xcb, 0xf6 });
        gbc.writeMem(0xd32a, { 0xce });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0x6434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd32a));
        // CB F6 00C4
        gbc.setState(0xbc5a, 0xc67e, 0x4cc0, 0x3878, 0x6ff1, 0x4f07, 0x0, 0x1);
        gbc.writeMem(0x4f07, { 0xc6 });
        gbc.writeMem(0xbc5a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc67e, gbc.sp());
        EXPECT(0xbc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5a));
        EXPECT(0xf6, gbc.readMem(0xbc5b));
        // CB F6 00C6
        gbc.setState(0xa068, 0x98a5, 0x8840, 0x4a9f, 0x7fd1, 0xe8ea, 0x0, 0x1);
        gbc.writeMem(0xa068, { 0xcb, 0xf6 });
        gbc.writeMem(0xe8ea, { 0x2f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x98a5, gbc.sp());
        EXPECT(0xa06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa068));
        EXPECT(0xf6, gbc.readMem(0xa069));
        EXPECT(0x6f, gbc.readMem(0xe8ea));
        // CB F6 00C8
        gbc.setState(0xe4e9, 0xef5, 0x4b50, 0xa7d4, 0xeff6, 0x9b68, 0x0, 0x1);
        gbc.writeMem(0x9b68, { 0xe });
        gbc.writeMem(0xe4e9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0xe4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9b68));
        EXPECT(0xcb, gbc.readMem(0xe4e9));
        EXPECT(0xf6, gbc.readMem(0xe4ea));
        // CB F6 00C9
        gbc.setState(0x28d7, 0x5660, 0xdfc0, 0xb224, 0xfb6e, 0xa523, 0x0, 0x1);
        gbc.writeMem(0x28d7, { 0xcb, 0xf6 });
        gbc.writeMem(0xa523, { 0xda });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5660, gbc.sp());
        EXPECT(0x28d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa523));
        // CB F6 00CA
        gbc.setState(0x759a, 0x1acb, 0x8a30, 0x9b08, 0x758b, 0x7a65, 0x0, 0x1);
        gbc.writeMem(0x759a, { 0xcb, 0xf6 });
        gbc.writeMem(0x7a65, { 0x7b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0x759c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 00CB
        gbc.setState(0x3e96, 0x4317, 0x8bb0, 0x8cfc, 0xd4a2, 0xf873, 0x1, 0x0);
        gbc.writeMem(0x3e96, { 0xcb, 0xf6 });
        gbc.writeMem(0xf873, { 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0x3e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xf873));
        // CB F6 00CD
        gbc.setState(0x9057, 0xde36, 0xc080, 0xa683, 0x1614, 0x79cd, 0x1, 0x1);
        gbc.writeMem(0x79cd, { 0x42 });
        gbc.writeMem(0x9057, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0x9059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9057));
        EXPECT(0xf6, gbc.readMem(0x9058));
        // CB F6 00CF
        gbc.setState(0x798b, 0xebda, 0xe840, 0x6a37, 0x8bf, 0x3a9c, 0x0, 0x0);
        gbc.writeMem(0x3a9c, { 0xff });
        gbc.writeMem(0x798b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0x798d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 00D0
        gbc.setState(0x1ccb, 0xea7e, 0x8a70, 0x1521, 0x38eb, 0xf15d, 0x0, 0x1);
        gbc.writeMem(0x1ccb, { 0xcb, 0xf6 });
        gbc.writeMem(0xf15d, { 0xa9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xea7e, gbc.sp());
        EXPECT(0x1ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xf15d));
        // CB F6 00D1
        gbc.setState(0xcc4d, 0x2a27, 0xe690, 0x127, 0x7adb, 0x51c5, 0x1, 0x1);
        gbc.writeMem(0x51c5, { 0xd5 });
        gbc.writeMem(0xcc4d, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2a27, gbc.sp());
        EXPECT(0xcc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4d));
        EXPECT(0xf6, gbc.readMem(0xcc4e));
        // CB F6 00D2
        gbc.setState(0x69bf, 0xaf3, 0x220, 0xdcf9, 0x1099, 0xd282, 0x1, 0x1);
        gbc.writeMem(0x69bf, { 0xcb, 0xf6 });
        gbc.writeMem(0xd282, { 0x28 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xaf3, gbc.sp());
        EXPECT(0x69c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd282));
        // CB F6 00D4
        gbc.setState(0xaa79, 0x77c2, 0xb500, 0x27dc, 0x1497, 0x8095, 0x1, 0x1);
        gbc.writeMem(0x8095, { 0x8f });
        gbc.writeMem(0xaa79, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x77c2, gbc.sp());
        EXPECT(0xaa7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8095));
        EXPECT(0xcb, gbc.readMem(0xaa79));
        EXPECT(0xf6, gbc.readMem(0xaa7a));
        // CB F6 00D6
        gbc.setState(0x8656, 0x5d52, 0x1dc0, 0xc161, 0x96fd, 0xaf27, 0x1, 0x1);
        gbc.writeMem(0x8656, { 0xcb, 0xf6 });
        gbc.writeMem(0xaf27, { 0x84 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5d52, gbc.sp());
        EXPECT(0x8658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8656));
        EXPECT(0xf6, gbc.readMem(0x8657));
        EXPECT(0xc4, gbc.readMem(0xaf27));
        // CB F6 00D7
        gbc.setState(0xed42, 0x163c, 0x11d0, 0xe17c, 0xeec, 0xbbe6, 0x1, 0x0);
        gbc.writeMem(0xbbe6, { 0x1b });
        gbc.writeMem(0xed42, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x163c, gbc.sp());
        EXPECT(0xed44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbbe6));
        EXPECT(0xcb, gbc.readMem(0xed42));
        EXPECT(0xf6, gbc.readMem(0xed43));
        // CB F6 00D8
        gbc.setState(0x18c9, 0x8fe4, 0xbbf0, 0xf13, 0x5413, 0xc9db, 0x1, 0x0);
        gbc.writeMem(0x18c9, { 0xcb, 0xf6 });
        gbc.writeMem(0xc9db, { 0x1f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8fe4, gbc.sp());
        EXPECT(0x18cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xc9db));
        // CB F6 00D9
        gbc.setState(0x29b3, 0xc983, 0x990, 0x2e15, 0x5915, 0x9565, 0x0, 0x1);
        gbc.writeMem(0x29b3, { 0xcb, 0xf6 });
        gbc.writeMem(0x9565, { 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0x29b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9565));
        // CB F6 00DA
        gbc.setState(0x7fe, 0x70ed, 0x59b0, 0xc71b, 0x1690, 0x6f93, 0x0, 0x0);
        gbc.writeMem(0x7fe, { 0xcb, 0xf6 });
        gbc.writeMem(0x6f93, { 0xe4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0x800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 00DB
        gbc.setState(0xd068, 0x1606, 0x2730, 0xa8a, 0x7f1e, 0xe7d4, 0x0, 0x1);
        gbc.writeMem(0xd068, { 0xcb, 0xf6 });
        gbc.writeMem(0xe7d4, { 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1606, gbc.sp());
        EXPECT(0xd06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd068));
        EXPECT(0xf6, gbc.readMem(0xd069));
        EXPECT(0xd0, gbc.readMem(0xe7d4));
        // CB F6 00DC
        gbc.setState(0x1511, 0xc385, 0x9fb0, 0xd6f9, 0x266f, 0x9594, 0x1, 0x0);
        gbc.writeMem(0x1511, { 0xcb, 0xf6 });
        gbc.writeMem(0x9594, { 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc385, gbc.sp());
        EXPECT(0x1513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x9594));
        // CB F6 00DD
        gbc.setState(0x5700, 0x8bfd, 0x7220, 0xb44d, 0xb724, 0x8412, 0x1, 0x1);
        gbc.writeMem(0x5700, { 0xcb, 0xf6 });
        gbc.writeMem(0x8412, { 0xf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8bfd, gbc.sp());
        EXPECT(0x5702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x8412));
        // CB F6 00DE
        gbc.setState(0x85c0, 0xc8d7, 0xdd10, 0x6cf9, 0x6514, 0x7b9d, 0x1, 0x1);
        gbc.writeMem(0x7b9d, { 0xf6 });
        gbc.writeMem(0x85c0, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc8d7, gbc.sp());
        EXPECT(0x85c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c0));
        EXPECT(0xf6, gbc.readMem(0x85c1));
        // CB F6 00DF
        gbc.setState(0xd555, 0xdff9, 0xd60, 0xccb4, 0x7c7c, 0xc2c8, 0x1, 0x0);
        gbc.writeMem(0xc2c8, { 0x3a });
        gbc.writeMem(0xd555, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdff9, gbc.sp());
        EXPECT(0xd557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc2c8));
        EXPECT(0xcb, gbc.readMem(0xd555));
        EXPECT(0xf6, gbc.readMem(0xd556));
        // CB F6 00E1
        gbc.setState(0x1f2b, 0xed5c, 0xf8b0, 0xca6e, 0xcff6, 0x70, 0x0, 0x1);
        gbc.writeMem(0x70, { 0x4b });
        gbc.writeMem(0x1f2b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xed5c, gbc.sp());
        EXPECT(0x1f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 00E3
        gbc.setState(0x9ddb, 0x8899, 0xaf0, 0x79a2, 0x7fe2, 0x9dd2, 0x0, 0x0);
        gbc.writeMem(0x9dd2, { 0xe1 });
        gbc.writeMem(0x9ddb, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8899, gbc.sp());
        EXPECT(0x9ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9dd2));
        EXPECT(0xcb, gbc.readMem(0x9ddb));
        EXPECT(0xf6, gbc.readMem(0x9ddc));
        // CB F6 00E4
        gbc.setState(0x22aa, 0xe0df, 0x2bd0, 0x59aa, 0x6167, 0x978f, 0x0, 0x1);
        gbc.writeMem(0x22aa, { 0xcb, 0xf6 });
        gbc.writeMem(0x978f, { 0x3d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe0df, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x978f));
        // CB F6 00E6
        gbc.setState(0x513, 0x6b7e, 0x2820, 0x9a6, 0x3308, 0xaca7, 0x0, 0x0);
        gbc.writeMem(0x513, { 0xcb, 0xf6 });
        gbc.writeMem(0xaca7, { 0xd8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6b7e, gbc.sp());
        EXPECT(0x515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xaca7));
        // CB F6 00E7
        gbc.setState(0x6a34, 0x4320, 0x8360, 0x2d68, 0x4cd9, 0xff6b, 0x0, 0x1);
        gbc.writeMem(0x6a34, { 0xcb, 0xf6 });
        gbc.writeMem(0xff6b, { 0x86 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4320, gbc.sp());
        EXPECT(0x6a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xff6b));
        // CB F6 00E8
        gbc.setState(0x92da, 0xe32e, 0xf5d0, 0x44ed, 0xfee4, 0x5ec5, 0x1, 0x1);
        gbc.writeMem(0x5ec5, { 0xd7 });
        gbc.writeMem(0x92da, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe32e, gbc.sp());
        EXPECT(0x92dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92da));
        EXPECT(0xf6, gbc.readMem(0x92db));
        // CB F6 00E9
        gbc.setState(0x6c4, 0xbfac, 0x43c0, 0xf673, 0x9e26, 0x663b, 0x1, 0x0);
        gbc.writeMem(0x6c4, { 0xcb, 0xf6 });
        gbc.writeMem(0x663b, { 0xf4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0x6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 00EA
        gbc.setState(0xc784, 0x35b9, 0xab0, 0x9b0f, 0xdaba, 0xe2c5, 0x0, 0x0);
        gbc.writeMem(0xc784, { 0xcb, 0xf6 });
        gbc.writeMem(0xe2c5, { 0xed });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x35b9, gbc.sp());
        EXPECT(0xc786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc784));
        EXPECT(0xf6, gbc.readMem(0xc785));
        EXPECT(0xed, gbc.readMem(0xe2c5));
        // CB F6 00EB
        gbc.setState(0xc45b, 0x77c, 0xdae0, 0xdf15, 0x8233, 0x40c5, 0x1, 0x0);
        gbc.writeMem(0x40c5, { 0xf8 });
        gbc.writeMem(0xc45b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x77c, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45b));
        EXPECT(0xf6, gbc.readMem(0xc45c));
        // CB F6 00EC
        gbc.setState(0x7cc7, 0x875a, 0xb630, 0xbfea, 0xe983, 0x5393, 0x1, 0x1);
        gbc.writeMem(0x5393, { 0xf6 });
        gbc.writeMem(0x7cc7, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x875a, gbc.sp());
        EXPECT(0x7cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 00ED
        gbc.setState(0x34c7, 0xe4de, 0x6560, 0x91e7, 0x5f8d, 0x8b8b, 0x0, 0x0);
        gbc.writeMem(0x34c7, { 0xcb, 0xf6 });
        gbc.writeMem(0x8b8b, { 0x97 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe4de, gbc.sp());
        EXPECT(0x34c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x8b8b));
        // CB F6 00EE
        gbc.setState(0x5067, 0x5ed4, 0x7e50, 0xa727, 0xc2ae, 0xdc23, 0x1, 0x0);
        gbc.writeMem(0x5067, { 0xcb, 0xf6 });
        gbc.writeMem(0xdc23, { 0x34 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5ed4, gbc.sp());
        EXPECT(0x5069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xdc23));
        // CB F6 00F0
        gbc.setState(0x2b82, 0x2830, 0x8fc0, 0xa33c, 0xf5de, 0x34fc, 0x0, 0x1);
        gbc.writeMem(0x2b82, { 0xcb, 0xf6 });
        gbc.writeMem(0x34fc, { 0x63 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0x2b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 00F2
        gbc.setState(0x1537, 0x3fe2, 0x2790, 0x6234, 0x3b4b, 0xc8cd, 0x0, 0x0);
        gbc.writeMem(0x1537, { 0xcb, 0xf6 });
        gbc.writeMem(0xc8cd, { 0x64 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3fe2, gbc.sp());
        EXPECT(0x1539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc8cd));
        // CB F6 00F3
        gbc.setState(0x6dd8, 0xb249, 0xd1e0, 0xbf9, 0x5738, 0xfa91, 0x1, 0x1);
        gbc.writeMem(0x6dd8, { 0xcb, 0xf6 });
        gbc.writeMem(0xfa91, { 0x66 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb249, gbc.sp());
        EXPECT(0x6dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xfa91));
        // CB F6 00F4
        gbc.setState(0xe0cb, 0x34c0, 0x3fd0, 0xa8a5, 0xdb3b, 0xb2f1, 0x1, 0x1);
        gbc.writeMem(0xb2f1, { 0x18 });
        gbc.writeMem(0xe0cb, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x34c0, gbc.sp());
        EXPECT(0xe0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb2f1));
        EXPECT(0xcb, gbc.readMem(0xe0cb));
        EXPECT(0xf6, gbc.readMem(0xe0cc));
        // CB F6 00F5
        gbc.setState(0xe695, 0xb38a, 0xba40, 0x64be, 0x5d5a, 0x637a, 0x1, 0x1);
        gbc.writeMem(0x637a, { 0xcf });
        gbc.writeMem(0xe695, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb38a, gbc.sp());
        EXPECT(0xe697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe695));
        EXPECT(0xf6, gbc.readMem(0xe696));
        // CB F6 00F6
        gbc.setState(0xace, 0xc5b0, 0xff60, 0x901d, 0x2aed, 0xd259, 0x1, 0x1);
        gbc.writeMem(0xace, { 0xcb, 0xf6 });
        gbc.writeMem(0xd259, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0xad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xd259));
        // CB F6 00F7
        gbc.setState(0x206d, 0x20b9, 0xaa50, 0x2af0, 0x7ea3, 0xfa73, 0x1, 0x1);
        gbc.writeMem(0x206d, { 0xcb, 0xf6 });
        gbc.writeMem(0xfa73, { 0x18 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x20b9, gbc.sp());
        EXPECT(0x206f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xfa73));
        // CB F6 00F8
        gbc.setState(0xbb96, 0x8003, 0x5a0, 0x9a8b, 0xca92, 0x9363, 0x0, 0x0);
        gbc.writeMem(0x9363, { 0xab });
        gbc.writeMem(0xbb96, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8003, gbc.sp());
        EXPECT(0xbb98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9363));
        EXPECT(0xcb, gbc.readMem(0xbb96));
        EXPECT(0xf6, gbc.readMem(0xbb97));
        // CB F6 00F9
        gbc.setState(0xd983, 0x6c87, 0x91b0, 0xb6a0, 0x6bc9, 0xec6, 0x0, 0x0);
        gbc.writeMem(0xec6, { 0x69 });
        gbc.writeMem(0xd983, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6c87, gbc.sp());
        EXPECT(0xd985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd983));
        EXPECT(0xf6, gbc.readMem(0xd984));
        // CB F6 00FA
        gbc.setState(0x5947, 0x4459, 0x4bc0, 0x6620, 0x925, 0x9f9a, 0x1, 0x0);
        gbc.writeMem(0x5947, { 0xcb, 0xf6 });
        gbc.writeMem(0x9f9a, { 0xe5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4459, gbc.sp());
        EXPECT(0x5949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9f9a));
        // CB F6 00FC
        gbc.setState(0x7102, 0xf465, 0xf510, 0x36cb, 0x1065, 0xb4d6, 0x1, 0x0);
        gbc.writeMem(0x7102, { 0xcb, 0xf6 });
        gbc.writeMem(0xb4d6, { 0x6e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0x7104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb4d6));
        // CB F6 00FD
        gbc.setState(0x49da, 0x2a34, 0xae20, 0x829d, 0x7938, 0x90fd, 0x1, 0x0);
        gbc.writeMem(0x49da, { 0xcb, 0xf6 });
        gbc.writeMem(0x90fd, { 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2a34, gbc.sp());
        EXPECT(0x49dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x90fd));
        // CB F6 00FE
        gbc.setState(0x8593, 0x9111, 0x97f0, 0xaa09, 0xf24e, 0xc35f, 0x1, 0x0);
        gbc.writeMem(0x8593, { 0xcb, 0xf6 });
        gbc.writeMem(0xc35f, { 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9111, gbc.sp());
        EXPECT(0x8595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8593));
        EXPECT(0xf6, gbc.readMem(0x8594));
        EXPECT(0x57, gbc.readMem(0xc35f));
        // CB F6 00FF
        gbc.setState(0x5790, 0x94c4, 0xd5f0, 0x3154, 0x3ac0, 0x530d, 0x1, 0x0);
        gbc.writeMem(0x530d, { 0x6c });
        gbc.writeMem(0x5790, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x94c4, gbc.sp());
        EXPECT(0x5792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0100
        gbc.setState(0x60e2, 0xe9fd, 0xc710, 0x3736, 0x3da3, 0x92e4, 0x0, 0x0);
        gbc.writeMem(0x60e2, { 0xcb, 0xf6 });
        gbc.writeMem(0x92e4, { 0xd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe9fd, gbc.sp());
        EXPECT(0x60e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x92e4));
        // CB F6 0101
        gbc.setState(0x8c47, 0xac03, 0x7c80, 0x965d, 0x9dc6, 0x86d8, 0x0, 0x0);
        gbc.writeMem(0x86d8, { 0x9b });
        gbc.writeMem(0x8c47, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac03, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x86d8));
        EXPECT(0xcb, gbc.readMem(0x8c47));
        EXPECT(0xf6, gbc.readMem(0x8c48));
        // CB F6 0102
        gbc.setState(0xb6a1, 0xb878, 0x70c0, 0x1062, 0xa03f, 0x8020, 0x1, 0x0);
        gbc.writeMem(0x8020, { 0x68 });
        gbc.writeMem(0xb6a1, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb878, gbc.sp());
        EXPECT(0xb6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8020));
        EXPECT(0xcb, gbc.readMem(0xb6a1));
        EXPECT(0xf6, gbc.readMem(0xb6a2));
        // CB F6 0103
        gbc.setState(0xb79b, 0xff0d, 0x9880, 0x4489, 0x1de6, 0x6ca5, 0x1, 0x1);
        gbc.writeMem(0x6ca5, { 0x7b });
        gbc.writeMem(0xb79b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0xb79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79b));
        EXPECT(0xf6, gbc.readMem(0xb79c));
        // CB F6 0104
        gbc.setState(0x72ff, 0x326c, 0x5280, 0x5af, 0x5519, 0xf652, 0x1, 0x1);
        gbc.writeMem(0x72ff, { 0xcb, 0xf6 });
        gbc.writeMem(0xf652, { 0x6c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x326c, gbc.sp());
        EXPECT(0x7301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xf652));
        // CB F6 0105
        gbc.setState(0x963c, 0xba72, 0xa440, 0xa5bc, 0x6729, 0x9523, 0x1, 0x1);
        gbc.writeMem(0x9523, { 0xac });
        gbc.writeMem(0x963c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xba72, gbc.sp());
        EXPECT(0x963e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9523));
        EXPECT(0xcb, gbc.readMem(0x963c));
        EXPECT(0xf6, gbc.readMem(0x963d));
        // CB F6 0107
        gbc.setState(0xaa91, 0x5aa1, 0x6f20, 0x5b50, 0x62cd, 0x2f6e, 0x1, 0x1);
        gbc.writeMem(0x2f6e, { 0xcf });
        gbc.writeMem(0xaa91, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5aa1, gbc.sp());
        EXPECT(0xaa93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa91));
        EXPECT(0xf6, gbc.readMem(0xaa92));
        // CB F6 0108
        gbc.setState(0xbd1e, 0x53de, 0x3390, 0x3c63, 0xdb1, 0x4b44, 0x0, 0x1);
        gbc.writeMem(0x4b44, { 0x72 });
        gbc.writeMem(0xbd1e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x53de, gbc.sp());
        EXPECT(0xbd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1e));
        EXPECT(0xf6, gbc.readMem(0xbd1f));
        // CB F6 010A
        gbc.setState(0xac54, 0x7bb8, 0xbb80, 0x1141, 0x12c, 0xb52c, 0x1, 0x1);
        gbc.writeMem(0xac54, { 0xcb, 0xf6 });
        gbc.writeMem(0xb52c, { 0x23 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7bb8, gbc.sp());
        EXPECT(0xac56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac54));
        EXPECT(0xf6, gbc.readMem(0xac55));
        EXPECT(0x63, gbc.readMem(0xb52c));
        // CB F6 010B
        gbc.setState(0x5c0f, 0x7306, 0xc040, 0x400d, 0xe56a, 0x2061, 0x0, 0x1);
        gbc.writeMem(0x2061, { 0x4a });
        gbc.writeMem(0x5c0f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0x5c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 010C
        gbc.setState(0x7df, 0x1b2, 0xa6b0, 0x15a, 0x70dd, 0xeee2, 0x1, 0x0);
        gbc.writeMem(0x7df, { 0xcb, 0xf6 });
        gbc.writeMem(0xeee2, { 0x3d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0x7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeee2));
        // CB F6 010D
        gbc.setState(0x4d47, 0xfad9, 0x3fa0, 0x3a50, 0x5b45, 0xf2ac, 0x0, 0x1);
        gbc.writeMem(0x4d47, { 0xcb, 0xf6 });
        gbc.writeMem(0xf2ac, { 0x2a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfad9, gbc.sp());
        EXPECT(0x4d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf2ac));
        // CB F6 010F
        gbc.setState(0x1c1f, 0x4ae0, 0x8e60, 0xc60f, 0xe99, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0x1c1f, { 0xcb, 0xf6 });
        gbc.writeMem(0xd2e5, { 0x6b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4ae0, gbc.sp());
        EXPECT(0x1c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xd2e5));
        // CB F6 0110
        gbc.setState(0xb1de, 0x246f, 0x4f40, 0x8baa, 0x7e77, 0xefca, 0x0, 0x1);
        gbc.writeMem(0xb1de, { 0xcb, 0xf6 });
        gbc.writeMem(0xefca, { 0xe });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x246f, gbc.sp());
        EXPECT(0xb1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1de));
        EXPECT(0xf6, gbc.readMem(0xb1df));
        EXPECT(0x4e, gbc.readMem(0xefca));
        // CB F6 0111
        gbc.setState(0x8084, 0xca53, 0xb310, 0xc2fb, 0x69f8, 0x9673, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xcb, 0xf6 });
        gbc.writeMem(0x9673, { 0xbb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xca53, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8084));
        EXPECT(0xf6, gbc.readMem(0x8085));
        EXPECT(0xfb, gbc.readMem(0x9673));
        // CB F6 0112
        gbc.setState(0x303e, 0x1f06, 0x7040, 0x4b20, 0xe7f2, 0x92c9, 0x0, 0x1);
        gbc.writeMem(0x303e, { 0xcb, 0xf6 });
        gbc.writeMem(0x92c9, { 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1f06, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x92c9));
        // CB F6 0113
        gbc.setState(0x1e42, 0xbf37, 0x1530, 0x2bf9, 0x2ce0, 0xdd01, 0x0, 0x1);
        gbc.writeMem(0x1e42, { 0xcb, 0xf6 });
        gbc.writeMem(0xdd01, { 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbf37, gbc.sp());
        EXPECT(0x1e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xdd01));
        // CB F6 0114
        gbc.setState(0x604b, 0x8877, 0x8570, 0xf16b, 0x68b0, 0xae23, 0x0, 0x1);
        gbc.writeMem(0x604b, { 0xcb, 0xf6 });
        gbc.writeMem(0xae23, { 0x82 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x604d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xae23));
        // CB F6 0116
        gbc.setState(0x490c, 0x3d9f, 0x1150, 0xa1a, 0xa08a, 0xc996, 0x1, 0x1);
        gbc.writeMem(0x490c, { 0xcb, 0xf6 });
        gbc.writeMem(0xc996, { 0x5c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3d9f, gbc.sp());
        EXPECT(0x490e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc996));
        // CB F6 0117
        gbc.setState(0xa421, 0xcff0, 0x4720, 0xce34, 0x106b, 0xb3de, 0x0, 0x0);
        gbc.writeMem(0xa421, { 0xcb, 0xf6 });
        gbc.writeMem(0xb3de, { 0xbe });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcff0, gbc.sp());
        EXPECT(0xa423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa421));
        EXPECT(0xf6, gbc.readMem(0xa422));
        EXPECT(0xfe, gbc.readMem(0xb3de));
        // CB F6 0119
        gbc.setState(0xc203, 0xbc4b, 0xffc0, 0xb38a, 0x543b, 0xcea3, 0x0, 0x0);
        gbc.writeMem(0xc203, { 0xcb, 0xf6 });
        gbc.writeMem(0xcea3, { 0xfc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0xc205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc203));
        EXPECT(0xf6, gbc.readMem(0xc204));
        EXPECT(0xfc, gbc.readMem(0xcea3));
        // CB F6 011A
        gbc.setState(0x40cd, 0xddc4, 0x2d40, 0x6163, 0xc294, 0x61ba, 0x0, 0x1);
        gbc.writeMem(0x40cd, { 0xcb, 0xf6 });
        gbc.writeMem(0x61ba, { 0xeb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xddc4, gbc.sp());
        EXPECT(0x40cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 011D
        gbc.setState(0xc6c3, 0x3efd, 0xbbc0, 0xcdae, 0xf574, 0xef57, 0x0, 0x1);
        gbc.writeMem(0xc6c3, { 0xcb, 0xf6 });
        gbc.writeMem(0xef57, { 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3efd, gbc.sp());
        EXPECT(0xc6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c3));
        EXPECT(0xf6, gbc.readMem(0xc6c4));
        EXPECT(0xdc, gbc.readMem(0xef57));
        // CB F6 011E
        gbc.setState(0x8603, 0xe6ce, 0xe350, 0x8833, 0x8727, 0xb28b, 0x1, 0x0);
        gbc.writeMem(0x8603, { 0xcb, 0xf6 });
        gbc.writeMem(0xb28b, { 0x36 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe6ce, gbc.sp());
        EXPECT(0x8605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8603));
        EXPECT(0xf6, gbc.readMem(0x8604));
        EXPECT(0x76, gbc.readMem(0xb28b));
        // CB F6 011F
        gbc.setState(0x869a, 0x5e99, 0x8ed0, 0x454, 0x9630, 0x73f6, 0x1, 0x1);
        gbc.writeMem(0x73f6, { 0x7d });
        gbc.writeMem(0x869a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5e99, gbc.sp());
        EXPECT(0x869c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869a));
        EXPECT(0xf6, gbc.readMem(0x869b));
        // CB F6 0121
        gbc.setState(0x6c2, 0x4aa4, 0x9a80, 0x8868, 0x97ed, 0xe041, 0x0, 0x0);
        gbc.writeMem(0x6c2, { 0xcb, 0xf6 });
        gbc.writeMem(0xe041, { 0xd1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4aa4, gbc.sp());
        EXPECT(0x6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe041));
        // CB F6 0122
        gbc.setState(0xcdb9, 0x4a61, 0xbce0, 0x527e, 0x69ae, 0x89cc, 0x0, 0x1);
        gbc.writeMem(0x89cc, { 0xff });
        gbc.writeMem(0xcdb9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4a61, gbc.sp());
        EXPECT(0xcdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x89cc));
        EXPECT(0xcb, gbc.readMem(0xcdb9));
        EXPECT(0xf6, gbc.readMem(0xcdba));
        // CB F6 0123
        gbc.setState(0xafd9, 0xb985, 0xb130, 0x16f7, 0xd4ab, 0xe679, 0x1, 0x0);
        gbc.writeMem(0xafd9, { 0xcb, 0xf6 });
        gbc.writeMem(0xe679, { 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb985, gbc.sp());
        EXPECT(0xafdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd9));
        EXPECT(0xf6, gbc.readMem(0xafda));
        EXPECT(0xf2, gbc.readMem(0xe679));
        // CB F6 0124
        gbc.setState(0xc14, 0x325b, 0x37d0, 0x6990, 0xc359, 0x261a, 0x0, 0x0);
        gbc.writeMem(0xc14, { 0xcb, 0xf6 });
        gbc.writeMem(0x261a, { 0xc6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x325b, gbc.sp());
        EXPECT(0xc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0125
        gbc.setState(0xa3fe, 0x266, 0xf250, 0x7152, 0x9126, 0x878c, 0x0, 0x1);
        gbc.writeMem(0x878c, { 0xc2 });
        gbc.writeMem(0xa3fe, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x266, gbc.sp());
        EXPECT(0xa400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x878c));
        EXPECT(0xcb, gbc.readMem(0xa3fe));
        EXPECT(0xf6, gbc.readMem(0xa3ff));
        // CB F6 0126
        gbc.setState(0x345a, 0xf61c, 0x2190, 0x6a5c, 0x18c5, 0x9ee0, 0x1, 0x0);
        gbc.writeMem(0x345a, { 0xcb, 0xf6 });
        gbc.writeMem(0x9ee0, { 0xf5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf61c, gbc.sp());
        EXPECT(0x345c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9ee0));
        // CB F6 0127
        gbc.setState(0x530b, 0xa56a, 0xb770, 0x835f, 0xf179, 0x7431, 0x1, 0x1);
        gbc.writeMem(0x530b, { 0xcb, 0xf6 });
        gbc.writeMem(0x7431, { 0xec });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0x530d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0128
        gbc.setState(0xeb6e, 0xa5c4, 0xfe40, 0xd7e7, 0x602d, 0x9f34, 0x0, 0x1);
        gbc.writeMem(0x9f34, { 0x2 });
        gbc.writeMem(0xeb6e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa5c4, gbc.sp());
        EXPECT(0xeb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9f34));
        EXPECT(0xcb, gbc.readMem(0xeb6e));
        EXPECT(0xf6, gbc.readMem(0xeb6f));
        // CB F6 0129
        gbc.setState(0x6512, 0x4ab4, 0x6480, 0x99ec, 0xff8b, 0x67f8, 0x0, 0x0);
        gbc.writeMem(0x6512, { 0xcb, 0xf6 });
        gbc.writeMem(0x67f8, { 0xfa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0x6514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 012A
        gbc.setState(0xc582, 0xc463, 0x6b10, 0x10bd, 0xefad, 0xcbc5, 0x0, 0x0);
        gbc.writeMem(0xc582, { 0xcb, 0xf6 });
        gbc.writeMem(0xcbc5, { 0x62 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0xc584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc582));
        EXPECT(0xf6, gbc.readMem(0xc583));
        EXPECT(0x62, gbc.readMem(0xcbc5));
        // CB F6 012B
        gbc.setState(0xc5ae, 0x23f3, 0xb810, 0x185f, 0xb825, 0xb302, 0x1, 0x0);
        gbc.writeMem(0xb302, { 0x1c });
        gbc.writeMem(0xc5ae, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x23f3, gbc.sp());
        EXPECT(0xc5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xb302));
        EXPECT(0xcb, gbc.readMem(0xc5ae));
        EXPECT(0xf6, gbc.readMem(0xc5af));
        // CB F6 012D
        gbc.setState(0x9242, 0x69bf, 0x5360, 0x77fd, 0x2ee9, 0x54c3, 0x0, 0x1);
        gbc.writeMem(0x54c3, { 0xf7 });
        gbc.writeMem(0x9242, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x69bf, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9242));
        EXPECT(0xf6, gbc.readMem(0x9243));
        // CB F6 012E
        gbc.setState(0x4299, 0x4c50, 0x92b0, 0x9dbe, 0x421b, 0x8be3, 0x1, 0x0);
        gbc.writeMem(0x4299, { 0xcb, 0xf6 });
        gbc.writeMem(0x8be3, { 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4c50, gbc.sp());
        EXPECT(0x429b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x8be3));
        // CB F6 012F
        gbc.setState(0xf15, 0x39d4, 0x9580, 0xdbde, 0x6694, 0x7410, 0x1, 0x0);
        gbc.writeMem(0xf15, { 0xcb, 0xf6 });
        gbc.writeMem(0x7410, { 0xd8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0132
        gbc.setState(0xca2e, 0xa223, 0x6130, 0xb46e, 0xa7e6, 0xdc1e, 0x1, 0x0);
        gbc.writeMem(0xca2e, { 0xcb, 0xf6 });
        gbc.writeMem(0xdc1e, { 0x31 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa223, gbc.sp());
        EXPECT(0xca30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2e));
        EXPECT(0xf6, gbc.readMem(0xca2f));
        EXPECT(0x71, gbc.readMem(0xdc1e));
        // CB F6 0133
        gbc.setState(0x1989, 0x73b4, 0xeb40, 0xae59, 0x7332, 0x3bc, 0x1, 0x0);
        gbc.writeMem(0x3bc, { 0xca });
        gbc.writeMem(0x1989, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x73b4, gbc.sp());
        EXPECT(0x198b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0134
        gbc.setState(0xca9c, 0x3f0d, 0x3360, 0x2342, 0xd6cf, 0x5466, 0x1, 0x1);
        gbc.writeMem(0x5466, { 0xfd });
        gbc.writeMem(0xca9c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3f0d, gbc.sp());
        EXPECT(0xca9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9c));
        EXPECT(0xf6, gbc.readMem(0xca9d));
        // CB F6 0135
        gbc.setState(0x8397, 0x90, 0x8780, 0xd0e7, 0xbed1, 0x4b61, 0x0, 0x1);
        gbc.writeMem(0x4b61, { 0xee });
        gbc.writeMem(0x8397, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x90, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8397));
        EXPECT(0xf6, gbc.readMem(0x8398));
        // CB F6 0137
        gbc.setState(0x23d4, 0x2422, 0x24c0, 0xc202, 0xf691, 0xd927, 0x0, 0x1);
        gbc.writeMem(0x23d4, { 0xcb, 0xf6 });
        gbc.writeMem(0xd927, { 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2422, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xd927));
        // CB F6 0138
        gbc.setState(0xbc01, 0xa65, 0x1930, 0xa95a, 0x4f74, 0x2603, 0x1, 0x0);
        gbc.writeMem(0x2603, { 0xdb });
        gbc.writeMem(0xbc01, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa65, gbc.sp());
        EXPECT(0xbc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc01));
        EXPECT(0xf6, gbc.readMem(0xbc02));
        // CB F6 0139
        gbc.setState(0x8188, 0xcf20, 0x6f50, 0x15dc, 0x50fd, 0x6bd5, 0x0, 0x1);
        gbc.writeMem(0x6bd5, { 0xf4 });
        gbc.writeMem(0x8188, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcf20, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8188));
        EXPECT(0xf6, gbc.readMem(0x8189));
        // CB F6 013A
        gbc.setState(0xc08, 0x20ad, 0x9a60, 0xc327, 0x3a6d, 0xfa04, 0x0, 0x0);
        gbc.writeMem(0xc08, { 0xcb, 0xf6 });
        gbc.writeMem(0xfa04, { 0x4f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x20ad, gbc.sp());
        EXPECT(0xc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xfa04));
        // CB F6 013B
        gbc.setState(0xd2fc, 0xad5b, 0x1520, 0x9bca, 0x46e7, 0xd26e, 0x1, 0x0);
        gbc.writeMem(0xd26e, { 0x9c });
        gbc.writeMem(0xd2fc, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xad5b, gbc.sp());
        EXPECT(0xd2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd26e));
        EXPECT(0xcb, gbc.readMem(0xd2fc));
        EXPECT(0xf6, gbc.readMem(0xd2fd));
        // CB F6 013C
        gbc.setState(0x659b, 0xc544, 0x54d0, 0x4e2b, 0xa557, 0x6302, 0x0, 0x0);
        gbc.writeMem(0x6302, { 0xdd });
        gbc.writeMem(0x659b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc544, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 013D
        gbc.setState(0x49e5, 0xaa34, 0xe6d0, 0x3451, 0x6cc1, 0x5166, 0x1, 0x1);
        gbc.writeMem(0x49e5, { 0xcb, 0xf6 });
        gbc.writeMem(0x5166, { 0xd8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaa34, gbc.sp());
        EXPECT(0x49e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 013E
        gbc.setState(0x782, 0x9181, 0x7330, 0xcb46, 0xb22e, 0x34c0, 0x1, 0x1);
        gbc.writeMem(0x782, { 0xcb, 0xf6 });
        gbc.writeMem(0x34c0, { 0x66 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9181, gbc.sp());
        EXPECT(0x784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0141
        gbc.setState(0x3ec3, 0x5dd0, 0x8d80, 0xe416, 0xb833, 0x1b5f, 0x0, 0x1);
        gbc.writeMem(0x1b5f, { 0xf1 });
        gbc.writeMem(0x3ec3, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5dd0, gbc.sp());
        EXPECT(0x3ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0142
        gbc.setState(0x7024, 0x54e6, 0x3040, 0xd697, 0x1cfc, 0xda0b, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0xcb, 0xf6 });
        gbc.writeMem(0xda0b, { 0x38 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x54e6, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xda0b));
        // CB F6 0143
        gbc.setState(0xabdc, 0x8634, 0x5380, 0x80aa, 0xaead, 0xc5ab, 0x1, 0x1);
        gbc.writeMem(0xabdc, { 0xcb, 0xf6 });
        gbc.writeMem(0xc5ab, { 0xc6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8634, gbc.sp());
        EXPECT(0xabde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdc));
        EXPECT(0xf6, gbc.readMem(0xabdd));
        EXPECT(0xc6, gbc.readMem(0xc5ab));
        // CB F6 0144
        gbc.setState(0x4130, 0x3f23, 0xa3a0, 0x4226, 0xba1f, 0xb604, 0x0, 0x1);
        gbc.writeMem(0x4130, { 0xcb, 0xf6 });
        gbc.writeMem(0xb604, { 0x5b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3f23, gbc.sp());
        EXPECT(0x4132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb604));
        // CB F6 0145
        gbc.setState(0x67eb, 0xc4a0, 0xb540, 0xa138, 0x259c, 0xb623, 0x0, 0x0);
        gbc.writeMem(0x67eb, { 0xcb, 0xf6 });
        gbc.writeMem(0xb623, { 0xac });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc4a0, gbc.sp());
        EXPECT(0x67ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb623));
        // CB F6 0146
        gbc.setState(0x5ffd, 0x7e4a, 0x38f0, 0xd4d3, 0xc6c, 0x8e23, 0x1, 0x0);
        gbc.writeMem(0x5ffd, { 0xcb, 0xf6 });
        gbc.writeMem(0x8e23, { 0xe6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7e4a, gbc.sp());
        EXPECT(0x5fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e23));
        // CB F6 0147
        gbc.setState(0x72d6, 0x41d1, 0x9de0, 0x5099, 0xa955, 0xa476, 0x1, 0x0);
        gbc.writeMem(0x72d6, { 0xcb, 0xf6 });
        gbc.writeMem(0xa476, { 0x19 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x41d1, gbc.sp());
        EXPECT(0x72d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xa476));
        // CB F6 0148
        gbc.setState(0xe217, 0xbc4b, 0xb0, 0xa778, 0x4b5, 0x8160, 0x0, 0x1);
        gbc.writeMem(0x8160, { 0xb });
        gbc.writeMem(0xe217, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0xe219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8160));
        EXPECT(0xcb, gbc.readMem(0xe217));
        EXPECT(0xf6, gbc.readMem(0xe218));
        // CB F6 0149
        gbc.setState(0x9755, 0xaf5c, 0x4c80, 0xe2e0, 0xf289, 0x6c36, 0x1, 0x0);
        gbc.writeMem(0x6c36, { 0x45 });
        gbc.writeMem(0x9755, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaf5c, gbc.sp());
        EXPECT(0x9757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9755));
        EXPECT(0xf6, gbc.readMem(0x9756));
        // CB F6 014A
        gbc.setState(0xb8a7, 0x2fef, 0xcfd0, 0x99b7, 0x297d, 0x8057, 0x0, 0x0);
        gbc.writeMem(0x8057, { 0x7e });
        gbc.writeMem(0xb8a7, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2fef, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8057));
        EXPECT(0xcb, gbc.readMem(0xb8a7));
        EXPECT(0xf6, gbc.readMem(0xb8a8));
        // CB F6 014C
        gbc.setState(0x7d9f, 0x1b3b, 0xfdf0, 0x94ff, 0xffb3, 0x2b1d, 0x0, 0x0);
        gbc.writeMem(0x2b1d, { 0x5e });
        gbc.writeMem(0x7d9f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1b3b, gbc.sp());
        EXPECT(0x7da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 014D
        gbc.setState(0x4412, 0xf095, 0x6d50, 0xb6df, 0xaded, 0xf91e, 0x1, 0x0);
        gbc.writeMem(0x4412, { 0xcb, 0xf6 });
        gbc.writeMem(0xf91e, { 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf095, gbc.sp());
        EXPECT(0x4414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xf91e));
        // CB F6 014E
        gbc.setState(0x21c1, 0x6c69, 0x1710, 0x3283, 0xbdf5, 0xd06f, 0x0, 0x0);
        gbc.writeMem(0x21c1, { 0xcb, 0xf6 });
        gbc.writeMem(0xd06f, { 0xdd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6c69, gbc.sp());
        EXPECT(0x21c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xd06f));
        // CB F6 0150
        gbc.setState(0x5ec6, 0x920f, 0xa940, 0xce94, 0xad0f, 0x1542, 0x0, 0x0);
        gbc.writeMem(0x1542, { 0x4a });
        gbc.writeMem(0x5ec6, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x920f, gbc.sp());
        EXPECT(0x5ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0153
        gbc.setState(0x303e, 0x9c26, 0xc8e0, 0x39a9, 0x3d92, 0xd1e8, 0x0, 0x1);
        gbc.writeMem(0x303e, { 0xcb, 0xf6 });
        gbc.writeMem(0xd1e8, { 0x77 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd1e8));
        // CB F6 0154
        gbc.setState(0x62a4, 0x9d38, 0xa720, 0xc527, 0x4a82, 0xf537, 0x1, 0x1);
        gbc.writeMem(0x62a4, { 0xcb, 0xf6 });
        gbc.writeMem(0xf537, { 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9d38, gbc.sp());
        EXPECT(0x62a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xf537));
        // CB F6 0155
        gbc.setState(0xa8f2, 0xfe99, 0x7100, 0x883e, 0x4bf1, 0xe43d, 0x0, 0x0);
        gbc.writeMem(0xa8f2, { 0xcb, 0xf6 });
        gbc.writeMem(0xe43d, { 0x8b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfe99, gbc.sp());
        EXPECT(0xa8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f2));
        EXPECT(0xf6, gbc.readMem(0xa8f3));
        EXPECT(0xcb, gbc.readMem(0xe43d));
        // CB F6 0156
        gbc.setState(0x8e2b, 0x147d, 0x98c0, 0x363c, 0xbfd, 0xeb86, 0x0, 0x0);
        gbc.writeMem(0x8e2b, { 0xcb, 0xf6 });
        gbc.writeMem(0xeb86, { 0x71 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x147d, gbc.sp());
        EXPECT(0x8e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2b));
        EXPECT(0xf6, gbc.readMem(0x8e2c));
        EXPECT(0x71, gbc.readMem(0xeb86));
        // CB F6 0157
        gbc.setState(0x73ef, 0x1c63, 0x20d0, 0x8430, 0xf754, 0x8aaf, 0x0, 0x0);
        gbc.writeMem(0x73ef, { 0xcb, 0xf6 });
        gbc.writeMem(0x8aaf, { 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0x73f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8aaf));
        // CB F6 0159
        gbc.setState(0xcd19, 0xbda, 0x64f0, 0x9267, 0xf42e, 0xea4, 0x0, 0x0);
        gbc.writeMem(0xea4, { 0xe9 });
        gbc.writeMem(0xcd19, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbda, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd19));
        EXPECT(0xf6, gbc.readMem(0xcd1a));
        // CB F6 015A
        gbc.setState(0xd672, 0xb1c0, 0xa5a0, 0x7748, 0x4ce4, 0xb014, 0x1, 0x0);
        gbc.writeMem(0xb014, { 0x80 });
        gbc.writeMem(0xd672, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb1c0, gbc.sp());
        EXPECT(0xd674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb014));
        EXPECT(0xcb, gbc.readMem(0xd672));
        EXPECT(0xf6, gbc.readMem(0xd673));
        // CB F6 015B
        gbc.setState(0xa236, 0xa8f0, 0x1070, 0xb6f9, 0x9fc9, 0x5815, 0x0, 0x1);
        gbc.writeMem(0x5815, { 0x5b });
        gbc.writeMem(0xa236, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa8f0, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa236));
        EXPECT(0xf6, gbc.readMem(0xa237));
        // CB F6 015D
        gbc.setState(0xc103, 0x2676, 0xe3b0, 0x3ec, 0x29ce, 0xc6ec, 0x1, 0x0);
        gbc.writeMem(0xc103, { 0xcb, 0xf6 });
        gbc.writeMem(0xc6ec, { 0x69 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2676, gbc.sp());
        EXPECT(0xc105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc103));
        EXPECT(0xf6, gbc.readMem(0xc104));
        EXPECT(0x69, gbc.readMem(0xc6ec));
        // CB F6 0160
        gbc.setState(0x3e51, 0xcaf4, 0xd780, 0x1d44, 0x5181, 0x9fe5, 0x1, 0x1);
        gbc.writeMem(0x3e51, { 0xcb, 0xf6 });
        gbc.writeMem(0x9fe5, { 0xfd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcaf4, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9fe5));
        // CB F6 0163
        gbc.setState(0x55d6, 0x3f28, 0x6f30, 0xd444, 0xa07, 0x407a, 0x0, 0x1);
        gbc.writeMem(0x407a, { 0xf5 });
        gbc.writeMem(0x55d6, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3f28, gbc.sp());
        EXPECT(0x55d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0164
        gbc.setState(0x9c69, 0x1e38, 0x8110, 0xf2ff, 0x3a22, 0x3ff4, 0x1, 0x0);
        gbc.writeMem(0x3ff4, { 0x72 });
        gbc.writeMem(0x9c69, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1e38, gbc.sp());
        EXPECT(0x9c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c69));
        EXPECT(0xf6, gbc.readMem(0x9c6a));
        // CB F6 0166
        gbc.setState(0xf43, 0xd7e8, 0xdba0, 0xda47, 0xf6fa, 0xcc87, 0x0, 0x1);
        gbc.writeMem(0xf43, { 0xcb, 0xf6 });
        gbc.writeMem(0xcc87, { 0x4e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd7e8, gbc.sp());
        EXPECT(0xf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcc87));
        // CB F6 0167
        gbc.setState(0x333c, 0xc3ea, 0x92a0, 0x8b8c, 0xed7e, 0xc8d0, 0x1, 0x1);
        gbc.writeMem(0x333c, { 0xcb, 0xf6 });
        gbc.writeMem(0xc8d0, { 0x26 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0x333e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc8d0));
        // CB F6 0168
        gbc.setState(0x89c1, 0xe6e8, 0x3370, 0xbce6, 0x7d18, 0x1a7a, 0x0, 0x0);
        gbc.writeMem(0x1a7a, { 0x52 });
        gbc.writeMem(0x89c1, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe6e8, gbc.sp());
        EXPECT(0x89c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c1));
        EXPECT(0xf6, gbc.readMem(0x89c2));
        // CB F6 016A
        gbc.setState(0x47c2, 0x782, 0x3da0, 0x3bed, 0x18e, 0xae49, 0x0, 0x0);
        gbc.writeMem(0x47c2, { 0xcb, 0xf6 });
        gbc.writeMem(0xae49, { 0xd8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x782, gbc.sp());
        EXPECT(0x47c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xae49));
        // CB F6 016C
        gbc.setState(0x61b, 0x9fe4, 0xf470, 0x37fb, 0xfb8c, 0xa28c, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0xcb, 0xf6 });
        gbc.writeMem(0xa28c, { 0x76 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9fe4, gbc.sp());
        EXPECT(0x61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa28c));
        // CB F6 016D
        gbc.setState(0x795d, 0x93c, 0xaa00, 0xbdf4, 0x8bf5, 0x89ab, 0x0, 0x0);
        gbc.writeMem(0x795d, { 0xcb, 0xf6 });
        gbc.writeMem(0x89ab, { 0x96 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x93c, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x89ab));
        // CB F6 016F
        gbc.setState(0x88f2, 0x3988, 0x4420, 0x4e82, 0xa5d3, 0xc1c0, 0x1, 0x0);
        gbc.writeMem(0x88f2, { 0xcb, 0xf6 });
        gbc.writeMem(0xc1c0, { 0x67 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3988, gbc.sp());
        EXPECT(0x88f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f2));
        EXPECT(0xf6, gbc.readMem(0x88f3));
        EXPECT(0x67, gbc.readMem(0xc1c0));
        // CB F6 0170
        gbc.setState(0xd030, 0x2bfe, 0x8820, 0x1556, 0x8a5f, 0x21ff, 0x1, 0x0);
        gbc.writeMem(0x21ff, { 0x65 });
        gbc.writeMem(0xd030, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0xd032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd030));
        EXPECT(0xf6, gbc.readMem(0xd031));
        // CB F6 0172
        gbc.setState(0xd4c3, 0x8c85, 0xb0e0, 0xa9c4, 0x9f52, 0xf06b, 0x0, 0x1);
        gbc.writeMem(0xd4c3, { 0xcb, 0xf6 });
        gbc.writeMem(0xf06b, { 0x59 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8c85, gbc.sp());
        EXPECT(0xd4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c3));
        EXPECT(0xf6, gbc.readMem(0xd4c4));
        EXPECT(0x59, gbc.readMem(0xf06b));
        // CB F6 0174
        gbc.setState(0xc06c, 0x2ed4, 0x8f10, 0x7773, 0x764c, 0xe7fa, 0x0, 0x1);
        gbc.writeMem(0xc06c, { 0xcb, 0xf6 });
        gbc.writeMem(0xe7fa, { 0x20 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2ed4, gbc.sp());
        EXPECT(0xc06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06c));
        EXPECT(0xf6, gbc.readMem(0xc06d));
        EXPECT(0x60, gbc.readMem(0xe7fa));
        // CB F6 0176
        gbc.setState(0x50ff, 0x9360, 0xbc00, 0xfdf6, 0xe2e7, 0x649d, 0x1, 0x0);
        gbc.writeMem(0x50ff, { 0xcb, 0xf6 });
        gbc.writeMem(0x649d, { 0x45 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9360, gbc.sp());
        EXPECT(0x5101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0177
        gbc.setState(0x8aab, 0x9002, 0xf830, 0xe2cc, 0x9403, 0x227e, 0x1, 0x0);
        gbc.writeMem(0x227e, { 0xd3 });
        gbc.writeMem(0x8aab, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9002, gbc.sp());
        EXPECT(0x8aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aab));
        EXPECT(0xf6, gbc.readMem(0x8aac));
        // CB F6 0178
        gbc.setState(0xda61, 0x62ea, 0x7670, 0x9e6c, 0xbbe0, 0x3e58, 0x1, 0x0);
        gbc.writeMem(0x3e58, { 0xc3 });
        gbc.writeMem(0xda61, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x62ea, gbc.sp());
        EXPECT(0xda63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda61));
        EXPECT(0xf6, gbc.readMem(0xda62));
        // CB F6 0179
        gbc.setState(0xb924, 0xef56, 0x340, 0xf782, 0xeab3, 0xb314, 0x0, 0x1);
        gbc.writeMem(0xb314, { 0xc9 });
        gbc.writeMem(0xb924, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xef56, gbc.sp());
        EXPECT(0xb926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb314));
        EXPECT(0xcb, gbc.readMem(0xb924));
        EXPECT(0xf6, gbc.readMem(0xb925));
        // CB F6 017B
        gbc.setState(0x8960, 0x65f2, 0x3cb0, 0x995c, 0x2a3b, 0xe66e, 0x1, 0x1);
        gbc.writeMem(0x8960, { 0xcb, 0xf6 });
        gbc.writeMem(0xe66e, { 0x40 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x65f2, gbc.sp());
        EXPECT(0x8962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8960));
        EXPECT(0xf6, gbc.readMem(0x8961));
        EXPECT(0x40, gbc.readMem(0xe66e));
        // CB F6 017C
        gbc.setState(0xabf0, 0x9844, 0xd440, 0x829a, 0xd9ac, 0xc22a, 0x0, 0x0);
        gbc.writeMem(0xabf0, { 0xcb, 0xf6 });
        gbc.writeMem(0xc22a, { 0xc5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0xabf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf0));
        EXPECT(0xf6, gbc.readMem(0xabf1));
        EXPECT(0xc5, gbc.readMem(0xc22a));
        // CB F6 017D
        gbc.setState(0xcf87, 0x7929, 0xded0, 0x69ec, 0x9283, 0xba73, 0x0, 0x1);
        gbc.writeMem(0xba73, { 0x77 });
        gbc.writeMem(0xcf87, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7929, gbc.sp());
        EXPECT(0xcf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xba73));
        EXPECT(0xcb, gbc.readMem(0xcf87));
        EXPECT(0xf6, gbc.readMem(0xcf88));
        // CB F6 017F
        gbc.setState(0xcee8, 0xfd07, 0x56c0, 0x4b91, 0x8ba1, 0xbfcc, 0x0, 0x0);
        gbc.writeMem(0xbfcc, { 0x47 });
        gbc.writeMem(0xcee8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfd07, gbc.sp());
        EXPECT(0xceea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbfcc));
        EXPECT(0xcb, gbc.readMem(0xcee8));
        EXPECT(0xf6, gbc.readMem(0xcee9));
        // CB F6 0181
        gbc.setState(0xaa03, 0x5d07, 0xe950, 0xe4cc, 0x9411, 0x77ce, 0x0, 0x1);
        gbc.writeMem(0x77ce, { 0xf7 });
        gbc.writeMem(0xaa03, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5d07, gbc.sp());
        EXPECT(0xaa05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa03));
        EXPECT(0xf6, gbc.readMem(0xaa04));
        // CB F6 0182
        gbc.setState(0xa05f, 0x5e58, 0x6470, 0xfda, 0x7fc6, 0x3fc4, 0x0, 0x0);
        gbc.writeMem(0x3fc4, { 0xd7 });
        gbc.writeMem(0xa05f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5e58, gbc.sp());
        EXPECT(0xa061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05f));
        EXPECT(0xf6, gbc.readMem(0xa060));
        // CB F6 0183
        gbc.setState(0x4966, 0x1e9a, 0xd010, 0xbab8, 0x98e4, 0xcfcf, 0x1, 0x1);
        gbc.writeMem(0x4966, { 0xcb, 0xf6 });
        gbc.writeMem(0xcfcf, { 0x23 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1e9a, gbc.sp());
        EXPECT(0x4968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xcfcf));
        // CB F6 0185
        gbc.setState(0x423b, 0x5e6, 0xdc60, 0x6d80, 0x922c, 0x33e7, 0x1, 0x0);
        gbc.writeMem(0x33e7, { 0x58 });
        gbc.writeMem(0x423b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5e6, gbc.sp());
        EXPECT(0x423d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0186
        gbc.setState(0x3417, 0x6083, 0x4c80, 0xf1d9, 0xb449, 0xd4e2, 0x1, 0x0);
        gbc.writeMem(0x3417, { 0xcb, 0xf6 });
        gbc.writeMem(0xd4e2, { 0xbe });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6083, gbc.sp());
        EXPECT(0x3419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd4e2));
        // CB F6 0187
        gbc.setState(0xbdce, 0xb79, 0xf8c0, 0x4ef6, 0x9d29, 0xd663, 0x0, 0x1);
        gbc.writeMem(0xbdce, { 0xcb, 0xf6 });
        gbc.writeMem(0xd663, { 0xcf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb79, gbc.sp());
        EXPECT(0xbdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdce));
        EXPECT(0xf6, gbc.readMem(0xbdcf));
        EXPECT(0xcf, gbc.readMem(0xd663));
        // CB F6 0188
        gbc.setState(0xeb26, 0xd69f, 0xeeb0, 0x1c05, 0x98c9, 0x2b, 0x1, 0x1);
        gbc.writeMem(0x2b, { 0x5c });
        gbc.writeMem(0xeb26, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd69f, gbc.sp());
        EXPECT(0xeb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb26));
        EXPECT(0xf6, gbc.readMem(0xeb27));
        // CB F6 0189
        gbc.setState(0x5a8a, 0x4bf2, 0x87c0, 0xa0ca, 0xeccc, 0x6620, 0x0, 0x0);
        gbc.writeMem(0x5a8a, { 0xcb, 0xf6 });
        gbc.writeMem(0x6620, { 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4bf2, gbc.sp());
        EXPECT(0x5a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 018A
        gbc.setState(0x8257, 0x13bb, 0x2810, 0xd88, 0x43b3, 0x480d, 0x1, 0x0);
        gbc.writeMem(0x480d, { 0x49 });
        gbc.writeMem(0x8257, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x13bb, gbc.sp());
        EXPECT(0x8259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8257));
        EXPECT(0xf6, gbc.readMem(0x8258));
        // CB F6 018C
        gbc.setState(0x8f82, 0xa357, 0xd8d0, 0x1201, 0xd7c6, 0x45ca, 0x0, 0x1);
        gbc.writeMem(0x45ca, { 0xfd });
        gbc.writeMem(0x8f82, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa357, gbc.sp());
        EXPECT(0x8f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f82));
        EXPECT(0xf6, gbc.readMem(0x8f83));
        // CB F6 018D
        gbc.setState(0x96ce, 0xae04, 0x2180, 0xf7dc, 0x1911, 0xb378, 0x1, 0x1);
        gbc.writeMem(0x96ce, { 0xcb, 0xf6 });
        gbc.writeMem(0xb378, { 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xae04, gbc.sp());
        EXPECT(0x96d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ce));
        EXPECT(0xf6, gbc.readMem(0x96cf));
        EXPECT(0x6f, gbc.readMem(0xb378));
        // CB F6 018E
        gbc.setState(0x74c6, 0x776, 0x72b0, 0x4d97, 0x46b0, 0xd064, 0x1, 0x1);
        gbc.writeMem(0x74c6, { 0xcb, 0xf6 });
        gbc.writeMem(0xd064, { 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x776, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd064));
        // CB F6 0190
        gbc.setState(0x6c57, 0x6ac0, 0xdb80, 0x4d49, 0x15ab, 0xb6bc, 0x1, 0x1);
        gbc.writeMem(0x6c57, { 0xcb, 0xf6 });
        gbc.writeMem(0xb6bc, { 0x20 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6ac0, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb6bc));
        // CB F6 0191
        gbc.setState(0x2f20, 0x4c57, 0x1a80, 0xd4a1, 0x1fcd, 0x166e, 0x1, 0x1);
        gbc.writeMem(0x166e, { 0x7b });
        gbc.writeMem(0x2f20, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4c57, gbc.sp());
        EXPECT(0x2f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0192
        gbc.setState(0xe045, 0xce76, 0xd820, 0xb1a5, 0xe964, 0x5a3c, 0x0, 0x0);
        gbc.writeMem(0x5a3c, { 0x6c });
        gbc.writeMem(0xe045, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xce76, gbc.sp());
        EXPECT(0xe047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe045));
        EXPECT(0xf6, gbc.readMem(0xe046));
        // CB F6 0196
        gbc.setState(0xe65b, 0x45d9, 0x2a30, 0xfec9, 0xd6ca, 0xa831, 0x1, 0x0);
        gbc.writeMem(0xa831, { 0xd8 });
        gbc.writeMem(0xe65b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x45d9, gbc.sp());
        EXPECT(0xe65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa831));
        EXPECT(0xcb, gbc.readMem(0xe65b));
        EXPECT(0xf6, gbc.readMem(0xe65c));
        // CB F6 0198
        gbc.setState(0xabb4, 0x7161, 0xf140, 0xe99f, 0xa8dd, 0x4abf, 0x1, 0x1);
        gbc.writeMem(0x4abf, { 0xd0 });
        gbc.writeMem(0xabb4, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7161, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb4));
        EXPECT(0xf6, gbc.readMem(0xabb5));
        // CB F6 0199
        gbc.setState(0xe326, 0x1fea, 0x83f0, 0x5c23, 0x723f, 0xda7e, 0x1, 0x1);
        gbc.writeMem(0xda7e, { 0x11 });
        gbc.writeMem(0xe326, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1fea, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xda7e));
        EXPECT(0xcb, gbc.readMem(0xe326));
        EXPECT(0xf6, gbc.readMem(0xe327));
        // CB F6 019A
        gbc.setState(0xcdd7, 0x4385, 0x4d90, 0x697, 0x38e4, 0x20d3, 0x1, 0x1);
        gbc.writeMem(0x20d3, { 0x70 });
        gbc.writeMem(0xcdd7, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4385, gbc.sp());
        EXPECT(0xcdd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd7));
        EXPECT(0xf6, gbc.readMem(0xcdd8));
        // CB F6 019C
        gbc.setState(0x6d15, 0xa9eb, 0xa130, 0x12b8, 0x6a90, 0xef37, 0x1, 0x0);
        gbc.writeMem(0x6d15, { 0xcb, 0xf6 });
        gbc.writeMem(0xef37, { 0xb6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0x6d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xef37));
        // CB F6 019D
        gbc.setState(0x7a1c, 0x61e0, 0xcd10, 0x1b25, 0x95a3, 0xec41, 0x0, 0x0);
        gbc.writeMem(0x7a1c, { 0xcb, 0xf6 });
        gbc.writeMem(0xec41, { 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x61e0, gbc.sp());
        EXPECT(0x7a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xec41));
        // CB F6 019E
        gbc.setState(0x7f4f, 0x4954, 0x8f0, 0x4cf, 0xa040, 0x1316, 0x0, 0x1);
        gbc.writeMem(0x1316, { 0xf0 });
        gbc.writeMem(0x7f4f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4954, gbc.sp());
        EXPECT(0x7f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 019F
        gbc.setState(0x1bac, 0x6d59, 0xbf20, 0x9d46, 0x181c, 0x30e2, 0x0, 0x1);
        gbc.writeMem(0x1bac, { 0xcb, 0xf6 });
        gbc.writeMem(0x30e2, { 0xde });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6d59, gbc.sp());
        EXPECT(0x1bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01A2
        gbc.setState(0xcec0, 0x3f8d, 0xb380, 0xe6a2, 0xf742, 0x889d, 0x1, 0x1);
        gbc.writeMem(0x889d, { 0x0 });
        gbc.writeMem(0xcec0, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3f8d, gbc.sp());
        EXPECT(0xcec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x889d));
        EXPECT(0xcb, gbc.readMem(0xcec0));
        EXPECT(0xf6, gbc.readMem(0xcec1));
        // CB F6 01A3
        gbc.setState(0xa3ee, 0x608b, 0xec90, 0xebbb, 0x9920, 0x343b, 0x1, 0x0);
        gbc.writeMem(0x343b, { 0x67 });
        gbc.writeMem(0xa3ee, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x608b, gbc.sp());
        EXPECT(0xa3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ee));
        EXPECT(0xf6, gbc.readMem(0xa3ef));
        // CB F6 01A4
        gbc.setState(0x5b97, 0xb677, 0xc5a0, 0x63c9, 0xec26, 0x2729, 0x1, 0x1);
        gbc.writeMem(0x2729, { 0xc2 });
        gbc.writeMem(0x5b97, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb677, gbc.sp());
        EXPECT(0x5b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01A5
        gbc.setState(0xe2c, 0xbfb8, 0x70e0, 0xe4ec, 0xcf3b, 0x6be6, 0x0, 0x1);
        gbc.writeMem(0xe2c, { 0xcb, 0xf6 });
        gbc.writeMem(0x6be6, { 0x66 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbfb8, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01A6
        gbc.setState(0xddd4, 0x2079, 0xd8c0, 0x6e15, 0x6ebb, 0x5305, 0x1, 0x0);
        gbc.writeMem(0x5305, { 0x51 });
        gbc.writeMem(0xddd4, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2079, gbc.sp());
        EXPECT(0xddd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd4));
        EXPECT(0xf6, gbc.readMem(0xddd5));
        // CB F6 01A8
        gbc.setState(0xe35e, 0x3dcf, 0xd2c0, 0x2baa, 0x85f2, 0x352d, 0x1, 0x0);
        gbc.writeMem(0x352d, { 0x43 });
        gbc.writeMem(0xe35e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3dcf, gbc.sp());
        EXPECT(0xe360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35e));
        EXPECT(0xf6, gbc.readMem(0xe35f));
        // CB F6 01A9
        gbc.setState(0x24f2, 0x15ee, 0x9a50, 0xd2e6, 0x56ca, 0xe859, 0x1, 0x1);
        gbc.writeMem(0x24f2, { 0xcb, 0xf6 });
        gbc.writeMem(0xe859, { 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x15ee, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe859));
        // CB F6 01AB
        gbc.setState(0x23a1, 0xc16, 0x7450, 0x6ca1, 0xf78c, 0x2e28, 0x1, 0x1);
        gbc.writeMem(0x23a1, { 0xcb, 0xf6 });
        gbc.writeMem(0x2e28, { 0x66 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0x23a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 01AC
        gbc.setState(0x73bf, 0x3637, 0x8c80, 0x8724, 0xd0f3, 0x6268, 0x1, 0x0);
        gbc.writeMem(0x6268, { 0xda });
        gbc.writeMem(0x73bf, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3637, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01AD
        gbc.setState(0xadc3, 0x492e, 0x6ac0, 0x8573, 0x4b01, 0x2401, 0x0, 0x0);
        gbc.writeMem(0x2401, { 0xed });
        gbc.writeMem(0xadc3, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x492e, gbc.sp());
        EXPECT(0xadc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc3));
        EXPECT(0xf6, gbc.readMem(0xadc4));
        // CB F6 01AE
        gbc.setState(0xc2c6, 0x854a, 0xad70, 0x6c53, 0xbad8, 0x3d1c, 0x0, 0x1);
        gbc.writeMem(0x3d1c, { 0xc1 });
        gbc.writeMem(0xc2c6, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x854a, gbc.sp());
        EXPECT(0xc2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c6));
        EXPECT(0xf6, gbc.readMem(0xc2c7));
        // CB F6 01B0
        gbc.setState(0x46f6, 0x5c3d, 0xd9f0, 0x5b0c, 0x6fdc, 0x6d38, 0x1, 0x0);
        gbc.writeMem(0x46f6, { 0xcb, 0xf6 });
        gbc.writeMem(0x6d38, { 0xf4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5c3d, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 01B1
        gbc.setState(0x9a97, 0x78bb, 0x8310, 0x3448, 0xecf4, 0xb7f6, 0x1, 0x0);
        gbc.writeMem(0x9a97, { 0xcb, 0xf6 });
        gbc.writeMem(0xb7f6, { 0xed });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x78bb, gbc.sp());
        EXPECT(0x9a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a97));
        EXPECT(0xf6, gbc.readMem(0x9a98));
        EXPECT(0xed, gbc.readMem(0xb7f6));
        // CB F6 01B3
        gbc.setState(0x14f8, 0xa0a, 0x6450, 0x4598, 0xa89b, 0xd49, 0x1, 0x1);
        gbc.writeMem(0xd49, { 0x7d });
        gbc.writeMem(0x14f8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa0a, gbc.sp());
        EXPECT(0x14fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 01B7
        gbc.setState(0x8a4a, 0x6a9b, 0xea80, 0x26aa, 0x44de, 0x7a44, 0x1, 0x1);
        gbc.writeMem(0x7a44, { 0x60 });
        gbc.writeMem(0x8a4a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6a9b, gbc.sp());
        EXPECT(0x8a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4a));
        EXPECT(0xf6, gbc.readMem(0x8a4b));
        // CB F6 01B9
        gbc.setState(0x76b, 0x48d8, 0xeb10, 0xbeae, 0x94f6, 0xaf23, 0x0, 0x1);
        gbc.writeMem(0x76b, { 0xcb, 0xf6 });
        gbc.writeMem(0xaf23, { 0xcd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x48d8, gbc.sp());
        EXPECT(0x76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xaf23));
        // CB F6 01BA
        gbc.setState(0xea21, 0xd99b, 0xf9d0, 0xfdc9, 0x9c62, 0xabf7, 0x1, 0x0);
        gbc.writeMem(0xabf7, { 0xf3 });
        gbc.writeMem(0xea21, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd99b, gbc.sp());
        EXPECT(0xea23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xabf7));
        EXPECT(0xcb, gbc.readMem(0xea21));
        EXPECT(0xf6, gbc.readMem(0xea22));
        // CB F6 01BB
        gbc.setState(0xac2a, 0x91b8, 0x70c0, 0x1c3f, 0x442c, 0x1018, 0x1, 0x0);
        gbc.writeMem(0x1018, { 0xfe });
        gbc.writeMem(0xac2a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x91b8, gbc.sp());
        EXPECT(0xac2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2a));
        EXPECT(0xf6, gbc.readMem(0xac2b));
        // CB F6 01BD
        gbc.setState(0x45ed, 0x96db, 0xfa80, 0x2db2, 0xe6b4, 0xb01e, 0x0, 0x0);
        gbc.writeMem(0x45ed, { 0xcb, 0xf6 });
        gbc.writeMem(0xb01e, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x96db, gbc.sp());
        EXPECT(0x45ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xb01e));
        // CB F6 01BF
        gbc.setState(0x6038, 0xa06c, 0x46c0, 0xcb22, 0x1230, 0x7946, 0x0, 0x1);
        gbc.writeMem(0x6038, { 0xcb, 0xf6 });
        gbc.writeMem(0x7946, { 0xfb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa06c, gbc.sp());
        EXPECT(0x603a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01C1
        gbc.setState(0x360a, 0xa2c2, 0xee10, 0xe819, 0xf1ef, 0xe902, 0x1, 0x1);
        gbc.writeMem(0x360a, { 0xcb, 0xf6 });
        gbc.writeMem(0xe902, { 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa2c2, gbc.sp());
        EXPECT(0x360c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xe902));
        // CB F6 01C2
        gbc.setState(0xadba, 0x6841, 0xc9a0, 0x5c13, 0x7730, 0xd079, 0x0, 0x1);
        gbc.writeMem(0xadba, { 0xcb, 0xf6 });
        gbc.writeMem(0xd079, { 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6841, gbc.sp());
        EXPECT(0xadbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadba));
        EXPECT(0xf6, gbc.readMem(0xadbb));
        EXPECT(0x7b, gbc.readMem(0xd079));
        // CB F6 01C3
        gbc.setState(0x9eae, 0x7907, 0x4210, 0xd873, 0x5735, 0xd2d8, 0x1, 0x1);
        gbc.writeMem(0x9eae, { 0xcb, 0xf6 });
        gbc.writeMem(0xd2d8, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7907, gbc.sp());
        EXPECT(0x9eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eae));
        EXPECT(0xf6, gbc.readMem(0x9eaf));
        EXPECT(0x43, gbc.readMem(0xd2d8));
        // CB F6 01C4
        gbc.setState(0xddec, 0x27a9, 0xc140, 0x675e, 0x18a6, 0xc374, 0x1, 0x0);
        gbc.writeMem(0xc374, { 0x70 });
        gbc.writeMem(0xddec, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x27a9, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc374));
        EXPECT(0xcb, gbc.readMem(0xddec));
        EXPECT(0xf6, gbc.readMem(0xdded));
        // CB F6 01C5
        gbc.setState(0x20ba, 0x7c2a, 0xbc90, 0xa59c, 0xf874, 0x875b, 0x1, 0x0);
        gbc.writeMem(0x20ba, { 0xcb, 0xf6 });
        gbc.writeMem(0x875b, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7c2a, gbc.sp());
        EXPECT(0x20bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x875b));
        // CB F6 01C6
        gbc.setState(0x23aa, 0x4e3e, 0xd40, 0xa8e, 0x33f, 0xf549, 0x0, 0x1);
        gbc.writeMem(0x23aa, { 0xcb, 0xf6 });
        gbc.writeMem(0xf549, { 0x6b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4e3e, gbc.sp());
        EXPECT(0x23ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf549));
        // CB F6 01C7
        gbc.setState(0xb03e, 0xb315, 0xe500, 0x2dd6, 0xc6ec, 0xf40d, 0x0, 0x1);
        gbc.writeMem(0xb03e, { 0xcb, 0xf6 });
        gbc.writeMem(0xf40d, { 0x6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb315, gbc.sp());
        EXPECT(0xb040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03e));
        EXPECT(0xf6, gbc.readMem(0xb03f));
        EXPECT(0x46, gbc.readMem(0xf40d));
        // CB F6 01C8
        gbc.setState(0x4e1f, 0x3b31, 0xe370, 0x62c2, 0x1416, 0x672c, 0x1, 0x1);
        gbc.writeMem(0x4e1f, { 0xcb, 0xf6 });
        gbc.writeMem(0x672c, { 0x50 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3b31, gbc.sp());
        EXPECT(0x4e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 01C9
        gbc.setState(0x4429, 0xbdee, 0xd8e0, 0x5a9c, 0x41d1, 0xbe25, 0x1, 0x0);
        gbc.writeMem(0x4429, { 0xcb, 0xf6 });
        gbc.writeMem(0xbe25, { 0xcb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbdee, gbc.sp());
        EXPECT(0x442b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe25));
        // CB F6 01CB
        gbc.setState(0x56d6, 0xf925, 0xc110, 0xd79f, 0x58ff, 0xaaf6, 0x1, 0x1);
        gbc.writeMem(0x56d6, { 0xcb, 0xf6 });
        gbc.writeMem(0xaaf6, { 0x4c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf925, gbc.sp());
        EXPECT(0x56d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaaf6));
        // CB F6 01CD
        gbc.setState(0x57a5, 0x5a00, 0x1390, 0x2f6d, 0xa10d, 0xc365, 0x1, 0x1);
        gbc.writeMem(0x57a5, { 0xcb, 0xf6 });
        gbc.writeMem(0xc365, { 0x38 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5a00, gbc.sp());
        EXPECT(0x57a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc365));
        // CB F6 01CE
        gbc.setState(0xa9fa, 0x7d35, 0x75b0, 0x339b, 0xe1f1, 0x656d, 0x1, 0x1);
        gbc.writeMem(0x656d, { 0x68 });
        gbc.writeMem(0xa9fa, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7d35, gbc.sp());
        EXPECT(0xa9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9fa));
        EXPECT(0xf6, gbc.readMem(0xa9fb));
        // CB F6 01CF
        gbc.setState(0x4da8, 0x5891, 0x2060, 0x358f, 0x5c7a, 0xbf91, 0x1, 0x1);
        gbc.writeMem(0x4da8, { 0xcb, 0xf6 });
        gbc.writeMem(0xbf91, { 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5891, gbc.sp());
        EXPECT(0x4daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbf91));
        // CB F6 01D0
        gbc.setState(0x17d8, 0x3222, 0x65a0, 0x30f5, 0x4a9f, 0xb668, 0x0, 0x1);
        gbc.writeMem(0x17d8, { 0xcb, 0xf6 });
        gbc.writeMem(0xb668, { 0xfa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3222, gbc.sp());
        EXPECT(0x17da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb668));
        // CB F6 01D1
        gbc.setState(0x3a7b, 0x2ec3, 0xac10, 0x3a78, 0x6c3b, 0x10f7, 0x1, 0x0);
        gbc.writeMem(0x10f7, { 0x42 });
        gbc.writeMem(0x3a7b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0x3a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 01D3
        gbc.setState(0xab31, 0xf06c, 0x8620, 0xf21e, 0xea7d, 0xb9f, 0x1, 0x0);
        gbc.writeMem(0xb9f, { 0x71 });
        gbc.writeMem(0xab31, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf06c, gbc.sp());
        EXPECT(0xab33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab31));
        EXPECT(0xf6, gbc.readMem(0xab32));
        // CB F6 01D4
        gbc.setState(0x1e26, 0x6899, 0x8c90, 0xab55, 0xd0c7, 0xe74e, 0x1, 0x0);
        gbc.writeMem(0x1e26, { 0xcb, 0xf6 });
        gbc.writeMem(0xe74e, { 0x11 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6899, gbc.sp());
        EXPECT(0x1e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe74e));
        // CB F6 01D6
        gbc.setState(0xe7b8, 0x1b18, 0xee20, 0x1921, 0xb24a, 0xfe87, 0x0, 0x0);
        gbc.writeMem(0xe7b8, { 0xcb, 0xf6 });
        gbc.writeMem(0xfe87, { 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1b18, gbc.sp());
        EXPECT(0xe7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b8));
        EXPECT(0xf6, gbc.readMem(0xe7b9));
        EXPECT(0xe5, gbc.readMem(0xfe87));
        // CB F6 01DB
        gbc.setState(0xc742, 0xc93e, 0xfb50, 0x5e86, 0x5419, 0xec0c, 0x0, 0x0);
        gbc.writeMem(0xc742, { 0xcb, 0xf6 });
        gbc.writeMem(0xec0c, { 0x29 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc93e, gbc.sp());
        EXPECT(0xc744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc742));
        EXPECT(0xf6, gbc.readMem(0xc743));
        EXPECT(0x69, gbc.readMem(0xec0c));
        // CB F6 01DC
        gbc.setState(0x7593, 0xbac7, 0x5430, 0xf0a2, 0x8d98, 0x90d0, 0x1, 0x1);
        gbc.writeMem(0x7593, { 0xcb, 0xf6 });
        gbc.writeMem(0x90d0, { 0x21 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbac7, gbc.sp());
        EXPECT(0x7595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x90d0));
        // CB F6 01DE
        gbc.setState(0x96b9, 0xdf05, 0x8bc0, 0x64b6, 0x999c, 0x834b, 0x0, 0x1);
        gbc.writeMem(0x834b, { 0x74 });
        gbc.writeMem(0x96b9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdf05, gbc.sp());
        EXPECT(0x96bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x834b));
        EXPECT(0xcb, gbc.readMem(0x96b9));
        EXPECT(0xf6, gbc.readMem(0x96ba));
        // CB F6 01DF
        gbc.setState(0x1081, 0x654e, 0x4230, 0xd5, 0x9b9d, 0xe165, 0x0, 0x0);
        gbc.writeMem(0x1081, { 0xcb, 0xf6 });
        gbc.writeMem(0xe165, { 0xb7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xe165));
        // CB F6 01E1
        gbc.setState(0xdff7, 0x3fce, 0x3350, 0xc72b, 0x2dca, 0x8869, 0x0, 0x1);
        gbc.writeMem(0x8869, { 0x79 });
        gbc.writeMem(0xdff7, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3fce, gbc.sp());
        EXPECT(0xdff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8869));
        EXPECT(0xcb, gbc.readMem(0xdff7));
        EXPECT(0xf6, gbc.readMem(0xdff8));
        // CB F6 01E3
        gbc.setState(0xa008, 0xd041, 0x4620, 0x9fb2, 0xf10, 0xf883, 0x0, 0x0);
        gbc.writeMem(0xa008, { 0xcb, 0xf6 });
        gbc.writeMem(0xf883, { 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd041, gbc.sp());
        EXPECT(0xa00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa008));
        EXPECT(0xf6, gbc.readMem(0xa009));
        EXPECT(0x44, gbc.readMem(0xf883));
        // CB F6 01E4
        gbc.setState(0x433, 0xc10b, 0x6810, 0xb6b9, 0x6061, 0xb525, 0x1, 0x1);
        gbc.writeMem(0x433, { 0xcb, 0xf6 });
        gbc.writeMem(0xb525, { 0x62 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc10b, gbc.sp());
        EXPECT(0x435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb525));
        // CB F6 01E8
        gbc.setState(0x6546, 0xb298, 0x9970, 0xad09, 0x6deb, 0x5171, 0x1, 0x1);
        gbc.writeMem(0x5171, { 0xdf });
        gbc.writeMem(0x6546, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0x6548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 01E9
        gbc.setState(0xc7ab, 0xe29d, 0xc800, 0x22a0, 0x811, 0xfff7, 0x0, 0x0);
        gbc.writeMem(0xc7ab, { 0xcb, 0xf6 });
        gbc.writeMem(0xfff7, { 0x2a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe29d, gbc.sp());
        EXPECT(0xc7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ab));
        EXPECT(0xf6, gbc.readMem(0xc7ac));
        EXPECT(0x6a, gbc.readMem(0xfff7));
        // CB F6 01ED
        gbc.setState(0x1807, 0x9e5, 0x4750, 0x59c, 0x55d0, 0xcec2, 0x0, 0x0);
        gbc.writeMem(0x1807, { 0xcb, 0xf6 });
        gbc.writeMem(0xcec2, { 0x20 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9e5, gbc.sp());
        EXPECT(0x1809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcec2));
        // CB F6 01EE
        gbc.setState(0x884, 0x85d7, 0xfae0, 0x7986, 0xae5c, 0xfc91, 0x1, 0x1);
        gbc.writeMem(0x884, { 0xcb, 0xf6 });
        gbc.writeMem(0xfc91, { 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x85d7, gbc.sp());
        EXPECT(0x886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xfc91));
        // CB F6 01EF
        gbc.setState(0x324c, 0x2079, 0x82f0, 0x86c, 0x97af, 0x3fe2, 0x0, 0x0);
        gbc.writeMem(0x324c, { 0xcb, 0xf6 });
        gbc.writeMem(0x3fe2, { 0x7e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2079, gbc.sp());
        EXPECT(0x324e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 01F0
        gbc.setState(0x1561, 0x5754, 0xce0, 0x4421, 0x1801, 0x276f, 0x1, 0x1);
        gbc.writeMem(0x1561, { 0xcb, 0xf6 });
        gbc.writeMem(0x276f, { 0x5c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5754, gbc.sp());
        EXPECT(0x1563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01F1
        gbc.setState(0xc326, 0x2384, 0x61b0, 0xe164, 0x23c5, 0xe956, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xcb, 0xf6 });
        gbc.writeMem(0xe956, { 0x83 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0xc328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc326));
        EXPECT(0xf6, gbc.readMem(0xc327));
        EXPECT(0xc3, gbc.readMem(0xe956));
        // CB F6 01F2
        gbc.setState(0xc140, 0xcbe4, 0xa8a0, 0xae7e, 0x143c, 0xa1bb, 0x0, 0x0);
        gbc.writeMem(0xa1bb, { 0x9 });
        gbc.writeMem(0xc140, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcbe4, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa1bb));
        EXPECT(0xcb, gbc.readMem(0xc140));
        EXPECT(0xf6, gbc.readMem(0xc141));
        // CB F6 01F4
        gbc.setState(0x5a62, 0x7059, 0x37e0, 0x8733, 0x4617, 0x116c, 0x1, 0x1);
        gbc.writeMem(0x116c, { 0xe7 });
        gbc.writeMem(0x5a62, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7059, gbc.sp());
        EXPECT(0x5a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01F5
        gbc.setState(0xa789, 0x1df7, 0x51d0, 0xda1f, 0xed36, 0xf595, 0x1, 0x1);
        gbc.writeMem(0xa789, { 0xcb, 0xf6 });
        gbc.writeMem(0xf595, { 0xf7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1df7, gbc.sp());
        EXPECT(0xa78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa789));
        EXPECT(0xf6, gbc.readMem(0xa78a));
        EXPECT(0xf7, gbc.readMem(0xf595));
        // CB F6 01F8
        gbc.setState(0x48d2, 0x6058, 0x77d0, 0x28e9, 0xb0ce, 0xce1a, 0x0, 0x1);
        gbc.writeMem(0x48d2, { 0xcb, 0xf6 });
        gbc.writeMem(0xce1a, { 0xf4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0x48d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xce1a));
        // CB F6 01F9
        gbc.setState(0x6b95, 0xc778, 0xfc40, 0x478b, 0x2f42, 0x77d5, 0x1, 0x1);
        gbc.writeMem(0x6b95, { 0xcb, 0xf6 });
        gbc.writeMem(0x77d5, { 0xd2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc778, gbc.sp());
        EXPECT(0x6b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 01FC
        gbc.setState(0x84c6, 0x80fa, 0x30a0, 0x53ab, 0xf04e, 0x72da, 0x1, 0x0);
        gbc.writeMem(0x72da, { 0xd8 });
        gbc.writeMem(0x84c6, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x80fa, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c6));
        EXPECT(0xf6, gbc.readMem(0x84c7));
        // CB F6 01FD
        gbc.setState(0x9d14, 0x4f0d, 0x880, 0x9f3a, 0x6906, 0x808d, 0x1, 0x0);
        gbc.writeMem(0x808d, { 0x3f });
        gbc.writeMem(0x9d14, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4f0d, gbc.sp());
        EXPECT(0x9d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x808d));
        EXPECT(0xcb, gbc.readMem(0x9d14));
        EXPECT(0xf6, gbc.readMem(0x9d15));
        // CB F6 01FE
        gbc.setState(0xaacd, 0x1fc4, 0x5b00, 0xf0bc, 0xcd9c, 0xaf3d, 0x0, 0x0);
        gbc.writeMem(0xaacd, { 0xcb, 0xf6 });
        gbc.writeMem(0xaf3d, { 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1fc4, gbc.sp());
        EXPECT(0xaacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaacd));
        EXPECT(0xf6, gbc.readMem(0xaace));
        EXPECT(0xf5, gbc.readMem(0xaf3d));
        // CB F6 01FF
        gbc.setState(0xa9c5, 0xa8cf, 0x6010, 0xf865, 0xcf9f, 0xa48c, 0x0, 0x1);
        gbc.writeMem(0xa48c, { 0x45 });
        gbc.writeMem(0xa9c5, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa8cf, gbc.sp());
        EXPECT(0xa9c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa48c));
        EXPECT(0xcb, gbc.readMem(0xa9c5));
        EXPECT(0xf6, gbc.readMem(0xa9c6));
        // CB F6 0200
        gbc.setState(0x6baf, 0x8745, 0xa030, 0xcbea, 0x8619, 0xb9aa, 0x1, 0x0);
        gbc.writeMem(0x6baf, { 0xcb, 0xf6 });
        gbc.writeMem(0xb9aa, { 0x44 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8745, gbc.sp());
        EXPECT(0x6bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb9aa));
        // CB F6 0206
        gbc.setState(0xc0f6, 0x3175, 0x9d50, 0x5d0a, 0x2a00, 0x4d5, 0x0, 0x1);
        gbc.writeMem(0x4d5, { 0xf3 });
        gbc.writeMem(0xc0f6, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3175, gbc.sp());
        EXPECT(0xc0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f6));
        EXPECT(0xf6, gbc.readMem(0xc0f7));
        // CB F6 0207
        gbc.setState(0xdcbd, 0x8d56, 0x8320, 0xc8aa, 0xd566, 0xcad9, 0x1, 0x0);
        gbc.writeMem(0xcad9, { 0xf8 });
        gbc.writeMem(0xdcbd, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8d56, gbc.sp());
        EXPECT(0xdcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcad9));
        EXPECT(0xcb, gbc.readMem(0xdcbd));
        EXPECT(0xf6, gbc.readMem(0xdcbe));
        // CB F6 0209
        gbc.setState(0x512, 0xfef0, 0x1b70, 0x128e, 0x4917, 0x532e, 0x1, 0x1);
        gbc.writeMem(0x512, { 0xcb, 0xf6 });
        gbc.writeMem(0x532e, { 0xd7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfef0, gbc.sp());
        EXPECT(0x514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 020A
        gbc.setState(0xc390, 0x995, 0x3eb0, 0xfdf9, 0xdf03, 0xebe2, 0x0, 0x1);
        gbc.writeMem(0xc390, { 0xcb, 0xf6 });
        gbc.writeMem(0xebe2, { 0x47 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x995, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc390));
        EXPECT(0xf6, gbc.readMem(0xc391));
        EXPECT(0x47, gbc.readMem(0xebe2));
        // CB F6 020C
        gbc.setState(0x2571, 0x65b2, 0xe9e0, 0x9c80, 0x9246, 0xb2eb, 0x1, 0x0);
        gbc.writeMem(0x2571, { 0xcb, 0xf6 });
        gbc.writeMem(0xb2eb, { 0xa9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x65b2, gbc.sp());
        EXPECT(0x2573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb2eb));
        // CB F6 020D
        gbc.setState(0xc335, 0x44b4, 0x2ba0, 0x7ab2, 0xad83, 0xac71, 0x0, 0x0);
        gbc.writeMem(0xac71, { 0x1f });
        gbc.writeMem(0xc335, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x44b4, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xac71));
        EXPECT(0xcb, gbc.readMem(0xc335));
        EXPECT(0xf6, gbc.readMem(0xc336));
        // CB F6 020E
        gbc.setState(0x173, 0xdcd4, 0x8290, 0xc156, 0x3170, 0x13cc, 0x1, 0x0);
        gbc.writeMem(0x173, { 0xcb, 0xf6 });
        gbc.writeMem(0x13cc, { 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdcd4, gbc.sp());
        EXPECT(0x175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0210
        gbc.setState(0x16ff, 0x6e4f, 0xbc80, 0x7de0, 0x1a5c, 0x3071, 0x1, 0x0);
        gbc.writeMem(0x16ff, { 0xcb, 0xf6 });
        gbc.writeMem(0x3071, { 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6e4f, gbc.sp());
        EXPECT(0x1701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0211
        gbc.setState(0xa141, 0xf018, 0x2e20, 0x49fa, 0x9a2f, 0x247e, 0x1, 0x0);
        gbc.writeMem(0x247e, { 0xfb });
        gbc.writeMem(0xa141, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf018, gbc.sp());
        EXPECT(0xa143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa141));
        EXPECT(0xf6, gbc.readMem(0xa142));
        // CB F6 0214
        gbc.setState(0xd126, 0x8ab4, 0x66f0, 0xad9, 0xedee, 0xbb5e, 0x1, 0x0);
        gbc.writeMem(0xbb5e, { 0x5d });
        gbc.writeMem(0xd126, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8ab4, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbb5e));
        EXPECT(0xcb, gbc.readMem(0xd126));
        EXPECT(0xf6, gbc.readMem(0xd127));
        // CB F6 0215
        gbc.setState(0x7220, 0xef7d, 0xbff0, 0x3f9d, 0x3457, 0x13e9, 0x0, 0x1);
        gbc.writeMem(0x13e9, { 0x6c });
        gbc.writeMem(0x7220, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xef7d, gbc.sp());
        EXPECT(0x7222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0216
        gbc.setState(0x31fe, 0x7f4c, 0x6dc0, 0x3fc, 0xb184, 0xb12c, 0x1, 0x1);
        gbc.writeMem(0x31fe, { 0xcb, 0xf6 });
        gbc.writeMem(0xb12c, { 0xd9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7f4c, gbc.sp());
        EXPECT(0x3200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb12c));
        // CB F6 0218
        gbc.setState(0x6e19, 0x1d, 0xa280, 0x642e, 0xaf32, 0x3e1a, 0x1, 0x1);
        gbc.writeMem(0x3e1a, { 0xf0 });
        gbc.writeMem(0x6e19, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1d, gbc.sp());
        EXPECT(0x6e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0219
        gbc.setState(0x6763, 0x8e88, 0x90e0, 0x7adc, 0xc7fa, 0x2b54, 0x1, 0x1);
        gbc.writeMem(0x2b54, { 0xce });
        gbc.writeMem(0x6763, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8e88, gbc.sp());
        EXPECT(0x6765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 021A
        gbc.setState(0x6d9e, 0x4aa1, 0xab20, 0x141b, 0x28ed, 0x8d7c, 0x1, 0x1);
        gbc.writeMem(0x6d9e, { 0xcb, 0xf6 });
        gbc.writeMem(0x8d7c, { 0x95 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4aa1, gbc.sp());
        EXPECT(0x6da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8d7c));
        // CB F6 021C
        gbc.setState(0xc86e, 0xb6dc, 0x6e80, 0xc5b6, 0xac83, 0x44b5, 0x1, 0x1);
        gbc.writeMem(0x44b5, { 0xf5 });
        gbc.writeMem(0xc86e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb6dc, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86e));
        EXPECT(0xf6, gbc.readMem(0xc86f));
        // CB F6 021D
        gbc.setState(0x4474, 0x4792, 0x1c60, 0x766d, 0x1c6e, 0xbe8f, 0x1, 0x1);
        gbc.writeMem(0x4474, { 0xcb, 0xf6 });
        gbc.writeMem(0xbe8f, { 0x19 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4792, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xbe8f));
        // CB F6 021E
        gbc.setState(0xb86, 0x27ee, 0xd9a0, 0xdb31, 0xe98d, 0xcf5c, 0x0, 0x1);
        gbc.writeMem(0xb86, { 0xcb, 0xf6 });
        gbc.writeMem(0xcf5c, { 0xf1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x27ee, gbc.sp());
        EXPECT(0xb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcf5c));
        // CB F6 021F
        gbc.setState(0x23fa, 0x98e7, 0xd710, 0xf873, 0xa49b, 0xb389, 0x0, 0x1);
        gbc.writeMem(0x23fa, { 0xcb, 0xf6 });
        gbc.writeMem(0xb389, { 0x5f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x98e7, gbc.sp());
        EXPECT(0x23fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb389));
        // CB F6 0221
        gbc.setState(0x4b4, 0x6dd7, 0xc8a0, 0x3d9f, 0xf0c0, 0xc74c, 0x1, 0x1);
        gbc.writeMem(0x4b4, { 0xcb, 0xf6 });
        gbc.writeMem(0xc74c, { 0x86 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6dd7, gbc.sp());
        EXPECT(0x4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc74c));
        // CB F6 0222
        gbc.setState(0x2b86, 0xcbfd, 0x4990, 0x4e19, 0xb952, 0x8156, 0x1, 0x0);
        gbc.writeMem(0x2b86, { 0xcb, 0xf6 });
        gbc.writeMem(0x8156, { 0x1e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcbfd, gbc.sp());
        EXPECT(0x2b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8156));
        // CB F6 0223
        gbc.setState(0x515b, 0x541c, 0xc720, 0xac7f, 0xc4e8, 0x7237, 0x1, 0x0);
        gbc.writeMem(0x515b, { 0xcb, 0xf6 });
        gbc.writeMem(0x7237, { 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x541c, gbc.sp());
        EXPECT(0x515d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0225
        gbc.setState(0x617d, 0x44d4, 0x3620, 0xb0d4, 0x3614, 0x945b, 0x0, 0x0);
        gbc.writeMem(0x617d, { 0xcb, 0xf6 });
        gbc.writeMem(0x945b, { 0xad });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x44d4, gbc.sp());
        EXPECT(0x617f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x945b));
        // CB F6 0228
        gbc.setState(0x9e2e, 0x1cc4, 0xd180, 0x6f38, 0xf79f, 0x59e6, 0x0, 0x1);
        gbc.writeMem(0x59e6, { 0xd7 });
        gbc.writeMem(0x9e2e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2e));
        EXPECT(0xf6, gbc.readMem(0x9e2f));
        // CB F6 0229
        gbc.setState(0xb076, 0xa60e, 0xcc40, 0xa39a, 0xdabb, 0xec03, 0x0, 0x1);
        gbc.writeMem(0xb076, { 0xcb, 0xf6 });
        gbc.writeMem(0xec03, { 0xc4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb076));
        EXPECT(0xf6, gbc.readMem(0xb077));
        EXPECT(0xc4, gbc.readMem(0xec03));
        // CB F6 022A
        gbc.setState(0xb5a1, 0x7714, 0xaea0, 0x3d40, 0x90fa, 0xbd92, 0x1, 0x0);
        gbc.writeMem(0xb5a1, { 0xcb, 0xf6 });
        gbc.writeMem(0xbd92, { 0xa4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7714, gbc.sp());
        EXPECT(0xb5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a1));
        EXPECT(0xf6, gbc.readMem(0xb5a2));
        EXPECT(0xe4, gbc.readMem(0xbd92));
        // CB F6 022B
        gbc.setState(0xbf1e, 0x177e, 0xc4f0, 0x7408, 0x6f51, 0xe0dd, 0x1, 0x1);
        gbc.writeMem(0xbf1e, { 0xcb, 0xf6 });
        gbc.writeMem(0xe0dd, { 0xed });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x177e, gbc.sp());
        EXPECT(0xbf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1e));
        EXPECT(0xf6, gbc.readMem(0xbf1f));
        EXPECT(0xed, gbc.readMem(0xe0dd));
        // CB F6 022C
        gbc.setState(0x7b34, 0x7c28, 0x7d50, 0xcc1c, 0x2b3f, 0x6ea2, 0x0, 0x0);
        gbc.writeMem(0x6ea2, { 0xeb });
        gbc.writeMem(0x7b34, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7c28, gbc.sp());
        EXPECT(0x7b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 022D
        gbc.setState(0x8c0a, 0xbb9a, 0xa8b0, 0x4672, 0xaf89, 0xd835, 0x0, 0x0);
        gbc.writeMem(0x8c0a, { 0xcb, 0xf6 });
        gbc.writeMem(0xd835, { 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbb9a, gbc.sp());
        EXPECT(0x8c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0a));
        EXPECT(0xf6, gbc.readMem(0x8c0b));
        EXPECT(0xea, gbc.readMem(0xd835));
        // CB F6 022E
        gbc.setState(0x1ef4, 0x4c72, 0x5ba0, 0x920a, 0x45ea, 0xd15f, 0x0, 0x0);
        gbc.writeMem(0x1ef4, { 0xcb, 0xf6 });
        gbc.writeMem(0xd15f, { 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4c72, gbc.sp());
        EXPECT(0x1ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd15f));
        // CB F6 022F
        gbc.setState(0x10e3, 0x13cd, 0x200, 0xc689, 0x4449, 0xe225, 0x1, 0x0);
        gbc.writeMem(0x10e3, { 0xcb, 0xf6 });
        gbc.writeMem(0xe225, { 0x1e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x13cd, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe225));
        // CB F6 0230
        gbc.setState(0xcbb9, 0xd2fc, 0x9170, 0x1c37, 0xe202, 0x8d2a, 0x1, 0x1);
        gbc.writeMem(0x8d2a, { 0x58 });
        gbc.writeMem(0xcbb9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd2fc, gbc.sp());
        EXPECT(0xcbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8d2a));
        EXPECT(0xcb, gbc.readMem(0xcbb9));
        EXPECT(0xf6, gbc.readMem(0xcbba));
        // CB F6 0231
        gbc.setState(0x3758, 0x4d28, 0xedc0, 0x5b71, 0xb7dc, 0x9f0a, 0x0, 0x1);
        gbc.writeMem(0x3758, { 0xcb, 0xf6 });
        gbc.writeMem(0x9f0a, { 0xd5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4d28, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9f0a));
        // CB F6 0232
        gbc.setState(0x16ad, 0x6732, 0x7ba0, 0xf060, 0x2459, 0x30a8, 0x1, 0x1);
        gbc.writeMem(0x16ad, { 0xcb, 0xf6 });
        gbc.writeMem(0x30a8, { 0xed });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6732, gbc.sp());
        EXPECT(0x16af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0233
        gbc.setState(0x864c, 0x347f, 0xc5d0, 0x81d1, 0xd92f, 0xb150, 0x1, 0x0);
        gbc.writeMem(0x864c, { 0xcb, 0xf6 });
        gbc.writeMem(0xb150, { 0xbe });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x347f, gbc.sp());
        EXPECT(0x864e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864c));
        EXPECT(0xf6, gbc.readMem(0x864d));
        EXPECT(0xfe, gbc.readMem(0xb150));
        // CB F6 0235
        gbc.setState(0xb006, 0xe529, 0xf430, 0xb2cf, 0xc4ce, 0xb8ab, 0x0, 0x0);
        gbc.writeMem(0xb006, { 0xcb, 0xf6 });
        gbc.writeMem(0xb8ab, { 0xef });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe529, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb006));
        EXPECT(0xf6, gbc.readMem(0xb007));
        EXPECT(0xef, gbc.readMem(0xb8ab));
        // CB F6 0236
        gbc.setState(0xd381, 0x41e8, 0x5180, 0x2ac3, 0x9128, 0x83b7, 0x0, 0x0);
        gbc.writeMem(0x83b7, { 0x4d });
        gbc.writeMem(0xd381, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x41e8, gbc.sp());
        EXPECT(0xd383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x83b7));
        EXPECT(0xcb, gbc.readMem(0xd381));
        EXPECT(0xf6, gbc.readMem(0xd382));
        // CB F6 0237
        gbc.setState(0x82c6, 0x45df, 0x8b60, 0x9972, 0x5787, 0x6b39, 0x1, 0x0);
        gbc.writeMem(0x6b39, { 0x5e });
        gbc.writeMem(0x82c6, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x45df, gbc.sp());
        EXPECT(0x82c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c6));
        EXPECT(0xf6, gbc.readMem(0x82c7));
        // CB F6 0238
        gbc.setState(0xcd14, 0xef9c, 0xb220, 0xdf3a, 0xbc01, 0x9e3c, 0x1, 0x0);
        gbc.writeMem(0x9e3c, { 0x84 });
        gbc.writeMem(0xcd14, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xef9c, gbc.sp());
        EXPECT(0xcd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9e3c));
        EXPECT(0xcb, gbc.readMem(0xcd14));
        EXPECT(0xf6, gbc.readMem(0xcd15));
        // CB F6 0239
        gbc.setState(0x1965, 0xbea5, 0x69a0, 0xa128, 0x5e05, 0xe156, 0x0, 0x0);
        gbc.writeMem(0x1965, { 0xcb, 0xf6 });
        gbc.writeMem(0xe156, { 0x98 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbea5, gbc.sp());
        EXPECT(0x1967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xe156));
        // CB F6 023B
        gbc.setState(0xe56a, 0x1271, 0x5040, 0xa748, 0x67db, 0xedcf, 0x1, 0x0);
        gbc.writeMem(0xe56a, { 0xcb, 0xf6 });
        gbc.writeMem(0xedcf, { 0xbc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0xe56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56a));
        EXPECT(0xf6, gbc.readMem(0xe56b));
        EXPECT(0xfc, gbc.readMem(0xedcf));
        // CB F6 023C
        gbc.setState(0xc547, 0x137d, 0xb370, 0xb259, 0xd162, 0x2322, 0x0, 0x1);
        gbc.writeMem(0x2322, { 0x78 });
        gbc.writeMem(0xc547, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x137d, gbc.sp());
        EXPECT(0xc549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc547));
        EXPECT(0xf6, gbc.readMem(0xc548));
        // CB F6 023D
        gbc.setState(0x9cde, 0x715d, 0xa110, 0x600f, 0x7e87, 0xcbec, 0x0, 0x1);
        gbc.writeMem(0x9cde, { 0xcb, 0xf6 });
        gbc.writeMem(0xcbec, { 0x54 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x715d, gbc.sp());
        EXPECT(0x9ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cde));
        EXPECT(0xf6, gbc.readMem(0x9cdf));
        EXPECT(0x54, gbc.readMem(0xcbec));
        // CB F6 023F
        gbc.setState(0x709, 0xc9cf, 0x3230, 0x9a96, 0x916c, 0x986f, 0x0, 0x1);
        gbc.writeMem(0x709, { 0xcb, 0xf6 });
        gbc.writeMem(0x986f, { 0x50 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0x70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x986f));
        // CB F6 0240
        gbc.setState(0x1149, 0xdfa3, 0xfc50, 0x4d5f, 0x3a22, 0x8cd5, 0x1, 0x1);
        gbc.writeMem(0x1149, { 0xcb, 0xf6 });
        gbc.writeMem(0x8cd5, { 0x2a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdfa3, gbc.sp());
        EXPECT(0x114b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8cd5));
        // CB F6 0241
        gbc.setState(0xb43d, 0xf969, 0x56e0, 0xd321, 0xca8a, 0x55f4, 0x0, 0x1);
        gbc.writeMem(0x55f4, { 0xf2 });
        gbc.writeMem(0xb43d, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf969, gbc.sp());
        EXPECT(0xb43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43d));
        EXPECT(0xf6, gbc.readMem(0xb43e));
        // CB F6 0243
        gbc.setState(0x6f7c, 0xc10e, 0xfe0, 0x83e2, 0xc506, 0xfb74, 0x1, 0x0);
        gbc.writeMem(0x6f7c, { 0xcb, 0xf6 });
        gbc.writeMem(0xfb74, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0x6f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xfb74));
        // CB F6 0244
        gbc.setState(0x5342, 0xf0f0, 0x3340, 0xb823, 0x1068, 0x3374, 0x1, 0x0);
        gbc.writeMem(0x3374, { 0x53 });
        gbc.writeMem(0x5342, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0x5344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0246
        gbc.setState(0x331a, 0xa9bb, 0xaf10, 0xab37, 0xa56f, 0x8721, 0x0, 0x0);
        gbc.writeMem(0x331a, { 0xcb, 0xf6 });
        gbc.writeMem(0x8721, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa9bb, gbc.sp());
        EXPECT(0x331c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8721));
        // CB F6 0247
        gbc.setState(0xad7d, 0x88c5, 0x7c0, 0x1ba5, 0xb0e2, 0xe557, 0x1, 0x0);
        gbc.writeMem(0xad7d, { 0xcb, 0xf6 });
        gbc.writeMem(0xe557, { 0x83 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x88c5, gbc.sp());
        EXPECT(0xad7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7d));
        EXPECT(0xf6, gbc.readMem(0xad7e));
        EXPECT(0xc3, gbc.readMem(0xe557));
        // CB F6 0248
        gbc.setState(0x2247, 0x1eed, 0x6f10, 0x6ff5, 0x2fd9, 0xf8d0, 0x0, 0x0);
        gbc.writeMem(0x2247, { 0xcb, 0xf6 });
        gbc.writeMem(0xf8d0, { 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1eed, gbc.sp());
        EXPECT(0x2249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xf8d0));
        // CB F6 024A
        gbc.setState(0x5807, 0x47f, 0xfa00, 0x1f8, 0xe5f2, 0x9a31, 0x1, 0x0);
        gbc.writeMem(0x5807, { 0xcb, 0xf6 });
        gbc.writeMem(0x9a31, { 0xfe });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x47f, gbc.sp());
        EXPECT(0x5809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9a31));
        // CB F6 024D
        gbc.setState(0x24e, 0x3a50, 0xae30, 0x3906, 0x3c23, 0xb15a, 0x0, 0x0);
        gbc.writeMem(0x24e, { 0xcb, 0xf6 });
        gbc.writeMem(0xb15a, { 0xcd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3a50, gbc.sp());
        EXPECT(0x250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb15a));
        // CB F6 024E
        gbc.setState(0x9fa2, 0xef77, 0x9e00, 0xd7, 0x3e08, 0x6346, 0x0, 0x0);
        gbc.writeMem(0x6346, { 0x79 });
        gbc.writeMem(0x9fa2, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xef77, gbc.sp());
        EXPECT(0x9fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa2));
        EXPECT(0xf6, gbc.readMem(0x9fa3));
        // CB F6 024F
        gbc.setState(0xe36b, 0x9a3c, 0x37f0, 0xbc3a, 0x27ed, 0xba15, 0x1, 0x0);
        gbc.writeMem(0xba15, { 0x58 });
        gbc.writeMem(0xe36b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9a3c, gbc.sp());
        EXPECT(0xe36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xba15));
        EXPECT(0xcb, gbc.readMem(0xe36b));
        EXPECT(0xf6, gbc.readMem(0xe36c));
        // CB F6 0250
        gbc.setState(0xc587, 0x1083, 0x920, 0x3a23, 0xf100, 0xe02f, 0x0, 0x1);
        gbc.writeMem(0xc587, { 0xcb, 0xf6 });
        gbc.writeMem(0xe02f, { 0xd6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1083, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc587));
        EXPECT(0xf6, gbc.readMem(0xc588));
        EXPECT(0xd6, gbc.readMem(0xe02f));
        // CB F6 0252
        gbc.setState(0xd872, 0xf1bd, 0x39f0, 0xbfab, 0xcb1f, 0xc6b1, 0x0, 0x0);
        gbc.writeMem(0xc6b1, { 0xff });
        gbc.writeMem(0xd872, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0xd874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc6b1));
        EXPECT(0xcb, gbc.readMem(0xd872));
        EXPECT(0xf6, gbc.readMem(0xd873));
        // CB F6 0254
        gbc.setState(0x41b6, 0x9c57, 0xa2a0, 0x9027, 0x95be, 0x46c6, 0x0, 0x0);
        gbc.writeMem(0x41b6, { 0xcb, 0xf6 });
        gbc.writeMem(0x46c6, { 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9c57, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0255
        gbc.setState(0x614d, 0x9a14, 0xbc60, 0x9224, 0x3950, 0xc6be, 0x1, 0x1);
        gbc.writeMem(0x614d, { 0xcb, 0xf6 });
        gbc.writeMem(0xc6be, { 0x11 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x614f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc6be));
        // CB F6 0256
        gbc.setState(0xba3b, 0x64a5, 0xb470, 0xf669, 0x459b, 0xafbc, 0x0, 0x0);
        gbc.writeMem(0xafbc, { 0xa6 });
        gbc.writeMem(0xba3b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x64a5, gbc.sp());
        EXPECT(0xba3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xafbc));
        EXPECT(0xcb, gbc.readMem(0xba3b));
        EXPECT(0xf6, gbc.readMem(0xba3c));
        // CB F6 0257
        gbc.setState(0x555b, 0x4531, 0x6a80, 0xffe0, 0xb910, 0x97ad, 0x1, 0x0);
        gbc.writeMem(0x555b, { 0xcb, 0xf6 });
        gbc.writeMem(0x97ad, { 0x4e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4531, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x97ad));
        // CB F6 0258
        gbc.setState(0x3703, 0x5e37, 0x64a0, 0xca7, 0x558d, 0xa289, 0x1, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0xf6 });
        gbc.writeMem(0xa289, { 0xf5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5e37, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa289));
        // CB F6 0259
        gbc.setState(0x34d8, 0x9dbc, 0x98b0, 0xf080, 0xc1f9, 0xe7f8, 0x1, 0x1);
        gbc.writeMem(0x34d8, { 0xcb, 0xf6 });
        gbc.writeMem(0xe7f8, { 0x75 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9dbc, gbc.sp());
        EXPECT(0x34da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xe7f8));
        // CB F6 025A
        gbc.setState(0x137b, 0x82d0, 0xab20, 0x6147, 0xa788, 0xe283, 0x1, 0x0);
        gbc.writeMem(0x137b, { 0xcb, 0xf6 });
        gbc.writeMem(0xe283, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x82d0, gbc.sp());
        EXPECT(0x137d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe283));
        // CB F6 025C
        gbc.setState(0x12d7, 0xbe4f, 0xcc20, 0xba16, 0x72c8, 0xcdfb, 0x0, 0x1);
        gbc.writeMem(0x12d7, { 0xcb, 0xf6 });
        gbc.writeMem(0xcdfb, { 0x5a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbe4f, gbc.sp());
        EXPECT(0x12d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xcdfb));
        // CB F6 025D
        gbc.setState(0x51b1, 0x801f, 0x1080, 0x13c7, 0x9fa1, 0xa416, 0x0, 0x0);
        gbc.writeMem(0x51b1, { 0xcb, 0xf6 });
        gbc.writeMem(0xa416, { 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x801f, gbc.sp());
        EXPECT(0x51b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xa416));
        // CB F6 0260
        gbc.setState(0x9664, 0x76bf, 0x18a0, 0xf7f2, 0x2b69, 0x87b2, 0x1, 0x1);
        gbc.writeMem(0x87b2, { 0xc5 });
        gbc.writeMem(0x9664, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x76bf, gbc.sp());
        EXPECT(0x9666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x87b2));
        EXPECT(0xcb, gbc.readMem(0x9664));
        EXPECT(0xf6, gbc.readMem(0x9665));
        // CB F6 0262
        gbc.setState(0xaaff, 0x3011, 0x9f00, 0x9c38, 0x8da2, 0xfce, 0x1, 0x1);
        gbc.writeMem(0xfce, { 0xfc });
        gbc.writeMem(0xaaff, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3011, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaff));
        EXPECT(0xf6, gbc.readMem(0xab00));
        // CB F6 0263
        gbc.setState(0x295, 0x661f, 0xb0f0, 0x97c0, 0x72c6, 0xd819, 0x0, 0x1);
        gbc.writeMem(0x295, { 0xcb, 0xf6 });
        gbc.writeMem(0xd819, { 0x33 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x661f, gbc.sp());
        EXPECT(0x297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd819));
        // CB F6 0264
        gbc.setState(0xbc11, 0xbe99, 0x9b0, 0x761c, 0x1c23, 0xa9ed, 0x0, 0x0);
        gbc.writeMem(0xa9ed, { 0xa3 });
        gbc.writeMem(0xbc11, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbe99, gbc.sp());
        EXPECT(0xbc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xa9ed));
        EXPECT(0xcb, gbc.readMem(0xbc11));
        EXPECT(0xf6, gbc.readMem(0xbc12));
        // CB F6 0265
        gbc.setState(0x7d67, 0x3504, 0x1fc0, 0xe610, 0x39bf, 0x5178, 0x0, 0x1);
        gbc.writeMem(0x5178, { 0x50 });
        gbc.writeMem(0x7d67, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3504, gbc.sp());
        EXPECT(0x7d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0266
        gbc.setState(0x5279, 0xcd, 0xf990, 0xc427, 0xa08a, 0x61c7, 0x0, 0x0);
        gbc.writeMem(0x5279, { 0xcb, 0xf6 });
        gbc.writeMem(0x61c7, { 0x55 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcd, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0268
        gbc.setState(0xa066, 0xac7a, 0xe9e0, 0xa7ac, 0x792, 0xe81d, 0x1, 0x1);
        gbc.writeMem(0xa066, { 0xcb, 0xf6 });
        gbc.writeMem(0xe81d, { 0xaa });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xac7a, gbc.sp());
        EXPECT(0xa068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa066));
        EXPECT(0xf6, gbc.readMem(0xa067));
        EXPECT(0xea, gbc.readMem(0xe81d));
        // CB F6 026B
        gbc.setState(0x6815, 0x3943, 0xaa80, 0xbf61, 0xa682, 0xf44, 0x1, 0x1);
        gbc.writeMem(0xf44, { 0xd8 });
        gbc.writeMem(0x6815, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3943, gbc.sp());
        EXPECT(0x6817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 026D
        gbc.setState(0x831f, 0xcccc, 0x10e0, 0x5165, 0x227f, 0xf322, 0x0, 0x1);
        gbc.writeMem(0x831f, { 0xcb, 0xf6 });
        gbc.writeMem(0xf322, { 0x4c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcccc, gbc.sp());
        EXPECT(0x8321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831f));
        EXPECT(0xf6, gbc.readMem(0x8320));
        EXPECT(0x4c, gbc.readMem(0xf322));
        // CB F6 026E
        gbc.setState(0x2db0, 0x5ba7, 0xe580, 0xdf75, 0x9b24, 0xd27b, 0x1, 0x0);
        gbc.writeMem(0x2db0, { 0xcb, 0xf6 });
        gbc.writeMem(0xd27b, { 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5ba7, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd27b));
        // CB F6 026F
        gbc.setState(0xbeb2, 0xafb2, 0xc50, 0xf102, 0xb87b, 0xe67d, 0x1, 0x0);
        gbc.writeMem(0xbeb2, { 0xcb, 0xf6 });
        gbc.writeMem(0xe67d, { 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb2));
        EXPECT(0xf6, gbc.readMem(0xbeb3));
        EXPECT(0x67, gbc.readMem(0xe67d));
        // CB F6 0271
        gbc.setState(0xeb94, 0xdfa1, 0xa370, 0x4e55, 0x648d, 0x58c6, 0x1, 0x0);
        gbc.writeMem(0x58c6, { 0x6d });
        gbc.writeMem(0xeb94, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdfa1, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb94));
        EXPECT(0xf6, gbc.readMem(0xeb95));
        // CB F6 0274
        gbc.setState(0x3473, 0xa5ca, 0x27f0, 0x3a98, 0xe6a6, 0xdd7e, 0x0, 0x1);
        gbc.writeMem(0x3473, { 0xcb, 0xf6 });
        gbc.writeMem(0xdd7e, { 0xb1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa5ca, gbc.sp());
        EXPECT(0x3475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdd7e));
        // CB F6 0277
        gbc.setState(0xd619, 0x47b4, 0x14f0, 0xc66e, 0x596, 0x68d3, 0x0, 0x1);
        gbc.writeMem(0x68d3, { 0x55 });
        gbc.writeMem(0xd619, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0xd61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd619));
        EXPECT(0xf6, gbc.readMem(0xd61a));
        // CB F6 0278
        gbc.setState(0x8f71, 0x78f6, 0xff30, 0xb6c, 0xf19a, 0x2803, 0x0, 0x0);
        gbc.writeMem(0x2803, { 0x5f });
        gbc.writeMem(0x8f71, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x78f6, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0xf6, gbc.readMem(0x8f72));
        // CB F6 027A
        gbc.setState(0x19e, 0x44b6, 0xc0b0, 0x69f6, 0xa37a, 0x95b, 0x1, 0x1);
        gbc.writeMem(0x19e, { 0xcb, 0xf6 });
        gbc.writeMem(0x95b, { 0x59 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x44b6, gbc.sp());
        EXPECT(0x1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 027C
        gbc.setState(0x849c, 0x2e68, 0x3c0, 0xfe94, 0xead8, 0x5724, 0x1, 0x0);
        gbc.writeMem(0x5724, { 0x7d });
        gbc.writeMem(0x849c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2e68, gbc.sp());
        EXPECT(0x849e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849c));
        EXPECT(0xf6, gbc.readMem(0x849d));
        // CB F6 027D
        gbc.setState(0x7b21, 0xc854, 0xa370, 0xbf7b, 0x23bd, 0x801f, 0x0, 0x0);
        gbc.writeMem(0x7b21, { 0xcb, 0xf6 });
        gbc.writeMem(0x801f, { 0x44 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc854, gbc.sp());
        EXPECT(0x7b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x801f));
        // CB F6 027E
        gbc.setState(0xa769, 0xc0c3, 0x1160, 0xfa05, 0x6ae3, 0xdd3c, 0x0, 0x1);
        gbc.writeMem(0xa769, { 0xcb, 0xf6 });
        gbc.writeMem(0xdd3c, { 0xd1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc0c3, gbc.sp());
        EXPECT(0xa76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa769));
        EXPECT(0xf6, gbc.readMem(0xa76a));
        EXPECT(0xd1, gbc.readMem(0xdd3c));
        // CB F6 027F
        gbc.setState(0xe789, 0xde47, 0xa8f0, 0xc037, 0xe8d7, 0x2447, 0x1, 0x0);
        gbc.writeMem(0x2447, { 0xf5 });
        gbc.writeMem(0xe789, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xde47, gbc.sp());
        EXPECT(0xe78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe789));
        EXPECT(0xf6, gbc.readMem(0xe78a));
        // CB F6 0280
        gbc.setState(0xa312, 0xe826, 0xd130, 0x7de8, 0x1faa, 0xdd1e, 0x1, 0x0);
        gbc.writeMem(0xa312, { 0xcb, 0xf6 });
        gbc.writeMem(0xdd1e, { 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe826, gbc.sp());
        EXPECT(0xa314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa312));
        EXPECT(0xf6, gbc.readMem(0xa313));
        EXPECT(0x4b, gbc.readMem(0xdd1e));
        // CB F6 0281
        gbc.setState(0xabf7, 0x95aa, 0xac90, 0x7545, 0x87c0, 0x69f9, 0x1, 0x0);
        gbc.writeMem(0x69f9, { 0xc0 });
        gbc.writeMem(0xabf7, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x95aa, gbc.sp());
        EXPECT(0xabf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf7));
        EXPECT(0xf6, gbc.readMem(0xabf8));
        // CB F6 0284
        gbc.setState(0x35bc, 0xba72, 0xc000, 0x4c80, 0x419d, 0x9c5e, 0x0, 0x0);
        gbc.writeMem(0x35bc, { 0xcb, 0xf6 });
        gbc.writeMem(0x9c5e, { 0xeb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xba72, gbc.sp());
        EXPECT(0x35be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9c5e));
        // CB F6 0285
        gbc.setState(0x308a, 0xde3, 0x8f80, 0xcbe8, 0xf426, 0x2c93, 0x1, 0x0);
        gbc.writeMem(0x2c93, { 0xf0 });
        gbc.writeMem(0x308a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xde3, gbc.sp());
        EXPECT(0x308c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0286
        gbc.setState(0x6fd8, 0x9db9, 0xeca0, 0x8442, 0x9d9d, 0x2d10, 0x0, 0x1);
        gbc.writeMem(0x2d10, { 0xf0 });
        gbc.writeMem(0x6fd8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9db9, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0288
        gbc.setState(0xcbb2, 0x527c, 0x72a0, 0xc769, 0x7e0d, 0xe14a, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0xcb, 0xf6 });
        gbc.writeMem(0xe14a, { 0x1e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x527c, gbc.sp());
        EXPECT(0xcbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb2));
        EXPECT(0xf6, gbc.readMem(0xcbb3));
        EXPECT(0x5e, gbc.readMem(0xe14a));
        // CB F6 028A
        gbc.setState(0x3094, 0xe269, 0x20, 0xc1ee, 0x5006, 0x82d5, 0x1, 0x0);
        gbc.writeMem(0x3094, { 0xcb, 0xf6 });
        gbc.writeMem(0x82d5, { 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe269, gbc.sp());
        EXPECT(0x3096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x82d5));
        // CB F6 028B
        gbc.setState(0x7cbe, 0x9c30, 0x1350, 0xca69, 0xccb9, 0x63ca, 0x1, 0x1);
        gbc.writeMem(0x63ca, { 0xf8 });
        gbc.writeMem(0x7cbe, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9c30, gbc.sp());
        EXPECT(0x7cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 028C
        gbc.setState(0xb80e, 0x47df, 0x13b0, 0xdabe, 0xb2d, 0x8c1e, 0x1, 0x0);
        gbc.writeMem(0x8c1e, { 0x61 });
        gbc.writeMem(0xb80e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x47df, gbc.sp());
        EXPECT(0xb810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8c1e));
        EXPECT(0xcb, gbc.readMem(0xb80e));
        EXPECT(0xf6, gbc.readMem(0xb80f));
        // CB F6 028E
        gbc.setState(0xde4f, 0x9033, 0x4400, 0x8ed0, 0x361d, 0xe3f7, 0x1, 0x1);
        gbc.writeMem(0xde4f, { 0xcb, 0xf6 });
        gbc.writeMem(0xe3f7, { 0x20 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9033, gbc.sp());
        EXPECT(0xde51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4f));
        EXPECT(0xf6, gbc.readMem(0xde50));
        EXPECT(0x60, gbc.readMem(0xe3f7));
        // CB F6 028F
        gbc.setState(0x9d8f, 0x7f1a, 0xb470, 0x912, 0xb950, 0xa969, 0x0, 0x1);
        gbc.writeMem(0x9d8f, { 0xcb, 0xf6 });
        gbc.writeMem(0xa969, { 0x50 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7f1a, gbc.sp());
        EXPECT(0x9d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8f));
        EXPECT(0xf6, gbc.readMem(0x9d90));
        EXPECT(0x50, gbc.readMem(0xa969));
        // CB F6 0290
        gbc.setState(0xac49, 0xc5b9, 0xaa00, 0x9ac9, 0x9fc6, 0xd485, 0x1, 0x0);
        gbc.writeMem(0xac49, { 0xcb, 0xf6 });
        gbc.writeMem(0xd485, { 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc5b9, gbc.sp());
        EXPECT(0xac4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac49));
        EXPECT(0xf6, gbc.readMem(0xac4a));
        EXPECT(0xc9, gbc.readMem(0xd485));
        // CB F6 0292
        gbc.setState(0x8085, 0x9f42, 0x7360, 0x59ff, 0x3cc4, 0x8f98, 0x0, 0x1);
        gbc.writeMem(0x8085, { 0xcb, 0xf6 });
        gbc.writeMem(0x8f98, { 0xba });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9f42, gbc.sp());
        EXPECT(0x8087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8085));
        EXPECT(0xf6, gbc.readMem(0x8086));
        EXPECT(0xfa, gbc.readMem(0x8f98));
        // CB F6 0294
        gbc.setState(0x93db, 0x962e, 0xda10, 0xe45e, 0x3419, 0xdacf, 0x0, 0x1);
        gbc.writeMem(0x93db, { 0xcb, 0xf6 });
        gbc.writeMem(0xdacf, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x962e, gbc.sp());
        EXPECT(0x93dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93db));
        EXPECT(0xf6, gbc.readMem(0x93dc));
        EXPECT(0x7c, gbc.readMem(0xdacf));
        // CB F6 0297
        gbc.setState(0x517a, 0x6ff4, 0xa7a0, 0xa8f, 0xbce1, 0xfbe7, 0x1, 0x1);
        gbc.writeMem(0x517a, { 0xcb, 0xf6 });
        gbc.writeMem(0xfbe7, { 0xa5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6ff4, gbc.sp());
        EXPECT(0x517c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xfbe7));
        // CB F6 0298
        gbc.setState(0x9d20, 0xdf6d, 0x9a50, 0xb1d1, 0x76fd, 0xdb46, 0x0, 0x1);
        gbc.writeMem(0x9d20, { 0xcb, 0xf6 });
        gbc.writeMem(0xdb46, { 0x89 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdf6d, gbc.sp());
        EXPECT(0x9d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d20));
        EXPECT(0xf6, gbc.readMem(0x9d21));
        EXPECT(0xc9, gbc.readMem(0xdb46));
        // CB F6 0299
        gbc.setState(0xc155, 0x6594, 0xe670, 0x487c, 0x9a84, 0xae33, 0x1, 0x1);
        gbc.writeMem(0xae33, { 0x13 });
        gbc.writeMem(0xc155, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6594, gbc.sp());
        EXPECT(0xc157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xae33));
        EXPECT(0xcb, gbc.readMem(0xc155));
        EXPECT(0xf6, gbc.readMem(0xc156));
        // CB F6 029A
        gbc.setState(0x5856, 0x2ef7, 0xff40, 0xc24, 0x5e0d, 0xd338, 0x0, 0x0);
        gbc.writeMem(0x5856, { 0xcb, 0xf6 });
        gbc.writeMem(0xd338, { 0x20 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2ef7, gbc.sp());
        EXPECT(0x5858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xd338));
        // CB F6 029B
        gbc.setState(0x5596, 0xbf9c, 0x1490, 0x8423, 0x6d0d, 0xf494, 0x0, 0x0);
        gbc.writeMem(0x5596, { 0xcb, 0xf6 });
        gbc.writeMem(0xf494, { 0x81 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbf9c, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xf494));
        // CB F6 029C
        gbc.setState(0x69cf, 0x23, 0x66b0, 0xefaa, 0x5004, 0xbdaf, 0x0, 0x0);
        gbc.writeMem(0x69cf, { 0xcb, 0xf6 });
        gbc.writeMem(0xbdaf, { 0xda });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x23, gbc.sp());
        EXPECT(0x69d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbdaf));
        // CB F6 029D
        gbc.setState(0x8400, 0xcff5, 0xd10, 0x86c1, 0xcad3, 0xe1c7, 0x1, 0x0);
        gbc.writeMem(0x8400, { 0xcb, 0xf6 });
        gbc.writeMem(0xe1c7, { 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcff5, gbc.sp());
        EXPECT(0x8402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8400));
        EXPECT(0xf6, gbc.readMem(0x8401));
        EXPECT(0x6d, gbc.readMem(0xe1c7));
        // CB F6 029E
        gbc.setState(0xb616, 0x3cce, 0x5f80, 0x8022, 0x44b6, 0xa2b3, 0x0, 0x1);
        gbc.writeMem(0xa2b3, { 0xbb });
        gbc.writeMem(0xb616, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3cce, gbc.sp());
        EXPECT(0xb618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xa2b3));
        EXPECT(0xcb, gbc.readMem(0xb616));
        EXPECT(0xf6, gbc.readMem(0xb617));
        // CB F6 02A1
        gbc.setState(0x4ca0, 0x836f, 0xd4d0, 0x990, 0x1f3a, 0x10ea, 0x0, 0x0);
        gbc.writeMem(0x10ea, { 0xdc });
        gbc.writeMem(0x4ca0, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0x4ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 02A3
        gbc.setState(0x3cbd, 0x109a, 0xef00, 0xd7c2, 0xc0fa, 0x136c, 0x1, 0x0);
        gbc.writeMem(0x136c, { 0xce });
        gbc.writeMem(0x3cbd, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x109a, gbc.sp());
        EXPECT(0x3cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02A5
        gbc.setState(0x39af, 0x1f44, 0x7560, 0x5cc, 0xdc99, 0xa24d, 0x0, 0x0);
        gbc.writeMem(0x39af, { 0xcb, 0xf6 });
        gbc.writeMem(0xa24d, { 0x3a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1f44, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa24d));
        // CB F6 02A6
        gbc.setState(0x14cb, 0x3667, 0xfcf0, 0x252c, 0xaeee, 0x7776, 0x0, 0x0);
        gbc.writeMem(0x14cb, { 0xcb, 0xf6 });
        gbc.writeMem(0x7776, { 0x7e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3667, gbc.sp());
        EXPECT(0x14cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 02A7
        gbc.setState(0x7166, 0x8b0, 0x9640, 0x8856, 0x6489, 0xde57, 0x0, 0x0);
        gbc.writeMem(0x7166, { 0xcb, 0xf6 });
        gbc.writeMem(0xde57, { 0xa1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xde57));
        // CB F6 02A9
        gbc.setState(0x709e, 0xdf73, 0xd130, 0xadb3, 0x6c92, 0x14c1, 0x0, 0x1);
        gbc.writeMem(0x14c1, { 0xd8 });
        gbc.writeMem(0x709e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdf73, gbc.sp());
        EXPECT(0x70a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 02AA
        gbc.setState(0x54ac, 0x84cb, 0xefe0, 0xf895, 0x3988, 0x176e, 0x1, 0x0);
        gbc.writeMem(0x176e, { 0x52 });
        gbc.writeMem(0x54ac, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0x54ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02AB
        gbc.setState(0xbb1, 0x196b, 0xe1d0, 0x4be8, 0xf6b0, 0xe1ef, 0x0, 0x1);
        gbc.writeMem(0xbb1, { 0xcb, 0xf6 });
        gbc.writeMem(0xe1ef, { 0xb0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0xbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe1ef));
        // CB F6 02AE
        gbc.setState(0x9ae4, 0xa11f, 0x7150, 0x2433, 0xacfb, 0x3f68, 0x0, 0x1);
        gbc.writeMem(0x3f68, { 0x5a });
        gbc.writeMem(0x9ae4, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa11f, gbc.sp());
        EXPECT(0x9ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae4));
        EXPECT(0xf6, gbc.readMem(0x9ae5));
        // CB F6 02AF
        gbc.setState(0x8bfc, 0x7ee7, 0x37c0, 0xa3bc, 0x4327, 0x1ea9, 0x0, 0x0);
        gbc.writeMem(0x1ea9, { 0xec });
        gbc.writeMem(0x8bfc, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7ee7, gbc.sp());
        EXPECT(0x8bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfc));
        EXPECT(0xf6, gbc.readMem(0x8bfd));
        // CB F6 02B0
        gbc.setState(0xd7f4, 0x4859, 0x3250, 0x4c2d, 0x11b4, 0xe56a, 0x1, 0x0);
        gbc.writeMem(0xd7f4, { 0xcb, 0xf6 });
        gbc.writeMem(0xe56a, { 0x72 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4859, gbc.sp());
        EXPECT(0xd7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f4));
        EXPECT(0xf6, gbc.readMem(0xd7f5));
        EXPECT(0x72, gbc.readMem(0xe56a));
        // CB F6 02B1
        gbc.setState(0xbe3a, 0x69c8, 0xa470, 0x4227, 0x5b0c, 0x941e, 0x0, 0x1);
        gbc.writeMem(0x941e, { 0x39 });
        gbc.writeMem(0xbe3a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0xbe3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x941e));
        EXPECT(0xcb, gbc.readMem(0xbe3a));
        EXPECT(0xf6, gbc.readMem(0xbe3b));
        // CB F6 02B3
        gbc.setState(0x66dd, 0x369c, 0x81b0, 0xd4ec, 0x58cf, 0x8462, 0x0, 0x0);
        gbc.writeMem(0x66dd, { 0xcb, 0xf6 });
        gbc.writeMem(0x8462, { 0x86 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x369c, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8462));
        // CB F6 02B4
        gbc.setState(0x9314, 0x6bb5, 0xbc90, 0x2f3c, 0x1673, 0x6cbb, 0x1, 0x1);
        gbc.writeMem(0x6cbb, { 0x42 });
        gbc.writeMem(0x9314, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6bb5, gbc.sp());
        EXPECT(0x9316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9314));
        EXPECT(0xf6, gbc.readMem(0x9315));
        // CB F6 02B6
        gbc.setState(0x95c1, 0x7b54, 0xf5a0, 0x1e90, 0x4e1, 0xb5b9, 0x1, 0x1);
        gbc.writeMem(0x95c1, { 0xcb, 0xf6 });
        gbc.writeMem(0xb5b9, { 0x5c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7b54, gbc.sp());
        EXPECT(0x95c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c1));
        EXPECT(0xf6, gbc.readMem(0x95c2));
        EXPECT(0x5c, gbc.readMem(0xb5b9));
        // CB F6 02B7
        gbc.setState(0xedd9, 0xeb5f, 0x1d60, 0x4819, 0xb472, 0x49c8, 0x0, 0x1);
        gbc.writeMem(0x49c8, { 0x70 });
        gbc.writeMem(0xedd9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeb5f, gbc.sp());
        EXPECT(0xeddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd9));
        EXPECT(0xf6, gbc.readMem(0xedda));
        // CB F6 02B8
        gbc.setState(0x5a8a, 0x8a94, 0x3d60, 0x11dd, 0xeeb5, 0xa331, 0x0, 0x1);
        gbc.writeMem(0x5a8a, { 0xcb, 0xf6 });
        gbc.writeMem(0xa331, { 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8a94, gbc.sp());
        EXPECT(0x5a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa331));
        // CB F6 02B9
        gbc.setState(0xd082, 0xe43f, 0x49f0, 0x27bf, 0x43f1, 0xf6a0, 0x0, 0x1);
        gbc.writeMem(0xd082, { 0xcb, 0xf6 });
        gbc.writeMem(0xf6a0, { 0x53 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe43f, gbc.sp());
        EXPECT(0xd084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd082));
        EXPECT(0xf6, gbc.readMem(0xd083));
        EXPECT(0x53, gbc.readMem(0xf6a0));
        // CB F6 02BA
        gbc.setState(0xc2a5, 0x1f8a, 0x4f50, 0x1c80, 0xae0, 0x24ad, 0x0, 0x0);
        gbc.writeMem(0x24ad, { 0xd5 });
        gbc.writeMem(0xc2a5, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1f8a, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a5));
        EXPECT(0xf6, gbc.readMem(0xc2a6));
        // CB F6 02BB
        gbc.setState(0x2657, 0x3773, 0xfb80, 0x5c50, 0x2ca6, 0x87a4, 0x1, 0x1);
        gbc.writeMem(0x2657, { 0xcb, 0xf6 });
        gbc.writeMem(0x87a4, { 0x86 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3773, gbc.sp());
        EXPECT(0x2659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x87a4));
        // CB F6 02BC
        gbc.setState(0x58f, 0xcb4a, 0xf900, 0x356f, 0xfa8a, 0x96c6, 0x1, 0x0);
        gbc.writeMem(0x58f, { 0xcb, 0xf6 });
        gbc.writeMem(0x96c6, { 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcb4a, gbc.sp());
        EXPECT(0x591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x96c6));
        // CB F6 02BD
        gbc.setState(0xc9a2, 0xe0c8, 0x38f0, 0xcd00, 0x779e, 0xee07, 0x1, 0x0);
        gbc.writeMem(0xc9a2, { 0xcb, 0xf6 });
        gbc.writeMem(0xee07, { 0xd1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe0c8, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a2));
        EXPECT(0xf6, gbc.readMem(0xc9a3));
        EXPECT(0xd1, gbc.readMem(0xee07));
        // CB F6 02BE
        gbc.setState(0x60f0, 0xd6a3, 0x8ea0, 0xaa18, 0x83e8, 0xe2a0, 0x1, 0x1);
        gbc.writeMem(0x60f0, { 0xcb, 0xf6 });
        gbc.writeMem(0xe2a0, { 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd6a3, gbc.sp());
        EXPECT(0x60f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe2a0));
        // CB F6 02C0
        gbc.setState(0x7a1e, 0xb3e3, 0x3ce0, 0x659f, 0xcb20, 0x717f, 0x1, 0x0);
        gbc.writeMem(0x717f, { 0x4d });
        gbc.writeMem(0x7a1e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb3e3, gbc.sp());
        EXPECT(0x7a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02C1
        gbc.setState(0x37e2, 0x3148, 0x5240, 0x8806, 0x98d, 0x8e7e, 0x0, 0x0);
        gbc.writeMem(0x37e2, { 0xcb, 0xf6 });
        gbc.writeMem(0x8e7e, { 0x2f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3148, gbc.sp());
        EXPECT(0x37e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8e7e));
        // CB F6 02C3
        gbc.setState(0xa8c9, 0x4ee1, 0x56d0, 0x6323, 0xabf2, 0x8ed1, 0x0, 0x1);
        gbc.writeMem(0x8ed1, { 0xb });
        gbc.writeMem(0xa8c9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4ee1, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8ed1));
        EXPECT(0xcb, gbc.readMem(0xa8c9));
        EXPECT(0xf6, gbc.readMem(0xa8ca));
        // CB F6 02C4
        gbc.setState(0xb7e2, 0x8eed, 0x9a40, 0x4849, 0xb87a, 0xf181, 0x1, 0x0);
        gbc.writeMem(0xb7e2, { 0xcb, 0xf6 });
        gbc.writeMem(0xf181, { 0xe5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8eed, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e2));
        EXPECT(0xf6, gbc.readMem(0xb7e3));
        EXPECT(0xe5, gbc.readMem(0xf181));
        // CB F6 02C5
        gbc.setState(0xed3c, 0x633, 0xae60, 0x6c7, 0x65a9, 0x4be, 0x1, 0x1);
        gbc.writeMem(0x4be, { 0x5e });
        gbc.writeMem(0xed3c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x633, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3c));
        EXPECT(0xf6, gbc.readMem(0xed3d));
        // CB F6 02C6
        gbc.setState(0x8635, 0x1c74, 0xab50, 0x5123, 0x3ad2, 0xd52f, 0x1, 0x0);
        gbc.writeMem(0x8635, { 0xcb, 0xf6 });
        gbc.writeMem(0xd52f, { 0xfe });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1c74, gbc.sp());
        EXPECT(0x8637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8635));
        EXPECT(0xf6, gbc.readMem(0x8636));
        EXPECT(0xfe, gbc.readMem(0xd52f));
        // CB F6 02C7
        gbc.setState(0x6db0, 0x2399, 0xaa90, 0x25e, 0x324e, 0xc400, 0x0, 0x1);
        gbc.writeMem(0x6db0, { 0xcb, 0xf6 });
        gbc.writeMem(0xc400, { 0xbe });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2399, gbc.sp());
        EXPECT(0x6db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc400));
        // CB F6 02C8
        gbc.setState(0xefad, 0x664f, 0x7c00, 0xf1d2, 0x3600, 0xe276, 0x1, 0x0);
        gbc.writeMem(0xe276, { 0x1a });
        gbc.writeMem(0xefad, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x664f, gbc.sp());
        EXPECT(0xefaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xe276));
        EXPECT(0xcb, gbc.readMem(0xefad));
        EXPECT(0xf6, gbc.readMem(0xefae));
        // CB F6 02C9
        gbc.setState(0xc272, 0xb00d, 0x650, 0x4312, 0xc2fa, 0xb9da, 0x0, 0x1);
        gbc.writeMem(0xb9da, { 0x29 });
        gbc.writeMem(0xc272, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb00d, gbc.sp());
        EXPECT(0xc274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb9da));
        EXPECT(0xcb, gbc.readMem(0xc272));
        EXPECT(0xf6, gbc.readMem(0xc273));
        // CB F6 02CA
        gbc.setState(0x8703, 0x6c9a, 0x5b00, 0x87e5, 0x5e0f, 0x6039, 0x1, 0x1);
        gbc.writeMem(0x6039, { 0xc8 });
        gbc.writeMem(0x8703, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6c9a, gbc.sp());
        EXPECT(0x8705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8703));
        EXPECT(0xf6, gbc.readMem(0x8704));
        // CB F6 02CC
        gbc.setState(0x954c, 0x94e, 0x7e80, 0x4181, 0x7fb0, 0x6682, 0x1, 0x0);
        gbc.writeMem(0x6682, { 0x77 });
        gbc.writeMem(0x954c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x94e, gbc.sp());
        EXPECT(0x954e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954c));
        EXPECT(0xf6, gbc.readMem(0x954d));
        // CB F6 02CD
        gbc.setState(0x722e, 0x167d, 0x6750, 0x881d, 0x48c6, 0x853a, 0x0, 0x0);
        gbc.writeMem(0x722e, { 0xcb, 0xf6 });
        gbc.writeMem(0x853a, { 0x6c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x167d, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x853a));
        // CB F6 02CE
        gbc.setState(0xada6, 0x8199, 0xa3f0, 0xbf45, 0x5a31, 0xd068, 0x0, 0x0);
        gbc.writeMem(0xada6, { 0xcb, 0xf6 });
        gbc.writeMem(0xd068, { 0xdc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8199, gbc.sp());
        EXPECT(0xada8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada6));
        EXPECT(0xf6, gbc.readMem(0xada7));
        EXPECT(0xdc, gbc.readMem(0xd068));
        // CB F6 02CF
        gbc.setState(0xa17b, 0xb4a4, 0xc4b0, 0xbaeb, 0x9d9b, 0x7fc9, 0x1, 0x0);
        gbc.writeMem(0x7fc9, { 0xc7 });
        gbc.writeMem(0xa17b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb4a4, gbc.sp());
        EXPECT(0xa17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17b));
        EXPECT(0xf6, gbc.readMem(0xa17c));
        // CB F6 02D0
        gbc.setState(0xc7ea, 0x53fa, 0xb0e0, 0x318c, 0xac4b, 0xf8c0, 0x0, 0x0);
        gbc.writeMem(0xc7ea, { 0xcb, 0xf6 });
        gbc.writeMem(0xf8c0, { 0xd2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x53fa, gbc.sp());
        EXPECT(0xc7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ea));
        EXPECT(0xf6, gbc.readMem(0xc7eb));
        EXPECT(0xd2, gbc.readMem(0xf8c0));
        // CB F6 02D1
        gbc.setState(0xeb4f, 0x8727, 0xc4b0, 0x6ff7, 0x9710, 0x5436, 0x1, 0x0);
        gbc.writeMem(0x5436, { 0xfc });
        gbc.writeMem(0xeb4f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0xeb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4f));
        EXPECT(0xf6, gbc.readMem(0xeb50));
        // CB F6 02D2
        gbc.setState(0x9c62, 0xb0f7, 0xd250, 0x3230, 0xe283, 0xb4e8, 0x1, 0x0);
        gbc.writeMem(0x9c62, { 0xcb, 0xf6 });
        gbc.writeMem(0xb4e8, { 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb0f7, gbc.sp());
        EXPECT(0x9c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c62));
        EXPECT(0xf6, gbc.readMem(0x9c63));
        EXPECT(0xdc, gbc.readMem(0xb4e8));
        // CB F6 02D3
        gbc.setState(0x29b8, 0xddf1, 0x5da0, 0xac4f, 0x7418, 0x84cd, 0x1, 0x1);
        gbc.writeMem(0x29b8, { 0xcb, 0xf6 });
        gbc.writeMem(0x84cd, { 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xddf1, gbc.sp());
        EXPECT(0x29ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x84cd));
        // CB F6 02D5
        gbc.setState(0x8094, 0xaf3b, 0xcb00, 0x2f42, 0xd569, 0xc00d, 0x1, 0x1);
        gbc.writeMem(0x8094, { 0xcb, 0xf6 });
        gbc.writeMem(0xc00d, { 0xcf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaf3b, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8094));
        EXPECT(0xf6, gbc.readMem(0x8095));
        EXPECT(0xcf, gbc.readMem(0xc00d));
        // CB F6 02D6
        gbc.setState(0xe876, 0xc83, 0x2670, 0x9b19, 0x98a6, 0x88dc, 0x0, 0x0);
        gbc.writeMem(0x88dc, { 0x3b });
        gbc.writeMem(0xe876, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc83, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x88dc));
        EXPECT(0xcb, gbc.readMem(0xe876));
        EXPECT(0xf6, gbc.readMem(0xe877));
        // CB F6 02D7
        gbc.setState(0x5805, 0x160, 0x3f50, 0x10cb, 0xe9a9, 0x5700, 0x1, 0x0);
        gbc.writeMem(0x5700, { 0x53 });
        gbc.writeMem(0x5805, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0x5807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 02D8
        gbc.setState(0xe687, 0x4ea8, 0x8260, 0xe51e, 0xb104, 0x9c2d, 0x1, 0x0);
        gbc.writeMem(0x9c2d, { 0x86 });
        gbc.writeMem(0xe687, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4ea8, gbc.sp());
        EXPECT(0xe689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9c2d));
        EXPECT(0xcb, gbc.readMem(0xe687));
        EXPECT(0xf6, gbc.readMem(0xe688));
        // CB F6 02D9
        gbc.setState(0x19c1, 0x3f1, 0x1a80, 0xf10f, 0x670d, 0x2c43, 0x1, 0x1);
        gbc.writeMem(0x19c1, { 0xcb, 0xf6 });
        gbc.writeMem(0x2c43, { 0x44 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3f1, gbc.sp());
        EXPECT(0x19c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02DA
        gbc.setState(0xb5d8, 0x1f71, 0xa590, 0xd3e4, 0xc7d6, 0x210f, 0x0, 0x1);
        gbc.writeMem(0x210f, { 0xe5 });
        gbc.writeMem(0xb5d8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1f71, gbc.sp());
        EXPECT(0xb5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d8));
        EXPECT(0xf6, gbc.readMem(0xb5d9));
        // CB F6 02DB
        gbc.setState(0xf3e, 0x9c8a, 0xec0, 0x60b5, 0x26f, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0xf3e, { 0xcb, 0xf6 });
        gbc.writeMem(0x7c56, { 0x70 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0xf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02DC
        gbc.setState(0x249b, 0xfd8, 0x1d00, 0xf2b5, 0xf2ea, 0xbe8b, 0x0, 0x0);
        gbc.writeMem(0x249b, { 0xcb, 0xf6 });
        gbc.writeMem(0xbe8b, { 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfd8, gbc.sp());
        EXPECT(0x249d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xbe8b));
        // CB F6 02DD
        gbc.setState(0x14ad, 0x20b9, 0x3250, 0xb5e5, 0x63cf, 0xb3db, 0x1, 0x1);
        gbc.writeMem(0x14ad, { 0xcb, 0xf6 });
        gbc.writeMem(0xb3db, { 0x60 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x20b9, gbc.sp());
        EXPECT(0x14af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb3db));
        // CB F6 02DE
        gbc.setState(0x55d9, 0x8b4b, 0xcaa0, 0x503, 0xa507, 0xb796, 0x1, 0x1);
        gbc.writeMem(0x55d9, { 0xcb, 0xf6 });
        gbc.writeMem(0xb796, { 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b4b, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb796));
        // CB F6 02DF
        gbc.setState(0x29e5, 0xa41b, 0x6b10, 0x353d, 0xde42, 0x8b72, 0x1, 0x1);
        gbc.writeMem(0x29e5, { 0xcb, 0xf6 });
        gbc.writeMem(0x8b72, { 0xe2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa41b, gbc.sp());
        EXPECT(0x29e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8b72));
        // CB F6 02E0
        gbc.setState(0xd96, 0x46c7, 0x7750, 0x976f, 0xad3, 0x858b, 0x1, 0x1);
        gbc.writeMem(0xd96, { 0xcb, 0xf6 });
        gbc.writeMem(0x858b, { 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x46c7, gbc.sp());
        EXPECT(0xd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x858b));
        // CB F6 02E1
        gbc.setState(0x2a5b, 0x7c2d, 0x4000, 0x4ff7, 0x21cd, 0x1110, 0x0, 0x1);
        gbc.writeMem(0x1110, { 0xf9 });
        gbc.writeMem(0x2a5b, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0x2a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02E2
        gbc.setState(0xd3f3, 0xb32c, 0xeda0, 0x30bc, 0xe50c, 0x1f0, 0x0, 0x1);
        gbc.writeMem(0x1f0, { 0x7f });
        gbc.writeMem(0xd3f3, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb32c, gbc.sp());
        EXPECT(0xd3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f3));
        EXPECT(0xf6, gbc.readMem(0xd3f4));
        // CB F6 02E3
        gbc.setState(0xbc2, 0x3b1e, 0x1590, 0x8e32, 0xf3dd, 0x180, 0x1, 0x1);
        gbc.writeMem(0x180, { 0x5e });
        gbc.writeMem(0xbc2, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3b1e, gbc.sp());
        EXPECT(0xbc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 02E4
        gbc.setState(0x800a, 0x6a68, 0xa370, 0xd830, 0x271f, 0x6907, 0x0, 0x0);
        gbc.writeMem(0x6907, { 0x60 });
        gbc.writeMem(0x800a, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6a68, gbc.sp());
        EXPECT(0x800c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800a));
        EXPECT(0xf6, gbc.readMem(0x800b));
        // CB F6 02E5
        gbc.setState(0x4d7d, 0x758c, 0xa180, 0x632e, 0xa799, 0x96e8, 0x1, 0x0);
        gbc.writeMem(0x4d7d, { 0xcb, 0xf6 });
        gbc.writeMem(0x96e8, { 0xfd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x758c, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x96e8));
        // CB F6 02E7
        gbc.setState(0x24e8, 0xc8e1, 0x6b40, 0x834e, 0x40b8, 0x22c6, 0x0, 0x1);
        gbc.writeMem(0x22c6, { 0xef });
        gbc.writeMem(0x24e8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc8e1, gbc.sp());
        EXPECT(0x24ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02E9
        gbc.setState(0x1fa3, 0x96b4, 0x46e0, 0x3b08, 0xda8a, 0xa1ff, 0x0, 0x0);
        gbc.writeMem(0x1fa3, { 0xcb, 0xf6 });
        gbc.writeMem(0xa1ff, { 0x21 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x96b4, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa1ff));
        // CB F6 02EB
        gbc.setState(0x9c49, 0xab1d, 0x2be0, 0x9f72, 0x6bb8, 0xa43a, 0x1, 0x1);
        gbc.writeMem(0x9c49, { 0xcb, 0xf6 });
        gbc.writeMem(0xa43a, { 0x71 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0x9c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c49));
        EXPECT(0xf6, gbc.readMem(0x9c4a));
        EXPECT(0x71, gbc.readMem(0xa43a));
        // CB F6 02EC
        gbc.setState(0x8c05, 0xbaf4, 0xd490, 0x39ee, 0xf826, 0x8db5, 0x0, 0x1);
        gbc.writeMem(0x8c05, { 0xcb, 0xf6 });
        gbc.writeMem(0x8db5, { 0x68 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbaf4, gbc.sp());
        EXPECT(0x8c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c05));
        EXPECT(0xf6, gbc.readMem(0x8c06));
        EXPECT(0x68, gbc.readMem(0x8db5));
        // CB F6 02ED
        gbc.setState(0x304e, 0xe536, 0xf7d0, 0xd19e, 0x264, 0x9cc5, 0x1, 0x0);
        gbc.writeMem(0x304e, { 0xcb, 0xf6 });
        gbc.writeMem(0x9cc5, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe536, gbc.sp());
        EXPECT(0x3050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9cc5));
        // CB F6 02EE
        gbc.setState(0x55e7, 0xf50c, 0x78a0, 0x165b, 0x631a, 0xd1ab, 0x1, 0x0);
        gbc.writeMem(0x55e7, { 0xcb, 0xf6 });
        gbc.writeMem(0xd1ab, { 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf50c, gbc.sp());
        EXPECT(0x55e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd1ab));
        // CB F6 02EF
        gbc.setState(0x7a9e, 0x1853, 0x4480, 0xca51, 0x285e, 0x8540, 0x1, 0x0);
        gbc.writeMem(0x7a9e, { 0xcb, 0xf6 });
        gbc.writeMem(0x8540, { 0xc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1853, gbc.sp());
        EXPECT(0x7aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8540));
        // CB F6 02F0
        gbc.setState(0x2c8f, 0xeab5, 0xbe20, 0x47fa, 0x4f90, 0x1392, 0x0, 0x1);
        gbc.writeMem(0x1392, { 0x7a });
        gbc.writeMem(0x2c8f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0x2c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 02F1
        gbc.setState(0xb551, 0xcfb5, 0x8140, 0xc4bf, 0x2b16, 0xf238, 0x1, 0x0);
        gbc.writeMem(0xb551, { 0xcb, 0xf6 });
        gbc.writeMem(0xf238, { 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcfb5, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb551));
        EXPECT(0xf6, gbc.readMem(0xb552));
        EXPECT(0xf3, gbc.readMem(0xf238));
        // CB F6 02F3
        gbc.setState(0xdd4c, 0x1d78, 0xf320, 0x25ac, 0xf9, 0x8a69, 0x0, 0x1);
        gbc.writeMem(0x8a69, { 0x8 });
        gbc.writeMem(0xdd4c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1d78, gbc.sp());
        EXPECT(0xdd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8a69));
        EXPECT(0xcb, gbc.readMem(0xdd4c));
        EXPECT(0xf6, gbc.readMem(0xdd4d));
        // CB F6 02F4
        gbc.setState(0x4b3c, 0xc0e8, 0xbd60, 0xc4ad, 0xf0b9, 0xc408, 0x1, 0x1);
        gbc.writeMem(0x4b3c, { 0xcb, 0xf6 });
        gbc.writeMem(0xc408, { 0x65 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x4b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc408));
        // CB F6 02F5
        gbc.setState(0x7552, 0x1062, 0x9bc0, 0xd9fe, 0x239d, 0xc283, 0x1, 0x1);
        gbc.writeMem(0x7552, { 0xcb, 0xf6 });
        gbc.writeMem(0xc283, { 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1062, gbc.sp());
        EXPECT(0x7554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xc283));
        // CB F6 02F9
        gbc.setState(0xa3f6, 0x9e50, 0x8e70, 0xa38a, 0x726d, 0xb872, 0x1, 0x0);
        gbc.writeMem(0xa3f6, { 0xcb, 0xf6 });
        gbc.writeMem(0xb872, { 0x16 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9e50, gbc.sp());
        EXPECT(0xa3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f6));
        EXPECT(0xf6, gbc.readMem(0xa3f7));
        EXPECT(0x56, gbc.readMem(0xb872));
        // CB F6 02FA
        gbc.setState(0x46bf, 0x24dd, 0x1ff0, 0xcd68, 0x32fb, 0x80f9, 0x0, 0x1);
        gbc.writeMem(0x46bf, { 0xcb, 0xf6 });
        gbc.writeMem(0x80f9, { 0x58 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x24dd, gbc.sp());
        EXPECT(0x46c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x80f9));
        // CB F6 02FC
        gbc.setState(0x6904, 0xc66d, 0xe790, 0x8790, 0x35d6, 0xd46d, 0x0, 0x1);
        gbc.writeMem(0x6904, { 0xcb, 0xf6 });
        gbc.writeMem(0xd46d, { 0xfe });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc66d, gbc.sp());
        EXPECT(0x6906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd46d));
        // CB F6 02FD
        gbc.setState(0xda8e, 0x56, 0xcc80, 0xdb59, 0x1464, 0xc82d, 0x1, 0x1);
        gbc.writeMem(0xc82d, { 0xf });
        gbc.writeMem(0xda8e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x56, gbc.sp());
        EXPECT(0xda90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xc82d));
        EXPECT(0xcb, gbc.readMem(0xda8e));
        EXPECT(0xf6, gbc.readMem(0xda8f));
        // CB F6 02FE
        gbc.setState(0x8bb3, 0x3b3b, 0x5ab0, 0x2bbb, 0xd2bd, 0x6fef, 0x0, 0x1);
        gbc.writeMem(0x6fef, { 0xfe });
        gbc.writeMem(0x8bb3, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b3b, gbc.sp());
        EXPECT(0x8bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb3));
        EXPECT(0xf6, gbc.readMem(0x8bb4));
        // CB F6 02FF
        gbc.setState(0xbd44, 0xd541, 0x53d0, 0xb9f5, 0x3b54, 0xc329, 0x0, 0x1);
        gbc.writeMem(0xbd44, { 0xcb, 0xf6 });
        gbc.writeMem(0xc329, { 0x10 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd44));
        EXPECT(0xf6, gbc.readMem(0xbd45));
        EXPECT(0x50, gbc.readMem(0xc329));
        // CB F6 0300
        gbc.setState(0x28c1, 0x7e1e, 0x8940, 0xf451, 0x13d3, 0xdefa, 0x0, 0x0);
        gbc.writeMem(0x28c1, { 0xcb, 0xf6 });
        gbc.writeMem(0xdefa, { 0x79 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7e1e, gbc.sp());
        EXPECT(0x28c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdefa));
        // CB F6 0301
        gbc.setState(0x1893, 0xd872, 0x3730, 0x6556, 0x93b3, 0xa7c0, 0x1, 0x1);
        gbc.writeMem(0x1893, { 0xcb, 0xf6 });
        gbc.writeMem(0xa7c0, { 0x69 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd872, gbc.sp());
        EXPECT(0x1895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa7c0));
        // CB F6 0304
        gbc.setState(0x57fd, 0xfb58, 0x9920, 0xdc01, 0x25a4, 0xb32d, 0x0, 0x1);
        gbc.writeMem(0x57fd, { 0xcb, 0xf6 });
        gbc.writeMem(0xb32d, { 0xea });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfb58, gbc.sp());
        EXPECT(0x57ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb32d));
        // CB F6 0305
        gbc.setState(0x1b67, 0xdcdf, 0xaab0, 0x18ee, 0xcd6e, 0x808e, 0x0, 0x0);
        gbc.writeMem(0x1b67, { 0xcb, 0xf6 });
        gbc.writeMem(0x808e, { 0x5c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdcdf, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x808e));
        // CB F6 0306
        gbc.setState(0x67fe, 0x24a2, 0x3780, 0xbb53, 0xa5fd, 0xcbe1, 0x1, 0x0);
        gbc.writeMem(0x67fe, { 0xcb, 0xf6 });
        gbc.writeMem(0xcbe1, { 0xe5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x24a2, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xcbe1));
        // CB F6 030B
        gbc.setState(0x9ab5, 0x9e26, 0x93e0, 0x50f2, 0x5ea0, 0x321f, 0x0, 0x0);
        gbc.writeMem(0x321f, { 0xca });
        gbc.writeMem(0x9ab5, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9e26, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab5));
        EXPECT(0xf6, gbc.readMem(0x9ab6));
        // CB F6 030C
        gbc.setState(0xbb24, 0xaa6b, 0xe310, 0x4341, 0x24a3, 0xe75a, 0x0, 0x0);
        gbc.writeMem(0xbb24, { 0xcb, 0xf6 });
        gbc.writeMem(0xe75a, { 0x43 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaa6b, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb24));
        EXPECT(0xf6, gbc.readMem(0xbb25));
        EXPECT(0x43, gbc.readMem(0xe75a));
        // CB F6 030E
        gbc.setState(0xe4dd, 0xf54f, 0x6db0, 0x195d, 0xae2, 0xafa9, 0x1, 0x0);
        gbc.writeMem(0xafa9, { 0xf9 });
        gbc.writeMem(0xe4dd, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf54f, gbc.sp());
        EXPECT(0xe4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xafa9));
        EXPECT(0xcb, gbc.readMem(0xe4dd));
        EXPECT(0xf6, gbc.readMem(0xe4de));
        // CB F6 0311
        gbc.setState(0x9e02, 0x3ef6, 0xab80, 0xd5ba, 0x528f, 0xa01d, 0x0, 0x1);
        gbc.writeMem(0x9e02, { 0xcb, 0xf6 });
        gbc.writeMem(0xa01d, { 0xec });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3ef6, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e02));
        EXPECT(0xf6, gbc.readMem(0x9e03));
        EXPECT(0xec, gbc.readMem(0xa01d));
        // CB F6 0314
        gbc.setState(0x62a4, 0xda7b, 0xc3f0, 0x47a2, 0x95b9, 0xe98c, 0x1, 0x0);
        gbc.writeMem(0x62a4, { 0xcb, 0xf6 });
        gbc.writeMem(0xe98c, { 0x6f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xda7b, gbc.sp());
        EXPECT(0x62a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xe98c));
        // CB F6 0315
        gbc.setState(0xe818, 0xc6c1, 0xbff0, 0xcffa, 0x7c9, 0xc155, 0x0, 0x0);
        gbc.writeMem(0xc155, { 0x3f });
        gbc.writeMem(0xe818, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc6c1, gbc.sp());
        EXPECT(0xe81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xc155));
        EXPECT(0xcb, gbc.readMem(0xe818));
        EXPECT(0xf6, gbc.readMem(0xe819));
        // CB F6 0317
        gbc.setState(0xc283, 0x14f3, 0xc9f0, 0xbfab, 0x5a16, 0xcf11, 0x1, 0x1);
        gbc.writeMem(0xc283, { 0xcb, 0xf6 });
        gbc.writeMem(0xcf11, { 0x7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x14f3, gbc.sp());
        EXPECT(0xc285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc283));
        EXPECT(0xf6, gbc.readMem(0xc284));
        EXPECT(0x47, gbc.readMem(0xcf11));
        // CB F6 0319
        gbc.setState(0x5d42, 0x3aa3, 0xb4a0, 0x4855, 0x777b, 0xed0a, 0x0, 0x1);
        gbc.writeMem(0x5d42, { 0xcb, 0xf6 });
        gbc.writeMem(0xed0a, { 0x4e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3aa3, gbc.sp());
        EXPECT(0x5d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xed0a));
        // CB F6 031A
        gbc.setState(0x6940, 0x2267, 0x2980, 0x1261, 0xf044, 0xbdd4, 0x1, 0x0);
        gbc.writeMem(0x6940, { 0xcb, 0xf6 });
        gbc.writeMem(0xbdd4, { 0x1c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2267, gbc.sp());
        EXPECT(0x6942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xbdd4));
        // CB F6 031B
        gbc.setState(0x2a6c, 0xd07f, 0x4ec0, 0x62b2, 0xffe, 0xfbe, 0x0, 0x0);
        gbc.writeMem(0xfbe, { 0x58 });
        gbc.writeMem(0x2a6c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd07f, gbc.sp());
        EXPECT(0x2a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 031C
        gbc.setState(0x84e9, 0x39ac, 0xdc50, 0x822, 0x5684, 0x583, 0x0, 0x1);
        gbc.writeMem(0x583, { 0xd9 });
        gbc.writeMem(0x84e9, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0x84eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e9));
        EXPECT(0xf6, gbc.readMem(0x84ea));
        // CB F6 031D
        gbc.setState(0xeff, 0xb471, 0xbbf0, 0xa7bc, 0xcd77, 0xe20b, 0x0, 0x1);
        gbc.writeMem(0xeff, { 0xcb, 0xf6 });
        gbc.writeMem(0xe20b, { 0x96 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0xf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe20b));
        // CB F6 031E
        gbc.setState(0x9dcf, 0xb603, 0xb870, 0xe5d0, 0xb5f2, 0xbada, 0x0, 0x0);
        gbc.writeMem(0x9dcf, { 0xcb, 0xf6 });
        gbc.writeMem(0xbada, { 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb603, gbc.sp());
        EXPECT(0x9dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dcf));
        EXPECT(0xf6, gbc.readMem(0x9dd0));
        EXPECT(0x4e, gbc.readMem(0xbada));
        // CB F6 0320
        gbc.setState(0xb79f, 0x4292, 0x25b0, 0x3613, 0x56f0, 0x5536, 0x0, 0x1);
        gbc.writeMem(0x5536, { 0x7a });
        gbc.writeMem(0xb79f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4292, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79f));
        EXPECT(0xf6, gbc.readMem(0xb7a0));
        // CB F6 0321
        gbc.setState(0xe8cf, 0x4346, 0x6880, 0xad37, 0x2740, 0xea9f, 0x1, 0x1);
        gbc.writeMem(0xe8cf, { 0xcb, 0xf6 });
        gbc.writeMem(0xea9f, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4346, gbc.sp());
        EXPECT(0xe8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cf));
        EXPECT(0xf6, gbc.readMem(0xe8d0));
        EXPECT(0x5d, gbc.readMem(0xea9f));
        // CB F6 0323
        gbc.setState(0x66ee, 0xb463, 0xbae0, 0xa622, 0xb475, 0x244c, 0x1, 0x0);
        gbc.writeMem(0x244c, { 0x49 });
        gbc.writeMem(0x66ee, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb463, gbc.sp());
        EXPECT(0x66f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0324
        gbc.setState(0x2438, 0x7bad, 0xa1f0, 0x4c08, 0xb536, 0x6f51, 0x1, 0x1);
        gbc.writeMem(0x2438, { 0xcb, 0xf6 });
        gbc.writeMem(0x6f51, { 0x60 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7bad, gbc.sp());
        EXPECT(0x243a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0329
        gbc.setState(0x81aa, 0xb001, 0x1450, 0x76b1, 0x4ad7, 0x8cea, 0x0, 0x0);
        gbc.writeMem(0x81aa, { 0xcb, 0xf6 });
        gbc.writeMem(0x8cea, { 0x4b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb001, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81aa));
        EXPECT(0xf6, gbc.readMem(0x81ab));
        EXPECT(0x4b, gbc.readMem(0x8cea));
        // CB F6 032A
        gbc.setState(0x43d7, 0x9dc5, 0xcee0, 0xb07a, 0x1553, 0xe19f, 0x0, 0x1);
        gbc.writeMem(0x43d7, { 0xcb, 0xf6 });
        gbc.writeMem(0xe19f, { 0xd6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0x43d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe19f));
        // CB F6 032B
        gbc.setState(0xb34b, 0xf8f, 0x6520, 0xd7b2, 0x628, 0xb382, 0x0, 0x0);
        gbc.writeMem(0xb34b, { 0xcb, 0xf6 });
        gbc.writeMem(0xb382, { 0x58 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf8f, gbc.sp());
        EXPECT(0xb34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34b));
        EXPECT(0xf6, gbc.readMem(0xb34c));
        EXPECT(0x58, gbc.readMem(0xb382));
        // CB F6 032C
        gbc.setState(0x69e6, 0x65ca, 0x3210, 0x284, 0x3f5d, 0xd0d5, 0x0, 0x1);
        gbc.writeMem(0x69e6, { 0xcb, 0xf6 });
        gbc.writeMem(0xd0d5, { 0xf7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x65ca, gbc.sp());
        EXPECT(0x69e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd0d5));
        // CB F6 032D
        gbc.setState(0x6662, 0xbadf, 0x7590, 0x7834, 0xc14a, 0xf3d9, 0x0, 0x1);
        gbc.writeMem(0x6662, { 0xcb, 0xf6 });
        gbc.writeMem(0xf3d9, { 0xb4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbadf, gbc.sp());
        EXPECT(0x6664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xf3d9));
        // CB F6 032E
        gbc.setState(0x39b3, 0xe2af, 0x5940, 0xc158, 0xae56, 0x4ea6, 0x0, 0x0);
        gbc.writeMem(0x39b3, { 0xcb, 0xf6 });
        gbc.writeMem(0x4ea6, { 0xd2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe2af, gbc.sp());
        EXPECT(0x39b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0331
        gbc.setState(0xc4c3, 0xa32c, 0xf2b0, 0x22f0, 0x3c47, 0xd139, 0x1, 0x1);
        gbc.writeMem(0xc4c3, { 0xcb, 0xf6 });
        gbc.writeMem(0xd139, { 0xce });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa32c, gbc.sp());
        EXPECT(0xc4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c3));
        EXPECT(0xf6, gbc.readMem(0xc4c4));
        EXPECT(0xce, gbc.readMem(0xd139));
        // CB F6 0332
        gbc.setState(0x5333, 0xb7b5, 0xeaa0, 0xdcff, 0x7426, 0x8c90, 0x0, 0x1);
        gbc.writeMem(0x5333, { 0xcb, 0xf6 });
        gbc.writeMem(0x8c90, { 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb7b5, gbc.sp());
        EXPECT(0x5335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8c90));
        // CB F6 0335
        gbc.setState(0x6944, 0x7d52, 0xa450, 0xa4b, 0xd408, 0x63c, 0x1, 0x0);
        gbc.writeMem(0x63c, { 0xc4 });
        gbc.writeMem(0x6944, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7d52, gbc.sp());
        EXPECT(0x6946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0336
        gbc.setState(0x773b, 0x196c, 0x1440, 0x4500, 0xe3de, 0xf327, 0x1, 0x1);
        gbc.writeMem(0x773b, { 0xcb, 0xf6 });
        gbc.writeMem(0xf327, { 0xbb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0x773d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xf327));
        // CB F6 0337
        gbc.setState(0xc896, 0x6ad0, 0xce50, 0xaf72, 0xdca6, 0x92b2, 0x0, 0x0);
        gbc.writeMem(0x92b2, { 0x62 });
        gbc.writeMem(0xc896, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x92b2));
        EXPECT(0xcb, gbc.readMem(0xc896));
        EXPECT(0xf6, gbc.readMem(0xc897));
        // CB F6 0338
        gbc.setState(0x93dd, 0x9d94, 0xeed0, 0x438e, 0x309c, 0x4db3, 0x0, 0x1);
        gbc.writeMem(0x4db3, { 0xf6 });
        gbc.writeMem(0x93dd, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0x93df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93dd));
        EXPECT(0xf6, gbc.readMem(0x93de));
        // CB F6 033C
        gbc.setState(0x6879, 0x617b, 0xe120, 0x9d46, 0x2d0b, 0x992a, 0x1, 0x0);
        gbc.writeMem(0x6879, { 0xcb, 0xf6 });
        gbc.writeMem(0x992a, { 0xfb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x617b, gbc.sp());
        EXPECT(0x687b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x992a));
        // CB F6 033D
        gbc.setState(0xd3f8, 0x484e, 0xff90, 0xc400, 0x15f5, 0xb9de, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xf1 });
        gbc.writeMem(0xd3f8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x484e, gbc.sp());
        EXPECT(0xd3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb9de));
        EXPECT(0xcb, gbc.readMem(0xd3f8));
        EXPECT(0xf6, gbc.readMem(0xd3f9));
        // CB F6 033E
        gbc.setState(0x56e4, 0x7288, 0xa730, 0x7280, 0x983d, 0xaa91, 0x1, 0x0);
        gbc.writeMem(0x56e4, { 0xcb, 0xf6 });
        gbc.writeMem(0xaa91, { 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7288, gbc.sp());
        EXPECT(0x56e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaa91));
        // CB F6 033F
        gbc.setState(0xbd63, 0xc080, 0x2f00, 0x1933, 0xa0c1, 0xce76, 0x0, 0x1);
        gbc.writeMem(0xbd63, { 0xcb, 0xf6 });
        gbc.writeMem(0xce76, { 0x2a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc080, gbc.sp());
        EXPECT(0xbd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd63));
        EXPECT(0xf6, gbc.readMem(0xbd64));
        EXPECT(0x6a, gbc.readMem(0xce76));
        // CB F6 0341
        gbc.setState(0x63c6, 0x486f, 0xf210, 0xd892, 0x8a42, 0xf9fb, 0x1, 0x1);
        gbc.writeMem(0x63c6, { 0xcb, 0xf6 });
        gbc.writeMem(0xf9fb, { 0xf4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x63c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xf9fb));
        // CB F6 0342
        gbc.setState(0xd60, 0x1783, 0x8810, 0x2428, 0x43c3, 0xb015, 0x0, 0x0);
        gbc.writeMem(0xd60, { 0xcb, 0xf6 });
        gbc.writeMem(0xb015, { 0xb2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1783, gbc.sp());
        EXPECT(0xd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb015));
        // CB F6 0343
        gbc.setState(0x995a, 0xf533, 0x1360, 0x9d26, 0x9a2c, 0xab21, 0x1, 0x0);
        gbc.writeMem(0x995a, { 0xcb, 0xf6 });
        gbc.writeMem(0xab21, { 0xf7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf533, gbc.sp());
        EXPECT(0x995c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995a));
        EXPECT(0xf6, gbc.readMem(0x995b));
        EXPECT(0xf7, gbc.readMem(0xab21));
        // CB F6 0344
        gbc.setState(0xeb7d, 0x5c53, 0x7a20, 0x7dbe, 0x9920, 0x1301, 0x1, 0x0);
        gbc.writeMem(0x1301, { 0x6e });
        gbc.writeMem(0xeb7d, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5c53, gbc.sp());
        EXPECT(0xeb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7d));
        EXPECT(0xf6, gbc.readMem(0xeb7e));
        // CB F6 0345
        gbc.setState(0x4527, 0x2a28, 0x16d0, 0x102d, 0xa20f, 0xf1c9, 0x0, 0x0);
        gbc.writeMem(0x4527, { 0xcb, 0xf6 });
        gbc.writeMem(0xf1c9, { 0x4f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a28, gbc.sp());
        EXPECT(0x4529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf1c9));
        // CB F6 0346
        gbc.setState(0xc9ea, 0x2a18, 0x8ee0, 0x7b89, 0xf24a, 0x2932, 0x0, 0x0);
        gbc.writeMem(0x2932, { 0xfb });
        gbc.writeMem(0xc9ea, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2a18, gbc.sp());
        EXPECT(0xc9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ea));
        EXPECT(0xf6, gbc.readMem(0xc9eb));
        // CB F6 0348
        gbc.setState(0x6d01, 0x387a, 0x33d0, 0xc324, 0xa1e8, 0xc450, 0x1, 0x1);
        gbc.writeMem(0x6d01, { 0xcb, 0xf6 });
        gbc.writeMem(0xc450, { 0x1c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x387a, gbc.sp());
        EXPECT(0x6d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc450));
        // CB F6 0349
        gbc.setState(0xde51, 0x69d1, 0x4150, 0x6c03, 0x67ef, 0xbe18, 0x0, 0x1);
        gbc.writeMem(0xbe18, { 0xd1 });
        gbc.writeMem(0xde51, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x69d1, gbc.sp());
        EXPECT(0xde53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xbe18));
        EXPECT(0xcb, gbc.readMem(0xde51));
        EXPECT(0xf6, gbc.readMem(0xde52));
        // CB F6 034A
        gbc.setState(0x4c90, 0x940a, 0xfd70, 0x303c, 0x963e, 0xbc96, 0x1, 0x1);
        gbc.writeMem(0x4c90, { 0xcb, 0xf6 });
        gbc.writeMem(0xbc96, { 0x2e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0x4c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbc96));
        // CB F6 034B
        gbc.setState(0xad2d, 0xea83, 0x1c60, 0xc67b, 0xdc15, 0xdd3, 0x1, 0x0);
        gbc.writeMem(0xdd3, { 0xcd });
        gbc.writeMem(0xad2d, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xea83, gbc.sp());
        EXPECT(0xad2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2d));
        EXPECT(0xf6, gbc.readMem(0xad2e));
        // CB F6 034D
        gbc.setState(0x8ee6, 0x2b62, 0xf5c0, 0x2de0, 0x646, 0x21df, 0x1, 0x1);
        gbc.writeMem(0x21df, { 0xc1 });
        gbc.writeMem(0x8ee6, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2b62, gbc.sp());
        EXPECT(0x8ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee6));
        EXPECT(0xf6, gbc.readMem(0x8ee7));
        // CB F6 034E
        gbc.setState(0x5725, 0xba8c, 0xf8d0, 0xe36a, 0x1624, 0xca23, 0x1, 0x0);
        gbc.writeMem(0x5725, { 0xcb, 0xf6 });
        gbc.writeMem(0xca23, { 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xba8c, gbc.sp());
        EXPECT(0x5727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca23));
        // CB F6 034F
        gbc.setState(0x46bf, 0xac28, 0x3230, 0xd2c5, 0xbbc4, 0xb679, 0x1, 0x0);
        gbc.writeMem(0x46bf, { 0xcb, 0xf6 });
        gbc.writeMem(0xb679, { 0x2a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xac28, gbc.sp());
        EXPECT(0x46c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb679));
        // CB F6 0350
        gbc.setState(0x3ca1, 0x3a41, 0xa580, 0x7c5e, 0x7dcb, 0x7bb1, 0x1, 0x0);
        gbc.writeMem(0x3ca1, { 0xcb, 0xf6 });
        gbc.writeMem(0x7bb1, { 0x79 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3a41, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0352
        gbc.setState(0x3510, 0x86aa, 0x33d0, 0xa8b0, 0x4deb, 0x27e2, 0x1, 0x1);
        gbc.writeMem(0x27e2, { 0x5e });
        gbc.writeMem(0x3510, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x86aa, gbc.sp());
        EXPECT(0x3512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0353
        gbc.setState(0x4273, 0xaec1, 0xdfe0, 0xf1c4, 0xd894, 0x51b2, 0x0, 0x1);
        gbc.writeMem(0x4273, { 0xcb, 0xf6 });
        gbc.writeMem(0x51b2, { 0xf8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaec1, gbc.sp());
        EXPECT(0x4275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0354
        gbc.setState(0xb19, 0x267e, 0x1780, 0xd9a0, 0x251f, 0xcce4, 0x1, 0x1);
        gbc.writeMem(0xb19, { 0xcb, 0xf6 });
        gbc.writeMem(0xcce4, { 0x84 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x267e, gbc.sp());
        EXPECT(0xb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xcce4));
        // CB F6 0355
        gbc.setState(0x9560, 0x1a89, 0x7df0, 0x5ab9, 0xc9d, 0x9e81, 0x1, 0x1);
        gbc.writeMem(0x9560, { 0xcb, 0xf6 });
        gbc.writeMem(0x9e81, { 0x96 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1a89, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9560));
        EXPECT(0xf6, gbc.readMem(0x9561));
        EXPECT(0xd6, gbc.readMem(0x9e81));
        // CB F6 0357
        gbc.setState(0x8733, 0xde94, 0xc6b0, 0xd65e, 0x2331, 0x920e, 0x0, 0x0);
        gbc.writeMem(0x8733, { 0xcb, 0xf6 });
        gbc.writeMem(0x920e, { 0x6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xde94, gbc.sp());
        EXPECT(0x8735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8733));
        EXPECT(0xf6, gbc.readMem(0x8734));
        EXPECT(0x46, gbc.readMem(0x920e));
        // CB F6 0359
        gbc.setState(0x6348, 0x5d84, 0x44d0, 0xd854, 0x72d4, 0xc900, 0x0, 0x1);
        gbc.writeMem(0x6348, { 0xcb, 0xf6 });
        gbc.writeMem(0xc900, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5d84, gbc.sp());
        EXPECT(0x634a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc900));
        // CB F6 035A
        gbc.setState(0xef60, 0x6a2a, 0xa6a0, 0xa2e, 0x9c6a, 0xbc, 0x0, 0x0);
        gbc.writeMem(0xbc, { 0xf3 });
        gbc.writeMem(0xef60, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6a2a, gbc.sp());
        EXPECT(0xef62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef60));
        EXPECT(0xf6, gbc.readMem(0xef61));
        // CB F6 035B
        gbc.setState(0x6569, 0xf694, 0x7470, 0x6f10, 0x6c9f, 0xa9af, 0x0, 0x0);
        gbc.writeMem(0x6569, { 0xcb, 0xf6 });
        gbc.writeMem(0xa9af, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf694, gbc.sp());
        EXPECT(0x656b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa9af));
        // CB F6 035D
        gbc.setState(0x4f35, 0xb2bf, 0xe700, 0x5def, 0xafab, 0x1227, 0x0, 0x1);
        gbc.writeMem(0x1227, { 0xf7 });
        gbc.writeMem(0x4f35, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb2bf, gbc.sp());
        EXPECT(0x4f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0362
        gbc.setState(0xbb9c, 0x4c62, 0xe340, 0xec33, 0x3850, 0x4f0d, 0x1, 0x0);
        gbc.writeMem(0x4f0d, { 0xcd });
        gbc.writeMem(0xbb9c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4c62, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9c));
        EXPECT(0xf6, gbc.readMem(0xbb9d));
        // CB F6 0363
        gbc.setState(0xa977, 0xded1, 0x96a0, 0xacd4, 0xc7df, 0xccd5, 0x0, 0x0);
        gbc.writeMem(0xa977, { 0xcb, 0xf6 });
        gbc.writeMem(0xccd5, { 0xcd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xded1, gbc.sp());
        EXPECT(0xa979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa977));
        EXPECT(0xf6, gbc.readMem(0xa978));
        EXPECT(0xcd, gbc.readMem(0xccd5));
        // CB F6 0365
        gbc.setState(0x456d, 0x6676, 0x2e30, 0xbb71, 0x7189, 0xdd68, 0x0, 0x0);
        gbc.writeMem(0x456d, { 0xcb, 0xf6 });
        gbc.writeMem(0xdd68, { 0x74 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6676, gbc.sp());
        EXPECT(0x456f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xdd68));
        // CB F6 0366
        gbc.setState(0xc429, 0xca7d, 0xaee0, 0x7e85, 0x9022, 0x3be3, 0x1, 0x1);
        gbc.writeMem(0x3be3, { 0xc6 });
        gbc.writeMem(0xc429, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xca7d, gbc.sp());
        EXPECT(0xc42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc429));
        EXPECT(0xf6, gbc.readMem(0xc42a));
        // CB F6 0367
        gbc.setState(0x866e, 0xe2f3, 0xe180, 0xfb46, 0xde3e, 0x9b2e, 0x0, 0x1);
        gbc.writeMem(0x866e, { 0xcb, 0xf6 });
        gbc.writeMem(0x9b2e, { 0xb4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe2f3, gbc.sp());
        EXPECT(0x8670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866e));
        EXPECT(0xf6, gbc.readMem(0x866f));
        EXPECT(0xf4, gbc.readMem(0x9b2e));
        // CB F6 0368
        gbc.setState(0xce57, 0xfa85, 0xb0, 0x2cc1, 0xc7ea, 0xba9f, 0x1, 0x1);
        gbc.writeMem(0xba9f, { 0xc5 });
        gbc.writeMem(0xce57, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfa85, gbc.sp());
        EXPECT(0xce59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xba9f));
        EXPECT(0xcb, gbc.readMem(0xce57));
        EXPECT(0xf6, gbc.readMem(0xce58));
        // CB F6 0369
        gbc.setState(0x43d8, 0xe38d, 0xc530, 0x873e, 0x511e, 0x80de, 0x0, 0x0);
        gbc.writeMem(0x43d8, { 0xcb, 0xf6 });
        gbc.writeMem(0x80de, { 0xe2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe38d, gbc.sp());
        EXPECT(0x43da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x80de));
        // CB F6 036A
        gbc.setState(0xb502, 0x106e, 0x2010, 0x586a, 0x38de, 0xa25c, 0x0, 0x1);
        gbc.writeMem(0xa25c, { 0xcf });
        gbc.writeMem(0xb502, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x106e, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xa25c));
        EXPECT(0xcb, gbc.readMem(0xb502));
        EXPECT(0xf6, gbc.readMem(0xb503));
        // CB F6 036E
        gbc.setState(0x5d97, 0x6f4c, 0xdd10, 0xc7bb, 0xe311, 0xc37b, 0x1, 0x0);
        gbc.writeMem(0x5d97, { 0xcb, 0xf6 });
        gbc.writeMem(0xc37b, { 0xb6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6f4c, gbc.sp());
        EXPECT(0x5d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc37b));
        // CB F6 036F
        gbc.setState(0xa5d8, 0x67ad, 0xde0, 0x477a, 0x910a, 0xfd56, 0x0, 0x1);
        gbc.writeMem(0xa5d8, { 0xcb, 0xf6 });
        gbc.writeMem(0xfd56, { 0x4d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x67ad, gbc.sp());
        EXPECT(0xa5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d8));
        EXPECT(0xf6, gbc.readMem(0xa5d9));
        EXPECT(0x4d, gbc.readMem(0xfd56));
        // CB F6 0370
        gbc.setState(0x5f66, 0xfb51, 0xcf80, 0x54c7, 0xcd2a, 0xafe, 0x0, 0x1);
        gbc.writeMem(0xafe, { 0xf6 });
        gbc.writeMem(0x5f66, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0371
        gbc.setState(0xa0d8, 0xf8d5, 0x4840, 0x83bf, 0xf3e, 0x63a7, 0x0, 0x0);
        gbc.writeMem(0x63a7, { 0xcd });
        gbc.writeMem(0xa0d8, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf8d5, gbc.sp());
        EXPECT(0xa0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d8));
        EXPECT(0xf6, gbc.readMem(0xa0d9));
        // CB F6 0373
        gbc.setState(0x1ddf, 0x4c70, 0xa4c0, 0xd4b, 0x4531, 0xf5c5, 0x1, 0x0);
        gbc.writeMem(0x1ddf, { 0xcb, 0xf6 });
        gbc.writeMem(0xf5c5, { 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0x1de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xf5c5));
        // CB F6 0376
        gbc.setState(0x6c96, 0xf900, 0xf060, 0x9c09, 0xafc8, 0x202e, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0x71 });
        gbc.writeMem(0x6c96, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf900, gbc.sp());
        EXPECT(0x6c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 0377
        gbc.setState(0x9c93, 0x6d22, 0x29f0, 0x9964, 0x74c9, 0xa55b, 0x1, 0x0);
        gbc.writeMem(0x9c93, { 0xcb, 0xf6 });
        gbc.writeMem(0xa55b, { 0x18 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6d22, gbc.sp());
        EXPECT(0x9c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c93));
        EXPECT(0xf6, gbc.readMem(0x9c94));
        EXPECT(0x58, gbc.readMem(0xa55b));
        // CB F6 037A
        gbc.setState(0x7e1, 0xc2b, 0xa3a0, 0xdfc2, 0x4fb8, 0xd6dd, 0x1, 0x1);
        gbc.writeMem(0x7e1, { 0xcb, 0xf6 });
        gbc.writeMem(0xd6dd, { 0x9b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc2b, gbc.sp());
        EXPECT(0x7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd6dd));
        // CB F6 037C
        gbc.setState(0xb343, 0x5351, 0xe580, 0x24dd, 0x3b7b, 0xe845, 0x0, 0x0);
        gbc.writeMem(0xb343, { 0xcb, 0xf6 });
        gbc.writeMem(0xe845, { 0xab });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5351, gbc.sp());
        EXPECT(0xb345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb343));
        EXPECT(0xf6, gbc.readMem(0xb344));
        EXPECT(0xeb, gbc.readMem(0xe845));
        // CB F6 037D
        gbc.setState(0x7939, 0x2997, 0xd7c0, 0x7bd0, 0x7e06, 0xde5a, 0x1, 0x0);
        gbc.writeMem(0x7939, { 0xcb, 0xf6 });
        gbc.writeMem(0xde5a, { 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2997, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xde5a));
        // CB F6 037E
        gbc.setState(0x862f, 0x755c, 0x4300, 0x757d, 0xb3d1, 0x284b, 0x1, 0x1);
        gbc.writeMem(0x284b, { 0x75 });
        gbc.writeMem(0x862f, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x755c, gbc.sp());
        EXPECT(0x8631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862f));
        EXPECT(0xf6, gbc.readMem(0x8630));
        // CB F6 0380
        gbc.setState(0xa694, 0x149b, 0x1040, 0x7475, 0xc429, 0xc395, 0x1, 0x1);
        gbc.writeMem(0xa694, { 0xcb, 0xf6 });
        gbc.writeMem(0xc395, { 0xaa });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x149b, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa694));
        EXPECT(0xf6, gbc.readMem(0xa695));
        EXPECT(0xea, gbc.readMem(0xc395));
        // CB F6 0381
        gbc.setState(0x5fb1, 0x986f, 0xe1a0, 0x43a7, 0xfd77, 0xbe94, 0x0, 0x0);
        gbc.writeMem(0x5fb1, { 0xcb, 0xf6 });
        gbc.writeMem(0xbe94, { 0xc7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x986f, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xbe94));
        // CB F6 0382
        gbc.setState(0x6dbe, 0xbb1e, 0x8950, 0xf67e, 0x7bf9, 0x7986, 0x1, 0x0);
        gbc.writeMem(0x6dbe, { 0xcb, 0xf6 });
        gbc.writeMem(0x7986, { 0xe8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbb1e, gbc.sp());
        EXPECT(0x6dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0384
        gbc.setState(0x45ee, 0x2a9a, 0x4b20, 0xfda9, 0x8c78, 0xe4a5, 0x0, 0x1);
        gbc.writeMem(0x45ee, { 0xcb, 0xf6 });
        gbc.writeMem(0xe4a5, { 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a9a, gbc.sp());
        EXPECT(0x45f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xe4a5));
        // CB F6 0387
        gbc.setState(0xbb0d, 0xeba2, 0x12a0, 0x8d46, 0xb421, 0xbffc, 0x0, 0x1);
        gbc.writeMem(0xbb0d, { 0xcb, 0xf6 });
        gbc.writeMem(0xbffc, { 0x45 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xeba2, gbc.sp());
        EXPECT(0xbb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0d));
        EXPECT(0xf6, gbc.readMem(0xbb0e));
        EXPECT(0x45, gbc.readMem(0xbffc));
        // CB F6 0388
        gbc.setState(0xcbde, 0x54cc, 0xb750, 0x2381, 0xc4a2, 0xd78f, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0xf6 });
        gbc.writeMem(0xd78f, { 0x61 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x54cc, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbde));
        EXPECT(0xf6, gbc.readMem(0xcbdf));
        EXPECT(0x61, gbc.readMem(0xd78f));
        // CB F6 038A
        gbc.setState(0x591c, 0x7f6c, 0x3600, 0x6f7, 0x6bb9, 0x65b1, 0x0, 0x0);
        gbc.writeMem(0x591c, { 0xcb, 0xf6 });
        gbc.writeMem(0x65b1, { 0x61 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7f6c, gbc.sp());
        EXPECT(0x591e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 038B
        gbc.setState(0xaee2, 0x6bd3, 0xe0, 0x80fb, 0xcecb, 0x9716, 0x0, 0x1);
        gbc.writeMem(0x9716, { 0xdd });
        gbc.writeMem(0xaee2, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0xaee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9716));
        EXPECT(0xcb, gbc.readMem(0xaee2));
        EXPECT(0xf6, gbc.readMem(0xaee3));
        // CB F6 038C
        gbc.setState(0x8192, 0x5575, 0xd4b0, 0x5f29, 0xeda8, 0xb77c, 0x0, 0x1);
        gbc.writeMem(0x8192, { 0xcb, 0xf6 });
        gbc.writeMem(0xb77c, { 0x17 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5575, gbc.sp());
        EXPECT(0x8194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8192));
        EXPECT(0xf6, gbc.readMem(0x8193));
        EXPECT(0x57, gbc.readMem(0xb77c));
        // CB F6 038D
        gbc.setState(0x971d, 0x2404, 0x9110, 0x6b5d, 0xfe31, 0x87fa, 0x0, 0x0);
        gbc.writeMem(0x87fa, { 0x4d });
        gbc.writeMem(0x971d, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2404, gbc.sp());
        EXPECT(0x971f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x87fa));
        EXPECT(0xcb, gbc.readMem(0x971d));
        EXPECT(0xf6, gbc.readMem(0x971e));
        // CB F6 038E
        gbc.setState(0x73ed, 0xf4e0, 0x3930, 0x5015, 0x9cae, 0x39f9, 0x1, 0x0);
        gbc.writeMem(0x39f9, { 0x7d });
        gbc.writeMem(0x73ed, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf4e0, gbc.sp());
        EXPECT(0x73ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0390
        gbc.setState(0x3a6c, 0xdad6, 0xe340, 0x89c0, 0x2740, 0xe6c3, 0x0, 0x1);
        gbc.writeMem(0x3a6c, { 0xcb, 0xf6 });
        gbc.writeMem(0xe6c3, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdad6, gbc.sp());
        EXPECT(0x3a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xe6c3));
        // CB F6 0394
        gbc.setState(0x2172, 0x8aac, 0x63d0, 0xe2ca, 0xe89, 0xa41, 0x0, 0x1);
        gbc.writeMem(0xa41, { 0xf0 });
        gbc.writeMem(0x2172, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8aac, gbc.sp());
        EXPECT(0x2174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 0395
        gbc.setState(0x2889, 0xd2be, 0x5050, 0x670c, 0xdca6, 0xda9c, 0x1, 0x1);
        gbc.writeMem(0x2889, { 0xcb, 0xf6 });
        gbc.writeMem(0xda9c, { 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd2be, gbc.sp());
        EXPECT(0x288b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xda9c));
        // CB F6 0398
        gbc.setState(0x90be, 0x7d34, 0xf730, 0x61dd, 0xb232, 0xcbf8, 0x0, 0x1);
        gbc.writeMem(0x90be, { 0xcb, 0xf6 });
        gbc.writeMem(0xcbf8, { 0x42 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7d34, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90be));
        EXPECT(0xf6, gbc.readMem(0x90bf));
        EXPECT(0x42, gbc.readMem(0xcbf8));
        // CB F6 0399
        gbc.setState(0x55d2, 0x1867, 0xdc60, 0x489c, 0xcb39, 0xde1b, 0x0, 0x0);
        gbc.writeMem(0x55d2, { 0xcb, 0xf6 });
        gbc.writeMem(0xde1b, { 0xb4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1867, gbc.sp());
        EXPECT(0x55d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xde1b));
        // CB F6 039A
        gbc.setState(0xb48e, 0xcd1b, 0x510, 0xb6d5, 0xc742, 0x9ee3, 0x1, 0x0);
        gbc.writeMem(0x9ee3, { 0x5c });
        gbc.writeMem(0xb48e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcd1b, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9ee3));
        EXPECT(0xcb, gbc.readMem(0xb48e));
        EXPECT(0xf6, gbc.readMem(0xb48f));
        // CB F6 039C
        gbc.setState(0xbea1, 0x5bce, 0xca70, 0xd37d, 0x8d04, 0xa78c, 0x1, 0x1);
        gbc.writeMem(0xa78c, { 0xb });
        gbc.writeMem(0xbea1, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5bce, gbc.sp());
        EXPECT(0xbea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa78c));
        EXPECT(0xcb, gbc.readMem(0xbea1));
        EXPECT(0xf6, gbc.readMem(0xbea2));
        // CB F6 039D
        gbc.setState(0x4b03, 0x2b10, 0xa580, 0x89ad, 0xf2b9, 0xcdc7, 0x0, 0x0);
        gbc.writeMem(0x4b03, { 0xcb, 0xf6 });
        gbc.writeMem(0xcdc7, { 0x17 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2b10, gbc.sp());
        EXPECT(0x4b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcdc7));
        // CB F6 039E
        gbc.setState(0x8b13, 0x538a, 0x5f00, 0xb8cd, 0x5d7e, 0x5cba, 0x1, 0x0);
        gbc.writeMem(0x5cba, { 0xd3 });
        gbc.writeMem(0x8b13, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x538a, gbc.sp());
        EXPECT(0x8b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b13));
        EXPECT(0xf6, gbc.readMem(0x8b14));
        // CB F6 039F
        gbc.setState(0x163f, 0x7fcc, 0x43b0, 0xa34e, 0xa36, 0x3e1c, 0x0, 0x1);
        gbc.writeMem(0x163f, { 0xcb, 0xf6 });
        gbc.writeMem(0x3e1c, { 0xdc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7fcc, gbc.sp());
        EXPECT(0x1641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 03A0
        gbc.setState(0xa6b8, 0xd411, 0xf890, 0xd972, 0x6032, 0xb814, 0x1, 0x0);
        gbc.writeMem(0xa6b8, { 0xcb, 0xf6 });
        gbc.writeMem(0xb814, { 0xcb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd411, gbc.sp());
        EXPECT(0xa6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b8));
        EXPECT(0xf6, gbc.readMem(0xa6b9));
        EXPECT(0xcb, gbc.readMem(0xb814));
        // CB F6 03A1
        gbc.setState(0xe5f7, 0x42a3, 0xfc20, 0x4f74, 0x7d99, 0x85af, 0x1, 0x1);
        gbc.writeMem(0x85af, { 0xd });
        gbc.writeMem(0xe5f7, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x42a3, gbc.sp());
        EXPECT(0xe5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x85af));
        EXPECT(0xcb, gbc.readMem(0xe5f7));
        EXPECT(0xf6, gbc.readMem(0xe5f8));
        // CB F6 03A2
        gbc.setState(0x5dca, 0x5637, 0x15f0, 0xbd11, 0x839b, 0x7fec, 0x1, 0x0);
        gbc.writeMem(0x5dca, { 0xcb, 0xf6 });
        gbc.writeMem(0x7fec, { 0x7c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5637, gbc.sp());
        EXPECT(0x5dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 03A3
        gbc.setState(0xc76c, 0x5434, 0x8ed0, 0x1014, 0xa20f, 0xa1d8, 0x0, 0x0);
        gbc.writeMem(0xa1d8, { 0x8c });
        gbc.writeMem(0xc76c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5434, gbc.sp());
        EXPECT(0xc76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa1d8));
        EXPECT(0xcb, gbc.readMem(0xc76c));
        EXPECT(0xf6, gbc.readMem(0xc76d));
        // CB F6 03A7
        gbc.setState(0x31ed, 0xbc8e, 0xa40, 0x6df9, 0xdf35, 0x8632, 0x0, 0x1);
        gbc.writeMem(0x31ed, { 0xcb, 0xf6 });
        gbc.writeMem(0x8632, { 0x34 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbc8e, gbc.sp());
        EXPECT(0x31ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8632));
        // CB F6 03A8
        gbc.setState(0xed64, 0x9559, 0xb6c0, 0x1cad, 0xaea9, 0xf0cb, 0x0, 0x1);
        gbc.writeMem(0xed64, { 0xcb, 0xf6 });
        gbc.writeMem(0xf0cb, { 0xdc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9559, gbc.sp());
        EXPECT(0xed66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed64));
        EXPECT(0xf6, gbc.readMem(0xed65));
        EXPECT(0xdc, gbc.readMem(0xf0cb));
        // CB F6 03A9
        gbc.setState(0x25ed, 0x13dd, 0x9880, 0x802c, 0x2ec6, 0x1e29, 0x1, 0x1);
        gbc.writeMem(0x1e29, { 0x6b });
        gbc.writeMem(0x25ed, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x13dd, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 03AA
        gbc.setState(0x4e0, 0xe37c, 0x13d0, 0xdeb2, 0xfb8b, 0xb51e, 0x1, 0x0);
        gbc.writeMem(0x4e0, { 0xcb, 0xf6 });
        gbc.writeMem(0xb51e, { 0xfa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe37c, gbc.sp());
        EXPECT(0x4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb51e));
        // CB F6 03AB
        gbc.setState(0x9fd5, 0x710e, 0xb210, 0x2b83, 0x869, 0xa072, 0x1, 0x1);
        gbc.writeMem(0x9fd5, { 0xcb, 0xf6 });
        gbc.writeMem(0xa072, { 0xc7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x710e, gbc.sp());
        EXPECT(0x9fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd5));
        EXPECT(0xf6, gbc.readMem(0x9fd6));
        EXPECT(0xc7, gbc.readMem(0xa072));
        // CB F6 03AD
        gbc.setState(0x6aba, 0xc54f, 0xa4b0, 0xbcba, 0x73ad, 0xb265, 0x1, 0x1);
        gbc.writeMem(0x6aba, { 0xcb, 0xf6 });
        gbc.writeMem(0xb265, { 0x36 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0x6abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb265));
        // CB F6 03AF
        gbc.setState(0x9e4c, 0xfd41, 0x8a10, 0x42b9, 0x1308, 0xbb1a, 0x1, 0x1);
        gbc.writeMem(0x9e4c, { 0xcb, 0xf6 });
        gbc.writeMem(0xbb1a, { 0x90 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfd41, gbc.sp());
        EXPECT(0x9e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4c));
        EXPECT(0xf6, gbc.readMem(0x9e4d));
        EXPECT(0xd0, gbc.readMem(0xbb1a));
        // CB F6 03B0
        gbc.setState(0x7d30, 0x73c6, 0x32b0, 0x8e39, 0x2c61, 0xb67f, 0x1, 0x1);
        gbc.writeMem(0x7d30, { 0xcb, 0xf6 });
        gbc.writeMem(0xb67f, { 0x5e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x73c6, gbc.sp());
        EXPECT(0x7d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb67f));
        // CB F6 03B2
        gbc.setState(0xed3c, 0xa2cb, 0xfcd0, 0x7e27, 0x6f40, 0x4456, 0x1, 0x0);
        gbc.writeMem(0x4456, { 0xf9 });
        gbc.writeMem(0xed3c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa2cb, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3c));
        EXPECT(0xf6, gbc.readMem(0xed3d));
        // CB F6 03B5
        gbc.setState(0x5b06, 0xf379, 0x28a0, 0xe1d0, 0x2917, 0x7752, 0x1, 0x1);
        gbc.writeMem(0x5b06, { 0xcb, 0xf6 });
        gbc.writeMem(0x7752, { 0x4c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf379, gbc.sp());
        EXPECT(0x5b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 03B6
        gbc.setState(0xa6d4, 0xa1d5, 0xf020, 0x74ac, 0x1ebe, 0xe64c, 0x0, 0x1);
        gbc.writeMem(0xa6d4, { 0xcb, 0xf6 });
        gbc.writeMem(0xe64c, { 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa1d5, gbc.sp());
        EXPECT(0xa6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d4));
        EXPECT(0xf6, gbc.readMem(0xa6d5));
        EXPECT(0x58, gbc.readMem(0xe64c));
        // CB F6 03B7
        gbc.setState(0x3585, 0xd5e, 0xa180, 0xf126, 0xe5ee, 0x3d2c, 0x1, 0x1);
        gbc.writeMem(0x3585, { 0xcb, 0xf6 });
        gbc.writeMem(0x3d2c, { 0xfe });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd5e, gbc.sp());
        EXPECT(0x3587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 03BA
        gbc.setState(0x906d, 0xa808, 0xc060, 0xdb4f, 0x401c, 0xcb15, 0x0, 0x1);
        gbc.writeMem(0x906d, { 0xcb, 0xf6 });
        gbc.writeMem(0xcb15, { 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa808, gbc.sp());
        EXPECT(0x906f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906d));
        EXPECT(0xf6, gbc.readMem(0x906e));
        EXPECT(0x53, gbc.readMem(0xcb15));
        // CB F6 03BB
        gbc.setState(0xe034, 0xbda8, 0x6c40, 0x662, 0x8b7f, 0xf233, 0x0, 0x1);
        gbc.writeMem(0xe034, { 0xcb, 0xf6 });
        gbc.writeMem(0xf233, { 0xb2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbda8, gbc.sp());
        EXPECT(0xe036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe034));
        EXPECT(0xf6, gbc.readMem(0xe035));
        EXPECT(0xf2, gbc.readMem(0xf233));
        // CB F6 03BC
        gbc.setState(0x15c2, 0xa9d8, 0x9ed0, 0x168d, 0x6313, 0xff5, 0x1, 0x1);
        gbc.writeMem(0xff5, { 0xf5 });
        gbc.writeMem(0x15c2, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0x15c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 03BE
        gbc.setState(0x9706, 0x10e9, 0x7d60, 0x619f, 0x5b2, 0x334e, 0x1, 0x0);
        gbc.writeMem(0x334e, { 0x51 });
        gbc.writeMem(0x9706, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0x9708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9706));
        EXPECT(0xf6, gbc.readMem(0x9707));
        // CB F6 03C0
        gbc.setState(0xd599, 0xef40, 0x42d0, 0x13b0, 0xb48f, 0xba86, 0x0, 0x0);
        gbc.writeMem(0xba86, { 0xf1 });
        gbc.writeMem(0xd599, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xef40, gbc.sp());
        EXPECT(0xd59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xba86));
        EXPECT(0xcb, gbc.readMem(0xd599));
        EXPECT(0xf6, gbc.readMem(0xd59a));
        // CB F6 03C1
        gbc.setState(0x2b40, 0x65e, 0x8750, 0x99fa, 0x30c8, 0x1687, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0x65 });
        gbc.writeMem(0x2b40, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x65e, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 03C3
        gbc.setState(0x7b0c, 0xfcc2, 0x89f0, 0xffa7, 0xf6bf, 0x1a5e, 0x1, 0x0);
        gbc.writeMem(0x1a5e, { 0xc2 });
        gbc.writeMem(0x7b0c, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfcc2, gbc.sp());
        EXPECT(0x7b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 03C5
        gbc.setState(0x182e, 0x4ccd, 0x6e70, 0x79df, 0xfe89, 0x747b, 0x1, 0x0);
        gbc.writeMem(0x182e, { 0xcb, 0xf6 });
        gbc.writeMem(0x747b, { 0xf9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4ccd, gbc.sp());
        EXPECT(0x1830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 03C6
        gbc.setState(0x33fe, 0x3eaa, 0xa440, 0xdc8b, 0x9ced, 0xd39, 0x0, 0x1);
        gbc.writeMem(0xd39, { 0x5e });
        gbc.writeMem(0x33fe, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3eaa, gbc.sp());
        EXPECT(0x3400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 03C7
        gbc.setState(0xe806, 0xd06, 0x5dc0, 0x17c3, 0x3047, 0xdb0b, 0x1, 0x1);
        gbc.writeMem(0xdb0b, { 0xa7 });
        gbc.writeMem(0xe806, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd06, gbc.sp());
        EXPECT(0xe808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdb0b));
        EXPECT(0xcb, gbc.readMem(0xe806));
        EXPECT(0xf6, gbc.readMem(0xe807));
        // CB F6 03C9
        gbc.setState(0x1457, 0x6e0e, 0x7af0, 0xcf3e, 0x39fd, 0xd52d, 0x1, 0x1);
        gbc.writeMem(0x1457, { 0xcb, 0xf6 });
        gbc.writeMem(0xd52d, { 0xe6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6e0e, gbc.sp());
        EXPECT(0x1459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd52d));
        // CB F6 03CA
        gbc.setState(0x4ed0, 0x692e, 0x75d0, 0x3d05, 0x4ebc, 0x5b41, 0x0, 0x0);
        gbc.writeMem(0x4ed0, { 0xcb, 0xf6 });
        gbc.writeMem(0x5b41, { 0x63 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0x4ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F6 03CC
        gbc.setState(0x8e2e, 0x2fc6, 0xbf50, 0xc600, 0xecfb, 0x5ef7, 0x1, 0x1);
        gbc.writeMem(0x5ef7, { 0xdb });
        gbc.writeMem(0x8e2e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2fc6, gbc.sp());
        EXPECT(0x8e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2e));
        EXPECT(0xf6, gbc.readMem(0x8e2f));
        // CB F6 03CD
        gbc.setState(0x8f0, 0x16ae, 0xe6e0, 0xa059, 0x7b59, 0xd37c, 0x0, 0x1);
        gbc.writeMem(0x8f0, { 0xcb, 0xf6 });
        gbc.writeMem(0xd37c, { 0x22 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x16ae, gbc.sp());
        EXPECT(0x8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xd37c));
        // CB F6 03CE
        gbc.setState(0x1425, 0x8ea3, 0x5050, 0x4e28, 0xd111, 0xff1a, 0x1, 0x1);
        gbc.writeMem(0x1425, { 0xcb, 0xf6 });
        gbc.writeMem(0xff1a, { 0x76 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8ea3, gbc.sp());
        EXPECT(0x1427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff1a));
        // CB F6 03D0
        gbc.setState(0xe33e, 0x433a, 0xdb90, 0x5484, 0xa75e, 0x52a6, 0x1, 0x0);
        gbc.writeMem(0x52a6, { 0x60 });
        gbc.writeMem(0xe33e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x433a, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33e));
        EXPECT(0xf6, gbc.readMem(0xe33f));
        // CB F6 03D1
        gbc.setState(0x8ba9, 0xd344, 0x4600, 0xdddb, 0x2e5, 0xa97f, 0x1, 0x0);
        gbc.writeMem(0x8ba9, { 0xcb, 0xf6 });
        gbc.writeMem(0xa97f, { 0x4d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd344, gbc.sp());
        EXPECT(0x8bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba9));
        EXPECT(0xf6, gbc.readMem(0x8baa));
        EXPECT(0x4d, gbc.readMem(0xa97f));
        // CB F6 03D2
        gbc.setState(0xbea9, 0x7a12, 0x98e0, 0xa7c5, 0xd511, 0xd939, 0x1, 0x0);
        gbc.writeMem(0xbea9, { 0xcb, 0xf6 });
        gbc.writeMem(0xd939, { 0x1c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7a12, gbc.sp());
        EXPECT(0xbeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea9));
        EXPECT(0xf6, gbc.readMem(0xbeaa));
        EXPECT(0x5c, gbc.readMem(0xd939));
        // CB F6 03D3
        gbc.setState(0x719a, 0xa81b, 0x2be0, 0x668c, 0x27a7, 0xf855, 0x0, 0x0);
        gbc.writeMem(0x719a, { 0xcb, 0xf6 });
        gbc.writeMem(0xf855, { 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0x719c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf855));
        // CB F6 03D6
        gbc.setState(0xaa13, 0x1f9e, 0xd6d0, 0x54c7, 0x6bb, 0xb17d, 0x1, 0x0);
        gbc.writeMem(0xaa13, { 0xcb, 0xf6 });
        gbc.writeMem(0xb17d, { 0x7a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1f9e, gbc.sp());
        EXPECT(0xaa15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa13));
        EXPECT(0xf6, gbc.readMem(0xaa14));
        EXPECT(0x7a, gbc.readMem(0xb17d));
        // CB F6 03D7
        gbc.setState(0xada, 0xe29e, 0x5580, 0xddfa, 0xdaa1, 0x8ae1, 0x0, 0x1);
        gbc.writeMem(0xada, { 0xcb, 0xf6 });
        gbc.writeMem(0x8ae1, { 0x81 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe29e, gbc.sp());
        EXPECT(0xadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8ae1));
        // CB F6 03D9
        gbc.setState(0x69f9, 0xd495, 0xf690, 0x328f, 0xe948, 0xb733, 0x0, 0x0);
        gbc.writeMem(0x69f9, { 0xcb, 0xf6 });
        gbc.writeMem(0xb733, { 0xbf });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd495, gbc.sp());
        EXPECT(0x69fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb733));
        // CB F6 03DA
        gbc.setState(0xe3f2, 0x7faf, 0x4da0, 0x38e, 0xc16d, 0xc38c, 0x1, 0x1);
        gbc.writeMem(0xc38c, { 0x4a });
        gbc.writeMem(0xe3f2, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0xe3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xc38c));
        EXPECT(0xcb, gbc.readMem(0xe3f2));
        EXPECT(0xf6, gbc.readMem(0xe3f3));
        // CB F6 03DB
        gbc.setState(0xe522, 0x8fc8, 0x54a0, 0xdd48, 0xcf5d, 0xc2f8, 0x1, 0x1);
        gbc.writeMem(0xc2f8, { 0x5a });
        gbc.writeMem(0xe522, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0xe524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xc2f8));
        EXPECT(0xcb, gbc.readMem(0xe522));
        EXPECT(0xf6, gbc.readMem(0xe523));
        // CB F6 03DC
        gbc.setState(0x9280, 0x98fc, 0x71b0, 0xc549, 0xf32b, 0xa885, 0x1, 0x0);
        gbc.writeMem(0x9280, { 0xcb, 0xf6 });
        gbc.writeMem(0xa885, { 0xa8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x98fc, gbc.sp());
        EXPECT(0x9282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9280));
        EXPECT(0xf6, gbc.readMem(0x9281));
        EXPECT(0xe8, gbc.readMem(0xa885));
        // CB F6 03DD
        gbc.setState(0x34fe, 0x9b3a, 0x39c0, 0x96b7, 0xbc8d, 0x3d22, 0x1, 0x1);
        gbc.writeMem(0x34fe, { 0xcb, 0xf6 });
        gbc.writeMem(0x3d22, { 0xfb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9b3a, gbc.sp());
        EXPECT(0x3500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F6 03DF
        gbc.setState(0x90e3, 0xf8b0, 0x3650, 0x1029, 0xe20e, 0xdcf2, 0x1, 0x1);
        gbc.writeMem(0x90e3, { 0xcb, 0xf6 });
        gbc.writeMem(0xdcf2, { 0x33 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf8b0, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e3));
        EXPECT(0xf6, gbc.readMem(0x90e4));
        EXPECT(0x73, gbc.readMem(0xdcf2));
        // CB F6 03E1
        gbc.setState(0xe1ab, 0x2efd, 0x2120, 0xb7ac, 0x417, 0xc1a0, 0x0, 0x1);
        gbc.writeMem(0xc1a0, { 0xb });
        gbc.writeMem(0xe1ab, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2efd, gbc.sp());
        EXPECT(0xe1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc1a0));
        EXPECT(0xcb, gbc.readMem(0xe1ab));
        EXPECT(0xf6, gbc.readMem(0xe1ac));
        // CB F6 03E4
        gbc.setState(0x9957, 0x10cc, 0x6a40, 0x76c5, 0xdaa3, 0x1b29, 0x1, 0x1);
        gbc.writeMem(0x1b29, { 0xea });
        gbc.writeMem(0x9957, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x10cc, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9957));
        EXPECT(0xf6, gbc.readMem(0x9958));
        // CB F6 03E5
        gbc.setState(0x54fb, 0x9d27, 0x1e00, 0xc58c, 0x72de, 0xdef8, 0x0, 0x1);
        gbc.writeMem(0x54fb, { 0xcb, 0xf6 });
        gbc.writeMem(0xdef8, { 0x36 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9d27, gbc.sp());
        EXPECT(0x54fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdef8));
        // CB F6 03E7
        gbc.setState(0x600e, 0x14c6, 0xb820, 0x6104, 0x33c4, 0x712, 0x1, 0x1);
        gbc.writeMem(0x712, { 0x4e });
        gbc.writeMem(0x600e, { 0xcb, 0xf6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x14c6, gbc.sp());
        EXPECT(0x6010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
