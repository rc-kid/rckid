    TEST(gbcemu, opcode_e7) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E7 0001
        gbc.setState(0xcc5a, 0xda74, 0x6920, 0x8f49, 0x3199, 0x9ca0, 0x1, 0x1);
        gbc.writeMem(0xcc5a, { 0xe7 });
        gbc.writeMem(0xda72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xda72, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xcc5a));
        EXPECT(0x5b, gbc.readMem(0xda72));
        EXPECT(0xcc, gbc.readMem(0xda73));
        // E7 0002
        gbc.setState(0x6c33, 0xe5c8, 0xd5c0, 0x1b5f, 0xa166, 0xca96, 0x1, 0x0);
        gbc.writeMem(0x6c33, { 0xe7 });
        gbc.writeMem(0xe5c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xe5c6));
        EXPECT(0x6c, gbc.readMem(0xe5c7));
        // E7 0004
        gbc.setState(0x2050, 0xb6be, 0xb540, 0x909c, 0xd291, 0x60ee, 0x0, 0x0);
        gbc.writeMem(0x2050, { 0xe7 });
        gbc.writeMem(0xb6bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb6bc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb6bc));
        EXPECT(0x20, gbc.readMem(0xb6bd));
        // E7 0007
        gbc.setState(0x3c04, 0xae6a, 0x3980, 0xd39e, 0x12ab, 0xd73c, 0x1, 0x1);
        gbc.writeMem(0x3c04, { 0xe7 });
        gbc.writeMem(0xae68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xae68, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xae68));
        EXPECT(0x3c, gbc.readMem(0xae69));
        // E7 000A
        gbc.setState(0xa4d6, 0xe8fd, 0xdd40, 0x4476, 0xe0d4, 0x9bee, 0x1, 0x0);
        gbc.writeMem(0xa4d6, { 0xe7 });
        gbc.writeMem(0xe8fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe8fb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa4d6));
        EXPECT(0xd7, gbc.readMem(0xe8fb));
        EXPECT(0xa4, gbc.readMem(0xe8fc));
        // E7 000D
        gbc.setState(0x2f90, 0x9717, 0xc360, 0xf04c, 0x928, 0x1a99, 0x1, 0x0);
        gbc.writeMem(0x2f90, { 0xe7 });
        gbc.writeMem(0x9715, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9715, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9715));
        EXPECT(0x2f, gbc.readMem(0x9716));
        // E7 000E
        gbc.setState(0xee4c, 0xbb26, 0x2390, 0xccdd, 0xce62, 0xcee0, 0x1, 0x0);
        gbc.writeMem(0xbb24, { 0x0, 0x0 });
        gbc.writeMem(0xee4c, { 0xe7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbb24, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbb24));
        EXPECT(0xee, gbc.readMem(0xbb25));
        EXPECT(0xe7, gbc.readMem(0xee4c));
        // E7 0011
        gbc.setState(0xe10b, 0x91ed, 0x9930, 0x146b, 0xe94, 0x86a5, 0x0, 0x1);
        gbc.writeMem(0x91eb, { 0x0, 0x0 });
        gbc.writeMem(0xe10b, { 0xe7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x91eb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x91eb));
        EXPECT(0xe1, gbc.readMem(0x91ec));
        EXPECT(0xe7, gbc.readMem(0xe10b));
        // E7 0014
        gbc.setState(0x6b37, 0xf9c6, 0x46f0, 0x29b4, 0x7ce9, 0xafe9, 0x1, 0x1);
        gbc.writeMem(0x6b37, { 0xe7 });
        gbc.writeMem(0xf9c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf9c4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xf9c4));
        EXPECT(0x6b, gbc.readMem(0xf9c5));
        // E7 0015
        gbc.setState(0x7567, 0xffc9, 0x5b10, 0x2a30, 0x813d, 0x8683, 0x0, 0x0);
        gbc.writeMem(0x7567, { 0xe7 });
        gbc.writeMem(0xffc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xffc7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xffc7));
        EXPECT(0x75, gbc.readMem(0xffc8));
        // E7 0016
        gbc.setState(0xd97f, 0xd4bf, 0xc330, 0x65bc, 0x36b9, 0xd23d, 0x1, 0x1);
        gbc.writeMem(0xd4bd, { 0x0, 0x0 });
        gbc.writeMem(0xd97f, { 0xe7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd4bd));
        EXPECT(0xd9, gbc.readMem(0xd4be));
        EXPECT(0xe7, gbc.readMem(0xd97f));
        // E7 0017
        gbc.setState(0x6ef2, 0x8b01, 0x38c0, 0xda06, 0x99, 0x6918, 0x1, 0x1);
        gbc.writeMem(0x6ef2, { 0xe7 });
        gbc.writeMem(0x8aff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8aff, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8aff));
        EXPECT(0x6e, gbc.readMem(0x8b00));
        // E7 0018
        gbc.setState(0x4599, 0x81a4, 0x25d0, 0x23d6, 0xe82, 0x84b3, 0x0, 0x0);
        gbc.writeMem(0x4599, { 0xe7 });
        gbc.writeMem(0x81a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x81a2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x81a2));
        EXPECT(0x45, gbc.readMem(0x81a3));
        // E7 001A
        gbc.setState(0x3d8b, 0x8ea3, 0x1ba0, 0xab57, 0x5069, 0x5e86, 0x0, 0x0);
        gbc.writeMem(0x3d8b, { 0xe7 });
        gbc.writeMem(0x8ea1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8ea1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8ea1));
        EXPECT(0x3d, gbc.readMem(0x8ea2));
        // E7 001C
        gbc.setState(0x6931, 0x9db2, 0x7920, 0x49b1, 0x35b7, 0xe9af, 0x1, 0x1);
        gbc.writeMem(0x6931, { 0xe7 });
        gbc.writeMem(0x9db0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9db0));
        EXPECT(0x69, gbc.readMem(0x9db1));
        // E7 001D
        gbc.setState(0x83af, 0x8403, 0xcb70, 0x255f, 0x1495, 0x813d, 0x0, 0x0);
        gbc.writeMem(0x83af, { 0xe7 });
        gbc.writeMem(0x8401, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8401, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x83af));
        EXPECT(0xb0, gbc.readMem(0x8401));
        EXPECT(0x83, gbc.readMem(0x8402));
        // E7 001F
        gbc.setState(0xeb73, 0xa334, 0xcea0, 0xeaed, 0x87e9, 0xe656, 0x1, 0x1);
        gbc.writeMem(0xa332, { 0x0, 0x0 });
        gbc.writeMem(0xeb73, { 0xe7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa332, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa332));
        EXPECT(0xeb, gbc.readMem(0xa333));
        EXPECT(0xe7, gbc.readMem(0xeb73));
        // E7 0020
        gbc.setState(0x5015, 0x9cbd, 0xf2f0, 0x80d8, 0x2d6a, 0xa616, 0x0, 0x1);
        gbc.writeMem(0x5015, { 0xe7 });
        gbc.writeMem(0x9cbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9cbb));
        EXPECT(0x50, gbc.readMem(0x9cbc));
        // E7 0023
        gbc.setState(0x758e, 0x8315, 0x550, 0xb5ad, 0x9eca, 0xa432, 0x0, 0x1);
        gbc.writeMem(0x758e, { 0xe7 });
        gbc.writeMem(0x8313, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8313, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8313));
        EXPECT(0x75, gbc.readMem(0x8314));
        // E7 0025
        gbc.setState(0xda13, 0xace4, 0x7fb0, 0xe82f, 0xdd89, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0xace2, { 0x0, 0x0 });
        gbc.writeMem(0xda13, { 0xe7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xace2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xace2));
        EXPECT(0xda, gbc.readMem(0xace3));
        EXPECT(0xe7, gbc.readMem(0xda13));
        // E7 0026
        gbc.setState(0x1b3, 0x90ae, 0x5110, 0xa046, 0x79f3, 0x9c52, 0x0, 0x1);
        gbc.writeMem(0x1b3, { 0xe7 });
        gbc.writeMem(0x90ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x90ac));
        EXPECT(0x1, gbc.readMem(0x90ad));
        // E7 0028
        gbc.setState(0xe89d, 0x9504, 0x36e0, 0x6e75, 0x943b, 0xea52, 0x0, 0x1);
        gbc.writeMem(0x9502, { 0x0, 0x0 });
        gbc.writeMem(0xe89d, { 0xe7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9502, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9502));
        EXPECT(0xe8, gbc.readMem(0x9503));
        EXPECT(0xe7, gbc.readMem(0xe89d));
        // E7 002A
        gbc.setState(0x582a, 0xe242, 0xade0, 0x239a, 0x46d6, 0x4c7a, 0x1, 0x1);
        gbc.writeMem(0x582a, { 0xe7 });
        gbc.writeMem(0xe240, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe240, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe240));
        EXPECT(0x58, gbc.readMem(0xe241));
        // E7 002B
        gbc.setState(0x4e19, 0xe58b, 0x6e70, 0xaab, 0x52fe, 0xab6d, 0x1, 0x1);
        gbc.writeMem(0x4e19, { 0xe7 });
        gbc.writeMem(0xe589, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe589, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe589));
        EXPECT(0x4e, gbc.readMem(0xe58a));
        // E7 002D
        gbc.setState(0x80cd, 0xb5df, 0x600, 0x2a65, 0x8f73, 0x37db, 0x0, 0x1);
        gbc.writeMem(0x80cd, { 0xe7 });
        gbc.writeMem(0xb5dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb5dd, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x80cd));
        EXPECT(0xce, gbc.readMem(0xb5dd));
        EXPECT(0x80, gbc.readMem(0xb5de));
        // E7 002F
        gbc.setState(0x61e2, 0x9a00, 0xc700, 0xa7d6, 0xeb18, 0xfb49, 0x1, 0x0);
        gbc.writeMem(0x61e2, { 0xe7 });
        gbc.writeMem(0x99fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x99fe, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x99fe));
        EXPECT(0x61, gbc.readMem(0x99ff));
        // E7 0030
        gbc.setState(0x2624, 0x8447, 0x4090, 0xb11f, 0xa43d, 0xeef4, 0x1, 0x0);
        gbc.writeMem(0x2624, { 0xe7 });
        gbc.writeMem(0x8445, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8445, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8445));
        EXPECT(0x26, gbc.readMem(0x8446));
        // E7 0031
        gbc.setState(0xc497, 0xaa97, 0xe310, 0x1551, 0x6f, 0x12c8, 0x1, 0x1);
        gbc.writeMem(0xaa95, { 0x0, 0x0 });
        gbc.writeMem(0xc497, { 0xe7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaa95, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaa95));
        EXPECT(0xc4, gbc.readMem(0xaa96));
        EXPECT(0xe7, gbc.readMem(0xc497));
        // E7 0038
        gbc.setState(0x46d9, 0xff3f, 0xe8d0, 0x16cf, 0xba08, 0x6a55, 0x1, 0x0);
        gbc.writeMem(0x46d9, { 0xe7 });
        gbc.writeMem(0xff3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xff3d));
        EXPECT(0x46, gbc.readMem(0xff3e));
        // E7 0039
        gbc.setState(0x94e6, 0xf861, 0x2e60, 0xf3c2, 0x1f68, 0x6bd8, 0x0, 0x0);
        gbc.writeMem(0x94e6, { 0xe7 });
        gbc.writeMem(0xf85f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf85f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x94e6));
        EXPECT(0xe7, gbc.readMem(0xf85f));
        EXPECT(0x94, gbc.readMem(0xf860));
        // E7 003E
        gbc.setState(0xa8b0, 0xf552, 0x4e70, 0x6dbf, 0x7e4b, 0x8db6, 0x0, 0x1);
        gbc.writeMem(0xa8b0, { 0xe7 });
        gbc.writeMem(0xf550, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf550, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa8b0));
        EXPECT(0xb1, gbc.readMem(0xf550));
        EXPECT(0xa8, gbc.readMem(0xf551));
        // E7 0041
        gbc.setState(0x1c7b, 0xee35, 0xbb60, 0x12f6, 0x8fbe, 0xd202, 0x1, 0x1);
        gbc.writeMem(0x1c7b, { 0xe7 });
        gbc.writeMem(0xee33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xee33, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xee33));
        EXPECT(0x1c, gbc.readMem(0xee34));
        // E7 0048
        gbc.setState(0xcbe5, 0xc9a5, 0x4880, 0x5ee0, 0x871b, 0xf6c0, 0x0, 0x0);
        gbc.writeMem(0xc9a3, { 0x0, 0x0 });
        gbc.writeMem(0xcbe5, { 0xe7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc9a3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc9a3));
        EXPECT(0xcb, gbc.readMem(0xc9a4));
        EXPECT(0xe7, gbc.readMem(0xcbe5));
        // E7 004A
        gbc.setState(0x6c2e, 0xed57, 0x8d0, 0x144d, 0x791f, 0x2d7f, 0x1, 0x1);
        gbc.writeMem(0x6c2e, { 0xe7 });
        gbc.writeMem(0xed55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xed55, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xed55));
        EXPECT(0x6c, gbc.readMem(0xed56));
        // E7 004B
        gbc.setState(0x3ba9, 0xc39f, 0x320, 0x97b3, 0xa90f, 0xd446, 0x1, 0x0);
        gbc.writeMem(0x3ba9, { 0xe7 });
        gbc.writeMem(0xc39d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc39d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc39d));
        EXPECT(0x3b, gbc.readMem(0xc39e));
        // E7 004D
        gbc.setState(0x2d40, 0xfedf, 0x8bb0, 0xee63, 0x6f06, 0xbd1a, 0x0, 0x1);
        gbc.writeMem(0x2d40, { 0xe7 });
        gbc.writeMem(0xfedd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfedd, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xfedd));
        EXPECT(0x2d, gbc.readMem(0xfede));
        // E7 004E
        gbc.setState(0xec9a, 0xf47d, 0x9b90, 0x91b2, 0x25a2, 0x27a8, 0x0, 0x1);
        gbc.writeMem(0xec9a, { 0xe7 });
        gbc.writeMem(0xf47b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf47b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xec9a));
        EXPECT(0x9b, gbc.readMem(0xf47b));
        EXPECT(0xec, gbc.readMem(0xf47c));
        // E7 004F
        gbc.setState(0x4b4f, 0xca01, 0x4d60, 0x276b, 0xc5fe, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0x4b4f, { 0xe7 });
        gbc.writeMem(0xc9ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc9ff, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc9ff));
        EXPECT(0x4b, gbc.readMem(0xca00));
        // E7 0051
        gbc.setState(0x6b78, 0x8ad2, 0x570, 0x4ec1, 0x3405, 0x6c58, 0x0, 0x0);
        gbc.writeMem(0x6b78, { 0xe7 });
        gbc.writeMem(0x8ad0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8ad0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8ad0));
        EXPECT(0x6b, gbc.readMem(0x8ad1));
        // E7 0052
        gbc.setState(0x2e11, 0xfb87, 0xbe80, 0x2aa0, 0x3b5b, 0xef20, 0x0, 0x1);
        gbc.writeMem(0x2e11, { 0xe7 });
        gbc.writeMem(0xfb85, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfb85, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xfb85));
        EXPECT(0x2e, gbc.readMem(0xfb86));
        // E7 0053
        gbc.setState(0x9f09, 0x9fc5, 0xc3c0, 0x2c11, 0x7ea2, 0x8368, 0x0, 0x0);
        gbc.writeMem(0x9f09, { 0xe7 });
        gbc.writeMem(0x9fc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9fc3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9f09));
        EXPECT(0xa, gbc.readMem(0x9fc3));
        EXPECT(0x9f, gbc.readMem(0x9fc4));
        // E7 0054
        gbc.setState(0x6486, 0x9a4b, 0x1c60, 0x869c, 0xe57, 0xa8ce, 0x1, 0x1);
        gbc.writeMem(0x6486, { 0xe7 });
        gbc.writeMem(0x9a49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9a49, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9a49));
        EXPECT(0x64, gbc.readMem(0x9a4a));
        // E7 005A
        gbc.setState(0xe0f2, 0xa968, 0x5ef0, 0xab44, 0x1ccd, 0x8e18, 0x0, 0x0);
        gbc.writeMem(0xa966, { 0x0, 0x0 });
        gbc.writeMem(0xe0f2, { 0xe7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa966, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa966));
        EXPECT(0xe0, gbc.readMem(0xa967));
        EXPECT(0xe7, gbc.readMem(0xe0f2));
        // E7 0066
        gbc.setState(0x81e, 0xa5b4, 0x9c90, 0x2da6, 0xc69c, 0x484f, 0x0, 0x1);
        gbc.writeMem(0x81e, { 0xe7 });
        gbc.writeMem(0xa5b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa5b2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa5b2));
        EXPECT(0x8, gbc.readMem(0xa5b3));
        // E7 0067
        gbc.setState(0x1e05, 0xc1f4, 0x4910, 0x91e5, 0x46ce, 0x8fe7, 0x1, 0x1);
        gbc.writeMem(0x1e05, { 0xe7 });
        gbc.writeMem(0xc1f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc1f2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc1f2));
        EXPECT(0x1e, gbc.readMem(0xc1f3));
        // E7 0068
        gbc.setState(0xa0c5, 0xfb49, 0x8480, 0x861e, 0xfbe8, 0xd64c, 0x1, 0x0);
        gbc.writeMem(0xa0c5, { 0xe7 });
        gbc.writeMem(0xfb47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfb47, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa0c5));
        EXPECT(0xc6, gbc.readMem(0xfb47));
        EXPECT(0xa0, gbc.readMem(0xfb48));
        // E7 006F
        gbc.setState(0xdbbb, 0x816c, 0xd1e0, 0x729b, 0x9007, 0x770d, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0x0, 0x0 });
        gbc.writeMem(0xdbbb, { 0xe7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x816a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x816a));
        EXPECT(0xdb, gbc.readMem(0x816b));
        EXPECT(0xe7, gbc.readMem(0xdbbb));
        // E7 0072
        gbc.setState(0x9611, 0xf081, 0xf060, 0xecf8, 0xfa52, 0xb880, 0x0, 0x1);
        gbc.writeMem(0x9611, { 0xe7 });
        gbc.writeMem(0xf07f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf07f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9611));
        EXPECT(0x12, gbc.readMem(0xf07f));
        EXPECT(0x96, gbc.readMem(0xf080));
        // E7 0073
        gbc.setState(0xc560, 0xbc22, 0xb20, 0xbc3d, 0x9d14, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0xbc20, { 0x0, 0x0 });
        gbc.writeMem(0xc560, { 0xe7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbc20, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbc20));
        EXPECT(0xc5, gbc.readMem(0xbc21));
        EXPECT(0xe7, gbc.readMem(0xc560));
        // E7 0075
        gbc.setState(0xb482, 0xf360, 0xbe0, 0xe0e4, 0xa775, 0x8774, 0x1, 0x1);
        gbc.writeMem(0xb482, { 0xe7 });
        gbc.writeMem(0xf35e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf35e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb482));
        EXPECT(0x83, gbc.readMem(0xf35e));
        EXPECT(0xb4, gbc.readMem(0xf35f));
        // E7 0079
        gbc.setState(0x5cc1, 0xcdb9, 0xd990, 0xd872, 0x88c9, 0x3c6b, 0x1, 0x1);
        gbc.writeMem(0x5cc1, { 0xe7 });
        gbc.writeMem(0xcdb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcdb7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcdb7));
        EXPECT(0x5c, gbc.readMem(0xcdb8));
        // E7 007B
        gbc.setState(0xe303, 0x8dc5, 0xea80, 0xd279, 0x2d5e, 0xca9a, 0x0, 0x1);
        gbc.writeMem(0x8dc3, { 0x0, 0x0 });
        gbc.writeMem(0xe303, { 0xe7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8dc3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8dc3));
        EXPECT(0xe3, gbc.readMem(0x8dc4));
        EXPECT(0xe7, gbc.readMem(0xe303));
        // E7 007C
        gbc.setState(0x96b, 0x9b94, 0xd10, 0xac1e, 0x8323, 0x9701, 0x1, 0x1);
        gbc.writeMem(0x96b, { 0xe7 });
        gbc.writeMem(0x9b92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9b92, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9b92));
        EXPECT(0x9, gbc.readMem(0x9b93));
        // E7 007D
        gbc.setState(0x8f1f, 0xa14d, 0x33d0, 0xe16d, 0x77df, 0x19d4, 0x1, 0x0);
        gbc.writeMem(0x8f1f, { 0xe7 });
        gbc.writeMem(0xa14b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8f1f));
        EXPECT(0x20, gbc.readMem(0xa14b));
        EXPECT(0x8f, gbc.readMem(0xa14c));
        // E7 0080
        gbc.setState(0xe2de, 0xa85e, 0xcd0, 0xc765, 0xfa83, 0x35fd, 0x0, 0x1);
        gbc.writeMem(0xa85c, { 0x0, 0x0 });
        gbc.writeMem(0xe2de, { 0xe7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa85c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa85c));
        EXPECT(0xe2, gbc.readMem(0xa85d));
        EXPECT(0xe7, gbc.readMem(0xe2de));
        // E7 0081
        gbc.setState(0x3527, 0xc092, 0xad90, 0xd7a2, 0xd3fb, 0x8681, 0x1, 0x1);
        gbc.writeMem(0x3527, { 0xe7 });
        gbc.writeMem(0xc090, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc090, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xc090));
        EXPECT(0x35, gbc.readMem(0xc091));
        // E7 0083
        gbc.setState(0x5257, 0xf9f6, 0x5660, 0xcf18, 0x6ca5, 0xeade, 0x1, 0x0);
        gbc.writeMem(0x5257, { 0xe7 });
        gbc.writeMem(0xf9f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf9f4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xf9f4));
        EXPECT(0x52, gbc.readMem(0xf9f5));
        // E7 0085
        gbc.setState(0x9d8f, 0xff14, 0x2b10, 0xd4e6, 0x99af, 0xa6b6, 0x1, 0x0);
        gbc.writeMem(0x9d8f, { 0xe7 });
        gbc.writeMem(0xff12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xff12, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9d8f));
        EXPECT(0x90, gbc.readMem(0xff12));
        EXPECT(0x9d, gbc.readMem(0xff13));
        // E7 0087
        gbc.setState(0xa8b7, 0xaf5f, 0x3200, 0x8223, 0x440, 0x840c, 0x0, 0x0);
        gbc.writeMem(0xa8b7, { 0xe7 });
        gbc.writeMem(0xaf5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaf5d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa8b7));
        EXPECT(0xb8, gbc.readMem(0xaf5d));
        EXPECT(0xa8, gbc.readMem(0xaf5e));
        // E7 0089
        gbc.setState(0x23d0, 0xd222, 0x8390, 0x56b7, 0xc84a, 0xeaa6, 0x0, 0x0);
        gbc.writeMem(0x23d0, { 0xe7 });
        gbc.writeMem(0xd220, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd220));
        EXPECT(0x23, gbc.readMem(0xd221));
        // E7 008A
        gbc.setState(0x6029, 0xd07f, 0x33f0, 0x4ba9, 0x3632, 0xbcb7, 0x1, 0x1);
        gbc.writeMem(0x6029, { 0xe7 });
        gbc.writeMem(0xd07d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd07d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd07d));
        EXPECT(0x60, gbc.readMem(0xd07e));
        // E7 008D
        gbc.setState(0x4cc6, 0x8ca1, 0xdb90, 0x796c, 0x2534, 0x2126, 0x1, 0x0);
        gbc.writeMem(0x4cc6, { 0xe7 });
        gbc.writeMem(0x8c9f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8c9f));
        EXPECT(0x4c, gbc.readMem(0x8ca0));
        // E7 008F
        gbc.setState(0x1237, 0xfe5a, 0x970, 0x1765, 0xbf37, 0x6465, 0x1, 0x0);
        gbc.writeMem(0x1237, { 0xe7 });
        gbc.writeMem(0xfe58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfe58, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xfe58));
        EXPECT(0x12, gbc.readMem(0xfe59));
        // E7 0091
        gbc.setState(0x2705, 0x9c4e, 0xe4b0, 0xff6f, 0x37b6, 0x6c09, 0x1, 0x1);
        gbc.writeMem(0x2705, { 0xe7 });
        gbc.writeMem(0x9c4c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9c4c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9c4c));
        EXPECT(0x27, gbc.readMem(0x9c4d));
        // E7 0093
        gbc.setState(0x1254, 0xf99e, 0xb6c0, 0x5711, 0xa339, 0x4393, 0x0, 0x1);
        gbc.writeMem(0x1254, { 0xe7 });
        gbc.writeMem(0xf99c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf99c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf99c));
        EXPECT(0x12, gbc.readMem(0xf99d));
        // E7 0097
        gbc.setState(0x4838, 0xbe1a, 0xf5a0, 0x5708, 0xa02f, 0xfcc4, 0x0, 0x1);
        gbc.writeMem(0x4838, { 0xe7 });
        gbc.writeMem(0xbe18, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbe18, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbe18));
        EXPECT(0x48, gbc.readMem(0xbe19));
        // E7 009B
        gbc.setState(0xdd02, 0xd1bb, 0x2a20, 0x80df, 0x18f9, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0xd1b9, { 0x0, 0x0 });
        gbc.writeMem(0xdd02, { 0xe7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd1b9, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd1b9));
        EXPECT(0xdd, gbc.readMem(0xd1ba));
        EXPECT(0xe7, gbc.readMem(0xdd02));
        // E7 009F
        gbc.setState(0xb75a, 0x93d4, 0x32f0, 0xf6ea, 0x1c97, 0x877e, 0x0, 0x1);
        gbc.writeMem(0x93d2, { 0x0, 0x0 });
        gbc.writeMem(0xb75a, { 0xe7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x93d2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x93d2));
        EXPECT(0xb7, gbc.readMem(0x93d3));
        EXPECT(0xe7, gbc.readMem(0xb75a));
        // E7 00A7
        gbc.setState(0x4e32, 0x984b, 0x8e20, 0xd5e, 0xf59, 0x76b4, 0x0, 0x1);
        gbc.writeMem(0x4e32, { 0xe7 });
        gbc.writeMem(0x9849, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9849));
        EXPECT(0x4e, gbc.readMem(0x984a));
        // E7 00A8
        gbc.setState(0x2b6c, 0xb39d, 0x6620, 0x2c68, 0x82ee, 0x6db3, 0x1, 0x0);
        gbc.writeMem(0x2b6c, { 0xe7 });
        gbc.writeMem(0xb39b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb39b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb39b));
        EXPECT(0x2b, gbc.readMem(0xb39c));
        // E7 00A9
        gbc.setState(0x809d, 0x9352, 0x4280, 0xcceb, 0x307c, 0x90ed, 0x0, 0x0);
        gbc.writeMem(0x809d, { 0xe7 });
        gbc.writeMem(0x9350, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9350, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x809d));
        EXPECT(0x9e, gbc.readMem(0x9350));
        EXPECT(0x80, gbc.readMem(0x9351));
        // E7 00AC
        gbc.setState(0xe14a, 0x8029, 0x2580, 0x330a, 0x279, 0x5038, 0x0, 0x1);
        gbc.writeMem(0x8027, { 0x0, 0x0 });
        gbc.writeMem(0xe14a, { 0xe7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8027));
        EXPECT(0xe1, gbc.readMem(0x8028));
        EXPECT(0xe7, gbc.readMem(0xe14a));
        // E7 00B0
        gbc.setState(0x56d2, 0xa310, 0x1fe0, 0x76c3, 0xdf67, 0x1d01, 0x0, 0x0);
        gbc.writeMem(0x56d2, { 0xe7 });
        gbc.writeMem(0xa30e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa30e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa30e));
        EXPECT(0x56, gbc.readMem(0xa30f));
        // E7 00B3
        gbc.setState(0x22a9, 0xe1a2, 0x2fb0, 0xf1f8, 0x9fa3, 0xd62b, 0x1, 0x1);
        gbc.writeMem(0x22a9, { 0xe7 });
        gbc.writeMem(0xe1a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe1a0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe1a0));
        EXPECT(0x22, gbc.readMem(0xe1a1));
        // E7 00BB
        gbc.setState(0xd454, 0x83f7, 0xd7c0, 0xd0c8, 0xb226, 0xd85f, 0x0, 0x0);
        gbc.writeMem(0x83f5, { 0x0, 0x0 });
        gbc.writeMem(0xd454, { 0xe7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x83f5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x83f5));
        EXPECT(0xd4, gbc.readMem(0x83f6));
        EXPECT(0xe7, gbc.readMem(0xd454));
        // E7 00BD
        gbc.setState(0xe733, 0xa1c7, 0x7960, 0xb5, 0x935f, 0x26d4, 0x1, 0x1);
        gbc.writeMem(0xa1c5, { 0x0, 0x0 });
        gbc.writeMem(0xe733, { 0xe7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa1c5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa1c5));
        EXPECT(0xe7, gbc.readMem(0xa1c6));
        EXPECT(0xe7, gbc.readMem(0xe733));
        // E7 00BE
        gbc.setState(0x89dc, 0x9999, 0x360, 0x96e, 0xcff7, 0x8e19, 0x1, 0x0);
        gbc.writeMem(0x89dc, { 0xe7 });
        gbc.writeMem(0x9997, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9997, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x89dc));
        EXPECT(0xdd, gbc.readMem(0x9997));
        EXPECT(0x89, gbc.readMem(0x9998));
        // E7 00BF
        gbc.setState(0x9aa2, 0x9ea2, 0x440, 0xb920, 0x6306, 0xa60e, 0x1, 0x0);
        gbc.writeMem(0x9aa2, { 0xe7 });
        gbc.writeMem(0x9ea0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9ea0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9aa2));
        EXPECT(0xa3, gbc.readMem(0x9ea0));
        EXPECT(0x9a, gbc.readMem(0x9ea1));
        // E7 00C0
        gbc.setState(0xcdca, 0x843c, 0xc8a0, 0xbe5b, 0x2313, 0xf98, 0x0, 0x1);
        gbc.writeMem(0x843a, { 0x0, 0x0 });
        gbc.writeMem(0xcdca, { 0xe7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x843a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843a));
        EXPECT(0xcd, gbc.readMem(0x843b));
        EXPECT(0xe7, gbc.readMem(0xcdca));
        // E7 00C1
        gbc.setState(0x68bb, 0x9105, 0xcaf0, 0xcb73, 0x8e6b, 0xa67a, 0x1, 0x1);
        gbc.writeMem(0x68bb, { 0xe7 });
        gbc.writeMem(0x9103, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9103, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9103));
        EXPECT(0x68, gbc.readMem(0x9104));
        // E7 00C2
        gbc.setState(0x1010, 0xe637, 0x5150, 0xddd9, 0x8975, 0xfbe4, 0x0, 0x0);
        gbc.writeMem(0x1010, { 0xe7 });
        gbc.writeMem(0xe635, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe635, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe635));
        EXPECT(0x10, gbc.readMem(0xe636));
        // E7 00C3
        gbc.setState(0x7c67, 0xfbe1, 0x62c0, 0x6791, 0x6084, 0xa4eb, 0x0, 0x0);
        gbc.writeMem(0x7c67, { 0xe7 });
        gbc.writeMem(0xfbdf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfbdf, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xfbdf));
        EXPECT(0x7c, gbc.readMem(0xfbe0));
        // E7 00C5
        gbc.setState(0x59f2, 0x8a5d, 0xb390, 0x392d, 0x45f4, 0x9547, 0x1, 0x0);
        gbc.writeMem(0x59f2, { 0xe7 });
        gbc.writeMem(0x8a5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8a5b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8a5b));
        EXPECT(0x59, gbc.readMem(0x8a5c));
        // E7 00C6
        gbc.setState(0x3ce, 0xd5f6, 0x2ba0, 0x29f5, 0xe85c, 0x9024, 0x0, 0x1);
        gbc.writeMem(0x3ce, { 0xe7 });
        gbc.writeMem(0xd5f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd5f4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd5f4));
        EXPECT(0x3, gbc.readMem(0xd5f5));
        // E7 00C7
        gbc.setState(0xdcd9, 0x82c6, 0xa1b0, 0x9f39, 0xe489, 0xc6c4, 0x0, 0x0);
        gbc.writeMem(0x82c4, { 0x0, 0x0 });
        gbc.writeMem(0xdcd9, { 0xe7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x82c4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x82c4));
        EXPECT(0xdc, gbc.readMem(0x82c5));
        EXPECT(0xe7, gbc.readMem(0xdcd9));
        // E7 00C8
        gbc.setState(0x7740, 0xc91c, 0x1880, 0xce77, 0xb632, 0xea34, 0x0, 0x1);
        gbc.writeMem(0x7740, { 0xe7 });
        gbc.writeMem(0xc91a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc91a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc91a));
        EXPECT(0x77, gbc.readMem(0xc91b));
        // E7 00CD
        gbc.setState(0x1396, 0xcf33, 0x5520, 0xcbce, 0xeb45, 0x22ce, 0x1, 0x1);
        gbc.writeMem(0x1396, { 0xe7 });
        gbc.writeMem(0xcf31, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcf31, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcf31));
        EXPECT(0x13, gbc.readMem(0xcf32));
        // E7 00D1
        gbc.setState(0x1b36, 0xa962, 0xfd60, 0x1c23, 0x17e, 0x9b34, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0xe7 });
        gbc.writeMem(0xa960, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa960, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa960));
        EXPECT(0x1b, gbc.readMem(0xa961));
        // E7 00D4
        gbc.setState(0x49c2, 0xe5b7, 0xddd0, 0xf53c, 0xd725, 0x6968, 0x0, 0x1);
        gbc.writeMem(0x49c2, { 0xe7 });
        gbc.writeMem(0xe5b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe5b5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe5b5));
        EXPECT(0x49, gbc.readMem(0xe5b6));
        // E7 00D5
        gbc.setState(0x627, 0xa762, 0x69d0, 0x17ed, 0x89d9, 0xc3cd, 0x1, 0x0);
        gbc.writeMem(0x627, { 0xe7 });
        gbc.writeMem(0xa760, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa760, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa760));
        EXPECT(0x6, gbc.readMem(0xa761));
        // E7 00D9
        gbc.setState(0xc3f8, 0xf551, 0xa4d0, 0x1cd3, 0x8bed, 0x7ce8, 0x0, 0x0);
        gbc.writeMem(0xc3f8, { 0xe7 });
        gbc.writeMem(0xf54f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf54f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc3f8));
        EXPECT(0xf9, gbc.readMem(0xf54f));
        EXPECT(0xc3, gbc.readMem(0xf550));
        // E7 00DC
        gbc.setState(0x2ee2, 0xcde6, 0x86a0, 0xae35, 0x181d, 0x690a, 0x0, 0x1);
        gbc.writeMem(0x2ee2, { 0xe7 });
        gbc.writeMem(0xcde4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcde4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xcde4));
        EXPECT(0x2e, gbc.readMem(0xcde5));
        // E7 00DD
        gbc.setState(0xd0e2, 0xd14f, 0xb3e0, 0x4360, 0x2d3d, 0x9312, 0x1, 0x0);
        gbc.writeMem(0xd0e2, { 0xe7 });
        gbc.writeMem(0xd14d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd14d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd0e2));
        EXPECT(0xe3, gbc.readMem(0xd14d));
        EXPECT(0xd0, gbc.readMem(0xd14e));
        // E7 00E0
        gbc.setState(0x202f, 0xb678, 0x67d0, 0xf78b, 0x85d9, 0xc53b, 0x1, 0x1);
        gbc.writeMem(0x202f, { 0xe7 });
        gbc.writeMem(0xb676, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb676, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb676));
        EXPECT(0x20, gbc.readMem(0xb677));
        // E7 00E2
        gbc.setState(0x1fd7, 0xaf4e, 0xe4f0, 0xcfa3, 0x1cbf, 0xd820, 0x1, 0x1);
        gbc.writeMem(0x1fd7, { 0xe7 });
        gbc.writeMem(0xaf4c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xaf4c));
        EXPECT(0x1f, gbc.readMem(0xaf4d));
        // E7 00E6
        gbc.setState(0x66cd, 0xa51d, 0xec0, 0xc995, 0xa01, 0x4081, 0x0, 0x1);
        gbc.writeMem(0x66cd, { 0xe7 });
        gbc.writeMem(0xa51b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa51b));
        EXPECT(0x66, gbc.readMem(0xa51c));
        // E7 00E8
        gbc.setState(0x5be1, 0xf647, 0x4aa0, 0xdbb4, 0x6cda, 0x3053, 0x1, 0x0);
        gbc.writeMem(0x5be1, { 0xe7 });
        gbc.writeMem(0xf645, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf645, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf645));
        EXPECT(0x5b, gbc.readMem(0xf646));
        // E7 00EA
        gbc.setState(0x2b28, 0xa024, 0xed50, 0xec8b, 0x50b8, 0xf015, 0x0, 0x1);
        gbc.writeMem(0x2b28, { 0xe7 });
        gbc.writeMem(0xa022, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa022, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa022));
        EXPECT(0x2b, gbc.readMem(0xa023));
        // E7 00EE
        gbc.setState(0xf70, 0xcdf2, 0x1800, 0xcd88, 0xd18c, 0x4e73, 0x0, 0x0);
        gbc.writeMem(0xf70, { 0xe7 });
        gbc.writeMem(0xcdf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcdf0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xcdf0));
        EXPECT(0xf, gbc.readMem(0xcdf1));
        // E7 00EF
        gbc.setState(0x668b, 0xff22, 0x3280, 0xdc7c, 0x3cee, 0x1060, 0x1, 0x0);
        gbc.writeMem(0x668b, { 0xe7 });
        gbc.writeMem(0xff20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xff20, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xff20));
        EXPECT(0x66, gbc.readMem(0xff21));
        // E7 00F3
        gbc.setState(0x8fed, 0xc479, 0x7900, 0x9c15, 0xd640, 0xddf7, 0x1, 0x0);
        gbc.writeMem(0x8fed, { 0xe7 });
        gbc.writeMem(0xc477, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8fed));
        EXPECT(0xee, gbc.readMem(0xc477));
        EXPECT(0x8f, gbc.readMem(0xc478));
        // E7 00F6
        gbc.setState(0xb84f, 0x812d, 0x8fd0, 0x520, 0xb8c, 0xaedd, 0x1, 0x1);
        gbc.writeMem(0x812b, { 0x0, 0x0 });
        gbc.writeMem(0xb84f, { 0xe7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x812b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x812b));
        EXPECT(0xb8, gbc.readMem(0x812c));
        EXPECT(0xe7, gbc.readMem(0xb84f));
        // E7 00F9
        gbc.setState(0xe586, 0xcd76, 0x7800, 0x53c2, 0x19e7, 0xdd1d, 0x1, 0x0);
        gbc.writeMem(0xcd74, { 0x0, 0x0 });
        gbc.writeMem(0xe586, { 0xe7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcd74, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd74));
        EXPECT(0xe5, gbc.readMem(0xcd75));
        EXPECT(0xe7, gbc.readMem(0xe586));
        // E7 00FA
        gbc.setState(0xbbb3, 0xe744, 0xf80, 0x11e0, 0x2270, 0x6a1c, 0x1, 0x0);
        gbc.writeMem(0xbbb3, { 0xe7 });
        gbc.writeMem(0xe742, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe742, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbbb3));
        EXPECT(0xb4, gbc.readMem(0xe742));
        EXPECT(0xbb, gbc.readMem(0xe743));
        // E7 00FD
        gbc.setState(0x5ca2, 0x8c63, 0x9f90, 0xedee, 0xcca5, 0x504b, 0x1, 0x0);
        gbc.writeMem(0x5ca2, { 0xe7 });
        gbc.writeMem(0x8c61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8c61, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8c61));
        EXPECT(0x5c, gbc.readMem(0x8c62));
        // E7 0100
        gbc.setState(0x37dd, 0xfa5f, 0x3f40, 0xc279, 0x3d8e, 0xcf82, 0x0, 0x1);
        gbc.writeMem(0x37dd, { 0xe7 });
        gbc.writeMem(0xfa5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfa5d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xfa5d));
        EXPECT(0x37, gbc.readMem(0xfa5e));
        // E7 0102
        gbc.setState(0x1e4a, 0xb1f9, 0xecb0, 0xa622, 0xd77c, 0xe4bb, 0x1, 0x1);
        gbc.writeMem(0x1e4a, { 0xe7 });
        gbc.writeMem(0xb1f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb1f7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb1f7));
        EXPECT(0x1e, gbc.readMem(0xb1f8));
        // E7 0103
        gbc.setState(0x6de8, 0x9bab, 0x3930, 0x719c, 0xc82b, 0x879d, 0x0, 0x1);
        gbc.writeMem(0x6de8, { 0xe7 });
        gbc.writeMem(0x9ba9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9ba9, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9ba9));
        EXPECT(0x6d, gbc.readMem(0x9baa));
        // E7 0105
        gbc.setState(0xdfc4, 0xca18, 0xd850, 0x8cb2, 0x71dc, 0xbac6, 0x1, 0x1);
        gbc.writeMem(0xca16, { 0x0, 0x0 });
        gbc.writeMem(0xdfc4, { 0xe7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xca16, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xca16));
        EXPECT(0xdf, gbc.readMem(0xca17));
        EXPECT(0xe7, gbc.readMem(0xdfc4));
        // E7 0107
        gbc.setState(0xe08d, 0xd6f6, 0xd680, 0x4a4d, 0xba1f, 0xdaaf, 0x0, 0x1);
        gbc.writeMem(0xd6f4, { 0x0, 0x0 });
        gbc.writeMem(0xe08d, { 0xe7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd6f4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd6f4));
        EXPECT(0xe0, gbc.readMem(0xd6f5));
        EXPECT(0xe7, gbc.readMem(0xe08d));
        // E7 0108
        gbc.setState(0x3911, 0xefdc, 0xc0, 0xae74, 0x124, 0x6a5e, 0x1, 0x1);
        gbc.writeMem(0x3911, { 0xe7 });
        gbc.writeMem(0xefda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xefda, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xefda));
        EXPECT(0x39, gbc.readMem(0xefdb));
        // E7 010D
        gbc.setState(0x6149, 0x9168, 0x9d50, 0x43d9, 0xc7f6, 0x5ae9, 0x0, 0x0);
        gbc.writeMem(0x6149, { 0xe7 });
        gbc.writeMem(0x9166, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9166, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9166));
        EXPECT(0x61, gbc.readMem(0x9167));
        // E7 0111
        gbc.setState(0x2930, 0xe36f, 0xb480, 0xf86b, 0x3186, 0x29ce, 0x1, 0x1);
        gbc.writeMem(0x2930, { 0xe7 });
        gbc.writeMem(0xe36d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe36d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe36d));
        EXPECT(0x29, gbc.readMem(0xe36e));
        // E7 0114
        gbc.setState(0x1eab, 0x9c83, 0x27d0, 0xea5f, 0x3e84, 0x15fa, 0x0, 0x1);
        gbc.writeMem(0x1eab, { 0xe7 });
        gbc.writeMem(0x9c81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9c81, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9c81));
        EXPECT(0x1e, gbc.readMem(0x9c82));
        // E7 0118
        gbc.setState(0x3b96, 0x880a, 0x6910, 0xdb6d, 0x93fd, 0xf855, 0x0, 0x0);
        gbc.writeMem(0x3b96, { 0xe7 });
        gbc.writeMem(0x8808, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8808, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8808));
        EXPECT(0x3b, gbc.readMem(0x8809));
        // E7 011B
        gbc.setState(0x1202, 0xe408, 0x6810, 0x5efa, 0x94d4, 0xb8a9, 0x0, 0x1);
        gbc.writeMem(0x1202, { 0xe7 });
        gbc.writeMem(0xe406, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe406, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe406));
        EXPECT(0x12, gbc.readMem(0xe407));
        // E7 011E
        gbc.setState(0xe23, 0xaa06, 0xd170, 0x7c1f, 0x840a, 0x8c91, 0x1, 0x0);
        gbc.writeMem(0xe23, { 0xe7 });
        gbc.writeMem(0xaa04, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaa04, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xaa04));
        EXPECT(0xe, gbc.readMem(0xaa05));
        // E7 0122
        gbc.setState(0x9dbf, 0x9145, 0x4460, 0x7b2b, 0xbb3a, 0xbd9b, 0x0, 0x0);
        gbc.writeMem(0x9143, { 0x0, 0x0 });
        gbc.writeMem(0x9dbf, { 0xe7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9143, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9143));
        EXPECT(0x9d, gbc.readMem(0x9144));
        EXPECT(0xe7, gbc.readMem(0x9dbf));
        // E7 0123
        gbc.setState(0x24bb, 0x93c1, 0x630, 0x3e2c, 0xb43d, 0x270f, 0x0, 0x1);
        gbc.writeMem(0x24bb, { 0xe7 });
        gbc.writeMem(0x93bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x93bf, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x93bf));
        EXPECT(0x24, gbc.readMem(0x93c0));
        // E7 0124
        gbc.setState(0xe37b, 0xfcec, 0x1960, 0x4c58, 0xa6e4, 0x713d, 0x1, 0x1);
        gbc.writeMem(0xe37b, { 0xe7 });
        gbc.writeMem(0xfcea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfcea, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe37b));
        EXPECT(0x7c, gbc.readMem(0xfcea));
        EXPECT(0xe3, gbc.readMem(0xfceb));
        // E7 0126
        gbc.setState(0xa1f1, 0xda4b, 0xed40, 0xd647, 0xa301, 0x8747, 0x0, 0x0);
        gbc.writeMem(0xa1f1, { 0xe7 });
        gbc.writeMem(0xda49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xda49, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa1f1));
        EXPECT(0xf2, gbc.readMem(0xda49));
        EXPECT(0xa1, gbc.readMem(0xda4a));
        // E7 012A
        gbc.setState(0xbb03, 0xd13b, 0x4e20, 0x55d3, 0xb3f4, 0xe2a3, 0x1, 0x0);
        gbc.writeMem(0xbb03, { 0xe7 });
        gbc.writeMem(0xd139, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd139, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbb03));
        EXPECT(0x4, gbc.readMem(0xd139));
        EXPECT(0xbb, gbc.readMem(0xd13a));
        // E7 0130
        gbc.setState(0xde6e, 0x8346, 0xeaa0, 0x9601, 0xe996, 0x4ae0, 0x0, 0x1);
        gbc.writeMem(0x8344, { 0x0, 0x0 });
        gbc.writeMem(0xde6e, { 0xe7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8344, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8344));
        EXPECT(0xde, gbc.readMem(0x8345));
        EXPECT(0xe7, gbc.readMem(0xde6e));
        // E7 0131
        gbc.setState(0x4920, 0xcb2b, 0x6c60, 0x5110, 0x2609, 0x2ad, 0x1, 0x1);
        gbc.writeMem(0x4920, { 0xe7 });
        gbc.writeMem(0xcb29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcb29, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcb29));
        EXPECT(0x49, gbc.readMem(0xcb2a));
        // E7 0132
        gbc.setState(0x66dc, 0xd78b, 0xe420, 0xcfea, 0x7350, 0x9c86, 0x1, 0x1);
        gbc.writeMem(0x66dc, { 0xe7 });
        gbc.writeMem(0xd789, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd789, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xd789));
        EXPECT(0x66, gbc.readMem(0xd78a));
        // E7 0134
        gbc.setState(0x4d75, 0xd434, 0xcf20, 0xb07a, 0x7d77, 0x4b79, 0x0, 0x1);
        gbc.writeMem(0x4d75, { 0xe7 });
        gbc.writeMem(0xd432, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd432, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd432));
        EXPECT(0x4d, gbc.readMem(0xd433));
        // E7 0135
        gbc.setState(0x5485, 0xc981, 0xa180, 0xd53c, 0x816e, 0x2f9e, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0xe7 });
        gbc.writeMem(0xc97f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc97f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc97f));
        EXPECT(0x54, gbc.readMem(0xc980));
        // E7 0136
        gbc.setState(0x7c48, 0xae3f, 0x6210, 0x76d5, 0xcb8e, 0xfde7, 0x0, 0x1);
        gbc.writeMem(0x7c48, { 0xe7 });
        gbc.writeMem(0xae3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae3d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xae3d));
        EXPECT(0x7c, gbc.readMem(0xae3e));
        // E7 0137
        gbc.setState(0x4923, 0x9067, 0x120, 0x9030, 0xe953, 0x29e3, 0x0, 0x0);
        gbc.writeMem(0x4923, { 0xe7 });
        gbc.writeMem(0x9065, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9065, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9065));
        EXPECT(0x49, gbc.readMem(0x9066));
        // E7 0138
        gbc.setState(0x7cb3, 0x871e, 0x7180, 0x13f4, 0xaee0, 0xff93, 0x1, 0x0);
        gbc.writeMem(0x7cb3, { 0xe7 });
        gbc.writeMem(0x871c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x871c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x871c));
        EXPECT(0x7c, gbc.readMem(0x871d));
        // E7 013D
        gbc.setState(0x6d39, 0xd6a1, 0xbbe0, 0xa180, 0xe0e4, 0x3226, 0x0, 0x0);
        gbc.writeMem(0x6d39, { 0xe7 });
        gbc.writeMem(0xd69f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd69f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xd69f));
        EXPECT(0x6d, gbc.readMem(0xd6a0));
        // E7 013F
        gbc.setState(0xb88e, 0xa86a, 0xcbd0, 0x3fc, 0x8fe1, 0xf37d, 0x0, 0x1);
        gbc.writeMem(0xa868, { 0x0, 0x0 });
        gbc.writeMem(0xb88e, { 0xe7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa868, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa868));
        EXPECT(0xb8, gbc.readMem(0xa869));
        EXPECT(0xe7, gbc.readMem(0xb88e));
        // E7 0141
        gbc.setState(0xca34, 0xc3c6, 0x8b50, 0xff05, 0xc0bc, 0x2c3d, 0x0, 0x1);
        gbc.writeMem(0xc3c4, { 0x0, 0x0 });
        gbc.writeMem(0xca34, { 0xe7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc3c4));
        EXPECT(0xca, gbc.readMem(0xc3c5));
        EXPECT(0xe7, gbc.readMem(0xca34));
        // E7 0142
        gbc.setState(0xa021, 0xae1b, 0x15a0, 0x1c75, 0xc758, 0xb743, 0x0, 0x1);
        gbc.writeMem(0xa021, { 0xe7 });
        gbc.writeMem(0xae19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xae19, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa021));
        EXPECT(0x22, gbc.readMem(0xae19));
        EXPECT(0xa0, gbc.readMem(0xae1a));
        // E7 0144
        gbc.setState(0xabec, 0xbafe, 0xc760, 0xe557, 0x2e24, 0xa044, 0x0, 0x0);
        gbc.writeMem(0xabec, { 0xe7 });
        gbc.writeMem(0xbafc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbafc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xabec));
        EXPECT(0xed, gbc.readMem(0xbafc));
        EXPECT(0xab, gbc.readMem(0xbafd));
        // E7 0148
        gbc.setState(0x5c92, 0xdb16, 0xab30, 0x7548, 0x61c0, 0xb2e7, 0x0, 0x1);
        gbc.writeMem(0x5c92, { 0xe7 });
        gbc.writeMem(0xdb14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdb14, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdb14));
        EXPECT(0x5c, gbc.readMem(0xdb15));
        // E7 014B
        gbc.setState(0x1940, 0xbd73, 0xb480, 0xb790, 0xbb70, 0x6add, 0x1, 0x0);
        gbc.writeMem(0x1940, { 0xe7 });
        gbc.writeMem(0xbd71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbd71, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xbd71));
        EXPECT(0x19, gbc.readMem(0xbd72));
        // E7 014C
        gbc.setState(0xc2bd, 0xb0e2, 0xd450, 0x38a8, 0x581c, 0x904d, 0x1, 0x0);
        gbc.writeMem(0xb0e0, { 0x0, 0x0 });
        gbc.writeMem(0xc2bd, { 0xe7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb0e0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xb0e0));
        EXPECT(0xc2, gbc.readMem(0xb0e1));
        EXPECT(0xe7, gbc.readMem(0xc2bd));
        // E7 014D
        gbc.setState(0x5e20, 0xa151, 0x5e80, 0x745d, 0x6bd8, 0x7f0f, 0x0, 0x1);
        gbc.writeMem(0x5e20, { 0xe7 });
        gbc.writeMem(0xa14f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa14f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa14f));
        EXPECT(0x5e, gbc.readMem(0xa150));
        // E7 014E
        gbc.setState(0x3ce3, 0xfaff, 0xae80, 0x2757, 0xaca3, 0x2eb, 0x1, 0x1);
        gbc.writeMem(0x3ce3, { 0xe7 });
        gbc.writeMem(0xfafd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfafd, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xfafd));
        EXPECT(0x3c, gbc.readMem(0xfafe));
        // E7 0151
        gbc.setState(0xd6b3, 0xd5bd, 0x4520, 0xc7b0, 0x9f08, 0x46cf, 0x0, 0x0);
        gbc.writeMem(0xd5bb, { 0x0, 0x0 });
        gbc.writeMem(0xd6b3, { 0xe7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xd5bb));
        EXPECT(0xd6, gbc.readMem(0xd5bc));
        EXPECT(0xe7, gbc.readMem(0xd6b3));
        // E7 0152
        gbc.setState(0xdfe9, 0xfeed, 0x2590, 0x7619, 0xbc93, 0xe7b6, 0x1, 0x0);
        gbc.writeMem(0xdfe9, { 0xe7 });
        gbc.writeMem(0xfeeb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfeeb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdfe9));
        EXPECT(0xea, gbc.readMem(0xfeeb));
        EXPECT(0xdf, gbc.readMem(0xfeec));
        // E7 0153
        gbc.setState(0x86bf, 0xd1ee, 0x9140, 0x9f5f, 0x2626, 0x7d4a, 0x1, 0x1);
        gbc.writeMem(0x86bf, { 0xe7 });
        gbc.writeMem(0xd1ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd1ec, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x86bf));
        EXPECT(0xc0, gbc.readMem(0xd1ec));
        EXPECT(0x86, gbc.readMem(0xd1ed));
        // E7 0154
        gbc.setState(0x504a, 0xf00d, 0xb2b0, 0x18ab, 0xbcb2, 0x7e6f, 0x1, 0x1);
        gbc.writeMem(0x504a, { 0xe7 });
        gbc.writeMem(0xf00b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf00b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xf00b));
        EXPECT(0x50, gbc.readMem(0xf00c));
        // E7 0155
        gbc.setState(0x439f, 0xc375, 0xc980, 0xd2c3, 0xd4e8, 0x2bf5, 0x0, 0x0);
        gbc.writeMem(0x439f, { 0xe7 });
        gbc.writeMem(0xc373, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc373, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc373));
        EXPECT(0x43, gbc.readMem(0xc374));
        // E7 0157
        gbc.setState(0x35d, 0x9776, 0x9c10, 0xa288, 0x4323, 0x6e66, 0x0, 0x1);
        gbc.writeMem(0x35d, { 0xe7 });
        gbc.writeMem(0x9774, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9774, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9774));
        EXPECT(0x3, gbc.readMem(0x9775));
        // E7 0159
        gbc.setState(0x5cbc, 0xeb22, 0x52d0, 0x9cda, 0x9e8, 0x5383, 0x0, 0x1);
        gbc.writeMem(0x5cbc, { 0xe7 });
        gbc.writeMem(0xeb20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeb20, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xeb20));
        EXPECT(0x5c, gbc.readMem(0xeb21));
        // E7 0162
        gbc.setState(0xb3d5, 0xd263, 0xffa0, 0x24e1, 0x5a1d, 0xd903, 0x1, 0x0);
        gbc.writeMem(0xb3d5, { 0xe7 });
        gbc.writeMem(0xd261, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb3d5));
        EXPECT(0xd6, gbc.readMem(0xd261));
        EXPECT(0xb3, gbc.readMem(0xd262));
        // E7 0163
        gbc.setState(0x91e, 0xb090, 0x300, 0x4fcc, 0xce7f, 0xf607, 0x0, 0x1);
        gbc.writeMem(0x91e, { 0xe7 });
        gbc.writeMem(0xb08e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb08e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xb08e));
        EXPECT(0x9, gbc.readMem(0xb08f));
        // E7 0164
        gbc.setState(0xac9e, 0xcc4f, 0xe7e0, 0x8cf7, 0x7972, 0x5c6d, 0x1, 0x0);
        gbc.writeMem(0xac9e, { 0xe7 });
        gbc.writeMem(0xcc4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xac9e));
        EXPECT(0x9f, gbc.readMem(0xcc4d));
        EXPECT(0xac, gbc.readMem(0xcc4e));
        // E7 0165
        gbc.setState(0x9738, 0xbde8, 0xde00, 0x710b, 0x114e, 0x57df, 0x0, 0x1);
        gbc.writeMem(0x9738, { 0xe7 });
        gbc.writeMem(0xbde6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbde6, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9738));
        EXPECT(0x39, gbc.readMem(0xbde6));
        EXPECT(0x97, gbc.readMem(0xbde7));
        // E7 0167
        gbc.setState(0xadae, 0x96c7, 0x22a0, 0x3a0b, 0x4c5e, 0xf8d5, 0x1, 0x1);
        gbc.writeMem(0x96c5, { 0x0, 0x0 });
        gbc.writeMem(0xadae, { 0xe7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x96c5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x96c5));
        EXPECT(0xad, gbc.readMem(0x96c6));
        EXPECT(0xe7, gbc.readMem(0xadae));
        // E7 0168
        gbc.setState(0x6155, 0xcf9d, 0x6b30, 0x2a32, 0xe2e3, 0xa944, 0x1, 0x1);
        gbc.writeMem(0x6155, { 0xe7 });
        gbc.writeMem(0xcf9b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcf9b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcf9b));
        EXPECT(0x61, gbc.readMem(0xcf9c));
        // E7 0169
        gbc.setState(0xacfe, 0x85e3, 0x4970, 0x4b1, 0x49a7, 0x36c6, 0x1, 0x0);
        gbc.writeMem(0x85e1, { 0x0, 0x0 });
        gbc.writeMem(0xacfe, { 0xe7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x85e1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x85e1));
        EXPECT(0xac, gbc.readMem(0x85e2));
        EXPECT(0xe7, gbc.readMem(0xacfe));
        // E7 016B
        gbc.setState(0x9105, 0xd4b5, 0xacf0, 0x4bc4, 0xb2f4, 0xc06d, 0x0, 0x1);
        gbc.writeMem(0x9105, { 0xe7 });
        gbc.writeMem(0xd4b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd4b3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9105));
        EXPECT(0x6, gbc.readMem(0xd4b3));
        EXPECT(0x91, gbc.readMem(0xd4b4));
        // E7 016D
        gbc.setState(0xdb9f, 0x86fe, 0x36d0, 0xafac, 0x7e6a, 0x99a6, 0x0, 0x1);
        gbc.writeMem(0x86fc, { 0x0, 0x0 });
        gbc.writeMem(0xdb9f, { 0xe7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x86fc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x86fc));
        EXPECT(0xdb, gbc.readMem(0x86fd));
        EXPECT(0xe7, gbc.readMem(0xdb9f));
        // E7 016E
        gbc.setState(0x8f3c, 0x803a, 0xc250, 0xacec, 0xbca0, 0xf623, 0x1, 0x1);
        gbc.writeMem(0x8038, { 0x0, 0x0 });
        gbc.writeMem(0x8f3c, { 0xe7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8038, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x8038));
        EXPECT(0x8f, gbc.readMem(0x8039));
        EXPECT(0xe7, gbc.readMem(0x8f3c));
        // E7 0170
        gbc.setState(0x82c5, 0xcbe3, 0xa830, 0xaf1b, 0x12f1, 0xe685, 0x1, 0x0);
        gbc.writeMem(0x82c5, { 0xe7 });
        gbc.writeMem(0xcbe1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcbe1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x82c5));
        EXPECT(0xc6, gbc.readMem(0xcbe1));
        EXPECT(0x82, gbc.readMem(0xcbe2));
        // E7 0171
        gbc.setState(0x813e, 0xf789, 0xbb0, 0x9913, 0x6b62, 0xefc6, 0x1, 0x0);
        gbc.writeMem(0x813e, { 0xe7 });
        gbc.writeMem(0xf787, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x813e));
        EXPECT(0x3f, gbc.readMem(0xf787));
        EXPECT(0x81, gbc.readMem(0xf788));
        // E7 0172
        gbc.setState(0xc98d, 0x9a83, 0x960, 0xead9, 0xeede, 0x76c2, 0x0, 0x1);
        gbc.writeMem(0x9a81, { 0x0, 0x0 });
        gbc.writeMem(0xc98d, { 0xe7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a81, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9a81));
        EXPECT(0xc9, gbc.readMem(0x9a82));
        EXPECT(0xe7, gbc.readMem(0xc98d));
        // E7 0173
        gbc.setState(0xd3ff, 0xf8da, 0x2af0, 0xca53, 0x3344, 0x9801, 0x0, 0x1);
        gbc.writeMem(0xd3ff, { 0xe7 });
        gbc.writeMem(0xf8d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf8d8, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd3ff));
        EXPECT(0x0, gbc.readMem(0xf8d8));
        EXPECT(0xd4, gbc.readMem(0xf8d9));
        // E7 0174
        gbc.setState(0x2bdb, 0xaaea, 0xfb00, 0x9199, 0xc83f, 0x70cc, 0x1, 0x1);
        gbc.writeMem(0x2bdb, { 0xe7 });
        gbc.writeMem(0xaae8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xaae8, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xaae8));
        EXPECT(0x2b, gbc.readMem(0xaae9));
        // E7 0176
        gbc.setState(0x1da9, 0xbf45, 0xcb0, 0x14b5, 0xe7c8, 0xc2fc, 0x0, 0x0);
        gbc.writeMem(0x1da9, { 0xe7 });
        gbc.writeMem(0xbf43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbf43));
        EXPECT(0x1d, gbc.readMem(0xbf44));
        // E7 0178
        gbc.setState(0x9b3f, 0xc8c9, 0x6350, 0x81c8, 0xe824, 0x88b0, 0x0, 0x1);
        gbc.writeMem(0x9b3f, { 0xe7 });
        gbc.writeMem(0xc8c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc8c7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9b3f));
        EXPECT(0x40, gbc.readMem(0xc8c7));
        EXPECT(0x9b, gbc.readMem(0xc8c8));
        // E7 0179
        gbc.setState(0x4986, 0xb895, 0xba40, 0xab2f, 0xaa20, 0x7b02, 0x0, 0x0);
        gbc.writeMem(0x4986, { 0xe7 });
        gbc.writeMem(0xb893, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb893, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb893));
        EXPECT(0x49, gbc.readMem(0xb894));
        // E7 017B
        gbc.setState(0x544e, 0xf5b2, 0xd440, 0x62fd, 0xc228, 0xba2d, 0x0, 0x1);
        gbc.writeMem(0x544e, { 0xe7 });
        gbc.writeMem(0xf5b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf5b0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf5b0));
        EXPECT(0x54, gbc.readMem(0xf5b1));
        // E7 017D
        gbc.setState(0x4035, 0xcbfc, 0x92a0, 0x1770, 0x7537, 0x2398, 0x1, 0x0);
        gbc.writeMem(0x4035, { 0xe7 });
        gbc.writeMem(0xcbfa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcbfa, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcbfa));
        EXPECT(0x40, gbc.readMem(0xcbfb));
        // E7 017F
        gbc.setState(0x90c, 0xbcbf, 0x47d0, 0x2f7f, 0x23e7, 0x327d, 0x1, 0x0);
        gbc.writeMem(0x90c, { 0xe7 });
        gbc.writeMem(0xbcbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbcbd, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xbcbd));
        EXPECT(0x9, gbc.readMem(0xbcbe));
        // E7 0180
        gbc.setState(0xaa22, 0xf88a, 0x5460, 0xc821, 0xdf5c, 0xa28b, 0x0, 0x1);
        gbc.writeMem(0xaa22, { 0xe7 });
        gbc.writeMem(0xf888, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf888, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xaa22));
        EXPECT(0x23, gbc.readMem(0xf888));
        EXPECT(0xaa, gbc.readMem(0xf889));
        // E7 0181
        gbc.setState(0xc569, 0xef46, 0x27a0, 0xf43a, 0x7062, 0x82ed, 0x1, 0x0);
        gbc.writeMem(0xc569, { 0xe7 });
        gbc.writeMem(0xef44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xef44, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc569));
        EXPECT(0x6a, gbc.readMem(0xef44));
        EXPECT(0xc5, gbc.readMem(0xef45));
        // E7 0186
        gbc.setState(0xcd5e, 0xa4bf, 0xd2b0, 0x2145, 0x7629, 0xad1d, 0x0, 0x1);
        gbc.writeMem(0xa4bd, { 0x0, 0x0 });
        gbc.writeMem(0xcd5e, { 0xe7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa4bd, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xa4bd));
        EXPECT(0xcd, gbc.readMem(0xa4be));
        EXPECT(0xe7, gbc.readMem(0xcd5e));
        // E7 0188
        gbc.setState(0xe4fe, 0xb7e9, 0x2560, 0x40c8, 0x6fa8, 0xb8a5, 0x0, 0x1);
        gbc.writeMem(0xb7e7, { 0x0, 0x0 });
        gbc.writeMem(0xe4fe, { 0xe7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb7e7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb7e7));
        EXPECT(0xe4, gbc.readMem(0xb7e8));
        EXPECT(0xe7, gbc.readMem(0xe4fe));
        // E7 0189
        gbc.setState(0x87fa, 0xae0f, 0xbc30, 0x1f5b, 0x91a1, 0xca24, 0x1, 0x0);
        gbc.writeMem(0x87fa, { 0xe7 });
        gbc.writeMem(0xae0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x87fa));
        EXPECT(0xfb, gbc.readMem(0xae0d));
        EXPECT(0x87, gbc.readMem(0xae0e));
        // E7 018A
        gbc.setState(0x5a30, 0x81bd, 0x1200, 0x9d9d, 0x7e22, 0x609d, 0x1, 0x0);
        gbc.writeMem(0x5a30, { 0xe7 });
        gbc.writeMem(0x81bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x81bb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x81bb));
        EXPECT(0x5a, gbc.readMem(0x81bc));
        // E7 018D
        gbc.setState(0xb06a, 0xe49c, 0xbc30, 0x623c, 0x2fd0, 0xf19e, 0x1, 0x0);
        gbc.writeMem(0xb06a, { 0xe7 });
        gbc.writeMem(0xe49a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe49a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb06a));
        EXPECT(0x6b, gbc.readMem(0xe49a));
        EXPECT(0xb0, gbc.readMem(0xe49b));
        // E7 018F
        gbc.setState(0xdd44, 0xf1d9, 0x1c70, 0xc563, 0xd9c9, 0x3b9e, 0x1, 0x1);
        gbc.writeMem(0xdd44, { 0xe7 });
        gbc.writeMem(0xf1d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf1d7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdd44));
        EXPECT(0x45, gbc.readMem(0xf1d7));
        EXPECT(0xdd, gbc.readMem(0xf1d8));
        // E7 0194
        gbc.setState(0xd3c8, 0xdaa0, 0x2c50, 0x3fce, 0x9ced, 0xe184, 0x0, 0x1);
        gbc.writeMem(0xd3c8, { 0xe7 });
        gbc.writeMem(0xda9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xda9e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd3c8));
        EXPECT(0xc9, gbc.readMem(0xda9e));
        EXPECT(0xd3, gbc.readMem(0xda9f));
        // E7 0197
        gbc.setState(0xb163, 0xbcc2, 0x2810, 0xabe2, 0xb163, 0xcdd4, 0x0, 0x1);
        gbc.writeMem(0xb163, { 0xe7 });
        gbc.writeMem(0xbcc0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbcc0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb163));
        EXPECT(0x64, gbc.readMem(0xbcc0));
        EXPECT(0xb1, gbc.readMem(0xbcc1));
        // E7 019A
        gbc.setState(0x1d9c, 0x831f, 0xc190, 0xda69, 0xf03, 0xda1d, 0x1, 0x1);
        gbc.writeMem(0x1d9c, { 0xe7 });
        gbc.writeMem(0x831d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x831d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x831d));
        EXPECT(0x1d, gbc.readMem(0x831e));
        // E7 019E
        gbc.setState(0x6700, 0xb392, 0x18b0, 0xdd1d, 0x8dea, 0x3ffe, 0x1, 0x1);
        gbc.writeMem(0x6700, { 0xe7 });
        gbc.writeMem(0xb390, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb390, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xb390));
        EXPECT(0x67, gbc.readMem(0xb391));
        // E7 01A0
        gbc.setState(0xcf56, 0x8d30, 0xe3d0, 0xf1b2, 0x7d1b, 0x2b0f, 0x0, 0x1);
        gbc.writeMem(0x8d2e, { 0x0, 0x0 });
        gbc.writeMem(0xcf56, { 0xe7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8d2e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8d2e));
        EXPECT(0xcf, gbc.readMem(0x8d2f));
        EXPECT(0xe7, gbc.readMem(0xcf56));
        // E7 01A1
        gbc.setState(0x82be, 0xb267, 0x4340, 0xa0c9, 0x615d, 0xe17f, 0x0, 0x0);
        gbc.writeMem(0x82be, { 0xe7 });
        gbc.writeMem(0xb265, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x82be));
        EXPECT(0xbf, gbc.readMem(0xb265));
        EXPECT(0x82, gbc.readMem(0xb266));
        // E7 01A3
        gbc.setState(0xa203, 0xc753, 0x8400, 0xf691, 0x1b17, 0x8c88, 0x0, 0x1);
        gbc.writeMem(0xa203, { 0xe7 });
        gbc.writeMem(0xc751, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc751, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa203));
        EXPECT(0x4, gbc.readMem(0xc751));
        EXPECT(0xa2, gbc.readMem(0xc752));
        // E7 01A5
        gbc.setState(0xd9b, 0xfbc0, 0xb100, 0x1eec, 0x38b3, 0x5a98, 0x1, 0x0);
        gbc.writeMem(0xd9b, { 0xe7 });
        gbc.writeMem(0xfbbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfbbe, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xfbbe));
        EXPECT(0xd, gbc.readMem(0xfbbf));
        // E7 01A6
        gbc.setState(0xe827, 0x8bf4, 0x5b0, 0x766a, 0xf271, 0x8c60, 0x1, 0x0);
        gbc.writeMem(0x8bf2, { 0x0, 0x0 });
        gbc.writeMem(0xe827, { 0xe7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8bf2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x8bf2));
        EXPECT(0xe8, gbc.readMem(0x8bf3));
        EXPECT(0xe7, gbc.readMem(0xe827));
        // E7 01A7
        gbc.setState(0x5d60, 0xc660, 0x5650, 0x8a76, 0xf418, 0xfe5c, 0x1, 0x1);
        gbc.writeMem(0x5d60, { 0xe7 });
        gbc.writeMem(0xc65e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc65e));
        EXPECT(0x5d, gbc.readMem(0xc65f));
        // E7 01A8
        gbc.setState(0xe87e, 0xf529, 0x2fd0, 0xad41, 0xda88, 0x4e3b, 0x0, 0x1);
        gbc.writeMem(0xe87e, { 0xe7 });
        gbc.writeMem(0xf527, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf527, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe87e));
        EXPECT(0x7f, gbc.readMem(0xf527));
        EXPECT(0xe8, gbc.readMem(0xf528));
        // E7 01A9
        gbc.setState(0x986e, 0xfa62, 0xb9c0, 0x3be6, 0x9b79, 0x68b9, 0x1, 0x1);
        gbc.writeMem(0x986e, { 0xe7 });
        gbc.writeMem(0xfa60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfa60, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x986e));
        EXPECT(0x6f, gbc.readMem(0xfa60));
        EXPECT(0x98, gbc.readMem(0xfa61));
        // E7 01AB
        gbc.setState(0x19e2, 0xd134, 0xd3e0, 0x27, 0x965e, 0x3487, 0x1, 0x1);
        gbc.writeMem(0x19e2, { 0xe7 });
        gbc.writeMem(0xd132, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd132, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xd132));
        EXPECT(0x19, gbc.readMem(0xd133));
        // E7 01AC
        gbc.setState(0xa17c, 0x8a09, 0xc3f0, 0x5c37, 0x3fd9, 0x35ac, 0x1, 0x1);
        gbc.writeMem(0x8a07, { 0x0, 0x0 });
        gbc.writeMem(0xa17c, { 0xe7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8a07));
        EXPECT(0xa1, gbc.readMem(0x8a08));
        EXPECT(0xe7, gbc.readMem(0xa17c));
        // E7 01AD
        gbc.setState(0xeb64, 0xccca, 0x8580, 0x3b52, 0x5416, 0x4307, 0x0, 0x0);
        gbc.writeMem(0xccc8, { 0x0, 0x0 });
        gbc.writeMem(0xeb64, { 0xe7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xccc8, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xccc8));
        EXPECT(0xeb, gbc.readMem(0xccc9));
        EXPECT(0xe7, gbc.readMem(0xeb64));
        // E7 01B1
        gbc.setState(0x35ec, 0xfe76, 0x5480, 0x6b92, 0x4788, 0xe68, 0x1, 0x1);
        gbc.writeMem(0x35ec, { 0xe7 });
        gbc.writeMem(0xfe74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfe74, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xfe74));
        EXPECT(0x35, gbc.readMem(0xfe75));
        // E7 01B3
        gbc.setState(0x5c24, 0xd98a, 0xf50, 0x2c6, 0x1cea, 0xc214, 0x0, 0x0);
        gbc.writeMem(0x5c24, { 0xe7 });
        gbc.writeMem(0xd988, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd988, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd988));
        EXPECT(0x5c, gbc.readMem(0xd989));
        // E7 01B4
        gbc.setState(0x4d23, 0xa74c, 0x7420, 0xda70, 0x7fe5, 0x36a3, 0x1, 0x0);
        gbc.writeMem(0x4d23, { 0xe7 });
        gbc.writeMem(0xa74a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa74a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xa74a));
        EXPECT(0x4d, gbc.readMem(0xa74b));
        // E7 01B6
        gbc.setState(0x3780, 0x9a77, 0x4780, 0x825f, 0xd063, 0x3018, 0x1, 0x0);
        gbc.writeMem(0x3780, { 0xe7 });
        gbc.writeMem(0x9a75, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9a75));
        EXPECT(0x37, gbc.readMem(0x9a76));
        // E7 01B8
        gbc.setState(0x7157, 0xb773, 0x1830, 0x9b6, 0xa9dd, 0xac06, 0x0, 0x0);
        gbc.writeMem(0x7157, { 0xe7 });
        gbc.writeMem(0xb771, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb771, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb771));
        EXPECT(0x71, gbc.readMem(0xb772));
        // E7 01BA
        gbc.setState(0xc4a2, 0xbd90, 0xba90, 0x5380, 0x3447, 0x67ae, 0x0, 0x1);
        gbc.writeMem(0xbd8e, { 0x0, 0x0 });
        gbc.writeMem(0xc4a2, { 0xe7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbd8e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbd8e));
        EXPECT(0xc4, gbc.readMem(0xbd8f));
        EXPECT(0xe7, gbc.readMem(0xc4a2));
        // E7 01BC
        gbc.setState(0xe78a, 0xea6e, 0xbc80, 0xa4df, 0xd23d, 0xbc0d, 0x0, 0x1);
        gbc.writeMem(0xe78a, { 0xe7 });
        gbc.writeMem(0xea6c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xea6c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe78a));
        EXPECT(0x8b, gbc.readMem(0xea6c));
        EXPECT(0xe7, gbc.readMem(0xea6d));
        // E7 01C1
        gbc.setState(0xb8ee, 0xe560, 0x5120, 0x6f06, 0x2c44, 0xcc11, 0x1, 0x0);
        gbc.writeMem(0xb8ee, { 0xe7 });
        gbc.writeMem(0xe55e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe55e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb8ee));
        EXPECT(0xef, gbc.readMem(0xe55e));
        EXPECT(0xb8, gbc.readMem(0xe55f));
        // E7 01C4
        gbc.setState(0x3403, 0xce32, 0x12f0, 0x395a, 0xd440, 0x1836, 0x0, 0x0);
        gbc.writeMem(0x3403, { 0xe7 });
        gbc.writeMem(0xce30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xce30, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xce30));
        EXPECT(0x34, gbc.readMem(0xce31));
        // E7 01C6
        gbc.setState(0x5f95, 0xd858, 0xf9b0, 0xce49, 0x5e68, 0x8f33, 0x0, 0x1);
        gbc.writeMem(0x5f95, { 0xe7 });
        gbc.writeMem(0xd856, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd856));
        EXPECT(0x5f, gbc.readMem(0xd857));
        // E7 01C7
        gbc.setState(0x9ce9, 0xc155, 0xf2f0, 0xb268, 0xdfab, 0xea78, 0x1, 0x1);
        gbc.writeMem(0x9ce9, { 0xe7 });
        gbc.writeMem(0xc153, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc153, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9ce9));
        EXPECT(0xea, gbc.readMem(0xc153));
        EXPECT(0x9c, gbc.readMem(0xc154));
        // E7 01C8
        gbc.setState(0xca8, 0x929c, 0xff60, 0xb4a, 0x3c5c, 0x317f, 0x0, 0x1);
        gbc.writeMem(0xca8, { 0xe7 });
        gbc.writeMem(0x929a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x929a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x929a));
        EXPECT(0xc, gbc.readMem(0x929b));
        // E7 01C9
        gbc.setState(0x5ec4, 0xedc9, 0x58b0, 0x23d2, 0x9313, 0x24e8, 0x1, 0x1);
        gbc.writeMem(0x5ec4, { 0xe7 });
        gbc.writeMem(0xedc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xedc7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xedc7));
        EXPECT(0x5e, gbc.readMem(0xedc8));
        // E7 01CB
        gbc.setState(0xd24f, 0xe384, 0xf1f0, 0xc17d, 0x8c4d, 0x690d, 0x0, 0x0);
        gbc.writeMem(0xd24f, { 0xe7 });
        gbc.writeMem(0xe382, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe382, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd24f));
        EXPECT(0x50, gbc.readMem(0xe382));
        EXPECT(0xd2, gbc.readMem(0xe383));
        // E7 01D1
        gbc.setState(0x5857, 0xd6d0, 0x5c40, 0xa6c0, 0xd0be, 0x142e, 0x0, 0x0);
        gbc.writeMem(0x5857, { 0xe7 });
        gbc.writeMem(0xd6ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd6ce, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd6ce));
        EXPECT(0x58, gbc.readMem(0xd6cf));
        // E7 01D6
        gbc.setState(0x4dbe, 0xadc2, 0xd650, 0x2903, 0x7648, 0x53a3, 0x1, 0x0);
        gbc.writeMem(0x4dbe, { 0xe7 });
        gbc.writeMem(0xadc0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xadc0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xadc0));
        EXPECT(0x4d, gbc.readMem(0xadc1));
        // E7 01D8
        gbc.setState(0xb176, 0xf5a5, 0x5880, 0x4253, 0xf456, 0x8b29, 0x0, 0x0);
        gbc.writeMem(0xb176, { 0xe7 });
        gbc.writeMem(0xf5a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb176));
        EXPECT(0x77, gbc.readMem(0xf5a3));
        EXPECT(0xb1, gbc.readMem(0xf5a4));
        // E7 01D9
        gbc.setState(0xad2, 0xab95, 0x4af0, 0x9551, 0x5479, 0x3cde, 0x1, 0x0);
        gbc.writeMem(0xad2, { 0xe7 });
        gbc.writeMem(0xab93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xab93, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xab93));
        EXPECT(0xa, gbc.readMem(0xab94));
        // E7 01DA
        gbc.setState(0x1365, 0xb684, 0xa670, 0xd198, 0xa852, 0x4159, 0x0, 0x0);
        gbc.writeMem(0x1365, { 0xe7 });
        gbc.writeMem(0xb682, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb682));
        EXPECT(0x13, gbc.readMem(0xb683));
        // E7 01DB
        gbc.setState(0x3fab, 0xda98, 0x8070, 0xceb4, 0x6c70, 0x91c5, 0x1, 0x0);
        gbc.writeMem(0x3fab, { 0xe7 });
        gbc.writeMem(0xda96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xda96));
        EXPECT(0x3f, gbc.readMem(0xda97));
        // E7 01E0
        gbc.setState(0xa16d, 0xcd14, 0x8670, 0xf4df, 0xe23f, 0xf149, 0x0, 0x0);
        gbc.writeMem(0xa16d, { 0xe7 });
        gbc.writeMem(0xcd12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcd12, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa16d));
        EXPECT(0x6e, gbc.readMem(0xcd12));
        EXPECT(0xa1, gbc.readMem(0xcd13));
        // E7 01E1
        gbc.setState(0xab0e, 0xc800, 0xd3f0, 0xb214, 0x705c, 0xe01b, 0x1, 0x0);
        gbc.writeMem(0xab0e, { 0xe7 });
        gbc.writeMem(0xc7fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc7fe, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xab0e));
        EXPECT(0xf, gbc.readMem(0xc7fe));
        EXPECT(0xab, gbc.readMem(0xc7ff));
        // E7 01E2
        gbc.setState(0xdeed, 0xb6d7, 0x5720, 0xfd28, 0x7b02, 0x6d5e, 0x1, 0x0);
        gbc.writeMem(0xb6d5, { 0x0, 0x0 });
        gbc.writeMem(0xdeed, { 0xe7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb6d5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xb6d5));
        EXPECT(0xde, gbc.readMem(0xb6d6));
        EXPECT(0xe7, gbc.readMem(0xdeed));
        // E7 01E3
        gbc.setState(0x2973, 0xd032, 0xc0c0, 0x5e74, 0xc12a, 0x342c, 0x0, 0x1);
        gbc.writeMem(0x2973, { 0xe7 });
        gbc.writeMem(0xd030, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd030));
        EXPECT(0x29, gbc.readMem(0xd031));
        // E7 01E4
        gbc.setState(0x5fb, 0xd32f, 0x4600, 0x78f3, 0x8b3e, 0x2473, 0x1, 0x1);
        gbc.writeMem(0x5fb, { 0xe7 });
        gbc.writeMem(0xd32d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd32d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd32d));
        EXPECT(0x5, gbc.readMem(0xd32e));
        // E7 01E5
        gbc.setState(0x69eb, 0xa3d4, 0x3e0, 0x3fd5, 0xc824, 0xce27, 0x1, 0x0);
        gbc.writeMem(0x69eb, { 0xe7 });
        gbc.writeMem(0xa3d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa3d2));
        EXPECT(0x69, gbc.readMem(0xa3d3));
        // E7 01E7
        gbc.setState(0x5a2a, 0xbd23, 0x8a10, 0x347, 0xaa51, 0x52ff, 0x0, 0x0);
        gbc.writeMem(0x5a2a, { 0xe7 });
        gbc.writeMem(0xbd21, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbd21, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbd21));
        EXPECT(0x5a, gbc.readMem(0xbd22));
        // E7 01E8
        gbc.setState(0xb9f7, 0xb0c8, 0x9490, 0xb034, 0x15f1, 0x64d4, 0x0, 0x0);
        gbc.writeMem(0xb0c6, { 0x0, 0x0 });
        gbc.writeMem(0xb9f7, { 0xe7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb0c6, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb0c6));
        EXPECT(0xb9, gbc.readMem(0xb0c7));
        EXPECT(0xe7, gbc.readMem(0xb9f7));
        // E7 01E9
        gbc.setState(0xe620, 0xb380, 0x1790, 0xdf79, 0xb11a, 0x913f, 0x0, 0x1);
        gbc.writeMem(0xb37e, { 0x0, 0x0 });
        gbc.writeMem(0xe620, { 0xe7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb37e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb37e));
        EXPECT(0xe6, gbc.readMem(0xb37f));
        EXPECT(0xe7, gbc.readMem(0xe620));
        // E7 01EC
        gbc.setState(0x932c, 0xa176, 0x63a0, 0x9b40, 0x7c3, 0x294f, 0x0, 0x1);
        gbc.writeMem(0x932c, { 0xe7 });
        gbc.writeMem(0xa174, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa174, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x932c));
        EXPECT(0x2d, gbc.readMem(0xa174));
        EXPECT(0x93, gbc.readMem(0xa175));
        // E7 01EF
        gbc.setState(0xcd85, 0xc36e, 0x84c0, 0x91dc, 0x5b9, 0xc5c2, 0x1, 0x0);
        gbc.writeMem(0xc36c, { 0x0, 0x0 });
        gbc.writeMem(0xcd85, { 0xe7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc36c));
        EXPECT(0xcd, gbc.readMem(0xc36d));
        EXPECT(0xe7, gbc.readMem(0xcd85));
        // E7 01F0
        gbc.setState(0x2b12, 0xa71a, 0x6d00, 0x6899, 0x52a4, 0x42c7, 0x0, 0x0);
        gbc.writeMem(0x2b12, { 0xe7 });
        gbc.writeMem(0xa718, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa718, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa718));
        EXPECT(0x2b, gbc.readMem(0xa719));
        // E7 01F1
        gbc.setState(0xc9cd, 0xe080, 0xb880, 0xaf7e, 0x399c, 0xde23, 0x0, 0x0);
        gbc.writeMem(0xc9cd, { 0xe7 });
        gbc.writeMem(0xe07e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc9cd));
        EXPECT(0xce, gbc.readMem(0xe07e));
        EXPECT(0xc9, gbc.readMem(0xe07f));
        // E7 01F4
        gbc.setState(0xe9ac, 0xf5a2, 0x1aa0, 0xbec0, 0xff69, 0xbafc, 0x1, 0x0);
        gbc.writeMem(0xe9ac, { 0xe7 });
        gbc.writeMem(0xf5a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe9ac));
        EXPECT(0xad, gbc.readMem(0xf5a0));
        EXPECT(0xe9, gbc.readMem(0xf5a1));
        // E7 01F5
        gbc.setState(0x64aa, 0xf8f3, 0xa270, 0x1e39, 0x3eff, 0xd4f5, 0x0, 0x1);
        gbc.writeMem(0x64aa, { 0xe7 });
        gbc.writeMem(0xf8f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf8f1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xf8f1));
        EXPECT(0x64, gbc.readMem(0xf8f2));
        // E7 01F7
        gbc.setState(0xc618, 0xa277, 0xcb00, 0x6793, 0x216c, 0xc965, 0x0, 0x0);
        gbc.writeMem(0xa275, { 0x0, 0x0 });
        gbc.writeMem(0xc618, { 0xe7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa275, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa275));
        EXPECT(0xc6, gbc.readMem(0xa276));
        EXPECT(0xe7, gbc.readMem(0xc618));
        // E7 01FA
        gbc.setState(0x3ade, 0xae4d, 0x2560, 0x249b, 0xa408, 0xdd9e, 0x0, 0x0);
        gbc.writeMem(0x3ade, { 0xe7 });
        gbc.writeMem(0xae4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xae4b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xae4b));
        EXPECT(0x3a, gbc.readMem(0xae4c));
        // E7 01FB
        gbc.setState(0x1121, 0xbc9a, 0xfa90, 0x34e1, 0xcea4, 0x7e77, 0x0, 0x1);
        gbc.writeMem(0x1121, { 0xe7 });
        gbc.writeMem(0xbc98, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbc98, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbc98));
        EXPECT(0x11, gbc.readMem(0xbc99));
        // E7 01FD
        gbc.setState(0x7ee1, 0xf279, 0xba70, 0x7f4e, 0x5ea6, 0xa38a, 0x0, 0x1);
        gbc.writeMem(0x7ee1, { 0xe7 });
        gbc.writeMem(0xf277, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf277, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf277));
        EXPECT(0x7e, gbc.readMem(0xf278));
        // E7 01FE
        gbc.setState(0x9fad, 0xee47, 0x2060, 0x2e73, 0x3b71, 0x9c69, 0x0, 0x1);
        gbc.writeMem(0x9fad, { 0xe7 });
        gbc.writeMem(0xee45, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xee45, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9fad));
        EXPECT(0xae, gbc.readMem(0xee45));
        EXPECT(0x9f, gbc.readMem(0xee46));
        // E7 01FF
        gbc.setState(0x57de, 0x968f, 0x6850, 0xa870, 0x3346, 0x9b52, 0x1, 0x0);
        gbc.writeMem(0x57de, { 0xe7 });
        gbc.writeMem(0x968d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x968d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x968d));
        EXPECT(0x57, gbc.readMem(0x968e));
        // E7 0201
        gbc.setState(0x5f55, 0xef39, 0x4d0, 0x1e3c, 0xcb28, 0x2757, 0x0, 0x1);
        gbc.writeMem(0x5f55, { 0xe7 });
        gbc.writeMem(0xef37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xef37));
        EXPECT(0x5f, gbc.readMem(0xef38));
        // E7 0203
        gbc.setState(0x48ee, 0xec54, 0xb40, 0x322f, 0x4681, 0xb743, 0x0, 0x0);
        gbc.writeMem(0x48ee, { 0xe7 });
        gbc.writeMem(0xec52, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xec52, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xec52));
        EXPECT(0x48, gbc.readMem(0xec53));
        // E7 0205
        gbc.setState(0xb8b3, 0xad3d, 0x4d00, 0xa904, 0x42e9, 0x1014, 0x1, 0x0);
        gbc.writeMem(0xad3b, { 0x0, 0x0 });
        gbc.writeMem(0xb8b3, { 0xe7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xad3b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xad3b));
        EXPECT(0xb8, gbc.readMem(0xad3c));
        EXPECT(0xe7, gbc.readMem(0xb8b3));
        // E7 0206
        gbc.setState(0x6257, 0xb9e2, 0xfed0, 0xbb86, 0xce0c, 0x1535, 0x1, 0x1);
        gbc.writeMem(0x6257, { 0xe7 });
        gbc.writeMem(0xb9e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb9e0));
        EXPECT(0x62, gbc.readMem(0xb9e1));
        // E7 0209
        gbc.setState(0x3da7, 0xb6e3, 0xa450, 0xe6d0, 0xc3b1, 0x1a71, 0x0, 0x1);
        gbc.writeMem(0x3da7, { 0xe7 });
        gbc.writeMem(0xb6e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb6e1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xb6e1));
        EXPECT(0x3d, gbc.readMem(0xb6e2));
        // E7 020A
        gbc.setState(0xa347, 0xca26, 0xc950, 0x9ce3, 0xbc1e, 0xedf7, 0x0, 0x0);
        gbc.writeMem(0xa347, { 0xe7 });
        gbc.writeMem(0xca24, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xca24, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa347));
        EXPECT(0x48, gbc.readMem(0xca24));
        EXPECT(0xa3, gbc.readMem(0xca25));
        // E7 020D
        gbc.setState(0x977d, 0xac24, 0x4080, 0x3314, 0xc637, 0xeffa, 0x1, 0x1);
        gbc.writeMem(0x977d, { 0xe7 });
        gbc.writeMem(0xac22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xac22, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x977d));
        EXPECT(0x7e, gbc.readMem(0xac22));
        EXPECT(0x97, gbc.readMem(0xac23));
        // E7 0211
        gbc.setState(0xb40, 0xc130, 0x1d0, 0x7688, 0x106c, 0x2da6, 0x1, 0x0);
        gbc.writeMem(0xb40, { 0xe7 });
        gbc.writeMem(0xc12e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc12e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc12e));
        EXPECT(0xb, gbc.readMem(0xc12f));
        // E7 0212
        gbc.setState(0xc02d, 0x8caf, 0xc1b0, 0x4ec4, 0x1e06, 0x4358, 0x1, 0x1);
        gbc.writeMem(0x8cad, { 0x0, 0x0 });
        gbc.writeMem(0xc02d, { 0xe7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8cad, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8cad));
        EXPECT(0xc0, gbc.readMem(0x8cae));
        EXPECT(0xe7, gbc.readMem(0xc02d));
        // E7 0216
        gbc.setState(0x5720, 0xc41b, 0xbdf0, 0x552d, 0x1106, 0x302d, 0x1, 0x0);
        gbc.writeMem(0x5720, { 0xe7 });
        gbc.writeMem(0xc419, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc419, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc419));
        EXPECT(0x57, gbc.readMem(0xc41a));
        // E7 021A
        gbc.setState(0xe74b, 0xb639, 0xec0, 0x30a1, 0x39ef, 0x906b, 0x1, 0x1);
        gbc.writeMem(0xb637, { 0x0, 0x0 });
        gbc.writeMem(0xe74b, { 0xe7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb637, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb637));
        EXPECT(0xe7, gbc.readMem(0xb638));
        EXPECT(0xe7, gbc.readMem(0xe74b));
        // E7 021B
        gbc.setState(0x7918, 0xd8fe, 0xa330, 0x273e, 0x4ff6, 0xf87b, 0x0, 0x1);
        gbc.writeMem(0x7918, { 0xe7 });
        gbc.writeMem(0xd8fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd8fc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd8fc));
        EXPECT(0x79, gbc.readMem(0xd8fd));
        // E7 021F
        gbc.setState(0x184b, 0xbb72, 0x6990, 0x902b, 0x2eb1, 0x9979, 0x0, 0x1);
        gbc.writeMem(0x184b, { 0xe7 });
        gbc.writeMem(0xbb70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb70));
        EXPECT(0x18, gbc.readMem(0xbb71));
        // E7 0226
        gbc.setState(0x6cb1, 0xa939, 0x2270, 0x9a0b, 0x15db, 0x11ca, 0x1, 0x1);
        gbc.writeMem(0x6cb1, { 0xe7 });
        gbc.writeMem(0xa937, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa937, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa937));
        EXPECT(0x6c, gbc.readMem(0xa938));
        // E7 0228
        gbc.setState(0x96cd, 0xa3d4, 0x9cc0, 0x7c7f, 0xabaa, 0x99e1, 0x0, 0x1);
        gbc.writeMem(0x96cd, { 0xe7 });
        gbc.writeMem(0xa3d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x96cd));
        EXPECT(0xce, gbc.readMem(0xa3d2));
        EXPECT(0x96, gbc.readMem(0xa3d3));
        // E7 022A
        gbc.setState(0x1ef6, 0x8813, 0x3150, 0x657, 0x9569, 0x60fb, 0x0, 0x1);
        gbc.writeMem(0x1ef6, { 0xe7 });
        gbc.writeMem(0x8811, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8811, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8811));
        EXPECT(0x1e, gbc.readMem(0x8812));
        // E7 022C
        gbc.setState(0x1f20, 0x8224, 0x4390, 0x33d5, 0x5351, 0x5ca2, 0x0, 0x0);
        gbc.writeMem(0x1f20, { 0xe7 });
        gbc.writeMem(0x8222, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8222, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8222));
        EXPECT(0x1f, gbc.readMem(0x8223));
        // E7 022E
        gbc.setState(0x1527, 0xccdc, 0x9420, 0x9369, 0xefec, 0xb19b, 0x1, 0x0);
        gbc.writeMem(0x1527, { 0xe7 });
        gbc.writeMem(0xccda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xccda));
        EXPECT(0x15, gbc.readMem(0xccdb));
        // E7 0232
        gbc.setState(0x5813, 0xc259, 0x7400, 0xd87b, 0xdce9, 0x42b3, 0x0, 0x1);
        gbc.writeMem(0x5813, { 0xe7 });
        gbc.writeMem(0xc257, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc257, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc257));
        EXPECT(0x58, gbc.readMem(0xc258));
        // E7 0233
        gbc.setState(0xb36c, 0xfce2, 0x40c0, 0x26d6, 0xa26a, 0x7c99, 0x0, 0x1);
        gbc.writeMem(0xb36c, { 0xe7 });
        gbc.writeMem(0xfce0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfce0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb36c));
        EXPECT(0x6d, gbc.readMem(0xfce0));
        EXPECT(0xb3, gbc.readMem(0xfce1));
        // E7 0235
        gbc.setState(0x10bb, 0x98d6, 0xfab0, 0x2e83, 0x9fd7, 0xbc0e, 0x0, 0x1);
        gbc.writeMem(0x10bb, { 0xe7 });
        gbc.writeMem(0x98d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x98d4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x98d4));
        EXPECT(0x10, gbc.readMem(0x98d5));
        // E7 0238
        gbc.setState(0xa9e0, 0xdf7c, 0xeb90, 0xda9f, 0x2465, 0x39a1, 0x0, 0x1);
        gbc.writeMem(0xa9e0, { 0xe7 });
        gbc.writeMem(0xdf7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdf7a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa9e0));
        EXPECT(0xe1, gbc.readMem(0xdf7a));
        EXPECT(0xa9, gbc.readMem(0xdf7b));
        // E7 023A
        gbc.setState(0xbb7, 0xac5c, 0x4610, 0x9b21, 0xaf14, 0x69b0, 0x1, 0x0);
        gbc.writeMem(0xbb7, { 0xe7 });
        gbc.writeMem(0xac5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xac5a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xac5a));
        EXPECT(0xb, gbc.readMem(0xac5b));
        // E7 023B
        gbc.setState(0x364c, 0x9550, 0x3db0, 0xae1b, 0x5f3, 0x37a, 0x0, 0x0);
        gbc.writeMem(0x364c, { 0xe7 });
        gbc.writeMem(0x954e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x954e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x954e));
        EXPECT(0x36, gbc.readMem(0x954f));
        // E7 023C
        gbc.setState(0xb0a2, 0xac63, 0x9ab0, 0x10d2, 0x9cbe, 0x6fe6, 0x0, 0x0);
        gbc.writeMem(0xac61, { 0x0, 0x0 });
        gbc.writeMem(0xb0a2, { 0xe7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xac61, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xac61));
        EXPECT(0xb0, gbc.readMem(0xac62));
        EXPECT(0xe7, gbc.readMem(0xb0a2));
        // E7 0242
        gbc.setState(0xd448, 0xf525, 0xf180, 0xe2fd, 0x3ce2, 0x3aa4, 0x0, 0x1);
        gbc.writeMem(0xd448, { 0xe7 });
        gbc.writeMem(0xf523, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf523, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd448));
        EXPECT(0x49, gbc.readMem(0xf523));
        EXPECT(0xd4, gbc.readMem(0xf524));
        // E7 0245
        gbc.setState(0xa721, 0xc93b, 0xeb70, 0x94eb, 0xdae3, 0x5f55, 0x1, 0x1);
        gbc.writeMem(0xa721, { 0xe7 });
        gbc.writeMem(0xc939, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc939, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa721));
        EXPECT(0x22, gbc.readMem(0xc939));
        EXPECT(0xa7, gbc.readMem(0xc93a));
        // E7 0247
        gbc.setState(0xad42, 0x97e0, 0x7610, 0x7fcc, 0x7146, 0xe7cf, 0x1, 0x0);
        gbc.writeMem(0x97de, { 0x0, 0x0 });
        gbc.writeMem(0xad42, { 0xe7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x97de));
        EXPECT(0xad, gbc.readMem(0x97df));
        EXPECT(0xe7, gbc.readMem(0xad42));
        // E7 0248
        gbc.setState(0x34ca, 0xa80c, 0xb460, 0x363a, 0x843, 0xff6, 0x0, 0x0);
        gbc.writeMem(0x34ca, { 0xe7 });
        gbc.writeMem(0xa80a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa80a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80a));
        EXPECT(0x34, gbc.readMem(0xa80b));
        // E7 024A
        gbc.setState(0x93c5, 0x93b3, 0x4910, 0x96d7, 0x2423, 0x2f42, 0x1, 0x1);
        gbc.writeMem(0x93b1, { 0x0, 0x0 });
        gbc.writeMem(0x93c5, { 0xe7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x93b1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x93b1));
        EXPECT(0x93, gbc.readMem(0x93b2));
        EXPECT(0xe7, gbc.readMem(0x93c5));
        // E7 024C
        gbc.setState(0x8596, 0xe072, 0xb800, 0xa4aa, 0x6c8d, 0x8122, 0x1, 0x0);
        gbc.writeMem(0x8596, { 0xe7 });
        gbc.writeMem(0xe070, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe070, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8596));
        EXPECT(0x97, gbc.readMem(0xe070));
        EXPECT(0x85, gbc.readMem(0xe071));
        // E7 024D
        gbc.setState(0x851, 0x9f1b, 0xff10, 0x2942, 0xe7c0, 0xe8ad, 0x0, 0x0);
        gbc.writeMem(0x851, { 0xe7 });
        gbc.writeMem(0x9f19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9f19, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9f19));
        EXPECT(0x8, gbc.readMem(0x9f1a));
        // E7 024E
        gbc.setState(0x5ea, 0xf6dd, 0x9cc0, 0xd222, 0x882b, 0x9b02, 0x0, 0x1);
        gbc.writeMem(0x5ea, { 0xe7 });
        gbc.writeMem(0xf6db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf6db, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xf6db));
        EXPECT(0x5, gbc.readMem(0xf6dc));
        // E7 0250
        gbc.setState(0x1bb7, 0xcfcb, 0x9bf0, 0x881c, 0xe32c, 0xcf81, 0x0, 0x1);
        gbc.writeMem(0x1bb7, { 0xe7 });
        gbc.writeMem(0xcfc9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcfc9, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xcfc9));
        EXPECT(0x1b, gbc.readMem(0xcfca));
        // E7 0255
        gbc.setState(0x512f, 0xff7a, 0x250, 0x7982, 0xd9ba, 0xb02a, 0x0, 0x1);
        gbc.writeMem(0x512f, { 0xe7 });
        gbc.writeMem(0xff78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff78));
        EXPECT(0x51, gbc.readMem(0xff79));
        // E7 0258
        gbc.setState(0xba29, 0xd075, 0x9860, 0x34a4, 0xc543, 0x8900, 0x0, 0x0);
        gbc.writeMem(0xba29, { 0xe7 });
        gbc.writeMem(0xd073, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd073, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xba29));
        EXPECT(0x2a, gbc.readMem(0xd073));
        EXPECT(0xba, gbc.readMem(0xd074));
        // E7 0259
        gbc.setState(0xef61, 0xfb71, 0xf260, 0xd3c4, 0xa34a, 0x86e2, 0x1, 0x1);
        gbc.writeMem(0xef61, { 0xe7 });
        gbc.writeMem(0xfb6f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfb6f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xef61));
        EXPECT(0x62, gbc.readMem(0xfb6f));
        EXPECT(0xef, gbc.readMem(0xfb70));
        // E7 025A
        gbc.setState(0x1872, 0xbb29, 0x7470, 0xde39, 0xdda5, 0xff07, 0x0, 0x0);
        gbc.writeMem(0x1872, { 0xe7 });
        gbc.writeMem(0xbb27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbb27, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xbb27));
        EXPECT(0x18, gbc.readMem(0xbb28));
        // E7 025B
        gbc.setState(0x5f6, 0xc3be, 0x63c0, 0x492b, 0xda3f, 0x969b, 0x1, 0x0);
        gbc.writeMem(0x5f6, { 0xe7 });
        gbc.writeMem(0xc3bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc3bc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc3bc));
        EXPECT(0x5, gbc.readMem(0xc3bd));
        // E7 025E
        gbc.setState(0xc710, 0xc8bd, 0xe460, 0x3b79, 0xe686, 0x1af3, 0x1, 0x1);
        gbc.writeMem(0xc710, { 0xe7 });
        gbc.writeMem(0xc8bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc710));
        EXPECT(0x11, gbc.readMem(0xc8bb));
        EXPECT(0xc7, gbc.readMem(0xc8bc));
        // E7 0263
        gbc.setState(0xa6a0, 0x9300, 0x90f0, 0x1355, 0x335c, 0x7147, 0x0, 0x0);
        gbc.writeMem(0x92fe, { 0x0, 0x0 });
        gbc.writeMem(0xa6a0, { 0xe7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x92fe, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x92fe));
        EXPECT(0xa6, gbc.readMem(0x92ff));
        EXPECT(0xe7, gbc.readMem(0xa6a0));
        // E7 0265
        gbc.setState(0xb242, 0xca31, 0x4530, 0x39b0, 0xfadc, 0x60d9, 0x1, 0x1);
        gbc.writeMem(0xb242, { 0xe7 });
        gbc.writeMem(0xca2f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xca2f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb242));
        EXPECT(0x43, gbc.readMem(0xca2f));
        EXPECT(0xb2, gbc.readMem(0xca30));
        // E7 0267
        gbc.setState(0xb2a1, 0xe0cd, 0x5480, 0x50e6, 0xf7f3, 0x795e, 0x1, 0x0);
        gbc.writeMem(0xb2a1, { 0xe7 });
        gbc.writeMem(0xe0cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe0cb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb2a1));
        EXPECT(0xa2, gbc.readMem(0xe0cb));
        EXPECT(0xb2, gbc.readMem(0xe0cc));
        // E7 0269
        gbc.setState(0x123, 0xab8a, 0x3e20, 0x9b14, 0x4018, 0x9480, 0x1, 0x0);
        gbc.writeMem(0x123, { 0xe7 });
        gbc.writeMem(0xab88, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xab88, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xab88));
        EXPECT(0x1, gbc.readMem(0xab89));
        // E7 026A
        gbc.setState(0x5b0c, 0x9a0e, 0xaa90, 0x1cd7, 0x4450, 0x2a3c, 0x1, 0x1);
        gbc.writeMem(0x5b0c, { 0xe7 });
        gbc.writeMem(0x9a0c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9a0c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9a0c));
        EXPECT(0x5b, gbc.readMem(0x9a0d));
        // E7 0271
        gbc.setState(0xb867, 0x9f3f, 0x13a0, 0x2197, 0xc233, 0xb93c, 0x1, 0x0);
        gbc.writeMem(0x9f3d, { 0x0, 0x0 });
        gbc.writeMem(0xb867, { 0xe7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9f3d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9f3d));
        EXPECT(0xb8, gbc.readMem(0x9f3e));
        EXPECT(0xe7, gbc.readMem(0xb867));
        // E7 0272
        gbc.setState(0x3129, 0xc6fc, 0x8760, 0xf245, 0xf336, 0x293b, 0x1, 0x0);
        gbc.writeMem(0x3129, { 0xe7 });
        gbc.writeMem(0xc6fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc6fa, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xc6fa));
        EXPECT(0x31, gbc.readMem(0xc6fb));
        // E7 0273
        gbc.setState(0x9ccd, 0xb39c, 0x2b00, 0x3ea3, 0x5bc2, 0x6697, 0x0, 0x1);
        gbc.writeMem(0x9ccd, { 0xe7 });
        gbc.writeMem(0xb39a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb39a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9ccd));
        EXPECT(0xce, gbc.readMem(0xb39a));
        EXPECT(0x9c, gbc.readMem(0xb39b));
        // E7 0274
        gbc.setState(0xa1a1, 0xd31d, 0xfb80, 0x83e6, 0x550, 0xa47c, 0x1, 0x1);
        gbc.writeMem(0xa1a1, { 0xe7 });
        gbc.writeMem(0xd31b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd31b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa1a1));
        EXPECT(0xa2, gbc.readMem(0xd31b));
        EXPECT(0xa1, gbc.readMem(0xd31c));
        // E7 0275
        gbc.setState(0x40d5, 0xd581, 0x2d60, 0xae02, 0xb28b, 0xc60b, 0x0, 0x0);
        gbc.writeMem(0x40d5, { 0xe7 });
        gbc.writeMem(0xd57f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd57f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd57f));
        EXPECT(0x40, gbc.readMem(0xd580));
        // E7 0276
        gbc.setState(0x2761, 0xef49, 0x9840, 0xbed7, 0x141c, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0x2761, { 0xe7 });
        gbc.writeMem(0xef47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xef47, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xef47));
        EXPECT(0x27, gbc.readMem(0xef48));
        // E7 0278
        gbc.setState(0xd4ad, 0xf3b2, 0x6790, 0xed7c, 0x22bb, 0xa496, 0x0, 0x1);
        gbc.writeMem(0xd4ad, { 0xe7 });
        gbc.writeMem(0xf3b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf3b0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd4ad));
        EXPECT(0xae, gbc.readMem(0xf3b0));
        EXPECT(0xd4, gbc.readMem(0xf3b1));
        // E7 027B
        gbc.setState(0xe159, 0xdbfa, 0x9dc0, 0x1808, 0xecc5, 0x9cfe, 0x1, 0x0);
        gbc.writeMem(0xdbf8, { 0x0, 0x0 });
        gbc.writeMem(0xe159, { 0xe7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdbf8, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xdbf8));
        EXPECT(0xe1, gbc.readMem(0xdbf9));
        EXPECT(0xe7, gbc.readMem(0xe159));
        // E7 027D
        gbc.setState(0xc106, 0x82ef, 0x4db0, 0x3644, 0x32e, 0xfb04, 0x1, 0x1);
        gbc.writeMem(0x82ed, { 0x0, 0x0 });
        gbc.writeMem(0xc106, { 0xe7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x82ed, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x82ed));
        EXPECT(0xc1, gbc.readMem(0x82ee));
        EXPECT(0xe7, gbc.readMem(0xc106));
        // E7 027F
        gbc.setState(0xa95b, 0xd01b, 0xbdb0, 0x7c42, 0x186b, 0xd8da, 0x1, 0x0);
        gbc.writeMem(0xa95b, { 0xe7 });
        gbc.writeMem(0xd019, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa95b));
        EXPECT(0x5c, gbc.readMem(0xd019));
        EXPECT(0xa9, gbc.readMem(0xd01a));
        // E7 0280
        gbc.setState(0xab6b, 0xb11e, 0x27f0, 0x7d00, 0x4989, 0xba8b, 0x0, 0x0);
        gbc.writeMem(0xab6b, { 0xe7 });
        gbc.writeMem(0xb11c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb11c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xab6b));
        EXPECT(0x6c, gbc.readMem(0xb11c));
        EXPECT(0xab, gbc.readMem(0xb11d));
        // E7 0284
        gbc.setState(0x9ecb, 0xeb78, 0xd1a0, 0x35a9, 0x12e9, 0xc4a, 0x0, 0x0);
        gbc.writeMem(0x9ecb, { 0xe7 });
        gbc.writeMem(0xeb76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeb76, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9ecb));
        EXPECT(0xcc, gbc.readMem(0xeb76));
        EXPECT(0x9e, gbc.readMem(0xeb77));
        // E7 028E
        gbc.setState(0x3769, 0xc005, 0x7680, 0xfd78, 0x3ae2, 0xac19, 0x0, 0x0);
        gbc.writeMem(0x3769, { 0xe7 });
        gbc.writeMem(0xc003, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc003, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc003));
        EXPECT(0x37, gbc.readMem(0xc004));
        // E7 028F
        gbc.setState(0xb216, 0xdc5a, 0x9a30, 0x25d5, 0x1fce, 0x79f, 0x0, 0x0);
        gbc.writeMem(0xb216, { 0xe7 });
        gbc.writeMem(0xdc58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdc58, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb216));
        EXPECT(0x17, gbc.readMem(0xdc58));
        EXPECT(0xb2, gbc.readMem(0xdc59));
        // E7 0290
        gbc.setState(0xf3b, 0xf695, 0xdb80, 0xc80c, 0x4227, 0x3e38, 0x0, 0x0);
        gbc.writeMem(0xf3b, { 0xe7 });
        gbc.writeMem(0xf693, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf693, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xf693));
        EXPECT(0xf, gbc.readMem(0xf694));
        // E7 0295
        gbc.setState(0xa0e6, 0xf21a, 0xa10, 0x801b, 0xe7eb, 0x3aa0, 0x1, 0x1);
        gbc.writeMem(0xa0e6, { 0xe7 });
        gbc.writeMem(0xf218, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf218, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa0e6));
        EXPECT(0xe7, gbc.readMem(0xf218));
        EXPECT(0xa0, gbc.readMem(0xf219));
        // E7 0296
        gbc.setState(0xbcdb, 0xc45d, 0xf310, 0x469f, 0x4053, 0x26b8, 0x1, 0x0);
        gbc.writeMem(0xbcdb, { 0xe7 });
        gbc.writeMem(0xc45b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbcdb));
        EXPECT(0xdc, gbc.readMem(0xc45b));
        EXPECT(0xbc, gbc.readMem(0xc45c));
        // E7 0299
        gbc.setState(0xe4d9, 0xebf4, 0x68f0, 0xef05, 0x6446, 0x9522, 0x0, 0x1);
        gbc.writeMem(0xe4d9, { 0xe7 });
        gbc.writeMem(0xebf2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xebf2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe4d9));
        EXPECT(0xda, gbc.readMem(0xebf2));
        EXPECT(0xe4, gbc.readMem(0xebf3));
        // E7 029B
        gbc.setState(0x6deb, 0x9712, 0x56b0, 0x5ad7, 0xb1f4, 0xa4e2, 0x1, 0x1);
        gbc.writeMem(0x6deb, { 0xe7 });
        gbc.writeMem(0x9710, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9710, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9710));
        EXPECT(0x6d, gbc.readMem(0x9711));
        // E7 029C
        gbc.setState(0x96c4, 0xc07e, 0x9cb0, 0x562d, 0xbe32, 0xdae, 0x1, 0x0);
        gbc.writeMem(0x96c4, { 0xe7 });
        gbc.writeMem(0xc07c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc07c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x96c4));
        EXPECT(0xc5, gbc.readMem(0xc07c));
        EXPECT(0x96, gbc.readMem(0xc07d));
        // E7 029D
        gbc.setState(0xd417, 0xe8fe, 0xa020, 0xa7dd, 0x73f2, 0xa334, 0x0, 0x1);
        gbc.writeMem(0xd417, { 0xe7 });
        gbc.writeMem(0xe8fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe8fc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd417));
        EXPECT(0x18, gbc.readMem(0xe8fc));
        EXPECT(0xd4, gbc.readMem(0xe8fd));
        // E7 029E
        gbc.setState(0xea1c, 0xfa44, 0x60b0, 0xcf0f, 0x18a5, 0x2447, 0x0, 0x1);
        gbc.writeMem(0xea1c, { 0xe7 });
        gbc.writeMem(0xfa42, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xea1c));
        EXPECT(0x1d, gbc.readMem(0xfa42));
        EXPECT(0xea, gbc.readMem(0xfa43));
        // E7 029F
        gbc.setState(0xe32a, 0xaab3, 0xb860, 0xa579, 0x1fb2, 0x301c, 0x0, 0x1);
        gbc.writeMem(0xaab1, { 0x0, 0x0 });
        gbc.writeMem(0xe32a, { 0xe7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaab1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaab1));
        EXPECT(0xe3, gbc.readMem(0xaab2));
        EXPECT(0xe7, gbc.readMem(0xe32a));
        // E7 02A0
        gbc.setState(0xd012, 0xd5e6, 0x50b0, 0x4f70, 0x41b6, 0xe560, 0x1, 0x0);
        gbc.writeMem(0xd012, { 0xe7 });
        gbc.writeMem(0xd5e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd5e4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd012));
        EXPECT(0x13, gbc.readMem(0xd5e4));
        EXPECT(0xd0, gbc.readMem(0xd5e5));
        // E7 02A1
        gbc.setState(0x13e4, 0xf9b1, 0xda80, 0xd1b4, 0x4a61, 0x5598, 0x1, 0x1);
        gbc.writeMem(0x13e4, { 0xe7 });
        gbc.writeMem(0xf9af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf9af, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xf9af));
        EXPECT(0x13, gbc.readMem(0xf9b0));
        // E7 02A2
        gbc.setState(0xef9a, 0x919d, 0xa200, 0xbdb8, 0x5d34, 0xa41f, 0x1, 0x1);
        gbc.writeMem(0x919b, { 0x0, 0x0 });
        gbc.writeMem(0xef9a, { 0xe7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x919b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x919b));
        EXPECT(0xef, gbc.readMem(0x919c));
        EXPECT(0xe7, gbc.readMem(0xef9a));
        // E7 02A4
        gbc.setState(0xee7b, 0xdb8d, 0xa6d0, 0x2f12, 0x2de4, 0x14bb, 0x1, 0x0);
        gbc.writeMem(0xdb8b, { 0x0, 0x0 });
        gbc.writeMem(0xee7b, { 0xe7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdb8b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xdb8b));
        EXPECT(0xee, gbc.readMem(0xdb8c));
        EXPECT(0xe7, gbc.readMem(0xee7b));
        // E7 02A5
        gbc.setState(0x7890, 0x8ef7, 0x8080, 0xf2a4, 0x6e27, 0x5b0d, 0x1, 0x0);
        gbc.writeMem(0x7890, { 0xe7 });
        gbc.writeMem(0x8ef5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8ef5));
        EXPECT(0x78, gbc.readMem(0x8ef6));
        // E7 02A8
        gbc.setState(0xa995, 0xe591, 0x55f0, 0x643c, 0x9768, 0xcab2, 0x1, 0x1);
        gbc.writeMem(0xa995, { 0xe7 });
        gbc.writeMem(0xe58f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe58f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa995));
        EXPECT(0x96, gbc.readMem(0xe58f));
        EXPECT(0xa9, gbc.readMem(0xe590));
        // E7 02A9
        gbc.setState(0xc735, 0xf611, 0x5cd0, 0xf750, 0xc486, 0x89c9, 0x1, 0x0);
        gbc.writeMem(0xc735, { 0xe7 });
        gbc.writeMem(0xf60f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf60f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc735));
        EXPECT(0x36, gbc.readMem(0xf60f));
        EXPECT(0xc7, gbc.readMem(0xf610));
        // E7 02AB
        gbc.setState(0xd2b2, 0x91a5, 0x9a60, 0x362d, 0x3bb0, 0x7595, 0x0, 0x1);
        gbc.writeMem(0x91a3, { 0x0, 0x0 });
        gbc.writeMem(0xd2b2, { 0xe7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x91a3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x91a3));
        EXPECT(0xd2, gbc.readMem(0x91a4));
        EXPECT(0xe7, gbc.readMem(0xd2b2));
        // E7 02AE
        gbc.setState(0x3e14, 0xce6f, 0x1430, 0xfa5c, 0x7777, 0xb104, 0x1, 0x1);
        gbc.writeMem(0x3e14, { 0xe7 });
        gbc.writeMem(0xce6d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xce6d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xce6d));
        EXPECT(0x3e, gbc.readMem(0xce6e));
        // E7 02B0
        gbc.setState(0x546a, 0xa585, 0x1e20, 0x3df, 0xc621, 0x6927, 0x0, 0x0);
        gbc.writeMem(0x546a, { 0xe7 });
        gbc.writeMem(0xa583, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa583, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa583));
        EXPECT(0x54, gbc.readMem(0xa584));
        // E7 02B4
        gbc.setState(0x7071, 0xc2cd, 0xe8d0, 0xa85, 0x5b62, 0xe6e1, 0x0, 0x1);
        gbc.writeMem(0x7071, { 0xe7 });
        gbc.writeMem(0xc2cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc2cb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc2cb));
        EXPECT(0x70, gbc.readMem(0xc2cc));
        // E7 02B6
        gbc.setState(0xb15f, 0x8d2d, 0xbe20, 0x317e, 0x7b59, 0x91e1, 0x0, 0x0);
        gbc.writeMem(0x8d2b, { 0x0, 0x0 });
        gbc.writeMem(0xb15f, { 0xe7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8d2b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8d2b));
        EXPECT(0xb1, gbc.readMem(0x8d2c));
        EXPECT(0xe7, gbc.readMem(0xb15f));
        // E7 02B7
        gbc.setState(0x3e14, 0xac72, 0x17d0, 0x74e6, 0xefc7, 0xfb70, 0x0, 0x1);
        gbc.writeMem(0x3e14, { 0xe7 });
        gbc.writeMem(0xac70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xac70, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xac70));
        EXPECT(0x3e, gbc.readMem(0xac71));
        // E7 02B8
        gbc.setState(0x55e1, 0xca5a, 0x1c30, 0x84c2, 0xb554, 0x780f, 0x0, 0x1);
        gbc.writeMem(0x55e1, { 0xe7 });
        gbc.writeMem(0xca58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca58, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xca58));
        EXPECT(0x55, gbc.readMem(0xca59));
        // E7 02BB
        gbc.setState(0x3bcf, 0xb064, 0x58a0, 0xafaa, 0x4a92, 0x4dc2, 0x0, 0x0);
        gbc.writeMem(0x3bcf, { 0xe7 });
        gbc.writeMem(0xb062, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb062, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb062));
        EXPECT(0x3b, gbc.readMem(0xb063));
        // E7 02BD
        gbc.setState(0x9fde, 0xf801, 0x7780, 0xe41b, 0x5d5a, 0x9cd7, 0x0, 0x1);
        gbc.writeMem(0x9fde, { 0xe7 });
        gbc.writeMem(0xf7ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf7ff, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9fde));
        EXPECT(0xdf, gbc.readMem(0xf7ff));
        EXPECT(0x9f, gbc.readMem(0xf800));
        // E7 02C2
        gbc.setState(0x465, 0xf438, 0xb640, 0x5fd8, 0x1318, 0x3b7d, 0x0, 0x1);
        gbc.writeMem(0x465, { 0xe7 });
        gbc.writeMem(0xf436, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf436, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xf436));
        EXPECT(0x4, gbc.readMem(0xf437));
        // E7 02C6
        gbc.setState(0x8e23, 0xad61, 0xe8e0, 0x4d7d, 0xd887, 0x8058, 0x1, 0x0);
        gbc.writeMem(0x8e23, { 0xe7 });
        gbc.writeMem(0xad5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8e23));
        EXPECT(0x24, gbc.readMem(0xad5f));
        EXPECT(0x8e, gbc.readMem(0xad60));
        // E7 02C8
        gbc.setState(0x2a9, 0xb798, 0xba70, 0x7d60, 0x4788, 0x27d8, 0x0, 0x1);
        gbc.writeMem(0x2a9, { 0xe7 });
        gbc.writeMem(0xb796, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb796, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb796));
        EXPECT(0x2, gbc.readMem(0xb797));
        // E7 02C9
        gbc.setState(0x5662, 0xfcb7, 0xc3f0, 0xc6ed, 0x2551, 0x7316, 0x1, 0x0);
        gbc.writeMem(0x5662, { 0xe7 });
        gbc.writeMem(0xfcb5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfcb5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xfcb5));
        EXPECT(0x56, gbc.readMem(0xfcb6));
        // E7 02CA
        gbc.setState(0xb78a, 0xdd76, 0xa3e0, 0x1ab0, 0xab8d, 0x9fbe, 0x1, 0x0);
        gbc.writeMem(0xb78a, { 0xe7 });
        gbc.writeMem(0xdd74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdd74, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb78a));
        EXPECT(0x8b, gbc.readMem(0xdd74));
        EXPECT(0xb7, gbc.readMem(0xdd75));
        // E7 02CD
        gbc.setState(0x1366, 0xa456, 0x1d80, 0xa330, 0xb6e2, 0xad12, 0x0, 0x1);
        gbc.writeMem(0x1366, { 0xe7 });
        gbc.writeMem(0xa454, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa454, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa454));
        EXPECT(0x13, gbc.readMem(0xa455));
        // E7 02CE
        gbc.setState(0xa3b7, 0x9f78, 0x21d0, 0xf1dc, 0x172f, 0xac72, 0x1, 0x1);
        gbc.writeMem(0x9f76, { 0x0, 0x0 });
        gbc.writeMem(0xa3b7, { 0xe7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9f76, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9f76));
        EXPECT(0xa3, gbc.readMem(0x9f77));
        EXPECT(0xe7, gbc.readMem(0xa3b7));
        // E7 02D0
        gbc.setState(0x541, 0x98db, 0x3800, 0x4e94, 0xaf69, 0xb00f, 0x0, 0x1);
        gbc.writeMem(0x541, { 0xe7 });
        gbc.writeMem(0x98d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x98d9, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x98d9));
        EXPECT(0x5, gbc.readMem(0x98da));
        // E7 02D3
        gbc.setState(0xda92, 0xbcbd, 0xecb0, 0x7e28, 0x8c03, 0xa4a8, 0x1, 0x1);
        gbc.writeMem(0xbcbb, { 0x0, 0x0 });
        gbc.writeMem(0xda92, { 0xe7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbcbb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbcbb));
        EXPECT(0xda, gbc.readMem(0xbcbc));
        EXPECT(0xe7, gbc.readMem(0xda92));
        // E7 02D9
        gbc.setState(0x8816, 0xe9e1, 0x6df0, 0x706c, 0x98, 0x4ba5, 0x1, 0x0);
        gbc.writeMem(0x8816, { 0xe7 });
        gbc.writeMem(0xe9df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe9df, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8816));
        EXPECT(0x17, gbc.readMem(0xe9df));
        EXPECT(0x88, gbc.readMem(0xe9e0));
        // E7 02DC
        gbc.setState(0xb199, 0x8933, 0x6e30, 0x7fb8, 0x9754, 0x2bee, 0x1, 0x0);
        gbc.writeMem(0x8931, { 0x0, 0x0 });
        gbc.writeMem(0xb199, { 0xe7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8931));
        EXPECT(0xb1, gbc.readMem(0x8932));
        EXPECT(0xe7, gbc.readMem(0xb199));
        // E7 02DD
        gbc.setState(0x9eee, 0xc5c0, 0xabb0, 0xf936, 0x2b0f, 0xce13, 0x1, 0x1);
        gbc.writeMem(0x9eee, { 0xe7 });
        gbc.writeMem(0xc5be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc5be, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9eee));
        EXPECT(0xef, gbc.readMem(0xc5be));
        EXPECT(0x9e, gbc.readMem(0xc5bf));
        // E7 02DE
        gbc.setState(0x962, 0xe481, 0xb840, 0x5c9b, 0x1841, 0x897b, 0x0, 0x0);
        gbc.writeMem(0x962, { 0xe7 });
        gbc.writeMem(0xe47f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe47f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe47f));
        EXPECT(0x9, gbc.readMem(0xe480));
        // E7 02DF
        gbc.setState(0x1506, 0xd12d, 0xc0b0, 0xa38c, 0x29c2, 0xff19, 0x0, 0x1);
        gbc.writeMem(0x1506, { 0xe7 });
        gbc.writeMem(0xd12b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd12b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd12b));
        EXPECT(0x15, gbc.readMem(0xd12c));
        // E7 02E0
        gbc.setState(0xe282, 0x8f08, 0x2510, 0xa42b, 0x83aa, 0xde2c, 0x0, 0x0);
        gbc.writeMem(0x8f06, { 0x0, 0x0 });
        gbc.writeMem(0xe282, { 0xe7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8f06, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8f06));
        EXPECT(0xe2, gbc.readMem(0x8f07));
        EXPECT(0xe7, gbc.readMem(0xe282));
        // E7 02E1
        gbc.setState(0x84a3, 0xa2d5, 0xc6c0, 0xd543, 0x73e0, 0xe66c, 0x1, 0x0);
        gbc.writeMem(0x84a3, { 0xe7 });
        gbc.writeMem(0xa2d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa2d3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x84a3));
        EXPECT(0xa4, gbc.readMem(0xa2d3));
        EXPECT(0x84, gbc.readMem(0xa2d4));
        // E7 02E2
        gbc.setState(0x7f92, 0xecec, 0x15f0, 0x90bc, 0x76b5, 0xd869, 0x1, 0x0);
        gbc.writeMem(0x7f92, { 0xe7 });
        gbc.writeMem(0xecea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xecea, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xecea));
        EXPECT(0x7f, gbc.readMem(0xeceb));
        // E7 02E3
        gbc.setState(0x838d, 0xb405, 0x6a90, 0xcb42, 0xa074, 0x2dbc, 0x0, 0x0);
        gbc.writeMem(0x838d, { 0xe7 });
        gbc.writeMem(0xb403, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb403, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x838d));
        EXPECT(0x8e, gbc.readMem(0xb403));
        EXPECT(0x83, gbc.readMem(0xb404));
        // E7 02E5
        gbc.setState(0xb452, 0xaa91, 0x2d80, 0x337b, 0x67b9, 0x7154, 0x0, 0x0);
        gbc.writeMem(0xaa8f, { 0x0, 0x0 });
        gbc.writeMem(0xb452, { 0xe7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaa8f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xaa8f));
        EXPECT(0xb4, gbc.readMem(0xaa90));
        EXPECT(0xe7, gbc.readMem(0xb452));
        // E7 02E6
        gbc.setState(0x349f, 0xde08, 0xeb00, 0x599a, 0x610f, 0xb4c4, 0x1, 0x1);
        gbc.writeMem(0x349f, { 0xe7 });
        gbc.writeMem(0xde06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde06, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xde06));
        EXPECT(0x34, gbc.readMem(0xde07));
        // E7 02E7
        gbc.setState(0x4b1d, 0xeee8, 0x2e10, 0xf2ad, 0x1341, 0x97c9, 0x0, 0x0);
        gbc.writeMem(0x4b1d, { 0xe7 });
        gbc.writeMem(0xeee6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xeee6));
        EXPECT(0x4b, gbc.readMem(0xeee7));
        // E7 02E9
        gbc.setState(0x7419, 0x8c4b, 0xb560, 0xf237, 0xf6fc, 0x6705, 0x1, 0x0);
        gbc.writeMem(0x7419, { 0xe7 });
        gbc.writeMem(0x8c49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8c49, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8c49));
        EXPECT(0x74, gbc.readMem(0x8c4a));
        // E7 02EA
        gbc.setState(0x39d0, 0xf3fc, 0xfc10, 0xffa1, 0xcfd, 0x4c4f, 0x1, 0x1);
        gbc.writeMem(0x39d0, { 0xe7 });
        gbc.writeMem(0xf3fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3fa, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xf3fa));
        EXPECT(0x39, gbc.readMem(0xf3fb));
        // E7 02EB
        gbc.setState(0xde03, 0xefc0, 0x3d40, 0xab7f, 0xba7d, 0xb7a1, 0x1, 0x0);
        gbc.writeMem(0xde03, { 0xe7 });
        gbc.writeMem(0xefbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xde03));
        EXPECT(0x4, gbc.readMem(0xefbe));
        EXPECT(0xde, gbc.readMem(0xefbf));
        // E7 02ED
        gbc.setState(0xcdda, 0x83c2, 0xad10, 0x8ca2, 0xad0d, 0x147f, 0x1, 0x0);
        gbc.writeMem(0x83c0, { 0x0, 0x0 });
        gbc.writeMem(0xcdda, { 0xe7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x83c0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x83c0));
        EXPECT(0xcd, gbc.readMem(0x83c1));
        EXPECT(0xe7, gbc.readMem(0xcdda));
        // E7 02EE
        gbc.setState(0x2dca, 0xecd7, 0xd930, 0x87f4, 0xe511, 0xe65b, 0x1, 0x0);
        gbc.writeMem(0x2dca, { 0xe7 });
        gbc.writeMem(0xecd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd5));
        EXPECT(0x2d, gbc.readMem(0xecd6));
        // E7 02F1
        gbc.setState(0xa8cc, 0xb241, 0x5050, 0xe4cb, 0x5746, 0x6d41, 0x1, 0x1);
        gbc.writeMem(0xa8cc, { 0xe7 });
        gbc.writeMem(0xb23f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb23f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa8cc));
        EXPECT(0xcd, gbc.readMem(0xb23f));
        EXPECT(0xa8, gbc.readMem(0xb240));
        // E7 02F2
        gbc.setState(0xa1c0, 0xb2b0, 0xb740, 0x426e, 0x1640, 0xf53, 0x1, 0x1);
        gbc.writeMem(0xa1c0, { 0xe7 });
        gbc.writeMem(0xb2ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb2ae, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa1c0));
        EXPECT(0xc1, gbc.readMem(0xb2ae));
        EXPECT(0xa1, gbc.readMem(0xb2af));
        // E7 02F3
        gbc.setState(0x8e39, 0xf77f, 0x3600, 0x80ee, 0x7170, 0x7655, 0x0, 0x0);
        gbc.writeMem(0x8e39, { 0xe7 });
        gbc.writeMem(0xf77d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8e39));
        EXPECT(0x3a, gbc.readMem(0xf77d));
        EXPECT(0x8e, gbc.readMem(0xf77e));
        // E7 02F4
        gbc.setState(0x11fa, 0xcf9d, 0xb0f0, 0xbef0, 0xa3f6, 0x9164, 0x0, 0x1);
        gbc.writeMem(0x11fa, { 0xe7 });
        gbc.writeMem(0xcf9b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcf9b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xcf9b));
        EXPECT(0x11, gbc.readMem(0xcf9c));
        // E7 02F5
        gbc.setState(0x10b7, 0xc005, 0x8a50, 0x56c5, 0xa3f, 0x2f77, 0x0, 0x1);
        gbc.writeMem(0x10b7, { 0xe7 });
        gbc.writeMem(0xc003, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc003, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xc003));
        EXPECT(0x10, gbc.readMem(0xc004));
        // E7 02F6
        gbc.setState(0xa88c, 0xd014, 0xabb0, 0xee6a, 0x9386, 0x8ee, 0x1, 0x1);
        gbc.writeMem(0xa88c, { 0xe7 });
        gbc.writeMem(0xd012, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa88c));
        EXPECT(0x8d, gbc.readMem(0xd012));
        EXPECT(0xa8, gbc.readMem(0xd013));
        // E7 02F9
        gbc.setState(0xcf24, 0xea2d, 0xac90, 0x4682, 0x3a06, 0x1594, 0x1, 0x0);
        gbc.writeMem(0xcf24, { 0xe7 });
        gbc.writeMem(0xea2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xea2b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xcf24));
        EXPECT(0x25, gbc.readMem(0xea2b));
        EXPECT(0xcf, gbc.readMem(0xea2c));
        // E7 02FD
        gbc.setState(0xcd17, 0xda94, 0xce20, 0x2f35, 0x8e6c, 0x3731, 0x0, 0x0);
        gbc.writeMem(0xcd17, { 0xe7 });
        gbc.writeMem(0xda92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xcd17));
        EXPECT(0x18, gbc.readMem(0xda92));
        EXPECT(0xcd, gbc.readMem(0xda93));
        // E7 0300
        gbc.setState(0xef75, 0xffad, 0xd400, 0x4dd7, 0xc302, 0xdf1, 0x1, 0x0);
        gbc.writeMem(0xef75, { 0xe7 });
        gbc.writeMem(0xffab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xffab, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xef75));
        EXPECT(0x76, gbc.readMem(0xffab));
        EXPECT(0xef, gbc.readMem(0xffac));
        // E7 0301
        gbc.setState(0x7f49, 0xa10b, 0xc300, 0x7bd2, 0xb268, 0x3776, 0x1, 0x1);
        gbc.writeMem(0x7f49, { 0xe7 });
        gbc.writeMem(0xa109, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa109, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa109));
        EXPECT(0x7f, gbc.readMem(0xa10a));
        // E7 0303
        gbc.setState(0xc5a9, 0xe94b, 0x50d0, 0x86b9, 0xe0d5, 0x66a, 0x0, 0x1);
        gbc.writeMem(0xc5a9, { 0xe7 });
        gbc.writeMem(0xe949, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe949, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc5a9));
        EXPECT(0xaa, gbc.readMem(0xe949));
        EXPECT(0xc5, gbc.readMem(0xe94a));
        // E7 0305
        gbc.setState(0xdbe0, 0xfdf4, 0x4150, 0xd0b5, 0x6f2, 0x67, 0x1, 0x1);
        gbc.writeMem(0xdbe0, { 0xe7 });
        gbc.writeMem(0xfdf2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfdf2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdbe0));
        EXPECT(0xe1, gbc.readMem(0xfdf2));
        EXPECT(0xdb, gbc.readMem(0xfdf3));
        // E7 0307
        gbc.setState(0xf8c, 0xabfd, 0x6540, 0xe028, 0x4fec, 0x8b60, 0x1, 0x0);
        gbc.writeMem(0xf8c, { 0xe7 });
        gbc.writeMem(0xabfb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xabfb, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xabfb));
        EXPECT(0xf, gbc.readMem(0xabfc));
        // E7 0308
        gbc.setState(0xa8ca, 0xb91d, 0xd930, 0x266b, 0x34b5, 0x9f15, 0x1, 0x1);
        gbc.writeMem(0xa8ca, { 0xe7 });
        gbc.writeMem(0xb91b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb91b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa8ca));
        EXPECT(0xcb, gbc.readMem(0xb91b));
        EXPECT(0xa8, gbc.readMem(0xb91c));
        // E7 030B
        gbc.setState(0x8878, 0xb362, 0x6c60, 0x6ff4, 0xa2c0, 0x6d94, 0x0, 0x0);
        gbc.writeMem(0x8878, { 0xe7 });
        gbc.writeMem(0xb360, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb360, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8878));
        EXPECT(0x79, gbc.readMem(0xb360));
        EXPECT(0x88, gbc.readMem(0xb361));
        // E7 030D
        gbc.setState(0x67b8, 0xc966, 0x6aa0, 0xfdd5, 0x5207, 0xe4a0, 0x1, 0x0);
        gbc.writeMem(0x67b8, { 0xe7 });
        gbc.writeMem(0xc964, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc964, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc964));
        EXPECT(0x67, gbc.readMem(0xc965));
        // E7 030E
        gbc.setState(0xa2c9, 0xe97b, 0xa6b0, 0x5a42, 0x1b15, 0xc4f9, 0x1, 0x0);
        gbc.writeMem(0xa2c9, { 0xe7 });
        gbc.writeMem(0xe979, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe979, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa2c9));
        EXPECT(0xca, gbc.readMem(0xe979));
        EXPECT(0xa2, gbc.readMem(0xe97a));
        // E7 0310
        gbc.setState(0xbb42, 0xcfa7, 0xee70, 0x25b4, 0x72b2, 0x29eb, 0x0, 0x0);
        gbc.writeMem(0xbb42, { 0xe7 });
        gbc.writeMem(0xcfa5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcfa5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbb42));
        EXPECT(0x43, gbc.readMem(0xcfa5));
        EXPECT(0xbb, gbc.readMem(0xcfa6));
        // E7 0312
        gbc.setState(0x5a52, 0xd817, 0x3d0, 0x894d, 0x869e, 0x81a9, 0x0, 0x0);
        gbc.writeMem(0x5a52, { 0xe7 });
        gbc.writeMem(0xd815, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd815, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd815));
        EXPECT(0x5a, gbc.readMem(0xd816));
        // E7 0315
        gbc.setState(0x688e, 0xc3e7, 0x490, 0xf38d, 0x4f37, 0x2e25, 0x0, 0x0);
        gbc.writeMem(0x688e, { 0xe7 });
        gbc.writeMem(0xc3e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc3e5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc3e5));
        EXPECT(0x68, gbc.readMem(0xc3e6));
        // E7 0317
        gbc.setState(0x890d, 0xe429, 0x930, 0x734, 0xcb00, 0x1531, 0x0, 0x1);
        gbc.writeMem(0x890d, { 0xe7 });
        gbc.writeMem(0xe427, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe427, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x890d));
        EXPECT(0xe, gbc.readMem(0xe427));
        EXPECT(0x89, gbc.readMem(0xe428));
        // E7 0319
        gbc.setState(0xb456, 0xb582, 0xbe60, 0x9176, 0x7242, 0xbf05, 0x0, 0x0);
        gbc.writeMem(0xb456, { 0xe7 });
        gbc.writeMem(0xb580, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb456));
        EXPECT(0x57, gbc.readMem(0xb580));
        EXPECT(0xb4, gbc.readMem(0xb581));
        // E7 031A
        gbc.setState(0x6083, 0xaac5, 0xc0f0, 0xdb22, 0x6d9b, 0x3c06, 0x0, 0x0);
        gbc.writeMem(0x6083, { 0xe7 });
        gbc.writeMem(0xaac3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xaac3));
        EXPECT(0x60, gbc.readMem(0xaac4));
        // E7 031E
        gbc.setState(0x12d9, 0xd0f2, 0x6740, 0x4741, 0xcc06, 0x9934, 0x1, 0x1);
        gbc.writeMem(0x12d9, { 0xe7 });
        gbc.writeMem(0xd0f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd0f0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd0f0));
        EXPECT(0x12, gbc.readMem(0xd0f1));
        // E7 031F
        gbc.setState(0x171d, 0x81a8, 0xddc0, 0x2e6c, 0x7bb8, 0x593a, 0x1, 0x0);
        gbc.writeMem(0x171d, { 0xe7 });
        gbc.writeMem(0x81a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x81a6, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x81a6));
        EXPECT(0x17, gbc.readMem(0x81a7));
        // E7 0322
        gbc.setState(0xdbd0, 0xa8d9, 0x1b60, 0xfd1d, 0x99b3, 0x8052, 0x0, 0x1);
        gbc.writeMem(0xa8d7, { 0x0, 0x0 });
        gbc.writeMem(0xdbd0, { 0xe7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa8d7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa8d7));
        EXPECT(0xdb, gbc.readMem(0xa8d8));
        EXPECT(0xe7, gbc.readMem(0xdbd0));
        // E7 0323
        gbc.setState(0x7beb, 0xf79c, 0x9690, 0x5e00, 0x4482, 0xfe6, 0x1, 0x1);
        gbc.writeMem(0x7beb, { 0xe7 });
        gbc.writeMem(0xf79a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf79a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xf79a));
        EXPECT(0x7b, gbc.readMem(0xf79b));
        // E7 0326
        gbc.setState(0x1ad2, 0xc257, 0x7fb0, 0xf6aa, 0x6f4d, 0x6b20, 0x0, 0x1);
        gbc.writeMem(0x1ad2, { 0xe7 });
        gbc.writeMem(0xc255, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc255, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xc255));
        EXPECT(0x1a, gbc.readMem(0xc256));
        // E7 0327
        gbc.setState(0x98a1, 0xfb7f, 0xd820, 0x5c4, 0x4ab9, 0xb4ff, 0x1, 0x0);
        gbc.writeMem(0x98a1, { 0xe7 });
        gbc.writeMem(0xfb7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfb7d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x98a1));
        EXPECT(0xa2, gbc.readMem(0xfb7d));
        EXPECT(0x98, gbc.readMem(0xfb7e));
        // E7 032A
        gbc.setState(0xd19a, 0xf052, 0xe410, 0x7b86, 0x56aa, 0x8635, 0x1, 0x1);
        gbc.writeMem(0xd19a, { 0xe7 });
        gbc.writeMem(0xf050, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd19a));
        EXPECT(0x9b, gbc.readMem(0xf050));
        EXPECT(0xd1, gbc.readMem(0xf051));
        // E7 032E
        gbc.setState(0xa809, 0x929c, 0xaf20, 0xaad1, 0x522d, 0x2c2e, 0x0, 0x0);
        gbc.writeMem(0x929a, { 0x0, 0x0 });
        gbc.writeMem(0xa809, { 0xe7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x929a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x929a));
        EXPECT(0xa8, gbc.readMem(0x929b));
        EXPECT(0xe7, gbc.readMem(0xa809));
        // E7 0330
        gbc.setState(0xb2e8, 0xeadb, 0xfc00, 0xfa0b, 0x8a7, 0xc10e, 0x1, 0x1);
        gbc.writeMem(0xb2e8, { 0xe7 });
        gbc.writeMem(0xead9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xead9, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb2e8));
        EXPECT(0xe9, gbc.readMem(0xead9));
        EXPECT(0xb2, gbc.readMem(0xeada));
        // E7 0334
        gbc.setState(0x95, 0xecac, 0x1230, 0x6c59, 0x98a2, 0x392, 0x0, 0x1);
        gbc.writeMem(0x95, { 0xe7 });
        gbc.writeMem(0xecaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xecaa, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xecaa));
        EXPECT(0x0, gbc.readMem(0xecab));
        // E7 0335
        gbc.setState(0xcab0, 0xf467, 0xcdb0, 0x965e, 0x7be8, 0x9bce, 0x0, 0x1);
        gbc.writeMem(0xcab0, { 0xe7 });
        gbc.writeMem(0xf465, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xcab0));
        EXPECT(0xb1, gbc.readMem(0xf465));
        EXPECT(0xca, gbc.readMem(0xf466));
        // E7 0336
        gbc.setState(0x5baa, 0xa492, 0xc070, 0x7075, 0x3a4f, 0xc692, 0x0, 0x1);
        gbc.writeMem(0x5baa, { 0xe7 });
        gbc.writeMem(0xa490, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa490, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xa490));
        EXPECT(0x5b, gbc.readMem(0xa491));
        // E7 0337
        gbc.setState(0x4770, 0xc521, 0x1b70, 0x9e7f, 0xd79c, 0xd040, 0x1, 0x1);
        gbc.writeMem(0x4770, { 0xe7 });
        gbc.writeMem(0xc51f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc51f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc51f));
        EXPECT(0x47, gbc.readMem(0xc520));
        // E7 033A
        gbc.setState(0x686f, 0xf859, 0x3820, 0x7223, 0x2843, 0xea4e, 0x1, 0x1);
        gbc.writeMem(0x686f, { 0xe7 });
        gbc.writeMem(0xf857, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf857, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xf857));
        EXPECT(0x68, gbc.readMem(0xf858));
        // E7 033C
        gbc.setState(0x6cb4, 0xf1bf, 0x96c0, 0xafff, 0xbf63, 0xc903, 0x1, 0x0);
        gbc.writeMem(0x6cb4, { 0xe7 });
        gbc.writeMem(0xf1bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf1bd));
        EXPECT(0x6c, gbc.readMem(0xf1be));
        // E7 033D
        gbc.setState(0xaec7, 0xbe6a, 0x50, 0x2074, 0xa22a, 0x74bf, 0x0, 0x1);
        gbc.writeMem(0xaec7, { 0xe7 });
        gbc.writeMem(0xbe68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbe68, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xaec7));
        EXPECT(0xc8, gbc.readMem(0xbe68));
        EXPECT(0xae, gbc.readMem(0xbe69));
        // E7 033E
        gbc.setState(0xe2e1, 0x9d09, 0xfd10, 0x4a5d, 0x599a, 0x605e, 0x1, 0x0);
        gbc.writeMem(0x9d07, { 0x0, 0x0 });
        gbc.writeMem(0xe2e1, { 0xe7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9d07, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9d07));
        EXPECT(0xe2, gbc.readMem(0x9d08));
        EXPECT(0xe7, gbc.readMem(0xe2e1));
        // E7 033F
        gbc.setState(0x6b18, 0xbf5d, 0xf4e0, 0x9c7f, 0x6a9, 0x665d, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xe7 });
        gbc.writeMem(0xbf5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbf5b));
        EXPECT(0x6b, gbc.readMem(0xbf5c));
        // E7 0340
        gbc.setState(0xc866, 0xe7aa, 0x610, 0x3fc0, 0x8e50, 0x9e16, 0x0, 0x1);
        gbc.writeMem(0xc866, { 0xe7 });
        gbc.writeMem(0xe7a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe7a8, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc866));
        EXPECT(0x67, gbc.readMem(0xe7a8));
        EXPECT(0xc8, gbc.readMem(0xe7a9));
        // E7 0341
        gbc.setState(0x2638, 0xb736, 0x92c0, 0x63ee, 0xf5bf, 0x6c40, 0x0, 0x1);
        gbc.writeMem(0x2638, { 0xe7 });
        gbc.writeMem(0xb734, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb734, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb734));
        EXPECT(0x26, gbc.readMem(0xb735));
        // E7 0342
        gbc.setState(0xcdab, 0xc182, 0x4f30, 0xb9ee, 0x9fd7, 0xc73d, 0x1, 0x1);
        gbc.writeMem(0xc180, { 0x0, 0x0 });
        gbc.writeMem(0xcdab, { 0xe7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc180, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc180));
        EXPECT(0xcd, gbc.readMem(0xc181));
        EXPECT(0xe7, gbc.readMem(0xcdab));
        // E7 0344
        gbc.setState(0x82b9, 0x962b, 0x22d0, 0x9afa, 0x7dae, 0x3e80, 0x1, 0x1);
        gbc.writeMem(0x82b9, { 0xe7 });
        gbc.writeMem(0x9629, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9629, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x82b9));
        EXPECT(0xba, gbc.readMem(0x9629));
        EXPECT(0x82, gbc.readMem(0x962a));
        // E7 0346
        gbc.setState(0x49dc, 0xf03d, 0x28b0, 0xf2fb, 0x637a, 0x582d, 0x0, 0x1);
        gbc.writeMem(0x49dc, { 0xe7 });
        gbc.writeMem(0xf03b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf03b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf03b));
        EXPECT(0x49, gbc.readMem(0xf03c));
        // E7 0348
        gbc.setState(0x7640, 0xb579, 0x3d70, 0xdb87, 0x5718, 0xfdf, 0x1, 0x1);
        gbc.writeMem(0x7640, { 0xe7 });
        gbc.writeMem(0xb577, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb577));
        EXPECT(0x76, gbc.readMem(0xb578));
        // E7 0349
        gbc.setState(0x6a6a, 0xb038, 0x70b0, 0xb6ac, 0xb4fa, 0x82e4, 0x1, 0x0);
        gbc.writeMem(0x6a6a, { 0xe7 });
        gbc.writeMem(0xb036, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb036, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xb036));
        EXPECT(0x6a, gbc.readMem(0xb037));
        // E7 0351
        gbc.setState(0xc395, 0xa36d, 0xd760, 0x8d4f, 0x3579, 0x1a6b, 0x1, 0x0);
        gbc.writeMem(0xa36b, { 0x0, 0x0 });
        gbc.writeMem(0xc395, { 0xe7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa36b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa36b));
        EXPECT(0xc3, gbc.readMem(0xa36c));
        EXPECT(0xe7, gbc.readMem(0xc395));
        // E7 0352
        gbc.setState(0x2ee2, 0xae52, 0x6f20, 0x2e82, 0x3455, 0x5230, 0x0, 0x1);
        gbc.writeMem(0x2ee2, { 0xe7 });
        gbc.writeMem(0xae50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xae50, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xae50));
        EXPECT(0x2e, gbc.readMem(0xae51));
        // E7 0353
        gbc.setState(0xd31d, 0xbc86, 0xd870, 0xbbce, 0x9f21, 0x6d42, 0x1, 0x0);
        gbc.writeMem(0xbc84, { 0x0, 0x0 });
        gbc.writeMem(0xd31d, { 0xe7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbc84, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xbc84));
        EXPECT(0xd3, gbc.readMem(0xbc85));
        EXPECT(0xe7, gbc.readMem(0xd31d));
        // E7 0354
        gbc.setState(0xbf0, 0xba83, 0xbb00, 0x3d5d, 0x9e62, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0xbf0, { 0xe7 });
        gbc.writeMem(0xba81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xba81, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xba81));
        EXPECT(0xb, gbc.readMem(0xba82));
        // E7 0355
        gbc.setState(0x1070, 0x96a1, 0x4ed0, 0x41cf, 0x3b72, 0x6bd4, 0x0, 0x0);
        gbc.writeMem(0x1070, { 0xe7 });
        gbc.writeMem(0x969f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x969f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x969f));
        EXPECT(0x10, gbc.readMem(0x96a0));
        // E7 0357
        gbc.setState(0xbbfd, 0xd501, 0x1f10, 0x5046, 0xc7b, 0x96c1, 0x0, 0x1);
        gbc.writeMem(0xbbfd, { 0xe7 });
        gbc.writeMem(0xd4ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd4ff, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbbfd));
        EXPECT(0xfe, gbc.readMem(0xd4ff));
        EXPECT(0xbb, gbc.readMem(0xd500));
        // E7 0358
        gbc.setState(0x1813, 0xbd74, 0xb480, 0x1877, 0xce72, 0x123f, 0x0, 0x0);
        gbc.writeMem(0x1813, { 0xe7 });
        gbc.writeMem(0xbd72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd72, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbd72));
        EXPECT(0x18, gbc.readMem(0xbd73));
        // E7 035A
        gbc.setState(0x5d5a, 0xf412, 0xb1a0, 0x70e1, 0x1c64, 0xf81f, 0x1, 0x1);
        gbc.writeMem(0x5d5a, { 0xe7 });
        gbc.writeMem(0xf410, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf410, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xf410));
        EXPECT(0x5d, gbc.readMem(0xf411));
        // E7 035C
        gbc.setState(0xc81, 0x9dfe, 0xf8c0, 0xa9d1, 0x5f21, 0xd5f5, 0x0, 0x0);
        gbc.writeMem(0xc81, { 0xe7 });
        gbc.writeMem(0x9dfc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9dfc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9dfc));
        EXPECT(0xc, gbc.readMem(0x9dfd));
        // E7 035D
        gbc.setState(0x2409, 0xda5d, 0x1570, 0x9367, 0xcf56, 0xcd70, 0x1, 0x0);
        gbc.writeMem(0x2409, { 0xe7 });
        gbc.writeMem(0xda5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xda5b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xda5b));
        EXPECT(0x24, gbc.readMem(0xda5c));
        // E7 035E
        gbc.setState(0xede6, 0xdfce, 0x3c20, 0x8929, 0x74e5, 0xb9e6, 0x0, 0x0);
        gbc.writeMem(0xdfcc, { 0x0, 0x0 });
        gbc.writeMem(0xede6, { 0xe7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdfcc));
        EXPECT(0xed, gbc.readMem(0xdfcd));
        EXPECT(0xe7, gbc.readMem(0xede6));
        // E7 035F
        gbc.setState(0xa971, 0xc486, 0x7e0, 0x192, 0xce9d, 0xd4a9, 0x0, 0x1);
        gbc.writeMem(0xa971, { 0xe7 });
        gbc.writeMem(0xc484, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc484, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa971));
        EXPECT(0x72, gbc.readMem(0xc484));
        EXPECT(0xa9, gbc.readMem(0xc485));
        // E7 0360
        gbc.setState(0xb5ea, 0xecea, 0xd400, 0xcd0, 0xad54, 0x3b64, 0x0, 0x1);
        gbc.writeMem(0xb5ea, { 0xe7 });
        gbc.writeMem(0xece8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xece8, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb5ea));
        EXPECT(0xeb, gbc.readMem(0xece8));
        EXPECT(0xb5, gbc.readMem(0xece9));
        // E7 0361
        gbc.setState(0xe04e, 0x9067, 0x25d0, 0xd0d4, 0x73d2, 0x1a5f, 0x1, 0x0);
        gbc.writeMem(0x9065, { 0x0, 0x0 });
        gbc.writeMem(0xe04e, { 0xe7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9065, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9065));
        EXPECT(0xe0, gbc.readMem(0x9066));
        EXPECT(0xe7, gbc.readMem(0xe04e));
        // E7 0362
        gbc.setState(0x824b, 0xf45d, 0x8e50, 0x6796, 0x14c6, 0xabf0, 0x1, 0x1);
        gbc.writeMem(0x824b, { 0xe7 });
        gbc.writeMem(0xf45b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf45b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x824b));
        EXPECT(0x4c, gbc.readMem(0xf45b));
        EXPECT(0x82, gbc.readMem(0xf45c));
        // E7 0366
        gbc.setState(0xad3e, 0xbed2, 0xf8a0, 0x4733, 0xb511, 0x8a76, 0x1, 0x0);
        gbc.writeMem(0xad3e, { 0xe7 });
        gbc.writeMem(0xbed0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbed0, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xad3e));
        EXPECT(0x3f, gbc.readMem(0xbed0));
        EXPECT(0xad, gbc.readMem(0xbed1));
        // E7 0367
        gbc.setState(0xb0fd, 0xa242, 0xfe10, 0x604, 0xb4fc, 0x1c0a, 0x1, 0x1);
        gbc.writeMem(0xa240, { 0x0, 0x0 });
        gbc.writeMem(0xb0fd, { 0xe7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa240, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa240));
        EXPECT(0xb0, gbc.readMem(0xa241));
        EXPECT(0xe7, gbc.readMem(0xb0fd));
        // E7 0368
        gbc.setState(0x56f7, 0xe31c, 0x2280, 0x2c0c, 0x30da, 0x9f73, 0x1, 0x0);
        gbc.writeMem(0x56f7, { 0xe7 });
        gbc.writeMem(0xe31a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe31a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe31a));
        EXPECT(0x56, gbc.readMem(0xe31b));
        // E7 0371
        gbc.setState(0x6a99, 0x8dde, 0x1e0, 0x2c9e, 0x9bd3, 0x2b9e, 0x0, 0x0);
        gbc.writeMem(0x6a99, { 0xe7 });
        gbc.writeMem(0x8ddc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8ddc, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8ddc));
        EXPECT(0x6a, gbc.readMem(0x8ddd));
        // E7 0372
        gbc.setState(0x6cc2, 0xf189, 0x1db0, 0x42b5, 0x2ba6, 0xa0a7, 0x0, 0x0);
        gbc.writeMem(0x6cc2, { 0xe7 });
        gbc.writeMem(0xf187, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf187, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xf187));
        EXPECT(0x6c, gbc.readMem(0xf188));
        // E7 0374
        gbc.setState(0xa228, 0xd5f6, 0xd450, 0x1655, 0x3400, 0x8b18, 0x1, 0x0);
        gbc.writeMem(0xa228, { 0xe7 });
        gbc.writeMem(0xd5f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd5f4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa228));
        EXPECT(0x29, gbc.readMem(0xd5f4));
        EXPECT(0xa2, gbc.readMem(0xd5f5));
        // E7 0379
        gbc.setState(0xc8ee, 0xb675, 0xd500, 0xf5f7, 0x3b1a, 0x5c68, 0x0, 0x1);
        gbc.writeMem(0xb673, { 0x0, 0x0 });
        gbc.writeMem(0xc8ee, { 0xe7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb673, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xb673));
        EXPECT(0xc8, gbc.readMem(0xb674));
        EXPECT(0xe7, gbc.readMem(0xc8ee));
        // E7 037A
        gbc.setState(0xeab3, 0xa09f, 0x91d0, 0xc2b5, 0x46ea, 0x2aff, 0x0, 0x1);
        gbc.writeMem(0xa09d, { 0x0, 0x0 });
        gbc.writeMem(0xeab3, { 0xe7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa09d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xa09d));
        EXPECT(0xea, gbc.readMem(0xa09e));
        EXPECT(0xe7, gbc.readMem(0xeab3));
        // E7 037B
        gbc.setState(0x24b6, 0xad77, 0xeb0, 0xdd4, 0x68bf, 0x84ff, 0x1, 0x1);
        gbc.writeMem(0x24b6, { 0xe7 });
        gbc.writeMem(0xad75, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xad75));
        EXPECT(0x24, gbc.readMem(0xad76));
        // E7 037C
        gbc.setState(0x200a, 0xff0f, 0xaac0, 0x20be, 0x5ab, 0xc0d6, 0x0, 0x1);
        gbc.writeMem(0x200a, { 0xe7 });
        gbc.writeMem(0xff0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xff0d));
        EXPECT(0x20, gbc.readMem(0xff0e));
        // E7 0380
        gbc.setState(0x4855, 0xd845, 0x3970, 0xbcaf, 0x9126, 0xdf4e, 0x1, 0x1);
        gbc.writeMem(0x4855, { 0xe7 });
        gbc.writeMem(0xd843, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd843, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd843));
        EXPECT(0x48, gbc.readMem(0xd844));
        // E7 0384
        gbc.setState(0xb230, 0x93c1, 0x18e0, 0xa0fb, 0xcd32, 0xe289, 0x1, 0x1);
        gbc.writeMem(0x93bf, { 0x0, 0x0 });
        gbc.writeMem(0xb230, { 0xe7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x93bf, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x93bf));
        EXPECT(0xb2, gbc.readMem(0x93c0));
        EXPECT(0xe7, gbc.readMem(0xb230));
        // E7 0387
        gbc.setState(0xe4f9, 0x868c, 0x7890, 0x64e8, 0x832a, 0x8ae0, 0x0, 0x0);
        gbc.writeMem(0x868a, { 0x0, 0x0 });
        gbc.writeMem(0xe4f9, { 0xe7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x868a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x868a));
        EXPECT(0xe4, gbc.readMem(0x868b));
        EXPECT(0xe7, gbc.readMem(0xe4f9));
        // E7 0388
        gbc.setState(0x2450, 0xd9d4, 0xd670, 0xa4ab, 0x89d8, 0xbcf2, 0x0, 0x0);
        gbc.writeMem(0x2450, { 0xe7 });
        gbc.writeMem(0xd9d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd9d2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd9d2));
        EXPECT(0x24, gbc.readMem(0xd9d3));
        // E7 038D
        gbc.setState(0x5612, 0xe278, 0x8880, 0xb14f, 0x4bb0, 0x13a0, 0x1, 0x0);
        gbc.writeMem(0x5612, { 0xe7 });
        gbc.writeMem(0xe276, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe276, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe276));
        EXPECT(0x56, gbc.readMem(0xe277));
        // E7 038F
        gbc.setState(0xa9ac, 0x8853, 0xf920, 0x5e75, 0x70c9, 0x2c2d, 0x1, 0x1);
        gbc.writeMem(0x8851, { 0x0, 0x0 });
        gbc.writeMem(0xa9ac, { 0xe7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8851, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x8851));
        EXPECT(0xa9, gbc.readMem(0x8852));
        EXPECT(0xe7, gbc.readMem(0xa9ac));
        // E7 0390
        gbc.setState(0xaf21, 0xef73, 0xa8c0, 0xd708, 0x47d3, 0xaafe, 0x1, 0x0);
        gbc.writeMem(0xaf21, { 0xe7 });
        gbc.writeMem(0xef71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xef71, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xaf21));
        EXPECT(0x22, gbc.readMem(0xef71));
        EXPECT(0xaf, gbc.readMem(0xef72));
        // E7 0391
        gbc.setState(0xac33, 0x90eb, 0x66a0, 0xdd0f, 0x424b, 0xd35b, 0x0, 0x0);
        gbc.writeMem(0x90e9, { 0x0, 0x0 });
        gbc.writeMem(0xac33, { 0xe7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x90e9, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x90e9));
        EXPECT(0xac, gbc.readMem(0x90ea));
        EXPECT(0xe7, gbc.readMem(0xac33));
        // E7 0392
        gbc.setState(0x2563, 0xd78a, 0x77a0, 0x5ab7, 0xa426, 0x197a, 0x1, 0x1);
        gbc.writeMem(0x2563, { 0xe7 });
        gbc.writeMem(0xd788, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd788, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd788));
        EXPECT(0x25, gbc.readMem(0xd789));
        // E7 0393
        gbc.setState(0x3d1c, 0x898e, 0x15c0, 0x14df, 0x5878, 0xf53a, 0x1, 0x0);
        gbc.writeMem(0x3d1c, { 0xe7 });
        gbc.writeMem(0x898c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x898c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x898c));
        EXPECT(0x3d, gbc.readMem(0x898d));
        // E7 0394
        gbc.setState(0xb45e, 0xfcf3, 0xb5b0, 0x9244, 0x298c, 0x91d0, 0x1, 0x0);
        gbc.writeMem(0xb45e, { 0xe7 });
        gbc.writeMem(0xfcf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfcf1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb45e));
        EXPECT(0x5f, gbc.readMem(0xfcf1));
        EXPECT(0xb4, gbc.readMem(0xfcf2));
        // E7 0395
        gbc.setState(0xddef, 0xdd7b, 0x9aa0, 0x61dd, 0x83f0, 0x797c, 0x0, 0x0);
        gbc.writeMem(0xdd79, { 0x0, 0x0 });
        gbc.writeMem(0xddef, { 0xe7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdd79, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdd79));
        EXPECT(0xdd, gbc.readMem(0xdd7a));
        EXPECT(0xe7, gbc.readMem(0xddef));
        // E7 039A
        gbc.setState(0xd64e, 0xe294, 0x56b0, 0x302f, 0x1b91, 0x4139, 0x0, 0x1);
        gbc.writeMem(0xd64e, { 0xe7 });
        gbc.writeMem(0xe292, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe292, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd64e));
        EXPECT(0x4f, gbc.readMem(0xe292));
        EXPECT(0xd6, gbc.readMem(0xe293));
        // E7 039B
        gbc.setState(0x494d, 0xd85d, 0xdfa0, 0xd62a, 0x4faa, 0x98b5, 0x1, 0x1);
        gbc.writeMem(0x494d, { 0xe7 });
        gbc.writeMem(0xd85b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd85b, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd85b));
        EXPECT(0x49, gbc.readMem(0xd85c));
        // E7 039C
        gbc.setState(0x342f, 0xbf2b, 0x4c00, 0x411, 0xe6b7, 0x200, 0x1, 0x1);
        gbc.writeMem(0x342f, { 0xe7 });
        gbc.writeMem(0xbf29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xbf29));
        EXPECT(0x34, gbc.readMem(0xbf2a));
        // E7 03A2
        gbc.setState(0x8f19, 0xa422, 0x4a60, 0x5d2f, 0xba06, 0x30b5, 0x1, 0x1);
        gbc.writeMem(0x8f19, { 0xe7 });
        gbc.writeMem(0xa420, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa420, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8f19));
        EXPECT(0x1a, gbc.readMem(0xa420));
        EXPECT(0x8f, gbc.readMem(0xa421));
        // E7 03A6
        gbc.setState(0xa24, 0xa804, 0x9810, 0x991c, 0x79d5, 0xd881, 0x1, 0x1);
        gbc.writeMem(0xa24, { 0xe7 });
        gbc.writeMem(0xa802, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa802, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa802));
        EXPECT(0xa, gbc.readMem(0xa803));
        // E7 03A7
        gbc.setState(0x2e0a, 0xc186, 0xad50, 0xa17f, 0xa015, 0x9030, 0x1, 0x1);
        gbc.writeMem(0x2e0a, { 0xe7 });
        gbc.writeMem(0xc184, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc184, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc184));
        EXPECT(0x2e, gbc.readMem(0xc185));
        // E7 03A9
        gbc.setState(0x787e, 0xe266, 0x8d00, 0x60ce, 0xfb35, 0x5e38, 0x0, 0x0);
        gbc.writeMem(0x787e, { 0xe7 });
        gbc.writeMem(0xe264, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe264, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xe264));
        EXPECT(0x78, gbc.readMem(0xe265));
        // E7 03AB
        gbc.setState(0x7cdb, 0xd0a8, 0x1a10, 0xd4f0, 0x5383, 0x641a, 0x0, 0x1);
        gbc.writeMem(0x7cdb, { 0xe7 });
        gbc.writeMem(0xd0a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd0a6));
        EXPECT(0x7c, gbc.readMem(0xd0a7));
        // E7 03AE
        gbc.setState(0xc1ee, 0xf5f8, 0xf0f0, 0xea84, 0xa06e, 0x4e55, 0x0, 0x1);
        gbc.writeMem(0xc1ee, { 0xe7 });
        gbc.writeMem(0xf5f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf5f6, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc1ee));
        EXPECT(0xef, gbc.readMem(0xf5f6));
        EXPECT(0xc1, gbc.readMem(0xf5f7));
        // E7 03B0
        gbc.setState(0x4cbf, 0xd23c, 0x9150, 0x42ed, 0xdc9d, 0xe313, 0x0, 0x0);
        gbc.writeMem(0x4cbf, { 0xe7 });
        gbc.writeMem(0xd23a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd23a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd23a));
        EXPECT(0x4c, gbc.readMem(0xd23b));
        // E7 03B1
        gbc.setState(0x5deb, 0xb24e, 0x6cc0, 0xe321, 0xe81b, 0x8bc7, 0x0, 0x0);
        gbc.writeMem(0x5deb, { 0xe7 });
        gbc.writeMem(0xb24c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb24c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb24c));
        EXPECT(0x5d, gbc.readMem(0xb24d));
        // E7 03B2
        gbc.setState(0x5a5f, 0xa00f, 0x5e0, 0xebbe, 0x9612, 0xb43b, 0x1, 0x0);
        gbc.writeMem(0x5a5f, { 0xe7 });
        gbc.writeMem(0xa00d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa00d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa00d));
        EXPECT(0x5a, gbc.readMem(0xa00e));
        // E7 03B7
        gbc.setState(0xc130, 0xa822, 0x9030, 0x498b, 0x155, 0xd198, 0x0, 0x0);
        gbc.writeMem(0xa820, { 0x0, 0x0 });
        gbc.writeMem(0xc130, { 0xe7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa820, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa820));
        EXPECT(0xc1, gbc.readMem(0xa821));
        EXPECT(0xe7, gbc.readMem(0xc130));
        // E7 03B8
        gbc.setState(0x2ad0, 0xb422, 0x7680, 0xe0e1, 0x554d, 0xb320, 0x0, 0x1);
        gbc.writeMem(0x2ad0, { 0xe7 });
        gbc.writeMem(0xb420, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb420, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb420));
        EXPECT(0x2a, gbc.readMem(0xb421));
        // E7 03BB
        gbc.setState(0x5f70, 0xfca1, 0x1720, 0x5e33, 0xc477, 0x4d33, 0x1, 0x1);
        gbc.writeMem(0x5f70, { 0xe7 });
        gbc.writeMem(0xfc9f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfc9f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xfc9f));
        EXPECT(0x5f, gbc.readMem(0xfca0));
        // E7 03BD
        gbc.setState(0x80e7, 0xdf60, 0xbba0, 0xc72b, 0xb440, 0xe751, 0x0, 0x1);
        gbc.writeMem(0x80e7, { 0xe7 });
        gbc.writeMem(0xdf5e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdf5e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x80e7));
        EXPECT(0xe8, gbc.readMem(0xdf5e));
        EXPECT(0x80, gbc.readMem(0xdf5f));
        // E7 03C0
        gbc.setState(0xbc4f, 0xe282, 0x7410, 0x2e9a, 0xd122, 0x699b, 0x1, 0x0);
        gbc.writeMem(0xbc4f, { 0xe7 });
        gbc.writeMem(0xe280, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe280, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbc4f));
        EXPECT(0x50, gbc.readMem(0xe280));
        EXPECT(0xbc, gbc.readMem(0xe281));
        // E7 03C3
        gbc.setState(0xe0fc, 0xb975, 0x99c0, 0x15d9, 0x256, 0xc43d, 0x0, 0x0);
        gbc.writeMem(0xb973, { 0x0, 0x0 });
        gbc.writeMem(0xe0fc, { 0xe7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb973, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xb973));
        EXPECT(0xe0, gbc.readMem(0xb974));
        EXPECT(0xe7, gbc.readMem(0xe0fc));
        // E7 03C4
        gbc.setState(0x20c, 0xfdc3, 0x8700, 0xcf7, 0x3f83, 0x39a9, 0x0, 0x0);
        gbc.writeMem(0x20c, { 0xe7 });
        gbc.writeMem(0xfdc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xfdc1));
        EXPECT(0x2, gbc.readMem(0xfdc2));
        // E7 03C7
        gbc.setState(0x27da, 0xa439, 0xe600, 0xde29, 0x8e89, 0x1a, 0x1, 0x0);
        gbc.writeMem(0x27da, { 0xe7 });
        gbc.writeMem(0xa437, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xa437));
        EXPECT(0x27, gbc.readMem(0xa438));
        // E7 03C8
        gbc.setState(0x99d7, 0xa19c, 0x9cd0, 0x3cd0, 0x53e7, 0xcd3a, 0x0, 0x1);
        gbc.writeMem(0x99d7, { 0xe7 });
        gbc.writeMem(0xa19a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x99d7));
        EXPECT(0xd8, gbc.readMem(0xa19a));
        EXPECT(0x99, gbc.readMem(0xa19b));
        // E7 03C9
        gbc.setState(0x47d1, 0x86e9, 0x5270, 0x3961, 0x1d11, 0xc894, 0x1, 0x0);
        gbc.writeMem(0x47d1, { 0xe7 });
        gbc.writeMem(0x86e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x86e7));
        EXPECT(0x47, gbc.readMem(0x86e8));
        // E7 03CA
        gbc.setState(0x5396, 0xbfc4, 0xb2c0, 0xdd8b, 0x8830, 0xe436, 0x0, 0x1);
        gbc.writeMem(0x5396, { 0xe7 });
        gbc.writeMem(0xbfc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbfc2, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbfc2));
        EXPECT(0x53, gbc.readMem(0xbfc3));
        // E7 03CB
        gbc.setState(0xe59d, 0xbe1e, 0x1ea0, 0xcb7f, 0xbc11, 0xddf6, 0x0, 0x1);
        gbc.writeMem(0xbe1c, { 0x0, 0x0 });
        gbc.writeMem(0xe59d, { 0xe7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbe1c));
        EXPECT(0xe5, gbc.readMem(0xbe1d));
        EXPECT(0xe7, gbc.readMem(0xe59d));
        // E7 03CC
        gbc.setState(0x8f18, 0xc682, 0xf4d0, 0x1e4d, 0x7573, 0xf127, 0x1, 0x1);
        gbc.writeMem(0x8f18, { 0xe7 });
        gbc.writeMem(0xc680, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc680, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8f18));
        EXPECT(0x19, gbc.readMem(0xc680));
        EXPECT(0x8f, gbc.readMem(0xc681));
        // E7 03CF
        gbc.setState(0x2fe7, 0xf99e, 0x32c0, 0xfd4, 0xb5c3, 0xd3ff, 0x1, 0x0);
        gbc.writeMem(0x2fe7, { 0xe7 });
        gbc.writeMem(0xf99c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf99c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xf99c));
        EXPECT(0x2f, gbc.readMem(0xf99d));
        // E7 03D0
        gbc.setState(0xbd1d, 0xc476, 0x6b60, 0x4a75, 0x29c0, 0x8185, 0x1, 0x0);
        gbc.writeMem(0xbd1d, { 0xe7 });
        gbc.writeMem(0xc474, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc474, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbd1d));
        EXPECT(0x1e, gbc.readMem(0xc474));
        EXPECT(0xbd, gbc.readMem(0xc475));
        // E7 03D2
        gbc.setState(0xd5b7, 0xea75, 0xeae0, 0x6396, 0x8569, 0x74dc, 0x1, 0x1);
        gbc.writeMem(0xd5b7, { 0xe7 });
        gbc.writeMem(0xea73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd5b7));
        EXPECT(0xb8, gbc.readMem(0xea73));
        EXPECT(0xd5, gbc.readMem(0xea74));
        // E7 03D3
        gbc.setState(0x445c, 0xa024, 0xec0, 0xa0b5, 0x76bb, 0xaddb, 0x0, 0x0);
        gbc.writeMem(0x445c, { 0xe7 });
        gbc.writeMem(0xa022, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa022, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa022));
        EXPECT(0x44, gbc.readMem(0xa023));
        // E7 03D4
        gbc.setState(0xe6a8, 0xe802, 0x21a0, 0x9e38, 0x5fd0, 0x25c, 0x0, 0x0);
        gbc.writeMem(0xe6a8, { 0xe7 });
        gbc.writeMem(0xe800, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe800, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe6a8));
        EXPECT(0xa9, gbc.readMem(0xe800));
        EXPECT(0xe6, gbc.readMem(0xe801));
        // E7 03D7
        gbc.setState(0x3707, 0xdfc6, 0x5980, 0x4239, 0x6af0, 0xea9d, 0x0, 0x1);
        gbc.writeMem(0x3707, { 0xe7 });
        gbc.writeMem(0xdfc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xdfc4));
        EXPECT(0x37, gbc.readMem(0xdfc5));
        // E7 03D9
        gbc.setState(0x1cd9, 0x999f, 0xb5e0, 0xbd80, 0x7f82, 0xfcd5, 0x1, 0x1);
        gbc.writeMem(0x1cd9, { 0xe7 });
        gbc.writeMem(0x999d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x999d));
        EXPECT(0x1c, gbc.readMem(0x999e));
        // E7 03DA
        gbc.setState(0x1b88, 0xcaa1, 0x3220, 0xc6a6, 0xd95d, 0x747b, 0x0, 0x1);
        gbc.writeMem(0x1b88, { 0xe7 });
        gbc.writeMem(0xca9f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xca9f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xca9f));
        EXPECT(0x1b, gbc.readMem(0xcaa0));
        // E7 03DB
        gbc.setState(0xaccc, 0x8c24, 0xffb0, 0xff3d, 0x30e7, 0xe90b, 0x0, 0x0);
        gbc.writeMem(0x8c22, { 0x0, 0x0 });
        gbc.writeMem(0xaccc, { 0xe7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8c22));
        EXPECT(0xac, gbc.readMem(0x8c23));
        EXPECT(0xe7, gbc.readMem(0xaccc));
        // E7 03DC
        gbc.setState(0x2bfe, 0xa1a1, 0xf040, 0x4e03, 0xef71, 0x5b01, 0x1, 0x1);
        gbc.writeMem(0x2bfe, { 0xe7 });
        gbc.writeMem(0xa19f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa19f, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa19f));
        EXPECT(0x2b, gbc.readMem(0xa1a0));
        // E7 03E3
        gbc.setState(0xe2c9, 0xf00e, 0x29e0, 0x306a, 0x822b, 0x4f2d, 0x1, 0x1);
        gbc.writeMem(0xe2c9, { 0xe7 });
        gbc.writeMem(0xf00c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf00c, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe2c9));
        EXPECT(0xca, gbc.readMem(0xf00c));
        EXPECT(0xe2, gbc.readMem(0xf00d));
        // E7 03E4
        gbc.setState(0x5597, 0x808c, 0x4ea0, 0x2ca5, 0x72be, 0x737e, 0x0, 0x1);
        gbc.writeMem(0x5597, { 0xe7 });
        gbc.writeMem(0x808a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x808a, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x808a));
        EXPECT(0x55, gbc.readMem(0x808b));
        // E7 03E5
        gbc.setState(0xab1b, 0x8b72, 0xee60, 0x4644, 0xd120, 0x8779, 0x0, 0x0);
        gbc.writeMem(0x8b70, { 0x0, 0x0 });
        gbc.writeMem(0xab1b, { 0xe7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8b70, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x8b70));
        EXPECT(0xab, gbc.readMem(0x8b71));
        EXPECT(0xe7, gbc.readMem(0xab1b));
    }
