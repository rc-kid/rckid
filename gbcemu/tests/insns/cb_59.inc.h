    TEST(gbcemu, opcode_cb_59) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 59 0000
        gbc.setState(0xb126, 0xeb60, 0xfcc0, 0xdce3, 0x9c26, 0x644b, 0x0, 0x0);
        gbc.writeMem(0xb126, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeb60, gbc.sp());
        EXPECT(0xb128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb126));
        EXPECT(0x59, gbc.readMem(0xb127));
        // CB 59 0001
        gbc.setState(0x8fda, 0x19a5, 0x8700, 0xeb2a, 0x375b, 0xd431, 0x0, 0x1);
        gbc.writeMem(0x8fda, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x19a5, gbc.sp());
        EXPECT(0x8fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fda));
        EXPECT(0x59, gbc.readMem(0x8fdb));
        // CB 59 0002
        gbc.setState(0x3af0, 0x6193, 0xc4c0, 0xa600, 0xd4e4, 0xe6de, 0x1, 0x1);
        gbc.writeMem(0x3af0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6193, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0003
        gbc.setState(0xc9c8, 0x9066, 0x7070, 0x7dd4, 0xd867, 0x2e8c, 0x0, 0x0);
        gbc.writeMem(0xc9c8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0xc9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c8));
        EXPECT(0x59, gbc.readMem(0xc9c9));
        // CB 59 0004
        gbc.setState(0x370, 0x1a31, 0x83c0, 0xa97e, 0x2ae2, 0xe02, 0x1, 0x1);
        gbc.writeMem(0x370, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1a31, gbc.sp());
        EXPECT(0x372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0005
        gbc.setState(0x39ce, 0xec5b, 0x2e70, 0x1bb3, 0xd931, 0x2364, 0x0, 0x1);
        gbc.writeMem(0x39ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xec5b, gbc.sp());
        EXPECT(0x39d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0006
        gbc.setState(0xd9d3, 0xb080, 0x1f20, 0xb379, 0xb12f, 0x603f, 0x1, 0x1);
        gbc.writeMem(0xd9d3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb080, gbc.sp());
        EXPECT(0xd9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d3));
        EXPECT(0x59, gbc.readMem(0xd9d4));
        // CB 59 0007
        gbc.setState(0xd772, 0x8455, 0x5e00, 0x5ca9, 0xc717, 0x5f01, 0x1, 0x1);
        gbc.writeMem(0xd772, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8455, gbc.sp());
        EXPECT(0xd774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd772));
        EXPECT(0x59, gbc.readMem(0xd773));
        // CB 59 0008
        gbc.setState(0xafd7, 0x9991, 0xe620, 0x1c3, 0x8192, 0x812b, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0xafd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd7));
        EXPECT(0x59, gbc.readMem(0xafd8));
        // CB 59 0009
        gbc.setState(0xaa87, 0xdef9, 0x9890, 0x3b59, 0xfee2, 0x4ef5, 0x0, 0x1);
        gbc.writeMem(0xaa87, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdef9, gbc.sp());
        EXPECT(0xaa89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa87));
        EXPECT(0x59, gbc.readMem(0xaa88));
        // CB 59 000A
        gbc.setState(0xdb84, 0xa76e, 0x1720, 0xb6e8, 0xe4fb, 0x681e, 0x0, 0x0);
        gbc.writeMem(0xdb84, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa76e, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb84));
        EXPECT(0x59, gbc.readMem(0xdb85));
        // CB 59 000B
        gbc.setState(0x4d18, 0x3f2e, 0xa5b0, 0x34af, 0x86f, 0x9db0, 0x0, 0x0);
        gbc.writeMem(0x4d18, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3f2e, gbc.sp());
        EXPECT(0x4d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 000C
        gbc.setState(0x7a69, 0x317, 0xa2b0, 0xf3f5, 0x9060, 0x198b, 0x1, 0x1);
        gbc.writeMem(0x7a69, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x317, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 000D
        gbc.setState(0x9d56, 0x2dc8, 0x3bf0, 0x2576, 0xed7f, 0x856e, 0x1, 0x1);
        gbc.writeMem(0x9d56, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2dc8, gbc.sp());
        EXPECT(0x9d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d56));
        EXPECT(0x59, gbc.readMem(0x9d57));
        // CB 59 000F
        gbc.setState(0x8bea, 0x25a8, 0xa0a0, 0x45b7, 0x1d6a, 0x610a, 0x1, 0x1);
        gbc.writeMem(0x8bea, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x25a8, gbc.sp());
        EXPECT(0x8bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bea));
        EXPECT(0x59, gbc.readMem(0x8beb));
        // CB 59 0010
        gbc.setState(0xefef, 0x5a0c, 0x15b0, 0x75fc, 0x334b, 0xb515, 0x0, 0x1);
        gbc.writeMem(0xefef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefef));
        EXPECT(0x59, gbc.readMem(0xeff0));
        // CB 59 0011
        gbc.setState(0x8322, 0xbacd, 0xf5b0, 0x883e, 0xcb45, 0xab56, 0x0, 0x1);
        gbc.writeMem(0x8322, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbacd, gbc.sp());
        EXPECT(0x8324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8322));
        EXPECT(0x59, gbc.readMem(0x8323));
        // CB 59 0012
        gbc.setState(0xd0a4, 0x25c3, 0x28f0, 0x4117, 0x335e, 0x2ed7, 0x1, 0x0);
        gbc.writeMem(0xd0a4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x25c3, gbc.sp());
        EXPECT(0xd0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a4));
        EXPECT(0x59, gbc.readMem(0xd0a5));
        // CB 59 0013
        gbc.setState(0xcfeb, 0x198a, 0xe1b0, 0x3b06, 0xadcb, 0xa05, 0x0, 0x1);
        gbc.writeMem(0xcfeb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x198a, gbc.sp());
        EXPECT(0xcfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfeb));
        EXPECT(0x59, gbc.readMem(0xcfec));
        // CB 59 0014
        gbc.setState(0x88ce, 0x14a1, 0x97d0, 0xada2, 0x6e58, 0x2e32, 0x0, 0x0);
        gbc.writeMem(0x88ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x14a1, gbc.sp());
        EXPECT(0x88d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ce));
        EXPECT(0x59, gbc.readMem(0x88cf));
        // CB 59 0015
        gbc.setState(0xc4e5, 0x68f9, 0x9a90, 0x2ed9, 0x19b2, 0xcc56, 0x0, 0x0);
        gbc.writeMem(0xc4e5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x68f9, gbc.sp());
        EXPECT(0xc4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e5));
        EXPECT(0x59, gbc.readMem(0xc4e6));
        // CB 59 0016
        gbc.setState(0xea23, 0xf3e4, 0x9860, 0x780d, 0x16d1, 0x4d3c, 0x0, 0x1);
        gbc.writeMem(0xea23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf3e4, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea23));
        EXPECT(0x59, gbc.readMem(0xea24));
        // CB 59 0017
        gbc.setState(0x4bcc, 0xc877, 0x6c50, 0x22be, 0x98b6, 0xecce, 0x0, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc877, gbc.sp());
        EXPECT(0x4bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0018
        gbc.setState(0x5659, 0x4134, 0xee40, 0x2f17, 0x6b53, 0xa8cc, 0x1, 0x1);
        gbc.writeMem(0x5659, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4134, gbc.sp());
        EXPECT(0x565b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0019
        gbc.setState(0xeaef, 0xcf93, 0x18a0, 0xe049, 0x5003, 0xf9a9, 0x1, 0x1);
        gbc.writeMem(0xeaef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcf93, gbc.sp());
        EXPECT(0xeaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaef));
        EXPECT(0x59, gbc.readMem(0xeaf0));
        // CB 59 001A
        gbc.setState(0x4ace, 0x5a63, 0x51a0, 0xd38c, 0x99b4, 0x48d, 0x1, 0x1);
        gbc.writeMem(0x4ace, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0x4ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 001B
        gbc.setState(0xc328, 0xa7c8, 0xcc70, 0xa30e, 0xe000, 0x4361, 0x0, 0x0);
        gbc.writeMem(0xc328, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa7c8, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc328));
        EXPECT(0x59, gbc.readMem(0xc329));
        // CB 59 001C
        gbc.setState(0x3cbd, 0xc39d, 0x5e90, 0xefbb, 0xa2c7, 0x1c76, 0x0, 0x1);
        gbc.writeMem(0x3cbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc39d, gbc.sp());
        EXPECT(0x3cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 001D
        gbc.setState(0xc4fb, 0x90fe, 0x26f0, 0x7150, 0xaa63, 0xab81, 0x0, 0x0);
        gbc.writeMem(0xc4fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x90fe, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fb));
        EXPECT(0x59, gbc.readMem(0xc4fc));
        // CB 59 001E
        gbc.setState(0x9378, 0xf601, 0x92f0, 0x7db9, 0xf9cb, 0xd01f, 0x0, 0x0);
        gbc.writeMem(0x9378, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf601, gbc.sp());
        EXPECT(0x937a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9378));
        EXPECT(0x59, gbc.readMem(0x9379));
        // CB 59 001F
        gbc.setState(0x7feb, 0x5c2a, 0x6680, 0xe193, 0x1a58, 0xc9ef, 0x1, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0020
        gbc.setState(0xee2f, 0x30df, 0x5a50, 0xc067, 0xf68f, 0xc9a4, 0x0, 0x1);
        gbc.writeMem(0xee2f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x30df, gbc.sp());
        EXPECT(0xee31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2f));
        EXPECT(0x59, gbc.readMem(0xee30));
        // CB 59 0021
        gbc.setState(0x9526, 0xc9e8, 0xe280, 0xb2f7, 0x6aa6, 0xbf1c, 0x1, 0x1);
        gbc.writeMem(0x9526, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc9e8, gbc.sp());
        EXPECT(0x9528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9526));
        EXPECT(0x59, gbc.readMem(0x9527));
        // CB 59 0023
        gbc.setState(0xe2a7, 0x270, 0x9570, 0x84f0, 0xbadc, 0xc601, 0x0, 0x1);
        gbc.writeMem(0xe2a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x270, gbc.sp());
        EXPECT(0xe2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a7));
        EXPECT(0x59, gbc.readMem(0xe2a8));
        // CB 59 0024
        gbc.setState(0x9045, 0x1eed, 0x7e10, 0x673e, 0xd162, 0xeef4, 0x0, 0x0);
        gbc.writeMem(0x9045, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1eed, gbc.sp());
        EXPECT(0x9047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9045));
        EXPECT(0x59, gbc.readMem(0x9046));
        // CB 59 0025
        gbc.setState(0x3b23, 0x3a4a, 0x9030, 0xb923, 0x4524, 0xa224, 0x1, 0x1);
        gbc.writeMem(0x3b23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3a4a, gbc.sp());
        EXPECT(0x3b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0026
        gbc.setState(0x4416, 0x94b0, 0xeb70, 0xa1df, 0xe74a, 0x40c5, 0x0, 0x0);
        gbc.writeMem(0x4416, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x4418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0027
        gbc.setState(0xdcee, 0x1fbf, 0x5e30, 0x4aa5, 0xe07, 0x70da, 0x0, 0x1);
        gbc.writeMem(0xdcee, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1fbf, gbc.sp());
        EXPECT(0xdcf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcee));
        EXPECT(0x59, gbc.readMem(0xdcef));
        // CB 59 0028
        gbc.setState(0x8ba7, 0xaefa, 0x1210, 0x6170, 0x21af, 0xcb7, 0x1, 0x0);
        gbc.writeMem(0x8ba7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaefa, gbc.sp());
        EXPECT(0x8ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba7));
        EXPECT(0x59, gbc.readMem(0x8ba8));
        // CB 59 0029
        gbc.setState(0x1e60, 0x1d14, 0x45e0, 0xfbe7, 0xdc91, 0x19b, 0x1, 0x0);
        gbc.writeMem(0x1e60, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1d14, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 002A
        gbc.setState(0xca4e, 0x5a85, 0x39f0, 0x6e04, 0x6e2a, 0x9e14, 0x1, 0x1);
        gbc.writeMem(0xca4e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0xca50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4e));
        EXPECT(0x59, gbc.readMem(0xca4f));
        // CB 59 002B
        gbc.setState(0xb54a, 0x4b1c, 0xd4a0, 0xa330, 0xf624, 0x8def, 0x1, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4b1c, gbc.sp());
        EXPECT(0xb54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54a));
        EXPECT(0x59, gbc.readMem(0xb54b));
        // CB 59 002D
        gbc.setState(0x1e03, 0xbbdb, 0x5e60, 0xba01, 0x4044, 0x6ebb, 0x1, 0x1);
        gbc.writeMem(0x1e03, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbbdb, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 002E
        gbc.setState(0xb83f, 0xb42e, 0x4ad0, 0xb75a, 0xcb49, 0x601e, 0x1, 0x0);
        gbc.writeMem(0xb83f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0xb841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83f));
        EXPECT(0x59, gbc.readMem(0xb840));
        // CB 59 002F
        gbc.setState(0xb60a, 0xf32f, 0xecb0, 0x698a, 0x5d5c, 0xb0be, 0x1, 0x1);
        gbc.writeMem(0xb60a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf32f, gbc.sp());
        EXPECT(0xb60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60a));
        EXPECT(0x59, gbc.readMem(0xb60b));
        // CB 59 0030
        gbc.setState(0x5f99, 0x6b73, 0xbd40, 0xf759, 0x7b22, 0x8398, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6b73, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0031
        gbc.setState(0x4c79, 0x6203, 0xb090, 0xbf50, 0x7a6f, 0x6bd2, 0x1, 0x1);
        gbc.writeMem(0x4c79, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6203, gbc.sp());
        EXPECT(0x4c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0032
        gbc.setState(0x7163, 0x2040, 0xab20, 0x107, 0x30f2, 0xe8b, 0x1, 0x1);
        gbc.writeMem(0x7163, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2040, gbc.sp());
        EXPECT(0x7165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0033
        gbc.setState(0x5dfa, 0xfd1c, 0x2ae0, 0x10b, 0x9f61, 0xc7bd, 0x1, 0x0);
        gbc.writeMem(0x5dfa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfd1c, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0034
        gbc.setState(0x36d6, 0xa324, 0x5900, 0x39ac, 0xf97e, 0xe9d6, 0x0, 0x0);
        gbc.writeMem(0x36d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa324, gbc.sp());
        EXPECT(0x36d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0035
        gbc.setState(0xda16, 0x65df, 0xcc50, 0xc863, 0xa588, 0xbfcf, 0x1, 0x0);
        gbc.writeMem(0xda16, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x65df, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda16));
        EXPECT(0x59, gbc.readMem(0xda17));
        // CB 59 0036
        gbc.setState(0x9fc7, 0x84f, 0xadf0, 0x96b5, 0x4bc9, 0xb300, 0x1, 0x1);
        gbc.writeMem(0x9fc7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x84f, gbc.sp());
        EXPECT(0x9fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc7));
        EXPECT(0x59, gbc.readMem(0x9fc8));
        // CB 59 0037
        gbc.setState(0x58ca, 0x10cd, 0x1630, 0x9f3d, 0xfbda, 0x64e3, 0x1, 0x1);
        gbc.writeMem(0x58ca, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x10cd, gbc.sp());
        EXPECT(0x58cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0038
        gbc.setState(0x5913, 0x3734, 0x7600, 0x4d2a, 0xf957, 0x5495, 0x0, 0x1);
        gbc.writeMem(0x5913, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3734, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0039
        gbc.setState(0x816c, 0xdbb4, 0xb210, 0x8a6c, 0xc44e, 0x9318, 0x1, 0x1);
        gbc.writeMem(0x816c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdbb4, gbc.sp());
        EXPECT(0x816e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816c));
        EXPECT(0x59, gbc.readMem(0x816d));
        // CB 59 003A
        gbc.setState(0xb488, 0x664e, 0xbd40, 0xdb7a, 0x5501, 0x838a, 0x0, 0x0);
        gbc.writeMem(0xb488, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x664e, gbc.sp());
        EXPECT(0xb48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb488));
        EXPECT(0x59, gbc.readMem(0xb489));
        // CB 59 003B
        gbc.setState(0xc849, 0xe5, 0xc680, 0x69e, 0x2a9d, 0x82c6, 0x0, 0x0);
        gbc.writeMem(0xc849, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe5, gbc.sp());
        EXPECT(0xc84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc849));
        EXPECT(0x59, gbc.readMem(0xc84a));
        // CB 59 003C
        gbc.setState(0x24a2, 0xd60c, 0x45c0, 0x5271, 0xa6cf, 0x1fb3, 0x0, 0x1);
        gbc.writeMem(0x24a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0x24a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 003E
        gbc.setState(0x7333, 0xaf37, 0x2d00, 0xd998, 0x2252, 0x93fc, 0x1, 0x0);
        gbc.writeMem(0x7333, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaf37, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 003F
        gbc.setState(0x3336, 0x1e23, 0x18f0, 0x591a, 0x7980, 0x4998, 0x0, 0x1);
        gbc.writeMem(0x3336, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0x3338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0040
        gbc.setState(0x5fe4, 0x6af4, 0xcb80, 0x39a4, 0xc868, 0x91d1, 0x1, 0x1);
        gbc.writeMem(0x5fe4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6af4, gbc.sp());
        EXPECT(0x5fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0041
        gbc.setState(0xed9d, 0x7c5e, 0x7d60, 0x99f1, 0xc3b6, 0xf839, 0x1, 0x1);
        gbc.writeMem(0xed9d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7c5e, gbc.sp());
        EXPECT(0xed9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9d));
        EXPECT(0x59, gbc.readMem(0xed9e));
        // CB 59 0042
        gbc.setState(0x628, 0xe908, 0x37b0, 0x31e9, 0xb932, 0x48e, 0x1, 0x0);
        gbc.writeMem(0x628, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe908, gbc.sp());
        EXPECT(0x62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0043
        gbc.setState(0x66fa, 0x9efb, 0x9aa0, 0xf6e1, 0x516, 0x8b80, 0x1, 0x1);
        gbc.writeMem(0x66fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9efb, gbc.sp());
        EXPECT(0x66fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0044
        gbc.setState(0x68e1, 0x798, 0x41c0, 0xa94a, 0x19ff, 0x415a, 0x1, 0x0);
        gbc.writeMem(0x68e1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x798, gbc.sp());
        EXPECT(0x68e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0045
        gbc.setState(0xdf46, 0x7483, 0x8ae0, 0x6c71, 0x519d, 0x165c, 0x0, 0x0);
        gbc.writeMem(0xdf46, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7483, gbc.sp());
        EXPECT(0xdf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf46));
        EXPECT(0x59, gbc.readMem(0xdf47));
        // CB 59 0046
        gbc.setState(0xadb9, 0x3519, 0x4f80, 0x93b2, 0xe0d3, 0x2094, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3519, gbc.sp());
        EXPECT(0xadbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb9));
        EXPECT(0x59, gbc.readMem(0xadba));
        // CB 59 0047
        gbc.setState(0x23f2, 0x53ad, 0xf6a0, 0x1e83, 0xab3c, 0xa79a, 0x1, 0x0);
        gbc.writeMem(0x23f2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x53ad, gbc.sp());
        EXPECT(0x23f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0048
        gbc.setState(0x17d6, 0x3afb, 0x18e0, 0x4968, 0x775d, 0x8d05, 0x0, 0x1);
        gbc.writeMem(0x17d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3afb, gbc.sp());
        EXPECT(0x17d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0049
        gbc.setState(0x4261, 0xb145, 0xc270, 0x52d9, 0xfabd, 0x7986, 0x0, 0x0);
        gbc.writeMem(0x4261, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0x4263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 004A
        gbc.setState(0xbcd4, 0xcffd, 0x9b70, 0x3953, 0xc087, 0x4f24, 0x1, 0x1);
        gbc.writeMem(0xbcd4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcffd, gbc.sp());
        EXPECT(0xbcd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd4));
        EXPECT(0x59, gbc.readMem(0xbcd5));
        // CB 59 004B
        gbc.setState(0x1ffd, 0xd400, 0x90a0, 0xc949, 0x783d, 0x9004, 0x1, 0x0);
        gbc.writeMem(0x1ffd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd400, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 004C
        gbc.setState(0x5694, 0x1420, 0x6070, 0x32d4, 0x4a8a, 0x76d8, 0x1, 0x0);
        gbc.writeMem(0x5694, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1420, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 004D
        gbc.setState(0x8de3, 0xd50b, 0xee10, 0x862d, 0x51f1, 0x6491, 0x0, 0x0);
        gbc.writeMem(0x8de3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0x8de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de3));
        EXPECT(0x59, gbc.readMem(0x8de4));
        // CB 59 004E
        gbc.setState(0xd324, 0x1626, 0xd750, 0x12e4, 0x8eff, 0x17b9, 0x1, 0x1);
        gbc.writeMem(0xd324, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1626, gbc.sp());
        EXPECT(0xd326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd324));
        EXPECT(0x59, gbc.readMem(0xd325));
        // CB 59 004F
        gbc.setState(0x9d9, 0x47ec, 0x9220, 0x24ba, 0x8207, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x9d9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x47ec, gbc.sp());
        EXPECT(0x9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0050
        gbc.setState(0x2c39, 0xcbb4, 0x5c10, 0x35f4, 0x9870, 0xd6c2, 0x1, 0x1);
        gbc.writeMem(0x2c39, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcbb4, gbc.sp());
        EXPECT(0x2c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0051
        gbc.setState(0xef35, 0x6e15, 0x8e90, 0x1bf0, 0x3a85, 0xfbd, 0x1, 0x1);
        gbc.writeMem(0xef35, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6e15, gbc.sp());
        EXPECT(0xef37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef35));
        EXPECT(0x59, gbc.readMem(0xef36));
        // CB 59 0052
        gbc.setState(0x68d6, 0x9268, 0x5900, 0x9b3d, 0x72ca, 0xff97, 0x1, 0x1);
        gbc.writeMem(0x68d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9268, gbc.sp());
        EXPECT(0x68d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0053
        gbc.setState(0x2dd4, 0xff5b, 0x6e90, 0x71e1, 0xeb2b, 0x533b, 0x1, 0x1);
        gbc.writeMem(0x2dd4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xff5b, gbc.sp());
        EXPECT(0x2dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0054
        gbc.setState(0x123, 0x9eab, 0x93a0, 0x9f8a, 0xcc63, 0x545b, 0x1, 0x1);
        gbc.writeMem(0x123, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9eab, gbc.sp());
        EXPECT(0x125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0056
        gbc.setState(0x4265, 0xbef7, 0xa060, 0x8196, 0xf215, 0xfcfb, 0x0, 0x0);
        gbc.writeMem(0x4265, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbef7, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0057
        gbc.setState(0xdc41, 0xa28d, 0x950, 0xa3b4, 0xd9ce, 0xf81e, 0x0, 0x0);
        gbc.writeMem(0xdc41, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa28d, gbc.sp());
        EXPECT(0xdc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc41));
        EXPECT(0x59, gbc.readMem(0xdc42));
        // CB 59 0058
        gbc.setState(0x4c75, 0x1c22, 0x3190, 0x9e8b, 0x3f57, 0xa422, 0x1, 0x1);
        gbc.writeMem(0x4c75, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1c22, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0059
        gbc.setState(0xe036, 0xc96b, 0x5550, 0xdce9, 0x1713, 0x479a, 0x0, 0x1);
        gbc.writeMem(0xe036, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc96b, gbc.sp());
        EXPECT(0xe038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe036));
        EXPECT(0x59, gbc.readMem(0xe037));
        // CB 59 005A
        gbc.setState(0x5af8, 0xc915, 0xf400, 0x206b, 0x1442, 0x2931, 0x1, 0x0);
        gbc.writeMem(0x5af8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0x5afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 005B
        gbc.setState(0x9ef7, 0x8671, 0x6f90, 0x4bb4, 0x62d8, 0x2f42, 0x0, 0x1);
        gbc.writeMem(0x9ef7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0x9ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef7));
        EXPECT(0x59, gbc.readMem(0x9ef8));
        // CB 59 005C
        gbc.setState(0x288, 0x7ab9, 0x240, 0x1326, 0xf16d, 0xf43c, 0x0, 0x0);
        gbc.writeMem(0x288, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7ab9, gbc.sp());
        EXPECT(0x28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 005D
        gbc.setState(0x7bdb, 0xa8f9, 0x7e80, 0x42dd, 0x51cc, 0x6ea3, 0x1, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 005E
        gbc.setState(0x383a, 0xba1d, 0xe320, 0x962, 0x8c26, 0x91f4, 0x0, 0x0);
        gbc.writeMem(0x383a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xba1d, gbc.sp());
        EXPECT(0x383c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 005F
        gbc.setState(0xa64f, 0x757d, 0x4050, 0x620b, 0x198e, 0xfc35, 0x0, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0xa651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64f));
        EXPECT(0x59, gbc.readMem(0xa650));
        // CB 59 0060
        gbc.setState(0xa1ed, 0x8fc, 0xe000, 0x5e1b, 0xd99, 0x2e9e, 0x0, 0x1);
        gbc.writeMem(0xa1ed, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8fc, gbc.sp());
        EXPECT(0xa1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ed));
        EXPECT(0x59, gbc.readMem(0xa1ee));
        // CB 59 0061
        gbc.setState(0x2824, 0xef96, 0xfaf0, 0xb5f7, 0xa237, 0x19d1, 0x0, 0x0);
        gbc.writeMem(0x2824, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xef96, gbc.sp());
        EXPECT(0x2826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0062
        gbc.setState(0x47dd, 0x5b0, 0xf8e0, 0xf8fb, 0x69fc, 0x6d65, 0x1, 0x0);
        gbc.writeMem(0x47dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5b0, gbc.sp());
        EXPECT(0x47df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0063
        gbc.setState(0xdc11, 0x8b5d, 0x3590, 0xf8ea, 0x32d6, 0xcdcb, 0x1, 0x1);
        gbc.writeMem(0xdc11, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8b5d, gbc.sp());
        EXPECT(0xdc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc11));
        EXPECT(0x59, gbc.readMem(0xdc12));
        // CB 59 0064
        gbc.setState(0x5063, 0x3195, 0xd6a0, 0xdaff, 0xb537, 0x925d, 0x1, 0x0);
        gbc.writeMem(0x5063, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3195, gbc.sp());
        EXPECT(0x5065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0065
        gbc.setState(0xa18f, 0xff8, 0xbc60, 0x2e62, 0x1148, 0xc859, 0x0, 0x1);
        gbc.writeMem(0xa18f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xff8, gbc.sp());
        EXPECT(0xa191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18f));
        EXPECT(0x59, gbc.readMem(0xa190));
        // CB 59 0066
        gbc.setState(0x3a94, 0xde8d, 0x2d70, 0x1640, 0x6832, 0xf752, 0x1, 0x0);
        gbc.writeMem(0x3a94, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0x3a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0067
        gbc.setState(0xa8a2, 0xece3, 0x8040, 0xdd9d, 0x4ca0, 0x8f92, 0x1, 0x1);
        gbc.writeMem(0xa8a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xece3, gbc.sp());
        EXPECT(0xa8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a2));
        EXPECT(0x59, gbc.readMem(0xa8a3));
        // CB 59 0068
        gbc.setState(0xeed5, 0xd5e8, 0xf540, 0xc529, 0xea28, 0xd1f7, 0x1, 0x0);
        gbc.writeMem(0xeed5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd5e8, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed5));
        EXPECT(0x59, gbc.readMem(0xeed6));
        // CB 59 006A
        gbc.setState(0x74d5, 0xae95, 0xeed0, 0xf4f1, 0x66ee, 0x6ee8, 0x1, 0x0);
        gbc.writeMem(0x74d5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xae95, gbc.sp());
        EXPECT(0x74d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 006B
        gbc.setState(0x39b7, 0xd80d, 0xdf70, 0x3dd9, 0x48f6, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x39b7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd80d, gbc.sp());
        EXPECT(0x39b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 006C
        gbc.setState(0x6b57, 0x2ad0, 0x3b10, 0xb597, 0x1e92, 0x1d66, 0x1, 0x1);
        gbc.writeMem(0x6b57, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2ad0, gbc.sp());
        EXPECT(0x6b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 006D
        gbc.setState(0x1d36, 0xa5c, 0xc8e0, 0xf65e, 0x6ae4, 0xca22, 0x0, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa5c, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 006E
        gbc.setState(0xd561, 0xdef9, 0x9d70, 0xe458, 0x701d, 0xcf48, 0x1, 0x0);
        gbc.writeMem(0xd561, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdef9, gbc.sp());
        EXPECT(0xd563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd561));
        EXPECT(0x59, gbc.readMem(0xd562));
        // CB 59 006F
        gbc.setState(0x441d, 0x7c8b, 0xa3b0, 0x5a88, 0xda37, 0xcd77, 0x1, 0x0);
        gbc.writeMem(0x441d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0x441f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0070
        gbc.setState(0x70a1, 0x9031, 0x5610, 0xf0f7, 0x781b, 0x4be5, 0x1, 0x1);
        gbc.writeMem(0x70a1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0x70a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0071
        gbc.setState(0xee98, 0xeaf4, 0x3780, 0xe93d, 0xafcb, 0x8f96, 0x0, 0x1);
        gbc.writeMem(0xee98, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeaf4, gbc.sp());
        EXPECT(0xee9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee98));
        EXPECT(0x59, gbc.readMem(0xee99));
        // CB 59 0072
        gbc.setState(0xaf66, 0x9981, 0xd580, 0x7f5d, 0xcecb, 0x60ea, 0x0, 0x0);
        gbc.writeMem(0xaf66, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9981, gbc.sp());
        EXPECT(0xaf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf66));
        EXPECT(0x59, gbc.readMem(0xaf67));
        // CB 59 0073
        gbc.setState(0xd6bf, 0x11ce, 0x4930, 0x2fca, 0x1d6f, 0xcdb1, 0x1, 0x1);
        gbc.writeMem(0xd6bf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x11ce, gbc.sp());
        EXPECT(0xd6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bf));
        EXPECT(0x59, gbc.readMem(0xd6c0));
        // CB 59 0074
        gbc.setState(0xce6c, 0x4c7e, 0x4e10, 0x2f91, 0x10d0, 0xa76a, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4c7e, gbc.sp());
        EXPECT(0xce6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6c));
        EXPECT(0x59, gbc.readMem(0xce6d));
        // CB 59 0075
        gbc.setState(0xe8ba, 0x83f7, 0xcd10, 0x5a20, 0xf82d, 0x9ba, 0x0, 0x0);
        gbc.writeMem(0xe8ba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x83f7, gbc.sp());
        EXPECT(0xe8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ba));
        EXPECT(0x59, gbc.readMem(0xe8bb));
        // CB 59 0076
        gbc.setState(0x9a65, 0x35d3, 0xb280, 0x83af, 0xf15, 0x72c9, 0x1, 0x0);
        gbc.writeMem(0x9a65, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x35d3, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a65));
        EXPECT(0x59, gbc.readMem(0x9a66));
        // CB 59 0077
        gbc.setState(0x8e24, 0x48d7, 0x7cd0, 0x59a, 0x3fbd, 0x9528, 0x0, 0x0);
        gbc.writeMem(0x8e24, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0x8e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e24));
        EXPECT(0x59, gbc.readMem(0x8e25));
        // CB 59 0078
        gbc.setState(0x7f7d, 0x9f94, 0x6040, 0xa749, 0xb52a, 0xc299, 0x1, 0x0);
        gbc.writeMem(0x7f7d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0x7f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0079
        gbc.setState(0x43c5, 0x42c2, 0xedb0, 0xa791, 0x9cbf, 0x5610, 0x0, 0x1);
        gbc.writeMem(0x43c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x42c2, gbc.sp());
        EXPECT(0x43c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 007A
        gbc.setState(0xb2c, 0xe080, 0x5270, 0x7a94, 0x9a7e, 0x7d94, 0x1, 0x1);
        gbc.writeMem(0xb2c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0xb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 007B
        gbc.setState(0x13ed, 0x71ff, 0x2630, 0x4098, 0x1e93, 0xcd7c, 0x0, 0x1);
        gbc.writeMem(0x13ed, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x71ff, gbc.sp());
        EXPECT(0x13ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 007C
        gbc.setState(0xe794, 0x4ced, 0x3b40, 0x1e28, 0x1ba4, 0x2f3c, 0x0, 0x1);
        gbc.writeMem(0xe794, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4ced, gbc.sp());
        EXPECT(0xe796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe794));
        EXPECT(0x59, gbc.readMem(0xe795));
        // CB 59 007D
        gbc.setState(0x35e1, 0x170d, 0x2530, 0x5958, 0xff0f, 0xd96d, 0x1, 0x1);
        gbc.writeMem(0x35e1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x170d, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 007E
        gbc.setState(0x756, 0xbf85, 0x5f00, 0xd8a, 0xd981, 0xe432, 0x0, 0x1);
        gbc.writeMem(0x756, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf85, gbc.sp());
        EXPECT(0x758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 007F
        gbc.setState(0x365b, 0x4c6e, 0xce10, 0xfb8f, 0xc92c, 0x2b94, 0x1, 0x1);
        gbc.writeMem(0x365b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4c6e, gbc.sp());
        EXPECT(0x365d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0080
        gbc.setState(0x483b, 0xa18f, 0xaf80, 0x1610, 0x947c, 0x91cd, 0x0, 0x0);
        gbc.writeMem(0x483b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa18f, gbc.sp());
        EXPECT(0x483d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0081
        gbc.setState(0xa19d, 0x9df1, 0xa7f0, 0x50ee, 0x88b6, 0xdef9, 0x0, 0x1);
        gbc.writeMem(0xa19d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9df1, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19d));
        EXPECT(0x59, gbc.readMem(0xa19e));
        // CB 59 0082
        gbc.setState(0xbf6d, 0x35d9, 0x1610, 0xefff, 0xa4cb, 0xe1b, 0x0, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x35d9, gbc.sp());
        EXPECT(0xbf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6d));
        EXPECT(0x59, gbc.readMem(0xbf6e));
        // CB 59 0083
        gbc.setState(0x440c, 0xd306, 0x1f80, 0x3169, 0xf6df, 0x645, 0x1, 0x0);
        gbc.writeMem(0x440c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd306, gbc.sp());
        EXPECT(0x440e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0084
        gbc.setState(0x8481, 0x99cd, 0x91f0, 0x6a47, 0xbce0, 0xee64, 0x0, 0x1);
        gbc.writeMem(0x8481, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x99cd, gbc.sp());
        EXPECT(0x8483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8481));
        EXPECT(0x59, gbc.readMem(0x8482));
        // CB 59 0085
        gbc.setState(0x3270, 0x140b, 0x36e0, 0x6fa0, 0x7b22, 0x2a7c, 0x0, 0x1);
        gbc.writeMem(0x3270, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x140b, gbc.sp());
        EXPECT(0x3272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0086
        gbc.setState(0x4162, 0x6eab, 0x2c0, 0xd0e8, 0x2e0c, 0xf1f9, 0x1, 0x1);
        gbc.writeMem(0x4162, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0x4164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0088
        gbc.setState(0xe449, 0xa287, 0xbcc0, 0x6d9d, 0x2ff7, 0xc637, 0x1, 0x1);
        gbc.writeMem(0xe449, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa287, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe449));
        EXPECT(0x59, gbc.readMem(0xe44a));
        // CB 59 0089
        gbc.setState(0x90e3, 0x203a, 0xd830, 0xcfa4, 0xb02f, 0x950c, 0x0, 0x0);
        gbc.writeMem(0x90e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x203a, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e3));
        EXPECT(0x59, gbc.readMem(0x90e4));
        // CB 59 008A
        gbc.setState(0xe0c3, 0x52af, 0xcd00, 0xf1e4, 0x4f1b, 0x238c, 0x1, 0x0);
        gbc.writeMem(0xe0c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x52af, gbc.sp());
        EXPECT(0xe0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c3));
        EXPECT(0x59, gbc.readMem(0xe0c4));
        // CB 59 008B
        gbc.setState(0x58e7, 0xc8a4, 0x35a0, 0xf512, 0x682c, 0x6265, 0x0, 0x0);
        gbc.writeMem(0x58e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x58e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 008D
        gbc.setState(0x1ba0, 0x8ffd, 0x1840, 0x6523, 0x21a8, 0x6a9b, 0x1, 0x0);
        gbc.writeMem(0x1ba0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8ffd, gbc.sp());
        EXPECT(0x1ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 008E
        gbc.setState(0x797f, 0xd912, 0xe690, 0x11f4, 0x7542, 0x45d9, 0x1, 0x1);
        gbc.writeMem(0x797f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd912, gbc.sp());
        EXPECT(0x7981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 008F
        gbc.setState(0x5ea5, 0xaded, 0xc7e0, 0xb9c2, 0xd28a, 0xf62b, 0x0, 0x0);
        gbc.writeMem(0x5ea5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaded, gbc.sp());
        EXPECT(0x5ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0090
        gbc.setState(0x7327, 0x5641, 0x7130, 0x6590, 0x887a, 0xba76, 0x0, 0x1);
        gbc.writeMem(0x7327, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5641, gbc.sp());
        EXPECT(0x7329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0091
        gbc.setState(0x96d0, 0x3bc1, 0xc0, 0xf4d7, 0x5372, 0x13a, 0x0, 0x1);
        gbc.writeMem(0x96d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0x96d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d0));
        EXPECT(0x59, gbc.readMem(0x96d1));
        // CB 59 0092
        gbc.setState(0x6e36, 0xd37d, 0x2d30, 0x84d7, 0x81f3, 0xa321, 0x0, 0x1);
        gbc.writeMem(0x6e36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd37d, gbc.sp());
        EXPECT(0x6e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0093
        gbc.setState(0x19a3, 0x5c01, 0x6450, 0x4893, 0xd62f, 0xa05c, 0x0, 0x1);
        gbc.writeMem(0x19a3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5c01, gbc.sp());
        EXPECT(0x19a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0094
        gbc.setState(0xee15, 0x998b, 0xf6e0, 0xe0d4, 0x96bb, 0xf3e0, 0x1, 0x0);
        gbc.writeMem(0xee15, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x998b, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee15));
        EXPECT(0x59, gbc.readMem(0xee16));
        // CB 59 0096
        gbc.setState(0x1969, 0x5e78, 0x570, 0x710, 0xe56a, 0xf295, 0x1, 0x0);
        gbc.writeMem(0x1969, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5e78, gbc.sp());
        EXPECT(0x196b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0097
        gbc.setState(0xcbd, 0x4f27, 0xc240, 0xe3e1, 0xa971, 0xa02f, 0x1, 0x1);
        gbc.writeMem(0xcbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4f27, gbc.sp());
        EXPECT(0xcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0098
        gbc.setState(0xeab9, 0x9ceb, 0xbc80, 0x97df, 0x339d, 0xd0ed, 0x1, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab9));
        EXPECT(0x59, gbc.readMem(0xeaba));
        // CB 59 0099
        gbc.setState(0x9fc6, 0x5b3e, 0x7210, 0x5186, 0xf7d3, 0xf72d, 0x0, 0x0);
        gbc.writeMem(0x9fc6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5b3e, gbc.sp());
        EXPECT(0x9fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc6));
        EXPECT(0x59, gbc.readMem(0x9fc7));
        // CB 59 009A
        gbc.setState(0xc214, 0x64f8, 0xe90, 0xd2d7, 0x6fef, 0x7418, 0x1, 0x1);
        gbc.writeMem(0xc214, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x64f8, gbc.sp());
        EXPECT(0xc216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc214));
        EXPECT(0x59, gbc.readMem(0xc215));
        // CB 59 009B
        gbc.setState(0x2b4a, 0xd101, 0x9e60, 0xccc3, 0x4f65, 0x6a34, 0x1, 0x0);
        gbc.writeMem(0x2b4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd101, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 009C
        gbc.setState(0x9ea5, 0xa154, 0x8bc0, 0xf717, 0x98bf, 0xc813, 0x1, 0x0);
        gbc.writeMem(0x9ea5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0x9ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea5));
        EXPECT(0x59, gbc.readMem(0x9ea6));
        // CB 59 009D
        gbc.setState(0x1678, 0x914d, 0xbe60, 0x2ad6, 0xbaa1, 0x1846, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x167a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 009E
        gbc.setState(0xd71a, 0xde3e, 0x2ee0, 0x7a4, 0x88b0, 0x2460, 0x0, 0x0);
        gbc.writeMem(0xd71a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xde3e, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71a));
        EXPECT(0x59, gbc.readMem(0xd71b));
        // CB 59 009F
        gbc.setState(0x2912, 0xd7e0, 0x8b60, 0xc33b, 0x78d, 0xef27, 0x1, 0x1);
        gbc.writeMem(0x2912, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd7e0, gbc.sp());
        EXPECT(0x2914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00A0
        gbc.setState(0x3616, 0x4212, 0x9e30, 0x8c38, 0x9a2b, 0xefcb, 0x0, 0x1);
        gbc.writeMem(0x3616, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4212, gbc.sp());
        EXPECT(0x3618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00A1
        gbc.setState(0x133f, 0x1bf2, 0x160, 0xfdc2, 0x9b85, 0xa306, 0x0, 0x0);
        gbc.writeMem(0x133f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1bf2, gbc.sp());
        EXPECT(0x1341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00A2
        gbc.setState(0xcdef, 0xfddc, 0x6220, 0x79da, 0x1417, 0xe544, 0x1, 0x1);
        gbc.writeMem(0xcdef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0xcdf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdef));
        EXPECT(0x59, gbc.readMem(0xcdf0));
        // CB 59 00A3
        gbc.setState(0x9655, 0x44c1, 0x1fc0, 0x65b2, 0x5178, 0xf0fe, 0x1, 0x0);
        gbc.writeMem(0x9655, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x44c1, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9655));
        EXPECT(0x59, gbc.readMem(0x9656));
        // CB 59 00A4
        gbc.setState(0x2dbd, 0x9ca6, 0x7d20, 0x1e16, 0x87f6, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0x2dbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9ca6, gbc.sp());
        EXPECT(0x2dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00A5
        gbc.setState(0xc5f8, 0x6aee, 0x3b30, 0x3bb9, 0x4d98, 0x6836, 0x1, 0x1);
        gbc.writeMem(0xc5f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6aee, gbc.sp());
        EXPECT(0xc5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f8));
        EXPECT(0x59, gbc.readMem(0xc5f9));
        // CB 59 00A6
        gbc.setState(0xc2ac, 0xf01b, 0x7380, 0xdaee, 0x9536, 0x16d6, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf01b, gbc.sp());
        EXPECT(0xc2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ac));
        EXPECT(0x59, gbc.readMem(0xc2ad));
        // CB 59 00A7
        gbc.setState(0x341a, 0x7a7d, 0x2180, 0xd2a1, 0xa45b, 0x1122, 0x1, 0x1);
        gbc.writeMem(0x341a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7a7d, gbc.sp());
        EXPECT(0x341c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00A8
        gbc.setState(0xe359, 0x7abe, 0x6a20, 0xad3d, 0xc9b3, 0x61d4, 0x0, 0x1);
        gbc.writeMem(0xe359, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7abe, gbc.sp());
        EXPECT(0xe35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe359));
        EXPECT(0x59, gbc.readMem(0xe35a));
        // CB 59 00A9
        gbc.setState(0xa09, 0x4937, 0x1020, 0xfd51, 0x8b52, 0xdc24, 0x1, 0x0);
        gbc.writeMem(0xa09, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4937, gbc.sp());
        EXPECT(0xa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00AA
        gbc.setState(0xca38, 0x5e6c, 0x9960, 0xd44f, 0x141c, 0x2358, 0x0, 0x1);
        gbc.writeMem(0xca38, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5e6c, gbc.sp());
        EXPECT(0xca3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca38));
        EXPECT(0x59, gbc.readMem(0xca39));
        // CB 59 00AB
        gbc.setState(0xa437, 0xf61c, 0x5480, 0x42fd, 0x1fae, 0x4669, 0x1, 0x0);
        gbc.writeMem(0xa437, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf61c, gbc.sp());
        EXPECT(0xa439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa437));
        EXPECT(0x59, gbc.readMem(0xa438));
        // CB 59 00AC
        gbc.setState(0x821c, 0xa6d4, 0x5c20, 0x5fc5, 0xf452, 0xb7bc, 0x0, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa6d4, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821c));
        EXPECT(0x59, gbc.readMem(0x821d));
        // CB 59 00AD
        gbc.setState(0xa3d2, 0xe630, 0x29e0, 0x9d1d, 0x7950, 0xdb44, 0x0, 0x1);
        gbc.writeMem(0xa3d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe630, gbc.sp());
        EXPECT(0xa3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d2));
        EXPECT(0x59, gbc.readMem(0xa3d3));
        // CB 59 00AE
        gbc.setState(0x1102, 0x6aef, 0xcf10, 0x38ca, 0xd2f1, 0x6a79, 0x1, 0x0);
        gbc.writeMem(0x1102, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6aef, gbc.sp());
        EXPECT(0x1104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00AF
        gbc.setState(0xed4a, 0x15b3, 0xe510, 0x6f7f, 0x40f3, 0x8958, 0x0, 0x0);
        gbc.writeMem(0xed4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x15b3, gbc.sp());
        EXPECT(0xed4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4a));
        EXPECT(0x59, gbc.readMem(0xed4b));
        // CB 59 00B0
        gbc.setState(0xc115, 0x9c0a, 0xa440, 0xd53e, 0xf627, 0x95e9, 0x1, 0x1);
        gbc.writeMem(0xc115, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9c0a, gbc.sp());
        EXPECT(0xc117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc115));
        EXPECT(0x59, gbc.readMem(0xc116));
        // CB 59 00B1
        gbc.setState(0x693f, 0x7dc6, 0x9070, 0xf795, 0x9051, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0x693f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7dc6, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00B2
        gbc.setState(0x493c, 0x7a85, 0x78c0, 0x6bed, 0x17d0, 0x48a0, 0x0, 0x1);
        gbc.writeMem(0x493c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7a85, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00B3
        gbc.setState(0x255a, 0x1887, 0xabb0, 0x8770, 0xc25d, 0x4960, 0x1, 0x1);
        gbc.writeMem(0x255a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00B4
        gbc.setState(0x71dd, 0x7e97, 0x280, 0x2106, 0xfa3f, 0xaefb, 0x0, 0x0);
        gbc.writeMem(0x71dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7e97, gbc.sp());
        EXPECT(0x71df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00B5
        gbc.setState(0x2e14, 0xa113, 0x2400, 0x97e6, 0xfb9b, 0x764f, 0x0, 0x0);
        gbc.writeMem(0x2e14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa113, gbc.sp());
        EXPECT(0x2e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00B6
        gbc.setState(0x52d1, 0xbc02, 0x4130, 0x896b, 0x21ba, 0x4212, 0x1, 0x0);
        gbc.writeMem(0x52d1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbc02, gbc.sp());
        EXPECT(0x52d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00B7
        gbc.setState(0x945f, 0xd3f9, 0x9070, 0x463d, 0x2200, 0x5060, 0x1, 0x0);
        gbc.writeMem(0x945f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd3f9, gbc.sp());
        EXPECT(0x9461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945f));
        EXPECT(0x59, gbc.readMem(0x9460));
        // CB 59 00B8
        gbc.setState(0x83e4, 0xc1da, 0x99c0, 0x684c, 0xcb9b, 0xd466, 0x0, 0x0);
        gbc.writeMem(0x83e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc1da, gbc.sp());
        EXPECT(0x83e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e4));
        EXPECT(0x59, gbc.readMem(0x83e5));
        // CB 59 00B9
        gbc.setState(0x85b, 0x1c97, 0x17d0, 0x7a40, 0x1033, 0xa515, 0x1, 0x1);
        gbc.writeMem(0x85b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1c97, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00BA
        gbc.setState(0x51a7, 0xce55, 0xbc60, 0x3927, 0xb447, 0x7fa1, 0x1, 0x0);
        gbc.writeMem(0x51a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0x51a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00BB
        gbc.setState(0x6daa, 0x635a, 0xfd60, 0x5fc3, 0xbcd3, 0x727d, 0x0, 0x1);
        gbc.writeMem(0x6daa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x635a, gbc.sp());
        EXPECT(0x6dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00BC
        gbc.setState(0x1599, 0x6a14, 0x1910, 0xc5c, 0x1845, 0x3bfe, 0x0, 0x0);
        gbc.writeMem(0x1599, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0x159b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00BD
        gbc.setState(0x3dc5, 0x735f, 0x9ad0, 0x6938, 0x7d85, 0x78c7, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x735f, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00BE
        gbc.setState(0x710, 0x1820, 0x7610, 0x902a, 0x39a3, 0x335a, 0x1, 0x0);
        gbc.writeMem(0x710, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1820, gbc.sp());
        EXPECT(0x712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00BF
        gbc.setState(0xcaba, 0xe741, 0xe5b0, 0xa69e, 0x73, 0xcf3a, 0x0, 0x1);
        gbc.writeMem(0xcaba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe741, gbc.sp());
        EXPECT(0xcabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaba));
        EXPECT(0x59, gbc.readMem(0xcabb));
        // CB 59 00C0
        gbc.setState(0xc9a2, 0x81ca, 0x8910, 0xd4a2, 0xf4a5, 0xd709, 0x0, 0x0);
        gbc.writeMem(0xc9a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x81ca, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a2));
        EXPECT(0x59, gbc.readMem(0xc9a3));
        // CB 59 00C1
        gbc.setState(0x756b, 0x8a73, 0x1eb0, 0x72ea, 0xa061, 0xe8e0, 0x1, 0x1);
        gbc.writeMem(0x756b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8a73, gbc.sp());
        EXPECT(0x756d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00C2
        gbc.setState(0x136e, 0x6fae, 0x83b0, 0xa16, 0xfeb9, 0x6ede, 0x1, 0x1);
        gbc.writeMem(0x136e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0x1370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00C3
        gbc.setState(0xda8e, 0xb578, 0xc0b0, 0x6a16, 0x4bab, 0x30e1, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb578, gbc.sp());
        EXPECT(0xda90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8e));
        EXPECT(0x59, gbc.readMem(0xda8f));
        // CB 59 00C4
        gbc.setState(0x95db, 0x70e9, 0x8590, 0x8d44, 0x58a9, 0x5160, 0x0, 0x1);
        gbc.writeMem(0x95db, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x70e9, gbc.sp());
        EXPECT(0x95dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95db));
        EXPECT(0x59, gbc.readMem(0x95dc));
        // CB 59 00C5
        gbc.setState(0x2109, 0xf241, 0x9b70, 0x4e36, 0x4a0a, 0xd418, 0x0, 0x0);
        gbc.writeMem(0x2109, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf241, gbc.sp());
        EXPECT(0x210b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00C6
        gbc.setState(0x225a, 0x4fc5, 0x3e00, 0x4a5f, 0x43cd, 0x500b, 0x0, 0x1);
        gbc.writeMem(0x225a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4fc5, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00C7
        gbc.setState(0x6478, 0x5202, 0xe560, 0xd71c, 0xa58c, 0x41fa, 0x0, 0x1);
        gbc.writeMem(0x6478, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5202, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00C8
        gbc.setState(0xbbf1, 0xc494, 0xb460, 0xa667, 0xc38, 0x2bb8, 0x1, 0x1);
        gbc.writeMem(0xbbf1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc494, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf1));
        EXPECT(0x59, gbc.readMem(0xbbf2));
        // CB 59 00C9
        gbc.setState(0x310a, 0xda25, 0xfdc0, 0x1a3b, 0xe421, 0xde57, 0x1, 0x0);
        gbc.writeMem(0x310a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0x310c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00CA
        gbc.setState(0xae6c, 0xb610, 0x4db0, 0xe759, 0xab68, 0x38f2, 0x1, 0x1);
        gbc.writeMem(0xae6c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb610, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6c));
        EXPECT(0x59, gbc.readMem(0xae6d));
        // CB 59 00CB
        gbc.setState(0x64e3, 0xb047, 0xcba0, 0x2e0d, 0x82d5, 0xfee5, 0x1, 0x1);
        gbc.writeMem(0x64e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb047, gbc.sp());
        EXPECT(0x64e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00CC
        gbc.setState(0xee97, 0xbe38, 0xaf80, 0xeb3a, 0xdc81, 0xae9b, 0x1, 0x0);
        gbc.writeMem(0xee97, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbe38, gbc.sp());
        EXPECT(0xee99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee97));
        EXPECT(0x59, gbc.readMem(0xee98));
        // CB 59 00CD
        gbc.setState(0x7d63, 0x6c37, 0x3950, 0x83f7, 0xcf28, 0xba8, 0x1, 0x1);
        gbc.writeMem(0x7d63, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0x7d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00CE
        gbc.setState(0x4b43, 0xacb1, 0xf30, 0xaa23, 0xdcbf, 0x89a5, 0x1, 0x0);
        gbc.writeMem(0x4b43, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xacb1, gbc.sp());
        EXPECT(0x4b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00CF
        gbc.setState(0x8f3a, 0xfd52, 0x62e0, 0x4400, 0x55a0, 0x5014, 0x1, 0x0);
        gbc.writeMem(0x8f3a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfd52, gbc.sp());
        EXPECT(0x8f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3a));
        EXPECT(0x59, gbc.readMem(0x8f3b));
        // CB 59 00D0
        gbc.setState(0x6137, 0x8966, 0x2580, 0x5a6f, 0x7fd, 0x217d, 0x0, 0x1);
        gbc.writeMem(0x6137, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8966, gbc.sp());
        EXPECT(0x6139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00D1
        gbc.setState(0xea54, 0x2e98, 0xc890, 0xc66c, 0x41bc, 0x3b94, 0x1, 0x1);
        gbc.writeMem(0xea54, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2e98, gbc.sp());
        EXPECT(0xea56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea54));
        EXPECT(0x59, gbc.readMem(0xea55));
        // CB 59 00D2
        gbc.setState(0x1193, 0xc2ef, 0xe0f0, 0xaca5, 0x1973, 0x1ef6, 0x1, 0x1);
        gbc.writeMem(0x1193, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc2ef, gbc.sp());
        EXPECT(0x1195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00D3
        gbc.setState(0x3344, 0xb5f6, 0xfe0, 0xf634, 0x5cc9, 0x6a2, 0x0, 0x0);
        gbc.writeMem(0x3344, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00D4
        gbc.setState(0x44b4, 0xe238, 0xab50, 0x5f63, 0xe2ce, 0x6870, 0x0, 0x0);
        gbc.writeMem(0x44b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x44b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00D6
        gbc.setState(0xc9fc, 0x2b6, 0x4100, 0x3a9a, 0x9417, 0xd9ec, 0x1, 0x0);
        gbc.writeMem(0xc9fc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b6, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fc));
        EXPECT(0x59, gbc.readMem(0xc9fd));
        // CB 59 00D8
        gbc.setState(0x4aa0, 0x6a53, 0x1160, 0xa21e, 0xc5ee, 0x6391, 0x1, 0x1);
        gbc.writeMem(0x4aa0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0x4aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00D9
        gbc.setState(0x4cd7, 0x7ebf, 0x4f0, 0xe64, 0xd1ca, 0xd70d, 0x1, 0x0);
        gbc.writeMem(0x4cd7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00DA
        gbc.setState(0x2007, 0xd45c, 0xa030, 0xf227, 0xb727, 0x631c, 0x0, 0x0);
        gbc.writeMem(0x2007, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd45c, gbc.sp());
        EXPECT(0x2009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00DB
        gbc.setState(0xc6f7, 0x77fd, 0x720, 0x5764, 0x6643, 0xf057, 0x1, 0x1);
        gbc.writeMem(0xc6f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x77fd, gbc.sp());
        EXPECT(0xc6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f7));
        EXPECT(0x59, gbc.readMem(0xc6f8));
        // CB 59 00DC
        gbc.setState(0xe5bf, 0x3b07, 0x32c0, 0x89a0, 0x52f0, 0xaf53, 0x0, 0x0);
        gbc.writeMem(0xe5bf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3b07, gbc.sp());
        EXPECT(0xe5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bf));
        EXPECT(0x59, gbc.readMem(0xe5c0));
        // CB 59 00DD
        gbc.setState(0x4a0f, 0x95f4, 0xc230, 0xe025, 0x81df, 0x2e20, 0x1, 0x0);
        gbc.writeMem(0x4a0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x95f4, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00DE
        gbc.setState(0xea36, 0x9a87, 0xe030, 0xea8d, 0xea59, 0x45e4, 0x0, 0x1);
        gbc.writeMem(0xea36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9a87, gbc.sp());
        EXPECT(0xea38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea36));
        EXPECT(0x59, gbc.readMem(0xea37));
        // CB 59 00DF
        gbc.setState(0x5e9, 0x617, 0x1430, 0xc1ce, 0x5a03, 0x8413, 0x0, 0x0);
        gbc.writeMem(0x5e9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x617, gbc.sp());
        EXPECT(0x5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00E1
        gbc.setState(0xc451, 0xb8fc, 0x8440, 0xc80d, 0xcb12, 0x1fcb, 0x0, 0x1);
        gbc.writeMem(0xc451, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb8fc, gbc.sp());
        EXPECT(0xc453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc451));
        EXPECT(0x59, gbc.readMem(0xc452));
        // CB 59 00E2
        gbc.setState(0x1a75, 0xe542, 0x7370, 0xfcac, 0x901, 0xc74f, 0x1, 0x1);
        gbc.writeMem(0x1a75, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe542, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00E3
        gbc.setState(0x5f36, 0xe410, 0xa110, 0xa81, 0x1e5e, 0x355a, 0x0, 0x1);
        gbc.writeMem(0x5f36, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe410, gbc.sp());
        EXPECT(0x5f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00E5
        gbc.setState(0x7402, 0xea60, 0xf300, 0x4596, 0x6b46, 0x32, 0x0, 0x0);
        gbc.writeMem(0x7402, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0x7404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00E6
        gbc.setState(0x5e2, 0xd03d, 0x4450, 0xea6c, 0xc697, 0x891d, 0x1, 0x1);
        gbc.writeMem(0x5e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd03d, gbc.sp());
        EXPECT(0x5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00E7
        gbc.setState(0x10b4, 0xc0f4, 0x8480, 0xdf53, 0x6a25, 0x8cea, 0x1, 0x1);
        gbc.writeMem(0x10b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x10b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00E8
        gbc.setState(0x55cc, 0x582, 0x100, 0x22d6, 0xf585, 0x9d, 0x0, 0x0);
        gbc.writeMem(0x55cc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00E9
        gbc.setState(0x4b0a, 0x5548, 0xe2f0, 0x51e7, 0x976c, 0x1be, 0x0, 0x0);
        gbc.writeMem(0x4b0a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5548, gbc.sp());
        EXPECT(0x4b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00EB
        gbc.setState(0x3e51, 0x1097, 0x3aa0, 0x3983, 0xc57f, 0x4ef7, 0x1, 0x1);
        gbc.writeMem(0x3e51, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1097, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00EC
        gbc.setState(0x3ea6, 0xfc9c, 0xa6a0, 0x37fc, 0xb314, 0x51bc, 0x1, 0x0);
        gbc.writeMem(0x3ea6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfc9c, gbc.sp());
        EXPECT(0x3ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00ED
        gbc.setState(0x3404, 0x3772, 0x99e0, 0x6c1b, 0xcce1, 0x7f80, 0x1, 0x0);
        gbc.writeMem(0x3404, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3772, gbc.sp());
        EXPECT(0x3406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00EE
        gbc.setState(0x9648, 0xff7f, 0x5a30, 0x59d3, 0x6db7, 0xeca2, 0x0, 0x1);
        gbc.writeMem(0x9648, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xff7f, gbc.sp());
        EXPECT(0x964a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9648));
        EXPECT(0x59, gbc.readMem(0x9649));
        // CB 59 00EF
        gbc.setState(0x233, 0x6820, 0x3e60, 0xfe3f, 0x67bd, 0xb5cc, 0x1, 0x1);
        gbc.writeMem(0x233, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6820, gbc.sp());
        EXPECT(0x235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00F0
        gbc.setState(0xec8f, 0x5e0c, 0x8ae0, 0x9546, 0x892e, 0xe4f5, 0x0, 0x1);
        gbc.writeMem(0xec8f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5e0c, gbc.sp());
        EXPECT(0xec91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec8f));
        EXPECT(0x59, gbc.readMem(0xec90));
        // CB 59 00F1
        gbc.setState(0x5854, 0x9e1e, 0x6150, 0xf904, 0xbe5e, 0x86ac, 0x0, 0x0);
        gbc.writeMem(0x5854, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9e1e, gbc.sp());
        EXPECT(0x5856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00F2
        gbc.setState(0xef1f, 0x18d9, 0x2990, 0xd91d, 0x9c8e, 0x1965, 0x0, 0x0);
        gbc.writeMem(0xef1f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x18d9, gbc.sp());
        EXPECT(0xef21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1f));
        EXPECT(0x59, gbc.readMem(0xef20));
        // CB 59 00F3
        gbc.setState(0xeea1, 0xe90b, 0xde60, 0x7771, 0x6239, 0x634c, 0x0, 0x1);
        gbc.writeMem(0xeea1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe90b, gbc.sp());
        EXPECT(0xeea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea1));
        EXPECT(0x59, gbc.readMem(0xeea2));
        // CB 59 00F4
        gbc.setState(0x8fae, 0x75b, 0x8cd0, 0x7126, 0x915d, 0x9b2e, 0x1, 0x0);
        gbc.writeMem(0x8fae, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x75b, gbc.sp());
        EXPECT(0x8fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fae));
        EXPECT(0x59, gbc.readMem(0x8faf));
        // CB 59 00F5
        gbc.setState(0x5049, 0x6002, 0x1f70, 0x9c27, 0x38b5, 0xf5ba, 0x0, 0x0);
        gbc.writeMem(0x5049, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6002, gbc.sp());
        EXPECT(0x504b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 00F6
        gbc.setState(0x6f2, 0xdb9, 0x7420, 0x516c, 0xb8b0, 0xcc2f, 0x1, 0x0);
        gbc.writeMem(0x6f2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdb9, gbc.sp());
        EXPECT(0x6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00F7
        gbc.setState(0x85ec, 0x5d3, 0x6350, 0xdac, 0x53f4, 0x983b, 0x0, 0x1);
        gbc.writeMem(0x85ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5d3, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ec));
        EXPECT(0x59, gbc.readMem(0x85ed));
        // CB 59 00F8
        gbc.setState(0x3c1, 0xc6e3, 0x1b80, 0x1390, 0x4fb8, 0x67a5, 0x1, 0x1);
        gbc.writeMem(0x3c1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc6e3, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00F9
        gbc.setState(0xee23, 0x969b, 0xa6b0, 0x102d, 0xc810, 0x1c92, 0x1, 0x1);
        gbc.writeMem(0xee23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x969b, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee23));
        EXPECT(0x59, gbc.readMem(0xee24));
        // CB 59 00FA
        gbc.setState(0x70fa, 0xddeb, 0xcac0, 0x115, 0xdbe1, 0x25b6, 0x1, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xddeb, gbc.sp());
        EXPECT(0x70fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 00FB
        gbc.setState(0xb7b3, 0x29a2, 0x7340, 0x4495, 0xa4f5, 0x4f2, 0x0, 0x1);
        gbc.writeMem(0xb7b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x29a2, gbc.sp());
        EXPECT(0xb7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b3));
        EXPECT(0x59, gbc.readMem(0xb7b4));
        // CB 59 00FC
        gbc.setState(0xc46c, 0xa72e, 0xdd30, 0x262b, 0x2800, 0x7fec, 0x0, 0x1);
        gbc.writeMem(0xc46c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa72e, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46c));
        EXPECT(0x59, gbc.readMem(0xc46d));
        // CB 59 00FD
        gbc.setState(0x9568, 0x75d1, 0x2b10, 0xc91f, 0x66b6, 0xfbc8, 0x1, 0x1);
        gbc.writeMem(0x9568, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x75d1, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9568));
        EXPECT(0x59, gbc.readMem(0x9569));
        // CB 59 00FE
        gbc.setState(0x91ac, 0x5f35, 0x4c70, 0x92fd, 0xf028, 0x2840, 0x0, 0x0);
        gbc.writeMem(0x91ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0x91ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ac));
        EXPECT(0x59, gbc.readMem(0x91ad));
        // CB 59 00FF
        gbc.setState(0x4181, 0xe3df, 0x4b0, 0xfc4e, 0xcbb9, 0x4480, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe3df, gbc.sp());
        EXPECT(0x4183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0100
        gbc.setState(0x5281, 0xa60b, 0xa1d0, 0x415f, 0x8ffd, 0x6c47, 0x0, 0x0);
        gbc.writeMem(0x5281, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa60b, gbc.sp());
        EXPECT(0x5283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0101
        gbc.setState(0x31b0, 0xe3bb, 0x6c70, 0xf939, 0x99f0, 0xdcd4, 0x0, 0x0);
        gbc.writeMem(0x31b0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe3bb, gbc.sp());
        EXPECT(0x31b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0102
        gbc.setState(0x6a6f, 0xb2fa, 0xfcd0, 0x4482, 0x5b7e, 0x9678, 0x0, 0x1);
        gbc.writeMem(0x6a6f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb2fa, gbc.sp());
        EXPECT(0x6a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0103
        gbc.setState(0x2e26, 0x71f4, 0x2600, 0xdfef, 0x42ae, 0x3ead, 0x0, 0x0);
        gbc.writeMem(0x2e26, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x71f4, gbc.sp());
        EXPECT(0x2e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0104
        gbc.setState(0xba8f, 0x6e2f, 0x21e0, 0xe2fd, 0xc902, 0xc4c4, 0x0, 0x0);
        gbc.writeMem(0xba8f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0xba91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8f));
        EXPECT(0x59, gbc.readMem(0xba90));
        // CB 59 0105
        gbc.setState(0x5bf1, 0xcbed, 0x9960, 0xf8d7, 0xf546, 0xd675, 0x1, 0x0);
        gbc.writeMem(0x5bf1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcbed, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0106
        gbc.setState(0xe042, 0xbbfd, 0x6320, 0xe4d4, 0xe578, 0xa7a9, 0x1, 0x1);
        gbc.writeMem(0xe042, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbbfd, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe042));
        EXPECT(0x59, gbc.readMem(0xe043));
        // CB 59 0107
        gbc.setState(0x4b61, 0x3929, 0xbba0, 0xac76, 0xf8ad, 0xf718, 0x0, 0x1);
        gbc.writeMem(0x4b61, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3929, gbc.sp());
        EXPECT(0x4b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0108
        gbc.setState(0xad3c, 0x5605, 0xcf0, 0x8455, 0xb18d, 0x6a24, 0x0, 0x1);
        gbc.writeMem(0xad3c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5605, gbc.sp());
        EXPECT(0xad3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3c));
        EXPECT(0x59, gbc.readMem(0xad3d));
        // CB 59 0109
        gbc.setState(0x67eb, 0xa97, 0x1ba0, 0x19cf, 0xc1dc, 0x8e5f, 0x0, 0x1);
        gbc.writeMem(0x67eb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa97, gbc.sp());
        EXPECT(0x67ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 010A
        gbc.setState(0x50ba, 0x1de0, 0xe5e0, 0x7206, 0x652, 0xd434, 0x0, 0x0);
        gbc.writeMem(0x50ba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1de0, gbc.sp());
        EXPECT(0x50bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 010B
        gbc.setState(0xcefb, 0xe7b4, 0xbd80, 0xf618, 0xe81b, 0xac37, 0x1, 0x0);
        gbc.writeMem(0xcefb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe7b4, gbc.sp());
        EXPECT(0xcefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcefb));
        EXPECT(0x59, gbc.readMem(0xcefc));
        // CB 59 010C
        gbc.setState(0x16ac, 0xfdb1, 0x95f0, 0xbf67, 0x8178, 0xea62, 0x1, 0x0);
        gbc.writeMem(0x16ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfdb1, gbc.sp());
        EXPECT(0x16ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 010D
        gbc.setState(0xc840, 0x5f70, 0x1270, 0xee14, 0x27e5, 0x4c70, 0x1, 0x1);
        gbc.writeMem(0xc840, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5f70, gbc.sp());
        EXPECT(0xc842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc840));
        EXPECT(0x59, gbc.readMem(0xc841));
        // CB 59 010E
        gbc.setState(0xc183, 0x2eb0, 0xbdf0, 0x6590, 0x146a, 0x17da, 0x0, 0x0);
        gbc.writeMem(0xc183, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2eb0, gbc.sp());
        EXPECT(0xc185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc183));
        EXPECT(0x59, gbc.readMem(0xc184));
        // CB 59 010F
        gbc.setState(0xc745, 0x623, 0x8110, 0x87fc, 0x3b4b, 0xe474, 0x0, 0x0);
        gbc.writeMem(0xc745, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x623, gbc.sp());
        EXPECT(0xc747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc745));
        EXPECT(0x59, gbc.readMem(0xc746));
        // CB 59 0110
        gbc.setState(0x1182, 0xba0f, 0x9e70, 0x41b8, 0x55a4, 0xd864, 0x0, 0x0);
        gbc.writeMem(0x1182, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xba0f, gbc.sp());
        EXPECT(0x1184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0111
        gbc.setState(0xe50a, 0x91b6, 0x6900, 0x9684, 0x35f2, 0x3d92, 0x1, 0x1);
        gbc.writeMem(0xe50a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x91b6, gbc.sp());
        EXPECT(0xe50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50a));
        EXPECT(0x59, gbc.readMem(0xe50b));
        // CB 59 0112
        gbc.setState(0x89af, 0x2415, 0x22b0, 0x4d1f, 0x5d7e, 0x87bf, 0x0, 0x0);
        gbc.writeMem(0x89af, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2415, gbc.sp());
        EXPECT(0x89b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89af));
        EXPECT(0x59, gbc.readMem(0x89b0));
        // CB 59 0113
        gbc.setState(0xcfaf, 0x792c, 0x7f80, 0x8d4c, 0xd116, 0xf6b3, 0x0, 0x0);
        gbc.writeMem(0xcfaf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x792c, gbc.sp());
        EXPECT(0xcfb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfaf));
        EXPECT(0x59, gbc.readMem(0xcfb0));
        // CB 59 0114
        gbc.setState(0x181d, 0x45e3, 0xa180, 0x30be, 0x3fac, 0x4100, 0x0, 0x0);
        gbc.writeMem(0x181d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x45e3, gbc.sp());
        EXPECT(0x181f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0115
        gbc.setState(0xbb7b, 0x191a, 0x83b0, 0x319c, 0xe2c5, 0x1479, 0x0, 0x1);
        gbc.writeMem(0xbb7b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x191a, gbc.sp());
        EXPECT(0xbb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7b));
        EXPECT(0x59, gbc.readMem(0xbb7c));
        // CB 59 0116
        gbc.setState(0x6106, 0x2c9, 0xcf00, 0x1e03, 0x9253, 0x558, 0x1, 0x1);
        gbc.writeMem(0x6106, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0117
        gbc.setState(0xbed5, 0x3496, 0x8880, 0x7b99, 0xd776, 0x3b0b, 0x0, 0x1);
        gbc.writeMem(0xbed5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3496, gbc.sp());
        EXPECT(0xbed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed5));
        EXPECT(0x59, gbc.readMem(0xbed6));
        // CB 59 0118
        gbc.setState(0x1d14, 0xb455, 0xb250, 0x2f08, 0xc7fd, 0x6f5d, 0x0, 0x1);
        gbc.writeMem(0x1d14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb455, gbc.sp());
        EXPECT(0x1d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0119
        gbc.setState(0x2733, 0xc6d1, 0x52f0, 0x49cc, 0x8b12, 0xeae2, 0x0, 0x1);
        gbc.writeMem(0x2733, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc6d1, gbc.sp());
        EXPECT(0x2735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 011A
        gbc.setState(0x8cc8, 0x906a, 0xde30, 0x46b0, 0xfa4a, 0x6cb7, 0x1, 0x1);
        gbc.writeMem(0x8cc8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x906a, gbc.sp());
        EXPECT(0x8cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc8));
        EXPECT(0x59, gbc.readMem(0x8cc9));
        // CB 59 011B
        gbc.setState(0x3c88, 0xb260, 0x530, 0x7be8, 0xa517, 0xd892, 0x1, 0x0);
        gbc.writeMem(0x3c88, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 011C
        gbc.setState(0xbb7d, 0x8607, 0xabb0, 0x5080, 0x363b, 0xe574, 0x0, 0x1);
        gbc.writeMem(0xbb7d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8607, gbc.sp());
        EXPECT(0xbb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7d));
        EXPECT(0x59, gbc.readMem(0xbb7e));
        // CB 59 011D
        gbc.setState(0xa0fb, 0xe735, 0x7850, 0x5476, 0xacc, 0x98f2, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe735, gbc.sp());
        EXPECT(0xa0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fb));
        EXPECT(0x59, gbc.readMem(0xa0fc));
        // CB 59 011E
        gbc.setState(0xc783, 0xfa70, 0x2de0, 0xcaab, 0xe7d9, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0xc783, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0xc785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc783));
        EXPECT(0x59, gbc.readMem(0xc784));
        // CB 59 011F
        gbc.setState(0x41f3, 0x7611, 0x95d0, 0x14b5, 0x9a32, 0x8e80, 0x0, 0x1);
        gbc.writeMem(0x41f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7611, gbc.sp());
        EXPECT(0x41f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0120
        gbc.setState(0x55ab, 0x3ad6, 0x1d90, 0xa236, 0x85b6, 0xe84b, 0x0, 0x0);
        gbc.writeMem(0x55ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3ad6, gbc.sp());
        EXPECT(0x55ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0121
        gbc.setState(0xa51, 0x74e2, 0x18b0, 0xcd0a, 0x7699, 0xb56b, 0x1, 0x0);
        gbc.writeMem(0xa51, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x74e2, gbc.sp());
        EXPECT(0xa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0122
        gbc.setState(0xac7c, 0xb332, 0xc480, 0x8ed, 0x2c83, 0xf3e6, 0x1, 0x0);
        gbc.writeMem(0xac7c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0xac7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7c));
        EXPECT(0x59, gbc.readMem(0xac7d));
        // CB 59 0123
        gbc.setState(0x162f, 0xf323, 0x4120, 0x7d99, 0xc774, 0x19f0, 0x0, 0x0);
        gbc.writeMem(0x162f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf323, gbc.sp());
        EXPECT(0x1631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0124
        gbc.setState(0xa631, 0xebf8, 0xba40, 0x2e57, 0x9626, 0xb2ba, 0x1, 0x1);
        gbc.writeMem(0xa631, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xebf8, gbc.sp());
        EXPECT(0xa633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa631));
        EXPECT(0x59, gbc.readMem(0xa632));
        // CB 59 0125
        gbc.setState(0x59b, 0xb544, 0x2730, 0x7205, 0xe45b, 0x47d1, 0x0, 0x0);
        gbc.writeMem(0x59b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb544, gbc.sp());
        EXPECT(0x59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0126
        gbc.setState(0x5e3d, 0x9e57, 0xbbf0, 0xe2df, 0xb764, 0x699e, 0x1, 0x1);
        gbc.writeMem(0x5e3d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9e57, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0127
        gbc.setState(0xb750, 0xd9a1, 0x5700, 0xdaa2, 0xdea, 0x484f, 0x0, 0x0);
        gbc.writeMem(0xb750, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd9a1, gbc.sp());
        EXPECT(0xb752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb750));
        EXPECT(0x59, gbc.readMem(0xb751));
        // CB 59 0128
        gbc.setState(0x47e2, 0xc780, 0xffc0, 0x4f98, 0xa2bf, 0x8091, 0x1, 0x1);
        gbc.writeMem(0x47e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc780, gbc.sp());
        EXPECT(0x47e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0129
        gbc.setState(0x9cfa, 0x1285, 0xece0, 0xc625, 0x954d, 0x9a5b, 0x1, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1285, gbc.sp());
        EXPECT(0x9cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfa));
        EXPECT(0x59, gbc.readMem(0x9cfb));
        // CB 59 012A
        gbc.setState(0xba3d, 0xae2b, 0x3e0, 0x97c, 0xfd8a, 0x8e1e, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xae2b, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0x59, gbc.readMem(0xba3e));
        // CB 59 012B
        gbc.setState(0xc975, 0xcdd0, 0xe920, 0x8b96, 0x457, 0x158f, 0x0, 0x0);
        gbc.writeMem(0xc975, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0xc977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc975));
        EXPECT(0x59, gbc.readMem(0xc976));
        // CB 59 012C
        gbc.setState(0xa92e, 0xbdd8, 0xd5b0, 0x6f23, 0x161e, 0x43c9, 0x1, 0x1);
        gbc.writeMem(0xa92e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbdd8, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92e));
        EXPECT(0x59, gbc.readMem(0xa92f));
        // CB 59 012D
        gbc.setState(0xb940, 0x428a, 0x8a0, 0x615d, 0x9f7f, 0xecc8, 0x1, 0x1);
        gbc.writeMem(0xb940, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x428a, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb940));
        EXPECT(0x59, gbc.readMem(0xb941));
        // CB 59 012E
        gbc.setState(0x35d7, 0xd927, 0x65b0, 0x1113, 0xd9a2, 0x922c, 0x1, 0x0);
        gbc.writeMem(0x35d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd927, gbc.sp());
        EXPECT(0x35d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 012F
        gbc.setState(0x35ea, 0x5cd2, 0x6b50, 0xee79, 0x32c6, 0xf241, 0x0, 0x0);
        gbc.writeMem(0x35ea, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5cd2, gbc.sp());
        EXPECT(0x35ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0130
        gbc.setState(0xb4f7, 0x4ebe, 0x2050, 0xbfcc, 0x2fd8, 0xd53e, 0x0, 0x0);
        gbc.writeMem(0xb4f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4ebe, gbc.sp());
        EXPECT(0xb4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f7));
        EXPECT(0x59, gbc.readMem(0xb4f8));
        // CB 59 0131
        gbc.setState(0xe93, 0xfa2e, 0x3730, 0x9dc9, 0xcafe, 0xeef, 0x0, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0xe95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0132
        gbc.setState(0x23e9, 0x266a, 0x1480, 0xb640, 0xa14b, 0xd37, 0x1, 0x0);
        gbc.writeMem(0x23e9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0x23eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0133
        gbc.setState(0xb433, 0x906d, 0xc580, 0x28e4, 0x53b5, 0xe964, 0x1, 0x0);
        gbc.writeMem(0xb433, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x906d, gbc.sp());
        EXPECT(0xb435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb433));
        EXPECT(0x59, gbc.readMem(0xb434));
        // CB 59 0134
        gbc.setState(0x71c9, 0x86a6, 0xa20, 0x1631, 0x8fd1, 0x7153, 0x0, 0x1);
        gbc.writeMem(0x71c9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x86a6, gbc.sp());
        EXPECT(0x71cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0136
        gbc.setState(0x68c, 0x6bc9, 0xbd90, 0xa0a1, 0x535a, 0xa74, 0x1, 0x0);
        gbc.writeMem(0x68c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6bc9, gbc.sp());
        EXPECT(0x68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0137
        gbc.setState(0xdb2f, 0xba89, 0x21e0, 0xd31f, 0x59f1, 0xc619, 0x0, 0x1);
        gbc.writeMem(0xdb2f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xba89, gbc.sp());
        EXPECT(0xdb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2f));
        EXPECT(0x59, gbc.readMem(0xdb30));
        // CB 59 0138
        gbc.setState(0x816d, 0xebe9, 0xf00, 0x2efc, 0x75d6, 0x3f8, 0x1, 0x0);
        gbc.writeMem(0x816d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xebe9, gbc.sp());
        EXPECT(0x816f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816d));
        EXPECT(0x59, gbc.readMem(0x816e));
        // CB 59 0139
        gbc.setState(0xc1f1, 0x762b, 0x1de0, 0xef61, 0xdd9e, 0xf94a, 0x0, 0x0);
        gbc.writeMem(0xc1f1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0xc1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f1));
        EXPECT(0x59, gbc.readMem(0xc1f2));
        // CB 59 013A
        gbc.setState(0x5861, 0x84d7, 0x5260, 0xff57, 0x1ce9, 0xa4fb, 0x0, 0x0);
        gbc.writeMem(0x5861, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x84d7, gbc.sp());
        EXPECT(0x5863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 013B
        gbc.setState(0x7f1b, 0x472, 0xb0c0, 0x631e, 0xff97, 0x68a4, 0x1, 0x1);
        gbc.writeMem(0x7f1b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x472, gbc.sp());
        EXPECT(0x7f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 013C
        gbc.setState(0x2ad5, 0xf7b5, 0xc3e0, 0xda51, 0x2efb, 0x943e, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf7b5, gbc.sp());
        EXPECT(0x2ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 013D
        gbc.setState(0xe478, 0x29bc, 0x9620, 0x32af, 0xb907, 0xdfd, 0x1, 0x0);
        gbc.writeMem(0xe478, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x29bc, gbc.sp());
        EXPECT(0xe47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe478));
        EXPECT(0x59, gbc.readMem(0xe479));
        // CB 59 013E
        gbc.setState(0x9514, 0x8cfb, 0x9770, 0x32f2, 0xc6e2, 0x163a, 0x0, 0x0);
        gbc.writeMem(0x9514, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8cfb, gbc.sp());
        EXPECT(0x9516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9514));
        EXPECT(0x59, gbc.readMem(0x9515));
        // CB 59 013F
        gbc.setState(0x448b, 0xad58, 0xc440, 0xe941, 0xaa0c, 0xa3cd, 0x0, 0x1);
        gbc.writeMem(0x448b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xad58, gbc.sp());
        EXPECT(0x448d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0140
        gbc.setState(0x682c, 0xac33, 0xfc00, 0x8683, 0x95a6, 0xbada, 0x0, 0x0);
        gbc.writeMem(0x682c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xac33, gbc.sp());
        EXPECT(0x682e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0141
        gbc.setState(0x2996, 0x576c, 0x6630, 0xac3e, 0xeeaa, 0x5f3, 0x0, 0x0);
        gbc.writeMem(0x2996, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x576c, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0142
        gbc.setState(0xcc16, 0xc205, 0xdd0, 0xb908, 0x558d, 0xeffe, 0x0, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc205, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc16));
        EXPECT(0x59, gbc.readMem(0xcc17));
        // CB 59 0143
        gbc.setState(0xd34d, 0xa1e8, 0x83c0, 0x92aa, 0xff3b, 0xd5a0, 0x1, 0x1);
        gbc.writeMem(0xd34d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa1e8, gbc.sp());
        EXPECT(0xd34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34d));
        EXPECT(0x59, gbc.readMem(0xd34e));
        // CB 59 0144
        gbc.setState(0xa484, 0x5c58, 0x72d0, 0x9810, 0x13ec, 0xdea2, 0x1, 0x0);
        gbc.writeMem(0xa484, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5c58, gbc.sp());
        EXPECT(0xa486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa484));
        EXPECT(0x59, gbc.readMem(0xa485));
        // CB 59 0145
        gbc.setState(0x70f4, 0x72a5, 0x8380, 0xfe87, 0xca0f, 0x18fe, 0x0, 0x1);
        gbc.writeMem(0x70f4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x72a5, gbc.sp());
        EXPECT(0x70f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0146
        gbc.setState(0x6b49, 0xaf25, 0x9ff0, 0x4558, 0x9f8f, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0x6b49, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaf25, gbc.sp());
        EXPECT(0x6b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0147
        gbc.setState(0x5af6, 0xcf5f, 0xbb00, 0x112f, 0x348a, 0x6582, 0x0, 0x0);
        gbc.writeMem(0x5af6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0x5af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0148
        gbc.setState(0x43e2, 0x3251, 0x4890, 0x72dc, 0x3c78, 0x4663, 0x0, 0x1);
        gbc.writeMem(0x43e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3251, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0149
        gbc.setState(0xbb9, 0x26f4, 0xca60, 0x790c, 0xd014, 0xa584, 0x1, 0x0);
        gbc.writeMem(0xbb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x26f4, gbc.sp());
        EXPECT(0xbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 014A
        gbc.setState(0x2eed, 0xfee4, 0x7d90, 0x152f, 0x24c4, 0x40b4, 0x0, 0x0);
        gbc.writeMem(0x2eed, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0x2eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 014B
        gbc.setState(0x6493, 0x90ea, 0x4990, 0x31bf, 0x3235, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0x6493, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x90ea, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 014C
        gbc.setState(0x7a0c, 0xf798, 0xfd00, 0x56f0, 0x3214, 0x3c4d, 0x1, 0x1);
        gbc.writeMem(0x7a0c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf798, gbc.sp());
        EXPECT(0x7a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 014D
        gbc.setState(0x62f5, 0x92c0, 0x5960, 0xa239, 0x9627, 0xed9a, 0x1, 0x0);
        gbc.writeMem(0x62f5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x92c0, gbc.sp());
        EXPECT(0x62f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 014E
        gbc.setState(0xc1f6, 0x360d, 0xe5e0, 0xfbb4, 0x885d, 0xfd19, 0x1, 0x1);
        gbc.writeMem(0xc1f6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x360d, gbc.sp());
        EXPECT(0xc1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f6));
        EXPECT(0x59, gbc.readMem(0xc1f7));
        // CB 59 014F
        gbc.setState(0xd1d0, 0x1aca, 0xa050, 0x17fb, 0x2303, 0x468, 0x1, 0x0);
        gbc.writeMem(0xd1d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1aca, gbc.sp());
        EXPECT(0xd1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d0));
        EXPECT(0x59, gbc.readMem(0xd1d1));
        // CB 59 0150
        gbc.setState(0x1c06, 0xdaae, 0x2590, 0xe624, 0xdadc, 0xb3ba, 0x0, 0x1);
        gbc.writeMem(0x1c06, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdaae, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0151
        gbc.setState(0xa9fa, 0x1b25, 0x8400, 0xd46d, 0x48f4, 0x1f9c, 0x0, 0x0);
        gbc.writeMem(0xa9fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1b25, gbc.sp());
        EXPECT(0xa9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9fa));
        EXPECT(0x59, gbc.readMem(0xa9fb));
        // CB 59 0152
        gbc.setState(0x2fba, 0x5e89, 0xd90, 0x556c, 0x209b, 0x6839, 0x0, 0x1);
        gbc.writeMem(0x2fba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5e89, gbc.sp());
        EXPECT(0x2fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0153
        gbc.setState(0x76fb, 0x519, 0xb150, 0xf1dd, 0x97e2, 0x1e51, 0x0, 0x1);
        gbc.writeMem(0x76fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x519, gbc.sp());
        EXPECT(0x76fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0154
        gbc.setState(0xa8bf, 0x1d33, 0x7990, 0x597f, 0x8ef2, 0x40c0, 0x0, 0x0);
        gbc.writeMem(0xa8bf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1d33, gbc.sp());
        EXPECT(0xa8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bf));
        EXPECT(0x59, gbc.readMem(0xa8c0));
        // CB 59 0155
        gbc.setState(0x3311, 0x13b9, 0x5d00, 0xdba6, 0xd702, 0xec66, 0x0, 0x1);
        gbc.writeMem(0x3311, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x13b9, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0156
        gbc.setState(0x4af1, 0xde71, 0x72a0, 0xf299, 0xe69f, 0x82d3, 0x0, 0x0);
        gbc.writeMem(0x4af1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xde71, gbc.sp());
        EXPECT(0x4af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0158
        gbc.setState(0x5a58, 0x129d, 0x5b30, 0x59b9, 0xb7da, 0x1cfd, 0x0, 0x1);
        gbc.writeMem(0x5a58, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x129d, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0159
        gbc.setState(0x1a9f, 0xddd5, 0xe620, 0xf90c, 0xc76d, 0x2cb3, 0x1, 0x1);
        gbc.writeMem(0x1a9f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xddd5, gbc.sp());
        EXPECT(0x1aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 015A
        gbc.setState(0xbcc8, 0x31a3, 0xf3e0, 0xea77, 0x586d, 0x5646, 0x1, 0x0);
        gbc.writeMem(0xbcc8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x31a3, gbc.sp());
        EXPECT(0xbcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc8));
        EXPECT(0x59, gbc.readMem(0xbcc9));
        // CB 59 015B
        gbc.setState(0xeae3, 0x51e, 0xa260, 0x8dff, 0xab2f, 0xcd74, 0x0, 0x0);
        gbc.writeMem(0xeae3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x51e, gbc.sp());
        EXPECT(0xeae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae3));
        EXPECT(0x59, gbc.readMem(0xeae4));
        // CB 59 015D
        gbc.setState(0xda3e, 0x1f5b, 0x59c0, 0x1338, 0x4d11, 0x6451, 0x1, 0x0);
        gbc.writeMem(0xda3e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1f5b, gbc.sp());
        EXPECT(0xda40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3e));
        EXPECT(0x59, gbc.readMem(0xda3f));
        // CB 59 015F
        gbc.setState(0xba44, 0xc78d, 0xb0b0, 0xaf4a, 0x8341, 0xf1ca, 0x0, 0x1);
        gbc.writeMem(0xba44, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc78d, gbc.sp());
        EXPECT(0xba46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba44));
        EXPECT(0x59, gbc.readMem(0xba45));
        // CB 59 0160
        gbc.setState(0x3881, 0x3f31, 0xedd0, 0xfae5, 0x5635, 0x38de, 0x1, 0x1);
        gbc.writeMem(0x3881, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3f31, gbc.sp());
        EXPECT(0x3883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0161
        gbc.setState(0xee4b, 0x17a0, 0x1bb0, 0xfd50, 0x67cc, 0xbeb8, 0x0, 0x0);
        gbc.writeMem(0xee4b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x17a0, gbc.sp());
        EXPECT(0xee4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4b));
        EXPECT(0x59, gbc.readMem(0xee4c));
        // CB 59 0162
        gbc.setState(0x73ae, 0xd090, 0xa640, 0x164e, 0x7610, 0x17f0, 0x1, 0x1);
        gbc.writeMem(0x73ae, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd090, gbc.sp());
        EXPECT(0x73b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0163
        gbc.setState(0x2881, 0x6426, 0xa7d0, 0x8ea4, 0xde80, 0x64fb, 0x0, 0x0);
        gbc.writeMem(0x2881, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6426, gbc.sp());
        EXPECT(0x2883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0164
        gbc.setState(0x3034, 0x5ecf, 0xe70, 0xadf6, 0xcee1, 0xf3c3, 0x0, 0x1);
        gbc.writeMem(0x3034, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5ecf, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0165
        gbc.setState(0x6abb, 0x41d5, 0x7860, 0x9d56, 0xb5df, 0xdbe8, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x41d5, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0166
        gbc.setState(0xb8f0, 0x44a5, 0x1300, 0xa349, 0xa2b, 0x85a6, 0x1, 0x1);
        gbc.writeMem(0xb8f0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x44a5, gbc.sp());
        EXPECT(0xb8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f0));
        EXPECT(0x59, gbc.readMem(0xb8f1));
        // CB 59 0167
        gbc.setState(0xb2f7, 0x3182, 0x3b80, 0x876d, 0x2f1c, 0x5536, 0x1, 0x1);
        gbc.writeMem(0xb2f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3182, gbc.sp());
        EXPECT(0xb2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f7));
        EXPECT(0x59, gbc.readMem(0xb2f8));
        // CB 59 0169
        gbc.setState(0xb61a, 0xe48b, 0xb4e0, 0x6d4, 0x549c, 0xb72c, 0x0, 0x0);
        gbc.writeMem(0xb61a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe48b, gbc.sp());
        EXPECT(0xb61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61a));
        EXPECT(0x59, gbc.readMem(0xb61b));
        // CB 59 016A
        gbc.setState(0xdc14, 0xe5b, 0x3a70, 0xca3d, 0xc318, 0x37c3, 0x1, 0x0);
        gbc.writeMem(0xdc14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc14));
        EXPECT(0x59, gbc.readMem(0xdc15));
        // CB 59 016B
        gbc.setState(0x4633, 0xddc9, 0x4f60, 0xf79c, 0x52dc, 0x5797, 0x0, 0x1);
        gbc.writeMem(0x4633, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xddc9, gbc.sp());
        EXPECT(0x4635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 016C
        gbc.setState(0xa560, 0x46a2, 0xaa60, 0x46b9, 0x582a, 0xcd69, 0x0, 0x1);
        gbc.writeMem(0xa560, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x46a2, gbc.sp());
        EXPECT(0xa562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa560));
        EXPECT(0x59, gbc.readMem(0xa561));
        // CB 59 016D
        gbc.setState(0xd36e, 0x8177, 0xd720, 0x938e, 0x6f05, 0x44da, 0x0, 0x1);
        gbc.writeMem(0xd36e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8177, gbc.sp());
        EXPECT(0xd370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36e));
        EXPECT(0x59, gbc.readMem(0xd36f));
        // CB 59 016E
        gbc.setState(0x55d5, 0x459, 0x2690, 0xb42f, 0xc28c, 0x3d3d, 0x0, 0x1);
        gbc.writeMem(0x55d5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x459, gbc.sp());
        EXPECT(0x55d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 016F
        gbc.setState(0xecb5, 0x2294, 0xa010, 0x196e, 0xf1ed, 0x909e, 0x1, 0x0);
        gbc.writeMem(0xecb5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2294, gbc.sp());
        EXPECT(0xecb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb5));
        EXPECT(0x59, gbc.readMem(0xecb6));
        // CB 59 0170
        gbc.setState(0xa222, 0x587e, 0x9560, 0x56d0, 0x3040, 0x6e32, 0x0, 0x0);
        gbc.writeMem(0xa222, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x587e, gbc.sp());
        EXPECT(0xa224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa222));
        EXPECT(0x59, gbc.readMem(0xa223));
        // CB 59 0171
        gbc.setState(0xa8fc, 0x6ae2, 0x6330, 0x733d, 0x9c3, 0x2207, 0x0, 0x0);
        gbc.writeMem(0xa8fc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6ae2, gbc.sp());
        EXPECT(0xa8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8fc));
        EXPECT(0x59, gbc.readMem(0xa8fd));
        // CB 59 0172
        gbc.setState(0xa364, 0x4cf3, 0x4a70, 0x4fb7, 0x95b9, 0x7b2, 0x0, 0x0);
        gbc.writeMem(0xa364, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa364));
        EXPECT(0x59, gbc.readMem(0xa365));
        // CB 59 0173
        gbc.setState(0x5e23, 0x9162, 0x9a90, 0x72d6, 0x1673, 0x981a, 0x0, 0x0);
        gbc.writeMem(0x5e23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9162, gbc.sp());
        EXPECT(0x5e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0174
        gbc.setState(0x8477, 0x6c83, 0x3e80, 0x457c, 0x7665, 0x4d73, 0x0, 0x0);
        gbc.writeMem(0x8477, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0x8479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8477));
        EXPECT(0x59, gbc.readMem(0x8478));
        // CB 59 0175
        gbc.setState(0x18ab, 0x838f, 0xc5b0, 0xaf54, 0x6daf, 0x710f, 0x0, 0x0);
        gbc.writeMem(0x18ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x838f, gbc.sp());
        EXPECT(0x18ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0176
        gbc.setState(0x8392, 0xf6b, 0x9150, 0x3470, 0xd9d3, 0x8538, 0x1, 0x0);
        gbc.writeMem(0x8392, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf6b, gbc.sp());
        EXPECT(0x8394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8392));
        EXPECT(0x59, gbc.readMem(0x8393));
        // CB 59 0177
        gbc.setState(0xc1d9, 0x24ac, 0x4fb0, 0x73d5, 0xbc14, 0x5a8, 0x0, 0x1);
        gbc.writeMem(0xc1d9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x24ac, gbc.sp());
        EXPECT(0xc1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d9));
        EXPECT(0x59, gbc.readMem(0xc1da));
        // CB 59 0178
        gbc.setState(0xb121, 0x49bd, 0xd1d0, 0x5367, 0x37e2, 0x6bd9, 0x1, 0x0);
        gbc.writeMem(0xb121, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x49bd, gbc.sp());
        EXPECT(0xb123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb121));
        EXPECT(0x59, gbc.readMem(0xb122));
        // CB 59 0179
        gbc.setState(0xd0c5, 0x815a, 0x25b0, 0x11cb, 0x3249, 0x9190, 0x0, 0x0);
        gbc.writeMem(0xd0c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x815a, gbc.sp());
        EXPECT(0xd0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c5));
        EXPECT(0x59, gbc.readMem(0xd0c6));
        // CB 59 017A
        gbc.setState(0x8c0a, 0xb941, 0xac0, 0x39e2, 0x44d7, 0x5de7, 0x0, 0x1);
        gbc.writeMem(0x8c0a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0x8c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0a));
        EXPECT(0x59, gbc.readMem(0x8c0b));
        // CB 59 017B
        gbc.setState(0xcd0f, 0x4dbd, 0x8cf0, 0x60e9, 0xce48, 0x6f23, 0x0, 0x1);
        gbc.writeMem(0xcd0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4dbd, gbc.sp());
        EXPECT(0xcd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0f));
        EXPECT(0x59, gbc.readMem(0xcd10));
        // CB 59 017C
        gbc.setState(0x3c3b, 0x627d, 0xbfa0, 0xc41, 0x92c6, 0xf7c5, 0x1, 0x1);
        gbc.writeMem(0x3c3b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x627d, gbc.sp());
        EXPECT(0x3c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 017D
        gbc.setState(0x5dab, 0x1eea, 0x4550, 0x5128, 0x9e0, 0xc962, 0x1, 0x0);
        gbc.writeMem(0x5dab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 017E
        gbc.setState(0x9b5c, 0x5c3a, 0x72d0, 0xb43f, 0xe4c4, 0x9d75, 0x0, 0x1);
        gbc.writeMem(0x9b5c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5c3a, gbc.sp());
        EXPECT(0x9b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5c));
        EXPECT(0x59, gbc.readMem(0x9b5d));
        // CB 59 017F
        gbc.setState(0xd6c3, 0x9799, 0x1d40, 0x706f, 0xc64a, 0xa797, 0x0, 0x0);
        gbc.writeMem(0xd6c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9799, gbc.sp());
        EXPECT(0xd6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c3));
        EXPECT(0x59, gbc.readMem(0xd6c4));
        // CB 59 0180
        gbc.setState(0x9897, 0x8d9c, 0x61b0, 0xc40d, 0x1351, 0xebca, 0x0, 0x0);
        gbc.writeMem(0x9897, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8d9c, gbc.sp());
        EXPECT(0x9899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9897));
        EXPECT(0x59, gbc.readMem(0x9898));
        // CB 59 0181
        gbc.setState(0xc0b3, 0x8020, 0x5ea0, 0x4e06, 0xa987, 0xdde8, 0x1, 0x1);
        gbc.writeMem(0xc0b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8020, gbc.sp());
        EXPECT(0xc0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b3));
        EXPECT(0x59, gbc.readMem(0xc0b4));
        // CB 59 0182
        gbc.setState(0x11f7, 0xd2eb, 0x3830, 0xd906, 0x7966, 0x30d4, 0x1, 0x0);
        gbc.writeMem(0x11f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd2eb, gbc.sp());
        EXPECT(0x11f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0184
        gbc.setState(0x7eba, 0x10f4, 0x8080, 0x913f, 0x880, 0x9ff0, 0x1, 0x0);
        gbc.writeMem(0x7eba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x10f4, gbc.sp());
        EXPECT(0x7ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0185
        gbc.setState(0x6ede, 0x6aad, 0x8ee0, 0x8a2b, 0xac2d, 0x9940, 0x0, 0x1);
        gbc.writeMem(0x6ede, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6aad, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0186
        gbc.setState(0x8fb, 0xd10d, 0x5d70, 0x77b, 0xef33, 0x322f, 0x1, 0x1);
        gbc.writeMem(0x8fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd10d, gbc.sp());
        EXPECT(0x8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0187
        gbc.setState(0x48dd, 0x3b64, 0x770, 0xa7ce, 0x9df6, 0xc5, 0x0, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3b64, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0188
        gbc.setState(0xcf2e, 0x555f, 0xf810, 0xeacf, 0x693f, 0x9372, 0x1, 0x1);
        gbc.writeMem(0xcf2e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x555f, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2e));
        EXPECT(0x59, gbc.readMem(0xcf2f));
        // CB 59 0189
        gbc.setState(0xd12a, 0xcac, 0xb950, 0x4b0c, 0x26d8, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xd12a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcac, gbc.sp());
        EXPECT(0xd12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12a));
        EXPECT(0x59, gbc.readMem(0xd12b));
        // CB 59 018A
        gbc.setState(0xa1ab, 0xb3f4, 0xf460, 0xb626, 0xf565, 0xed78, 0x0, 0x0);
        gbc.writeMem(0xa1ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb3f4, gbc.sp());
        EXPECT(0xa1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ab));
        EXPECT(0x59, gbc.readMem(0xa1ac));
        // CB 59 018B
        gbc.setState(0x2530, 0xe831, 0x210, 0x1f57, 0xf7e2, 0xaba3, 0x0, 0x0);
        gbc.writeMem(0x2530, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe831, gbc.sp());
        EXPECT(0x2532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 018C
        gbc.setState(0x9acf, 0x9f8c, 0x6d0, 0x901d, 0xa2bc, 0xcc5, 0x0, 0x1);
        gbc.writeMem(0x9acf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9f8c, gbc.sp());
        EXPECT(0x9ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acf));
        EXPECT(0x59, gbc.readMem(0x9ad0));
        // CB 59 018D
        gbc.setState(0x7ac3, 0x769f, 0xa810, 0x3d8e, 0x38b2, 0x8ba, 0x1, 0x0);
        gbc.writeMem(0x7ac3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x769f, gbc.sp());
        EXPECT(0x7ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 018E
        gbc.setState(0xd9db, 0x2139, 0xcd20, 0x6ccf, 0x6f84, 0xbcf, 0x0, 0x1);
        gbc.writeMem(0xd9db, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2139, gbc.sp());
        EXPECT(0xd9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9db));
        EXPECT(0x59, gbc.readMem(0xd9dc));
        // CB 59 018F
        gbc.setState(0xee30, 0xafcb, 0xe1c0, 0x42df, 0x2e11, 0x1d43, 0x1, 0x0);
        gbc.writeMem(0xee30, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xafcb, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee30));
        EXPECT(0x59, gbc.readMem(0xee31));
        // CB 59 0190
        gbc.setState(0x1d1d, 0x6b27, 0xaff0, 0x155c, 0x4fd2, 0xa2fc, 0x0, 0x0);
        gbc.writeMem(0x1d1d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6b27, gbc.sp());
        EXPECT(0x1d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0191
        gbc.setState(0xd867, 0x3e52, 0xc9b0, 0x4697, 0xa8b1, 0x4483, 0x0, 0x0);
        gbc.writeMem(0xd867, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3e52, gbc.sp());
        EXPECT(0xd869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd867));
        EXPECT(0x59, gbc.readMem(0xd868));
        // CB 59 0192
        gbc.setState(0x297f, 0x8222, 0xdcc0, 0x145, 0x92ad, 0x3042, 0x0, 0x1);
        gbc.writeMem(0x297f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8222, gbc.sp());
        EXPECT(0x2981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0193
        gbc.setState(0x5d6c, 0xfa01, 0x5e0, 0x368d, 0x9f9e, 0xb5c7, 0x1, 0x1);
        gbc.writeMem(0x5d6c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfa01, gbc.sp());
        EXPECT(0x5d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0194
        gbc.setState(0xb0a0, 0xa687, 0x1410, 0x89b3, 0xd610, 0xc695, 0x0, 0x0);
        gbc.writeMem(0xb0a0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa687, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a0));
        EXPECT(0x59, gbc.readMem(0xb0a1));
        // CB 59 0195
        gbc.setState(0x1f7, 0x1524, 0xcbb0, 0x7686, 0x1315, 0x4f6a, 0x0, 0x1);
        gbc.writeMem(0x1f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0196
        gbc.setState(0xe352, 0x319b, 0xc080, 0x3ef, 0x5ba6, 0xc995, 0x0, 0x0);
        gbc.writeMem(0xe352, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0xe354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe352));
        EXPECT(0x59, gbc.readMem(0xe353));
        // CB 59 0197
        gbc.setState(0x5a7f, 0x624a, 0xd830, 0x77be, 0x5b8a, 0xb0e2, 0x0, 0x0);
        gbc.writeMem(0x5a7f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x624a, gbc.sp());
        EXPECT(0x5a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0198
        gbc.setState(0x1ab0, 0xce91, 0x73c0, 0x8167, 0xa868, 0xbb82, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xce91, gbc.sp());
        EXPECT(0x1ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0199
        gbc.setState(0xe724, 0x116b, 0xfd90, 0xf9a2, 0x1984, 0xaf9e, 0x1, 0x1);
        gbc.writeMem(0xe724, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x116b, gbc.sp());
        EXPECT(0xe726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe724));
        EXPECT(0x59, gbc.readMem(0xe725));
        // CB 59 019A
        gbc.setState(0x65c2, 0xec85, 0xb180, 0xe30c, 0x6043, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x65c2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xec85, gbc.sp());
        EXPECT(0x65c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 019B
        gbc.setState(0xdf60, 0x30b6, 0x69c0, 0x27fd, 0xfd90, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0xdf60, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x30b6, gbc.sp());
        EXPECT(0xdf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf60));
        EXPECT(0x59, gbc.readMem(0xdf61));
        // CB 59 019C
        gbc.setState(0x4cf6, 0x658f, 0x2990, 0x2dbe, 0x79bf, 0x91cf, 0x1, 0x0);
        gbc.writeMem(0x4cf6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x658f, gbc.sp());
        EXPECT(0x4cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 019D
        gbc.setState(0xce61, 0xcb7d, 0xf730, 0x7452, 0x6e52, 0xb63a, 0x1, 0x0);
        gbc.writeMem(0xce61, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb7d, gbc.sp());
        EXPECT(0xce63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce61));
        EXPECT(0x59, gbc.readMem(0xce62));
        // CB 59 019E
        gbc.setState(0x9c9a, 0xfc6, 0x62d0, 0x9338, 0x4f81, 0x50d2, 0x1, 0x1);
        gbc.writeMem(0x9c9a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfc6, gbc.sp());
        EXPECT(0x9c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9a));
        EXPECT(0x59, gbc.readMem(0x9c9b));
        // CB 59 019F
        gbc.setState(0xba, 0xde12, 0xb860, 0x22bf, 0x69f9, 0xab67, 0x0, 0x0);
        gbc.writeMem(0xba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xde12, gbc.sp());
        EXPECT(0xbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01A0
        gbc.setState(0x169, 0x6c3, 0xc240, 0x525e, 0xe781, 0xf724, 0x1, 0x1);
        gbc.writeMem(0x169, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6c3, gbc.sp());
        EXPECT(0x16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01A1
        gbc.setState(0x6d45, 0xc045, 0x1300, 0x401a, 0xbc0b, 0x853f, 0x0, 0x1);
        gbc.writeMem(0x6d45, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc045, gbc.sp());
        EXPECT(0x6d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01A2
        gbc.setState(0xa94b, 0x95c, 0xbb80, 0x749e, 0xa6b9, 0x5818, 0x1, 0x1);
        gbc.writeMem(0xa94b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x95c, gbc.sp());
        EXPECT(0xa94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94b));
        EXPECT(0x59, gbc.readMem(0xa94c));
        // CB 59 01A3
        gbc.setState(0x1620, 0x29e3, 0xfe70, 0x23b2, 0xc8b8, 0xa0a8, 0x1, 0x0);
        gbc.writeMem(0x1620, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x29e3, gbc.sp());
        EXPECT(0x1622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01A4
        gbc.setState(0x4eb0, 0x7009, 0x67e0, 0xe638, 0x6b28, 0x534f, 0x0, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7009, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01A6
        gbc.setState(0xd348, 0xf1d1, 0x8b0, 0xb505, 0x7456, 0xeed7, 0x1, 0x0);
        gbc.writeMem(0xd348, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf1d1, gbc.sp());
        EXPECT(0xd34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd348));
        EXPECT(0x59, gbc.readMem(0xd349));
        // CB 59 01A7
        gbc.setState(0x9dd5, 0xb46d, 0xe2e0, 0xad76, 0x8ebc, 0x5d64, 0x0, 0x0);
        gbc.writeMem(0x9dd5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb46d, gbc.sp());
        EXPECT(0x9dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd5));
        EXPECT(0x59, gbc.readMem(0x9dd6));
        // CB 59 01A8
        gbc.setState(0x3e0, 0xdc22, 0x1b60, 0x193f, 0x882a, 0xf11b, 0x0, 0x0);
        gbc.writeMem(0x3e0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdc22, gbc.sp());
        EXPECT(0x3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01A9
        gbc.setState(0xa96a, 0x2500, 0xc620, 0x3be3, 0xd9e9, 0x7ee2, 0x1, 0x0);
        gbc.writeMem(0xa96a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2500, gbc.sp());
        EXPECT(0xa96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96a));
        EXPECT(0x59, gbc.readMem(0xa96b));
        // CB 59 01AA
        gbc.setState(0x91d, 0x32d7, 0xdf80, 0x7a5f, 0xa5f0, 0x21be, 0x1, 0x1);
        gbc.writeMem(0x91d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x32d7, gbc.sp());
        EXPECT(0x91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01AB
        gbc.setState(0xc9dd, 0xe533, 0xf220, 0xf3c0, 0xf333, 0x67fa, 0x0, 0x1);
        gbc.writeMem(0xc9dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe533, gbc.sp());
        EXPECT(0xc9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9dd));
        EXPECT(0x59, gbc.readMem(0xc9de));
        // CB 59 01AC
        gbc.setState(0xb8fb, 0xc194, 0x63d0, 0xb9, 0x50ef, 0x7905, 0x1, 0x1);
        gbc.writeMem(0xb8fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc194, gbc.sp());
        EXPECT(0xb8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fb));
        EXPECT(0x59, gbc.readMem(0xb8fc));
        // CB 59 01AD
        gbc.setState(0x53a3, 0xeda, 0x4d90, 0x99fe, 0x8b2c, 0x1fde, 0x1, 0x1);
        gbc.writeMem(0x53a3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeda, gbc.sp());
        EXPECT(0x53a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01AE
        gbc.setState(0xc677, 0x8ec9, 0x7d10, 0xc96b, 0x8221, 0xc1d4, 0x1, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8ec9, gbc.sp());
        EXPECT(0xc679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc677));
        EXPECT(0x59, gbc.readMem(0xc678));
        // CB 59 01AF
        gbc.setState(0x2f33, 0xce0f, 0xb380, 0x9774, 0xaf19, 0x640e, 0x0, 0x1);
        gbc.writeMem(0x2f33, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x2f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01B0
        gbc.setState(0xd0b3, 0x8d9f, 0x25f0, 0x621e, 0x6496, 0xf436, 0x0, 0x0);
        gbc.writeMem(0xd0b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8d9f, gbc.sp());
        EXPECT(0xd0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b3));
        EXPECT(0x59, gbc.readMem(0xd0b4));
        // CB 59 01B1
        gbc.setState(0xaa18, 0xac61, 0x2ea0, 0x97e8, 0xdac6, 0x46e6, 0x1, 0x0);
        gbc.writeMem(0xaa18, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xac61, gbc.sp());
        EXPECT(0xaa1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa18));
        EXPECT(0x59, gbc.readMem(0xaa19));
        // CB 59 01B2
        gbc.setState(0xd3dd, 0x41f0, 0x46b0, 0xc7c3, 0x68a6, 0x8bb9, 0x0, 0x0);
        gbc.writeMem(0xd3dd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x41f0, gbc.sp());
        EXPECT(0xd3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3dd));
        EXPECT(0x59, gbc.readMem(0xd3de));
        // CB 59 01B3
        gbc.setState(0xe5fe, 0xdd29, 0xdd50, 0x20ea, 0x6293, 0xc827, 0x0, 0x1);
        gbc.writeMem(0xe5fe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdd29, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fe));
        EXPECT(0x59, gbc.readMem(0xe5ff));
        // CB 59 01B4
        gbc.setState(0x1276, 0x94cb, 0x7f0, 0x7927, 0xbade, 0x689e, 0x0, 0x0);
        gbc.writeMem(0x1276, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x94cb, gbc.sp());
        EXPECT(0x1278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01B5
        gbc.setState(0xd0f3, 0x87a0, 0xa4c0, 0x310d, 0xa9de, 0xab53, 0x0, 0x1);
        gbc.writeMem(0xd0f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x87a0, gbc.sp());
        EXPECT(0xd0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f3));
        EXPECT(0x59, gbc.readMem(0xd0f4));
        // CB 59 01B6
        gbc.setState(0x72fc, 0x6659, 0xdaa0, 0x3572, 0x66be, 0xea6a, 0x1, 0x1);
        gbc.writeMem(0x72fc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0x72fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01B7
        gbc.setState(0xb793, 0x502, 0x1460, 0xb91d, 0x60c0, 0xc7a6, 0x0, 0x0);
        gbc.writeMem(0xb793, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x502, gbc.sp());
        EXPECT(0xb795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb793));
        EXPECT(0x59, gbc.readMem(0xb794));
        // CB 59 01B8
        gbc.setState(0x4695, 0xef2e, 0x91d0, 0x93f7, 0x6a28, 0xcf10, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xef2e, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01B9
        gbc.setState(0x7baf, 0xd48f, 0x2740, 0x7253, 0xe2a9, 0x8894, 0x1, 0x1);
        gbc.writeMem(0x7baf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd48f, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01BA
        gbc.setState(0xbad6, 0xb5d1, 0x6a20, 0x94d0, 0x4aa, 0xb9c0, 0x0, 0x0);
        gbc.writeMem(0xbad6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb5d1, gbc.sp());
        EXPECT(0xbad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad6));
        EXPECT(0x59, gbc.readMem(0xbad7));
        // CB 59 01BB
        gbc.setState(0xd5a9, 0xf95c, 0xd530, 0x6b4, 0x9339, 0xeeab, 0x1, 0x1);
        gbc.writeMem(0xd5a9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf95c, gbc.sp());
        EXPECT(0xd5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a9));
        EXPECT(0x59, gbc.readMem(0xd5aa));
        // CB 59 01BC
        gbc.setState(0x36aa, 0x7664, 0xdaa0, 0xdc9c, 0xa615, 0x8e84, 0x1, 0x1);
        gbc.writeMem(0x36aa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7664, gbc.sp());
        EXPECT(0x36ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01BD
        gbc.setState(0xfa8, 0xb699, 0x8540, 0xda83, 0x7a72, 0xcc, 0x1, 0x0);
        gbc.writeMem(0xfa8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb699, gbc.sp());
        EXPECT(0xfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01BE
        gbc.setState(0x7fa, 0x65f4, 0xa260, 0x8af7, 0x483e, 0xf5ce, 0x0, 0x1);
        gbc.writeMem(0x7fa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x65f4, gbc.sp());
        EXPECT(0x7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01BF
        gbc.setState(0xab30, 0x56c8, 0x540, 0xa960, 0x807, 0x6e47, 0x1, 0x0);
        gbc.writeMem(0xab30, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x56c8, gbc.sp());
        EXPECT(0xab32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab30));
        EXPECT(0x59, gbc.readMem(0xab31));
        // CB 59 01C0
        gbc.setState(0xa6f8, 0x8da2, 0xbd90, 0x126c, 0xe4f3, 0xbf04, 0x0, 0x0);
        gbc.writeMem(0xa6f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8da2, gbc.sp());
        EXPECT(0xa6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f8));
        EXPECT(0x59, gbc.readMem(0xa6f9));
        // CB 59 01C1
        gbc.setState(0x4635, 0xf5bd, 0x3a60, 0x3442, 0xc163, 0xf26, 0x0, 0x1);
        gbc.writeMem(0x4635, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf5bd, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01C2
        gbc.setState(0x5aa9, 0xee90, 0xe550, 0xf568, 0x721, 0x6009, 0x0, 0x0);
        gbc.writeMem(0x5aa9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xee90, gbc.sp());
        EXPECT(0x5aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01C3
        gbc.setState(0xa7b, 0x30d7, 0xc9e0, 0xa37f, 0x45f1, 0x2b4c, 0x0, 0x1);
        gbc.writeMem(0xa7b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x30d7, gbc.sp());
        EXPECT(0xa7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01C4
        gbc.setState(0x6c7, 0x925, 0x2c20, 0x8fb6, 0xdbf7, 0xaf2c, 0x1, 0x0);
        gbc.writeMem(0x6c7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01C5
        gbc.setState(0x6031, 0x5a23, 0x36c0, 0x7c66, 0x6bb, 0xddb8, 0x1, 0x0);
        gbc.writeMem(0x6031, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5a23, gbc.sp());
        EXPECT(0x6033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01C6
        gbc.setState(0xc96c, 0xcb33, 0x5d00, 0xa307, 0x54a7, 0x5b6e, 0x0, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcb33, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96c));
        EXPECT(0x59, gbc.readMem(0xc96d));
        // CB 59 01C7
        gbc.setState(0x7eb9, 0x58a6, 0xafc0, 0xd8cc, 0xc0cb, 0x1351, 0x0, 0x1);
        gbc.writeMem(0x7eb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x58a6, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01C8
        gbc.setState(0xcdcb, 0xc5a0, 0x6c40, 0x838c, 0x293e, 0xf024, 0x1, 0x1);
        gbc.writeMem(0xcdcb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc5a0, gbc.sp());
        EXPECT(0xcdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdcb));
        EXPECT(0x59, gbc.readMem(0xcdcc));
        // CB 59 01C9
        gbc.setState(0xc6d6, 0x807, 0x6a60, 0xee6c, 0xb320, 0xc1d5, 0x0, 0x1);
        gbc.writeMem(0xc6d6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x807, gbc.sp());
        EXPECT(0xc6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d6));
        EXPECT(0x59, gbc.readMem(0xc6d7));
        // CB 59 01CA
        gbc.setState(0xccf8, 0x2280, 0xdf70, 0xf6c2, 0xbee1, 0x83a1, 0x1, 0x0);
        gbc.writeMem(0xccf8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2280, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf8));
        EXPECT(0x59, gbc.readMem(0xccf9));
        // CB 59 01CB
        gbc.setState(0x565b, 0x620, 0xc0f0, 0x5c43, 0x6e48, 0xe6d0, 0x0, 0x1);
        gbc.writeMem(0x565b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x620, gbc.sp());
        EXPECT(0x565d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01CC
        gbc.setState(0x6699, 0x3e5b, 0x1d30, 0x60a8, 0x84a5, 0xdaf3, 0x1, 0x0);
        gbc.writeMem(0x6699, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3e5b, gbc.sp());
        EXPECT(0x669b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01CD
        gbc.setState(0x7b26, 0x4c96, 0x3b0, 0xdc72, 0x9d62, 0xc83d, 0x1, 0x1);
        gbc.writeMem(0x7b26, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0x7b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01CE
        gbc.setState(0x7dbd, 0x5fc8, 0x32f0, 0xb200, 0xd6d0, 0x96eb, 0x1, 0x0);
        gbc.writeMem(0x7dbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5fc8, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01CF
        gbc.setState(0xe711, 0x1510, 0xb140, 0xdaa0, 0x4b3b, 0x68a3, 0x0, 0x0);
        gbc.writeMem(0xe711, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1510, gbc.sp());
        EXPECT(0xe713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe711));
        EXPECT(0x59, gbc.readMem(0xe712));
        // CB 59 01D0
        gbc.setState(0x9a7e, 0x4434, 0xb680, 0x2e41, 0x9f02, 0xe21c, 0x0, 0x0);
        gbc.writeMem(0x9a7e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4434, gbc.sp());
        EXPECT(0x9a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7e));
        EXPECT(0x59, gbc.readMem(0x9a7f));
        // CB 59 01D1
        gbc.setState(0xde84, 0x5214, 0x9e80, 0xea96, 0x96ad, 0x9ffb, 0x0, 0x0);
        gbc.writeMem(0xde84, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5214, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde84));
        EXPECT(0x59, gbc.readMem(0xde85));
        // CB 59 01D2
        gbc.setState(0x9e74, 0x42e3, 0x3a80, 0xd227, 0x72ad, 0xd4e8, 0x0, 0x0);
        gbc.writeMem(0x9e74, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x42e3, gbc.sp());
        EXPECT(0x9e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e74));
        EXPECT(0x59, gbc.readMem(0x9e75));
        // CB 59 01D3
        gbc.setState(0x4ddf, 0xf5a4, 0x4380, 0x9b51, 0xa7c9, 0x46d9, 0x0, 0x1);
        gbc.writeMem(0x4ddf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf5a4, gbc.sp());
        EXPECT(0x4de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01D4
        gbc.setState(0x4cf5, 0xa111, 0x1050, 0xbde8, 0xc9f8, 0xf918, 0x0, 0x0);
        gbc.writeMem(0x4cf5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01D5
        gbc.setState(0x149e, 0x76a6, 0x4e80, 0xd110, 0x3110, 0xd27e, 0x0, 0x0);
        gbc.writeMem(0x149e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x76a6, gbc.sp());
        EXPECT(0x14a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01D6
        gbc.setState(0x5518, 0x84ab, 0x2ef0, 0x57f4, 0xa223, 0x8927, 0x1, 0x0);
        gbc.writeMem(0x5518, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x84ab, gbc.sp());
        EXPECT(0x551a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01D7
        gbc.setState(0x6c4, 0xacf2, 0xa620, 0x76db, 0xf51b, 0x8852, 0x1, 0x0);
        gbc.writeMem(0x6c4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xacf2, gbc.sp());
        EXPECT(0x6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01D8
        gbc.setState(0x1b19, 0xe8b7, 0xcdb0, 0x9b87, 0xc554, 0xb219, 0x0, 0x1);
        gbc.writeMem(0x1b19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe8b7, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01D9
        gbc.setState(0x2da9, 0x4335, 0xc630, 0x4a92, 0xfccb, 0x3f5c, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4335, gbc.sp());
        EXPECT(0x2dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01DA
        gbc.setState(0xba52, 0x12d7, 0x60c0, 0xe3fc, 0xc379, 0x103f, 0x0, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x12d7, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0x59, gbc.readMem(0xba53));
        // CB 59 01DB
        gbc.setState(0x3525, 0x8dc6, 0x2380, 0xb53d, 0xf9c9, 0x6266, 0x1, 0x1);
        gbc.writeMem(0x3525, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8dc6, gbc.sp());
        EXPECT(0x3527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01DC
        gbc.setState(0x7360, 0xb85c, 0x740, 0x77c, 0x7238, 0xc4f1, 0x1, 0x0);
        gbc.writeMem(0x7360, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb85c, gbc.sp());
        EXPECT(0x7362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01DD
        gbc.setState(0x10c0, 0xd069, 0x8380, 0x56ec, 0x8953, 0x3fd4, 0x1, 0x1);
        gbc.writeMem(0x10c0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd069, gbc.sp());
        EXPECT(0x10c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01DE
        gbc.setState(0x247f, 0xf5f4, 0x65e0, 0x219a, 0x76bf, 0xec42, 0x0, 0x1);
        gbc.writeMem(0x247f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf5f4, gbc.sp());
        EXPECT(0x2481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01DF
        gbc.setState(0xedf3, 0x6221, 0x52b0, 0xdfd4, 0xb4c2, 0xdafb, 0x0, 0x1);
        gbc.writeMem(0xedf3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6221, gbc.sp());
        EXPECT(0xedf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf3));
        EXPECT(0x59, gbc.readMem(0xedf4));
        // CB 59 01E0
        gbc.setState(0xe547, 0x5c79, 0xd070, 0x3c0f, 0x481c, 0xf710, 0x0, 0x0);
        gbc.writeMem(0xe547, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5c79, gbc.sp());
        EXPECT(0xe549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe547));
        EXPECT(0x59, gbc.readMem(0xe548));
        // CB 59 01E1
        gbc.setState(0x6242, 0x3549, 0x7920, 0x15a1, 0x4b04, 0xacd8, 0x0, 0x0);
        gbc.writeMem(0x6242, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0x6244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01E2
        gbc.setState(0x638, 0x63a8, 0x84d0, 0x5170, 0x6fb6, 0x9b0f, 0x0, 0x1);
        gbc.writeMem(0x638, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x63a8, gbc.sp());
        EXPECT(0x63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01E3
        gbc.setState(0x2a0, 0x7e22, 0xf320, 0x29c7, 0x60d2, 0xe59e, 0x1, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7e22, gbc.sp());
        EXPECT(0x2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01E4
        gbc.setState(0xb58a, 0x3e71, 0x8620, 0x35ec, 0xd093, 0x5561, 0x1, 0x0);
        gbc.writeMem(0xb58a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3e71, gbc.sp());
        EXPECT(0xb58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58a));
        EXPECT(0x59, gbc.readMem(0xb58b));
        // CB 59 01E5
        gbc.setState(0x34e4, 0x3eb, 0x44a0, 0xd119, 0x7377, 0xfc47, 0x1, 0x1);
        gbc.writeMem(0x34e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3eb, gbc.sp());
        EXPECT(0x34e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01E6
        gbc.setState(0xe321, 0x4411, 0x42e0, 0xa591, 0xaeb2, 0x4cd8, 0x1, 0x0);
        gbc.writeMem(0xe321, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4411, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe321));
        EXPECT(0x59, gbc.readMem(0xe322));
        // CB 59 01E7
        gbc.setState(0xb260, 0x5f1d, 0x8a20, 0x347a, 0x6999, 0xf03c, 0x1, 0x1);
        gbc.writeMem(0xb260, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5f1d, gbc.sp());
        EXPECT(0xb262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb260));
        EXPECT(0x59, gbc.readMem(0xb261));
        // CB 59 01E8
        gbc.setState(0xef66, 0x1aa2, 0xb3a0, 0x6e10, 0x9596, 0xc6cd, 0x1, 0x0);
        gbc.writeMem(0xef66, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1aa2, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef66));
        EXPECT(0x59, gbc.readMem(0xef67));
        // CB 59 01E9
        gbc.setState(0xc441, 0x89be, 0x4e90, 0x4013, 0xe3c1, 0x127f, 0x1, 0x0);
        gbc.writeMem(0xc441, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x89be, gbc.sp());
        EXPECT(0xc443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc441));
        EXPECT(0x59, gbc.readMem(0xc442));
        // CB 59 01EA
        gbc.setState(0x2d95, 0x45da, 0xf7e0, 0x20e3, 0xbfba, 0xecbb, 0x0, 0x1);
        gbc.writeMem(0x2d95, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x45da, gbc.sp());
        EXPECT(0x2d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01EB
        gbc.setState(0xd834, 0x7d82, 0xafe0, 0xa840, 0x4746, 0xb022, 0x1, 0x1);
        gbc.writeMem(0xd834, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7d82, gbc.sp());
        EXPECT(0xd836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd834));
        EXPECT(0x59, gbc.readMem(0xd835));
        // CB 59 01EC
        gbc.setState(0xaa4a, 0xcbf1, 0x4c40, 0x5d2, 0x6a47, 0x9337, 0x1, 0x1);
        gbc.writeMem(0xaa4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0xaa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4a));
        EXPECT(0x59, gbc.readMem(0xaa4b));
        // CB 59 01ED
        gbc.setState(0x9814, 0x6bd2, 0xe9e0, 0xcc8, 0x317f, 0x9c86, 0x0, 0x1);
        gbc.writeMem(0x9814, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6bd2, gbc.sp());
        EXPECT(0x9816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9814));
        EXPECT(0x59, gbc.readMem(0x9815));
        // CB 59 01EE
        gbc.setState(0xe9c3, 0x60f0, 0x1550, 0xb5f, 0x4693, 0x806f, 0x0, 0x0);
        gbc.writeMem(0xe9c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x60f0, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c3));
        EXPECT(0x59, gbc.readMem(0xe9c4));
        // CB 59 01EF
        gbc.setState(0x362c, 0x3934, 0x7f50, 0xeb1f, 0xd381, 0xbf17, 0x0, 0x1);
        gbc.writeMem(0x362c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3934, gbc.sp());
        EXPECT(0x362e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01F0
        gbc.setState(0xf66, 0x66ad, 0xe1d0, 0x2f51, 0xfbf7, 0x992, 0x1, 0x1);
        gbc.writeMem(0xf66, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x66ad, gbc.sp());
        EXPECT(0xf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01F1
        gbc.setState(0xbc02, 0xad26, 0xa590, 0xad0f, 0xc764, 0x73a4, 0x0, 0x1);
        gbc.writeMem(0xbc02, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xad26, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc02));
        EXPECT(0x59, gbc.readMem(0xbc03));
        // CB 59 01F2
        gbc.setState(0x3fca, 0x774b, 0xcad0, 0x137e, 0x59, 0xf4c5, 0x0, 0x0);
        gbc.writeMem(0x3fca, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x774b, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01F3
        gbc.setState(0x26f4, 0x9bd7, 0xdb80, 0x3e4a, 0x1a13, 0xba44, 0x0, 0x0);
        gbc.writeMem(0x26f4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9bd7, gbc.sp());
        EXPECT(0x26f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01F4
        gbc.setState(0x8f00, 0xcf1, 0xa6f0, 0xcebf, 0x5198, 0x6880, 0x0, 0x1);
        gbc.writeMem(0x8f00, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0x8f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f00));
        EXPECT(0x59, gbc.readMem(0x8f01));
        // CB 59 01F5
        gbc.setState(0x3390, 0x5986, 0x4cf0, 0x36ec, 0xc120, 0x1742, 0x0, 0x0);
        gbc.writeMem(0x3390, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5986, gbc.sp());
        EXPECT(0x3392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01F6
        gbc.setState(0x3c97, 0x1ab9, 0x4430, 0xf90b, 0xdb4d, 0xd2ef, 0x0, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1ab9, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01F7
        gbc.setState(0xccbd, 0xf205, 0x2570, 0xd91e, 0xbb4e, 0xbf2c, 0x1, 0x1);
        gbc.writeMem(0xccbd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf205, gbc.sp());
        EXPECT(0xccbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccbd));
        EXPECT(0x59, gbc.readMem(0xccbe));
        // CB 59 01F8
        gbc.setState(0x257c, 0xf06f, 0x8c00, 0x4c40, 0x8a7b, 0x6620, 0x1, 0x1);
        gbc.writeMem(0x257c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf06f, gbc.sp());
        EXPECT(0x257e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01F9
        gbc.setState(0x8ce3, 0xca45, 0xca80, 0xcc0f, 0x89e, 0xc59f, 0x0, 0x1);
        gbc.writeMem(0x8ce3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xca45, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce3));
        EXPECT(0x59, gbc.readMem(0x8ce4));
        // CB 59 01FA
        gbc.setState(0x7c41, 0xc2f3, 0xe640, 0x92e1, 0x1776, 0x7f0c, 0x0, 0x1);
        gbc.writeMem(0x7c41, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc2f3, gbc.sp());
        EXPECT(0x7c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01FB
        gbc.setState(0x47b0, 0x6d8d, 0xea40, 0x30f4, 0x50cb, 0x7cc7, 0x0, 0x0);
        gbc.writeMem(0x47b0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6d8d, gbc.sp());
        EXPECT(0x47b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01FC
        gbc.setState(0xb1eb, 0x6956, 0xc860, 0xd5c5, 0xa577, 0xf2b1, 0x1, 0x0);
        gbc.writeMem(0xb1eb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6956, gbc.sp());
        EXPECT(0xb1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1eb));
        EXPECT(0x59, gbc.readMem(0xb1ec));
        // CB 59 01FD
        gbc.setState(0x554f, 0x70af, 0x9b50, 0xcba9, 0xaa1d, 0x7ba0, 0x0, 0x1);
        gbc.writeMem(0x554f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x70af, gbc.sp());
        EXPECT(0x5551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 01FE
        gbc.setState(0x3c7a, 0xdc1f, 0xb7e0, 0xdaff, 0xb71c, 0x2287, 0x0, 0x0);
        gbc.writeMem(0x3c7a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdc1f, gbc.sp());
        EXPECT(0x3c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 01FF
        gbc.setState(0xdba, 0x95a0, 0xaff0, 0x10cd, 0xa901, 0x4e59, 0x0, 0x0);
        gbc.writeMem(0xdba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x95a0, gbc.sp());
        EXPECT(0xdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0200
        gbc.setState(0x4ca2, 0x880d, 0x8830, 0x229b, 0x283a, 0xa2bc, 0x0, 0x1);
        gbc.writeMem(0x4ca2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x880d, gbc.sp());
        EXPECT(0x4ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0201
        gbc.setState(0xad08, 0xc552, 0x6100, 0xeccb, 0xca39, 0x2a5c, 0x0, 0x1);
        gbc.writeMem(0xad08, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc552, gbc.sp());
        EXPECT(0xad0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad08));
        EXPECT(0x59, gbc.readMem(0xad09));
        // CB 59 0202
        gbc.setState(0xaae2, 0x7fd, 0x4e00, 0x6200, 0xdcfa, 0x37fd, 0x0, 0x1);
        gbc.writeMem(0xaae2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae2));
        EXPECT(0x59, gbc.readMem(0xaae3));
        // CB 59 0203
        gbc.setState(0xe627, 0xee07, 0xbba0, 0x5945, 0x1d90, 0x4be8, 0x1, 0x1);
        gbc.writeMem(0xe627, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xee07, gbc.sp());
        EXPECT(0xe629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe627));
        EXPECT(0x59, gbc.readMem(0xe628));
        // CB 59 0204
        gbc.setState(0xaeba, 0x1335, 0x1470, 0xbfd0, 0x4fe6, 0x6d4d, 0x0, 0x1);
        gbc.writeMem(0xaeba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1335, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeba));
        EXPECT(0x59, gbc.readMem(0xaebb));
        // CB 59 0205
        gbc.setState(0x8e25, 0xeb22, 0xfa40, 0xe5e5, 0x4fc3, 0x1a07, 0x1, 0x0);
        gbc.writeMem(0x8e25, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0x8e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e25));
        EXPECT(0x59, gbc.readMem(0x8e26));
        // CB 59 0206
        gbc.setState(0xbd8b, 0xb3b8, 0x9cc0, 0x3b89, 0xa3c5, 0x4fd, 0x1, 0x1);
        gbc.writeMem(0xbd8b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb3b8, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd8b));
        EXPECT(0x59, gbc.readMem(0xbd8c));
        // CB 59 0207
        gbc.setState(0x139a, 0x2232, 0x42d0, 0xda4f, 0x6615, 0x3c0d, 0x0, 0x1);
        gbc.writeMem(0x139a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2232, gbc.sp());
        EXPECT(0x139c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0208
        gbc.setState(0x6f77, 0x942f, 0x3df0, 0x4795, 0xe115, 0x1f4c, 0x1, 0x0);
        gbc.writeMem(0x6f77, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x942f, gbc.sp());
        EXPECT(0x6f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0209
        gbc.setState(0xeecd, 0x66a4, 0xde80, 0x76f6, 0xe6a9, 0x5edf, 0x1, 0x1);
        gbc.writeMem(0xeecd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x66a4, gbc.sp());
        EXPECT(0xeecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeecd));
        EXPECT(0x59, gbc.readMem(0xeece));
        // CB 59 020A
        gbc.setState(0xe0b4, 0x5e6d, 0xbe90, 0x96c7, 0x74fd, 0x95a7, 0x0, 0x1);
        gbc.writeMem(0xe0b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0xe0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b4));
        EXPECT(0x59, gbc.readMem(0xe0b5));
        // CB 59 020B
        gbc.setState(0x1455, 0xc750, 0x5550, 0x9ccd, 0x6649, 0x53bc, 0x1, 0x1);
        gbc.writeMem(0x1455, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc750, gbc.sp());
        EXPECT(0x1457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 020C
        gbc.setState(0x7ee2, 0x6ba3, 0x4bd0, 0x45fa, 0xd387, 0xce79, 0x0, 0x0);
        gbc.writeMem(0x7ee2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6ba3, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 020D
        gbc.setState(0xb4fe, 0xb15d, 0x4a00, 0xcec8, 0x756, 0x57ca, 0x1, 0x1);
        gbc.writeMem(0xb4fe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb15d, gbc.sp());
        EXPECT(0xb500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fe));
        EXPECT(0x59, gbc.readMem(0xb4ff));
        // CB 59 020E
        gbc.setState(0xd4e4, 0x363, 0xe650, 0xe56e, 0x3f13, 0x2b03, 0x1, 0x1);
        gbc.writeMem(0xd4e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x363, gbc.sp());
        EXPECT(0xd4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e4));
        EXPECT(0x59, gbc.readMem(0xd4e5));
        // CB 59 020F
        gbc.setState(0xb752, 0xaad5, 0xe1b0, 0x6553, 0x803e, 0x71dd, 0x0, 0x0);
        gbc.writeMem(0xb752, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xaad5, gbc.sp());
        EXPECT(0xb754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb752));
        EXPECT(0x59, gbc.readMem(0xb753));
        // CB 59 0210
        gbc.setState(0x4492, 0x84f0, 0xb220, 0x76e2, 0x6808, 0xbe9c, 0x1, 0x0);
        gbc.writeMem(0x4492, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x84f0, gbc.sp());
        EXPECT(0x4494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0211
        gbc.setState(0xede5, 0xba4b, 0xf640, 0x8dca, 0x6c54, 0x6a7d, 0x1, 0x1);
        gbc.writeMem(0xede5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0xede7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede5));
        EXPECT(0x59, gbc.readMem(0xede6));
        // CB 59 0212
        gbc.setState(0x2a4a, 0x9c38, 0xc570, 0x8c3d, 0xa214, 0xd6d5, 0x1, 0x0);
        gbc.writeMem(0x2a4a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0x2a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0213
        gbc.setState(0x2f7c, 0xa63a, 0x4a60, 0x1b20, 0xb81f, 0x310a, 0x1, 0x1);
        gbc.writeMem(0x2f7c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa63a, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0214
        gbc.setState(0xac2c, 0x42a4, 0x5ba0, 0xef63, 0x5e00, 0xb4bd, 0x0, 0x1);
        gbc.writeMem(0xac2c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x42a4, gbc.sp());
        EXPECT(0xac2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2c));
        EXPECT(0x59, gbc.readMem(0xac2d));
        // CB 59 0215
        gbc.setState(0x5fbf, 0xe8d2, 0x77e0, 0x6522, 0x51a5, 0x8ea5, 0x1, 0x1);
        gbc.writeMem(0x5fbf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe8d2, gbc.sp());
        EXPECT(0x5fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0216
        gbc.setState(0x2271, 0x1519, 0x9000, 0x62fd, 0xe1f3, 0x59e7, 0x0, 0x1);
        gbc.writeMem(0x2271, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1519, gbc.sp());
        EXPECT(0x2273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0217
        gbc.setState(0x931c, 0xa805, 0xbc80, 0xe227, 0x809, 0xf884, 0x0, 0x0);
        gbc.writeMem(0x931c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0x931e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x931c));
        EXPECT(0x59, gbc.readMem(0x931d));
        // CB 59 0219
        gbc.setState(0xc711, 0xfe37, 0x3b70, 0x6ad0, 0xb5db, 0x473d, 0x1, 0x1);
        gbc.writeMem(0xc711, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0xc713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc711));
        EXPECT(0x59, gbc.readMem(0xc712));
        // CB 59 021A
        gbc.setState(0x5b1c, 0xe05a, 0xba00, 0x143d, 0x1797, 0xabbe, 0x1, 0x1);
        gbc.writeMem(0x5b1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x5b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 021B
        gbc.setState(0x40a7, 0x9098, 0x5fe0, 0x2e13, 0x66bc, 0xe8db, 0x0, 0x0);
        gbc.writeMem(0x40a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9098, gbc.sp());
        EXPECT(0x40a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 021D
        gbc.setState(0x4e23, 0x7f67, 0x96f0, 0xe0d2, 0xb344, 0x6309, 0x1, 0x0);
        gbc.writeMem(0x4e23, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7f67, gbc.sp());
        EXPECT(0x4e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 021E
        gbc.setState(0x910e, 0xc4f9, 0xcc10, 0xd2e9, 0xbeb2, 0xd3ce, 0x1, 0x0);
        gbc.writeMem(0x910e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc4f9, gbc.sp());
        EXPECT(0x9110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910e));
        EXPECT(0x59, gbc.readMem(0x910f));
        // CB 59 0220
        gbc.setState(0xd89b, 0x967b, 0x60e0, 0xb392, 0xfffb, 0xab7a, 0x1, 0x0);
        gbc.writeMem(0xd89b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x967b, gbc.sp());
        EXPECT(0xd89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89b));
        EXPECT(0x59, gbc.readMem(0xd89c));
        // CB 59 0221
        gbc.setState(0xe7f7, 0x4ca, 0x4140, 0x23cf, 0x9ca6, 0x74c3, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4ca, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f7));
        EXPECT(0x59, gbc.readMem(0xe7f8));
        // CB 59 0222
        gbc.setState(0xed15, 0xe968, 0xb240, 0xe717, 0x172e, 0xecbc, 0x0, 0x1);
        gbc.writeMem(0xed15, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe968, gbc.sp());
        EXPECT(0xed17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed15));
        EXPECT(0x59, gbc.readMem(0xed16));
        // CB 59 0223
        gbc.setState(0x5262, 0x59dd, 0x8d80, 0xa129, 0x917d, 0xd911, 0x0, 0x0);
        gbc.writeMem(0x5262, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x59dd, gbc.sp());
        EXPECT(0x5264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0224
        gbc.setState(0x2e6d, 0xe0c2, 0x41b0, 0x2c4d, 0x6315, 0x3bdf, 0x1, 0x0);
        gbc.writeMem(0x2e6d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe0c2, gbc.sp());
        EXPECT(0x2e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0225
        gbc.setState(0xeab9, 0x8cfc, 0x6dc0, 0x10d7, 0x4cb3, 0x911d, 0x0, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8cfc, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab9));
        EXPECT(0x59, gbc.readMem(0xeaba));
        // CB 59 0226
        gbc.setState(0x82ce, 0x690c, 0xbb00, 0x9f4f, 0xaad1, 0xfe6a, 0x1, 0x1);
        gbc.writeMem(0x82ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0x82d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ce));
        EXPECT(0x59, gbc.readMem(0x82cf));
        // CB 59 0227
        gbc.setState(0x4ce9, 0x946, 0x6550, 0xc735, 0x9f97, 0xcc5e, 0x1, 0x0);
        gbc.writeMem(0x4ce9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x946, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0228
        gbc.setState(0x17d7, 0xb628, 0x17e0, 0xa2e0, 0x868f, 0xa880, 0x1, 0x0);
        gbc.writeMem(0x17d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb628, gbc.sp());
        EXPECT(0x17d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0229
        gbc.setState(0x2f09, 0x5ab0, 0xf9c0, 0x44e7, 0x233e, 0xe555, 0x0, 0x0);
        gbc.writeMem(0x2f09, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5ab0, gbc.sp());
        EXPECT(0x2f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 022A
        gbc.setState(0xadba, 0x8f8e, 0x8410, 0x7ff6, 0x61d9, 0x2657, 0x0, 0x1);
        gbc.writeMem(0xadba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8f8e, gbc.sp());
        EXPECT(0xadbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadba));
        EXPECT(0x59, gbc.readMem(0xadbb));
        // CB 59 022B
        gbc.setState(0x46f3, 0x416f, 0x9640, 0x37ae, 0xe8a3, 0xab0c, 0x0, 0x1);
        gbc.writeMem(0x46f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x416f, gbc.sp());
        EXPECT(0x46f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 022C
        gbc.setState(0xb4fb, 0x59d3, 0x1520, 0x73ed, 0x8825, 0xfd9e, 0x0, 0x0);
        gbc.writeMem(0xb4fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x59d3, gbc.sp());
        EXPECT(0xb4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fb));
        EXPECT(0x59, gbc.readMem(0xb4fc));
        // CB 59 022D
        gbc.setState(0x21ce, 0x9ae5, 0x53b0, 0x661, 0xfbee, 0xda04, 0x0, 0x1);
        gbc.writeMem(0x21ce, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9ae5, gbc.sp());
        EXPECT(0x21d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 022E
        gbc.setState(0xbb42, 0xbae7, 0xa400, 0xd216, 0xe5d6, 0x95ea, 0x0, 0x1);
        gbc.writeMem(0xbb42, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbae7, gbc.sp());
        EXPECT(0xbb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb42));
        EXPECT(0x59, gbc.readMem(0xbb43));
        // CB 59 022F
        gbc.setState(0xa6c8, 0x3ac5, 0xe160, 0x7f20, 0xd63b, 0xab6b, 0x1, 0x0);
        gbc.writeMem(0xa6c8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0xa6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c8));
        EXPECT(0x59, gbc.readMem(0xa6c9));
        // CB 59 0230
        gbc.setState(0x158f, 0xc93d, 0xac40, 0x94ce, 0x97b6, 0x1671, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc93d, gbc.sp());
        EXPECT(0x1591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0231
        gbc.setState(0xb958, 0x8f05, 0xb240, 0x269e, 0x28e2, 0x310d, 0x1, 0x1);
        gbc.writeMem(0xb958, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8f05, gbc.sp());
        EXPECT(0xb95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb958));
        EXPECT(0x59, gbc.readMem(0xb959));
        // CB 59 0233
        gbc.setState(0xe865, 0xfe11, 0x980, 0x5e51, 0xe25a, 0x10f7, 0x1, 0x1);
        gbc.writeMem(0xe865, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfe11, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe865));
        EXPECT(0x59, gbc.readMem(0xe866));
        // CB 59 0234
        gbc.setState(0xba7c, 0x9b66, 0xa7c0, 0xd198, 0x441d, 0x3bc, 0x0, 0x0);
        gbc.writeMem(0xba7c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9b66, gbc.sp());
        EXPECT(0xba7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7c));
        EXPECT(0x59, gbc.readMem(0xba7d));
        // CB 59 0235
        gbc.setState(0x9543, 0x7965, 0x7830, 0x1310, 0xb407, 0x17e6, 0x0, 0x1);
        gbc.writeMem(0x9543, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0x9545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9543));
        EXPECT(0x59, gbc.readMem(0x9544));
        // CB 59 0236
        gbc.setState(0x2404, 0x65d5, 0x2650, 0x6189, 0x77a1, 0xac98, 0x1, 0x1);
        gbc.writeMem(0x2404, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x65d5, gbc.sp());
        EXPECT(0x2406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0237
        gbc.setState(0xc76f, 0xde85, 0x2340, 0x5823, 0xc47b, 0x3710, 0x0, 0x0);
        gbc.writeMem(0xc76f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xde85, gbc.sp());
        EXPECT(0xc771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76f));
        EXPECT(0x59, gbc.readMem(0xc770));
        // CB 59 0238
        gbc.setState(0x65d7, 0xc6d4, 0x2930, 0x83f1, 0x9e95, 0x34f5, 0x0, 0x0);
        gbc.writeMem(0x65d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0x65d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0239
        gbc.setState(0xd1f9, 0x67d0, 0x8190, 0xf195, 0x9628, 0xf211, 0x0, 0x0);
        gbc.writeMem(0xd1f9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x67d0, gbc.sp());
        EXPECT(0xd1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f9));
        EXPECT(0x59, gbc.readMem(0xd1fa));
        // CB 59 023A
        gbc.setState(0xe321, 0x8f2a, 0xe550, 0x11c8, 0xcb3, 0xce4b, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8f2a, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe321));
        EXPECT(0x59, gbc.readMem(0xe322));
        // CB 59 023B
        gbc.setState(0x4c6, 0x2e5b, 0x84f0, 0x9d4b, 0xcee4, 0x737d, 0x1, 0x1);
        gbc.writeMem(0x4c6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2e5b, gbc.sp());
        EXPECT(0x4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 023C
        gbc.setState(0x1ba7, 0x77b4, 0x490, 0xac77, 0xf522, 0xaaeb, 0x0, 0x1);
        gbc.writeMem(0x1ba7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x77b4, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 023D
        gbc.setState(0x25db, 0x973b, 0x83a0, 0xde8f, 0x533e, 0x1410, 0x0, 0x0);
        gbc.writeMem(0x25db, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x973b, gbc.sp());
        EXPECT(0x25dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 023E
        gbc.setState(0x5632, 0x828a, 0xe530, 0x8a5e, 0x31d4, 0x955b, 0x0, 0x0);
        gbc.writeMem(0x5632, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x828a, gbc.sp());
        EXPECT(0x5634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 023F
        gbc.setState(0x429e, 0x4ebf, 0xa630, 0x6e4a, 0xcae8, 0x783d, 0x0, 0x0);
        gbc.writeMem(0x429e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4ebf, gbc.sp());
        EXPECT(0x42a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0240
        gbc.setState(0xd045, 0x8764, 0xf720, 0xf99, 0xd717, 0xf130, 0x0, 0x0);
        gbc.writeMem(0xd045, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8764, gbc.sp());
        EXPECT(0xd047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd045));
        EXPECT(0x59, gbc.readMem(0xd046));
        // CB 59 0241
        gbc.setState(0x5c2, 0xf7aa, 0xcd50, 0x134d, 0x746, 0x252d, 0x1, 0x0);
        gbc.writeMem(0x5c2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf7aa, gbc.sp());
        EXPECT(0x5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0242
        gbc.setState(0x148d, 0x762a, 0x36e0, 0xccf1, 0xebff, 0x5317, 0x0, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x762a, gbc.sp());
        EXPECT(0x148f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0243
        gbc.setState(0x2766, 0x9631, 0xce0, 0xbde3, 0xfe3d, 0xb1d3, 0x1, 0x1);
        gbc.writeMem(0x2766, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9631, gbc.sp());
        EXPECT(0x2768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0244
        gbc.setState(0x4f53, 0x1af6, 0x5a90, 0x98b, 0x94f1, 0x4079, 0x1, 0x0);
        gbc.writeMem(0x4f53, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1af6, gbc.sp());
        EXPECT(0x4f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0245
        gbc.setState(0x9cd3, 0x53e1, 0x2950, 0xb331, 0xf8b5, 0x8cd9, 0x1, 0x0);
        gbc.writeMem(0x9cd3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x53e1, gbc.sp());
        EXPECT(0x9cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd3));
        EXPECT(0x59, gbc.readMem(0x9cd4));
        // CB 59 0246
        gbc.setState(0x1688, 0x5e4b, 0x34f0, 0xfb42, 0x86be, 0x5b17, 0x0, 0x1);
        gbc.writeMem(0x1688, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5e4b, gbc.sp());
        EXPECT(0x168a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0247
        gbc.setState(0xdfb7, 0xe9f2, 0x58b0, 0xe988, 0xe0d3, 0x2696, 0x0, 0x0);
        gbc.writeMem(0xdfb7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe9f2, gbc.sp());
        EXPECT(0xdfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb7));
        EXPECT(0x59, gbc.readMem(0xdfb8));
        // CB 59 0248
        gbc.setState(0x28c2, 0x79db, 0xf10, 0x32f7, 0x5ddd, 0x53eb, 0x0, 0x1);
        gbc.writeMem(0x28c2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x79db, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 024A
        gbc.setState(0x4354, 0xf682, 0xb610, 0xe64d, 0x18f7, 0xc795, 0x1, 0x1);
        gbc.writeMem(0x4354, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf682, gbc.sp());
        EXPECT(0x4356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 024B
        gbc.setState(0xd123, 0xedd7, 0xb6f0, 0xf22b, 0x2ae1, 0x18af, 0x1, 0x0);
        gbc.writeMem(0xd123, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd123));
        EXPECT(0x59, gbc.readMem(0xd124));
        // CB 59 024C
        gbc.setState(0xea7e, 0x4100, 0xd040, 0xd1aa, 0xa356, 0xca3c, 0x1, 0x0);
        gbc.writeMem(0xea7e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4100, gbc.sp());
        EXPECT(0xea80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7e));
        EXPECT(0x59, gbc.readMem(0xea7f));
        // CB 59 024D
        gbc.setState(0xee83, 0x8ec7, 0x2be0, 0x8973, 0x8431, 0x6fb5, 0x0, 0x1);
        gbc.writeMem(0xee83, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8ec7, gbc.sp());
        EXPECT(0xee85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee83));
        EXPECT(0x59, gbc.readMem(0xee84));
        // CB 59 024E
        gbc.setState(0x69d4, 0x7ca, 0x8360, 0x1b14, 0x8ca9, 0x2a89, 0x1, 0x1);
        gbc.writeMem(0x69d4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7ca, gbc.sp());
        EXPECT(0x69d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 024F
        gbc.setState(0xac19, 0xd312, 0x8df0, 0x9bf8, 0xac1d, 0x6929, 0x0, 0x0);
        gbc.writeMem(0xac19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd312, gbc.sp());
        EXPECT(0xac1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac19));
        EXPECT(0x59, gbc.readMem(0xac1a));
        // CB 59 0250
        gbc.setState(0x5435, 0x3dd4, 0x5830, 0x2f8a, 0x5199, 0x583d, 0x0, 0x1);
        gbc.writeMem(0x5435, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3dd4, gbc.sp());
        EXPECT(0x5437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0251
        gbc.setState(0xd21, 0x4791, 0xab50, 0xe517, 0xbf1f, 0x774f, 0x1, 0x0);
        gbc.writeMem(0xd21, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4791, gbc.sp());
        EXPECT(0xd23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0252
        gbc.setState(0x3606, 0x25da, 0x1540, 0x3b5a, 0x4946, 0x71af, 0x1, 0x0);
        gbc.writeMem(0x3606, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x25da, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0253
        gbc.setState(0xd76a, 0x7b5b, 0xe40, 0x8665, 0xfe86, 0x1296, 0x0, 0x0);
        gbc.writeMem(0xd76a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7b5b, gbc.sp());
        EXPECT(0xd76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76a));
        EXPECT(0x59, gbc.readMem(0xd76b));
        // CB 59 0254
        gbc.setState(0x8b71, 0x3a06, 0x96e0, 0x1eae, 0xe1a9, 0x7829, 0x0, 0x1);
        gbc.writeMem(0x8b71, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0x8b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b71));
        EXPECT(0x59, gbc.readMem(0x8b72));
        // CB 59 0255
        gbc.setState(0x9f88, 0x2b26, 0x1d0, 0x33b, 0x4ba4, 0x8e81, 0x1, 0x0);
        gbc.writeMem(0x9f88, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2b26, gbc.sp());
        EXPECT(0x9f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f88));
        EXPECT(0x59, gbc.readMem(0x9f89));
        // CB 59 0256
        gbc.setState(0xe4ac, 0xb63a, 0x8160, 0x3b14, 0xac3e, 0xa4e7, 0x0, 0x0);
        gbc.writeMem(0xe4ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb63a, gbc.sp());
        EXPECT(0xe4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ac));
        EXPECT(0x59, gbc.readMem(0xe4ad));
        // CB 59 0257
        gbc.setState(0x6e8e, 0xad6c, 0x3860, 0x93ff, 0x4cf7, 0x6443, 0x0, 0x0);
        gbc.writeMem(0x6e8e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0258
        gbc.setState(0x61ec, 0xedb8, 0xbde0, 0x13fa, 0x5953, 0xa87, 0x1, 0x0);
        gbc.writeMem(0x61ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xedb8, gbc.sp());
        EXPECT(0x61ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0259
        gbc.setState(0xbe14, 0x62c0, 0x3260, 0xba5f, 0x70b2, 0x5f1d, 0x0, 0x1);
        gbc.writeMem(0xbe14, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x62c0, gbc.sp());
        EXPECT(0xbe16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe14));
        EXPECT(0x59, gbc.readMem(0xbe15));
        // CB 59 025A
        gbc.setState(0x45b5, 0xfb98, 0xd140, 0xb433, 0x1c80, 0x5308, 0x0, 0x1);
        gbc.writeMem(0x45b5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfb98, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 025B
        gbc.setState(0xda9c, 0x5084, 0x8e10, 0x633, 0x6e60, 0x2a5e, 0x1, 0x0);
        gbc.writeMem(0xda9c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5084, gbc.sp());
        EXPECT(0xda9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9c));
        EXPECT(0x59, gbc.readMem(0xda9d));
        // CB 59 025C
        gbc.setState(0xb5ab, 0x3de9, 0x1c40, 0xfe90, 0x37e3, 0xdd2f, 0x1, 0x1);
        gbc.writeMem(0xb5ab, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0xb5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ab));
        EXPECT(0x59, gbc.readMem(0xb5ac));
        // CB 59 025D
        gbc.setState(0x9255, 0x2980, 0xbc80, 0x4b62, 0x33fc, 0x6088, 0x1, 0x1);
        gbc.writeMem(0x9255, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2980, gbc.sp());
        EXPECT(0x9257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9255));
        EXPECT(0x59, gbc.readMem(0x9256));
        // CB 59 025E
        gbc.setState(0xd9e5, 0x7040, 0xdaa0, 0x3e35, 0x549e, 0x6a50, 0x1, 0x0);
        gbc.writeMem(0xd9e5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7040, gbc.sp());
        EXPECT(0xd9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e5));
        EXPECT(0x59, gbc.readMem(0xd9e6));
        // CB 59 025F
        gbc.setState(0x356, 0xb847, 0xd000, 0x7021, 0x59c6, 0xffd7, 0x0, 0x0);
        gbc.writeMem(0x356, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb847, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0260
        gbc.setState(0x4fb2, 0xeb1b, 0xc2a0, 0xb289, 0x61bc, 0x2ee7, 0x1, 0x0);
        gbc.writeMem(0x4fb2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0x4fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0262
        gbc.setState(0x62f8, 0xf4d1, 0x4d80, 0xdf5, 0xbc9a, 0xe5cd, 0x0, 0x1);
        gbc.writeMem(0x62f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0263
        gbc.setState(0x43cf, 0xfebc, 0xeba0, 0x6bbb, 0x561a, 0xa1c1, 0x1, 0x1);
        gbc.writeMem(0x43cf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfebc, gbc.sp());
        EXPECT(0x43d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0264
        gbc.setState(0xb464, 0xf7cb, 0x7450, 0x9017, 0x6348, 0xb2d4, 0x0, 0x1);
        gbc.writeMem(0xb464, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf7cb, gbc.sp());
        EXPECT(0xb466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb464));
        EXPECT(0x59, gbc.readMem(0xb465));
        // CB 59 0265
        gbc.setState(0xc078, 0x1f01, 0xbbc0, 0x1e2b, 0x4c02, 0x4dc5, 0x1, 0x0);
        gbc.writeMem(0xc078, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1f01, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc078));
        EXPECT(0x59, gbc.readMem(0xc079));
        // CB 59 0266
        gbc.setState(0x6e85, 0xa705, 0x8f00, 0x6624, 0xed9a, 0x7746, 0x0, 0x0);
        gbc.writeMem(0x6e85, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0x6e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0267
        gbc.setState(0xcdb0, 0xf8d4, 0xcc0, 0x7b7, 0x593, 0x4362, 0x1, 0x1);
        gbc.writeMem(0xcdb0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf8d4, gbc.sp());
        EXPECT(0xcdb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb0));
        EXPECT(0x59, gbc.readMem(0xcdb1));
        // CB 59 0268
        gbc.setState(0x591a, 0xa208, 0x2850, 0xcc0b, 0x3c93, 0xda3f, 0x0, 0x0);
        gbc.writeMem(0x591a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa208, gbc.sp());
        EXPECT(0x591c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0269
        gbc.setState(0x15cb, 0x3b1b, 0x5680, 0x94d, 0x352c, 0x559b, 0x1, 0x1);
        gbc.writeMem(0x15cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0x15cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 026A
        gbc.setState(0x8766, 0xc96e, 0x3a80, 0x52e0, 0xa157, 0x1ce8, 0x1, 0x1);
        gbc.writeMem(0x8766, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc96e, gbc.sp());
        EXPECT(0x8768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8766));
        EXPECT(0x59, gbc.readMem(0x8767));
        // CB 59 026C
        gbc.setState(0xeae6, 0x3d89, 0x5200, 0xb124, 0x1af7, 0x69ca, 0x0, 0x1);
        gbc.writeMem(0xeae6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3d89, gbc.sp());
        EXPECT(0xeae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae6));
        EXPECT(0x59, gbc.readMem(0xeae7));
        // CB 59 026D
        gbc.setState(0x306, 0x1c10, 0xcd30, 0xb790, 0xb992, 0xb8ae, 0x1, 0x0);
        gbc.writeMem(0x306, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1c10, gbc.sp());
        EXPECT(0x308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 026E
        gbc.setState(0xa517, 0x73f9, 0x9490, 0x5a90, 0x46d2, 0x7eae, 0x0, 0x0);
        gbc.writeMem(0xa517, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x73f9, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa517));
        EXPECT(0x59, gbc.readMem(0xa518));
        // CB 59 026F
        gbc.setState(0x7b4, 0xb4ee, 0x2c30, 0x21cf, 0x2b66, 0xa2f6, 0x1, 0x0);
        gbc.writeMem(0x7b4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb4ee, gbc.sp());
        EXPECT(0x7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0270
        gbc.setState(0x18f8, 0x21dc, 0xbdd0, 0x3f02, 0x4c3f, 0xdf1f, 0x0, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x21dc, gbc.sp());
        EXPECT(0x18fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0271
        gbc.setState(0x1c1c, 0x96a1, 0xeb20, 0xc7d3, 0x860d, 0x9423, 0x1, 0x0);
        gbc.writeMem(0x1c1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x96a1, gbc.sp());
        EXPECT(0x1c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0272
        gbc.setState(0xb6e4, 0xb6bd, 0x3ba0, 0xed58, 0x1238, 0xf0e9, 0x0, 0x1);
        gbc.writeMem(0xb6e4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb6bd, gbc.sp());
        EXPECT(0xb6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e4));
        EXPECT(0x59, gbc.readMem(0xb6e5));
        // CB 59 0273
        gbc.setState(0xbea2, 0xc6df, 0x39f0, 0xc89d, 0x18b2, 0xf038, 0x1, 0x0);
        gbc.writeMem(0xbea2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc6df, gbc.sp());
        EXPECT(0xbea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea2));
        EXPECT(0x59, gbc.readMem(0xbea3));
        // CB 59 0274
        gbc.setState(0x922d, 0xbfc7, 0x4170, 0x47f5, 0x514e, 0x6c44, 0x0, 0x0);
        gbc.writeMem(0x922d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbfc7, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922d));
        EXPECT(0x59, gbc.readMem(0x922e));
        // CB 59 0275
        gbc.setState(0x11f7, 0xf481, 0xf3a0, 0x3494, 0xe42e, 0xe344, 0x0, 0x1);
        gbc.writeMem(0x11f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf481, gbc.sp());
        EXPECT(0x11f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0276
        gbc.setState(0x6de7, 0x69c5, 0x90f0, 0x52a3, 0x22f1, 0xee68, 0x0, 0x0);
        gbc.writeMem(0x6de7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x69c5, gbc.sp());
        EXPECT(0x6de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0277
        gbc.setState(0xae09, 0xb148, 0xb200, 0xd4a5, 0x1c6c, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0xae09, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb148, gbc.sp());
        EXPECT(0xae0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae09));
        EXPECT(0x59, gbc.readMem(0xae0a));
        // CB 59 0278
        gbc.setState(0xcb64, 0xe3d0, 0x8ae0, 0x5d31, 0xbd7e, 0xb65b, 0x1, 0x0);
        gbc.writeMem(0xcb64, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe3d0, gbc.sp());
        EXPECT(0xcb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb64));
        EXPECT(0x59, gbc.readMem(0xcb65));
        // CB 59 0279
        gbc.setState(0xcb53, 0xd183, 0x5420, 0xe811, 0xdbe1, 0x8dc, 0x0, 0x0);
        gbc.writeMem(0xcb53, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd183, gbc.sp());
        EXPECT(0xcb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb53));
        EXPECT(0x59, gbc.readMem(0xcb54));
        // CB 59 027A
        gbc.setState(0xef19, 0x9b3, 0x3d50, 0xf4d2, 0x2421, 0xd846, 0x0, 0x1);
        gbc.writeMem(0xef19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9b3, gbc.sp());
        EXPECT(0xef1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef19));
        EXPECT(0x59, gbc.readMem(0xef1a));
        // CB 59 027B
        gbc.setState(0x5b0c, 0xf8a5, 0x3f10, 0xc0ae, 0x9053, 0xceae, 0x1, 0x1);
        gbc.writeMem(0x5b0c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf8a5, gbc.sp());
        EXPECT(0x5b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 027C
        gbc.setState(0xa06f, 0xc632, 0x3480, 0x56f7, 0x60a4, 0x953, 0x1, 0x0);
        gbc.writeMem(0xa06f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc632, gbc.sp());
        EXPECT(0xa071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06f));
        EXPECT(0x59, gbc.readMem(0xa070));
        // CB 59 027D
        gbc.setState(0x40b8, 0x4acb, 0x99a0, 0x8b89, 0x6a3e, 0xb3d8, 0x1, 0x1);
        gbc.writeMem(0x40b8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4acb, gbc.sp());
        EXPECT(0x40ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 027E
        gbc.setState(0xc9a5, 0x15c1, 0xffa0, 0x2529, 0x3197, 0x5166, 0x1, 0x1);
        gbc.writeMem(0xc9a5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x15c1, gbc.sp());
        EXPECT(0xc9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a5));
        EXPECT(0x59, gbc.readMem(0xc9a6));
        // CB 59 027F
        gbc.setState(0xb72c, 0x2fd, 0x6f90, 0xc648, 0x8302, 0xb8ab, 0x1, 0x0);
        gbc.writeMem(0xb72c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2fd, gbc.sp());
        EXPECT(0xb72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72c));
        EXPECT(0x59, gbc.readMem(0xb72d));
        // CB 59 0280
        gbc.setState(0xab1c, 0xdb91, 0x7480, 0xfb04, 0x8fb6, 0x6440, 0x1, 0x0);
        gbc.writeMem(0xab1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1c));
        EXPECT(0x59, gbc.readMem(0xab1d));
        // CB 59 0281
        gbc.setState(0xd1de, 0xab4b, 0x730, 0x6226, 0x32ef, 0x404, 0x0, 0x1);
        gbc.writeMem(0xd1de, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xab4b, gbc.sp());
        EXPECT(0xd1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1de));
        EXPECT(0x59, gbc.readMem(0xd1df));
        // CB 59 0282
        gbc.setState(0x3b2, 0x3a0e, 0x2c70, 0x2b9a, 0xc35f, 0x5cc2, 0x1, 0x0);
        gbc.writeMem(0x3b2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3a0e, gbc.sp());
        EXPECT(0x3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0283
        gbc.setState(0x57f5, 0xdd17, 0x18c0, 0x3e57, 0x2c7d, 0x95c0, 0x0, 0x0);
        gbc.writeMem(0x57f5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdd17, gbc.sp());
        EXPECT(0x57f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0284
        gbc.setState(0x4cb8, 0xf116, 0x4ea0, 0x6d53, 0x88d1, 0xbb26, 0x0, 0x0);
        gbc.writeMem(0x4cb8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf116, gbc.sp());
        EXPECT(0x4cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0285
        gbc.setState(0x543e, 0x2872, 0x4870, 0xd23f, 0x817c, 0xf64a, 0x0, 0x0);
        gbc.writeMem(0x543e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0x5440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0287
        gbc.setState(0xafe3, 0x453f, 0x260, 0x537f, 0xa2b7, 0x30a8, 0x0, 0x0);
        gbc.writeMem(0xafe3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x453f, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe3));
        EXPECT(0x59, gbc.readMem(0xafe4));
        // CB 59 0288
        gbc.setState(0x14ff, 0x8e76, 0xc860, 0xd30, 0xaf3c, 0x5eb9, 0x0, 0x0);
        gbc.writeMem(0x14ff, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8e76, gbc.sp());
        EXPECT(0x1501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0289
        gbc.setState(0x747, 0x74a5, 0x1ab0, 0x96f1, 0x44a2, 0x50c7, 0x0, 0x0);
        gbc.writeMem(0x747, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x74a5, gbc.sp());
        EXPECT(0x749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 028A
        gbc.setState(0x965d, 0x1231, 0xf870, 0xf98f, 0x7f5a, 0x44d2, 0x0, 0x1);
        gbc.writeMem(0x965d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1231, gbc.sp());
        EXPECT(0x965f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965d));
        EXPECT(0x59, gbc.readMem(0x965e));
        // CB 59 028B
        gbc.setState(0x9232, 0x2eaa, 0x3f00, 0x73a3, 0x86ba, 0xd023, 0x1, 0x0);
        gbc.writeMem(0x9232, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2eaa, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9232));
        EXPECT(0x59, gbc.readMem(0x9233));
        // CB 59 028C
        gbc.setState(0x24eb, 0xfac0, 0xd5f0, 0x9c4d, 0x93dc, 0xd01f, 0x1, 0x0);
        gbc.writeMem(0x24eb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfac0, gbc.sp());
        EXPECT(0x24ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 028D
        gbc.setState(0xe454, 0x1da2, 0x5190, 0x5a50, 0x373d, 0xb69c, 0x1, 0x1);
        gbc.writeMem(0xe454, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1da2, gbc.sp());
        EXPECT(0xe456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe454));
        EXPECT(0x59, gbc.readMem(0xe455));
        // CB 59 028E
        gbc.setState(0xe8fd, 0xbf43, 0x8980, 0xd38c, 0xa7cb, 0x68e2, 0x0, 0x1);
        gbc.writeMem(0xe8fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0xe8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8fd));
        EXPECT(0x59, gbc.readMem(0xe8fe));
        // CB 59 028F
        gbc.setState(0x970a, 0x6be8, 0x5250, 0xf392, 0xbd8f, 0xc03c, 0x0, 0x0);
        gbc.writeMem(0x970a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6be8, gbc.sp());
        EXPECT(0x970c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970a));
        EXPECT(0x59, gbc.readMem(0x970b));
        // CB 59 0290
        gbc.setState(0xe6f2, 0xdf37, 0x9ca0, 0xc871, 0x82bf, 0xc87a, 0x1, 0x1);
        gbc.writeMem(0xe6f2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdf37, gbc.sp());
        EXPECT(0xe6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f2));
        EXPECT(0x59, gbc.readMem(0xe6f3));
        // CB 59 0291
        gbc.setState(0x8e0f, 0xf582, 0xcd0, 0x854d, 0xfdf7, 0xbadf, 0x0, 0x1);
        gbc.writeMem(0x8e0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0x8e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0f));
        EXPECT(0x59, gbc.readMem(0x8e10));
        // CB 59 0292
        gbc.setState(0xddc0, 0x767b, 0x1990, 0xefa2, 0xf403, 0xa15b, 0x0, 0x1);
        gbc.writeMem(0xddc0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x767b, gbc.sp());
        EXPECT(0xddc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc0));
        EXPECT(0x59, gbc.readMem(0xddc1));
        // CB 59 0293
        gbc.setState(0xb8ef, 0xddd8, 0x23f0, 0x7efe, 0xf75f, 0xa99c, 0x1, 0x0);
        gbc.writeMem(0xb8ef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xddd8, gbc.sp());
        EXPECT(0xb8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ef));
        EXPECT(0x59, gbc.readMem(0xb8f0));
        // CB 59 0294
        gbc.setState(0xd924, 0xa08b, 0xcd90, 0xd150, 0x4c9b, 0x7395, 0x1, 0x1);
        gbc.writeMem(0xd924, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0xd926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd924));
        EXPECT(0x59, gbc.readMem(0xd925));
        // CB 59 0295
        gbc.setState(0xb4ca, 0x9d42, 0x1d30, 0x3cc0, 0x6125, 0x97d9, 0x1, 0x1);
        gbc.writeMem(0xb4ca, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9d42, gbc.sp());
        EXPECT(0xb4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ca));
        EXPECT(0x59, gbc.readMem(0xb4cb));
        // CB 59 0296
        gbc.setState(0x5d3a, 0x4af5, 0xe60, 0xc99d, 0xf38a, 0x3b66, 0x0, 0x0);
        gbc.writeMem(0x5d3a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4af5, gbc.sp());
        EXPECT(0x5d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0297
        gbc.setState(0x6519, 0x2cde, 0x9da0, 0xba1a, 0x2b8d, 0x443b, 0x1, 0x1);
        gbc.writeMem(0x6519, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2cde, gbc.sp());
        EXPECT(0x651b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0298
        gbc.setState(0x2050, 0x68c4, 0xd3f0, 0x1993, 0x1510, 0x693b, 0x1, 0x0);
        gbc.writeMem(0x2050, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x68c4, gbc.sp());
        EXPECT(0x2052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0299
        gbc.setState(0x2f3f, 0xf606, 0x290, 0xd05, 0x2d8a, 0xdc00, 0x0, 0x1);
        gbc.writeMem(0x2f3f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf606, gbc.sp());
        EXPECT(0x2f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 029A
        gbc.setState(0xe398, 0x8fe1, 0x510, 0x8ab5, 0x26b1, 0x76d1, 0x0, 0x0);
        gbc.writeMem(0xe398, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8fe1, gbc.sp());
        EXPECT(0xe39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe398));
        EXPECT(0x59, gbc.readMem(0xe399));
        // CB 59 029B
        gbc.setState(0xafe9, 0x22b5, 0x5490, 0x86b9, 0x44e6, 0x106b, 0x1, 0x0);
        gbc.writeMem(0xafe9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x22b5, gbc.sp());
        EXPECT(0xafeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe9));
        EXPECT(0x59, gbc.readMem(0xafea));
        // CB 59 029C
        gbc.setState(0x1eec, 0x2455, 0x5df0, 0x8f7, 0x7162, 0x9c86, 0x0, 0x0);
        gbc.writeMem(0x1eec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2455, gbc.sp());
        EXPECT(0x1eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 029D
        gbc.setState(0x8497, 0x5406, 0xcab0, 0x3481, 0xde63, 0xe1ad, 0x0, 0x1);
        gbc.writeMem(0x8497, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5406, gbc.sp());
        EXPECT(0x8499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8497));
        EXPECT(0x59, gbc.readMem(0x8498));
        // CB 59 029E
        gbc.setState(0xea7f, 0xeaad, 0xbb50, 0xfe85, 0xdcdd, 0xb4ec, 0x0, 0x0);
        gbc.writeMem(0xea7f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeaad, gbc.sp());
        EXPECT(0xea81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7f));
        EXPECT(0x59, gbc.readMem(0xea80));
        // CB 59 029F
        gbc.setState(0x642c, 0xb8a4, 0x74c0, 0x8746, 0xb830, 0xf71e, 0x0, 0x0);
        gbc.writeMem(0x642c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb8a4, gbc.sp());
        EXPECT(0x642e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02A0
        gbc.setState(0xaf8e, 0x454, 0x7e60, 0x2ae6, 0xc11, 0x4b6e, 0x1, 0x0);
        gbc.writeMem(0xaf8e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x454, gbc.sp());
        EXPECT(0xaf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8e));
        EXPECT(0x59, gbc.readMem(0xaf8f));
        // CB 59 02A1
        gbc.setState(0x6c17, 0xb892, 0x8930, 0x8107, 0x4359, 0x9717, 0x1, 0x1);
        gbc.writeMem(0x6c17, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb892, gbc.sp());
        EXPECT(0x6c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02A2
        gbc.setState(0xbfde, 0x7bbe, 0x5e20, 0x8332, 0xb4b9, 0x7095, 0x0, 0x1);
        gbc.writeMem(0xbfde, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7bbe, gbc.sp());
        EXPECT(0xbfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfde));
        EXPECT(0x59, gbc.readMem(0xbfdf));
        // CB 59 02A3
        gbc.setState(0x84d5, 0xe661, 0x7e40, 0x9809, 0x6846, 0xebf8, 0x1, 0x0);
        gbc.writeMem(0x84d5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe661, gbc.sp());
        EXPECT(0x84d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d5));
        EXPECT(0x59, gbc.readMem(0x84d6));
        // CB 59 02A4
        gbc.setState(0xc62d, 0x191f, 0x3c90, 0xe4fe, 0x264b, 0x2945, 0x1, 0x0);
        gbc.writeMem(0xc62d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x191f, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62d));
        EXPECT(0x59, gbc.readMem(0xc62e));
        // CB 59 02A5
        gbc.setState(0xca90, 0x5b60, 0xc7d0, 0x5b02, 0x1d95, 0x1ab4, 0x0, 0x0);
        gbc.writeMem(0xca90, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5b60, gbc.sp());
        EXPECT(0xca92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca90));
        EXPECT(0x59, gbc.readMem(0xca91));
        // CB 59 02A6
        gbc.setState(0xa10, 0x104, 0x1770, 0xcca, 0x75c8, 0xe9a8, 0x1, 0x0);
        gbc.writeMem(0xa10, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x104, gbc.sp());
        EXPECT(0xa12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02A7
        gbc.setState(0xa60a, 0xfeb1, 0x3f70, 0x4464, 0xe9a8, 0x313c, 0x0, 0x1);
        gbc.writeMem(0xa60a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0xa60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60a));
        EXPECT(0x59, gbc.readMem(0xa60b));
        // CB 59 02A8
        gbc.setState(0x17de, 0x63dc, 0x4870, 0x37f9, 0xe217, 0x49f4, 0x0, 0x0);
        gbc.writeMem(0x17de, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x63dc, gbc.sp());
        EXPECT(0x17e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02A9
        gbc.setState(0x92d2, 0xf87, 0x26c0, 0xa4ca, 0xaec8, 0x2734, 0x0, 0x0);
        gbc.writeMem(0x92d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf87, gbc.sp());
        EXPECT(0x92d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d2));
        EXPECT(0x59, gbc.readMem(0x92d3));
        // CB 59 02AA
        gbc.setState(0xeaec, 0xec16, 0xd610, 0xdd92, 0x99ef, 0x9a80, 0x0, 0x1);
        gbc.writeMem(0xeaec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xec16, gbc.sp());
        EXPECT(0xeaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaec));
        EXPECT(0x59, gbc.readMem(0xeaed));
        // CB 59 02AB
        gbc.setState(0xef4b, 0x397e, 0xf250, 0x70aa, 0x34db, 0x142f, 0x0, 0x0);
        gbc.writeMem(0xef4b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x397e, gbc.sp());
        EXPECT(0xef4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4b));
        EXPECT(0x59, gbc.readMem(0xef4c));
        // CB 59 02AC
        gbc.setState(0x21c5, 0x9804, 0x7cf0, 0x6ceb, 0x941f, 0x32dc, 0x0, 0x0);
        gbc.writeMem(0x21c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9804, gbc.sp());
        EXPECT(0x21c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02AD
        gbc.setState(0xb4e3, 0xc0b6, 0x1300, 0x3c82, 0xb67b, 0x1315, 0x0, 0x1);
        gbc.writeMem(0xb4e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc0b6, gbc.sp());
        EXPECT(0xb4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e3));
        EXPECT(0x59, gbc.readMem(0xb4e4));
        // CB 59 02AE
        gbc.setState(0x7ab2, 0x5547, 0x5230, 0xcd30, 0xca3, 0x2581, 0x1, 0x0);
        gbc.writeMem(0x7ab2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5547, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02AF
        gbc.setState(0x6dcd, 0x125c, 0x96a0, 0x19f, 0xdf2d, 0x9385, 0x0, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x125c, gbc.sp());
        EXPECT(0x6dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02B0
        gbc.setState(0x9b46, 0x33e4, 0x11a0, 0x2fd9, 0x1b0a, 0xf86a, 0x1, 0x1);
        gbc.writeMem(0x9b46, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x33e4, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b46));
        EXPECT(0x59, gbc.readMem(0x9b47));
        // CB 59 02B1
        gbc.setState(0x3a29, 0x3904, 0x5e60, 0xc152, 0xde0d, 0xb082, 0x1, 0x0);
        gbc.writeMem(0x3a29, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3904, gbc.sp());
        EXPECT(0x3a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02B2
        gbc.setState(0x5d39, 0xbe42, 0x9340, 0x6aad, 0xe4be, 0x7098, 0x0, 0x1);
        gbc.writeMem(0x5d39, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbe42, gbc.sp());
        EXPECT(0x5d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02B3
        gbc.setState(0xcce3, 0xe679, 0x4cc0, 0x826a, 0xcfa, 0xd14a, 0x0, 0x0);
        gbc.writeMem(0xcce3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe679, gbc.sp());
        EXPECT(0xcce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce3));
        EXPECT(0x59, gbc.readMem(0xcce4));
        // CB 59 02B4
        gbc.setState(0x6cd4, 0xc280, 0x3840, 0xf8a0, 0xc87, 0x7bdd, 0x1, 0x1);
        gbc.writeMem(0x6cd4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0x6cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02B5
        gbc.setState(0xa08c, 0x384, 0xf860, 0xb7c5, 0x26ad, 0xc056, 0x0, 0x0);
        gbc.writeMem(0xa08c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x384, gbc.sp());
        EXPECT(0xa08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08c));
        EXPECT(0x59, gbc.readMem(0xa08d));
        // CB 59 02B6
        gbc.setState(0xb089, 0xb5fe, 0x4a30, 0x6526, 0x6da4, 0xae68, 0x0, 0x1);
        gbc.writeMem(0xb089, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb5fe, gbc.sp());
        EXPECT(0xb08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb089));
        EXPECT(0x59, gbc.readMem(0xb08a));
        // CB 59 02B7
        gbc.setState(0xeb3d, 0xdfcc, 0xa1a0, 0x7228, 0x8a8f, 0x37bd, 0x0, 0x0);
        gbc.writeMem(0xeb3d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0xeb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3d));
        EXPECT(0x59, gbc.readMem(0xeb3e));
        // CB 59 02B8
        gbc.setState(0xbac0, 0xefbd, 0xed40, 0xaffc, 0xbc07, 0xdfd2, 0x1, 0x1);
        gbc.writeMem(0xbac0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xefbd, gbc.sp());
        EXPECT(0xbac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac0));
        EXPECT(0x59, gbc.readMem(0xbac1));
        // CB 59 02B9
        gbc.setState(0x5cfd, 0xf023, 0x6150, 0x771c, 0x5dd5, 0x8def, 0x0, 0x0);
        gbc.writeMem(0x5cfd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf023, gbc.sp());
        EXPECT(0x5cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02BA
        gbc.setState(0xa7a, 0x12b4, 0x87e0, 0x3c40, 0x287a, 0xbe82, 0x0, 0x1);
        gbc.writeMem(0xa7a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x12b4, gbc.sp());
        EXPECT(0xa7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02BB
        gbc.setState(0xb238, 0xef60, 0xa020, 0x10e6, 0x131c, 0x2f1d, 0x0, 0x1);
        gbc.writeMem(0xb238, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xef60, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0x59, gbc.readMem(0xb239));
        // CB 59 02BC
        gbc.setState(0xe6f0, 0xe87d, 0x7690, 0x9b44, 0xa4e6, 0x10b4, 0x0, 0x0);
        gbc.writeMem(0xe6f0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe87d, gbc.sp());
        EXPECT(0xe6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f0));
        EXPECT(0x59, gbc.readMem(0xe6f1));
        // CB 59 02BD
        gbc.setState(0xda84, 0xada8, 0x51b0, 0x2626, 0x8d18, 0x5079, 0x1, 0x1);
        gbc.writeMem(0xda84, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xada8, gbc.sp());
        EXPECT(0xda86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda84));
        EXPECT(0x59, gbc.readMem(0xda85));
        // CB 59 02BE
        gbc.setState(0x73a7, 0x4d03, 0x610, 0x1507, 0xf588, 0xd9e4, 0x0, 0x0);
        gbc.writeMem(0x73a7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0x73a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02BF
        gbc.setState(0x53a8, 0xa3ef, 0x6c90, 0x8a22, 0x9c31, 0x321e, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa3ef, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02C0
        gbc.setState(0x12cc, 0xc5dd, 0x1710, 0xb3f8, 0xc2e0, 0x69e, 0x0, 0x0);
        gbc.writeMem(0x12cc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc5dd, gbc.sp());
        EXPECT(0x12ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02C1
        gbc.setState(0x97c5, 0xde3a, 0x610, 0x833f, 0xe6d4, 0x451f, 0x0, 0x1);
        gbc.writeMem(0x97c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xde3a, gbc.sp());
        EXPECT(0x97c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c5));
        EXPECT(0x59, gbc.readMem(0x97c6));
        // CB 59 02C2
        gbc.setState(0x8f67, 0x801c, 0xb990, 0x385e, 0xa161, 0x6ebb, 0x1, 0x0);
        gbc.writeMem(0x8f67, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x8f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f67));
        EXPECT(0x59, gbc.readMem(0x8f68));
        // CB 59 02C3
        gbc.setState(0x7bd0, 0xdc59, 0x930, 0xd756, 0xd0eb, 0x4d66, 0x0, 0x0);
        gbc.writeMem(0x7bd0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdc59, gbc.sp());
        EXPECT(0x7bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02C4
        gbc.setState(0x2475, 0xf6e7, 0x6460, 0xedae, 0xfd64, 0x26, 0x0, 0x1);
        gbc.writeMem(0x2475, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf6e7, gbc.sp());
        EXPECT(0x2477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02C6
        gbc.setState(0x33dc, 0x22ac, 0x19b0, 0xe61e, 0x91dd, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0x33dc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x22ac, gbc.sp());
        EXPECT(0x33de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02C7
        gbc.setState(0xdc9, 0x7ce6, 0xc970, 0x775e, 0xf811, 0x3230, 0x0, 0x1);
        gbc.writeMem(0xdc9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7ce6, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02C8
        gbc.setState(0xe789, 0x4196, 0x1890, 0x343b, 0x98e9, 0xcad2, 0x0, 0x0);
        gbc.writeMem(0xe789, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4196, gbc.sp());
        EXPECT(0xe78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe789));
        EXPECT(0x59, gbc.readMem(0xe78a));
        // CB 59 02C9
        gbc.setState(0x3b5, 0x5f5d, 0xe380, 0x80c3, 0x898a, 0x44df, 0x0, 0x0);
        gbc.writeMem(0x3b5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5f5d, gbc.sp());
        EXPECT(0x3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02CB
        gbc.setState(0xdf9a, 0x4871, 0x3030, 0xce2b, 0xb4a9, 0x3974, 0x1, 0x1);
        gbc.writeMem(0xdf9a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4871, gbc.sp());
        EXPECT(0xdf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9a));
        EXPECT(0x59, gbc.readMem(0xdf9b));
        // CB 59 02CC
        gbc.setState(0xd95a, 0x9ad4, 0x1370, 0x9492, 0x6674, 0x4a0a, 0x1, 0x1);
        gbc.writeMem(0xd95a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0xd95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95a));
        EXPECT(0x59, gbc.readMem(0xd95b));
        // CB 59 02CD
        gbc.setState(0x616f, 0xb291, 0xbc80, 0xaed7, 0xc2ad, 0xd904, 0x0, 0x1);
        gbc.writeMem(0x616f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb291, gbc.sp());
        EXPECT(0x6171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02CE
        gbc.setState(0x3d8c, 0x430c, 0x1b10, 0x9d0f, 0xcde4, 0xd663, 0x1, 0x1);
        gbc.writeMem(0x3d8c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x430c, gbc.sp());
        EXPECT(0x3d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02CF
        gbc.setState(0x2fb9, 0xce28, 0xc3d0, 0x6f4b, 0x84d9, 0x1063, 0x1, 0x1);
        gbc.writeMem(0x2fb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xce28, gbc.sp());
        EXPECT(0x2fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02D0
        gbc.setState(0x4b6d, 0x414a, 0x4700, 0x9251, 0xdff1, 0x18f4, 0x0, 0x1);
        gbc.writeMem(0x4b6d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x414a, gbc.sp());
        EXPECT(0x4b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02D1
        gbc.setState(0xdd5d, 0x6966, 0xf9a0, 0x6927, 0x5809, 0x102, 0x0, 0x1);
        gbc.writeMem(0xdd5d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6966, gbc.sp());
        EXPECT(0xdd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5d));
        EXPECT(0x59, gbc.readMem(0xdd5e));
        // CB 59 02D2
        gbc.setState(0xd82f, 0x314, 0xd590, 0x5fb3, 0xbd82, 0x59ce, 0x0, 0x0);
        gbc.writeMem(0xd82f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x314, gbc.sp());
        EXPECT(0xd831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82f));
        EXPECT(0x59, gbc.readMem(0xd830));
        // CB 59 02D3
        gbc.setState(0xe2b6, 0xf06a, 0x58e0, 0x42e4, 0x1251, 0x62bb, 0x1, 0x1);
        gbc.writeMem(0xe2b6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf06a, gbc.sp());
        EXPECT(0xe2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b6));
        EXPECT(0x59, gbc.readMem(0xe2b7));
        // CB 59 02D4
        gbc.setState(0x9a5d, 0xa9dc, 0x43a0, 0x3658, 0x3aa7, 0x3b9, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa9dc, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5d));
        EXPECT(0x59, gbc.readMem(0x9a5e));
        // CB 59 02D5
        gbc.setState(0xd7ff, 0xf84d, 0x8290, 0x433d, 0x9f1e, 0xb61a, 0x0, 0x0);
        gbc.writeMem(0xd7ff, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf84d, gbc.sp());
        EXPECT(0xd801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ff));
        EXPECT(0x59, gbc.readMem(0xd800));
        // CB 59 02D6
        gbc.setState(0x8ffe, 0x70ab, 0xb3f0, 0x2137, 0x52e0, 0x5e62, 0x1, 0x1);
        gbc.writeMem(0x8ffe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x70ab, gbc.sp());
        EXPECT(0x9000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffe));
        EXPECT(0x59, gbc.readMem(0x8fff));
        // CB 59 02D7
        gbc.setState(0x5e11, 0x1224, 0x3db0, 0x6dd9, 0xca4c, 0xea4a, 0x1, 0x1);
        gbc.writeMem(0x5e11, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1224, gbc.sp());
        EXPECT(0x5e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02D8
        gbc.setState(0xd99f, 0xd06e, 0xf4d0, 0xf886, 0xf77d, 0xcb0d, 0x0, 0x1);
        gbc.writeMem(0xd99f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0xd9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99f));
        EXPECT(0x59, gbc.readMem(0xd9a0));
        // CB 59 02D9
        gbc.setState(0xa67c, 0x2663, 0x5b00, 0xc91c, 0x7392, 0x8ff8, 0x0, 0x0);
        gbc.writeMem(0xa67c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2663, gbc.sp());
        EXPECT(0xa67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67c));
        EXPECT(0x59, gbc.readMem(0xa67d));
        // CB 59 02DA
        gbc.setState(0x7b3e, 0x53b6, 0xdf80, 0xcad9, 0xe195, 0xd4b3, 0x0, 0x0);
        gbc.writeMem(0x7b3e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x53b6, gbc.sp());
        EXPECT(0x7b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02DB
        gbc.setState(0x62ba, 0xf100, 0x7760, 0x218d, 0x2990, 0xcdbd, 0x0, 0x0);
        gbc.writeMem(0x62ba, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf100, gbc.sp());
        EXPECT(0x62bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02DC
        gbc.setState(0x992b, 0xec68, 0x2050, 0x94fd, 0x24c2, 0xb1db, 0x0, 0x1);
        gbc.writeMem(0x992b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xec68, gbc.sp());
        EXPECT(0x992d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992b));
        EXPECT(0x59, gbc.readMem(0x992c));
        // CB 59 02DD
        gbc.setState(0x733, 0xcc11, 0xee0, 0x5d91, 0x5b52, 0x9ef8, 0x1, 0x0);
        gbc.writeMem(0x733, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcc11, gbc.sp());
        EXPECT(0x735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02DE
        gbc.setState(0x1e7, 0x92b6, 0x480, 0xa296, 0x7bae, 0x9432, 0x0, 0x0);
        gbc.writeMem(0x1e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x92b6, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02DF
        gbc.setState(0xb324, 0x1850, 0x3fd0, 0x79e8, 0x4e01, 0xd53, 0x0, 0x0);
        gbc.writeMem(0xb324, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1850, gbc.sp());
        EXPECT(0xb326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb324));
        EXPECT(0x59, gbc.readMem(0xb325));
        // CB 59 02E0
        gbc.setState(0x8dd8, 0x354e, 0x4510, 0xcfb1, 0x8226, 0xfaaa, 0x1, 0x0);
        gbc.writeMem(0x8dd8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x354e, gbc.sp());
        EXPECT(0x8dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd8));
        EXPECT(0x59, gbc.readMem(0x8dd9));
        // CB 59 02E1
        gbc.setState(0x703a, 0x4bbe, 0x7f80, 0x961d, 0x3c43, 0xd7e7, 0x0, 0x1);
        gbc.writeMem(0x703a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4bbe, gbc.sp());
        EXPECT(0x703c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02E2
        gbc.setState(0xb4e7, 0x247e, 0x4bd0, 0xf3ce, 0xb751, 0x6fb5, 0x0, 0x1);
        gbc.writeMem(0xb4e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x247e, gbc.sp());
        EXPECT(0xb4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e7));
        EXPECT(0x59, gbc.readMem(0xb4e8));
        // CB 59 02E3
        gbc.setState(0x35f3, 0x6dde, 0x1050, 0x3c3c, 0x5b3b, 0x785b, 0x1, 0x0);
        gbc.writeMem(0x35f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6dde, gbc.sp());
        EXPECT(0x35f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02E4
        gbc.setState(0x8693, 0x64c7, 0x4540, 0x2ece, 0x36c5, 0x1a69, 0x1, 0x1);
        gbc.writeMem(0x8693, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x64c7, gbc.sp());
        EXPECT(0x8695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8693));
        EXPECT(0x59, gbc.readMem(0x8694));
        // CB 59 02E5
        gbc.setState(0xe076, 0x1c8e, 0xe530, 0x28fd, 0x5661, 0x56a5, 0x1, 0x0);
        gbc.writeMem(0xe076, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1c8e, gbc.sp());
        EXPECT(0xe078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe076));
        EXPECT(0x59, gbc.readMem(0xe077));
        // CB 59 02E6
        gbc.setState(0xd4a2, 0x46ce, 0xbb40, 0x7e61, 0x5af1, 0xe8a3, 0x0, 0x0);
        gbc.writeMem(0xd4a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0xd4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a2));
        EXPECT(0x59, gbc.readMem(0xd4a3));
        // CB 59 02E7
        gbc.setState(0x4fd, 0xe12, 0x9340, 0xd975, 0xd80d, 0x6b57, 0x1, 0x0);
        gbc.writeMem(0x4fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe12, gbc.sp());
        EXPECT(0x4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02E8
        gbc.setState(0x7900, 0xcecf, 0xe5d0, 0xa566, 0x7bd2, 0x17aa, 0x1, 0x0);
        gbc.writeMem(0x7900, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcecf, gbc.sp());
        EXPECT(0x7902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02E9
        gbc.setState(0x19ef, 0x3511, 0xfd00, 0xa847, 0xc1f2, 0x4ff8, 0x0, 0x0);
        gbc.writeMem(0x19ef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3511, gbc.sp());
        EXPECT(0x19f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02EA
        gbc.setState(0xe6aa, 0xe3e7, 0x3a0, 0x5fc6, 0xd875, 0x9b56, 0x0, 0x1);
        gbc.writeMem(0xe6aa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe3e7, gbc.sp());
        EXPECT(0xe6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6aa));
        EXPECT(0x59, gbc.readMem(0xe6ab));
        // CB 59 02EC
        gbc.setState(0x1cb, 0xab42, 0x81b0, 0x390c, 0x8f86, 0x2538, 0x0, 0x0);
        gbc.writeMem(0x1cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xab42, gbc.sp());
        EXPECT(0x1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02ED
        gbc.setState(0x6213, 0xf4c4, 0x45a0, 0xada3, 0xc66f, 0xea9a, 0x1, 0x0);
        gbc.writeMem(0x6213, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf4c4, gbc.sp());
        EXPECT(0x6215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02EE
        gbc.setState(0xb2ec, 0x8456, 0xb4b0, 0xb115, 0xa2ac, 0x63a6, 0x1, 0x0);
        gbc.writeMem(0xb2ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8456, gbc.sp());
        EXPECT(0xb2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ec));
        EXPECT(0x59, gbc.readMem(0xb2ed));
        // CB 59 02EF
        gbc.setState(0x2a0d, 0x5c4f, 0xe0b0, 0x6a2c, 0x6f55, 0xac0c, 0x1, 0x0);
        gbc.writeMem(0x2a0d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0x2a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02F0
        gbc.setState(0xaf95, 0xfb5b, 0x64f0, 0xb979, 0x6b7e, 0x854f, 0x1, 0x0);
        gbc.writeMem(0xaf95, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfb5b, gbc.sp());
        EXPECT(0xaf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf95));
        EXPECT(0x59, gbc.readMem(0xaf96));
        // CB 59 02F1
        gbc.setState(0x6b67, 0x6d18, 0xa6e0, 0x227e, 0x6e3f, 0x1fa8, 0x1, 0x0);
        gbc.writeMem(0x6b67, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6d18, gbc.sp());
        EXPECT(0x6b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02F2
        gbc.setState(0x388b, 0xe1e3, 0x24a0, 0x1d2c, 0x3084, 0xed1f, 0x0, 0x1);
        gbc.writeMem(0x388b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe1e3, gbc.sp());
        EXPECT(0x388d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02F5
        gbc.setState(0xbb24, 0x37cd, 0xb3d0, 0xd951, 0x7919, 0x81d4, 0x0, 0x1);
        gbc.writeMem(0xbb24, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x37cd, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb24));
        EXPECT(0x59, gbc.readMem(0xbb25));
        // CB 59 02F6
        gbc.setState(0x587, 0xf995, 0x2d80, 0x9f1, 0x6cf4, 0xd786, 0x0, 0x1);
        gbc.writeMem(0x587, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf995, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02F7
        gbc.setState(0x104b, 0xf719, 0x8d20, 0x806c, 0xd37b, 0x3f3a, 0x0, 0x0);
        gbc.writeMem(0x104b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf719, gbc.sp());
        EXPECT(0x104d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02F8
        gbc.setState(0x9482, 0x57e3, 0xaab0, 0x7507, 0x5c04, 0x5c7a, 0x1, 0x1);
        gbc.writeMem(0x9482, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x9484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9482));
        EXPECT(0x59, gbc.readMem(0x9483));
        // CB 59 02F9
        gbc.setState(0xa532, 0xd029, 0x1fd0, 0xa175, 0x71f1, 0x7b8f, 0x1, 0x0);
        gbc.writeMem(0xa532, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd029, gbc.sp());
        EXPECT(0xa534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa532));
        EXPECT(0x59, gbc.readMem(0xa533));
        // CB 59 02FA
        gbc.setState(0x85fb, 0xd043, 0x2260, 0xb626, 0x557, 0x4e3, 0x1, 0x1);
        gbc.writeMem(0x85fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd043, gbc.sp());
        EXPECT(0x85fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fb));
        EXPECT(0x59, gbc.readMem(0x85fc));
        // CB 59 02FB
        gbc.setState(0xd75c, 0xab25, 0x8770, 0x7a07, 0xe82f, 0x7ea6, 0x1, 0x0);
        gbc.writeMem(0xd75c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xab25, gbc.sp());
        EXPECT(0xd75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75c));
        EXPECT(0x59, gbc.readMem(0xd75d));
        // CB 59 02FC
        gbc.setState(0x879c, 0x1ee5, 0x1ac0, 0x3e4a, 0x940e, 0xd451, 0x1, 0x1);
        gbc.writeMem(0x879c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1ee5, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879c));
        EXPECT(0x59, gbc.readMem(0x879d));
        // CB 59 02FD
        gbc.setState(0x4e33, 0x4a6b, 0xdc60, 0xcbcf, 0x1bc8, 0xcc2c, 0x0, 0x0);
        gbc.writeMem(0x4e33, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4a6b, gbc.sp());
        EXPECT(0x4e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 02FE
        gbc.setState(0xb51, 0xcd3c, 0xe950, 0xdfad, 0xf464, 0xa950, 0x1, 0x0);
        gbc.writeMem(0xb51, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcd3c, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 02FF
        gbc.setState(0x6ec6, 0x4e7e, 0x61a0, 0x8d39, 0xb640, 0x72c7, 0x1, 0x1);
        gbc.writeMem(0x6ec6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4e7e, gbc.sp());
        EXPECT(0x6ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0300
        gbc.setState(0x1b8a, 0xbd99, 0x10e0, 0x2995, 0x2a90, 0x9d3, 0x1, 0x0);
        gbc.writeMem(0x1b8a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbd99, gbc.sp());
        EXPECT(0x1b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0301
        gbc.setState(0x9c8c, 0x81d4, 0x8ca0, 0xbe03, 0x9890, 0x4da, 0x1, 0x0);
        gbc.writeMem(0x9c8c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x81d4, gbc.sp());
        EXPECT(0x9c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8c));
        EXPECT(0x59, gbc.readMem(0x9c8d));
        // CB 59 0302
        gbc.setState(0x8ac4, 0xd635, 0x3500, 0xb56c, 0xbe00, 0x4722, 0x0, 0x0);
        gbc.writeMem(0x8ac4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0x8ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac4));
        EXPECT(0x59, gbc.readMem(0x8ac5));
        // CB 59 0303
        gbc.setState(0x3e1c, 0x4554, 0x3de0, 0xd2f6, 0xf9b5, 0xd65c, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4554, gbc.sp());
        EXPECT(0x3e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0304
        gbc.setState(0x30d7, 0x7a9b, 0xb930, 0x4176, 0x4407, 0xe956, 0x0, 0x0);
        gbc.writeMem(0x30d7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7a9b, gbc.sp());
        EXPECT(0x30d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0305
        gbc.setState(0x3d1, 0xaab8, 0xdc90, 0xc495, 0x732e, 0x31e5, 0x0, 0x1);
        gbc.writeMem(0x3d1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaab8, gbc.sp());
        EXPECT(0x3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0306
        gbc.setState(0xb29f, 0x4bf, 0xfe40, 0xfc7, 0x8cb2, 0x89c5, 0x1, 0x0);
        gbc.writeMem(0xb29f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4bf, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29f));
        EXPECT(0x59, gbc.readMem(0xb2a0));
        // CB 59 0307
        gbc.setState(0x31c6, 0x59f6, 0x5f40, 0x5c9b, 0xd29e, 0xe869, 0x1, 0x0);
        gbc.writeMem(0x31c6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x59f6, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0308
        gbc.setState(0x692b, 0xb469, 0x1db0, 0x72a3, 0x3e32, 0x14da, 0x0, 0x0);
        gbc.writeMem(0x692b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb469, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0309
        gbc.setState(0x8759, 0x413b, 0xb4a0, 0x950f, 0xb84e, 0xd0ac, 0x1, 0x0);
        gbc.writeMem(0x8759, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x413b, gbc.sp());
        EXPECT(0x875b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8759));
        EXPECT(0x59, gbc.readMem(0x875a));
        // CB 59 030A
        gbc.setState(0x1b7e, 0xc84e, 0x73d0, 0x178f, 0x4f83, 0x474, 0x0, 0x1);
        gbc.writeMem(0x1b7e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc84e, gbc.sp());
        EXPECT(0x1b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 030B
        gbc.setState(0x48c3, 0xecc4, 0xc5a0, 0x67eb, 0x52d7, 0xfcbb, 0x0, 0x0);
        gbc.writeMem(0x48c3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xecc4, gbc.sp());
        EXPECT(0x48c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 030C
        gbc.setState(0xc973, 0xbe02, 0x9840, 0x3fe, 0xf398, 0x9a4a, 0x0, 0x0);
        gbc.writeMem(0xc973, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbe02, gbc.sp());
        EXPECT(0xc975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc973));
        EXPECT(0x59, gbc.readMem(0xc974));
        // CB 59 030D
        gbc.setState(0xad05, 0xb7be, 0xd2b0, 0xbd15, 0xd3ff, 0xdee8, 0x0, 0x1);
        gbc.writeMem(0xad05, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0xad07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad05));
        EXPECT(0x59, gbc.readMem(0xad06));
        // CB 59 030E
        gbc.setState(0xa537, 0x9fc, 0xdeb0, 0x1c9e, 0x10f0, 0xeb3c, 0x1, 0x0);
        gbc.writeMem(0xa537, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9fc, gbc.sp());
        EXPECT(0xa539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa537));
        EXPECT(0x59, gbc.readMem(0xa538));
        // CB 59 030F
        gbc.setState(0xcbb3, 0x791d, 0x5070, 0x2b2c, 0xdb89, 0xff3, 0x1, 0x1);
        gbc.writeMem(0xcbb3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x791d, gbc.sp());
        EXPECT(0xcbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb3));
        EXPECT(0x59, gbc.readMem(0xcbb4));
        // CB 59 0310
        gbc.setState(0x40df, 0xb882, 0x76f0, 0xfb00, 0x852e, 0xd009, 0x0, 0x1);
        gbc.writeMem(0x40df, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb882, gbc.sp());
        EXPECT(0x40e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0311
        gbc.setState(0xa3aa, 0x1c15, 0xda0, 0x5ea6, 0xd29e, 0xfaeb, 0x1, 0x1);
        gbc.writeMem(0xa3aa, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1c15, gbc.sp());
        EXPECT(0xa3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3aa));
        EXPECT(0x59, gbc.readMem(0xa3ab));
        // CB 59 0312
        gbc.setState(0xa667, 0xe91, 0x7880, 0x2a17, 0xdd19, 0xbfb8, 0x1, 0x1);
        gbc.writeMem(0xa667, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe91, gbc.sp());
        EXPECT(0xa669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa667));
        EXPECT(0x59, gbc.readMem(0xa668));
        // CB 59 0313
        gbc.setState(0x9aa1, 0xcb3c, 0xcf60, 0x7832, 0x3740, 0x9cfe, 0x0, 0x0);
        gbc.writeMem(0x9aa1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0x9aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa1));
        EXPECT(0x59, gbc.readMem(0x9aa2));
        // CB 59 0314
        gbc.setState(0x3e3a, 0x9eb3, 0xabb0, 0x727, 0x29e, 0x6cfc, 0x0, 0x0);
        gbc.writeMem(0x3e3a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0x3e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0315
        gbc.setState(0xedb9, 0x40e1, 0xb0, 0x49be, 0xf9ad, 0x6e3f, 0x1, 0x0);
        gbc.writeMem(0xedb9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0xedbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb9));
        EXPECT(0x59, gbc.readMem(0xedba));
        // CB 59 0317
        gbc.setState(0xce56, 0xb0d0, 0x9280, 0x7f70, 0x674c, 0x7535, 0x1, 0x1);
        gbc.writeMem(0xce56, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb0d0, gbc.sp());
        EXPECT(0xce58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce56));
        EXPECT(0x59, gbc.readMem(0xce57));
        // CB 59 0318
        gbc.setState(0xabd2, 0x9ea1, 0x3090, 0x8083, 0xbf56, 0xc30d, 0x1, 0x1);
        gbc.writeMem(0xabd2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd2));
        EXPECT(0x59, gbc.readMem(0xabd3));
        // CB 59 0319
        gbc.setState(0x3d12, 0x283d, 0xd4a0, 0x728f, 0x1e11, 0x92c0, 0x1, 0x1);
        gbc.writeMem(0x3d12, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x283d, gbc.sp());
        EXPECT(0x3d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 031A
        gbc.setState(0xb29d, 0x4ccb, 0x2280, 0x4d43, 0xbbbf, 0x559, 0x0, 0x0);
        gbc.writeMem(0xb29d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29d));
        EXPECT(0x59, gbc.readMem(0xb29e));
        // CB 59 031B
        gbc.setState(0x99a2, 0x60b4, 0x6020, 0x426e, 0x4a28, 0xfc68, 0x0, 0x0);
        gbc.writeMem(0x99a2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x60b4, gbc.sp());
        EXPECT(0x99a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a2));
        EXPECT(0x59, gbc.readMem(0x99a3));
        // CB 59 031C
        gbc.setState(0x8ad3, 0xed1e, 0x1fc0, 0x46f0, 0x3da4, 0x9fa0, 0x1, 0x0);
        gbc.writeMem(0x8ad3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xed1e, gbc.sp());
        EXPECT(0x8ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad3));
        EXPECT(0x59, gbc.readMem(0x8ad4));
        // CB 59 031F
        gbc.setState(0x7b9c, 0x6f5f, 0xaf50, 0x15ec, 0x4a79, 0xc714, 0x0, 0x1);
        gbc.writeMem(0x7b9c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6f5f, gbc.sp());
        EXPECT(0x7b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0320
        gbc.setState(0x52fd, 0xfc4f, 0x7e0, 0x5cd8, 0xd3e9, 0x5254, 0x0, 0x0);
        gbc.writeMem(0x52fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfc4f, gbc.sp());
        EXPECT(0x52ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0321
        gbc.setState(0x9468, 0x3443, 0xc5e0, 0x825b, 0x893d, 0xc147, 0x0, 0x1);
        gbc.writeMem(0x9468, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0x946a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9468));
        EXPECT(0x59, gbc.readMem(0x9469));
        // CB 59 0322
        gbc.setState(0x7c12, 0x4845, 0x9ea0, 0x9b62, 0xd737, 0xf6a1, 0x0, 0x1);
        gbc.writeMem(0x7c12, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4845, gbc.sp());
        EXPECT(0x7c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0323
        gbc.setState(0x7b60, 0xa10c, 0x9910, 0x4b9c, 0xdd37, 0x6020, 0x0, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0324
        gbc.setState(0x7cf8, 0x34e4, 0x4a90, 0x271b, 0xf3c, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0x7cf8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x34e4, gbc.sp());
        EXPECT(0x7cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0325
        gbc.setState(0x8361, 0x7507, 0x36b0, 0xe05, 0x66e4, 0xf99e, 0x1, 0x1);
        gbc.writeMem(0x8361, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0x8363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8361));
        EXPECT(0x59, gbc.readMem(0x8362));
        // CB 59 0326
        gbc.setState(0x1e7a, 0x1cb7, 0x2630, 0xed5f, 0xe64b, 0x4778, 0x1, 0x1);
        gbc.writeMem(0x1e7a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1cb7, gbc.sp());
        EXPECT(0x1e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0327
        gbc.setState(0x35f1, 0xd350, 0x67c0, 0x82c3, 0xce54, 0x51ae, 0x0, 0x1);
        gbc.writeMem(0x35f1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd350, gbc.sp());
        EXPECT(0x35f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0328
        gbc.setState(0xeb5f, 0x25b9, 0x40c0, 0x3dfe, 0x3d99, 0x9629, 0x0, 0x1);
        gbc.writeMem(0xeb5f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x25b9, gbc.sp());
        EXPECT(0xeb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5f));
        EXPECT(0x59, gbc.readMem(0xeb60));
        // CB 59 0329
        gbc.setState(0x29d2, 0x604c, 0x4b80, 0x958a, 0x4262, 0x9c94, 0x0, 0x1);
        gbc.writeMem(0x29d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x604c, gbc.sp());
        EXPECT(0x29d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 032A
        gbc.setState(0xe161, 0x2c6, 0x85e0, 0x45b, 0xa7ed, 0x1d6b, 0x0, 0x0);
        gbc.writeMem(0xe161, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2c6, gbc.sp());
        EXPECT(0xe163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe161));
        EXPECT(0x59, gbc.readMem(0xe162));
        // CB 59 032B
        gbc.setState(0x1d2b, 0x8662, 0xfa20, 0xd0f3, 0xaeda, 0x4183, 0x0, 0x0);
        gbc.writeMem(0x1d2b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8662, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 032C
        gbc.setState(0xcc22, 0x1669, 0x81a0, 0x625a, 0x270f, 0xe9a7, 0x0, 0x1);
        gbc.writeMem(0xcc22, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1669, gbc.sp());
        EXPECT(0xcc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc22));
        EXPECT(0x59, gbc.readMem(0xcc23));
        // CB 59 032D
        gbc.setState(0x272, 0xd701, 0x2040, 0x32f9, 0x7c41, 0x55e8, 0x1, 0x0);
        gbc.writeMem(0x272, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0x274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 032E
        gbc.setState(0x79f7, 0x1ff2, 0xd310, 0x8e36, 0x1759, 0x1292, 0x0, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0x79f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 032F
        gbc.setState(0x7514, 0x97f3, 0x9940, 0xfc6c, 0xee0e, 0xf911, 0x0, 0x0);
        gbc.writeMem(0x7514, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x97f3, gbc.sp());
        EXPECT(0x7516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0330
        gbc.setState(0xb00, 0x8a8c, 0xae40, 0xf68d, 0x72a1, 0xb9ed, 0x1, 0x0);
        gbc.writeMem(0xb00, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8a8c, gbc.sp());
        EXPECT(0xb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0331
        gbc.setState(0x4e3b, 0x71bb, 0x7d60, 0xee04, 0x3b85, 0xc147, 0x1, 0x0);
        gbc.writeMem(0x4e3b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x71bb, gbc.sp());
        EXPECT(0x4e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0332
        gbc.setState(0xac27, 0x916f, 0xbbc0, 0xe5f6, 0xe094, 0xccd7, 0x1, 0x0);
        gbc.writeMem(0xac27, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x916f, gbc.sp());
        EXPECT(0xac29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac27));
        EXPECT(0x59, gbc.readMem(0xac28));
        // CB 59 0333
        gbc.setState(0x93d3, 0x2322, 0x8ca0, 0x1ea3, 0x3696, 0xa9eb, 0x0, 0x1);
        gbc.writeMem(0x93d3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2322, gbc.sp());
        EXPECT(0x93d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d3));
        EXPECT(0x59, gbc.readMem(0x93d4));
        // CB 59 0334
        gbc.setState(0x887a, 0x805a, 0xb930, 0xd446, 0xca00, 0x76f1, 0x0, 0x0);
        gbc.writeMem(0x887a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x887c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887a));
        EXPECT(0x59, gbc.readMem(0x887b));
        // CB 59 0335
        gbc.setState(0x97cd, 0x3b30, 0xba50, 0xa717, 0x2adb, 0x717d, 0x0, 0x1);
        gbc.writeMem(0x97cd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3b30, gbc.sp());
        EXPECT(0x97cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cd));
        EXPECT(0x59, gbc.readMem(0x97ce));
        // CB 59 0336
        gbc.setState(0x67e5, 0xbe0d, 0x8670, 0x410d, 0x57d1, 0x388b, 0x0, 0x1);
        gbc.writeMem(0x67e5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbe0d, gbc.sp());
        EXPECT(0x67e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0337
        gbc.setState(0x3f20, 0x7b32, 0xd660, 0xf487, 0x839f, 0x34dd, 0x1, 0x1);
        gbc.writeMem(0x3f20, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7b32, gbc.sp());
        EXPECT(0x3f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0339
        gbc.setState(0xa837, 0xd728, 0xcfa0, 0x80fa, 0x2428, 0xf414, 0x1, 0x1);
        gbc.writeMem(0xa837, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd728, gbc.sp());
        EXPECT(0xa839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa837));
        EXPECT(0x59, gbc.readMem(0xa838));
        // CB 59 033A
        gbc.setState(0xacec, 0xb5e4, 0xe390, 0x9ac0, 0x5cab, 0x7e17, 0x1, 0x0);
        gbc.writeMem(0xacec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb5e4, gbc.sp());
        EXPECT(0xacee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacec));
        EXPECT(0x59, gbc.readMem(0xaced));
        // CB 59 033C
        gbc.setState(0x2a44, 0xadce, 0x190, 0xb7ab, 0xf6f, 0xb0aa, 0x1, 0x0);
        gbc.writeMem(0x2a44, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xadce, gbc.sp());
        EXPECT(0x2a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 033D
        gbc.setState(0x12cd, 0x6ff9, 0xe000, 0xd330, 0x538f, 0xb5f2, 0x0, 0x0);
        gbc.writeMem(0x12cd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0x12cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 033E
        gbc.setState(0x3fcb, 0x5229, 0x2440, 0xc0d, 0xe4a0, 0x64ea, 0x1, 0x0);
        gbc.writeMem(0x3fcb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5229, gbc.sp());
        EXPECT(0x3fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0340
        gbc.setState(0x326f, 0x1776, 0xcf10, 0x3f4f, 0xbaeb, 0x2369, 0x1, 0x0);
        gbc.writeMem(0x326f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1776, gbc.sp());
        EXPECT(0x3271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0341
        gbc.setState(0x9367, 0x82dd, 0xf230, 0x6cf2, 0x867d, 0x6d3b, 0x0, 0x0);
        gbc.writeMem(0x9367, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0x9369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9367));
        EXPECT(0x59, gbc.readMem(0x9368));
        // CB 59 0342
        gbc.setState(0x2637, 0xd909, 0x1780, 0xa72c, 0x126b, 0xa32b, 0x0, 0x1);
        gbc.writeMem(0x2637, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd909, gbc.sp());
        EXPECT(0x2639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0343
        gbc.setState(0x863, 0x76a9, 0xe4f0, 0xd4cf, 0x9187, 0x126f, 0x1, 0x1);
        gbc.writeMem(0x863, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0344
        gbc.setState(0xd5c0, 0xe791, 0xa290, 0xf0c2, 0x6be6, 0xea10, 0x0, 0x0);
        gbc.writeMem(0xd5c0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe791, gbc.sp());
        EXPECT(0xd5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c0));
        EXPECT(0x59, gbc.readMem(0xd5c1));
        // CB 59 0345
        gbc.setState(0xb623, 0xea7a, 0x8dd0, 0xfda5, 0xaf43, 0x7833, 0x1, 0x0);
        gbc.writeMem(0xb623, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xea7a, gbc.sp());
        EXPECT(0xb625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb623));
        EXPECT(0x59, gbc.readMem(0xb624));
        // CB 59 0346
        gbc.setState(0x2a5c, 0xee67, 0x6110, 0x97c1, 0xfbd0, 0xcba8, 0x0, 0x1);
        gbc.writeMem(0x2a5c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xee67, gbc.sp());
        EXPECT(0x2a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0348
        gbc.setState(0xa259, 0x9999, 0x80f0, 0x24d8, 0x9769, 0x6ff8, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9999, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa259));
        EXPECT(0x59, gbc.readMem(0xa25a));
        // CB 59 0349
        gbc.setState(0xda32, 0xc251, 0x77c0, 0xe71a, 0xd542, 0x4a17, 0x1, 0x1);
        gbc.writeMem(0xda32, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc251, gbc.sp());
        EXPECT(0xda34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda32));
        EXPECT(0x59, gbc.readMem(0xda33));
        // CB 59 034B
        gbc.setState(0x82e3, 0xe802, 0x5820, 0xa589, 0xf504, 0x973c, 0x1, 0x0);
        gbc.writeMem(0x82e3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe802, gbc.sp());
        EXPECT(0x82e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e3));
        EXPECT(0x59, gbc.readMem(0x82e4));
        // CB 59 034D
        gbc.setState(0x565f, 0x766d, 0x3ca0, 0x1f6a, 0x3361, 0x6c68, 0x1, 0x0);
        gbc.writeMem(0x565f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 034E
        gbc.setState(0x8913, 0x9f9, 0xf9e0, 0xd446, 0xbc11, 0xf731, 0x0, 0x0);
        gbc.writeMem(0x8913, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x8915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8913));
        EXPECT(0x59, gbc.readMem(0x8914));
        // CB 59 034F
        gbc.setState(0xeea0, 0xcdb7, 0xe8f0, 0x5983, 0xda1b, 0x95de, 0x1, 0x0);
        gbc.writeMem(0xeea0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcdb7, gbc.sp());
        EXPECT(0xeea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea0));
        EXPECT(0x59, gbc.readMem(0xeea1));
        // CB 59 0350
        gbc.setState(0xd564, 0x98a1, 0x8d0, 0x13cc, 0x383b, 0x452c, 0x0, 0x0);
        gbc.writeMem(0xd564, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x98a1, gbc.sp());
        EXPECT(0xd566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd564));
        EXPECT(0x59, gbc.readMem(0xd565));
        // CB 59 0351
        gbc.setState(0x5c5b, 0x9639, 0x2ae0, 0x1d4a, 0x9e7a, 0x7210, 0x0, 0x0);
        gbc.writeMem(0x5c5b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9639, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0352
        gbc.setState(0x73cb, 0xe18b, 0xe490, 0xcb42, 0x9030, 0xffe2, 0x1, 0x0);
        gbc.writeMem(0x73cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe18b, gbc.sp());
        EXPECT(0x73cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0353
        gbc.setState(0x62c9, 0x8923, 0x57b0, 0x3614, 0x7052, 0x28ee, 0x1, 0x1);
        gbc.writeMem(0x62c9, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8923, gbc.sp());
        EXPECT(0x62cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0354
        gbc.setState(0xa1fd, 0xb368, 0x6700, 0xf8e3, 0xee6e, 0xbb00, 0x1, 0x0);
        gbc.writeMem(0xa1fd, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb368, gbc.sp());
        EXPECT(0xa1ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fd));
        EXPECT(0x59, gbc.readMem(0xa1fe));
        // CB 59 0355
        gbc.setState(0x9977, 0x178f, 0xcbb0, 0x8ab1, 0x4e3b, 0x6fbc, 0x0, 0x1);
        gbc.writeMem(0x9977, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x178f, gbc.sp());
        EXPECT(0x9979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9977));
        EXPECT(0x59, gbc.readMem(0x9978));
        // CB 59 0356
        gbc.setState(0xb554, 0x584a, 0x26a0, 0x6010, 0xcaaa, 0xb40b, 0x1, 0x1);
        gbc.writeMem(0xb554, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x584a, gbc.sp());
        EXPECT(0xb556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb554));
        EXPECT(0x59, gbc.readMem(0xb555));
        // CB 59 0357
        gbc.setState(0xab5d, 0xbb55, 0x8380, 0x6511, 0x567f, 0xfdbc, 0x1, 0x0);
        gbc.writeMem(0xab5d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbb55, gbc.sp());
        EXPECT(0xab5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5d));
        EXPECT(0x59, gbc.readMem(0xab5e));
        // CB 59 0358
        gbc.setState(0x3cb2, 0x28de, 0x3f30, 0x8634, 0x4cd9, 0x957a, 0x0, 0x0);
        gbc.writeMem(0x3cb2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x28de, gbc.sp());
        EXPECT(0x3cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0359
        gbc.setState(0x9e20, 0xed2e, 0xb050, 0xcf39, 0xa250, 0x47c6, 0x0, 0x0);
        gbc.writeMem(0x9e20, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xed2e, gbc.sp());
        EXPECT(0x9e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e20));
        EXPECT(0x59, gbc.readMem(0x9e21));
        // CB 59 035B
        gbc.setState(0x5cf8, 0x9f14, 0x1900, 0x98ab, 0xe4c0, 0x7f22, 0x1, 0x1);
        gbc.writeMem(0x5cf8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9f14, gbc.sp());
        EXPECT(0x5cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 035C
        gbc.setState(0x98bc, 0x1efa, 0xcc60, 0x9fdc, 0x7aee, 0x6d5b, 0x0, 0x0);
        gbc.writeMem(0x98bc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0x98be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bc));
        EXPECT(0x59, gbc.readMem(0x98bd));
        // CB 59 035D
        gbc.setState(0x33ec, 0x3f4, 0xc570, 0x4c6a, 0x3e5e, 0xa64b, 0x0, 0x1);
        gbc.writeMem(0x33ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0x33ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 035E
        gbc.setState(0x2c6a, 0x2c6d, 0x1df0, 0x7a0c, 0x94d3, 0x227c, 0x1, 0x1);
        gbc.writeMem(0x2c6a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2c6d, gbc.sp());
        EXPECT(0x2c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 035F
        gbc.setState(0x2ff1, 0xa4e8, 0x7ca0, 0x7712, 0x3a92, 0xdefa, 0x0, 0x0);
        gbc.writeMem(0x2ff1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa4e8, gbc.sp());
        EXPECT(0x2ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0360
        gbc.setState(0x2653, 0x57c8, 0x3c90, 0x5e92, 0x96e6, 0x7fef, 0x1, 0x1);
        gbc.writeMem(0x2653, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x57c8, gbc.sp());
        EXPECT(0x2655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0361
        gbc.setState(0x46b3, 0xe6eb, 0x9320, 0x60ef, 0x5d45, 0x4dbd, 0x1, 0x1);
        gbc.writeMem(0x46b3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe6eb, gbc.sp());
        EXPECT(0x46b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0362
        gbc.setState(0x4605, 0x4e60, 0xf670, 0x145c, 0x9433, 0x5b7, 0x1, 0x1);
        gbc.writeMem(0x4605, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4e60, gbc.sp());
        EXPECT(0x4607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0363
        gbc.setState(0x814, 0xb1e8, 0x4f80, 0x81ca, 0xa9, 0xad7b, 0x1, 0x0);
        gbc.writeMem(0x814, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0364
        gbc.setState(0x542a, 0x3200, 0xc7b0, 0x1cbd, 0xeac8, 0xb0c4, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0x542c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0365
        gbc.setState(0x1fd5, 0x5dec, 0xdc80, 0xb13e, 0xa068, 0xc715, 0x1, 0x0);
        gbc.writeMem(0x1fd5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5dec, gbc.sp());
        EXPECT(0x1fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0366
        gbc.setState(0x1b19, 0x6c09, 0xa9f0, 0x5779, 0x6664, 0x7110, 0x1, 0x0);
        gbc.writeMem(0x1b19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6c09, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0367
        gbc.setState(0x92d1, 0xfd6, 0xbe90, 0xfe28, 0x2044, 0x8b1d, 0x0, 0x1);
        gbc.writeMem(0x92d1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0x92d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d1));
        EXPECT(0x59, gbc.readMem(0x92d2));
        // CB 59 0368
        gbc.setState(0x7660, 0x4000, 0x19d0, 0x648b, 0x8fce, 0x656c, 0x1, 0x1);
        gbc.writeMem(0x7660, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0x7662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 036A
        gbc.setState(0x4d7f, 0x4d09, 0xbc50, 0xb091, 0x51e, 0x139f, 0x1, 0x1);
        gbc.writeMem(0x4d7f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4d09, gbc.sp());
        EXPECT(0x4d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 036B
        gbc.setState(0x1fb7, 0x96a4, 0x1fd0, 0xfe5a, 0xc61a, 0x371c, 0x1, 0x0);
        gbc.writeMem(0x1fb7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x96a4, gbc.sp());
        EXPECT(0x1fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 036C
        gbc.setState(0x3da1, 0xf542, 0x7d90, 0x843e, 0x5d6f, 0x2204, 0x0, 0x0);
        gbc.writeMem(0x3da1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf542, gbc.sp());
        EXPECT(0x3da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 036D
        gbc.setState(0xd1e2, 0x9c2c, 0x5ac0, 0x9f8b, 0x4b2d, 0x45ab, 0x1, 0x0);
        gbc.writeMem(0xd1e2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9c2c, gbc.sp());
        EXPECT(0xd1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e2));
        EXPECT(0x59, gbc.readMem(0xd1e3));
        // CB 59 036E
        gbc.setState(0xa206, 0x696a, 0x3640, 0xd944, 0xbf4b, 0xb938, 0x1, 0x0);
        gbc.writeMem(0xa206, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0xa208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa206));
        EXPECT(0x59, gbc.readMem(0xa207));
        // CB 59 036F
        gbc.setState(0xbc91, 0x8ff5, 0xaa20, 0x14fe, 0xf6a6, 0x96c, 0x1, 0x1);
        gbc.writeMem(0xbc91, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0xbc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc91));
        EXPECT(0x59, gbc.readMem(0xbc92));
        // CB 59 0370
        gbc.setState(0xa2d0, 0xeca6, 0xf5f0, 0xb6e4, 0x891f, 0x1ffe, 0x1, 0x0);
        gbc.writeMem(0xa2d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeca6, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d0));
        EXPECT(0x59, gbc.readMem(0xa2d1));
        // CB 59 0371
        gbc.setState(0x40c8, 0x9b70, 0x4510, 0x738e, 0xae98, 0x337f, 0x1, 0x1);
        gbc.writeMem(0x40c8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0x40ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0372
        gbc.setState(0xb964, 0x229a, 0xf220, 0xd1fa, 0xde9e, 0x5b0d, 0x0, 0x1);
        gbc.writeMem(0xb964, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x229a, gbc.sp());
        EXPECT(0xb966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb964));
        EXPECT(0x59, gbc.readMem(0xb965));
        // CB 59 0373
        gbc.setState(0x92de, 0x5bab, 0x700, 0x1b2e, 0x5a0, 0x7dee, 0x1, 0x0);
        gbc.writeMem(0x92de, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5bab, gbc.sp());
        EXPECT(0x92e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92de));
        EXPECT(0x59, gbc.readMem(0x92df));
        // CB 59 0374
        gbc.setState(0xc76e, 0xf07, 0xac0, 0x231, 0x24c7, 0x1ebf, 0x0, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf07, gbc.sp());
        EXPECT(0xc770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76e));
        EXPECT(0x59, gbc.readMem(0xc76f));
        // CB 59 0375
        gbc.setState(0x757b, 0x93bd, 0x56d0, 0x747e, 0xb85e, 0x9e4, 0x1, 0x0);
        gbc.writeMem(0x757b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x93bd, gbc.sp());
        EXPECT(0x757d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0376
        gbc.setState(0x8b19, 0x7c4, 0xe790, 0x9ffc, 0x7ac1, 0x2328, 0x1, 0x1);
        gbc.writeMem(0x8b19, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7c4, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b19));
        EXPECT(0x59, gbc.readMem(0x8b1a));
        // CB 59 0377
        gbc.setState(0x517a, 0xdf10, 0xe950, 0xd343, 0xa49c, 0x9ade, 0x0, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdf10, gbc.sp());
        EXPECT(0x517c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0378
        gbc.setState(0x52d2, 0x86f0, 0x5320, 0x2ea6, 0x1da3, 0xe14f, 0x0, 0x1);
        gbc.writeMem(0x52d2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x86f0, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0379
        gbc.setState(0xd94c, 0xe8cb, 0x9090, 0x5c8e, 0x7708, 0x884b, 0x1, 0x0);
        gbc.writeMem(0xd94c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe8cb, gbc.sp());
        EXPECT(0xd94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94c));
        EXPECT(0x59, gbc.readMem(0xd94d));
        // CB 59 037A
        gbc.setState(0x116e, 0x966b, 0xe740, 0xcf81, 0x1350, 0x80fd, 0x0, 0x0);
        gbc.writeMem(0x116e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x966b, gbc.sp());
        EXPECT(0x1170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 037B
        gbc.setState(0x7bb7, 0x5684, 0x6b90, 0xb7fd, 0x3ce8, 0xb380, 0x1, 0x1);
        gbc.writeMem(0x7bb7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5684, gbc.sp());
        EXPECT(0x7bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 037C
        gbc.setState(0xe8fb, 0xbafe, 0xc0e0, 0x1226, 0x80f5, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0xe8fb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbafe, gbc.sp());
        EXPECT(0xe8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8fb));
        EXPECT(0x59, gbc.readMem(0xe8fc));
        // CB 59 037F
        gbc.setState(0x1095, 0x87cc, 0xfbb0, 0xb7a4, 0xef93, 0xe478, 0x1, 0x0);
        gbc.writeMem(0x1095, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x87cc, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0380
        gbc.setState(0x228, 0x3459, 0x1950, 0xe744, 0x4c38, 0xb75b, 0x1, 0x1);
        gbc.writeMem(0x228, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3459, gbc.sp());
        EXPECT(0x22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0381
        gbc.setState(0x9a65, 0x1761, 0xa00, 0xecd0, 0xf783, 0xc18d, 0x1, 0x0);
        gbc.writeMem(0x9a65, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1761, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a65));
        EXPECT(0x59, gbc.readMem(0x9a66));
        // CB 59 0382
        gbc.setState(0x7a71, 0xa643, 0x6220, 0xf5ae, 0x5dda, 0x96d9, 0x0, 0x0);
        gbc.writeMem(0x7a71, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa643, gbc.sp());
        EXPECT(0x7a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0383
        gbc.setState(0xb69c, 0x925, 0xa350, 0x93d6, 0x2df4, 0xd439, 0x1, 0x1);
        gbc.writeMem(0xb69c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0xb69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69c));
        EXPECT(0x59, gbc.readMem(0xb69d));
        // CB 59 0385
        gbc.setState(0xba5, 0xa30e, 0x21b0, 0x881d, 0xc91c, 0x95ba, 0x0, 0x1);
        gbc.writeMem(0xba5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa30e, gbc.sp());
        EXPECT(0xba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 0386
        gbc.setState(0x846b, 0x403f, 0xd520, 0xf0db, 0xedb7, 0xc722, 0x1, 0x0);
        gbc.writeMem(0x846b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x403f, gbc.sp());
        EXPECT(0x846d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846b));
        EXPECT(0x59, gbc.readMem(0x846c));
        // CB 59 0387
        gbc.setState(0x83be, 0x1bac, 0x7f10, 0x17d6, 0x663f, 0x2069, 0x1, 0x0);
        gbc.writeMem(0x83be, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1bac, gbc.sp());
        EXPECT(0x83c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83be));
        EXPECT(0x59, gbc.readMem(0x83bf));
        // CB 59 0388
        gbc.setState(0xad5c, 0x4380, 0xa2d0, 0x5410, 0x37dd, 0xfccf, 0x1, 0x0);
        gbc.writeMem(0xad5c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4380, gbc.sp());
        EXPECT(0xad5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5c));
        EXPECT(0x59, gbc.readMem(0xad5d));
        // CB 59 0389
        gbc.setState(0xdaac, 0x3759, 0x6760, 0x72ec, 0xa70, 0xb5f, 0x0, 0x1);
        gbc.writeMem(0xdaac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3759, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaac));
        EXPECT(0x59, gbc.readMem(0xdaad));
        // CB 59 038A
        gbc.setState(0xe274, 0xce32, 0xd0a0, 0x1f9b, 0x4fa5, 0x69ae, 0x0, 0x1);
        gbc.writeMem(0xe274, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xce32, gbc.sp());
        EXPECT(0xe276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe274));
        EXPECT(0x59, gbc.readMem(0xe275));
        // CB 59 038B
        gbc.setState(0x1cc3, 0x79, 0x9f40, 0x3889, 0xbcf0, 0xd651, 0x1, 0x0);
        gbc.writeMem(0x1cc3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x79, gbc.sp());
        EXPECT(0x1cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 038C
        gbc.setState(0x95b8, 0x1937, 0xb80, 0x1755, 0x1ddb, 0xd5a5, 0x1, 0x0);
        gbc.writeMem(0x95b8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1937, gbc.sp());
        EXPECT(0x95ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b8));
        EXPECT(0x59, gbc.readMem(0x95b9));
        // CB 59 038D
        gbc.setState(0xd110, 0x5b28, 0xa7b0, 0xe146, 0x4bf5, 0x6fca, 0x0, 0x0);
        gbc.writeMem(0xd110, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5b28, gbc.sp());
        EXPECT(0xd112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd110));
        EXPECT(0x59, gbc.readMem(0xd111));
        // CB 59 038F
        gbc.setState(0xbd45, 0x8943, 0xefe0, 0x1434, 0xad63, 0x9b4b, 0x1, 0x0);
        gbc.writeMem(0xbd45, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8943, gbc.sp());
        EXPECT(0xbd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd45));
        EXPECT(0x59, gbc.readMem(0xbd46));
        // CB 59 0390
        gbc.setState(0x39ec, 0x376a, 0x3e60, 0x8557, 0xaa6d, 0x7ae4, 0x0, 0x0);
        gbc.writeMem(0x39ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x376a, gbc.sp());
        EXPECT(0x39ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0391
        gbc.setState(0xbd17, 0x24b2, 0x1460, 0xcd86, 0xb5a1, 0xc526, 0x1, 0x0);
        gbc.writeMem(0xbd17, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x24b2, gbc.sp());
        EXPECT(0xbd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd17));
        EXPECT(0x59, gbc.readMem(0xbd18));
        // CB 59 0392
        gbc.setState(0x896a, 0x66b0, 0xcb60, 0x7b2c, 0xbb57, 0x21c2, 0x1, 0x0);
        gbc.writeMem(0x896a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0x896c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896a));
        EXPECT(0x59, gbc.readMem(0x896b));
        // CB 59 0393
        gbc.setState(0xa033, 0x252, 0xb7a0, 0x7640, 0x42f, 0x53de, 0x0, 0x0);
        gbc.writeMem(0xa033, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x252, gbc.sp());
        EXPECT(0xa035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa033));
        EXPECT(0x59, gbc.readMem(0xa034));
        // CB 59 0394
        gbc.setState(0x9b6a, 0xbd9e, 0xee30, 0x8ab3, 0xcb12, 0xa915, 0x1, 0x1);
        gbc.writeMem(0x9b6a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6a));
        EXPECT(0x59, gbc.readMem(0x9b6b));
        // CB 59 0395
        gbc.setState(0x50b, 0xd250, 0xa480, 0xfa1d, 0x4df8, 0xbc6a, 0x1, 0x1);
        gbc.writeMem(0x50b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd250, gbc.sp());
        EXPECT(0x50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 0397
        gbc.setState(0xe80e, 0x2589, 0x50e0, 0x388c, 0x1e44, 0xf6e6, 0x0, 0x1);
        gbc.writeMem(0xe80e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2589, gbc.sp());
        EXPECT(0xe810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80e));
        EXPECT(0x59, gbc.readMem(0xe80f));
        // CB 59 0398
        gbc.setState(0xde80, 0x89ce, 0xa730, 0x39f2, 0xf18d, 0x8a85, 0x0, 0x0);
        gbc.writeMem(0xde80, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0xde82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde80));
        EXPECT(0x59, gbc.readMem(0xde81));
        // CB 59 0399
        gbc.setState(0x6546, 0x325a, 0xc10, 0x485c, 0x674d, 0x1bd5, 0x0, 0x0);
        gbc.writeMem(0x6546, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x325a, gbc.sp());
        EXPECT(0x6548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 039A
        gbc.setState(0xc96c, 0xf83e, 0x5370, 0xa180, 0x8c2b, 0xcd39, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf83e, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96c));
        EXPECT(0x59, gbc.readMem(0xc96d));
        // CB 59 039B
        gbc.setState(0x6dbe, 0x3881, 0x7550, 0x208b, 0x6ab4, 0xd9c4, 0x0, 0x0);
        gbc.writeMem(0x6dbe, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3881, gbc.sp());
        EXPECT(0x6dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 039C
        gbc.setState(0x1a5f, 0x4af6, 0x38f0, 0x9cc4, 0x308c, 0x1b86, 0x0, 0x0);
        gbc.writeMem(0x1a5f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4af6, gbc.sp());
        EXPECT(0x1a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 039D
        gbc.setState(0xa887, 0x17d4, 0x2930, 0xce7f, 0x9e1f, 0x5a88, 0x1, 0x0);
        gbc.writeMem(0xa887, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0xa889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa887));
        EXPECT(0x59, gbc.readMem(0xa888));
        // CB 59 039E
        gbc.setState(0x8a1b, 0xeff6, 0x59a0, 0x6d92, 0x1140, 0x7f21, 0x1, 0x1);
        gbc.writeMem(0x8a1b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xeff6, gbc.sp());
        EXPECT(0x8a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1b));
        EXPECT(0x59, gbc.readMem(0x8a1c));
        // CB 59 039F
        gbc.setState(0xb2ec, 0xb52d, 0xa090, 0x635a, 0xf759, 0xa9dd, 0x1, 0x1);
        gbc.writeMem(0xb2ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb52d, gbc.sp());
        EXPECT(0xb2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ec));
        EXPECT(0x59, gbc.readMem(0xb2ed));
        // CB 59 03A0
        gbc.setState(0xb59c, 0x4cd7, 0xb410, 0xaed5, 0x5fc5, 0xf89f, 0x1, 0x0);
        gbc.writeMem(0xb59c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4cd7, gbc.sp());
        EXPECT(0xb59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59c));
        EXPECT(0x59, gbc.readMem(0xb59d));
        // CB 59 03A2
        gbc.setState(0x86b, 0xf4c4, 0xddf0, 0x15fe, 0x8af8, 0x267d, 0x1, 0x0);
        gbc.writeMem(0x86b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf4c4, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03A3
        gbc.setState(0x861f, 0x149d, 0x1030, 0xeeb7, 0xe593, 0xb357, 0x0, 0x0);
        gbc.writeMem(0x861f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x149d, gbc.sp());
        EXPECT(0x8621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861f));
        EXPECT(0x59, gbc.readMem(0x8620));
        // CB 59 03A4
        gbc.setState(0x9d1f, 0x2ccc, 0xe370, 0xe3e9, 0xef19, 0xa0bb, 0x1, 0x0);
        gbc.writeMem(0x9d1f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ccc, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1f));
        EXPECT(0x59, gbc.readMem(0x9d20));
        // CB 59 03A5
        gbc.setState(0xe36f, 0x83, 0x88c0, 0x924, 0xeeca, 0xa025, 0x1, 0x1);
        gbc.writeMem(0xe36f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x83, gbc.sp());
        EXPECT(0xe371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36f));
        EXPECT(0x59, gbc.readMem(0xe370));
        // CB 59 03A6
        gbc.setState(0x7326, 0x2512, 0xb4e0, 0x223e, 0xbc1b, 0x7c52, 0x1, 0x1);
        gbc.writeMem(0x7326, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2512, gbc.sp());
        EXPECT(0x7328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03A7
        gbc.setState(0x1142, 0xe57d, 0xd8e0, 0xe3f2, 0x9137, 0xbcf6, 0x0, 0x0);
        gbc.writeMem(0x1142, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0x1144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03A8
        gbc.setState(0x538a, 0x1c8, 0xf770, 0xf998, 0xa0, 0x2d68, 0x1, 0x0);
        gbc.writeMem(0x538a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1c8, gbc.sp());
        EXPECT(0x538c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03A9
        gbc.setState(0xc7a3, 0x8664, 0x12f0, 0xd0d2, 0xb180, 0xe754, 0x0, 0x0);
        gbc.writeMem(0xc7a3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8664, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a3));
        EXPECT(0x59, gbc.readMem(0xc7a4));
        // CB 59 03AA
        gbc.setState(0xd10f, 0x8b98, 0x2720, 0x8009, 0x4185, 0x9813, 0x1, 0x1);
        gbc.writeMem(0xd10f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8b98, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10f));
        EXPECT(0x59, gbc.readMem(0xd110));
        // CB 59 03AB
        gbc.setState(0x9ac, 0x5376, 0xfcc0, 0x782d, 0xaaab, 0x66cf, 0x1, 0x0);
        gbc.writeMem(0x9ac, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0x9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03AC
        gbc.setState(0x7a46, 0xdabf, 0xc5e0, 0x6d54, 0xb823, 0x99a1, 0x0, 0x0);
        gbc.writeMem(0x7a46, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0x7a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03AD
        gbc.setState(0x95c5, 0x6dac, 0x90d0, 0xeb1b, 0xfd62, 0x7549, 0x0, 0x1);
        gbc.writeMem(0x95c5, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6dac, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c5));
        EXPECT(0x59, gbc.readMem(0x95c6));
        // CB 59 03AE
        gbc.setState(0xe461, 0x76c7, 0x2a00, 0xe3ae, 0xc404, 0x999b, 0x0, 0x0);
        gbc.writeMem(0xe461, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x76c7, gbc.sp());
        EXPECT(0xe463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe461));
        EXPECT(0x59, gbc.readMem(0xe462));
        // CB 59 03AF
        gbc.setState(0x766d, 0x9820, 0xe440, 0xd4b5, 0xd5e0, 0x772f, 0x0, 0x1);
        gbc.writeMem(0x766d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9820, gbc.sp());
        EXPECT(0x766f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03B0
        gbc.setState(0xa8e8, 0x1a6a, 0x1440, 0xb454, 0x930b, 0xb32c, 0x0, 0x0);
        gbc.writeMem(0xa8e8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1a6a, gbc.sp());
        EXPECT(0xa8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e8));
        EXPECT(0x59, gbc.readMem(0xa8e9));
        // CB 59 03B1
        gbc.setState(0x22a, 0xa5cc, 0x47c0, 0xce3, 0x2f74, 0x1e93, 0x1, 0x0);
        gbc.writeMem(0x22a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa5cc, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03B2
        gbc.setState(0x2199, 0x385f, 0xc3f0, 0xf208, 0x131, 0xfa49, 0x0, 0x0);
        gbc.writeMem(0x2199, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03B3
        gbc.setState(0x7a81, 0x565d, 0xeb60, 0x3145, 0xf980, 0x1818, 0x0, 0x1);
        gbc.writeMem(0x7a81, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x565d, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03B4
        gbc.setState(0x4e5b, 0x71af, 0xe0f0, 0x8664, 0x7996, 0x70bb, 0x1, 0x0);
        gbc.writeMem(0x4e5b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x71af, gbc.sp());
        EXPECT(0x4e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03B5
        gbc.setState(0xd9d4, 0x7c53, 0x66b0, 0x1aff, 0xb125, 0x1180, 0x1, 0x1);
        gbc.writeMem(0xd9d4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7c53, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d4));
        EXPECT(0x59, gbc.readMem(0xd9d5));
        // CB 59 03B6
        gbc.setState(0x38bc, 0x72f0, 0x7900, 0x1b4f, 0x7d9a, 0x3edf, 0x1, 0x1);
        gbc.writeMem(0x38bc, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x72f0, gbc.sp());
        EXPECT(0x38be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03B7
        gbc.setState(0x307f, 0xe5e, 0x5d50, 0x213a, 0xea25, 0x78ef, 0x0, 0x0);
        gbc.writeMem(0x307f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe5e, gbc.sp());
        EXPECT(0x3081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03B8
        gbc.setState(0x2bcf, 0xa0e, 0x7ea0, 0x5dcc, 0x2176, 0x4324, 0x0, 0x1);
        gbc.writeMem(0x2bcf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa0e, gbc.sp());
        EXPECT(0x2bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03B9
        gbc.setState(0x612e, 0xec0a, 0x7760, 0xadcb, 0x9f7c, 0x2d3a, 0x0, 0x0);
        gbc.writeMem(0x612e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xec0a, gbc.sp());
        EXPECT(0x6130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03BA
        gbc.setState(0xa270, 0x1af2, 0xfcd0, 0x401a, 0xc655, 0x5107, 0x0, 0x0);
        gbc.writeMem(0xa270, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1af2, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa270));
        EXPECT(0x59, gbc.readMem(0xa271));
        // CB 59 03BB
        gbc.setState(0x4136, 0x2f2a, 0x7d60, 0x5941, 0xfedc, 0xe0b4, 0x1, 0x1);
        gbc.writeMem(0x4136, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2f2a, gbc.sp());
        EXPECT(0x4138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03BC
        gbc.setState(0x3ec, 0x4b00, 0x7480, 0x9aea, 0x3bbd, 0x62d9, 0x0, 0x1);
        gbc.writeMem(0x3ec, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4b00, gbc.sp());
        EXPECT(0x3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03BD
        gbc.setState(0xa1cb, 0x5fbd, 0x8d90, 0x2d5a, 0xefec, 0x9a8e, 0x0, 0x0);
        gbc.writeMem(0xa1cb, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5fbd, gbc.sp());
        EXPECT(0xa1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1cb));
        EXPECT(0x59, gbc.readMem(0xa1cc));
        // CB 59 03BE
        gbc.setState(0x95cf, 0x2e0a, 0x1e00, 0x85b5, 0x433e, 0x565a, 0x1, 0x1);
        gbc.writeMem(0x95cf, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2e0a, gbc.sp());
        EXPECT(0x95d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cf));
        EXPECT(0x59, gbc.readMem(0x95d0));
        // CB 59 03BF
        gbc.setState(0x60ae, 0x12af, 0x4460, 0x88ce, 0xb44f, 0x3d3c, 0x0, 0x0);
        gbc.writeMem(0x60ae, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x12af, gbc.sp());
        EXPECT(0x60b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03C0
        gbc.setState(0xe28d, 0x4f94, 0xa310, 0x4a64, 0x34b9, 0xc2d6, 0x0, 0x1);
        gbc.writeMem(0xe28d, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4f94, gbc.sp());
        EXPECT(0xe28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28d));
        EXPECT(0x59, gbc.readMem(0xe28e));
        // CB 59 03C1
        gbc.setState(0x9092, 0x86e, 0x1570, 0x2541, 0x40ba, 0x94ca, 0x1, 0x1);
        gbc.writeMem(0x9092, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x86e, gbc.sp());
        EXPECT(0x9094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9092));
        EXPECT(0x59, gbc.readMem(0x9093));
        // CB 59 03C2
        gbc.setState(0x22a0, 0x8b61, 0xd400, 0x465c, 0xadd6, 0xf0fe, 0x1, 0x0);
        gbc.writeMem(0x22a0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8b61, gbc.sp());
        EXPECT(0x22a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03C3
        gbc.setState(0xb4f7, 0x1d56, 0x30, 0x11aa, 0xef0e, 0xef99, 0x1, 0x1);
        gbc.writeMem(0xb4f7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0xb4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f7));
        EXPECT(0x59, gbc.readMem(0xb4f8));
        // CB 59 03C4
        gbc.setState(0x671e, 0x877e, 0xe370, 0xaa74, 0x3120, 0x7e8, 0x1, 0x0);
        gbc.writeMem(0x671e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x877e, gbc.sp());
        EXPECT(0x6720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03C5
        gbc.setState(0xd48c, 0xf7d5, 0x6f0, 0x30f7, 0x9f2f, 0x14d4, 0x0, 0x0);
        gbc.writeMem(0xd48c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf7d5, gbc.sp());
        EXPECT(0xd48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48c));
        EXPECT(0x59, gbc.readMem(0xd48d));
        // CB 59 03C6
        gbc.setState(0x93f6, 0x830a, 0x5d70, 0xe532, 0x2de3, 0x65c8, 0x0, 0x1);
        gbc.writeMem(0x93f6, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x830a, gbc.sp());
        EXPECT(0x93f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f6));
        EXPECT(0x59, gbc.readMem(0x93f7));
        // CB 59 03C7
        gbc.setState(0xb4d0, 0x125c, 0x4d30, 0x7e36, 0x76f6, 0xe3a4, 0x1, 0x1);
        gbc.writeMem(0xb4d0, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x125c, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d0));
        EXPECT(0x59, gbc.readMem(0xb4d1));
        // CB 59 03C8
        gbc.setState(0x4955, 0xb564, 0x8640, 0x847, 0x87a5, 0xa38, 0x0, 0x1);
        gbc.writeMem(0x4955, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb564, gbc.sp());
        EXPECT(0x4957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03C9
        gbc.setState(0xa827, 0xabb3, 0xd6b0, 0xe0cb, 0xee7e, 0x937b, 0x1, 0x0);
        gbc.writeMem(0xa827, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xabb3, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa827));
        EXPECT(0x59, gbc.readMem(0xa828));
        // CB 59 03CA
        gbc.setState(0xdbd7, 0x288d, 0x2470, 0x116e, 0x64e4, 0x921a, 0x1, 0x0);
        gbc.writeMem(0xdbd7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x288d, gbc.sp());
        EXPECT(0xdbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd7));
        EXPECT(0x59, gbc.readMem(0xdbd8));
        // CB 59 03CC
        gbc.setState(0xd72e, 0x5789, 0xcfd0, 0xdc17, 0x7db5, 0xaa8c, 0x1, 0x1);
        gbc.writeMem(0xd72e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5789, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72e));
        EXPECT(0x59, gbc.readMem(0xd72f));
        // CB 59 03CD
        gbc.setState(0x1a4f, 0x1f4e, 0x4220, 0x5d31, 0x76aa, 0xc829, 0x0, 0x1);
        gbc.writeMem(0x1a4f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1f4e, gbc.sp());
        EXPECT(0x1a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03CE
        gbc.setState(0x9752, 0x66, 0xb130, 0xb009, 0xdeba, 0x7517, 0x1, 0x0);
        gbc.writeMem(0x9752, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x66, gbc.sp());
        EXPECT(0x9754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9752));
        EXPECT(0x59, gbc.readMem(0x9753));
        // CB 59 03CF
        gbc.setState(0x3e7, 0x4615, 0x7b10, 0xfeb4, 0xce22, 0x26ab, 0x0, 0x1);
        gbc.writeMem(0x3e7, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4615, gbc.sp());
        EXPECT(0x3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03D0
        gbc.setState(0x6be1, 0x7c77, 0xdeb0, 0xb931, 0x73d5, 0x45a5, 0x1, 0x0);
        gbc.writeMem(0x6be1, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7c77, gbc.sp());
        EXPECT(0x6be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03D1
        gbc.setState(0xa79f, 0xb093, 0xa3f0, 0x7106, 0x338b, 0x61b7, 0x1, 0x0);
        gbc.writeMem(0xa79f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb093, gbc.sp());
        EXPECT(0xa7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79f));
        EXPECT(0x59, gbc.readMem(0xa7a0));
        // CB 59 03D2
        gbc.setState(0x177b, 0xda77, 0x8970, 0x640a, 0x7087, 0x587f, 0x0, 0x1);
        gbc.writeMem(0x177b, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xda77, gbc.sp());
        EXPECT(0x177d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03D3
        gbc.setState(0xa6ef, 0x15c3, 0x28c0, 0x7c70, 0xc0b7, 0x2c1f, 0x0, 0x0);
        gbc.writeMem(0xa6ef, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0xa6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ef));
        EXPECT(0x59, gbc.readMem(0xa6f0));
        // CB 59 03D4
        gbc.setState(0xb8f3, 0xdb77, 0x2c70, 0x2da6, 0x3e50, 0xd7a0, 0x1, 0x0);
        gbc.writeMem(0xb8f3, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdb77, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f3));
        EXPECT(0x59, gbc.readMem(0xb8f4));
        // CB 59 03D5
        gbc.setState(0x26d4, 0xc3e3, 0x8b90, 0x9c8e, 0x55ad, 0xc38, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0x26d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03D6
        gbc.setState(0x1764, 0x6e7c, 0xc960, 0xdc6, 0x5229, 0xa5eb, 0x0, 0x0);
        gbc.writeMem(0x1764, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6e7c, gbc.sp());
        EXPECT(0x1766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03D7
        gbc.setState(0x386f, 0x5291, 0x7eb0, 0x1758, 0xd8f1, 0x61bc, 0x1, 0x0);
        gbc.writeMem(0x386f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5291, gbc.sp());
        EXPECT(0x3871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03D8
        gbc.setState(0xab8c, 0xb5a0, 0x24c0, 0xa339, 0x38b6, 0x6cc0, 0x1, 0x1);
        gbc.writeMem(0xab8c, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb5a0, gbc.sp());
        EXPECT(0xab8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8c));
        EXPECT(0x59, gbc.readMem(0xab8d));
        // CB 59 03D9
        gbc.setState(0xe43e, 0xa4fb, 0x5b60, 0xb01f, 0xb2a2, 0xa90d, 0x0, 0x0);
        gbc.writeMem(0xe43e, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa4fb, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43e));
        EXPECT(0x59, gbc.readMem(0xe43f));
        // CB 59 03DA
        gbc.setState(0x3d0f, 0xd85b, 0xc3a0, 0xa28c, 0x748e, 0x1eb1, 0x1, 0x0);
        gbc.writeMem(0x3d0f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd85b, gbc.sp());
        EXPECT(0x3d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03DB
        gbc.setState(0x10f8, 0x879, 0xb210, 0xf920, 0x26e4, 0xe7d4, 0x0, 0x0);
        gbc.writeMem(0x10f8, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x879, gbc.sp());
        EXPECT(0x10fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03DC
        gbc.setState(0x4c68, 0xa5d8, 0x73f0, 0x6380, 0x5419, 0xc223, 0x0, 0x1);
        gbc.writeMem(0x4c68, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa5d8, gbc.sp());
        EXPECT(0x4c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03DD
        gbc.setState(0xc347, 0x816b, 0x5460, 0xa6f3, 0x61b8, 0x45cd, 0x1, 0x0);
        gbc.writeMem(0xc347, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x816b, gbc.sp());
        EXPECT(0xc349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc347));
        EXPECT(0x59, gbc.readMem(0xc348));
        // CB 59 03DE
        gbc.setState(0xaff2, 0xc652, 0x1770, 0xe1d5, 0xa8f8, 0x2dc8, 0x1, 0x0);
        gbc.writeMem(0xaff2, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc652, gbc.sp());
        EXPECT(0xaff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff2));
        EXPECT(0x59, gbc.readMem(0xaff3));
        // CB 59 03DF
        gbc.setState(0x782a, 0xf36c, 0x36d0, 0x136d, 0x485b, 0xc33f, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf36c, gbc.sp());
        EXPECT(0x782c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03E0
        gbc.setState(0xbf8a, 0xcef1, 0x7070, 0x78b3, 0x83, 0x584e, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcef1, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8a));
        EXPECT(0x59, gbc.readMem(0xbf8b));
        // CB 59 03E1
        gbc.setState(0xd126, 0x8499, 0x7ac0, 0xcbc, 0xff2d, 0x5c74, 0x0, 0x1);
        gbc.writeMem(0xd126, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8499, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd126));
        EXPECT(0x59, gbc.readMem(0xd127));
        // CB 59 03E2
        gbc.setState(0x169a, 0x7cda, 0x6740, 0xf0d5, 0xb32d, 0xa74c, 0x1, 0x1);
        gbc.writeMem(0x169a, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7cda, gbc.sp());
        EXPECT(0x169c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03E3
        gbc.setState(0x1bda, 0xcaae, 0xfc10, 0x254a, 0x7f89, 0xf09e, 0x0, 0x1);
        gbc.writeMem(0x1bda, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcaae, gbc.sp());
        EXPECT(0x1bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03E4
        gbc.setState(0x400f, 0x1232, 0xefb0, 0x101c, 0xbb36, 0x811d, 0x0, 0x1);
        gbc.writeMem(0x400f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1232, gbc.sp());
        EXPECT(0x4011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 59 03E6
        gbc.setState(0x398f, 0xaa16, 0x1100, 0xfa58, 0x3dd5, 0xaece, 0x0, 0x1);
        gbc.writeMem(0x398f, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaa16, gbc.sp());
        EXPECT(0x3991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 59 03E7
        gbc.setState(0x5b13, 0x77ae, 0x2240, 0xb92f, 0xe1e, 0x173f, 0x1, 0x0);
        gbc.writeMem(0x5b13, { 0xcb, 0x59 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x77ae, gbc.sp());
        EXPECT(0x5b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
