    TEST(gbcemu, opcode_cb_26) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 26 0000
        gbc.setState(0x50b7, 0xfba1, 0xd4d0, 0xc1a6, 0xd090, 0xdb3d, 0x0, 0x0);
        gbc.writeMem(0x50b7, { 0xcb, 0x26 });
        gbc.writeMem(0xdb3d, { 0x3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfba1, gbc.sp());
        EXPECT(0x50b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdb3d));
        // CB 26 0004
        gbc.setState(0x98be, 0x8c53, 0x6bf0, 0x7d92, 0x1f36, 0xe5d9, 0x0, 0x1);
        gbc.writeMem(0x98be, { 0xcb, 0x26 });
        gbc.writeMem(0xe5d9, { 0xcc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8c53, gbc.sp());
        EXPECT(0x98c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98be));
        EXPECT(0x26, gbc.readMem(0x98bf));
        EXPECT(0x98, gbc.readMem(0xe5d9));
        // CB 26 0007
        gbc.setState(0xfda, 0x4f1, 0xaf60, 0xfabe, 0x9306, 0x9248, 0x1, 0x0);
        gbc.writeMem(0xfda, { 0xcb, 0x26 });
        gbc.writeMem(0x9248, { 0xcd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4f1, gbc.sp());
        EXPECT(0xfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9248));
        // CB 26 000A
        gbc.setState(0x2dd, 0xe998, 0xd770, 0x5e48, 0xb5f5, 0x9a5c, 0x0, 0x0);
        gbc.writeMem(0x2dd, { 0xcb, 0x26 });
        gbc.writeMem(0x9a5c, { 0xd4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe998, gbc.sp());
        EXPECT(0x2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x9a5c));
        // CB 26 000C
        gbc.setState(0x36e0, 0xceeb, 0x9680, 0x7095, 0x6d33, 0xf8b6, 0x0, 0x0);
        gbc.writeMem(0x36e0, { 0xcb, 0x26 });
        gbc.writeMem(0xf8b6, { 0x35 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xceeb, gbc.sp());
        EXPECT(0x36e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf8b6));
        // CB 26 000D
        gbc.setState(0xd66c, 0x138a, 0xf4b0, 0xf9ae, 0x69ef, 0xeeb4, 0x0, 0x1);
        gbc.writeMem(0xd66c, { 0xcb, 0x26 });
        gbc.writeMem(0xeeb4, { 0xd2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x138a, gbc.sp());
        EXPECT(0xd66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66c));
        EXPECT(0x26, gbc.readMem(0xd66d));
        EXPECT(0xa4, gbc.readMem(0xeeb4));
        // CB 26 000F
        gbc.setState(0xe876, 0xb3fd, 0x9a80, 0x8c9b, 0x667d, 0x965c, 0x0, 0x0);
        gbc.writeMem(0x965c, { 0xb6 });
        gbc.writeMem(0xe876, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb3fd, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x965c));
        EXPECT(0xcb, gbc.readMem(0xe876));
        EXPECT(0x26, gbc.readMem(0xe877));
        // CB 26 0010
        gbc.setState(0x7de3, 0x962a, 0xaa0, 0xba43, 0x6f93, 0xd1f2, 0x0, 0x1);
        gbc.writeMem(0x7de3, { 0xcb, 0x26 });
        gbc.writeMem(0xd1f2, { 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x962a, gbc.sp());
        EXPECT(0x7de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xd1f2));
        // CB 26 0012
        gbc.setState(0x2e57, 0x383, 0xf730, 0x23d, 0xf666, 0xba1e, 0x1, 0x1);
        gbc.writeMem(0x2e57, { 0xcb, 0x26 });
        gbc.writeMem(0xba1e, { 0x8a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x383, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xba1e));
        // CB 26 0014
        gbc.setState(0x6317, 0x11b3, 0xb640, 0x3d10, 0x922f, 0xd15b, 0x0, 0x0);
        gbc.writeMem(0x6317, { 0xcb, 0x26 });
        gbc.writeMem(0xd15b, { 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x11b3, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd15b));
        // CB 26 0015
        gbc.setState(0x42e8, 0x64f8, 0xf210, 0x80f9, 0x5394, 0xed0e, 0x1, 0x1);
        gbc.writeMem(0x42e8, { 0xcb, 0x26 });
        gbc.writeMem(0xed0e, { 0x24 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x64f8, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xed0e));
        // CB 26 001A
        gbc.setState(0x316d, 0x76ca, 0x5d80, 0xfd86, 0xf466, 0xb434, 0x1, 0x0);
        gbc.writeMem(0x316d, { 0xcb, 0x26 });
        gbc.writeMem(0xb434, { 0xe });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x76ca, gbc.sp());
        EXPECT(0x316f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb434));
        // CB 26 001D
        gbc.setState(0x9fc9, 0xf559, 0xbc50, 0xf804, 0xe812, 0xb380, 0x1, 0x0);
        gbc.writeMem(0x9fc9, { 0xcb, 0x26 });
        gbc.writeMem(0xb380, { 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf559, gbc.sp());
        EXPECT(0x9fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc9));
        EXPECT(0x26, gbc.readMem(0x9fca));
        EXPECT(0xe2, gbc.readMem(0xb380));
        // CB 26 001E
        gbc.setState(0xb32e, 0x50ab, 0x11e0, 0xfd96, 0xe9dd, 0xce1d, 0x1, 0x1);
        gbc.writeMem(0xb32e, { 0xcb, 0x26 });
        gbc.writeMem(0xce1d, { 0x85 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x50ab, gbc.sp());
        EXPECT(0xb330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32e));
        EXPECT(0x26, gbc.readMem(0xb32f));
        EXPECT(0xa, gbc.readMem(0xce1d));
        // CB 26 0020
        gbc.setState(0x2cbd, 0x9c15, 0x7530, 0x5988, 0x3a86, 0xc739, 0x0, 0x0);
        gbc.writeMem(0x2cbd, { 0xcb, 0x26 });
        gbc.writeMem(0xc739, { 0xa3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9c15, gbc.sp());
        EXPECT(0x2cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xc739));
        // CB 26 0021
        gbc.setState(0x612, 0x2f66, 0x1b20, 0xcee3, 0x21e9, 0xe978, 0x1, 0x1);
        gbc.writeMem(0x612, { 0xcb, 0x26 });
        gbc.writeMem(0xe978, { 0xbf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2f66, gbc.sp());
        EXPECT(0x614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe978));
        // CB 26 0022
        gbc.setState(0x1830, 0x20bc, 0x21e0, 0xe3a3, 0x444b, 0x810e, 0x0, 0x0);
        gbc.writeMem(0x1830, { 0xcb, 0x26 });
        gbc.writeMem(0x810e, { 0x62 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x20bc, gbc.sp());
        EXPECT(0x1832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x810e));
        // CB 26 0024
        gbc.setState(0xe23f, 0xf873, 0x22c0, 0x4a62, 0xf8b6, 0x9378, 0x1, 0x0);
        gbc.writeMem(0x9378, { 0x84 });
        gbc.writeMem(0xe23f, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf873, gbc.sp());
        EXPECT(0xe241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x9378));
        EXPECT(0xcb, gbc.readMem(0xe23f));
        EXPECT(0x26, gbc.readMem(0xe240));
        // CB 26 0026
        gbc.setState(0x5243, 0xe03b, 0xae20, 0xc586, 0xf0d9, 0x852f, 0x1, 0x1);
        gbc.writeMem(0x5243, { 0xcb, 0x26 });
        gbc.writeMem(0x852f, { 0x3d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe03b, gbc.sp());
        EXPECT(0x5245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x852f));
        // CB 26 0029
        gbc.setState(0xc2d5, 0x6ef7, 0x4eb0, 0xd8ce, 0x6155, 0xcacd, 0x1, 0x0);
        gbc.writeMem(0xc2d5, { 0xcb, 0x26 });
        gbc.writeMem(0xcacd, { 0x4a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6ef7, gbc.sp());
        EXPECT(0xc2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d5));
        EXPECT(0x26, gbc.readMem(0xc2d6));
        EXPECT(0x94, gbc.readMem(0xcacd));
        // CB 26 002C
        gbc.setState(0xe8c6, 0xddd0, 0x3580, 0xfb12, 0x7bb9, 0xa259, 0x1, 0x1);
        gbc.writeMem(0xa259, { 0xde });
        gbc.writeMem(0xe8c6, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xddd0, gbc.sp());
        EXPECT(0xe8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa259));
        EXPECT(0xcb, gbc.readMem(0xe8c6));
        EXPECT(0x26, gbc.readMem(0xe8c7));
        // CB 26 002E
        gbc.setState(0x9416, 0x7e2a, 0x66b0, 0x43a4, 0x793d, 0xc138, 0x1, 0x0);
        gbc.writeMem(0x9416, { 0xcb, 0x26 });
        gbc.writeMem(0xc138, { 0x71 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7e2a, gbc.sp());
        EXPECT(0x9418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9416));
        EXPECT(0x26, gbc.readMem(0x9417));
        EXPECT(0xe2, gbc.readMem(0xc138));
        // CB 26 0031
        gbc.setState(0x6905, 0x95be, 0x5790, 0xd471, 0xff19, 0xa10a, 0x1, 0x1);
        gbc.writeMem(0x6905, { 0xcb, 0x26 });
        gbc.writeMem(0xa10a, { 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x95be, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xa10a));
        // CB 26 0037
        gbc.setState(0x5133, 0xc6ac, 0x8e10, 0x184b, 0x4b2d, 0xd9e0, 0x1, 0x0);
        gbc.writeMem(0x5133, { 0xcb, 0x26 });
        gbc.writeMem(0xd9e0, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc6ac, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd9e0));
        // CB 26 0038
        gbc.setState(0xef42, 0xf08, 0x23a0, 0xbf96, 0x5187, 0xe3b4, 0x0, 0x0);
        gbc.writeMem(0xe3b4, { 0xb2 });
        gbc.writeMem(0xef42, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe3b4));
        EXPECT(0xcb, gbc.readMem(0xef42));
        EXPECT(0x26, gbc.readMem(0xef43));
        // CB 26 003F
        gbc.setState(0x1ad1, 0xf46e, 0x6990, 0xce93, 0xf311, 0x8f9e, 0x1, 0x1);
        gbc.writeMem(0x1ad1, { 0xcb, 0x26 });
        gbc.writeMem(0x8f9e, { 0x32 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0x1ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8f9e));
        // CB 26 0043
        gbc.setState(0x9799, 0xcec1, 0x14a0, 0xc2c2, 0xa5b7, 0xc9db, 0x0, 0x0);
        gbc.writeMem(0x9799, { 0xcb, 0x26 });
        gbc.writeMem(0xc9db, { 0x1f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0x979b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9799));
        EXPECT(0x26, gbc.readMem(0x979a));
        EXPECT(0x3e, gbc.readMem(0xc9db));
        // CB 26 0047
        gbc.setState(0xa865, 0x36ad, 0x4f90, 0xd3b0, 0x6bb5, 0xe162, 0x1, 0x0);
        gbc.writeMem(0xa865, { 0xcb, 0x26 });
        gbc.writeMem(0xe162, { 0x2c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x36ad, gbc.sp());
        EXPECT(0xa867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa865));
        EXPECT(0x26, gbc.readMem(0xa866));
        EXPECT(0x58, gbc.readMem(0xe162));
        // CB 26 004B
        gbc.setState(0x428c, 0xa991, 0xa430, 0xda88, 0x1719, 0x8c23, 0x0, 0x0);
        gbc.writeMem(0x428c, { 0xcb, 0x26 });
        gbc.writeMem(0x8c23, { 0xae });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa991, gbc.sp());
        EXPECT(0x428e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8c23));
        // CB 26 004C
        gbc.setState(0x235b, 0x5471, 0xbd90, 0x94d5, 0x722a, 0xe7ea, 0x0, 0x0);
        gbc.writeMem(0x235b, { 0xcb, 0x26 });
        gbc.writeMem(0xe7ea, { 0x6b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5471, gbc.sp());
        EXPECT(0x235d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe7ea));
        // CB 26 004E
        gbc.setState(0x5dca, 0x10e8, 0xbc0, 0x140b, 0x1c86, 0x8187, 0x0, 0x0);
        gbc.writeMem(0x5dca, { 0xcb, 0x26 });
        gbc.writeMem(0x8187, { 0x54 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x10e8, gbc.sp());
        EXPECT(0x5dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8187));
        // CB 26 0057
        gbc.setState(0xcf39, 0xef08, 0xcb10, 0x99de, 0x68cc, 0x93bf, 0x0, 0x1);
        gbc.writeMem(0x93bf, { 0x79 });
        gbc.writeMem(0xcf39, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xef08, gbc.sp());
        EXPECT(0xcf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x93bf));
        EXPECT(0xcb, gbc.readMem(0xcf39));
        EXPECT(0x26, gbc.readMem(0xcf3a));
        // CB 26 005B
        gbc.setState(0x112c, 0xc5a9, 0x92f0, 0x2f2, 0x3c86, 0xff78, 0x0, 0x1);
        gbc.writeMem(0x112c, { 0xcb, 0x26 });
        gbc.writeMem(0xff78, { 0x9e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc5a9, gbc.sp());
        EXPECT(0x112e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff78));
        // CB 26 005D
        gbc.setState(0x9ed1, 0xbbc6, 0xcce0, 0x871b, 0x85ed, 0x8571, 0x0, 0x1);
        gbc.writeMem(0x8571, { 0x12 });
        gbc.writeMem(0x9ed1, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbbc6, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8571));
        EXPECT(0xcb, gbc.readMem(0x9ed1));
        EXPECT(0x26, gbc.readMem(0x9ed2));
        // CB 26 005E
        gbc.setState(0x163e, 0x7f66, 0x36d0, 0x7730, 0x7070, 0x9f12, 0x1, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0x26 });
        gbc.writeMem(0x9f12, { 0x60 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7f66, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9f12));
        // CB 26 005F
        gbc.setState(0x47d3, 0x793c, 0xa5b0, 0xe083, 0x1024, 0x9fb3, 0x0, 0x0);
        gbc.writeMem(0x47d3, { 0xcb, 0x26 });
        gbc.writeMem(0x9fb3, { 0x24 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x793c, gbc.sp());
        EXPECT(0x47d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9fb3));
        // CB 26 0068
        gbc.setState(0xd3ee, 0x56c0, 0x7c60, 0xa43, 0x6128, 0xa74a, 0x0, 0x1);
        gbc.writeMem(0xa74a, { 0x98 });
        gbc.writeMem(0xd3ee, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x56c0, gbc.sp());
        EXPECT(0xd3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa74a));
        EXPECT(0xcb, gbc.readMem(0xd3ee));
        EXPECT(0x26, gbc.readMem(0xd3ef));
        // CB 26 006B
        gbc.setState(0x4f5, 0x4220, 0x1430, 0xf261, 0xc20b, 0x9168, 0x0, 0x0);
        gbc.writeMem(0x4f5, { 0xcb, 0x26 });
        gbc.writeMem(0x9168, { 0xa6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4220, gbc.sp());
        EXPECT(0x4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9168));
        // CB 26 006C
        gbc.setState(0x507f, 0xe1a0, 0x15f0, 0x7530, 0x69dc, 0x99cf, 0x1, 0x1);
        gbc.writeMem(0x507f, { 0xcb, 0x26 });
        gbc.writeMem(0x99cf, { 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe1a0, gbc.sp());
        EXPECT(0x5081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x99cf));
        // CB 26 0071
        gbc.setState(0x43aa, 0x6bb4, 0x7bf0, 0xa7f2, 0xea49, 0xb43e, 0x0, 0x1);
        gbc.writeMem(0x43aa, { 0xcb, 0x26 });
        gbc.writeMem(0xb43e, { 0xd7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6bb4, gbc.sp());
        EXPECT(0x43ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb43e));
        // CB 26 0072
        gbc.setState(0xa3d4, 0xdf1c, 0x2440, 0xe095, 0xdcef, 0xb4b9, 0x1, 0x0);
        gbc.writeMem(0xa3d4, { 0xcb, 0x26 });
        gbc.writeMem(0xb4b9, { 0x2e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdf1c, gbc.sp());
        EXPECT(0xa3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d4));
        EXPECT(0x26, gbc.readMem(0xa3d5));
        EXPECT(0x5c, gbc.readMem(0xb4b9));
        // CB 26 0075
        gbc.setState(0x47d0, 0xb185, 0xfa00, 0x20d0, 0x42fd, 0xc032, 0x0, 0x1);
        gbc.writeMem(0x47d0, { 0xcb, 0x26 });
        gbc.writeMem(0xc032, { 0x7d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb185, gbc.sp());
        EXPECT(0x47d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc032));
        // CB 26 0076
        gbc.setState(0xd669, 0xc9f5, 0x1c60, 0x3998, 0xea46, 0x9114, 0x1, 0x0);
        gbc.writeMem(0x9114, { 0x76 });
        gbc.writeMem(0xd669, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc9f5, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9114));
        EXPECT(0xcb, gbc.readMem(0xd669));
        EXPECT(0x26, gbc.readMem(0xd66a));
        // CB 26 0077
        gbc.setState(0x6772, 0xe26c, 0x2fc0, 0xac36, 0xa74f, 0xb97b, 0x1, 0x0);
        gbc.writeMem(0x6772, { 0xcb, 0x26 });
        gbc.writeMem(0xb97b, { 0x90 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe26c, gbc.sp());
        EXPECT(0x6774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb97b));
        // CB 26 0079
        gbc.setState(0xd298, 0x19d2, 0xc2a0, 0x58ec, 0x4515, 0xce91, 0x0, 0x1);
        gbc.writeMem(0xce91, { 0xc8 });
        gbc.writeMem(0xd298, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x19d2, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xce91));
        EXPECT(0xcb, gbc.readMem(0xd298));
        EXPECT(0x26, gbc.readMem(0xd299));
        // CB 26 007B
        gbc.setState(0xe1c9, 0xee3a, 0xa4a0, 0x3616, 0xf1b5, 0xb3b3, 0x0, 0x0);
        gbc.writeMem(0xb3b3, { 0x13 });
        gbc.writeMem(0xe1c9, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xee3a, gbc.sp());
        EXPECT(0xe1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb3b3));
        EXPECT(0xcb, gbc.readMem(0xe1c9));
        EXPECT(0x26, gbc.readMem(0xe1ca));
        // CB 26 007C
        gbc.setState(0x7ff4, 0xff1f, 0x6a90, 0x9893, 0x7482, 0x96c2, 0x1, 0x1);
        gbc.writeMem(0x7ff4, { 0xcb, 0x26 });
        gbc.writeMem(0x96c2, { 0xc8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xff1f, gbc.sp());
        EXPECT(0x7ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x96c2));
        // CB 26 007E
        gbc.setState(0xb6e0, 0xb6b8, 0x3870, 0x6133, 0xdce, 0x8143, 0x1, 0x0);
        gbc.writeMem(0x8143, { 0x82 });
        gbc.writeMem(0xb6e0, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0xb6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8143));
        EXPECT(0xcb, gbc.readMem(0xb6e0));
        EXPECT(0x26, gbc.readMem(0xb6e1));
        // CB 26 0081
        gbc.setState(0xe0e, 0x1896, 0x83b0, 0x44fe, 0xc89e, 0x8e06, 0x0, 0x0);
        gbc.writeMem(0xe0e, { 0xcb, 0x26 });
        gbc.writeMem(0x8e06, { 0x78 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1896, gbc.sp());
        EXPECT(0xe10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8e06));
        // CB 26 0082
        gbc.setState(0x22a6, 0xb193, 0x9b80, 0x43c1, 0x477e, 0xa867, 0x0, 0x0);
        gbc.writeMem(0x22a6, { 0xcb, 0x26 });
        gbc.writeMem(0xa867, { 0x75 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb193, gbc.sp());
        EXPECT(0x22a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xa867));
        // CB 26 0083
        gbc.setState(0xb3b2, 0xfe7f, 0xe660, 0x524a, 0x17dd, 0x824c, 0x1, 0x1);
        gbc.writeMem(0x824c, { 0x1a });
        gbc.writeMem(0xb3b2, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfe7f, gbc.sp());
        EXPECT(0xb3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x824c));
        EXPECT(0xcb, gbc.readMem(0xb3b2));
        EXPECT(0x26, gbc.readMem(0xb3b3));
        // CB 26 0084
        gbc.setState(0x3d9f, 0x31e5, 0x55c0, 0x380a, 0x3e8c, 0xb4c7, 0x0, 0x0);
        gbc.writeMem(0x3d9f, { 0xcb, 0x26 });
        gbc.writeMem(0xb4c7, { 0xce });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0x3da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb4c7));
        // CB 26 0085
        gbc.setState(0xd318, 0x22b1, 0x1d60, 0x4be1, 0x84b, 0xb896, 0x0, 0x0);
        gbc.writeMem(0xb896, { 0x99 });
        gbc.writeMem(0xd318, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x22b1, gbc.sp());
        EXPECT(0xd31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb896));
        EXPECT(0xcb, gbc.readMem(0xd318));
        EXPECT(0x26, gbc.readMem(0xd319));
        // CB 26 008E
        gbc.setState(0x2750, 0xb446, 0xe040, 0x9011, 0xb941, 0xdf88, 0x0, 0x0);
        gbc.writeMem(0x2750, { 0xcb, 0x26 });
        gbc.writeMem(0xdf88, { 0x44 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb446, gbc.sp());
        EXPECT(0x2752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdf88));
        // CB 26 0095
        gbc.setState(0x8e42, 0xaa63, 0xbc30, 0x8da0, 0x6221, 0xe829, 0x0, 0x0);
        gbc.writeMem(0x8e42, { 0xcb, 0x26 });
        gbc.writeMem(0xe829, { 0xfe });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaa63, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e42));
        EXPECT(0x26, gbc.readMem(0x8e43));
        EXPECT(0xfc, gbc.readMem(0xe829));
        // CB 26 0098
        gbc.setState(0x1bb2, 0x2d47, 0x1330, 0x52b7, 0xec9c, 0xc995, 0x1, 0x0);
        gbc.writeMem(0x1bb2, { 0xcb, 0x26 });
        gbc.writeMem(0xc995, { 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2d47, gbc.sp());
        EXPECT(0x1bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xc995));
        // CB 26 0099
        gbc.setState(0x603d, 0x2d99, 0xbfa0, 0x22c5, 0xbefc, 0xecca, 0x0, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0x26 });
        gbc.writeMem(0xecca, { 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2d99, gbc.sp());
        EXPECT(0x603f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xecca));
        // CB 26 009B
        gbc.setState(0x903c, 0x44aa, 0xa7a0, 0x8b34, 0x1178, 0xbf94, 0x1, 0x1);
        gbc.writeMem(0x903c, { 0xcb, 0x26 });
        gbc.writeMem(0xbf94, { 0xb9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x44aa, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903c));
        EXPECT(0x26, gbc.readMem(0x903d));
        EXPECT(0x72, gbc.readMem(0xbf94));
        // CB 26 009C
        gbc.setState(0xe16, 0x2708, 0x6b30, 0xcd64, 0xdaab, 0xd0e7, 0x0, 0x1);
        gbc.writeMem(0xe16, { 0xcb, 0x26 });
        gbc.writeMem(0xd0e7, { 0xb9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2708, gbc.sp());
        EXPECT(0xe18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd0e7));
        // CB 26 009D
        gbc.setState(0x9159, 0x2964, 0x2710, 0x14b6, 0xc954, 0xe823, 0x0, 0x1);
        gbc.writeMem(0x9159, { 0xcb, 0x26 });
        gbc.writeMem(0xe823, { 0x86 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2964, gbc.sp());
        EXPECT(0x915b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9159));
        EXPECT(0x26, gbc.readMem(0x915a));
        EXPECT(0xc, gbc.readMem(0xe823));
        // CB 26 009E
        gbc.setState(0xc7be, 0xdc31, 0x8d00, 0xec99, 0xe56f, 0xe7a7, 0x1, 0x1);
        gbc.writeMem(0xc7be, { 0xcb, 0x26 });
        gbc.writeMem(0xe7a7, { 0x14 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0xc7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7be));
        EXPECT(0x26, gbc.readMem(0xc7bf));
        EXPECT(0x28, gbc.readMem(0xe7a7));
        // CB 26 009F
        gbc.setState(0x2fcc, 0xce8, 0xce90, 0xcb5f, 0xd2b0, 0xb7bb, 0x1, 0x1);
        gbc.writeMem(0x2fcc, { 0xcb, 0x26 });
        gbc.writeMem(0xb7bb, { 0x8c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xce8, gbc.sp());
        EXPECT(0x2fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb7bb));
        // CB 26 00A7
        gbc.setState(0x76ed, 0x160f, 0x19f0, 0x7bb4, 0x1c6f, 0xbd4b, 0x1, 0x0);
        gbc.writeMem(0x76ed, { 0xcb, 0x26 });
        gbc.writeMem(0xbd4b, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x160f, gbc.sp());
        EXPECT(0x76ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbd4b));
        // CB 26 00AD
        gbc.setState(0xdc91, 0x8cd3, 0x85a0, 0x15f0, 0xba6a, 0xbda9, 0x0, 0x0);
        gbc.writeMem(0xbda9, { 0x6e });
        gbc.writeMem(0xdc91, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8cd3, gbc.sp());
        EXPECT(0xdc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xbda9));
        EXPECT(0xcb, gbc.readMem(0xdc91));
        EXPECT(0x26, gbc.readMem(0xdc92));
        // CB 26 00AE
        gbc.setState(0xc503, 0x4d2b, 0x21c0, 0x795f, 0x16f6, 0xda3d, 0x1, 0x1);
        gbc.writeMem(0xc503, { 0xcb, 0x26 });
        gbc.writeMem(0xda3d, { 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4d2b, gbc.sp());
        EXPECT(0xc505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc503));
        EXPECT(0x26, gbc.readMem(0xc504));
        EXPECT(0x34, gbc.readMem(0xda3d));
        // CB 26 00AF
        gbc.setState(0x3250, 0x7613, 0x2560, 0x471f, 0xa68f, 0x8445, 0x0, 0x0);
        gbc.writeMem(0x3250, { 0xcb, 0x26 });
        gbc.writeMem(0x8445, { 0xfa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7613, gbc.sp());
        EXPECT(0x3252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x8445));
        // CB 26 00B0
        gbc.setState(0x9992, 0x96a2, 0x4680, 0xc082, 0xd090, 0xd1a0, 0x1, 0x1);
        gbc.writeMem(0x9992, { 0xcb, 0x26 });
        gbc.writeMem(0xd1a0, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x96a2, gbc.sp());
        EXPECT(0x9994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9992));
        EXPECT(0x26, gbc.readMem(0x9993));
        EXPECT(0x0, gbc.readMem(0xd1a0));
        // CB 26 00B1
        gbc.setState(0x29aa, 0x60cc, 0x9b10, 0xd6af, 0x669c, 0xddf8, 0x0, 0x1);
        gbc.writeMem(0x29aa, { 0xcb, 0x26 });
        gbc.writeMem(0xddf8, { 0x15 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x60cc, gbc.sp());
        EXPECT(0x29ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xddf8));
        // CB 26 00B7
        gbc.setState(0xcaf, 0xbc04, 0x6840, 0xcf45, 0xf5e, 0x8686, 0x1, 0x1);
        gbc.writeMem(0xcaf, { 0xcb, 0x26 });
        gbc.writeMem(0x8686, { 0x45 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbc04, gbc.sp());
        EXPECT(0xcb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8686));
        // CB 26 00B8
        gbc.setState(0x4205, 0x9444, 0xa7d0, 0x76af, 0x5195, 0xaa5d, 0x0, 0x0);
        gbc.writeMem(0x4205, { 0xcb, 0x26 });
        gbc.writeMem(0xaa5d, { 0x14 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0x4207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xaa5d));
        // CB 26 00BA
        gbc.setState(0xe804, 0x2b21, 0x3550, 0x65e4, 0x8b7f, 0xd586, 0x1, 0x0);
        gbc.writeMem(0xd586, { 0x2a });
        gbc.writeMem(0xe804, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2b21, gbc.sp());
        EXPECT(0xe806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xd586));
        EXPECT(0xcb, gbc.readMem(0xe804));
        EXPECT(0x26, gbc.readMem(0xe805));
        // CB 26 00C0
        gbc.setState(0x4bb9, 0x3a09, 0x9a00, 0xd367, 0x98b0, 0x8e84, 0x1, 0x0);
        gbc.writeMem(0x4bb9, { 0xcb, 0x26 });
        gbc.writeMem(0x8e84, { 0xd8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8e84));
        // CB 26 00C2
        gbc.setState(0xdb32, 0x1eca, 0x1aa0, 0xac5c, 0x478c, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0xbfb7, { 0xf8 });
        gbc.writeMem(0xdb32, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1eca, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbfb7));
        EXPECT(0xcb, gbc.readMem(0xdb32));
        EXPECT(0x26, gbc.readMem(0xdb33));
        // CB 26 00C8
        gbc.setState(0x8d9c, 0xb791, 0x7500, 0x716f, 0x85e3, 0xd0ba, 0x1, 0x1);
        gbc.writeMem(0x8d9c, { 0xcb, 0x26 });
        gbc.writeMem(0xd0ba, { 0xdb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb791, gbc.sp());
        EXPECT(0x8d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9c));
        EXPECT(0x26, gbc.readMem(0x8d9d));
        EXPECT(0xb6, gbc.readMem(0xd0ba));
        // CB 26 00C9
        gbc.setState(0x1e69, 0x9525, 0xa240, 0x4d6, 0x16d8, 0x8708, 0x0, 0x0);
        gbc.writeMem(0x1e69, { 0xcb, 0x26 });
        gbc.writeMem(0x8708, { 0x6b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9525, gbc.sp());
        EXPECT(0x1e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8708));
        // CB 26 00CA
        gbc.setState(0x913, 0xf7ed, 0x7e90, 0xc21b, 0x240d, 0xd589, 0x0, 0x1);
        gbc.writeMem(0x913, { 0xcb, 0x26 });
        gbc.writeMem(0xd589, { 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf7ed, gbc.sp());
        EXPECT(0x915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd589));
        // CB 26 00CB
        gbc.setState(0x5650, 0x4a62, 0xf130, 0x6c40, 0x2981, 0xc362, 0x0, 0x0);
        gbc.writeMem(0x5650, { 0xcb, 0x26 });
        gbc.writeMem(0xc362, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4a62, gbc.sp());
        EXPECT(0x5652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc362));
        // CB 26 00CC
        gbc.setState(0xa4d9, 0xe4cb, 0x74c0, 0x516a, 0x53d, 0xfc4d, 0x1, 0x0);
        gbc.writeMem(0xa4d9, { 0xcb, 0x26 });
        gbc.writeMem(0xfc4d, { 0xe4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe4cb, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d9));
        EXPECT(0x26, gbc.readMem(0xa4da));
        EXPECT(0xc8, gbc.readMem(0xfc4d));
        // CB 26 00CE
        gbc.setState(0x5a1f, 0x6c21, 0x2850, 0x449d, 0xf5b3, 0xa60f, 0x1, 0x0);
        gbc.writeMem(0x5a1f, { 0xcb, 0x26 });
        gbc.writeMem(0xa60f, { 0xf8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0x5a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa60f));
        // CB 26 00CF
        gbc.setState(0x6801, 0x4ac4, 0x7670, 0x4a30, 0x9324, 0xc9d4, 0x1, 0x0);
        gbc.writeMem(0x6801, { 0xcb, 0x26 });
        gbc.writeMem(0xc9d4, { 0xc4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4ac4, gbc.sp());
        EXPECT(0x6803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc9d4));
        // CB 26 00D0
        gbc.setState(0x99ea, 0xa424, 0xdf10, 0x212b, 0xd5af, 0xf254, 0x0, 0x1);
        gbc.writeMem(0x99ea, { 0xcb, 0x26 });
        gbc.writeMem(0xf254, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa424, gbc.sp());
        EXPECT(0x99ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ea));
        EXPECT(0x26, gbc.readMem(0x99eb));
        EXPECT(0xe, gbc.readMem(0xf254));
        // CB 26 00D1
        gbc.setState(0x9c45, 0x3860, 0x6790, 0xba71, 0x51dc, 0xd1dd, 0x1, 0x0);
        gbc.writeMem(0x9c45, { 0xcb, 0x26 });
        gbc.writeMem(0xd1dd, { 0x2f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3860, gbc.sp());
        EXPECT(0x9c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c45));
        EXPECT(0x26, gbc.readMem(0x9c46));
        EXPECT(0x5e, gbc.readMem(0xd1dd));
        // CB 26 00D3
        gbc.setState(0x2141, 0xb25f, 0xf3c0, 0xa2b1, 0xfb18, 0xadff, 0x0, 0x1);
        gbc.writeMem(0x2141, { 0xcb, 0x26 });
        gbc.writeMem(0xadff, { 0x31 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb25f, gbc.sp());
        EXPECT(0x2143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xadff));
        // CB 26 00D4
        gbc.setState(0x8f97, 0xfded, 0x1320, 0x66a4, 0xade9, 0xfae6, 0x0, 0x0);
        gbc.writeMem(0x8f97, { 0xcb, 0x26 });
        gbc.writeMem(0xfae6, { 0xe6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfded, gbc.sp());
        EXPECT(0x8f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f97));
        EXPECT(0x26, gbc.readMem(0x8f98));
        EXPECT(0xcc, gbc.readMem(0xfae6));
        // CB 26 00D6
        gbc.setState(0xb7dc, 0xe96d, 0xc8b0, 0xc66e, 0x8248, 0x9c8d, 0x1, 0x0);
        gbc.writeMem(0x9c8d, { 0xd0 });
        gbc.writeMem(0xb7dc, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe96d, gbc.sp());
        EXPECT(0xb7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9c8d));
        EXPECT(0xcb, gbc.readMem(0xb7dc));
        EXPECT(0x26, gbc.readMem(0xb7dd));
        // CB 26 00D7
        gbc.setState(0x9c87, 0x7324, 0x95e0, 0x579f, 0x6d45, 0x8670, 0x1, 0x0);
        gbc.writeMem(0x8670, { 0x8 });
        gbc.writeMem(0x9c87, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7324, gbc.sp());
        EXPECT(0x9c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8670));
        EXPECT(0xcb, gbc.readMem(0x9c87));
        EXPECT(0x26, gbc.readMem(0x9c88));
        // CB 26 00D8
        gbc.setState(0xa294, 0x3eef, 0xb490, 0x771d, 0x1138, 0xd0b1, 0x1, 0x1);
        gbc.writeMem(0xa294, { 0xcb, 0x26 });
        gbc.writeMem(0xd0b1, { 0xdc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3eef, gbc.sp());
        EXPECT(0xa296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa294));
        EXPECT(0x26, gbc.readMem(0xa295));
        EXPECT(0xb8, gbc.readMem(0xd0b1));
        // CB 26 00DA
        gbc.setState(0x836d, 0xc41, 0x2650, 0xbc52, 0xe8, 0xe411, 0x1, 0x0);
        gbc.writeMem(0x836d, { 0xcb, 0x26 });
        gbc.writeMem(0xe411, { 0xd5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0x836f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836d));
        EXPECT(0x26, gbc.readMem(0x836e));
        EXPECT(0xaa, gbc.readMem(0xe411));
        // CB 26 00DB
        gbc.setState(0xac85, 0xe558, 0xfc70, 0xf2d8, 0x1923, 0xbe4e, 0x0, 0x1);
        gbc.writeMem(0xac85, { 0xcb, 0x26 });
        gbc.writeMem(0xbe4e, { 0x58 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe558, gbc.sp());
        EXPECT(0xac87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac85));
        EXPECT(0x26, gbc.readMem(0xac86));
        EXPECT(0xb0, gbc.readMem(0xbe4e));
        // CB 26 00DC
        gbc.setState(0x6c62, 0xaa83, 0xd440, 0xd513, 0x3e0b, 0xfad2, 0x1, 0x1);
        gbc.writeMem(0x6c62, { 0xcb, 0x26 });
        gbc.writeMem(0xfad2, { 0xc8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x6c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xfad2));
        // CB 26 00E2
        gbc.setState(0x7c46, 0x9a24, 0x5d30, 0xa8c3, 0x5a6, 0x9f6d, 0x0, 0x1);
        gbc.writeMem(0x7c46, { 0xcb, 0x26 });
        gbc.writeMem(0x9f6d, { 0x60 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9a24, gbc.sp());
        EXPECT(0x7c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9f6d));
        // CB 26 00E3
        gbc.setState(0xb550, 0x983e, 0x1190, 0xb19f, 0x443c, 0xcc8b, 0x1, 0x1);
        gbc.writeMem(0xb550, { 0xcb, 0x26 });
        gbc.writeMem(0xcc8b, { 0x84 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x983e, gbc.sp());
        EXPECT(0xb552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb550));
        EXPECT(0x26, gbc.readMem(0xb551));
        EXPECT(0x8, gbc.readMem(0xcc8b));
        // CB 26 00E4
        gbc.setState(0x6ad8, 0xcfe2, 0x3760, 0x119, 0x6418, 0xf250, 0x0, 0x0);
        gbc.writeMem(0x6ad8, { 0xcb, 0x26 });
        gbc.writeMem(0xf250, { 0x41 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcfe2, gbc.sp());
        EXPECT(0x6ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf250));
        // CB 26 00E5
        gbc.setState(0x9af7, 0x8a93, 0xc660, 0xa997, 0x2550, 0xfa3c, 0x1, 0x0);
        gbc.writeMem(0x9af7, { 0xcb, 0x26 });
        gbc.writeMem(0xfa3c, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8a93, gbc.sp());
        EXPECT(0x9af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af7));
        EXPECT(0x26, gbc.readMem(0x9af8));
        EXPECT(0x58, gbc.readMem(0xfa3c));
        // CB 26 00E7
        gbc.setState(0x77d8, 0xd290, 0x18b0, 0x5d9b, 0xed43, 0xb706, 0x0, 0x1);
        gbc.writeMem(0x77d8, { 0xcb, 0x26 });
        gbc.writeMem(0xb706, { 0x67 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0x77da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xb706));
        // CB 26 00E8
        gbc.setState(0x7043, 0xaff9, 0x96a0, 0x936b, 0xf3f1, 0x9899, 0x0, 0x1);
        gbc.writeMem(0x7043, { 0xcb, 0x26 });
        gbc.writeMem(0x9899, { 0x17 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaff9, gbc.sp());
        EXPECT(0x7045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9899));
        // CB 26 00E9
        gbc.setState(0x55cb, 0x328e, 0x5910, 0xabc1, 0xe138, 0xd299, 0x1, 0x0);
        gbc.writeMem(0x55cb, { 0xcb, 0x26 });
        gbc.writeMem(0xd299, { 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x328e, gbc.sp());
        EXPECT(0x55cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd299));
        // CB 26 00EB
        gbc.setState(0x7834, 0xdc9f, 0x5fe0, 0xa98c, 0x2a0b, 0xde6e, 0x0, 0x1);
        gbc.writeMem(0x7834, { 0xcb, 0x26 });
        gbc.writeMem(0xde6e, { 0x73 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdc9f, gbc.sp());
        EXPECT(0x7836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xde6e));
        // CB 26 00EC
        gbc.setState(0x8a2c, 0x1086, 0x15b0, 0x2bdd, 0x4191, 0xfe71, 0x0, 0x0);
        gbc.writeMem(0x8a2c, { 0xcb, 0x26 });
        gbc.writeMem(0xfe71, { 0x5f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1086, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2c));
        EXPECT(0x26, gbc.readMem(0x8a2d));
        EXPECT(0xbe, gbc.readMem(0xfe71));
        // CB 26 00EF
        gbc.setState(0x497d, 0x7cba, 0x46a0, 0x1821, 0x7221, 0x9d8d, 0x1, 0x0);
        gbc.writeMem(0x497d, { 0xcb, 0x26 });
        gbc.writeMem(0x9d8d, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7cba, gbc.sp());
        EXPECT(0x497f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9d8d));
        // CB 26 00F0
        gbc.setState(0xb7f, 0xbf53, 0x50f0, 0x4d21, 0x22bc, 0xc194, 0x0, 0x0);
        gbc.writeMem(0xb7f, { 0xcb, 0x26 });
        gbc.writeMem(0xc194, { 0x33 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbf53, gbc.sp());
        EXPECT(0xb81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc194));
        // CB 26 00F4
        gbc.setState(0x1957, 0x93d0, 0x7530, 0x13da, 0x64a, 0xa89d, 0x0, 0x0);
        gbc.writeMem(0x1957, { 0xcb, 0x26 });
        gbc.writeMem(0xa89d, { 0x2c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x93d0, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa89d));
        // CB 26 00F5
        gbc.setState(0xc8e1, 0x5395, 0x8d20, 0xa37, 0x9e58, 0xbb32, 0x1, 0x1);
        gbc.writeMem(0xbb32, { 0xe3 });
        gbc.writeMem(0xc8e1, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5395, gbc.sp());
        EXPECT(0xc8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbb32));
        EXPECT(0xcb, gbc.readMem(0xc8e1));
        EXPECT(0x26, gbc.readMem(0xc8e2));
        // CB 26 00F7
        gbc.setState(0x4540, 0x3647, 0x8860, 0x1d4e, 0x4f14, 0x8097, 0x1, 0x0);
        gbc.writeMem(0x4540, { 0xcb, 0x26 });
        gbc.writeMem(0x8097, { 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0x4542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8097));
        // CB 26 00FA
        gbc.setState(0xcdca, 0x2efc, 0x3e20, 0x23f6, 0x73d5, 0xaf86, 0x0, 0x0);
        gbc.writeMem(0xaf86, { 0xc7 });
        gbc.writeMem(0xcdca, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2efc, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xaf86));
        EXPECT(0xcb, gbc.readMem(0xcdca));
        EXPECT(0x26, gbc.readMem(0xcdcb));
        // CB 26 00FE
        gbc.setState(0x8d3a, 0x777a, 0xf6d0, 0xfdb2, 0x7295, 0xa584, 0x1, 0x0);
        gbc.writeMem(0x8d3a, { 0xcb, 0x26 });
        gbc.writeMem(0xa584, { 0x69 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x777a, gbc.sp());
        EXPECT(0x8d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3a));
        EXPECT(0x26, gbc.readMem(0x8d3b));
        EXPECT(0xd2, gbc.readMem(0xa584));
        // CB 26 0101
        gbc.setState(0x7ef0, 0xcdbc, 0x79b0, 0xc8cb, 0xc598, 0x9e39, 0x1, 0x1);
        gbc.writeMem(0x7ef0, { 0xcb, 0x26 });
        gbc.writeMem(0x9e39, { 0xe5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcdbc, gbc.sp());
        EXPECT(0x7ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9e39));
        // CB 26 0102
        gbc.setState(0x8c99, 0xbb4d, 0x46e0, 0xa1d4, 0xc253, 0xc0eb, 0x0, 0x1);
        gbc.writeMem(0x8c99, { 0xcb, 0x26 });
        gbc.writeMem(0xc0eb, { 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbb4d, gbc.sp());
        EXPECT(0x8c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c99));
        EXPECT(0x26, gbc.readMem(0x8c9a));
        EXPECT(0xf0, gbc.readMem(0xc0eb));
        // CB 26 0103
        gbc.setState(0x49f4, 0xd7, 0xde30, 0x26ec, 0xd656, 0x9673, 0x1, 0x0);
        gbc.writeMem(0x49f4, { 0xcb, 0x26 });
        gbc.writeMem(0x9673, { 0xbb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd7, gbc.sp());
        EXPECT(0x49f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9673));
        // CB 26 0105
        gbc.setState(0x2bda, 0xc6d, 0xe870, 0x7bf4, 0xcfb3, 0xbf58, 0x1, 0x0);
        gbc.writeMem(0x2bda, { 0xcb, 0x26 });
        gbc.writeMem(0xbf58, { 0xc3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc6d, gbc.sp());
        EXPECT(0x2bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbf58));
        // CB 26 0106
        gbc.setState(0x182d, 0x75fa, 0xef0, 0xfa97, 0x1a77, 0xad40, 0x0, 0x0);
        gbc.writeMem(0x182d, { 0xcb, 0x26 });
        gbc.writeMem(0xad40, { 0x93 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x75fa, gbc.sp());
        EXPECT(0x182f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xad40));
        // CB 26 0107
        gbc.setState(0x23a0, 0x7142, 0xcbe0, 0x7107, 0xb6da, 0x8992, 0x1, 0x0);
        gbc.writeMem(0x23a0, { 0xcb, 0x26 });
        gbc.writeMem(0x8992, { 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7142, gbc.sp());
        EXPECT(0x23a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8992));
        // CB 26 010A
        gbc.setState(0x1a4e, 0xfa22, 0x8a90, 0xb1b3, 0x198, 0xd5a9, 0x0, 0x1);
        gbc.writeMem(0x1a4e, { 0xcb, 0x26 });
        gbc.writeMem(0xd5a9, { 0xf6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfa22, gbc.sp());
        EXPECT(0x1a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xd5a9));
        // CB 26 010E
        gbc.setState(0x2726, 0x6a80, 0xb970, 0xd753, 0xa30e, 0xa1a3, 0x0, 0x1);
        gbc.writeMem(0x2726, { 0xcb, 0x26 });
        gbc.writeMem(0xa1a3, { 0xfe });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6a80, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xa1a3));
        // CB 26 010F
        gbc.setState(0x38f2, 0x109, 0x9d30, 0xba6b, 0xc5b5, 0xa49b, 0x0, 0x0);
        gbc.writeMem(0x38f2, { 0xcb, 0x26 });
        gbc.writeMem(0xa49b, { 0x88 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x109, gbc.sp());
        EXPECT(0x38f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa49b));
        // CB 26 0115
        gbc.setState(0x23f6, 0x99a1, 0xcac0, 0x2487, 0xdbd8, 0x9ded, 0x1, 0x1);
        gbc.writeMem(0x23f6, { 0xcb, 0x26 });
        gbc.writeMem(0x9ded, { 0x3e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x99a1, gbc.sp());
        EXPECT(0x23f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9ded));
        // CB 26 0118
        gbc.setState(0x4b16, 0x8dc1, 0x1860, 0xc4e8, 0xa661, 0xe98e, 0x1, 0x1);
        gbc.writeMem(0x4b16, { 0xcb, 0x26 });
        gbc.writeMem(0xe98e, { 0xec });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8dc1, gbc.sp());
        EXPECT(0x4b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xe98e));
        // CB 26 0119
        gbc.setState(0x7f50, 0xeb77, 0x6340, 0xe8b, 0x73c0, 0xcf25, 0x0, 0x1);
        gbc.writeMem(0x7f50, { 0xcb, 0x26 });
        gbc.writeMem(0xcf25, { 0x26 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeb77, gbc.sp());
        EXPECT(0x7f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcf25));
        // CB 26 011A
        gbc.setState(0x202d, 0xb68e, 0x5040, 0x61ab, 0x62e1, 0xb151, 0x0, 0x0);
        gbc.writeMem(0x202d, { 0xcb, 0x26 });
        gbc.writeMem(0xb151, { 0x34 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb68e, gbc.sp());
        EXPECT(0x202f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb151));
        // CB 26 0120
        gbc.setState(0x55ec, 0xc28b, 0x1120, 0x19ca, 0x5a1a, 0xce34, 0x1, 0x1);
        gbc.writeMem(0x55ec, { 0xcb, 0x26 });
        gbc.writeMem(0xce34, { 0x58 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc28b, gbc.sp());
        EXPECT(0x55ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xce34));
        // CB 26 0125
        gbc.setState(0x1fc3, 0x830b, 0x26a0, 0xc37e, 0x3422, 0xe1a6, 0x0, 0x0);
        gbc.writeMem(0x1fc3, { 0xcb, 0x26 });
        gbc.writeMem(0xe1a6, { 0x1a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x830b, gbc.sp());
        EXPECT(0x1fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xe1a6));
        // CB 26 0128
        gbc.setState(0x7e22, 0x9056, 0x8250, 0xc14e, 0xdbc7, 0xb285, 0x1, 0x0);
        gbc.writeMem(0x7e22, { 0xcb, 0x26 });
        gbc.writeMem(0xb285, { 0xcf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9056, gbc.sp());
        EXPECT(0x7e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb285));
        // CB 26 012E
        gbc.setState(0x6f1d, 0x66b, 0x7660, 0xe002, 0x5d92, 0x9f42, 0x0, 0x1);
        gbc.writeMem(0x6f1d, { 0xcb, 0x26 });
        gbc.writeMem(0x9f42, { 0xce });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x66b, gbc.sp());
        EXPECT(0x6f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9f42));
        // CB 26 012F
        gbc.setState(0x54f1, 0xc7f0, 0x74a0, 0x86c0, 0xd0bf, 0xc6c8, 0x0, 0x1);
        gbc.writeMem(0x54f1, { 0xcb, 0x26 });
        gbc.writeMem(0xc6c8, { 0x11 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x54f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc6c8));
        // CB 26 0132
        gbc.setState(0x5dac, 0x4731, 0x47b0, 0x7bb2, 0xe73e, 0xbbe3, 0x1, 0x1);
        gbc.writeMem(0x5dac, { 0xcb, 0x26 });
        gbc.writeMem(0xbbe3, { 0x67 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4731, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xbbe3));
        // CB 26 0135
        gbc.setState(0xbf81, 0x7907, 0xd970, 0x7a7c, 0xe59f, 0xb4b6, 0x0, 0x1);
        gbc.writeMem(0xb4b6, { 0xf });
        gbc.writeMem(0xbf81, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7907, gbc.sp());
        EXPECT(0xbf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xb4b6));
        EXPECT(0xcb, gbc.readMem(0xbf81));
        EXPECT(0x26, gbc.readMem(0xbf82));
        // CB 26 0136
        gbc.setState(0x25df, 0xe4c7, 0xd9c0, 0x9c45, 0xcb6f, 0x858a, 0x0, 0x1);
        gbc.writeMem(0x25df, { 0xcb, 0x26 });
        gbc.writeMem(0x858a, { 0xa5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe4c7, gbc.sp());
        EXPECT(0x25e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x858a));
        // CB 26 0137
        gbc.setState(0x7057, 0xb8cb, 0xaef0, 0xdb33, 0xb4aa, 0x9adc, 0x0, 0x1);
        gbc.writeMem(0x7057, { 0xcb, 0x26 });
        gbc.writeMem(0x9adc, { 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb8cb, gbc.sp());
        EXPECT(0x7059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9adc));
        // CB 26 013B
        gbc.setState(0x86b6, 0xfdd, 0xb440, 0xdb4b, 0xb1b9, 0x9375, 0x1, 0x1);
        gbc.writeMem(0x86b6, { 0xcb, 0x26 });
        gbc.writeMem(0x9375, { 0x3a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfdd, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b6));
        EXPECT(0x26, gbc.readMem(0x86b7));
        EXPECT(0x74, gbc.readMem(0x9375));
        // CB 26 013C
        gbc.setState(0xd026, 0x5fc6, 0x54c0, 0x6d9a, 0xaef5, 0xc6fd, 0x0, 0x1);
        gbc.writeMem(0xc6fd, { 0x21 });
        gbc.writeMem(0xd026, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5fc6, gbc.sp());
        EXPECT(0xd028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc6fd));
        EXPECT(0xcb, gbc.readMem(0xd026));
        EXPECT(0x26, gbc.readMem(0xd027));
        // CB 26 013D
        gbc.setState(0x3cea, 0x4162, 0x5560, 0xca1d, 0x4c81, 0x972d, 0x0, 0x0);
        gbc.writeMem(0x3cea, { 0xcb, 0x26 });
        gbc.writeMem(0x972d, { 0xf3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4162, gbc.sp());
        EXPECT(0x3cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x972d));
        // CB 26 013E
        gbc.setState(0x90f8, 0xe199, 0xc460, 0x4d91, 0x1225, 0xfad7, 0x0, 0x0);
        gbc.writeMem(0x90f8, { 0xcb, 0x26 });
        gbc.writeMem(0xfad7, { 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0x90fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f8));
        EXPECT(0x26, gbc.readMem(0x90f9));
        EXPECT(0x6e, gbc.readMem(0xfad7));
        // CB 26 013F
        gbc.setState(0xa3f6, 0x388a, 0x860, 0x5516, 0x3671, 0xa3d5, 0x1, 0x0);
        gbc.writeMem(0xa3d5, { 0x72 });
        gbc.writeMem(0xa3f6, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x388a, gbc.sp());
        EXPECT(0xa3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xa3d5));
        EXPECT(0xcb, gbc.readMem(0xa3f6));
        EXPECT(0x26, gbc.readMem(0xa3f7));
        // CB 26 0140
        gbc.setState(0x15b1, 0x9964, 0x77b0, 0x2878, 0x23d0, 0xc682, 0x1, 0x0);
        gbc.writeMem(0x15b1, { 0xcb, 0x26 });
        gbc.writeMem(0xc682, { 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9964, gbc.sp());
        EXPECT(0x15b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc682));
        // CB 26 0146
        gbc.setState(0xaf0, 0x97ad, 0x56a0, 0x1bec, 0x6c9e, 0xcef4, 0x0, 0x0);
        gbc.writeMem(0xaf0, { 0xcb, 0x26 });
        gbc.writeMem(0xcef4, { 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x97ad, gbc.sp());
        EXPECT(0xaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcef4));
        // CB 26 0147
        gbc.setState(0x12d8, 0xcf50, 0xec70, 0x72ae, 0xa2e7, 0xd4d0, 0x1, 0x0);
        gbc.writeMem(0x12d8, { 0xcb, 0x26 });
        gbc.writeMem(0xd4d0, { 0xbc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcf50, gbc.sp());
        EXPECT(0x12da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd4d0));
        // CB 26 0149
        gbc.setState(0x77a5, 0x9543, 0x9f00, 0x8fb2, 0xd4d1, 0xc64b, 0x1, 0x0);
        gbc.writeMem(0x77a5, { 0xcb, 0x26 });
        gbc.writeMem(0xc64b, { 0xd4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9543, gbc.sp());
        EXPECT(0x77a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc64b));
        // CB 26 014A
        gbc.setState(0x581b, 0x1ee6, 0x8bc0, 0x99a4, 0x6d05, 0x8215, 0x0, 0x1);
        gbc.writeMem(0x581b, { 0xcb, 0x26 });
        gbc.writeMem(0x8215, { 0x73 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1ee6, gbc.sp());
        EXPECT(0x581d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8215));
        // CB 26 014B
        gbc.setState(0x9551, 0x2e82, 0x3f00, 0xf038, 0xa153, 0xb3a5, 0x1, 0x0);
        gbc.writeMem(0x9551, { 0xcb, 0x26 });
        gbc.writeMem(0xb3a5, { 0xbe });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2e82, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9551));
        EXPECT(0x26, gbc.readMem(0x9552));
        EXPECT(0x7c, gbc.readMem(0xb3a5));
        // CB 26 014D
        gbc.setState(0x36c6, 0xb1c1, 0xed80, 0xece2, 0xae7b, 0xfe22, 0x0, 0x1);
        gbc.writeMem(0x36c6, { 0xcb, 0x26 });
        gbc.writeMem(0xfe22, { 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb1c1, gbc.sp());
        EXPECT(0x36c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xfe22));
        // CB 26 014E
        gbc.setState(0x9025, 0xb2c5, 0x59c0, 0x836c, 0x26b0, 0x9aff, 0x1, 0x0);
        gbc.writeMem(0x9025, { 0xcb, 0x26 });
        gbc.writeMem(0x9aff, { 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0x9027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9025));
        EXPECT(0x26, gbc.readMem(0x9026));
        EXPECT(0xa6, gbc.readMem(0x9aff));
        // CB 26 0153
        gbc.setState(0x7dec, 0xc6c, 0x7f40, 0xfa09, 0xc8f, 0x8139, 0x1, 0x1);
        gbc.writeMem(0x7dec, { 0xcb, 0x26 });
        gbc.writeMem(0x8139, { 0x3e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0x7dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8139));
        // CB 26 0154
        gbc.setState(0x673c, 0x1ff5, 0xf6f0, 0x9b8c, 0x5614, 0x9a54, 0x0, 0x0);
        gbc.writeMem(0x673c, { 0xcb, 0x26 });
        gbc.writeMem(0x9a54, { 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1ff5, gbc.sp());
        EXPECT(0x673e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9a54));
        // CB 26 0158
        gbc.setState(0xc4e8, 0xc3c2, 0x3ca0, 0xb2b9, 0x1931, 0x8000, 0x1, 0x1);
        gbc.writeMem(0x8000, { 0x84 });
        gbc.writeMem(0xc4e8, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc3c2, gbc.sp());
        EXPECT(0xc4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8000));
        EXPECT(0xcb, gbc.readMem(0xc4e8));
        EXPECT(0x26, gbc.readMem(0xc4e9));
        // CB 26 015D
        gbc.setState(0xae74, 0xbf2c, 0x1d40, 0xf447, 0xed99, 0xe1e4, 0x0, 0x0);
        gbc.writeMem(0xae74, { 0xcb, 0x26 });
        gbc.writeMem(0xe1e4, { 0xee });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbf2c, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae74));
        EXPECT(0x26, gbc.readMem(0xae75));
        EXPECT(0xdc, gbc.readMem(0xe1e4));
        // CB 26 015E
        gbc.setState(0xfdf, 0xdc00, 0x98a0, 0xee4b, 0x6a9f, 0x8909, 0x0, 0x0);
        gbc.writeMem(0xfdf, { 0xcb, 0x26 });
        gbc.writeMem(0x8909, { 0xb5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdc00, gbc.sp());
        EXPECT(0xfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8909));
        // CB 26 0161
        gbc.setState(0xa7e, 0x9494, 0x5f10, 0xa4e0, 0xc6cb, 0xc7d1, 0x1, 0x1);
        gbc.writeMem(0xa7e, { 0xcb, 0x26 });
        gbc.writeMem(0xc7d1, { 0xe1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9494, gbc.sp());
        EXPECT(0xa80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc7d1));
        // CB 26 0162
        gbc.setState(0xcac1, 0x8cd1, 0x25b0, 0x23f3, 0x884c, 0x913b, 0x1, 0x1);
        gbc.writeMem(0x913b, { 0xee });
        gbc.writeMem(0xcac1, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8cd1, gbc.sp());
        EXPECT(0xcac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x913b));
        EXPECT(0xcb, gbc.readMem(0xcac1));
        EXPECT(0x26, gbc.readMem(0xcac2));
        // CB 26 0163
        gbc.setState(0x4ced, 0xdda2, 0x9660, 0x66fb, 0x2094, 0xcdfa, 0x0, 0x1);
        gbc.writeMem(0x4ced, { 0xcb, 0x26 });
        gbc.writeMem(0xcdfa, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdda2, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xcdfa));
        // CB 26 0165
        gbc.setState(0x1b9a, 0xa2c4, 0xe090, 0x80a8, 0xbf7c, 0xb1dc, 0x0, 0x0);
        gbc.writeMem(0x1b9a, { 0xcb, 0x26 });
        gbc.writeMem(0xb1dc, { 0xd6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa2c4, gbc.sp());
        EXPECT(0x1b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb1dc));
        // CB 26 016B
        gbc.setState(0x3d2d, 0xafa2, 0xdf50, 0xa937, 0xd0ae, 0xd2bb, 0x0, 0x0);
        gbc.writeMem(0x3d2d, { 0xcb, 0x26 });
        gbc.writeMem(0xd2bb, { 0xa1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0x3d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd2bb));
        // CB 26 016C
        gbc.setState(0xbd22, 0x2428, 0x8750, 0x8e0c, 0x29f, 0x9c43, 0x1, 0x1);
        gbc.writeMem(0x9c43, { 0xf8 });
        gbc.writeMem(0xbd22, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2428, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9c43));
        EXPECT(0xcb, gbc.readMem(0xbd22));
        EXPECT(0x26, gbc.readMem(0xbd23));
        // CB 26 016E
        gbc.setState(0x53d3, 0x2080, 0xd320, 0x107f, 0x5785, 0xe541, 0x1, 0x0);
        gbc.writeMem(0x53d3, { 0xcb, 0x26 });
        gbc.writeMem(0xe541, { 0x3d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2080, gbc.sp());
        EXPECT(0x53d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe541));
        // CB 26 0172
        gbc.setState(0xe0b3, 0x521c, 0x9c90, 0xb9ed, 0xef7f, 0xe4f7, 0x0, 0x0);
        gbc.writeMem(0xe0b3, { 0xcb, 0x26 });
        gbc.writeMem(0xe4f7, { 0x3f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x521c, gbc.sp());
        EXPECT(0xe0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b3));
        EXPECT(0x26, gbc.readMem(0xe0b4));
        EXPECT(0x7e, gbc.readMem(0xe4f7));
        // CB 26 0173
        gbc.setState(0x8ebc, 0x404b, 0x8670, 0x9d15, 0x5217, 0xb3cb, 0x0, 0x1);
        gbc.writeMem(0x8ebc, { 0xcb, 0x26 });
        gbc.writeMem(0xb3cb, { 0x23 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x404b, gbc.sp());
        EXPECT(0x8ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebc));
        EXPECT(0x26, gbc.readMem(0x8ebd));
        EXPECT(0x46, gbc.readMem(0xb3cb));
        // CB 26 0178
        gbc.setState(0x2874, 0xdaf6, 0xca0, 0x4d1b, 0xaf64, 0xb4ae, 0x0, 0x0);
        gbc.writeMem(0x2874, { 0xcb, 0x26 });
        gbc.writeMem(0xb4ae, { 0xe });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdaf6, gbc.sp());
        EXPECT(0x2876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb4ae));
        // CB 26 017C
        gbc.setState(0x78c3, 0xe851, 0x6e50, 0x4aaf, 0x8e1, 0xa698, 0x0, 0x1);
        gbc.writeMem(0x78c3, { 0xcb, 0x26 });
        gbc.writeMem(0xa698, { 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe851, gbc.sp());
        EXPECT(0x78c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xa698));
        // CB 26 017F
        gbc.setState(0x76eb, 0x9096, 0x8a50, 0x5029, 0xc38a, 0x93cc, 0x1, 0x0);
        gbc.writeMem(0x76eb, { 0xcb, 0x26 });
        gbc.writeMem(0x93cc, { 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9096, gbc.sp());
        EXPECT(0x76ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x93cc));
        // CB 26 0182
        gbc.setState(0x727a, 0xc2b0, 0xffa0, 0x9a29, 0xd6c2, 0xfa2a, 0x0, 0x1);
        gbc.writeMem(0x727a, { 0xcb, 0x26 });
        gbc.writeMem(0xfa2a, { 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc2b0, gbc.sp());
        EXPECT(0x727c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xfa2a));
        // CB 26 0183
        gbc.setState(0x77d3, 0x7b3e, 0xb210, 0xd1f3, 0x39c2, 0xba28, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0xcb, 0x26 });
        gbc.writeMem(0xba28, { 0x73 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7b3e, gbc.sp());
        EXPECT(0x77d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xba28));
        // CB 26 0184
        gbc.setState(0x169c, 0x6fbe, 0xb0d0, 0x56c3, 0xfc06, 0xd29c, 0x1, 0x1);
        gbc.writeMem(0x169c, { 0xcb, 0x26 });
        gbc.writeMem(0xd29c, { 0xd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6fbe, gbc.sp());
        EXPECT(0x169e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd29c));
        // CB 26 018A
        gbc.setState(0xb85a, 0x528, 0xdf20, 0x8d77, 0xebf3, 0xcbf0, 0x0, 0x0);
        gbc.writeMem(0xb85a, { 0xcb, 0x26 });
        gbc.writeMem(0xcbf0, { 0x32 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x528, gbc.sp());
        EXPECT(0xb85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85a));
        EXPECT(0x26, gbc.readMem(0xb85b));
        EXPECT(0x64, gbc.readMem(0xcbf0));
        // CB 26 018B
        gbc.setState(0x107c, 0x5638, 0xde20, 0xcc95, 0xc3b2, 0xf702, 0x0, 0x1);
        gbc.writeMem(0x107c, { 0xcb, 0x26 });
        gbc.writeMem(0xf702, { 0x21 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5638, gbc.sp());
        EXPECT(0x107e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xf702));
        // CB 26 018C
        gbc.setState(0x90f, 0x8247, 0x18e0, 0x86a9, 0x9e1f, 0x8a21, 0x0, 0x0);
        gbc.writeMem(0x90f, { 0xcb, 0x26 });
        gbc.writeMem(0x8a21, { 0xca });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8247, gbc.sp());
        EXPECT(0x911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8a21));
        // CB 26 018D
        gbc.setState(0x90c6, 0xda5b, 0xd240, 0x5fca, 0x7a13, 0xfac2, 0x1, 0x1);
        gbc.writeMem(0x90c6, { 0xcb, 0x26 });
        gbc.writeMem(0xfac2, { 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xda5b, gbc.sp());
        EXPECT(0x90c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c6));
        EXPECT(0x26, gbc.readMem(0x90c7));
        EXPECT(0x76, gbc.readMem(0xfac2));
        // CB 26 018E
        gbc.setState(0x3835, 0xcb55, 0xb80, 0x6170, 0x2b02, 0xb3c1, 0x1, 0x0);
        gbc.writeMem(0x3835, { 0xcb, 0x26 });
        gbc.writeMem(0xb3c1, { 0xba });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcb55, gbc.sp());
        EXPECT(0x3837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb3c1));
        // CB 26 018F
        gbc.setState(0x6709, 0xd4f3, 0x8900, 0x33d4, 0xbdec, 0xb5f1, 0x1, 0x0);
        gbc.writeMem(0x6709, { 0xcb, 0x26 });
        gbc.writeMem(0xb5f1, { 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd4f3, gbc.sp());
        EXPECT(0x670b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb5f1));
        // CB 26 0190
        gbc.setState(0xa40a, 0x51, 0xa640, 0xda5b, 0xa77d, 0xf88b, 0x1, 0x0);
        gbc.writeMem(0xa40a, { 0xcb, 0x26 });
        gbc.writeMem(0xf88b, { 0xa5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x51, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40a));
        EXPECT(0x26, gbc.readMem(0xa40b));
        EXPECT(0x4a, gbc.readMem(0xf88b));
        // CB 26 0191
        gbc.setState(0xee5d, 0x41d4, 0x7580, 0xc4bd, 0xb1da, 0xbf40, 0x1, 0x0);
        gbc.writeMem(0xbf40, { 0xee });
        gbc.writeMem(0xee5d, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x41d4, gbc.sp());
        EXPECT(0xee5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xbf40));
        EXPECT(0xcb, gbc.readMem(0xee5d));
        EXPECT(0x26, gbc.readMem(0xee5e));
        // CB 26 0195
        gbc.setState(0x268e, 0x116c, 0x4c30, 0x4bdb, 0xff5c, 0xbfb2, 0x1, 0x0);
        gbc.writeMem(0x268e, { 0xcb, 0x26 });
        gbc.writeMem(0xbfb2, { 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0x2690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbfb2));
        // CB 26 0197
        gbc.setState(0x886a, 0xfaba, 0xc450, 0x502, 0xa7cb, 0x9829, 0x0, 0x1);
        gbc.writeMem(0x886a, { 0xcb, 0x26 });
        gbc.writeMem(0x9829, { 0x67 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfaba, gbc.sp());
        EXPECT(0x886c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886a));
        EXPECT(0x26, gbc.readMem(0x886b));
        EXPECT(0xce, gbc.readMem(0x9829));
        // CB 26 0198
        gbc.setState(0x117d, 0xd863, 0xe510, 0x61fc, 0xeb4a, 0xcb13, 0x0, 0x0);
        gbc.writeMem(0x117d, { 0xcb, 0x26 });
        gbc.writeMem(0xcb13, { 0x96 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd863, gbc.sp());
        EXPECT(0x117f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcb13));
        // CB 26 019A
        gbc.setState(0x3eae, 0xda6e, 0x90f0, 0x1524, 0xb0a8, 0xb059, 0x0, 0x0);
        gbc.writeMem(0x3eae, { 0xcb, 0x26 });
        gbc.writeMem(0xb059, { 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xda6e, gbc.sp());
        EXPECT(0x3eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xb059));
        // CB 26 019C
        gbc.setState(0x7a46, 0x656d, 0xb2c0, 0xb625, 0xaf5a, 0x97b8, 0x1, 0x1);
        gbc.writeMem(0x7a46, { 0xcb, 0x26 });
        gbc.writeMem(0x97b8, { 0xfe });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x656d, gbc.sp());
        EXPECT(0x7a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x97b8));
        // CB 26 019D
        gbc.setState(0x43f5, 0xc617, 0xc000, 0xc00c, 0xec6a, 0xf921, 0x0, 0x1);
        gbc.writeMem(0x43f5, { 0xcb, 0x26 });
        gbc.writeMem(0xf921, { 0xa });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc617, gbc.sp());
        EXPECT(0x43f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xf921));
        // CB 26 019F
        gbc.setState(0xe3d4, 0x1809, 0xbce0, 0x8610, 0xd7a, 0x8134, 0x1, 0x0);
        gbc.writeMem(0x8134, { 0xa5 });
        gbc.writeMem(0xe3d4, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0xe3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8134));
        EXPECT(0xcb, gbc.readMem(0xe3d4));
        EXPECT(0x26, gbc.readMem(0xe3d5));
        // CB 26 01A2
        gbc.setState(0x570c, 0x578f, 0x91f0, 0x8012, 0x46ed, 0xd672, 0x1, 0x0);
        gbc.writeMem(0x570c, { 0xcb, 0x26 });
        gbc.writeMem(0xd672, { 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x578f, gbc.sp());
        EXPECT(0x570e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd672));
        // CB 26 01A3
        gbc.setState(0xafc2, 0xfe6, 0xa3f0, 0x94c0, 0xf577, 0xfc79, 0x0, 0x0);
        gbc.writeMem(0xafc2, { 0xcb, 0x26 });
        gbc.writeMem(0xfc79, { 0x54 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfe6, gbc.sp());
        EXPECT(0xafc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc2));
        EXPECT(0x26, gbc.readMem(0xafc3));
        EXPECT(0xa8, gbc.readMem(0xfc79));
        // CB 26 01A9
        gbc.setState(0xca98, 0xd5db, 0xcbc0, 0xc971, 0xd528, 0xfb4a, 0x1, 0x0);
        gbc.writeMem(0xca98, { 0xcb, 0x26 });
        gbc.writeMem(0xfb4a, { 0x5f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd5db, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca98));
        EXPECT(0x26, gbc.readMem(0xca99));
        EXPECT(0xbe, gbc.readMem(0xfb4a));
        // CB 26 01AA
        gbc.setState(0x5485, 0x8664, 0x10f0, 0x2d81, 0x3487, 0xc596, 0x1, 0x0);
        gbc.writeMem(0x5485, { 0xcb, 0x26 });
        gbc.writeMem(0xc596, { 0xb5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8664, gbc.sp());
        EXPECT(0x5487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc596));
        // CB 26 01AB
        gbc.setState(0x7e32, 0x15df, 0x5610, 0xd1d, 0xd5f, 0xa4a7, 0x1, 0x0);
        gbc.writeMem(0x7e32, { 0xcb, 0x26 });
        gbc.writeMem(0xa4a7, { 0x92 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xa4a7));
        // CB 26 01AE
        gbc.setState(0x1253, 0xb6f2, 0x95e0, 0x60a9, 0xf4db, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x1253, { 0xcb, 0x26 });
        gbc.writeMem(0xcce1, { 0x70 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb6f2, gbc.sp());
        EXPECT(0x1255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcce1));
        // CB 26 01AF
        gbc.setState(0x2b0c, 0xdf01, 0xe940, 0x37a8, 0xc78, 0xb1ad, 0x0, 0x1);
        gbc.writeMem(0x2b0c, { 0xcb, 0x26 });
        gbc.writeMem(0xb1ad, { 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdf01, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb1ad));
        // CB 26 01B0
        gbc.setState(0x3b4, 0x3934, 0xab10, 0x9215, 0x3960, 0xb14a, 0x0, 0x1);
        gbc.writeMem(0x3b4, { 0xcb, 0x26 });
        gbc.writeMem(0xb14a, { 0x17 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3934, gbc.sp());
        EXPECT(0x3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb14a));
        // CB 26 01B5
        gbc.setState(0xb4cf, 0x56e1, 0x9c40, 0xa7ef, 0x827e, 0xc5e5, 0x0, 0x1);
        gbc.writeMem(0xb4cf, { 0xcb, 0x26 });
        gbc.writeMem(0xc5e5, { 0xe6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x56e1, gbc.sp());
        EXPECT(0xb4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4cf));
        EXPECT(0x26, gbc.readMem(0xb4d0));
        EXPECT(0xcc, gbc.readMem(0xc5e5));
        // CB 26 01B6
        gbc.setState(0xe7e8, 0x418d, 0x9ab0, 0x7566, 0x9590, 0x9343, 0x0, 0x1);
        gbc.writeMem(0x9343, { 0xe9 });
        gbc.writeMem(0xe7e8, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x418d, gbc.sp());
        EXPECT(0xe7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9343));
        EXPECT(0xcb, gbc.readMem(0xe7e8));
        EXPECT(0x26, gbc.readMem(0xe7e9));
        // CB 26 01B8
        gbc.setState(0xb697, 0x2e22, 0xd6e0, 0x2d78, 0x1991, 0xd1b6, 0x1, 0x1);
        gbc.writeMem(0xb697, { 0xcb, 0x26 });
        gbc.writeMem(0xd1b6, { 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2e22, gbc.sp());
        EXPECT(0xb699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb697));
        EXPECT(0x26, gbc.readMem(0xb698));
        EXPECT(0xc8, gbc.readMem(0xd1b6));
        // CB 26 01B9
        gbc.setState(0x8ad9, 0x96be, 0xb2a0, 0x777b, 0x8016, 0xe8f4, 0x1, 0x0);
        gbc.writeMem(0x8ad9, { 0xcb, 0x26 });
        gbc.writeMem(0xe8f4, { 0xa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x96be, gbc.sp());
        EXPECT(0x8adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad9));
        EXPECT(0x26, gbc.readMem(0x8ada));
        EXPECT(0x14, gbc.readMem(0xe8f4));
        // CB 26 01BB
        gbc.setState(0x1201, 0x961c, 0x98e0, 0x555f, 0xf37e, 0x9dce, 0x1, 0x0);
        gbc.writeMem(0x1201, { 0xcb, 0x26 });
        gbc.writeMem(0x9dce, { 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x961c, gbc.sp());
        EXPECT(0x1203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9dce));
        // CB 26 01BE
        gbc.setState(0x59f9, 0x8ce, 0x8ab0, 0x1c86, 0x42af, 0x86ac, 0x0, 0x0);
        gbc.writeMem(0x59f9, { 0xcb, 0x26 });
        gbc.writeMem(0x86ac, { 0x1f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8ce, gbc.sp());
        EXPECT(0x59fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x86ac));
        // CB 26 01C0
        gbc.setState(0x9ef7, 0x837b, 0x5c10, 0xc789, 0x2f90, 0x93bf, 0x1, 0x0);
        gbc.writeMem(0x93bf, { 0x79 });
        gbc.writeMem(0x9ef7, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x837b, gbc.sp());
        EXPECT(0x9ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x93bf));
        EXPECT(0xcb, gbc.readMem(0x9ef7));
        EXPECT(0x26, gbc.readMem(0x9ef8));
        // CB 26 01C1
        gbc.setState(0x8ab, 0x7eb1, 0x3c20, 0x9718, 0xc880, 0xb1d2, 0x0, 0x1);
        gbc.writeMem(0x8ab, { 0xcb, 0x26 });
        gbc.writeMem(0xb1d2, { 0x70 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7eb1, gbc.sp());
        EXPECT(0x8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb1d2));
        // CB 26 01C4
        gbc.setState(0x348b, 0xaad8, 0x8a20, 0x2b81, 0x5f69, 0xbeda, 0x0, 0x0);
        gbc.writeMem(0x348b, { 0xcb, 0x26 });
        gbc.writeMem(0xbeda, { 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaad8, gbc.sp());
        EXPECT(0x348d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbeda));
        // CB 26 01C5
        gbc.setState(0xad9d, 0x928e, 0x400, 0xc381, 0x6521, 0x8334, 0x0, 0x0);
        gbc.writeMem(0x8334, { 0xe3 });
        gbc.writeMem(0xad9d, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0xad9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8334));
        EXPECT(0xcb, gbc.readMem(0xad9d));
        EXPECT(0x26, gbc.readMem(0xad9e));
        // CB 26 01C6
        gbc.setState(0x270, 0x70bc, 0x890, 0xf50c, 0x5d86, 0x9a3d, 0x0, 0x0);
        gbc.writeMem(0x270, { 0xcb, 0x26 });
        gbc.writeMem(0x9a3d, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0x272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9a3d));
        // CB 26 01CA
        gbc.setState(0x601b, 0x27e7, 0xccf0, 0x63c7, 0xd7e5, 0xe302, 0x0, 0x0);
        gbc.writeMem(0x601b, { 0xcb, 0x26 });
        gbc.writeMem(0xe302, { 0xbf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x27e7, gbc.sp());
        EXPECT(0x601d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe302));
        // CB 26 01CD
        gbc.setState(0x1a, 0x80be, 0xded0, 0x4788, 0x638a, 0xf6db, 0x0, 0x0);
        gbc.writeMem(0x1a, { 0xcb, 0x26 });
        gbc.writeMem(0xf6db, { 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x80be, gbc.sp());
        EXPECT(0x1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xf6db));
        // CB 26 01CE
        gbc.setState(0xeb2f, 0x6434, 0x8640, 0x473c, 0xdd07, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0xc6d5, { 0xed });
        gbc.writeMem(0xeb2f, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6434, gbc.sp());
        EXPECT(0xeb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc6d5));
        EXPECT(0xcb, gbc.readMem(0xeb2f));
        EXPECT(0x26, gbc.readMem(0xeb30));
        // CB 26 01CF
        gbc.setState(0x8b03, 0xe090, 0xc360, 0xa11, 0xc784, 0x93b3, 0x0, 0x0);
        gbc.writeMem(0x8b03, { 0xcb, 0x26 });
        gbc.writeMem(0x93b3, { 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0x8b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b03));
        EXPECT(0x26, gbc.readMem(0x8b04));
        EXPECT(0x70, gbc.readMem(0x93b3));
        // CB 26 01D0
        gbc.setState(0x14d3, 0xdf33, 0x99d0, 0x4119, 0xc4af, 0x819d, 0x1, 0x1);
        gbc.writeMem(0x14d3, { 0xcb, 0x26 });
        gbc.writeMem(0x819d, { 0xc8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdf33, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x819d));
        // CB 26 01D1
        gbc.setState(0x5778, 0x74e3, 0x5b10, 0x3b96, 0x9778, 0xeca8, 0x0, 0x1);
        gbc.writeMem(0x5778, { 0xcb, 0x26 });
        gbc.writeMem(0xeca8, { 0xf4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x74e3, gbc.sp());
        EXPECT(0x577a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xeca8));
        // CB 26 01D4
        gbc.setState(0x9e2a, 0x389d, 0x5ce0, 0x5265, 0x9a33, 0xea5f, 0x0, 0x1);
        gbc.writeMem(0x9e2a, { 0xcb, 0x26 });
        gbc.writeMem(0xea5f, { 0xd9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x389d, gbc.sp());
        EXPECT(0x9e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2a));
        EXPECT(0x26, gbc.readMem(0x9e2b));
        EXPECT(0xb2, gbc.readMem(0xea5f));
        // CB 26 01D8
        gbc.setState(0x9857, 0xc672, 0x25b0, 0xedbb, 0xdae, 0xfac0, 0x0, 0x0);
        gbc.writeMem(0x9857, { 0xcb, 0x26 });
        gbc.writeMem(0xfac0, { 0x8c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc672, gbc.sp());
        EXPECT(0x9859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9857));
        EXPECT(0x26, gbc.readMem(0x9858));
        EXPECT(0x18, gbc.readMem(0xfac0));
        // CB 26 01DB
        gbc.setState(0x6017, 0x30db, 0x1e30, 0xd261, 0x39bf, 0xae2d, 0x1, 0x0);
        gbc.writeMem(0x6017, { 0xcb, 0x26 });
        gbc.writeMem(0xae2d, { 0x16 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x30db, gbc.sp());
        EXPECT(0x6019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xae2d));
        // CB 26 01DC
        gbc.setState(0x282c, 0x1c8b, 0x5d10, 0xd912, 0x56ab, 0xb0ce, 0x1, 0x0);
        gbc.writeMem(0x282c, { 0xcb, 0x26 });
        gbc.writeMem(0xb0ce, { 0xf5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1c8b, gbc.sp());
        EXPECT(0x282e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb0ce));
        // CB 26 01DF
        gbc.setState(0xcf2, 0x89b5, 0xc280, 0x8734, 0xa271, 0x96ed, 0x1, 0x0);
        gbc.writeMem(0xcf2, { 0xcb, 0x26 });
        gbc.writeMem(0x96ed, { 0x85 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x89b5, gbc.sp());
        EXPECT(0xcf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x96ed));
        // CB 26 01E1
        gbc.setState(0x36bf, 0x5dae, 0xf2d0, 0xf210, 0x45bf, 0xb986, 0x1, 0x1);
        gbc.writeMem(0x36bf, { 0xcb, 0x26 });
        gbc.writeMem(0xb986, { 0x96 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5dae, gbc.sp());
        EXPECT(0x36c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb986));
        // CB 26 01E5
        gbc.setState(0xce0a, 0x1c38, 0xcb70, 0x7daa, 0x306, 0xf234, 0x0, 0x1);
        gbc.writeMem(0xce0a, { 0xcb, 0x26 });
        gbc.writeMem(0xf234, { 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0a));
        EXPECT(0x26, gbc.readMem(0xce0b));
        EXPECT(0xb2, gbc.readMem(0xf234));
        // CB 26 01E6
        gbc.setState(0xefc7, 0xe965, 0x9fc0, 0x2b5d, 0x72c5, 0xdbd3, 0x0, 0x1);
        gbc.writeMem(0xdbd3, { 0x4c });
        gbc.writeMem(0xefc7, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe965, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xdbd3));
        EXPECT(0xcb, gbc.readMem(0xefc7));
        EXPECT(0x26, gbc.readMem(0xefc8));
        // CB 26 01EA
        gbc.setState(0x7226, 0xcdf2, 0x1ff0, 0x4f3d, 0x6473, 0xfb20, 0x0, 0x0);
        gbc.writeMem(0x7226, { 0xcb, 0x26 });
        gbc.writeMem(0xfb20, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0x7228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xfb20));
        // CB 26 01EB
        gbc.setState(0x512, 0x3b9c, 0xe890, 0x8ff5, 0x57bb, 0xd355, 0x0, 0x1);
        gbc.writeMem(0x512, { 0xcb, 0x26 });
        gbc.writeMem(0xd355, { 0x62 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0x514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xd355));
        // CB 26 01ED
        gbc.setState(0x26e2, 0x9c9, 0xde70, 0x83c2, 0x9d4, 0x92e7, 0x1, 0x1);
        gbc.writeMem(0x26e2, { 0xcb, 0x26 });
        gbc.writeMem(0x92e7, { 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9c9, gbc.sp());
        EXPECT(0x26e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x92e7));
        // CB 26 01EF
        gbc.setState(0x9cbb, 0x7572, 0xcd40, 0x8f41, 0x92f1, 0x86db, 0x1, 0x0);
        gbc.writeMem(0x86db, { 0xf1 });
        gbc.writeMem(0x9cbb, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x9cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x86db));
        EXPECT(0xcb, gbc.readMem(0x9cbb));
        EXPECT(0x26, gbc.readMem(0x9cbc));
        // CB 26 01F1
        gbc.setState(0xc0f1, 0x39e1, 0x4190, 0xd2ab, 0x69f8, 0xe37e, 0x0, 0x0);
        gbc.writeMem(0xc0f1, { 0xcb, 0x26 });
        gbc.writeMem(0xe37e, { 0xe0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x39e1, gbc.sp());
        EXPECT(0xc0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f1));
        EXPECT(0x26, gbc.readMem(0xc0f2));
        EXPECT(0xc0, gbc.readMem(0xe37e));
        // CB 26 01F2
        gbc.setState(0x3511, 0x3be7, 0x8b50, 0xe025, 0xbd8a, 0xb248, 0x0, 0x1);
        gbc.writeMem(0x3511, { 0xcb, 0x26 });
        gbc.writeMem(0xb248, { 0xb2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3be7, gbc.sp());
        EXPECT(0x3513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb248));
        // CB 26 01F3
        gbc.setState(0x46a, 0x7c83, 0xc920, 0x720c, 0x1bf9, 0xd766, 0x1, 0x0);
        gbc.writeMem(0x46a, { 0xcb, 0x26 });
        gbc.writeMem(0xd766, { 0x1e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7c83, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd766));
        // CB 26 01F6
        gbc.setState(0x663f, 0xfc1a, 0xbd30, 0x2c4d, 0x59e6, 0x8902, 0x1, 0x0);
        gbc.writeMem(0x663f, { 0xcb, 0x26 });
        gbc.writeMem(0x8902, { 0x7b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfc1a, gbc.sp());
        EXPECT(0x6641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x8902));
        // CB 26 01F7
        gbc.setState(0x723, 0x6ee8, 0xf880, 0xf7d1, 0xcd72, 0xccc4, 0x0, 0x0);
        gbc.writeMem(0x723, { 0xcb, 0x26 });
        gbc.writeMem(0xccc4, { 0x65 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6ee8, gbc.sp());
        EXPECT(0x725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xccc4));
        // CB 26 01F8
        gbc.setState(0xc36f, 0x37da, 0xe6a0, 0x7b6b, 0x689b, 0xea58, 0x0, 0x1);
        gbc.writeMem(0xc36f, { 0xcb, 0x26 });
        gbc.writeMem(0xea58, { 0x1c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0xc371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36f));
        EXPECT(0x26, gbc.readMem(0xc370));
        EXPECT(0x38, gbc.readMem(0xea58));
        // CB 26 01FE
        gbc.setState(0x5b4f, 0x1edd, 0xff90, 0xfc1b, 0xdd24, 0xd464, 0x1, 0x0);
        gbc.writeMem(0x5b4f, { 0xcb, 0x26 });
        gbc.writeMem(0xd464, { 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1edd, gbc.sp());
        EXPECT(0x5b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd464));
        // CB 26 01FF
        gbc.setState(0xf9f, 0x9c, 0x4dc0, 0xf935, 0xd0b2, 0xa5c8, 0x0, 0x0);
        gbc.writeMem(0xf9f, { 0xcb, 0x26 });
        gbc.writeMem(0xa5c8, { 0x27 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9c, gbc.sp());
        EXPECT(0xfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa5c8));
        // CB 26 0201
        gbc.setState(0x2a46, 0x50e2, 0xdec0, 0x2d03, 0xf6d2, 0xa910, 0x1, 0x0);
        gbc.writeMem(0x2a46, { 0xcb, 0x26 });
        gbc.writeMem(0xa910, { 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x50e2, gbc.sp());
        EXPECT(0x2a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa910));
        // CB 26 0202
        gbc.setState(0x9be5, 0xf664, 0x1cc0, 0x9c42, 0xc37f, 0xd998, 0x1, 0x0);
        gbc.writeMem(0x9be5, { 0xcb, 0x26 });
        gbc.writeMem(0xd998, { 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf664, gbc.sp());
        EXPECT(0x9be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be5));
        EXPECT(0x26, gbc.readMem(0x9be6));
        EXPECT(0x74, gbc.readMem(0xd998));
        // CB 26 0204
        gbc.setState(0xeff9, 0x838c, 0x4670, 0x29a, 0x5a29, 0xe55a, 0x1, 0x1);
        gbc.writeMem(0xe55a, { 0x36 });
        gbc.writeMem(0xeff9, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x838c, gbc.sp());
        EXPECT(0xeffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe55a));
        EXPECT(0xcb, gbc.readMem(0xeff9));
        EXPECT(0x26, gbc.readMem(0xeffa));
        // CB 26 0207
        gbc.setState(0x900f, 0x3b38, 0xde90, 0x8c7f, 0x573d, 0xb917, 0x0, 0x0);
        gbc.writeMem(0x900f, { 0xcb, 0x26 });
        gbc.writeMem(0xb917, { 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3b38, gbc.sp());
        EXPECT(0x9011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900f));
        EXPECT(0x26, gbc.readMem(0x9010));
        EXPECT(0xf2, gbc.readMem(0xb917));
        // CB 26 0209
        gbc.setState(0xdcf1, 0x5752, 0x6d50, 0xebd0, 0x5b3b, 0x8cd8, 0x0, 0x0);
        gbc.writeMem(0x8cd8, { 0x87 });
        gbc.writeMem(0xdcf1, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5752, gbc.sp());
        EXPECT(0xdcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8cd8));
        EXPECT(0xcb, gbc.readMem(0xdcf1));
        EXPECT(0x26, gbc.readMem(0xdcf2));
        // CB 26 020B
        gbc.setState(0xabf, 0x47a, 0x4ea0, 0x7906, 0x7b10, 0x8e2f, 0x1, 0x0);
        gbc.writeMem(0xabf, { 0xcb, 0x26 });
        gbc.writeMem(0x8e2f, { 0x70 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x47a, gbc.sp());
        EXPECT(0xac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8e2f));
        // CB 26 020D
        gbc.setState(0x4550, 0x70e8, 0x3840, 0xe6f5, 0xf0c8, 0xf618, 0x0, 0x0);
        gbc.writeMem(0x4550, { 0xcb, 0x26 });
        gbc.writeMem(0xf618, { 0xf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x70e8, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xf618));
        // CB 26 0210
        gbc.setState(0x1a21, 0x8ac1, 0x92a0, 0xe578, 0x192b, 0xa0d2, 0x1, 0x0);
        gbc.writeMem(0x1a21, { 0xcb, 0x26 });
        gbc.writeMem(0xa0d2, { 0x6f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8ac1, gbc.sp());
        EXPECT(0x1a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xa0d2));
        // CB 26 0211
        gbc.setState(0xb957, 0x82e2, 0x8e90, 0x67df, 0x5ae5, 0xa325, 0x1, 0x0);
        gbc.writeMem(0xa325, { 0x60 });
        gbc.writeMem(0xb957, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x82e2, gbc.sp());
        EXPECT(0xb959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa325));
        EXPECT(0xcb, gbc.readMem(0xb957));
        EXPECT(0x26, gbc.readMem(0xb958));
        // CB 26 0212
        gbc.setState(0x6d26, 0x2822, 0x9210, 0x62fa, 0xe67a, 0xc9ad, 0x0, 0x0);
        gbc.writeMem(0x6d26, { 0xcb, 0x26 });
        gbc.writeMem(0xc9ad, { 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2822, gbc.sp());
        EXPECT(0x6d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xc9ad));
        // CB 26 0216
        gbc.setState(0x7a14, 0x4c52, 0x63f0, 0xc308, 0x9408, 0x82e2, 0x0, 0x1);
        gbc.writeMem(0x7a14, { 0xcb, 0x26 });
        gbc.writeMem(0x82e2, { 0x5f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4c52, gbc.sp());
        EXPECT(0x7a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x82e2));
        // CB 26 0218
        gbc.setState(0x1e59, 0xeec2, 0xd360, 0x1ef0, 0xf255, 0xf201, 0x0, 0x1);
        gbc.writeMem(0x1e59, { 0xcb, 0x26 });
        gbc.writeMem(0xf201, { 0x21 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeec2, gbc.sp());
        EXPECT(0x1e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xf201));
        // CB 26 0219
        gbc.setState(0xd841, 0xf4a5, 0xa3a0, 0xe14b, 0xe155, 0xbcae, 0x0, 0x1);
        gbc.writeMem(0xbcae, { 0x15 });
        gbc.writeMem(0xd841, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf4a5, gbc.sp());
        EXPECT(0xd843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xbcae));
        EXPECT(0xcb, gbc.readMem(0xd841));
        EXPECT(0x26, gbc.readMem(0xd842));
        // CB 26 021F
        gbc.setState(0xb8f5, 0x2328, 0x7e80, 0x4554, 0xae57, 0xd27b, 0x1, 0x1);
        gbc.writeMem(0xb8f5, { 0xcb, 0x26 });
        gbc.writeMem(0xd27b, { 0x5e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2328, gbc.sp());
        EXPECT(0xb8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f5));
        EXPECT(0x26, gbc.readMem(0xb8f6));
        EXPECT(0xbc, gbc.readMem(0xd27b));
        // CB 26 0222
        gbc.setState(0xad3b, 0x7a9, 0x4710, 0x8355, 0xfb65, 0x95dd, 0x1, 0x1);
        gbc.writeMem(0x95dd, { 0x3e });
        gbc.writeMem(0xad3b, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0xad3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x95dd));
        EXPECT(0xcb, gbc.readMem(0xad3b));
        EXPECT(0x26, gbc.readMem(0xad3c));
        // CB 26 0224
        gbc.setState(0x8f30, 0xed54, 0xc810, 0x22fd, 0x1b9d, 0x827a, 0x0, 0x1);
        gbc.writeMem(0x827a, { 0x47 });
        gbc.writeMem(0x8f30, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xed54, gbc.sp());
        EXPECT(0x8f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x827a));
        EXPECT(0xcb, gbc.readMem(0x8f30));
        EXPECT(0x26, gbc.readMem(0x8f31));
        // CB 26 0228
        gbc.setState(0x27, 0x7ded, 0x480, 0xdaf4, 0xb43b, 0x92d0, 0x1, 0x1);
        gbc.writeMem(0x27, { 0xcb, 0x26 });
        gbc.writeMem(0x92d0, { 0xf7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7ded, gbc.sp());
        EXPECT(0x29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x92d0));
        // CB 26 0230
        gbc.setState(0x1c46, 0xa8a5, 0x5250, 0xb7c1, 0x76ab, 0xe9d3, 0x1, 0x1);
        gbc.writeMem(0x1c46, { 0xcb, 0x26 });
        gbc.writeMem(0xe9d3, { 0x5d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa8a5, gbc.sp());
        EXPECT(0x1c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xe9d3));
        // CB 26 0231
        gbc.setState(0xda02, 0xc8ac, 0x9720, 0x444e, 0x1a00, 0x8fa3, 0x0, 0x1);
        gbc.writeMem(0x8fa3, { 0xf9 });
        gbc.writeMem(0xda02, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc8ac, gbc.sp());
        EXPECT(0xda04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8fa3));
        EXPECT(0xcb, gbc.readMem(0xda02));
        EXPECT(0x26, gbc.readMem(0xda03));
        // CB 26 0234
        gbc.setState(0xec65, 0xc542, 0xc3d0, 0x3d8e, 0x4321, 0xcc40, 0x1, 0x1);
        gbc.writeMem(0xcc40, { 0x6d });
        gbc.writeMem(0xec65, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc542, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcc40));
        EXPECT(0xcb, gbc.readMem(0xec65));
        EXPECT(0x26, gbc.readMem(0xec66));
        // CB 26 023C
        gbc.setState(0xc886, 0x8bf7, 0xe050, 0x2924, 0xd5f5, 0xd186, 0x1, 0x0);
        gbc.writeMem(0xc886, { 0xcb, 0x26 });
        gbc.writeMem(0xd186, { 0xa2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8bf7, gbc.sp());
        EXPECT(0xc888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc886));
        EXPECT(0x26, gbc.readMem(0xc887));
        EXPECT(0x44, gbc.readMem(0xd186));
        // CB 26 023D
        gbc.setState(0x3b2d, 0xf694, 0x91b0, 0xe71f, 0x3ab9, 0x83d7, 0x1, 0x0);
        gbc.writeMem(0x3b2d, { 0xcb, 0x26 });
        gbc.writeMem(0x83d7, { 0xa3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf694, gbc.sp());
        EXPECT(0x3b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x83d7));
        // CB 26 0241
        gbc.setState(0x6f0, 0x4e44, 0x9c0, 0x342e, 0x69ac, 0xc6af, 0x0, 0x0);
        gbc.writeMem(0x6f0, { 0xcb, 0x26 });
        gbc.writeMem(0xc6af, { 0x1f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4e44, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc6af));
        // CB 26 0245
        gbc.setState(0x4a89, 0x99e, 0x58d0, 0x9503, 0x906c, 0xb3e6, 0x0, 0x0);
        gbc.writeMem(0x4a89, { 0xcb, 0x26 });
        gbc.writeMem(0xb3e6, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x99e, gbc.sp());
        EXPECT(0x4a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb3e6));
        // CB 26 024A
        gbc.setState(0xab24, 0x96d8, 0xd2b0, 0x202b, 0x2149, 0xee79, 0x0, 0x1);
        gbc.writeMem(0xab24, { 0xcb, 0x26 });
        gbc.writeMem(0xee79, { 0x86 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x96d8, gbc.sp());
        EXPECT(0xab26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab24));
        EXPECT(0x26, gbc.readMem(0xab25));
        EXPECT(0xc, gbc.readMem(0xee79));
        // CB 26 024D
        gbc.setState(0x2ca1, 0x12c8, 0x7470, 0xdb71, 0x82a5, 0xf4e5, 0x1, 0x0);
        gbc.writeMem(0x2ca1, { 0xcb, 0x26 });
        gbc.writeMem(0xf4e5, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x12c8, gbc.sp());
        EXPECT(0x2ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xf4e5));
        // CB 26 024E
        gbc.setState(0x55f2, 0x303a, 0x6030, 0x6953, 0x420d, 0xf7b7, 0x1, 0x1);
        gbc.writeMem(0x55f2, { 0xcb, 0x26 });
        gbc.writeMem(0xf7b7, { 0x5c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x303a, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf7b7));
        // CB 26 024F
        gbc.setState(0x1e81, 0xe9f0, 0xfcd0, 0x81da, 0x4675, 0xd538, 0x0, 0x1);
        gbc.writeMem(0x1e81, { 0xcb, 0x26 });
        gbc.writeMem(0xd538, { 0xa6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe9f0, gbc.sp());
        EXPECT(0x1e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd538));
        // CB 26 0252
        gbc.setState(0x813d, 0xd5e0, 0x88f0, 0x3a71, 0x90b6, 0xc6c8, 0x1, 0x1);
        gbc.writeMem(0x813d, { 0xcb, 0x26 });
        gbc.writeMem(0xc6c8, { 0x11 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0x813f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813d));
        EXPECT(0x26, gbc.readMem(0x813e));
        EXPECT(0x22, gbc.readMem(0xc6c8));
        // CB 26 0253
        gbc.setState(0x7637, 0x16a0, 0x83a0, 0x3c2f, 0x8cf0, 0xa3d7, 0x1, 0x1);
        gbc.writeMem(0x7637, { 0xcb, 0x26 });
        gbc.writeMem(0xa3d7, { 0xbd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x16a0, gbc.sp());
        EXPECT(0x7639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa3d7));
        // CB 26 0254
        gbc.setState(0xd074, 0xcd4d, 0x6de0, 0x134d, 0x6570, 0x88bc, 0x0, 0x1);
        gbc.writeMem(0x88bc, { 0xd7 });
        gbc.writeMem(0xd074, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcd4d, gbc.sp());
        EXPECT(0xd076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x88bc));
        EXPECT(0xcb, gbc.readMem(0xd074));
        EXPECT(0x26, gbc.readMem(0xd075));
        // CB 26 0255
        gbc.setState(0xd5a2, 0xb14a, 0xfe90, 0x65d0, 0x4155, 0x9cec, 0x0, 0x1);
        gbc.writeMem(0x9cec, { 0xb2 });
        gbc.writeMem(0xd5a2, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb14a, gbc.sp());
        EXPECT(0xd5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9cec));
        EXPECT(0xcb, gbc.readMem(0xd5a2));
        EXPECT(0x26, gbc.readMem(0xd5a3));
        // CB 26 0257
        gbc.setState(0xa10, 0x64f, 0xfac0, 0xcf33, 0xa557, 0xa7ab, 0x1, 0x0);
        gbc.writeMem(0xa10, { 0xcb, 0x26 });
        gbc.writeMem(0xa7ab, { 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x64f, gbc.sp());
        EXPECT(0xa12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa7ab));
        // CB 26 0258
        gbc.setState(0x28c6, 0x7d21, 0x8000, 0x4f66, 0x7b4e, 0xa97d, 0x1, 0x1);
        gbc.writeMem(0x28c6, { 0xcb, 0x26 });
        gbc.writeMem(0xa97d, { 0xb2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7d21, gbc.sp());
        EXPECT(0x28c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa97d));
        // CB 26 025C
        gbc.setState(0x88a6, 0x6509, 0x9580, 0x8bb6, 0xe50c, 0xb68a, 0x0, 0x0);
        gbc.writeMem(0x88a6, { 0xcb, 0x26 });
        gbc.writeMem(0xb68a, { 0xfd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6509, gbc.sp());
        EXPECT(0x88a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a6));
        EXPECT(0x26, gbc.readMem(0x88a7));
        EXPECT(0xfa, gbc.readMem(0xb68a));
        // CB 26 0260
        gbc.setState(0xde78, 0xf5d7, 0xe4a0, 0xeadb, 0xf58f, 0x9d4b, 0x0, 0x0);
        gbc.writeMem(0x9d4b, { 0x6c });
        gbc.writeMem(0xde78, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf5d7, gbc.sp());
        EXPECT(0xde7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9d4b));
        EXPECT(0xcb, gbc.readMem(0xde78));
        EXPECT(0x26, gbc.readMem(0xde79));
        // CB 26 0261
        gbc.setState(0x42dc, 0xc20a, 0x4d0, 0x8c20, 0xf0d6, 0xc7a3, 0x1, 0x0);
        gbc.writeMem(0x42dc, { 0xcb, 0x26 });
        gbc.writeMem(0xc7a3, { 0xe6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xc7a3));
        // CB 26 0262
        gbc.setState(0xed21, 0x66c2, 0x79a0, 0x637d, 0xbe9c, 0xb36c, 0x1, 0x1);
        gbc.writeMem(0xb36c, { 0x79 });
        gbc.writeMem(0xed21, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x66c2, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb36c));
        EXPECT(0xcb, gbc.readMem(0xed21));
        EXPECT(0x26, gbc.readMem(0xed22));
        // CB 26 0263
        gbc.setState(0x2de, 0xe2a9, 0xf170, 0x6994, 0x869f, 0x913f, 0x1, 0x1);
        gbc.writeMem(0x2de, { 0xcb, 0x26 });
        gbc.writeMem(0x913f, { 0xa8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0x2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x913f));
        // CB 26 0267
        gbc.setState(0xadc6, 0xb37a, 0x8810, 0x7054, 0x9043, 0xc360, 0x1, 0x0);
        gbc.writeMem(0xadc6, { 0xcb, 0x26 });
        gbc.writeMem(0xc360, { 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb37a, gbc.sp());
        EXPECT(0xadc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc6));
        EXPECT(0x26, gbc.readMem(0xadc7));
        EXPECT(0x9e, gbc.readMem(0xc360));
        // CB 26 0269
        gbc.setState(0xc300, 0x98f6, 0x9db0, 0x3073, 0x5cc6, 0xa7e9, 0x0, 0x1);
        gbc.writeMem(0xa7e9, { 0x3 });
        gbc.writeMem(0xc300, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x98f6, gbc.sp());
        EXPECT(0xc302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa7e9));
        EXPECT(0xcb, gbc.readMem(0xc300));
        EXPECT(0x26, gbc.readMem(0xc301));
        // CB 26 026C
        gbc.setState(0xcec8, 0x98b5, 0x8ee0, 0xb016, 0x1421, 0x82fa, 0x1, 0x1);
        gbc.writeMem(0x82fa, { 0x3 });
        gbc.writeMem(0xcec8, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x98b5, gbc.sp());
        EXPECT(0xceca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x82fa));
        EXPECT(0xcb, gbc.readMem(0xcec8));
        EXPECT(0x26, gbc.readMem(0xcec9));
        // CB 26 026D
        gbc.setState(0xe74d, 0x1590, 0x9270, 0x1145, 0x24e2, 0x82f1, 0x0, 0x1);
        gbc.writeMem(0x82f1, { 0xb });
        gbc.writeMem(0xe74d, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1590, gbc.sp());
        EXPECT(0xe74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x82f1));
        EXPECT(0xcb, gbc.readMem(0xe74d));
        EXPECT(0x26, gbc.readMem(0xe74e));
        // CB 26 026F
        gbc.setState(0x3512, 0x4d3, 0x42c0, 0x67c6, 0x5ab0, 0x8754, 0x0, 0x1);
        gbc.writeMem(0x3512, { 0xcb, 0x26 });
        gbc.writeMem(0x8754, { 0x59 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4d3, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8754));
        // CB 26 0271
        gbc.setState(0x18ec, 0xab1e, 0x7110, 0x3c58, 0xb3, 0xcbb6, 0x1, 0x0);
        gbc.writeMem(0x18ec, { 0xcb, 0x26 });
        gbc.writeMem(0xcbb6, { 0x3d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xab1e, gbc.sp());
        EXPECT(0x18ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcbb6));
        // CB 26 0273
        gbc.setState(0xe3d8, 0x1093, 0x7ac0, 0x4f50, 0xcfc9, 0xcf18, 0x1, 0x1);
        gbc.writeMem(0xcf18, { 0xe8 });
        gbc.writeMem(0xe3d8, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0xe3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcf18));
        EXPECT(0xcb, gbc.readMem(0xe3d8));
        EXPECT(0x26, gbc.readMem(0xe3d9));
        // CB 26 0275
        gbc.setState(0x3891, 0x5df6, 0x1ad0, 0xf1bc, 0x3dc2, 0xade8, 0x0, 0x0);
        gbc.writeMem(0x3891, { 0xcb, 0x26 });
        gbc.writeMem(0xade8, { 0xd6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5df6, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xade8));
        // CB 26 0277
        gbc.setState(0x1417, 0xc813, 0x5f90, 0x26a7, 0x4edf, 0x821e, 0x0, 0x1);
        gbc.writeMem(0x1417, { 0xcb, 0x26 });
        gbc.writeMem(0x821e, { 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc813, gbc.sp());
        EXPECT(0x1419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x821e));
        // CB 26 0279
        gbc.setState(0x1c6c, 0x9f9, 0xcbe0, 0x92db, 0xddee, 0xf2e6, 0x1, 0x0);
        gbc.writeMem(0x1c6c, { 0xcb, 0x26 });
        gbc.writeMem(0xf2e6, { 0x10 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x1c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf2e6));
        // CB 26 027D
        gbc.setState(0xd6a4, 0xfa00, 0xadd0, 0x667c, 0xbbbc, 0x94e5, 0x1, 0x0);
        gbc.writeMem(0x94e5, { 0xa6 });
        gbc.writeMem(0xd6a4, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfa00, gbc.sp());
        EXPECT(0xd6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x94e5));
        EXPECT(0xcb, gbc.readMem(0xd6a4));
        EXPECT(0x26, gbc.readMem(0xd6a5));
        // CB 26 027E
        gbc.setState(0x378f, 0x12c3, 0xf2c0, 0xa159, 0x5a37, 0x87d2, 0x1, 0x1);
        gbc.writeMem(0x378f, { 0xcb, 0x26 });
        gbc.writeMem(0x87d2, { 0x26 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x12c3, gbc.sp());
        EXPECT(0x3791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x87d2));
        // CB 26 027F
        gbc.setState(0xb53a, 0x6118, 0x510, 0xf6cb, 0x1469, 0xcd4c, 0x0, 0x0);
        gbc.writeMem(0xb53a, { 0xcb, 0x26 });
        gbc.writeMem(0xcd4c, { 0x88 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6118, gbc.sp());
        EXPECT(0xb53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53a));
        EXPECT(0x26, gbc.readMem(0xb53b));
        EXPECT(0x10, gbc.readMem(0xcd4c));
        // CB 26 0281
        gbc.setState(0x1cc5, 0xc396, 0xa6e0, 0x3519, 0xcd26, 0x860b, 0x0, 0x1);
        gbc.writeMem(0x1cc5, { 0xcb, 0x26 });
        gbc.writeMem(0x860b, { 0x7f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc396, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x860b));
        // CB 26 0284
        gbc.setState(0x1e48, 0x1c7e, 0x2a30, 0xe222, 0x4f43, 0xbcf6, 0x1, 0x0);
        gbc.writeMem(0x1e48, { 0xcb, 0x26 });
        gbc.writeMem(0xbcf6, { 0xda });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1c7e, gbc.sp());
        EXPECT(0x1e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xbcf6));
        // CB 26 0286
        gbc.setState(0x342, 0x41bc, 0x4ad0, 0x2915, 0x375f, 0xc91c, 0x0, 0x1);
        gbc.writeMem(0x342, { 0xcb, 0x26 });
        gbc.writeMem(0xc91c, { 0x40 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x41bc, gbc.sp());
        EXPECT(0x344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc91c));
        // CB 26 0288
        gbc.setState(0x98b3, 0xd8d4, 0x190, 0xd630, 0xe63c, 0xebc4, 0x1, 0x0);
        gbc.writeMem(0x98b3, { 0xcb, 0x26 });
        gbc.writeMem(0xebc4, { 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd8d4, gbc.sp());
        EXPECT(0x98b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b3));
        EXPECT(0x26, gbc.readMem(0x98b4));
        EXPECT(0x8e, gbc.readMem(0xebc4));
        // CB 26 028A
        gbc.setState(0xbc39, 0xe3ce, 0xcd0, 0xd5bb, 0x7cf, 0x8ccf, 0x0, 0x0);
        gbc.writeMem(0x8ccf, { 0xeb });
        gbc.writeMem(0xbc39, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe3ce, gbc.sp());
        EXPECT(0xbc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8ccf));
        EXPECT(0xcb, gbc.readMem(0xbc39));
        EXPECT(0x26, gbc.readMem(0xbc3a));
        // CB 26 028C
        gbc.setState(0xa04e, 0x79b9, 0x3f20, 0x2ebf, 0x5f62, 0xf8fa, 0x1, 0x0);
        gbc.writeMem(0xa04e, { 0xcb, 0x26 });
        gbc.writeMem(0xf8fa, { 0xa5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x79b9, gbc.sp());
        EXPECT(0xa050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04e));
        EXPECT(0x26, gbc.readMem(0xa04f));
        EXPECT(0x4a, gbc.readMem(0xf8fa));
        // CB 26 028E
        gbc.setState(0x7e8e, 0x9d5f, 0xcc0, 0x1281, 0xe9ec, 0x9bb9, 0x0, 0x0);
        gbc.writeMem(0x7e8e, { 0xcb, 0x26 });
        gbc.writeMem(0x9bb9, { 0xba });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9d5f, gbc.sp());
        EXPECT(0x7e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9bb9));
        // CB 26 028F
        gbc.setState(0x5ad2, 0xae15, 0x5400, 0x5f9c, 0xbc57, 0xe6fc, 0x0, 0x1);
        gbc.writeMem(0x5ad2, { 0xcb, 0x26 });
        gbc.writeMem(0xe6fc, { 0x5e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xae15, gbc.sp());
        EXPECT(0x5ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe6fc));
        // CB 26 0295
        gbc.setState(0x7314, 0x7358, 0x4950, 0x807f, 0x299, 0x9528, 0x0, 0x1);
        gbc.writeMem(0x7314, { 0xcb, 0x26 });
        gbc.writeMem(0x9528, { 0xf5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7358, gbc.sp());
        EXPECT(0x7316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9528));
        // CB 26 0298
        gbc.setState(0x8281, 0x58b5, 0xed20, 0x857b, 0xe795, 0xcbb4, 0x0, 0x0);
        gbc.writeMem(0x8281, { 0xcb, 0x26 });
        gbc.writeMem(0xcbb4, { 0x61 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x58b5, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8281));
        EXPECT(0x26, gbc.readMem(0x8282));
        EXPECT(0xc2, gbc.readMem(0xcbb4));
        // CB 26 029B
        gbc.setState(0x4cbf, 0x90b0, 0x4d20, 0x6bfc, 0xd596, 0xbe89, 0x0, 0x1);
        gbc.writeMem(0x4cbf, { 0xcb, 0x26 });
        gbc.writeMem(0xbe89, { 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x90b0, gbc.sp());
        EXPECT(0x4cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xbe89));
        // CB 26 029E
        gbc.setState(0x247e, 0x76f6, 0x6a00, 0x33cd, 0xb4eb, 0xc071, 0x1, 0x1);
        gbc.writeMem(0x247e, { 0xcb, 0x26 });
        gbc.writeMem(0xc071, { 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0x2480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc071));
        // CB 26 029F
        gbc.setState(0xe38, 0x6c67, 0xf0d0, 0xb6d3, 0xe988, 0xd0f2, 0x1, 0x0);
        gbc.writeMem(0xe38, { 0xcb, 0x26 });
        gbc.writeMem(0xd0f2, { 0xae });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6c67, gbc.sp());
        EXPECT(0xe3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd0f2));
        // CB 26 02A1
        gbc.setState(0xe58a, 0x6754, 0xae40, 0xdf60, 0x81ea, 0xe797, 0x1, 0x1);
        gbc.writeMem(0xe58a, { 0xcb, 0x26 });
        gbc.writeMem(0xe797, { 0xa9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6754, gbc.sp());
        EXPECT(0xe58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58a));
        EXPECT(0x26, gbc.readMem(0xe58b));
        EXPECT(0x52, gbc.readMem(0xe797));
        // CB 26 02A2
        gbc.setState(0x46b5, 0x5925, 0xebd0, 0xb8f2, 0xd2bc, 0xaeb8, 0x1, 0x0);
        gbc.writeMem(0x46b5, { 0xcb, 0x26 });
        gbc.writeMem(0xaeb8, { 0x68 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0x46b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaeb8));
        // CB 26 02A3
        gbc.setState(0x80e7, 0x5ce5, 0x9f50, 0x93d3, 0x4f27, 0x87ea, 0x0, 0x1);
        gbc.writeMem(0x80e7, { 0xcb, 0x26 });
        gbc.writeMem(0x87ea, { 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5ce5, gbc.sp());
        EXPECT(0x80e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e7));
        EXPECT(0x26, gbc.readMem(0x80e8));
        EXPECT(0xa, gbc.readMem(0x87ea));
        // CB 26 02A4
        gbc.setState(0xd4f3, 0xa5c6, 0xfa40, 0xbc4e, 0xfab4, 0x823b, 0x1, 0x1);
        gbc.writeMem(0x823b, { 0xd9 });
        gbc.writeMem(0xd4f3, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0xd4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x823b));
        EXPECT(0xcb, gbc.readMem(0xd4f3));
        EXPECT(0x26, gbc.readMem(0xd4f4));
        // CB 26 02A5
        gbc.setState(0x6d74, 0x73aa, 0x7710, 0x3892, 0xb799, 0xbea1, 0x0, 0x0);
        gbc.writeMem(0x6d74, { 0xcb, 0x26 });
        gbc.writeMem(0xbea1, { 0xa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x73aa, gbc.sp());
        EXPECT(0x6d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbea1));
        // CB 26 02A6
        gbc.setState(0x4b70, 0x7316, 0x1a40, 0xd7b5, 0x41ab, 0x847e, 0x0, 0x1);
        gbc.writeMem(0x4b70, { 0xcb, 0x26 });
        gbc.writeMem(0x847e, { 0xfa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0x4b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x847e));
        // CB 26 02A8
        gbc.setState(0x7a7d, 0xe3a3, 0x9f90, 0xb798, 0xead8, 0x9a21, 0x1, 0x0);
        gbc.writeMem(0x7a7d, { 0xcb, 0x26 });
        gbc.writeMem(0x9a21, { 0xa5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe3a3, gbc.sp());
        EXPECT(0x7a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9a21));
        // CB 26 02A9
        gbc.setState(0x3487, 0x9317, 0x9c30, 0x4ea6, 0x851f, 0xc3ec, 0x1, 0x0);
        gbc.writeMem(0x3487, { 0xcb, 0x26 });
        gbc.writeMem(0xc3ec, { 0x1b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0x3489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc3ec));
        // CB 26 02AC
        gbc.setState(0x955d, 0xc0f7, 0x6160, 0x75c, 0xc770, 0xddea, 0x0, 0x0);
        gbc.writeMem(0x955d, { 0xcb, 0x26 });
        gbc.writeMem(0xddea, { 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc0f7, gbc.sp());
        EXPECT(0x955f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955d));
        EXPECT(0x26, gbc.readMem(0x955e));
        EXPECT(0xba, gbc.readMem(0xddea));
        // CB 26 02AE
        gbc.setState(0xce8e, 0x454a, 0x2ee0, 0xc3a3, 0xbea4, 0x9888, 0x0, 0x1);
        gbc.writeMem(0x9888, { 0xc1 });
        gbc.writeMem(0xce8e, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0xce90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9888));
        EXPECT(0xcb, gbc.readMem(0xce8e));
        EXPECT(0x26, gbc.readMem(0xce8f));
        // CB 26 02B1
        gbc.setState(0xaf95, 0x5905, 0x7a00, 0xf98c, 0x55e, 0xc697, 0x0, 0x1);
        gbc.writeMem(0xaf95, { 0xcb, 0x26 });
        gbc.writeMem(0xc697, { 0x46 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5905, gbc.sp());
        EXPECT(0xaf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf95));
        EXPECT(0x26, gbc.readMem(0xaf96));
        EXPECT(0x8c, gbc.readMem(0xc697));
        // CB 26 02B3
        gbc.setState(0xcf7b, 0xe7ee, 0x9490, 0x65f5, 0xd77f, 0x8d9d, 0x0, 0x1);
        gbc.writeMem(0x8d9d, { 0xa0 });
        gbc.writeMem(0xcf7b, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe7ee, gbc.sp());
        EXPECT(0xcf7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8d9d));
        EXPECT(0xcb, gbc.readMem(0xcf7b));
        EXPECT(0x26, gbc.readMem(0xcf7c));
        // CB 26 02B4
        gbc.setState(0xc86b, 0xb467, 0x7900, 0xfa7a, 0x720f, 0xf97f, 0x0, 0x1);
        gbc.writeMem(0xc86b, { 0xcb, 0x26 });
        gbc.writeMem(0xf97f, { 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb467, gbc.sp());
        EXPECT(0xc86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86b));
        EXPECT(0x26, gbc.readMem(0xc86c));
        EXPECT(0x22, gbc.readMem(0xf97f));
        // CB 26 02B5
        gbc.setState(0xaf52, 0x5d7, 0x1840, 0x50a2, 0x96d3, 0x8835, 0x0, 0x1);
        gbc.writeMem(0x8835, { 0xc3 });
        gbc.writeMem(0xaf52, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5d7, gbc.sp());
        EXPECT(0xaf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8835));
        EXPECT(0xcb, gbc.readMem(0xaf52));
        EXPECT(0x26, gbc.readMem(0xaf53));
        // CB 26 02B6
        gbc.setState(0x63a9, 0x39b3, 0xc350, 0xec48, 0x56d, 0xc6a3, 0x1, 0x1);
        gbc.writeMem(0x63a9, { 0xcb, 0x26 });
        gbc.writeMem(0xc6a3, { 0xed });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x39b3, gbc.sp());
        EXPECT(0x63ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc6a3));
        // CB 26 02B9
        gbc.setState(0xe9a0, 0xf41c, 0x35c0, 0xa951, 0xef39, 0xf495, 0x1, 0x1);
        gbc.writeMem(0xe9a0, { 0xcb, 0x26 });
        gbc.writeMem(0xf495, { 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf41c, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a0));
        EXPECT(0x26, gbc.readMem(0xe9a1));
        EXPECT(0x88, gbc.readMem(0xf495));
        // CB 26 02BC
        gbc.setState(0xa733, 0xd12f, 0x7ee0, 0xc61a, 0x6e70, 0xa3fe, 0x1, 0x1);
        gbc.writeMem(0xa3fe, { 0xd6 });
        gbc.writeMem(0xa733, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd12f, gbc.sp());
        EXPECT(0xa735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa3fe));
        EXPECT(0xcb, gbc.readMem(0xa733));
        EXPECT(0x26, gbc.readMem(0xa734));
        // CB 26 02BD
        gbc.setState(0x9009, 0x7404, 0x4aa0, 0x3837, 0x8859, 0xef0f, 0x0, 0x1);
        gbc.writeMem(0x9009, { 0xcb, 0x26 });
        gbc.writeMem(0xef0f, { 0xd1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7404, gbc.sp());
        EXPECT(0x900b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9009));
        EXPECT(0x26, gbc.readMem(0x900a));
        EXPECT(0xa2, gbc.readMem(0xef0f));
        // CB 26 02C0
        gbc.setState(0xb3e4, 0x1db2, 0x5df0, 0x5177, 0xf4ae, 0x9e8b, 0x1, 0x1);
        gbc.writeMem(0x9e8b, { 0xed });
        gbc.writeMem(0xb3e4, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1db2, gbc.sp());
        EXPECT(0xb3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9e8b));
        EXPECT(0xcb, gbc.readMem(0xb3e4));
        EXPECT(0x26, gbc.readMem(0xb3e5));
        // CB 26 02C1
        gbc.setState(0x8634, 0xa96d, 0xbe70, 0xfbd3, 0x7b02, 0xc27c, 0x0, 0x1);
        gbc.writeMem(0x8634, { 0xcb, 0x26 });
        gbc.writeMem(0xc27c, { 0x7f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0x8636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8634));
        EXPECT(0x26, gbc.readMem(0x8635));
        EXPECT(0xfe, gbc.readMem(0xc27c));
        // CB 26 02C9
        gbc.setState(0x7c0, 0xe82e, 0xd230, 0xb450, 0x12a4, 0xcf47, 0x1, 0x1);
        gbc.writeMem(0x7c0, { 0xcb, 0x26 });
        gbc.writeMem(0xcf47, { 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe82e, gbc.sp());
        EXPECT(0x7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xcf47));
        // CB 26 02CA
        gbc.setState(0x516b, 0xe586, 0x5ba0, 0xea16, 0x5799, 0xea0e, 0x1, 0x1);
        gbc.writeMem(0x516b, { 0xcb, 0x26 });
        gbc.writeMem(0xea0e, { 0x25 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe586, gbc.sp());
        EXPECT(0x516d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xea0e));
        // CB 26 02CE
        gbc.setState(0xaff, 0xebc8, 0xc160, 0x4a5c, 0x8746, 0xce03, 0x1, 0x0);
        gbc.writeMem(0xaff, { 0xcb, 0x26 });
        gbc.writeMem(0xce03, { 0xa6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xce03));
        // CB 26 02D2
        gbc.setState(0xb001, 0x6d7c, 0xaaa0, 0x3c4, 0xcfe0, 0x8a0c, 0x0, 0x1);
        gbc.writeMem(0x8a0c, { 0xab });
        gbc.writeMem(0xb001, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6d7c, gbc.sp());
        EXPECT(0xb003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8a0c));
        EXPECT(0xcb, gbc.readMem(0xb001));
        EXPECT(0x26, gbc.readMem(0xb002));
        // CB 26 02D5
        gbc.setState(0x9420, 0xd425, 0x9190, 0x2c75, 0x8b1d, 0xa5a0, 0x0, 0x0);
        gbc.writeMem(0x9420, { 0xcb, 0x26 });
        gbc.writeMem(0xa5a0, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd425, gbc.sp());
        EXPECT(0x9422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9420));
        EXPECT(0x26, gbc.readMem(0x9421));
        EXPECT(0x98, gbc.readMem(0xa5a0));
        // CB 26 02D8
        gbc.setState(0x304e, 0x29f1, 0xd3f0, 0x966d, 0xd44c, 0xcff1, 0x1, 0x1);
        gbc.writeMem(0x304e, { 0xcb, 0x26 });
        gbc.writeMem(0xcff1, { 0x1b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x29f1, gbc.sp());
        EXPECT(0x3050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcff1));
        // CB 26 02D9
        gbc.setState(0x4cfd, 0x9072, 0xca60, 0xe1a1, 0x6131, 0xc132, 0x1, 0x0);
        gbc.writeMem(0x4cfd, { 0xcb, 0x26 });
        gbc.writeMem(0xc132, { 0xae });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9072, gbc.sp());
        EXPECT(0x4cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc132));
        // CB 26 02DB
        gbc.setState(0x5eab, 0xda7f, 0xf100, 0xed04, 0xe23a, 0xc3b8, 0x0, 0x0);
        gbc.writeMem(0x5eab, { 0xcb, 0x26 });
        gbc.writeMem(0xc3b8, { 0x1d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xda7f, gbc.sp());
        EXPECT(0x5ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc3b8));
        // CB 26 02DC
        gbc.setState(0xd103, 0x3d7d, 0xc620, 0x2ad0, 0xcdc2, 0xfdab, 0x0, 0x0);
        gbc.writeMem(0xd103, { 0xcb, 0x26 });
        gbc.writeMem(0xfdab, { 0x9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3d7d, gbc.sp());
        EXPECT(0xd105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd103));
        EXPECT(0x26, gbc.readMem(0xd104));
        EXPECT(0x12, gbc.readMem(0xfdab));
        // CB 26 02DD
        gbc.setState(0x85e2, 0x3b9c, 0x3b20, 0x2f3a, 0x8ead, 0x9253, 0x1, 0x1);
        gbc.writeMem(0x85e2, { 0xcb, 0x26 });
        gbc.writeMem(0x9253, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0x85e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e2));
        EXPECT(0x26, gbc.readMem(0x85e3));
        EXPECT(0x18, gbc.readMem(0x9253));
        // CB 26 02DF
        gbc.setState(0x1fcc, 0x7d4b, 0x2ff0, 0x6dee, 0xe00b, 0xeecc, 0x1, 0x1);
        gbc.writeMem(0x1fcc, { 0xcb, 0x26 });
        gbc.writeMem(0xeecc, { 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0x1fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeecc));
        // CB 26 02E3
        gbc.setState(0x6eeb, 0x2ff5, 0xa460, 0xa1c7, 0xd355, 0xb289, 0x0, 0x0);
        gbc.writeMem(0x6eeb, { 0xcb, 0x26 });
        gbc.writeMem(0xb289, { 0xd3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2ff5, gbc.sp());
        EXPECT(0x6eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb289));
        // CB 26 02E4
        gbc.setState(0x74bc, 0x1ec8, 0xa150, 0xfe01, 0x4c16, 0xd318, 0x1, 0x1);
        gbc.writeMem(0x74bc, { 0xcb, 0x26 });
        gbc.writeMem(0xd318, { 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x74be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xd318));
        // CB 26 02E5
        gbc.setState(0xa635, 0x41e3, 0x7130, 0xd7a0, 0xe24c, 0xf6cf, 0x0, 0x0);
        gbc.writeMem(0xa635, { 0xcb, 0x26 });
        gbc.writeMem(0xf6cf, { 0x4f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0xa637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa635));
        EXPECT(0x26, gbc.readMem(0xa636));
        EXPECT(0x9e, gbc.readMem(0xf6cf));
        // CB 26 02EA
        gbc.setState(0x7e04, 0x206, 0xd410, 0xc2eb, 0x691b, 0xb24c, 0x1, 0x0);
        gbc.writeMem(0x7e04, { 0xcb, 0x26 });
        gbc.writeMem(0xb24c, { 0x3c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x206, gbc.sp());
        EXPECT(0x7e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb24c));
        // CB 26 02EB
        gbc.setState(0xd622, 0xae05, 0x7930, 0xf24c, 0xba77, 0xef2c, 0x0, 0x0);
        gbc.writeMem(0xd622, { 0xcb, 0x26 });
        gbc.writeMem(0xef2c, { 0x1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xae05, gbc.sp());
        EXPECT(0xd624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd622));
        EXPECT(0x26, gbc.readMem(0xd623));
        EXPECT(0x2, gbc.readMem(0xef2c));
        // CB 26 02EE
        gbc.setState(0x6c23, 0x1fee, 0xa9b0, 0xe6e1, 0x9289, 0x9b30, 0x1, 0x1);
        gbc.writeMem(0x6c23, { 0xcb, 0x26 });
        gbc.writeMem(0x9b30, { 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1fee, gbc.sp());
        EXPECT(0x6c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x9b30));
        // CB 26 02F0
        gbc.setState(0x2f58, 0x976b, 0x1330, 0xf349, 0xc176, 0xa1e1, 0x1, 0x0);
        gbc.writeMem(0x2f58, { 0xcb, 0x26 });
        gbc.writeMem(0xa1e1, { 0x63 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa1e1));
        // CB 26 02F1
        gbc.setState(0x792c, 0x3b03, 0x680, 0xf3be, 0xc779, 0xdc65, 0x0, 0x1);
        gbc.writeMem(0x792c, { 0xcb, 0x26 });
        gbc.writeMem(0xdc65, { 0xce });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3b03, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdc65));
        // CB 26 02F2
        gbc.setState(0x9ad7, 0x6c31, 0x1d20, 0x2c6e, 0xec2a, 0x9194, 0x0, 0x0);
        gbc.writeMem(0x9194, { 0xbf });
        gbc.writeMem(0x9ad7, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6c31, gbc.sp());
        EXPECT(0x9ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9194));
        EXPECT(0xcb, gbc.readMem(0x9ad7));
        EXPECT(0x26, gbc.readMem(0x9ad8));
        // CB 26 02F4
        gbc.setState(0x889a, 0xd265, 0x4620, 0xc22, 0x6660, 0xde9d, 0x0, 0x1);
        gbc.writeMem(0x889a, { 0xcb, 0x26 });
        gbc.writeMem(0xde9d, { 0xc4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd265, gbc.sp());
        EXPECT(0x889c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889a));
        EXPECT(0x26, gbc.readMem(0x889b));
        EXPECT(0x88, gbc.readMem(0xde9d));
        // CB 26 02F5
        gbc.setState(0x333e, 0x3891, 0x7790, 0xf924, 0x4d3f, 0xef39, 0x1, 0x1);
        gbc.writeMem(0x333e, { 0xcb, 0x26 });
        gbc.writeMem(0xef39, { 0x2c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xef39));
        // CB 26 02F7
        gbc.setState(0x56eb, 0x5700, 0xc9a0, 0x4066, 0xc6d4, 0xfd02, 0x0, 0x1);
        gbc.writeMem(0x56eb, { 0xcb, 0x26 });
        gbc.writeMem(0xfd02, { 0xfe });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5700, gbc.sp());
        EXPECT(0x56ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfd02));
        // CB 26 02F9
        gbc.setState(0x9203, 0x1ffa, 0xae20, 0xfa84, 0x313d, 0xed02, 0x1, 0x1);
        gbc.writeMem(0x9203, { 0xcb, 0x26 });
        gbc.writeMem(0xed02, { 0x77 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1ffa, gbc.sp());
        EXPECT(0x9205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9203));
        EXPECT(0x26, gbc.readMem(0x9204));
        EXPECT(0xee, gbc.readMem(0xed02));
        // CB 26 0302
        gbc.setState(0x48e1, 0x2562, 0x9f20, 0x7811, 0xb792, 0xa275, 0x1, 0x0);
        gbc.writeMem(0x48e1, { 0xcb, 0x26 });
        gbc.writeMem(0xa275, { 0xf9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2562, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xa275));
        // CB 26 0304
        gbc.setState(0x85c7, 0xb486, 0x1ea0, 0x216b, 0x1430, 0xe2b0, 0x1, 0x1);
        gbc.writeMem(0x85c7, { 0xcb, 0x26 });
        gbc.writeMem(0xe2b0, { 0xf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c7));
        EXPECT(0x26, gbc.readMem(0x85c8));
        EXPECT(0x1e, gbc.readMem(0xe2b0));
        // CB 26 0305
        gbc.setState(0x3bec, 0x4f5d, 0xbd50, 0x7615, 0xf586, 0xcc2d, 0x0, 0x0);
        gbc.writeMem(0x3bec, { 0xcb, 0x26 });
        gbc.writeMem(0xcc2d, { 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4f5d, gbc.sp());
        EXPECT(0x3bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcc2d));
        // CB 26 0306
        gbc.setState(0x9fb2, 0x1b6b, 0x2bf0, 0x1b44, 0x24a3, 0xd4a2, 0x1, 0x0);
        gbc.writeMem(0x9fb2, { 0xcb, 0x26 });
        gbc.writeMem(0xd4a2, { 0x78 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1b6b, gbc.sp());
        EXPECT(0x9fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb2));
        EXPECT(0x26, gbc.readMem(0x9fb3));
        EXPECT(0xf0, gbc.readMem(0xd4a2));
        // CB 26 0309
        gbc.setState(0x9407, 0x125f, 0xbe20, 0x88f3, 0x6b50, 0xb010, 0x1, 0x0);
        gbc.writeMem(0x9407, { 0xcb, 0x26 });
        gbc.writeMem(0xb010, { 0xd4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x125f, gbc.sp());
        EXPECT(0x9409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9407));
        EXPECT(0x26, gbc.readMem(0x9408));
        EXPECT(0xa8, gbc.readMem(0xb010));
        // CB 26 030D
        gbc.setState(0x2b11, 0xa311, 0xa6f0, 0x85f, 0x1a88, 0xb383, 0x1, 0x1);
        gbc.writeMem(0x2b11, { 0xcb, 0x26 });
        gbc.writeMem(0xb383, { 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa311, gbc.sp());
        EXPECT(0x2b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb383));
        // CB 26 030F
        gbc.setState(0x416e, 0x1298, 0x8a90, 0x9f4a, 0xeb6f, 0xb1b1, 0x1, 0x1);
        gbc.writeMem(0x416e, { 0xcb, 0x26 });
        gbc.writeMem(0xb1b1, { 0x76 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1298, gbc.sp());
        EXPECT(0x4170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb1b1));
        // CB 26 0312
        gbc.setState(0x36ea, 0x6230, 0x83b0, 0x1daa, 0x6e71, 0x8c36, 0x0, 0x0);
        gbc.writeMem(0x36ea, { 0xcb, 0x26 });
        gbc.writeMem(0x8c36, { 0xe4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6230, gbc.sp());
        EXPECT(0x36ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8c36));
        // CB 26 0316
        gbc.setState(0x20e4, 0x953e, 0x5340, 0x448a, 0xbd55, 0x87b6, 0x0, 0x0);
        gbc.writeMem(0x20e4, { 0xcb, 0x26 });
        gbc.writeMem(0x87b6, { 0x82 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x953e, gbc.sp());
        EXPECT(0x20e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x87b6));
        // CB 26 0318
        gbc.setState(0xa173, 0xbfee, 0xfb60, 0xe237, 0xcca3, 0xd7ec, 0x1, 0x1);
        gbc.writeMem(0xa173, { 0xcb, 0x26 });
        gbc.writeMem(0xd7ec, { 0xf0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbfee, gbc.sp());
        EXPECT(0xa175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa173));
        EXPECT(0x26, gbc.readMem(0xa174));
        EXPECT(0xe0, gbc.readMem(0xd7ec));
        // CB 26 0319
        gbc.setState(0x3d63, 0xa85f, 0xefd0, 0x38b3, 0xe5bd, 0xcabb, 0x0, 0x0);
        gbc.writeMem(0x3d63, { 0xcb, 0x26 });
        gbc.writeMem(0xcabb, { 0x7f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa85f, gbc.sp());
        EXPECT(0x3d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcabb));
        // CB 26 031A
        gbc.setState(0xd426, 0xe7f7, 0x3900, 0xf9cf, 0x29c6, 0xb4b2, 0x1, 0x1);
        gbc.writeMem(0xb4b2, { 0xdc });
        gbc.writeMem(0xd426, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe7f7, gbc.sp());
        EXPECT(0xd428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb4b2));
        EXPECT(0xcb, gbc.readMem(0xd426));
        EXPECT(0x26, gbc.readMem(0xd427));
        // CB 26 031F
        gbc.setState(0x7444, 0xa89, 0xe6a0, 0x5042, 0x9d9c, 0x9150, 0x0, 0x0);
        gbc.writeMem(0x7444, { 0xcb, 0x26 });
        gbc.writeMem(0x9150, { 0x46 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0x7446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9150));
        // CB 26 0324
        gbc.setState(0x8fa3, 0x8688, 0xfd30, 0xfd80, 0xb3be, 0xe893, 0x1, 0x1);
        gbc.writeMem(0x8fa3, { 0xcb, 0x26 });
        gbc.writeMem(0xe893, { 0xa4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8688, gbc.sp());
        EXPECT(0x8fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa3));
        EXPECT(0x26, gbc.readMem(0x8fa4));
        EXPECT(0x48, gbc.readMem(0xe893));
        // CB 26 0329
        gbc.setState(0x7ad4, 0xe18, 0x1d90, 0x4831, 0xec9d, 0xac02, 0x1, 0x0);
        gbc.writeMem(0x7ad4, { 0xcb, 0x26 });
        gbc.writeMem(0xac02, { 0x18 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe18, gbc.sp());
        EXPECT(0x7ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xac02));
        // CB 26 032B
        gbc.setState(0x6b5b, 0x7e2, 0xd940, 0x454a, 0xf0ba, 0xa43a, 0x0, 0x0);
        gbc.writeMem(0x6b5b, { 0xcb, 0x26 });
        gbc.writeMem(0xa43a, { 0x71 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7e2, gbc.sp());
        EXPECT(0x6b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa43a));
        // CB 26 0332
        gbc.setState(0x4c41, 0x2b8c, 0x7290, 0xb1d7, 0xf721, 0x97ef, 0x0, 0x1);
        gbc.writeMem(0x4c41, { 0xcb, 0x26 });
        gbc.writeMem(0x97ef, { 0x8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2b8c, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x97ef));
        // CB 26 0337
        gbc.setState(0xc4c0, 0x7c72, 0x90, 0x2f1b, 0xd149, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0xc4c0, { 0xcb, 0x26 });
        gbc.writeMem(0xfe66, { 0x3e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7c72, gbc.sp());
        EXPECT(0xc4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c0));
        EXPECT(0x26, gbc.readMem(0xc4c1));
        EXPECT(0x7c, gbc.readMem(0xfe66));
        // CB 26 0338
        gbc.setState(0x7231, 0xd239, 0x700, 0x3aa, 0xe999, 0xe19b, 0x1, 0x1);
        gbc.writeMem(0x7231, { 0xcb, 0x26 });
        gbc.writeMem(0xe19b, { 0xe0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd239, gbc.sp());
        EXPECT(0x7233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xe19b));
        // CB 26 0339
        gbc.setState(0x9c1f, 0xc049, 0xdf60, 0xcc2e, 0xebff, 0xe899, 0x1, 0x1);
        gbc.writeMem(0x9c1f, { 0xcb, 0x26 });
        gbc.writeMem(0xe899, { 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc049, gbc.sp());
        EXPECT(0x9c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1f));
        EXPECT(0x26, gbc.readMem(0x9c20));
        EXPECT(0x88, gbc.readMem(0xe899));
        // CB 26 033C
        gbc.setState(0x3b26, 0xe59a, 0xcd70, 0x7edf, 0xf126, 0xfba2, 0x1, 0x0);
        gbc.writeMem(0x3b26, { 0xcb, 0x26 });
        gbc.writeMem(0xfba2, { 0xe8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0x3b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfba2));
        // CB 26 0340
        gbc.setState(0x8fcb, 0x7b31, 0x14e0, 0x5765, 0xf01a, 0xc35a, 0x0, 0x0);
        gbc.writeMem(0x8fcb, { 0xcb, 0x26 });
        gbc.writeMem(0xc35a, { 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7b31, gbc.sp());
        EXPECT(0x8fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcb));
        EXPECT(0x26, gbc.readMem(0x8fcc));
        EXPECT(0x9e, gbc.readMem(0xc35a));
        // CB 26 0341
        gbc.setState(0x773c, 0x1f8f, 0x5070, 0xe293, 0x13e9, 0xb2d0, 0x0, 0x1);
        gbc.writeMem(0x773c, { 0xcb, 0x26 });
        gbc.writeMem(0xb2d0, { 0x26 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1f8f, gbc.sp());
        EXPECT(0x773e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb2d0));
        // CB 26 0342
        gbc.setState(0x50d, 0xe412, 0x1620, 0x4439, 0xdbd2, 0xf305, 0x0, 0x1);
        gbc.writeMem(0x50d, { 0xcb, 0x26 });
        gbc.writeMem(0xf305, { 0x6f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe412, gbc.sp());
        EXPECT(0x50f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf305));
        // CB 26 0345
        gbc.setState(0xdb09, 0x3ee1, 0x9660, 0x1e49, 0xcc10, 0xbd32, 0x0, 0x1);
        gbc.writeMem(0xbd32, { 0xf1 });
        gbc.writeMem(0xdb09, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3ee1, gbc.sp());
        EXPECT(0xdb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbd32));
        EXPECT(0xcb, gbc.readMem(0xdb09));
        EXPECT(0x26, gbc.readMem(0xdb0a));
        // CB 26 0346
        gbc.setState(0xc934, 0x2407, 0xb7d0, 0xacb3, 0x84c5, 0xa95f, 0x1, 0x1);
        gbc.writeMem(0xa95f, { 0xd9 });
        gbc.writeMem(0xc934, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0xc936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa95f));
        EXPECT(0xcb, gbc.readMem(0xc934));
        EXPECT(0x26, gbc.readMem(0xc935));
        // CB 26 0348
        gbc.setState(0x6d82, 0xfc8, 0x1420, 0xbe7c, 0x11af, 0xba8f, 0x1, 0x0);
        gbc.writeMem(0x6d82, { 0xcb, 0x26 });
        gbc.writeMem(0xba8f, { 0xf9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfc8, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xba8f));
        // CB 26 034A
        gbc.setState(0xc7fc, 0x673, 0x2240, 0x54e5, 0x946, 0xbf5f, 0x0, 0x0);
        gbc.writeMem(0xbf5f, { 0x7a });
        gbc.writeMem(0xc7fc, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0xc7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xbf5f));
        EXPECT(0xcb, gbc.readMem(0xc7fc));
        EXPECT(0x26, gbc.readMem(0xc7fd));
        // CB 26 034B
        gbc.setState(0x85a5, 0x99ea, 0x9a0, 0x93e0, 0x274c, 0xd39a, 0x0, 0x1);
        gbc.writeMem(0x85a5, { 0xcb, 0x26 });
        gbc.writeMem(0xd39a, { 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x99ea, gbc.sp());
        EXPECT(0x85a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a5));
        EXPECT(0x26, gbc.readMem(0x85a6));
        EXPECT(0x4e, gbc.readMem(0xd39a));
        // CB 26 034C
        gbc.setState(0x3744, 0x8398, 0xe2b0, 0x4374, 0x6756, 0xb7ea, 0x0, 0x1);
        gbc.writeMem(0x3744, { 0xcb, 0x26 });
        gbc.writeMem(0xb7ea, { 0x8f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8398, gbc.sp());
        EXPECT(0x3746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xb7ea));
        // CB 26 034E
        gbc.setState(0x3eeb, 0x1428, 0x8dc0, 0xacdb, 0x4592, 0xcc38, 0x1, 0x0);
        gbc.writeMem(0x3eeb, { 0xcb, 0x26 });
        gbc.writeMem(0xcc38, { 0x55 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1428, gbc.sp());
        EXPECT(0x3eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcc38));
        // CB 26 034F
        gbc.setState(0xe5c, 0x6ef1, 0x5e70, 0x1234, 0x79d8, 0xbb4b, 0x1, 0x1);
        gbc.writeMem(0xe5c, { 0xcb, 0x26 });
        gbc.writeMem(0xbb4b, { 0x5c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6ef1, gbc.sp());
        EXPECT(0xe5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xbb4b));
        // CB 26 0350
        gbc.setState(0x52e5, 0xe1ea, 0xed70, 0x27d, 0xca60, 0xb552, 0x0, 0x0);
        gbc.writeMem(0x52e5, { 0xcb, 0x26 });
        gbc.writeMem(0xb552, { 0xe5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe1ea, gbc.sp());
        EXPECT(0x52e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xb552));
        // CB 26 0352
        gbc.setState(0x39b9, 0x2811, 0xc870, 0x271e, 0xdfe4, 0x9f99, 0x1, 0x0);
        gbc.writeMem(0x39b9, { 0xcb, 0x26 });
        gbc.writeMem(0x9f99, { 0x9e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2811, gbc.sp());
        EXPECT(0x39bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9f99));
        // CB 26 0353
        gbc.setState(0x46c0, 0x794a, 0x88b0, 0xfc45, 0xb7e, 0xe3d9, 0x1, 0x1);
        gbc.writeMem(0x46c0, { 0xcb, 0x26 });
        gbc.writeMem(0xe3d9, { 0xe5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x794a, gbc.sp());
        EXPECT(0x46c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe3d9));
        // CB 26 0355
        gbc.setState(0xd3c3, 0x9b77, 0x4e20, 0x2247, 0xcaf7, 0xd7f5, 0x0, 0x1);
        gbc.writeMem(0xd3c3, { 0xcb, 0x26 });
        gbc.writeMem(0xd7f5, { 0x22 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9b77, gbc.sp());
        EXPECT(0xd3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c3));
        EXPECT(0x26, gbc.readMem(0xd3c4));
        EXPECT(0x44, gbc.readMem(0xd7f5));
        // CB 26 0359
        gbc.setState(0x97b5, 0x18d8, 0x6a70, 0x6a83, 0x82b8, 0xed62, 0x1, 0x0);
        gbc.writeMem(0x97b5, { 0xcb, 0x26 });
        gbc.writeMem(0xed62, { 0x58 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x18d8, gbc.sp());
        EXPECT(0x97b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b5));
        EXPECT(0x26, gbc.readMem(0x97b6));
        EXPECT(0xb0, gbc.readMem(0xed62));
        // CB 26 035B
        gbc.setState(0xcaab, 0xe078, 0xad90, 0x243f, 0x5924, 0xa463, 0x1, 0x0);
        gbc.writeMem(0xa463, { 0x80 });
        gbc.writeMem(0xcaab, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe078, gbc.sp());
        EXPECT(0xcaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa463));
        EXPECT(0xcb, gbc.readMem(0xcaab));
        EXPECT(0x26, gbc.readMem(0xcaac));
        // CB 26 0360
        gbc.setState(0xdd05, 0x581a, 0x4b80, 0x98f2, 0x3d68, 0xac61, 0x1, 0x0);
        gbc.writeMem(0xac61, { 0x8d });
        gbc.writeMem(0xdd05, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x581a, gbc.sp());
        EXPECT(0xdd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xac61));
        EXPECT(0xcb, gbc.readMem(0xdd05));
        EXPECT(0x26, gbc.readMem(0xdd06));
        // CB 26 0363
        gbc.setState(0x5c13, 0xb3c, 0xc4d0, 0x5396, 0x3116, 0xb748, 0x1, 0x1);
        gbc.writeMem(0x5c13, { 0xcb, 0x26 });
        gbc.writeMem(0xb748, { 0x86 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb3c, gbc.sp());
        EXPECT(0x5c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb748));
        // CB 26 0364
        gbc.setState(0x541a, 0x7d2a, 0x8180, 0xa8d1, 0x6cdd, 0xdcca, 0x0, 0x1);
        gbc.writeMem(0x541a, { 0xcb, 0x26 });
        gbc.writeMem(0xdcca, { 0xdf });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7d2a, gbc.sp());
        EXPECT(0x541c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xdcca));
        // CB 26 0367
        gbc.setState(0xc02d, 0xc01b, 0x1150, 0x6a87, 0x4813, 0xa546, 0x1, 0x1);
        gbc.writeMem(0xa546, { 0x15 });
        gbc.writeMem(0xc02d, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc01b, gbc.sp());
        EXPECT(0xc02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xa546));
        EXPECT(0xcb, gbc.readMem(0xc02d));
        EXPECT(0x26, gbc.readMem(0xc02e));
        // CB 26 0369
        gbc.setState(0xde6a, 0xbcdd, 0x55d0, 0x5f47, 0xccd0, 0x9855, 0x0, 0x1);
        gbc.writeMem(0x9855, { 0xcb });
        gbc.writeMem(0xde6a, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0xde6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x9855));
        EXPECT(0xcb, gbc.readMem(0xde6a));
        EXPECT(0x26, gbc.readMem(0xde6b));
        // CB 26 036A
        gbc.setState(0x6bda, 0x54e7, 0x9680, 0xdbb0, 0xce5d, 0xea26, 0x0, 0x0);
        gbc.writeMem(0x6bda, { 0xcb, 0x26 });
        gbc.writeMem(0xea26, { 0x81 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0x6bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xea26));
        // CB 26 036B
        gbc.setState(0x86a6, 0x210b, 0x3c20, 0xd497, 0x2b74, 0x9e60, 0x1, 0x1);
        gbc.writeMem(0x86a6, { 0xcb, 0x26 });
        gbc.writeMem(0x9e60, { 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x210b, gbc.sp());
        EXPECT(0x86a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a6));
        EXPECT(0x26, gbc.readMem(0x86a7));
        EXPECT(0xba, gbc.readMem(0x9e60));
        // CB 26 036D
        gbc.setState(0x31b6, 0xd556, 0x6770, 0xa72e, 0x2c64, 0xf64d, 0x0, 0x1);
        gbc.writeMem(0x31b6, { 0xcb, 0x26 });
        gbc.writeMem(0xf64d, { 0xd5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd556, gbc.sp());
        EXPECT(0x31b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xf64d));
        // CB 26 036E
        gbc.setState(0xc6ea, 0xf79b, 0x22e0, 0x21f2, 0x735d, 0xcee2, 0x1, 0x1);
        gbc.writeMem(0xc6ea, { 0xcb, 0x26 });
        gbc.writeMem(0xcee2, { 0x41 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf79b, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ea));
        EXPECT(0x26, gbc.readMem(0xc6eb));
        EXPECT(0x82, gbc.readMem(0xcee2));
        // CB 26 036F
        gbc.setState(0xbee2, 0xaaa7, 0xc6b0, 0xc54b, 0xf70, 0x80d6, 0x1, 0x0);
        gbc.writeMem(0x80d6, { 0x93 });
        gbc.writeMem(0xbee2, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaaa7, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x80d6));
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0x26, gbc.readMem(0xbee3));
        // CB 26 0374
        gbc.setState(0xd363, 0xa443, 0x4030, 0xab35, 0x9b15, 0xe3e0, 0x1, 0x0);
        gbc.writeMem(0xd363, { 0xcb, 0x26 });
        gbc.writeMem(0xe3e0, { 0x88 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa443, gbc.sp());
        EXPECT(0xd365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd363));
        EXPECT(0x26, gbc.readMem(0xd364));
        EXPECT(0x10, gbc.readMem(0xe3e0));
        // CB 26 0376
        gbc.setState(0x9542, 0x44b6, 0x7f00, 0x36c1, 0x5d0e, 0x9203, 0x0, 0x0);
        gbc.writeMem(0x9203, { 0x34 });
        gbc.writeMem(0x9542, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x44b6, gbc.sp());
        EXPECT(0x9544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9203));
        EXPECT(0xcb, gbc.readMem(0x9542));
        EXPECT(0x26, gbc.readMem(0x9543));
        // CB 26 0377
        gbc.setState(0x7ef, 0xbdc6, 0x6960, 0x5cd9, 0xa5e3, 0xd4a1, 0x0, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0x26 });
        gbc.writeMem(0xd4a1, { 0xfc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbdc6, gbc.sp());
        EXPECT(0x7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd4a1));
        // CB 26 0379
        gbc.setState(0xab3f, 0x9ebf, 0x2600, 0xc34d, 0xe3dc, 0xc1e2, 0x1, 0x1);
        gbc.writeMem(0xab3f, { 0xcb, 0x26 });
        gbc.writeMem(0xc1e2, { 0xdd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9ebf, gbc.sp());
        EXPECT(0xab41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3f));
        EXPECT(0x26, gbc.readMem(0xab40));
        EXPECT(0xba, gbc.readMem(0xc1e2));
        // CB 26 037B
        gbc.setState(0x541, 0x41e6, 0xb50, 0x878e, 0x832e, 0xc458, 0x0, 0x1);
        gbc.writeMem(0x541, { 0xcb, 0x26 });
        gbc.writeMem(0xc458, { 0x3e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xc458));
        // CB 26 037D
        gbc.setState(0x638a, 0xf5a3, 0x4440, 0xb1b1, 0x3b8, 0xed09, 0x1, 0x0);
        gbc.writeMem(0x638a, { 0xcb, 0x26 });
        gbc.writeMem(0xed09, { 0x81 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0x638c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xed09));
        // CB 26 037E
        gbc.setState(0x3b53, 0xbd24, 0x4270, 0x7255, 0xfe99, 0xdd4b, 0x1, 0x0);
        gbc.writeMem(0x3b53, { 0xcb, 0x26 });
        gbc.writeMem(0xdd4b, { 0xed });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbd24, gbc.sp());
        EXPECT(0x3b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdd4b));
        // CB 26 037F
        gbc.setState(0xdb7f, 0x6a91, 0xcbf0, 0x213c, 0x14b5, 0xa597, 0x1, 0x1);
        gbc.writeMem(0xa597, { 0x1f });
        gbc.writeMem(0xdb7f, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6a91, gbc.sp());
        EXPECT(0xdb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa597));
        EXPECT(0xcb, gbc.readMem(0xdb7f));
        EXPECT(0x26, gbc.readMem(0xdb80));
        // CB 26 0380
        gbc.setState(0xb971, 0x4b79, 0xaa90, 0x2615, 0xa38e, 0x9b1e, 0x1, 0x1);
        gbc.writeMem(0x9b1e, { 0x6b });
        gbc.writeMem(0xb971, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4b79, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9b1e));
        EXPECT(0xcb, gbc.readMem(0xb971));
        EXPECT(0x26, gbc.readMem(0xb972));
        // CB 26 0381
        gbc.setState(0xba56, 0x9ecc, 0x2f70, 0xbab3, 0xf20c, 0xf1cd, 0x1, 0x0);
        gbc.writeMem(0xba56, { 0xcb, 0x26 });
        gbc.writeMem(0xf1cd, { 0xc0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9ecc, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba56));
        EXPECT(0x26, gbc.readMem(0xba57));
        EXPECT(0x80, gbc.readMem(0xf1cd));
        // CB 26 0383
        gbc.setState(0x146, 0xbbca, 0xea30, 0xcb72, 0x2715, 0xc43a, 0x1, 0x1);
        gbc.writeMem(0x146, { 0xcb, 0x26 });
        gbc.writeMem(0xc43a, { 0x75 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbbca, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc43a));
        // CB 26 0386
        gbc.setState(0x1ba7, 0x2cdd, 0x4d80, 0xfb4e, 0xb4fe, 0x8425, 0x1, 0x0);
        gbc.writeMem(0x1ba7, { 0xcb, 0x26 });
        gbc.writeMem(0x8425, { 0x35 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2cdd, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8425));
        // CB 26 0387
        gbc.setState(0xc845, 0xe21c, 0x6360, 0xdc7e, 0xe31d, 0xd925, 0x0, 0x1);
        gbc.writeMem(0xc845, { 0xcb, 0x26 });
        gbc.writeMem(0xd925, { 0x2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe21c, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc845));
        EXPECT(0x26, gbc.readMem(0xc846));
        EXPECT(0x4, gbc.readMem(0xd925));
        // CB 26 0389
        gbc.setState(0x993f, 0xa5f4, 0xd510, 0x120b, 0xab92, 0xf63b, 0x0, 0x1);
        gbc.writeMem(0x993f, { 0xcb, 0x26 });
        gbc.writeMem(0xf63b, { 0xa0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa5f4, gbc.sp());
        EXPECT(0x9941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993f));
        EXPECT(0x26, gbc.readMem(0x9940));
        EXPECT(0x40, gbc.readMem(0xf63b));
        // CB 26 038A
        gbc.setState(0xa646, 0xd6f2, 0x710, 0x9dab, 0x2830, 0xa0f3, 0x0, 0x1);
        gbc.writeMem(0xa0f3, { 0xd8 });
        gbc.writeMem(0xa646, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd6f2, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa0f3));
        EXPECT(0xcb, gbc.readMem(0xa646));
        EXPECT(0x26, gbc.readMem(0xa647));
        // CB 26 038B
        gbc.setState(0x8896, 0x2726, 0x6f10, 0x3c6, 0x2018, 0x9240, 0x0, 0x0);
        gbc.writeMem(0x8896, { 0xcb, 0x26 });
        gbc.writeMem(0x9240, { 0xe4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2726, gbc.sp());
        EXPECT(0x8898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8896));
        EXPECT(0x26, gbc.readMem(0x8897));
        EXPECT(0xc8, gbc.readMem(0x9240));
        // CB 26 038C
        gbc.setState(0x2614, 0xfb0d, 0x4e20, 0xbffe, 0xeb54, 0xd7c6, 0x1, 0x0);
        gbc.writeMem(0x2614, { 0xcb, 0x26 });
        gbc.writeMem(0xd7c6, { 0x3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfb0d, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd7c6));
        // CB 26 038D
        gbc.setState(0x4180, 0x2fd7, 0x38e0, 0x6e60, 0xf7, 0xb6c1, 0x1, 0x1);
        gbc.writeMem(0x4180, { 0xcb, 0x26 });
        gbc.writeMem(0xb6c1, { 0x1b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2fd7, gbc.sp());
        EXPECT(0x4182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb6c1));
        // CB 26 038E
        gbc.setState(0x9667, 0x75ce, 0x8480, 0xed2f, 0x9d96, 0xc42e, 0x0, 0x1);
        gbc.writeMem(0x9667, { 0xcb, 0x26 });
        gbc.writeMem(0xc42e, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x75ce, gbc.sp());
        EXPECT(0x9669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9667));
        EXPECT(0x26, gbc.readMem(0x9668));
        EXPECT(0x12, gbc.readMem(0xc42e));
        // CB 26 038F
        gbc.setState(0x3fc6, 0x2528, 0xaec0, 0x7fa2, 0xd9fd, 0xcd8a, 0x0, 0x0);
        gbc.writeMem(0x3fc6, { 0xcb, 0x26 });
        gbc.writeMem(0xcd8a, { 0x11 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2528, gbc.sp());
        EXPECT(0x3fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xcd8a));
        // CB 26 0391
        gbc.setState(0x9176, 0x11d2, 0xa440, 0xb156, 0x34d0, 0xff57, 0x0, 0x0);
        gbc.writeMem(0x9176, { 0xcb, 0x26 });
        gbc.writeMem(0xff57, { 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x11d2, gbc.sp());
        EXPECT(0x9178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9176));
        EXPECT(0x26, gbc.readMem(0x9177));
        EXPECT(0xe2, gbc.readMem(0xff57));
        // CB 26 0392
        gbc.setState(0x352f, 0x6ad0, 0x4050, 0x2b5a, 0x74fd, 0xb9da, 0x0, 0x1);
        gbc.writeMem(0x352f, { 0xcb, 0x26 });
        gbc.writeMem(0xb9da, { 0x29 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0x3531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb9da));
        // CB 26 0393
        gbc.setState(0xce26, 0xe46c, 0x4750, 0x8111, 0x972b, 0xe946, 0x0, 0x1);
        gbc.writeMem(0xce26, { 0xcb, 0x26 });
        gbc.writeMem(0xe946, { 0x28 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe46c, gbc.sp());
        EXPECT(0xce28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce26));
        EXPECT(0x26, gbc.readMem(0xce27));
        EXPECT(0x50, gbc.readMem(0xe946));
        // CB 26 0396
        gbc.setState(0x1549, 0x9022, 0x75f0, 0x669c, 0xe8a5, 0x8150, 0x1, 0x0);
        gbc.writeMem(0x1549, { 0xcb, 0x26 });
        gbc.writeMem(0x8150, { 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9022, gbc.sp());
        EXPECT(0x154b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8150));
        // CB 26 0397
        gbc.setState(0x8f71, 0x2418, 0x59d0, 0x394b, 0xa687, 0x1f8c, 0x0, 0x1);
        gbc.writeMem(0x1f8c, { 0x0 });
        gbc.writeMem(0x8f71, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2418, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0x26, gbc.readMem(0x8f72));
        // CB 26 0399
        gbc.setState(0x2e81, 0xc3d2, 0x41a0, 0x437c, 0xf63d, 0xe694, 0x0, 0x1);
        gbc.writeMem(0x2e81, { 0xcb, 0x26 });
        gbc.writeMem(0xe694, { 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc3d2, gbc.sp());
        EXPECT(0x2e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe694));
        // CB 26 039A
        gbc.setState(0xb4c6, 0x36f, 0xaf50, 0x930a, 0xcc1f, 0xa0e1, 0x1, 0x1);
        gbc.writeMem(0xa0e1, { 0x3a });
        gbc.writeMem(0xb4c6, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x36f, gbc.sp());
        EXPECT(0xb4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa0e1));
        EXPECT(0xcb, gbc.readMem(0xb4c6));
        EXPECT(0x26, gbc.readMem(0xb4c7));
        // CB 26 039B
        gbc.setState(0xe59b, 0x162, 0x19a0, 0xa7ac, 0xd06, 0xd7d5, 0x0, 0x0);
        gbc.writeMem(0xd7d5, { 0xce });
        gbc.writeMem(0xe59b, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0xe59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd7d5));
        EXPECT(0xcb, gbc.readMem(0xe59b));
        EXPECT(0x26, gbc.readMem(0xe59c));
        // CB 26 039C
        gbc.setState(0xb983, 0x69ef, 0xad20, 0x5ff6, 0x9845, 0xc9fb, 0x0, 0x1);
        gbc.writeMem(0xb983, { 0xcb, 0x26 });
        gbc.writeMem(0xc9fb, { 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x69ef, gbc.sp());
        EXPECT(0xb985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb983));
        EXPECT(0x26, gbc.readMem(0xb984));
        EXPECT(0x42, gbc.readMem(0xc9fb));
        // CB 26 039D
        gbc.setState(0x5eb, 0xa152, 0x900, 0x2f02, 0xe5c3, 0xc011, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0xcb, 0x26 });
        gbc.writeMem(0xc011, { 0xd2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa152, gbc.sp());
        EXPECT(0x5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc011));
        // CB 26 039F
        gbc.setState(0x620, 0x310b, 0xdad0, 0x55f, 0x792c, 0xf2dd, 0x1, 0x0);
        gbc.writeMem(0x620, { 0xcb, 0x26 });
        gbc.writeMem(0xf2dd, { 0x9a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0x622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xf2dd));
        // CB 26 03A2
        gbc.setState(0xb8d1, 0xd5e3, 0xb260, 0xfcc0, 0x6664, 0xd117, 0x0, 0x1);
        gbc.writeMem(0xb8d1, { 0xcb, 0x26 });
        gbc.writeMem(0xd117, { 0x7a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd5e3, gbc.sp());
        EXPECT(0xb8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d1));
        EXPECT(0x26, gbc.readMem(0xb8d2));
        EXPECT(0xf4, gbc.readMem(0xd117));
        // CB 26 03A3
        gbc.setState(0xa87, 0x7c74, 0x9c30, 0x2f3e, 0xd390, 0xff06, 0x0, 0x0);
        gbc.writeMem(0xa87, { 0xcb, 0x26 });
        gbc.writeMem(0xff06, { 0xf4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7c74, gbc.sp());
        EXPECT(0xa89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff06));
        // CB 26 03A4
        gbc.setState(0xa2db, 0xba9, 0xb760, 0x8a3e, 0x8dee, 0xb600, 0x0, 0x1);
        gbc.writeMem(0xa2db, { 0xcb, 0x26 });
        gbc.writeMem(0xb600, { 0x8b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xba9, gbc.sp());
        EXPECT(0xa2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2db));
        EXPECT(0x26, gbc.readMem(0xa2dc));
        EXPECT(0x16, gbc.readMem(0xb600));
        // CB 26 03A6
        gbc.setState(0xc8b2, 0xf99b, 0xb280, 0xc3f9, 0x39bd, 0xa8a7, 0x0, 0x0);
        gbc.writeMem(0xa8a7, { 0x44 });
        gbc.writeMem(0xc8b2, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0xc8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa8a7));
        EXPECT(0xcb, gbc.readMem(0xc8b2));
        EXPECT(0x26, gbc.readMem(0xc8b3));
        // CB 26 03A7
        gbc.setState(0x2b88, 0xc901, 0xa930, 0x3318, 0xce16, 0xc14c, 0x0, 0x1);
        gbc.writeMem(0x2b88, { 0xcb, 0x26 });
        gbc.writeMem(0xc14c, { 0x84 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc14c));
        // CB 26 03A8
        gbc.setState(0x448b, 0x782f, 0xa8e0, 0x67e, 0x5c5a, 0xfac2, 0x1, 0x1);
        gbc.writeMem(0x448b, { 0xcb, 0x26 });
        gbc.writeMem(0xfac2, { 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x782f, gbc.sp());
        EXPECT(0x448d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xfac2));
        // CB 26 03AB
        gbc.setState(0x4b91, 0x7899, 0xa890, 0x5533, 0x255b, 0x8a88, 0x1, 0x1);
        gbc.writeMem(0x4b91, { 0xcb, 0x26 });
        gbc.writeMem(0x8a88, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7899, gbc.sp());
        EXPECT(0x4b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8a88));
        // CB 26 03AC
        gbc.setState(0x6f1a, 0x6824, 0x1070, 0x6a75, 0xebed, 0xc479, 0x1, 0x0);
        gbc.writeMem(0x6f1a, { 0xcb, 0x26 });
        gbc.writeMem(0xc479, { 0xfc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6824, gbc.sp());
        EXPECT(0x6f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc479));
        // CB 26 03B0
        gbc.setState(0x7aa9, 0xfaf7, 0xb840, 0x920a, 0x6526, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0x7aa9, { 0xcb, 0x26 });
        gbc.writeMem(0xb40f, { 0x54 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfaf7, gbc.sp());
        EXPECT(0x7aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xb40f));
        // CB 26 03B1
        gbc.setState(0xb289, 0x153d, 0x8f80, 0x709a, 0x74ad, 0xdc3a, 0x1, 0x0);
        gbc.writeMem(0xb289, { 0xcb, 0x26 });
        gbc.writeMem(0xdc3a, { 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x153d, gbc.sp());
        EXPECT(0xb28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb289));
        EXPECT(0x26, gbc.readMem(0xb28a));
        EXPECT(0xf6, gbc.readMem(0xdc3a));
        // CB 26 03B2
        gbc.setState(0x60f, 0xe0ee, 0x6630, 0xbb2a, 0xfc03, 0xee5d, 0x1, 0x0);
        gbc.writeMem(0x60f, { 0xcb, 0x26 });
        gbc.writeMem(0xee5d, { 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe0ee, gbc.sp());
        EXPECT(0x611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xee5d));
        // CB 26 03B4
        gbc.setState(0x710d, 0xff37, 0x5480, 0x2249, 0x7b74, 0x87af, 0x1, 0x1);
        gbc.writeMem(0x710d, { 0xcb, 0x26 });
        gbc.writeMem(0x87af, { 0x84 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xff37, gbc.sp());
        EXPECT(0x710f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x87af));
        // CB 26 03B5
        gbc.setState(0x9c8b, 0xf457, 0x4f60, 0x7a09, 0x6860, 0x8d9b, 0x1, 0x0);
        gbc.writeMem(0x8d9b, { 0xbb });
        gbc.writeMem(0x9c8b, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf457, gbc.sp());
        EXPECT(0x9c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8d9b));
        EXPECT(0xcb, gbc.readMem(0x9c8b));
        EXPECT(0x26, gbc.readMem(0x9c8c));
        // CB 26 03B6
        gbc.setState(0x4210, 0xe1b3, 0x3ad0, 0xe160, 0xde0c, 0x9c3f, 0x1, 0x1);
        gbc.writeMem(0x4210, { 0xcb, 0x26 });
        gbc.writeMem(0x9c3f, { 0x1c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe1b3, gbc.sp());
        EXPECT(0x4212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9c3f));
        // CB 26 03B7
        gbc.setState(0x2aef, 0xc5b3, 0x4180, 0x9475, 0x4bf1, 0x848e, 0x1, 0x1);
        gbc.writeMem(0x2aef, { 0xcb, 0x26 });
        gbc.writeMem(0x848e, { 0x55 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0x2af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x848e));
        // CB 26 03BC
        gbc.setState(0x177c, 0xe46, 0xcad0, 0xf262, 0x8870, 0xe727, 0x1, 0x0);
        gbc.writeMem(0x177c, { 0xcb, 0x26 });
        gbc.writeMem(0xe727, { 0x82 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe46, gbc.sp());
        EXPECT(0x177e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe727));
        // CB 26 03C3
        gbc.setState(0xd914, 0x7b7, 0x11e0, 0xc183, 0x3985, 0xb12f, 0x1, 0x0);
        gbc.writeMem(0xb12f, { 0xe2 });
        gbc.writeMem(0xd914, { 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7b7, gbc.sp());
        EXPECT(0xd916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xb12f));
        EXPECT(0xcb, gbc.readMem(0xd914));
        EXPECT(0x26, gbc.readMem(0xd915));
        // CB 26 03C7
        gbc.setState(0x6202, 0xad27, 0x9130, 0x1f42, 0xddc8, 0x98ba, 0x0, 0x0);
        gbc.writeMem(0x6202, { 0xcb, 0x26 });
        gbc.writeMem(0x98ba, { 0x28 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0x6204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x98ba));
        // CB 26 03CD
        gbc.setState(0xc25, 0xd231, 0x83b0, 0x169, 0x431d, 0xb47f, 0x0, 0x1);
        gbc.writeMem(0xc25, { 0xcb, 0x26 });
        gbc.writeMem(0xb47f, { 0xcb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd231, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb47f));
        // CB 26 03CF
        gbc.setState(0x8ccb, 0xa3e8, 0x220, 0x2fa2, 0x7e7, 0xaa95, 0x1, 0x1);
        gbc.writeMem(0x8ccb, { 0xcb, 0x26 });
        gbc.writeMem(0xaa95, { 0xe2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa3e8, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccb));
        EXPECT(0x26, gbc.readMem(0x8ccc));
        EXPECT(0xc4, gbc.readMem(0xaa95));
        // CB 26 03D2
        gbc.setState(0x940, 0x8070, 0xa3e0, 0x7cd1, 0x7db8, 0xf582, 0x0, 0x0);
        gbc.writeMem(0x940, { 0xcb, 0x26 });
        gbc.writeMem(0xf582, { 0x4b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8070, gbc.sp());
        EXPECT(0x942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xf582));
        // CB 26 03D6
        gbc.setState(0x5d9e, 0xc4ca, 0x7500, 0x9ce3, 0xda55, 0xbd84, 0x0, 0x1);
        gbc.writeMem(0x5d9e, { 0xcb, 0x26 });
        gbc.writeMem(0xbd84, { 0xaf });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc4ca, gbc.sp());
        EXPECT(0x5da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbd84));
        // CB 26 03D8
        gbc.setState(0x4a8d, 0x9f01, 0x6430, 0xf111, 0x63da, 0xb9ec, 0x0, 0x0);
        gbc.writeMem(0x4a8d, { 0xcb, 0x26 });
        gbc.writeMem(0xb9ec, { 0x35 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9f01, gbc.sp());
        EXPECT(0x4a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb9ec));
        // CB 26 03D9
        gbc.setState(0xa252, 0x9fe3, 0xd630, 0x4256, 0x9421, 0xb563, 0x0, 0x0);
        gbc.writeMem(0xa252, { 0xcb, 0x26 });
        gbc.writeMem(0xb563, { 0xfc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0xa254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa252));
        EXPECT(0x26, gbc.readMem(0xa253));
        EXPECT(0xf8, gbc.readMem(0xb563));
        // CB 26 03DD
        gbc.setState(0xad40, 0x6927, 0x3b10, 0xb422, 0x8b75, 0xaf77, 0x1, 0x1);
        gbc.writeMem(0xad40, { 0xcb, 0x26 });
        gbc.writeMem(0xaf77, { 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6927, gbc.sp());
        EXPECT(0xad42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad40));
        EXPECT(0x26, gbc.readMem(0xad41));
        EXPECT(0xb2, gbc.readMem(0xaf77));
        // CB 26 03DE
        gbc.setState(0x200e, 0x6e87, 0x7060, 0xaabc, 0x16fe, 0x968e, 0x1, 0x0);
        gbc.writeMem(0x200e, { 0xcb, 0x26 });
        gbc.writeMem(0x968e, { 0x62 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6e87, gbc.sp());
        EXPECT(0x2010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x968e));
        // CB 26 03DF
        gbc.setState(0x53a, 0x3938, 0x690, 0xc585, 0x2c2e, 0xb85b, 0x1, 0x0);
        gbc.writeMem(0x53a, { 0xcb, 0x26 });
        gbc.writeMem(0xb85b, { 0xe8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb85b));
        // CB 26 03E2
        gbc.setState(0x9f03, 0xf0a8, 0xc2f0, 0x9ae, 0x1e2b, 0xa40e, 0x1, 0x1);
        gbc.writeMem(0x9f03, { 0xcb, 0x26 });
        gbc.writeMem(0xa40e, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf0a8, gbc.sp());
        EXPECT(0x9f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f03));
        EXPECT(0x26, gbc.readMem(0x9f04));
        EXPECT(0x0, gbc.readMem(0xa40e));
        // CB 26 03E7
        gbc.setState(0x230a, 0x2690, 0x4120, 0x2565, 0xac23, 0xa451, 0x0, 0x0);
        gbc.writeMem(0x230a, { 0xcb, 0x26 });
        gbc.writeMem(0xa451, { 0x83 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa451));
    }
