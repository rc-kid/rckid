    TEST(gbcemu, opcode_fa) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // FA 0000
        gbc.setState(0x67f2, 0xcb8b, 0x7c30, 0xdbd9, 0xa50a, 0xfd92, 0x0, 0x0);
        gbc.writeMem(0x400b, { 0xe5 });
        gbc.writeMem(0x67f2, { 0xfa, 0xb, 0x40 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcb8b, gbc.sp());
        EXPECT(0x67f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0002
        gbc.setState(0xc3b9, 0x7e9e, 0x6170, 0x4608, 0xeb3, 0x9799, 0x1, 0x0);
        gbc.writeMem(0x13d3, { 0xf });
        gbc.writeMem(0xc3b9, { 0xfa, 0xd3, 0x13 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7e9e, gbc.sp());
        EXPECT(0xc3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc3b9));
        EXPECT(0xd3, gbc.readMem(0xc3ba));
        EXPECT(0x13, gbc.readMem(0xc3bb));
        // FA 0003
        gbc.setState(0x65d9, 0x2313, 0xc130, 0x57b0, 0x7f33, 0xed53, 0x0, 0x0);
        gbc.writeMem(0x2a09, { 0xc7 });
        gbc.writeMem(0x65d9, { 0xfa, 0x9, 0x2a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2313, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0004
        gbc.setState(0xc115, 0x15e4, 0xf0c0, 0xeef9, 0x382, 0xcf41, 0x0, 0x0);
        gbc.writeMem(0xc115, { 0xfa, 0x8e, 0xee });
        gbc.writeMem(0xee8e, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x15e4, gbc.sp());
        EXPECT(0xc118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc115));
        EXPECT(0x8e, gbc.readMem(0xc116));
        EXPECT(0xee, gbc.readMem(0xc117));
        EXPECT(0x90, gbc.readMem(0xee8e));
        // FA 0005
        gbc.setState(0xdea7, 0xb485, 0x5320, 0x3fa9, 0x201e, 0xfa94, 0x1, 0x0);
        gbc.writeMem(0xdea7, { 0xfa, 0x7f, 0xfd });
        gbc.writeMem(0xfd7f, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb485, gbc.sp());
        EXPECT(0xdeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdea7));
        EXPECT(0x7f, gbc.readMem(0xdea8));
        EXPECT(0xfd, gbc.readMem(0xdea9));
        EXPECT(0x10, gbc.readMem(0xfd7f));
        // FA 0007
        gbc.setState(0x48c5, 0x8f6c, 0x1810, 0xc28, 0x55e4, 0x6df, 0x1, 0x0);
        gbc.writeMem(0x454f, { 0xd8 });
        gbc.writeMem(0x48c5, { 0xfa, 0x4f, 0x45 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8f6c, gbc.sp());
        EXPECT(0x48c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0008
        gbc.setState(0xde65, 0xae2a, 0x6780, 0x538c, 0xd752, 0xf39a, 0x1, 0x1);
        gbc.writeMem(0x263, { 0x59 });
        gbc.writeMem(0xde65, { 0xfa, 0x63, 0x2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0xde68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xde65));
        EXPECT(0x63, gbc.readMem(0xde66));
        EXPECT(0x2, gbc.readMem(0xde67));
        // FA 0009
        gbc.setState(0x6d48, 0x9d53, 0x9e60, 0xd784, 0xc37, 0x20a1, 0x1, 0x0);
        gbc.writeMem(0x394d, { 0xf9 });
        gbc.writeMem(0x6d48, { 0xfa, 0x4d, 0x39 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9d53, gbc.sp());
        EXPECT(0x6d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 000A
        gbc.setState(0x4f35, 0xccea, 0xac80, 0xc695, 0x675e, 0x9c5d, 0x0, 0x0);
        gbc.writeMem(0x3f79, { 0x96 });
        gbc.writeMem(0x4f35, { 0xfa, 0x79, 0x3f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xccea, gbc.sp());
        EXPECT(0x4f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 000B
        gbc.setState(0xb232, 0x9404, 0x9720, 0x6b52, 0x2586, 0xef23, 0x0, 0x1);
        gbc.writeMem(0xb232, { 0xfa, 0x12, 0xe2 });
        gbc.writeMem(0xe212, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9404, gbc.sp());
        EXPECT(0xb235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb232));
        EXPECT(0x12, gbc.readMem(0xb233));
        EXPECT(0xe2, gbc.readMem(0xb234));
        EXPECT(0xc7, gbc.readMem(0xe212));
        // FA 000D
        gbc.setState(0xbd45, 0x6acb, 0x1f40, 0xbb7f, 0x6fb4, 0x557d, 0x0, 0x0);
        gbc.writeMem(0x63dc, { 0x5e });
        gbc.writeMem(0xbd45, { 0xfa, 0xdc, 0x63 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6acb, gbc.sp());
        EXPECT(0xbd48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbd45));
        EXPECT(0xdc, gbc.readMem(0xbd46));
        EXPECT(0x63, gbc.readMem(0xbd47));
        // FA 000E
        gbc.setState(0x549a, 0xcca2, 0x8b30, 0xb19e, 0xb2e8, 0xe6cc, 0x1, 0x1);
        gbc.writeMem(0x549a, { 0xfa, 0xa0, 0xa6 });
        gbc.writeMem(0xa6a0, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcca2, gbc.sp());
        EXPECT(0x549d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xa6a0));
        // FA 0010
        gbc.setState(0x3a63, 0xb27e, 0x11d0, 0xfdc5, 0x8c82, 0x36b4, 0x1, 0x1);
        gbc.writeMem(0x3a63, { 0xfa, 0x94, 0x5b });
        gbc.writeMem(0x5b94, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0x3a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0011
        gbc.setState(0xecbe, 0xd621, 0x2f80, 0xec77, 0x957f, 0x6dc3, 0x0, 0x0);
        gbc.writeMem(0xe966, { 0xe9 });
        gbc.writeMem(0xecbe, { 0xfa, 0x66, 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd621, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe966));
        EXPECT(0xfa, gbc.readMem(0xecbe));
        EXPECT(0x66, gbc.readMem(0xecbf));
        EXPECT(0xe9, gbc.readMem(0xecc0));
        // FA 0012
        gbc.setState(0x541f, 0x8c00, 0xa450, 0xf725, 0x73fe, 0xa86, 0x0, 0x1);
        gbc.writeMem(0x541f, { 0xfa, 0xd5, 0x6a });
        gbc.writeMem(0x6ad5, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0x5422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0013
        gbc.setState(0x6411, 0x7f6a, 0xb750, 0x446, 0x2cd0, 0x36e3, 0x1, 0x0);
        gbc.writeMem(0x6411, { 0xfa, 0x81, 0xc1 });
        gbc.writeMem(0xc181, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7f6a, gbc.sp());
        EXPECT(0x6414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc181));
        // FA 0014
        gbc.setState(0xe4ba, 0x7d5e, 0xd5a0, 0xd7b1, 0xe554, 0xa9f2, 0x1, 0x0);
        gbc.writeMem(0x893b, { 0xef });
        gbc.writeMem(0xe4ba, { 0xfa, 0x3b, 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7d5e, gbc.sp());
        EXPECT(0xe4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x893b));
        EXPECT(0xfa, gbc.readMem(0xe4ba));
        EXPECT(0x3b, gbc.readMem(0xe4bb));
        EXPECT(0x89, gbc.readMem(0xe4bc));
        // FA 0015
        gbc.setState(0x190b, 0x804b, 0x7070, 0x52e4, 0xa31d, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0x190b, { 0xfa, 0x80, 0xc2 });
        gbc.writeMem(0xc280, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x804b, gbc.sp());
        EXPECT(0x190e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc280));
        // FA 0016
        gbc.setState(0xad3a, 0x423, 0x9e50, 0x63ff, 0xece3, 0x87fa, 0x1, 0x0);
        gbc.writeMem(0xad3a, { 0xfa, 0x13, 0xc5 });
        gbc.writeMem(0xc513, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0xad3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xad3a));
        EXPECT(0x13, gbc.readMem(0xad3b));
        EXPECT(0xc5, gbc.readMem(0xad3c));
        EXPECT(0x57, gbc.readMem(0xc513));
        // FA 0017
        gbc.setState(0x7196, 0xfc2d, 0xabf0, 0x3a64, 0x4b19, 0x80ab, 0x0, 0x0);
        gbc.writeMem(0x7196, { 0xfa, 0x49, 0xd2 });
        gbc.writeMem(0xd249, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfc2d, gbc.sp());
        EXPECT(0x7199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd249));
        // FA 0019
        gbc.setState(0xb59d, 0xba0d, 0x80b0, 0x935f, 0xaad4, 0xe2dd, 0x0, 0x0);
        gbc.writeMem(0xb59d, { 0xfa, 0xd4, 0xe5 });
        gbc.writeMem(0xe5d4, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xba0d, gbc.sp());
        EXPECT(0xb5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb59d));
        EXPECT(0xd4, gbc.readMem(0xb59e));
        EXPECT(0xe5, gbc.readMem(0xb59f));
        EXPECT(0x23, gbc.readMem(0xe5d4));
        // FA 001D
        gbc.setState(0x4782, 0x3fc6, 0xf690, 0x1367, 0xf2f4, 0x7e18, 0x1, 0x0);
        gbc.writeMem(0x4782, { 0xfa, 0xdd, 0xce });
        gbc.writeMem(0xcedd, { 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3fc6, gbc.sp());
        EXPECT(0x4785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcedd));
        // FA 001E
        gbc.setState(0xc001, 0x3699, 0xe160, 0x83fc, 0x782c, 0xf085, 0x1, 0x1);
        gbc.writeMem(0xc001, { 0xfa, 0x50, 0xee });
        gbc.writeMem(0xee50, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3699, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc001));
        EXPECT(0x50, gbc.readMem(0xc002));
        EXPECT(0xee, gbc.readMem(0xc003));
        EXPECT(0x6d, gbc.readMem(0xee50));
        // FA 001F
        gbc.setState(0x5424, 0x61a5, 0xb3c0, 0x6244, 0xa682, 0x2f42, 0x0, 0x1);
        gbc.writeMem(0x5424, { 0xfa, 0x78, 0xea });
        gbc.writeMem(0xea78, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x61a5, gbc.sp());
        EXPECT(0x5427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xea78));
        // FA 0020
        gbc.setState(0x7022, 0xf811, 0x6a0, 0x6843, 0x81df, 0x6ab, 0x1, 0x1);
        gbc.writeMem(0x6109, { 0x9a });
        gbc.writeMem(0x7022, { 0xfa, 0x9, 0x61 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0x7025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0021
        gbc.setState(0xbe94, 0x115f, 0x190, 0x8479, 0xeda4, 0x86f0, 0x0, 0x0);
        gbc.writeMem(0xbafb, { 0x4 });
        gbc.writeMem(0xbe94, { 0xfa, 0xfb, 0xba });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbafb));
        EXPECT(0xfa, gbc.readMem(0xbe94));
        EXPECT(0xfb, gbc.readMem(0xbe95));
        EXPECT(0xba, gbc.readMem(0xbe96));
        // FA 0022
        gbc.setState(0x5aa, 0xa631, 0x6da0, 0x7cb1, 0xabb6, 0xb758, 0x1, 0x0);
        gbc.writeMem(0x5aa, { 0xfa, 0xbd, 0x8 });
        gbc.writeMem(0x8bd, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa631, gbc.sp());
        EXPECT(0x5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0023
        gbc.setState(0xdf23, 0xdde4, 0x7cb0, 0xb472, 0xbb1, 0x7ec1, 0x0, 0x0);
        gbc.writeMem(0x30ca, { 0xf2 });
        gbc.writeMem(0xdf23, { 0xfa, 0xca, 0x30 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdde4, gbc.sp());
        EXPECT(0xdf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdf23));
        EXPECT(0xca, gbc.readMem(0xdf24));
        EXPECT(0x30, gbc.readMem(0xdf25));
        // FA 0024
        gbc.setState(0x379, 0x5183, 0xfdd0, 0xed9d, 0x85a1, 0xd3d8, 0x1, 0x1);
        gbc.writeMem(0x379, { 0xfa, 0x56, 0x16 });
        gbc.writeMem(0x1656, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5183, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0025
        gbc.setState(0x3de2, 0x8325, 0xc080, 0x893f, 0xb307, 0x1d01, 0x0, 0x0);
        gbc.writeMem(0x3de2, { 0xfa, 0x8b, 0xd3 });
        gbc.writeMem(0xd38b, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8325, gbc.sp());
        EXPECT(0x3de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd38b));
        // FA 0027
        gbc.setState(0xadb8, 0x99fd, 0x93c0, 0xee06, 0x4351, 0xee4f, 0x1, 0x0);
        gbc.writeMem(0x4004, { 0xf4 });
        gbc.writeMem(0xadb8, { 0xfa, 0x4, 0x40 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0xadbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xadb8));
        EXPECT(0x4, gbc.readMem(0xadb9));
        EXPECT(0x40, gbc.readMem(0xadba));
        // FA 0028
        gbc.setState(0xd9f1, 0x229a, 0x8da0, 0xbffe, 0xff2, 0x8ddf, 0x1, 0x1);
        gbc.writeMem(0x5dd, { 0x87 });
        gbc.writeMem(0xd9f1, { 0xfa, 0xdd, 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x229a, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd9f1));
        EXPECT(0xdd, gbc.readMem(0xd9f2));
        EXPECT(0x5, gbc.readMem(0xd9f3));
        // FA 0029
        gbc.setState(0xbee4, 0x538f, 0x8a80, 0xbdf3, 0x8391, 0x74ba, 0x1, 0x1);
        gbc.writeMem(0x9b63, { 0xbb });
        gbc.writeMem(0xbee4, { 0xfa, 0x63, 0x9b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x538f, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9b63));
        EXPECT(0xfa, gbc.readMem(0xbee4));
        EXPECT(0x63, gbc.readMem(0xbee5));
        EXPECT(0x9b, gbc.readMem(0xbee6));
        // FA 002A
        gbc.setState(0x28c4, 0x117f, 0x22a0, 0x3c35, 0x3041, 0xc341, 0x0, 0x0);
        gbc.writeMem(0x28c4, { 0xfa, 0xfb, 0x30 });
        gbc.writeMem(0x30fb, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x117f, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 002B
        gbc.setState(0x246c, 0xd491, 0x2d90, 0x53ad, 0x26b8, 0x687c, 0x1, 0x0);
        gbc.writeMem(0x246c, { 0xfa, 0xab, 0xbf });
        gbc.writeMem(0xbfab, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd491, gbc.sp());
        EXPECT(0x246f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbfab));
        // FA 002C
        gbc.setState(0xae03, 0xd627, 0xdd70, 0x5389, 0x93ba, 0x4320, 0x1, 0x0);
        gbc.writeMem(0xae03, { 0xfa, 0x5, 0xfe });
        gbc.writeMem(0xfe05, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd627, gbc.sp());
        EXPECT(0xae06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xae03));
        EXPECT(0x5, gbc.readMem(0xae04));
        EXPECT(0xfe, gbc.readMem(0xae05));
        EXPECT(0x4c, gbc.readMem(0xfe05));
        // FA 002D
        gbc.setState(0x53bb, 0x71da, 0x3be0, 0x3086, 0xfc7c, 0x6bbb, 0x0, 0x0);
        gbc.writeMem(0x53bb, { 0xfa, 0xe9, 0x64 });
        gbc.writeMem(0x64e9, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x71da, gbc.sp());
        EXPECT(0x53be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 002E
        gbc.setState(0xd0a1, 0x72e5, 0xdae0, 0xdb1e, 0xcd8a, 0x85a2, 0x1, 0x0);
        gbc.writeMem(0x277a, { 0x53 });
        gbc.writeMem(0xd0a1, { 0xfa, 0x7a, 0x27 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x72e5, gbc.sp());
        EXPECT(0xd0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd0a1));
        EXPECT(0x7a, gbc.readMem(0xd0a2));
        EXPECT(0x27, gbc.readMem(0xd0a3));
        // FA 002F
        gbc.setState(0xc2b0, 0x7651, 0xfe00, 0xfbfe, 0x5f8d, 0x4b19, 0x0, 0x1);
        gbc.writeMem(0x45ff, { 0x5b });
        gbc.writeMem(0xc2b0, { 0xfa, 0xff, 0x45 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0xc2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc2b0));
        EXPECT(0xff, gbc.readMem(0xc2b1));
        EXPECT(0x45, gbc.readMem(0xc2b2));
        // FA 0030
        gbc.setState(0x2ed9, 0x4b64, 0x3b0, 0xfb0a, 0xc452, 0x24b2, 0x0, 0x1);
        gbc.writeMem(0x2ed9, { 0xfa, 0xbb, 0xc2 });
        gbc.writeMem(0xc2bb, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4b64, gbc.sp());
        EXPECT(0x2edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc2bb));
        // FA 0031
        gbc.setState(0xdcf5, 0x280c, 0xd610, 0x282c, 0xfb43, 0xf563, 0x1, 0x1);
        gbc.writeMem(0x68e3, { 0x7 });
        gbc.writeMem(0xdcf5, { 0xfa, 0xe3, 0x68 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x280c, gbc.sp());
        EXPECT(0xdcf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdcf5));
        EXPECT(0xe3, gbc.readMem(0xdcf6));
        EXPECT(0x68, gbc.readMem(0xdcf7));
        // FA 0032
        gbc.setState(0x2c3d, 0x8183, 0xfd00, 0x328e, 0x5c40, 0xab28, 0x0, 0x1);
        gbc.writeMem(0x2c3d, { 0xfa, 0x5, 0x88 });
        gbc.writeMem(0x8805, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8183, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8805));
        // FA 0033
        gbc.setState(0xc294, 0x5b76, 0x7310, 0x6f11, 0x6518, 0x310c, 0x1, 0x0);
        gbc.writeMem(0x3132, { 0xe6 });
        gbc.writeMem(0xc294, { 0xfa, 0x32, 0x31 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5b76, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc294));
        EXPECT(0x32, gbc.readMem(0xc295));
        EXPECT(0x31, gbc.readMem(0xc296));
        // FA 0034
        gbc.setState(0xb9d8, 0xb8e3, 0xbeb0, 0x2206, 0x39fa, 0x73d6, 0x0, 0x0);
        gbc.writeMem(0x2986, { 0x4 });
        gbc.writeMem(0xb9d8, { 0xfa, 0x86, 0x29 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb8e3, gbc.sp());
        EXPECT(0xb9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb9d8));
        EXPECT(0x86, gbc.readMem(0xb9d9));
        EXPECT(0x29, gbc.readMem(0xb9da));
        // FA 0035
        gbc.setState(0x6197, 0xb47b, 0x3680, 0x330b, 0xa086, 0xf0b3, 0x1, 0x1);
        gbc.writeMem(0x6197, { 0xfa, 0x91, 0xf3 });
        gbc.writeMem(0xf391, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb47b, gbc.sp());
        EXPECT(0x619a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xf391));
        // FA 0036
        gbc.setState(0xdf59, 0xaec0, 0xf160, 0x9ba, 0xdd3c, 0x56b9, 0x1, 0x0);
        gbc.writeMem(0x3d00, { 0x31 });
        gbc.writeMem(0xdf59, { 0xfa, 0x0, 0x3d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xaec0, gbc.sp());
        EXPECT(0xdf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdf59));
        EXPECT(0x0, gbc.readMem(0xdf5a));
        EXPECT(0x3d, gbc.readMem(0xdf5b));
        // FA 0037
        gbc.setState(0xca01, 0x770d, 0xad30, 0xe6e9, 0x4928, 0x8ef5, 0x1, 0x1);
        gbc.writeMem(0xbc02, { 0x96 });
        gbc.writeMem(0xca01, { 0xfa, 0x2, 0xbc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0xca04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xbc02));
        EXPECT(0xfa, gbc.readMem(0xca01));
        EXPECT(0x2, gbc.readMem(0xca02));
        EXPECT(0xbc, gbc.readMem(0xca03));
        // FA 0038
        gbc.setState(0x2be4, 0xbdb7, 0xd130, 0xfa97, 0x86a1, 0x5577, 0x0, 0x1);
        gbc.writeMem(0xec9, { 0x9d });
        gbc.writeMem(0x2be4, { 0xfa, 0xc9, 0xe });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbdb7, gbc.sp());
        EXPECT(0x2be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0039
        gbc.setState(0xb442, 0x8c3c, 0x2310, 0x19, 0x9db6, 0x3ab2, 0x0, 0x1);
        gbc.writeMem(0x960f, { 0x58 });
        gbc.writeMem(0xb442, { 0xfa, 0xf, 0x96 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8c3c, gbc.sp());
        EXPECT(0xb445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x960f));
        EXPECT(0xfa, gbc.readMem(0xb442));
        EXPECT(0xf, gbc.readMem(0xb443));
        EXPECT(0x96, gbc.readMem(0xb444));
        // FA 003A
        gbc.setState(0x1752, 0xd1cf, 0xf3c0, 0x7e34, 0x1ccc, 0x2ce9, 0x0, 0x0);
        gbc.writeMem(0x1752, { 0xfa, 0x2d, 0xc2 });
        gbc.writeMem(0xc22d, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd1cf, gbc.sp());
        EXPECT(0x1755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc22d));
        // FA 003B
        gbc.setState(0x6a79, 0xf317, 0x71c0, 0xae15, 0xd16, 0xd3ca, 0x0, 0x0);
        gbc.writeMem(0x6a79, { 0xfa, 0x2c, 0xf5 });
        gbc.writeMem(0xf52c, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf317, gbc.sp());
        EXPECT(0x6a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xf52c));
        // FA 003C
        gbc.setState(0xa639, 0xa6e1, 0xb250, 0xfe0, 0x75c3, 0xf686, 0x1, 0x1);
        gbc.writeMem(0xa639, { 0xfa, 0x78, 0xb1 });
        gbc.writeMem(0xb178, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa6e1, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa639));
        EXPECT(0x78, gbc.readMem(0xa63a));
        EXPECT(0xb1, gbc.readMem(0xa63b));
        EXPECT(0x73, gbc.readMem(0xb178));
        // FA 003D
        gbc.setState(0x929d, 0xe924, 0x60b0, 0xc12d, 0x15a7, 0xc299, 0x1, 0x0);
        gbc.writeMem(0x24cc, { 0x6 });
        gbc.writeMem(0x929d, { 0xfa, 0xcc, 0x24 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe924, gbc.sp());
        EXPECT(0x92a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x929d));
        EXPECT(0xcc, gbc.readMem(0x929e));
        EXPECT(0x24, gbc.readMem(0x929f));
        // FA 003E
        gbc.setState(0x5245, 0xc395, 0x2e80, 0xa7c6, 0xbaf3, 0x4e55, 0x0, 0x0);
        gbc.writeMem(0x5245, { 0xfa, 0xd0, 0x99 });
        gbc.writeMem(0x99d0, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc395, gbc.sp());
        EXPECT(0x5248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x99d0));
        // FA 003F
        gbc.setState(0xa2d6, 0x331d, 0x8fb0, 0x586d, 0xf5bc, 0xd6e, 0x1, 0x1);
        gbc.writeMem(0x2792, { 0xad });
        gbc.writeMem(0xa2d6, { 0xfa, 0x92, 0x27 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x331d, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa2d6));
        EXPECT(0x92, gbc.readMem(0xa2d7));
        EXPECT(0x27, gbc.readMem(0xa2d8));
        // FA 0040
        gbc.setState(0x274a, 0xf41, 0xb710, 0xbfac, 0xa185, 0x951b, 0x1, 0x0);
        gbc.writeMem(0x274a, { 0xfa, 0x9d, 0x48 });
        gbc.writeMem(0x489d, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf41, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0041
        gbc.setState(0xb26e, 0x9180, 0x7e00, 0x473c, 0xd56a, 0xb8c4, 0x1, 0x1);
        gbc.writeMem(0x8511, { 0xb6 });
        gbc.writeMem(0xb26e, { 0xfa, 0x11, 0x85 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9180, gbc.sp());
        EXPECT(0xb271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8511));
        EXPECT(0xfa, gbc.readMem(0xb26e));
        EXPECT(0x11, gbc.readMem(0xb26f));
        EXPECT(0x85, gbc.readMem(0xb270));
        // FA 0042
        gbc.setState(0x922b, 0x3acd, 0xe8d0, 0x4d3f, 0x5300, 0x76b, 0x0, 0x1);
        gbc.writeMem(0x922b, { 0xfa, 0x71, 0xf8 });
        gbc.writeMem(0xf871, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3acd, gbc.sp());
        EXPECT(0x922e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x922b));
        EXPECT(0x71, gbc.readMem(0x922c));
        EXPECT(0xf8, gbc.readMem(0x922d));
        EXPECT(0x33, gbc.readMem(0xf871));
        // FA 0043
        gbc.setState(0x7141, 0xfb89, 0xaee0, 0x5ba0, 0x5036, 0xc1d7, 0x0, 0x1);
        gbc.writeMem(0x7141, { 0xfa, 0x30, 0xed });
        gbc.writeMem(0xed30, { 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0x7144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xed30));
        // FA 0044
        gbc.setState(0x348b, 0x13ca, 0x41a0, 0x7498, 0xb8f1, 0x18f6, 0x1, 0x0);
        gbc.writeMem(0x348b, { 0xfa, 0xac, 0xc8 });
        gbc.writeMem(0xc8ac, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x13ca, gbc.sp());
        EXPECT(0x348e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xc8ac));
        // FA 0045
        gbc.setState(0x49a4, 0xba55, 0x8c30, 0x6ddb, 0x3ec, 0x183, 0x0, 0x1);
        gbc.writeMem(0x49a4, { 0xfa, 0x9, 0xdf });
        gbc.writeMem(0xdf09, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xba55, gbc.sp());
        EXPECT(0x49a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xdf09));
        // FA 0046
        gbc.setState(0xa3c5, 0x43fa, 0x16f0, 0xf49c, 0x8f61, 0xae96, 0x0, 0x1);
        gbc.writeMem(0x43b6, { 0xb9 });
        gbc.writeMem(0xa3c5, { 0xfa, 0xb6, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x43fa, gbc.sp());
        EXPECT(0xa3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa3c5));
        EXPECT(0xb6, gbc.readMem(0xa3c6));
        EXPECT(0x43, gbc.readMem(0xa3c7));
        // FA 0047
        gbc.setState(0x5497, 0x5bb7, 0xfc0, 0x2cb7, 0xe60b, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0x5497, { 0xfa, 0xbf, 0xcd });
        gbc.writeMem(0xcdbf, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5bb7, gbc.sp());
        EXPECT(0x549a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcdbf));
        // FA 0048
        gbc.setState(0x2b82, 0xda14, 0x8090, 0x76d9, 0x2662, 0xf63e, 0x1, 0x1);
        gbc.writeMem(0x2b82, { 0xfa, 0xe7, 0x3f });
        gbc.writeMem(0x3fe7, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xda14, gbc.sp());
        EXPECT(0x2b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0049
        gbc.setState(0xc5c7, 0x2dbd, 0xc150, 0xf694, 0x71aa, 0x9040, 0x0, 0x0);
        gbc.writeMem(0xc5c7, { 0xfa, 0xf, 0xe1 });
        gbc.writeMem(0xe10f, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0xc5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc5c7));
        EXPECT(0xf, gbc.readMem(0xc5c8));
        EXPECT(0xe1, gbc.readMem(0xc5c9));
        EXPECT(0x1a, gbc.readMem(0xe10f));
        // FA 004A
        gbc.setState(0x1fd, 0xf757, 0x69e0, 0x74e9, 0xc1d1, 0x7502, 0x1, 0x1);
        gbc.writeMem(0x1fd, { 0xfa, 0x6, 0x13 });
        gbc.writeMem(0x1306, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf757, gbc.sp());
        EXPECT(0x200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 004B
        gbc.setState(0x22cb, 0x7e69, 0x13c0, 0x467a, 0x46f3, 0xe54f, 0x1, 0x0);
        gbc.writeMem(0x22cb, { 0xfa, 0xac, 0xd1 });
        gbc.writeMem(0xd1ac, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7e69, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd1ac));
        // FA 004C
        gbc.setState(0x62ba, 0xd21f, 0xaac0, 0xda27, 0xd4bd, 0xa6e3, 0x0, 0x0);
        gbc.writeMem(0x62ba, { 0xfa, 0xa3, 0x6b });
        gbc.writeMem(0x6ba3, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd21f, gbc.sp());
        EXPECT(0x62bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 004D
        gbc.setState(0xa28, 0x5a0e, 0x18d0, 0x5a9f, 0x5872, 0x9aee, 0x0, 0x1);
        gbc.writeMem(0xa28, { 0xfa, 0xeb, 0x77 });
        gbc.writeMem(0x77eb, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5a0e, gbc.sp());
        EXPECT(0xa2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0050
        gbc.setState(0xc77f, 0x3204, 0xb8b0, 0xec29, 0x3bdf, 0x6891, 0x0, 0x1);
        gbc.writeMem(0x2680, { 0x6e });
        gbc.writeMem(0xc77f, { 0xfa, 0x80, 0x26 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3204, gbc.sp());
        EXPECT(0xc782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc77f));
        EXPECT(0x80, gbc.readMem(0xc780));
        EXPECT(0x26, gbc.readMem(0xc781));
        // FA 0051
        gbc.setState(0x9745, 0xdcaa, 0xd990, 0xb290, 0xa847, 0x2312, 0x1, 0x0);
        gbc.writeMem(0x65cf, { 0xfe });
        gbc.writeMem(0x9745, { 0xfa, 0xcf, 0x65 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdcaa, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9745));
        EXPECT(0xcf, gbc.readMem(0x9746));
        EXPECT(0x65, gbc.readMem(0x9747));
        // FA 0052
        gbc.setState(0x9a3d, 0x2d12, 0xe660, 0x1963, 0xac4b, 0x108a, 0x0, 0x0);
        gbc.writeMem(0x8120, { 0xe5 });
        gbc.writeMem(0x9a3d, { 0xfa, 0x20, 0x81 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2d12, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8120));
        EXPECT(0xfa, gbc.readMem(0x9a3d));
        EXPECT(0x20, gbc.readMem(0x9a3e));
        EXPECT(0x81, gbc.readMem(0x9a3f));
        // FA 0053
        gbc.setState(0xb7a9, 0x864f, 0x39c0, 0xd339, 0x9f6a, 0xa6a5, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0xfa, 0xdd, 0xf3 });
        gbc.writeMem(0xf3dd, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x864f, gbc.sp());
        EXPECT(0xb7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb7a9));
        EXPECT(0xdd, gbc.readMem(0xb7aa));
        EXPECT(0xf3, gbc.readMem(0xb7ab));
        EXPECT(0x3b, gbc.readMem(0xf3dd));
        // FA 0054
        gbc.setState(0x80e7, 0x44f3, 0x7cf0, 0x8cda, 0x80d0, 0xecce, 0x1, 0x0);
        gbc.writeMem(0x3647, { 0x37 });
        gbc.writeMem(0x80e7, { 0xfa, 0x47, 0x36 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x44f3, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x80e7));
        EXPECT(0x47, gbc.readMem(0x80e8));
        EXPECT(0x36, gbc.readMem(0x80e9));
        // FA 0055
        gbc.setState(0x2cfd, 0x324f, 0x4c20, 0x652e, 0x1428, 0xd405, 0x0, 0x1);
        gbc.writeMem(0x2cfd, { 0xfa, 0x99, 0x90 });
        gbc.writeMem(0x9099, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x324f, gbc.sp());
        EXPECT(0x2d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9099));
        // FA 0056
        gbc.setState(0xbf48, 0xa79a, 0x65f0, 0xf408, 0x87e9, 0x6e7f, 0x0, 0x0);
        gbc.writeMem(0xa9bd, { 0x42 });
        gbc.writeMem(0xbf48, { 0xfa, 0xbd, 0xa9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa79a, gbc.sp());
        EXPECT(0xbf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa9bd));
        EXPECT(0xfa, gbc.readMem(0xbf48));
        EXPECT(0xbd, gbc.readMem(0xbf49));
        EXPECT(0xa9, gbc.readMem(0xbf4a));
        // FA 0057
        gbc.setState(0xaa4f, 0x2410, 0x2390, 0x8c99, 0xccd7, 0xaf7f, 0x0, 0x0);
        gbc.writeMem(0xaa4f, { 0xfa, 0xb9, 0xc3 });
        gbc.writeMem(0xc3b9, { 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2410, gbc.sp());
        EXPECT(0xaa52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaa4f));
        EXPECT(0xb9, gbc.readMem(0xaa50));
        EXPECT(0xc3, gbc.readMem(0xaa51));
        EXPECT(0x12, gbc.readMem(0xc3b9));
        // FA 0058
        gbc.setState(0xa0f2, 0xc325, 0x5620, 0x60be, 0x72ce, 0xc536, 0x0, 0x0);
        gbc.writeMem(0x4ad8, { 0x43 });
        gbc.writeMem(0xa0f2, { 0xfa, 0xd8, 0x4a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc325, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa0f2));
        EXPECT(0xd8, gbc.readMem(0xa0f3));
        EXPECT(0x4a, gbc.readMem(0xa0f4));
        // FA 0059
        gbc.setState(0xea21, 0x9422, 0x70, 0x7f02, 0xafd2, 0x3cd, 0x1, 0x0);
        gbc.writeMem(0x8bb1, { 0x5e });
        gbc.writeMem(0xea21, { 0xfa, 0xb1, 0x8b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0xea24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8bb1));
        EXPECT(0xfa, gbc.readMem(0xea21));
        EXPECT(0xb1, gbc.readMem(0xea22));
        EXPECT(0x8b, gbc.readMem(0xea23));
        // FA 005A
        gbc.setState(0xab9b, 0xcff2, 0x77e0, 0xcc97, 0x9d2c, 0x4bf8, 0x0, 0x0);
        gbc.writeMem(0x4a04, { 0x32 });
        gbc.writeMem(0xab9b, { 0xfa, 0x4, 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcff2, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xab9b));
        EXPECT(0x4, gbc.readMem(0xab9c));
        EXPECT(0x4a, gbc.readMem(0xab9d));
        // FA 005B
        gbc.setState(0xabab, 0x24f6, 0x3000, 0x1120, 0x9a42, 0xc60f, 0x0, 0x0);
        gbc.writeMem(0x8123, { 0x1b });
        gbc.writeMem(0xabab, { 0xfa, 0x23, 0x81 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x24f6, gbc.sp());
        EXPECT(0xabae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8123));
        EXPECT(0xfa, gbc.readMem(0xabab));
        EXPECT(0x23, gbc.readMem(0xabac));
        EXPECT(0x81, gbc.readMem(0xabad));
        // FA 005C
        gbc.setState(0x1423, 0x92b6, 0x5440, 0xbe5, 0x87a5, 0x1e, 0x1, 0x0);
        gbc.writeMem(0x1423, { 0xfa, 0xab, 0xee });
        gbc.writeMem(0xeeab, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x92b6, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeeab));
        // FA 005D
        gbc.setState(0xd825, 0xa2fa, 0x3f50, 0x38d7, 0xe8ea, 0x8ad0, 0x0, 0x1);
        gbc.writeMem(0x7e3b, { 0xba });
        gbc.writeMem(0xd825, { 0xfa, 0x3b, 0x7e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa2fa, gbc.sp());
        EXPECT(0xd828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd825));
        EXPECT(0x3b, gbc.readMem(0xd826));
        EXPECT(0x7e, gbc.readMem(0xd827));
        // FA 005E
        gbc.setState(0x873c, 0x356, 0x2d20, 0x48c1, 0x2b3d, 0x4482, 0x1, 0x0);
        gbc.writeMem(0x2ec6, { 0x4c });
        gbc.writeMem(0x873c, { 0xfa, 0xc6, 0x2e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x356, gbc.sp());
        EXPECT(0x873f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x873c));
        EXPECT(0xc6, gbc.readMem(0x873d));
        EXPECT(0x2e, gbc.readMem(0x873e));
        // FA 005F
        gbc.setState(0x7058, 0x2614, 0x5370, 0x1d91, 0x1784, 0xa482, 0x0, 0x0);
        gbc.writeMem(0x1d48, { 0x4e });
        gbc.writeMem(0x7058, { 0xfa, 0x48, 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2614, gbc.sp());
        EXPECT(0x705b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0060
        gbc.setState(0x8176, 0xa10b, 0x6270, 0x23ba, 0x138a, 0xefff, 0x0, 0x0);
        gbc.writeMem(0x8176, { 0xfa, 0x16, 0xde });
        gbc.writeMem(0xde16, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa10b, gbc.sp());
        EXPECT(0x8179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8176));
        EXPECT(0x16, gbc.readMem(0x8177));
        EXPECT(0xde, gbc.readMem(0x8178));
        EXPECT(0xc5, gbc.readMem(0xde16));
        // FA 0061
        gbc.setState(0xa3df, 0x15f7, 0xe30, 0x9d6d, 0x8b43, 0x538, 0x1, 0x0);
        gbc.writeMem(0x4094, { 0x1a });
        gbc.writeMem(0xa3df, { 0xfa, 0x94, 0x40 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x15f7, gbc.sp());
        EXPECT(0xa3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa3df));
        EXPECT(0x94, gbc.readMem(0xa3e0));
        EXPECT(0x40, gbc.readMem(0xa3e1));
        // FA 0062
        gbc.setState(0x9230, 0x7fcb, 0x6e50, 0xcfb0, 0xa5a2, 0xa655, 0x1, 0x1);
        gbc.writeMem(0x9230, { 0xfa, 0x81, 0xd2 });
        gbc.writeMem(0xd281, { 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7fcb, gbc.sp());
        EXPECT(0x9233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9230));
        EXPECT(0x81, gbc.readMem(0x9231));
        EXPECT(0xd2, gbc.readMem(0x9232));
        EXPECT(0xe2, gbc.readMem(0xd281));
        // FA 0064
        gbc.setState(0xde77, 0xd06e, 0xc880, 0x885a, 0x8a33, 0xe53b, 0x0, 0x1);
        gbc.writeMem(0x8c27, { 0xf0 });
        gbc.writeMem(0xde77, { 0xfa, 0x27, 0x8c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0xde7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8c27));
        EXPECT(0xfa, gbc.readMem(0xde77));
        EXPECT(0x27, gbc.readMem(0xde78));
        EXPECT(0x8c, gbc.readMem(0xde79));
        // FA 0065
        gbc.setState(0xd4c, 0xb123, 0xd410, 0xa96d, 0x904f, 0x9f62, 0x0, 0x1);
        gbc.writeMem(0xd4c, { 0xfa, 0x9d, 0x34 });
        gbc.writeMem(0x349d, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0066
        gbc.setState(0x41d8, 0x2eec, 0x5030, 0xf5c7, 0xbb02, 0x8609, 0x1, 0x1);
        gbc.writeMem(0x41d8, { 0xfa, 0x1f, 0xe2 });
        gbc.writeMem(0xe21f, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0x41db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xe21f));
        // FA 0067
        gbc.setState(0xd08b, 0xe9b4, 0x98b0, 0xf229, 0x2a1c, 0xea86, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0xb4 });
        gbc.writeMem(0xd08b, { 0xfa, 0x9c, 0xb0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0xd08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xb09c));
        EXPECT(0xfa, gbc.readMem(0xd08b));
        EXPECT(0x9c, gbc.readMem(0xd08c));
        EXPECT(0xb0, gbc.readMem(0xd08d));
        // FA 0068
        gbc.setState(0xbe26, 0xe6c9, 0x9b40, 0xd81f, 0x825f, 0xcc5, 0x0, 0x1);
        gbc.writeMem(0xa831, { 0xd8 });
        gbc.writeMem(0xbe26, { 0xfa, 0x31, 0xa8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0xbe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa831));
        EXPECT(0xfa, gbc.readMem(0xbe26));
        EXPECT(0x31, gbc.readMem(0xbe27));
        EXPECT(0xa8, gbc.readMem(0xbe28));
        // FA 0069
        gbc.setState(0xb365, 0xebef, 0xd1a0, 0x3daa, 0x6d1c, 0x6f16, 0x0, 0x0);
        gbc.writeMem(0x791c, { 0xa9 });
        gbc.writeMem(0xb365, { 0xfa, 0x1c, 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xebef, gbc.sp());
        EXPECT(0xb368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb365));
        EXPECT(0x1c, gbc.readMem(0xb366));
        EXPECT(0x79, gbc.readMem(0xb367));
        // FA 006A
        gbc.setState(0x6fad, 0x2162, 0x2f50, 0x3312, 0x2d32, 0x9cb7, 0x0, 0x0);
        gbc.writeMem(0x44e1, { 0xe4 });
        gbc.writeMem(0x6fad, { 0xfa, 0xe1, 0x44 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0x6fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 006B
        gbc.setState(0x4ac5, 0x4a1a, 0x3130, 0xf688, 0x3f54, 0xd00f, 0x0, 0x1);
        gbc.writeMem(0x4ac5, { 0xfa, 0xe9, 0x6b });
        gbc.writeMem(0x6be9, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4a1a, gbc.sp());
        EXPECT(0x4ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 006C
        gbc.setState(0x6f2f, 0xc174, 0x42e0, 0x1df6, 0xd93d, 0x3810, 0x0, 0x1);
        gbc.writeMem(0x448b, { 0x43 });
        gbc.writeMem(0x6f2f, { 0xfa, 0x8b, 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc174, gbc.sp());
        EXPECT(0x6f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 006D
        gbc.setState(0x4116, 0xc74a, 0x2060, 0x7cda, 0x85c8, 0xb660, 0x1, 0x1);
        gbc.writeMem(0x4116, { 0xfa, 0x82, 0xe8 });
        gbc.writeMem(0xe882, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc74a, gbc.sp());
        EXPECT(0x4119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe882));
        // FA 006E
        gbc.setState(0x566d, 0xda1, 0x7ab0, 0x729, 0x4ff3, 0x3934, 0x1, 0x0);
        gbc.writeMem(0x566d, { 0xfa, 0x9e, 0xf8 });
        gbc.writeMem(0xf89e, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0x5670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xf89e));
        // FA 006F
        gbc.setState(0xbfa8, 0x7427, 0x6320, 0x9f1d, 0x527d, 0xef13, 0x1, 0x0);
        gbc.writeMem(0xa877, { 0x61 });
        gbc.writeMem(0xbfa8, { 0xfa, 0x77, 0xa8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7427, gbc.sp());
        EXPECT(0xbfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa877));
        EXPECT(0xfa, gbc.readMem(0xbfa8));
        EXPECT(0x77, gbc.readMem(0xbfa9));
        EXPECT(0xa8, gbc.readMem(0xbfaa));
        // FA 0070
        gbc.setState(0x1be9, 0xc3a, 0xdd10, 0x8c34, 0xe252, 0x6f06, 0x1, 0x0);
        gbc.writeMem(0x1be9, { 0xfa, 0xda, 0x2b });
        gbc.writeMem(0x2bda, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0x1bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0071
        gbc.setState(0x7cc3, 0x4c6b, 0x1b90, 0x29b2, 0xcf05, 0xb6e2, 0x0, 0x1);
        gbc.writeMem(0xe6f, { 0xe3 });
        gbc.writeMem(0x7cc3, { 0xfa, 0x6f, 0xe });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4c6b, gbc.sp());
        EXPECT(0x7cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0072
        gbc.setState(0x41fc, 0x8922, 0x4ed0, 0xc5f4, 0x3e6a, 0x89c6, 0x0, 0x1);
        gbc.writeMem(0x41fc, { 0xfa, 0x72, 0x6d });
        gbc.writeMem(0x6d72, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0x41ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0073
        gbc.setState(0xa1cf, 0x9e2d, 0x8340, 0x6829, 0x2082, 0x6fe8, 0x0, 0x0);
        gbc.writeMem(0xa1cf, { 0xfa, 0xeb, 0xe6 });
        gbc.writeMem(0xe6eb, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9e2d, gbc.sp());
        EXPECT(0xa1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa1cf));
        EXPECT(0xeb, gbc.readMem(0xa1d0));
        EXPECT(0xe6, gbc.readMem(0xa1d1));
        EXPECT(0xc5, gbc.readMem(0xe6eb));
        // FA 0074
        gbc.setState(0xe670, 0xbf42, 0x7880, 0xa1b6, 0x7a58, 0x4a01, 0x0, 0x0);
        gbc.writeMem(0xd44d, { 0xcf });
        gbc.writeMem(0xe670, { 0xfa, 0x4d, 0xd4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbf42, gbc.sp());
        EXPECT(0xe673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd44d));
        EXPECT(0xfa, gbc.readMem(0xe670));
        EXPECT(0x4d, gbc.readMem(0xe671));
        EXPECT(0xd4, gbc.readMem(0xe672));
        // FA 0075
        gbc.setState(0xa35e, 0xe211, 0xba70, 0x12a4, 0xb9f6, 0xf9de, 0x0, 0x1);
        gbc.writeMem(0x2d18, { 0x83 });
        gbc.writeMem(0xa35e, { 0xfa, 0x18, 0x2d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe211, gbc.sp());
        EXPECT(0xa361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa35e));
        EXPECT(0x18, gbc.readMem(0xa35f));
        EXPECT(0x2d, gbc.readMem(0xa360));
        // FA 0076
        gbc.setState(0xe2c3, 0x5fcb, 0x8b80, 0x3f0b, 0xa377, 0x672e, 0x0, 0x1);
        gbc.writeMem(0xe2c3, { 0xfa, 0xa8, 0xed });
        gbc.writeMem(0xeda8, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5fcb, gbc.sp());
        EXPECT(0xe2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe2c3));
        EXPECT(0xa8, gbc.readMem(0xe2c4));
        EXPECT(0xed, gbc.readMem(0xe2c5));
        EXPECT(0x6d, gbc.readMem(0xeda8));
        // FA 0077
        gbc.setState(0xcb94, 0xf2d3, 0xabf0, 0xe10b, 0x725a, 0x9915, 0x1, 0x0);
        gbc.writeMem(0xc574, { 0xa9 });
        gbc.writeMem(0xcb94, { 0xfa, 0x74, 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf2d3, gbc.sp());
        EXPECT(0xcb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xc574));
        EXPECT(0xfa, gbc.readMem(0xcb94));
        EXPECT(0x74, gbc.readMem(0xcb95));
        EXPECT(0xc5, gbc.readMem(0xcb96));
        // FA 0078
        gbc.setState(0xb1b6, 0xa471, 0xb860, 0x9851, 0x3971, 0xdab2, 0x1, 0x0);
        gbc.writeMem(0x5f39, { 0x8a });
        gbc.writeMem(0xb1b6, { 0xfa, 0x39, 0x5f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa471, gbc.sp());
        EXPECT(0xb1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb1b6));
        EXPECT(0x39, gbc.readMem(0xb1b7));
        EXPECT(0x5f, gbc.readMem(0xb1b8));
        // FA 0079
        gbc.setState(0xb05b, 0xb092, 0x3650, 0x6f5c, 0x6693, 0x5d12, 0x0, 0x0);
        gbc.writeMem(0xd82, { 0x77 });
        gbc.writeMem(0xb05b, { 0xfa, 0x82, 0xd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb092, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb05b));
        EXPECT(0x82, gbc.readMem(0xb05c));
        EXPECT(0xd, gbc.readMem(0xb05d));
        // FA 007A
        gbc.setState(0x52bf, 0x885d, 0x2530, 0xf25, 0xd868, 0xa8b0, 0x0, 0x1);
        gbc.writeMem(0x22b7, { 0x31 });
        gbc.writeMem(0x52bf, { 0xfa, 0xb7, 0x22 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x885d, gbc.sp());
        EXPECT(0x52c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 007B
        gbc.setState(0x2ee0, 0x951e, 0xfcb0, 0x833e, 0xc785, 0x6af3, 0x0, 0x0);
        gbc.writeMem(0x2ee0, { 0xfa, 0x7, 0x60 });
        gbc.writeMem(0x6007, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x951e, gbc.sp());
        EXPECT(0x2ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 007C
        gbc.setState(0x2a65, 0x8256, 0x2ac0, 0x7965, 0x5825, 0xc6ba, 0x1, 0x0);
        gbc.writeMem(0x2a65, { 0xfa, 0x26, 0xb5 });
        gbc.writeMem(0xb526, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8256, gbc.sp());
        EXPECT(0x2a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb526));
        // FA 007E
        gbc.setState(0x6188, 0xf976, 0xfaa0, 0x9d4d, 0xb820, 0xcf59, 0x0, 0x1);
        gbc.writeMem(0x6188, { 0xfa, 0x1d, 0x79 });
        gbc.writeMem(0x791d, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf976, gbc.sp());
        EXPECT(0x618b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 007F
        gbc.setState(0xdfc0, 0x63fc, 0x5a20, 0x133a, 0x298f, 0x1151, 0x1, 0x0);
        gbc.writeMem(0x984a, { 0xf2 });
        gbc.writeMem(0xdfc0, { 0xfa, 0x4a, 0x98 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0xdfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x984a));
        EXPECT(0xfa, gbc.readMem(0xdfc0));
        EXPECT(0x4a, gbc.readMem(0xdfc1));
        EXPECT(0x98, gbc.readMem(0xdfc2));
        // FA 0081
        gbc.setState(0x1eee, 0x5990, 0x6a40, 0xa0e4, 0xe741, 0xd9b6, 0x1, 0x1);
        gbc.writeMem(0x1eee, { 0xfa, 0x58, 0x4c });
        gbc.writeMem(0x4c58, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5990, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0082
        gbc.setState(0xc040, 0x291e, 0x2510, 0x2219, 0xdca2, 0x854d, 0x0, 0x1);
        gbc.writeMem(0xb72d, { 0x90 });
        gbc.writeMem(0xc040, { 0xfa, 0x2d, 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x291e, gbc.sp());
        EXPECT(0xc043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb72d));
        EXPECT(0xfa, gbc.readMem(0xc040));
        EXPECT(0x2d, gbc.readMem(0xc041));
        EXPECT(0xb7, gbc.readMem(0xc042));
        // FA 0083
        gbc.setState(0x2dd2, 0x5f8f, 0x55a0, 0x8359, 0x170c, 0x1f2a, 0x0, 0x0);
        gbc.writeMem(0x2dd2, { 0xfa, 0xee, 0xb8 });
        gbc.writeMem(0xb8ee, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5f8f, gbc.sp());
        EXPECT(0x2dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8ee));
        // FA 0084
        gbc.setState(0x866, 0xa42b, 0x75d0, 0xdfac, 0x7a3f, 0x605, 0x1, 0x1);
        gbc.writeMem(0x866, { 0xfa, 0x62, 0xb8 });
        gbc.writeMem(0xb862, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb862));
        // FA 0085
        gbc.setState(0xa989, 0x4222, 0x4f30, 0x5b38, 0xf710, 0xa05e, 0x0, 0x0);
        gbc.writeMem(0x595c, { 0xca });
        gbc.writeMem(0xa989, { 0xfa, 0x5c, 0x59 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0xa98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa989));
        EXPECT(0x5c, gbc.readMem(0xa98a));
        EXPECT(0x59, gbc.readMem(0xa98b));
        // FA 0086
        gbc.setState(0x9b1, 0xfc18, 0xb1c0, 0xc042, 0xe5ab, 0x9b1c, 0x0, 0x1);
        gbc.writeMem(0x9b1, { 0xfa, 0x31, 0x9e });
        gbc.writeMem(0x9e31, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfc18, gbc.sp());
        EXPECT(0x9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9e31));
        // FA 0087
        gbc.setState(0x38b9, 0xc6b3, 0x4cf0, 0xc511, 0x36e2, 0xbd98, 0x1, 0x1);
        gbc.writeMem(0x38b9, { 0xfa, 0xac, 0xe8 });
        gbc.writeMem(0xe8ac, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc6b3, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xe8ac));
        // FA 0088
        gbc.setState(0x9e12, 0x4d6e, 0xf330, 0x73fe, 0xb152, 0x2dc6, 0x0, 0x0);
        gbc.writeMem(0x9e12, { 0xfa, 0x23, 0xac });
        gbc.writeMem(0xac23, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d6e, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9e12));
        EXPECT(0x23, gbc.readMem(0x9e13));
        EXPECT(0xac, gbc.readMem(0x9e14));
        EXPECT(0xbd, gbc.readMem(0xac23));
        // FA 0089
        gbc.setState(0xb883, 0x1017, 0x5fc0, 0xd816, 0xd117, 0xada1, 0x1, 0x1);
        gbc.writeMem(0xac6f, { 0xeb });
        gbc.writeMem(0xb883, { 0xfa, 0x6f, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1017, gbc.sp());
        EXPECT(0xb886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xac6f));
        EXPECT(0xfa, gbc.readMem(0xb883));
        EXPECT(0x6f, gbc.readMem(0xb884));
        EXPECT(0xac, gbc.readMem(0xb885));
        // FA 008A
        gbc.setState(0x9af3, 0x745e, 0x6d00, 0x61ef, 0x2792, 0x3a82, 0x1, 0x1);
        gbc.writeMem(0x3bc8, { 0x53 });
        gbc.writeMem(0x9af3, { 0xfa, 0xc8, 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x745e, gbc.sp());
        EXPECT(0x9af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9af3));
        EXPECT(0xc8, gbc.readMem(0x9af4));
        EXPECT(0x3b, gbc.readMem(0x9af5));
        // FA 008B
        gbc.setState(0x30f6, 0x40f1, 0xe730, 0xe999, 0x3595, 0x91f9, 0x1, 0x1);
        gbc.writeMem(0x5f3, { 0xef });
        gbc.writeMem(0x30f6, { 0xfa, 0xf3, 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x40f1, gbc.sp());
        EXPECT(0x30f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 008D
        gbc.setState(0x5837, 0xf5, 0xb8c0, 0x2fb9, 0x5821, 0xe7fd, 0x1, 0x1);
        gbc.writeMem(0xa7, { 0x9b });
        gbc.writeMem(0x5837, { 0xfa, 0xa7, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf5, gbc.sp());
        EXPECT(0x583a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 008E
        gbc.setState(0xc383, 0x9307, 0xc650, 0xea07, 0xb722, 0x6f0, 0x0, 0x0);
        gbc.writeMem(0xa1ae, { 0xd1 });
        gbc.writeMem(0xc383, { 0xfa, 0xae, 0xa1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa1ae));
        EXPECT(0xfa, gbc.readMem(0xc383));
        EXPECT(0xae, gbc.readMem(0xc384));
        EXPECT(0xa1, gbc.readMem(0xc385));
        // FA 008F
        gbc.setState(0x30e9, 0xd284, 0x8c10, 0x5eab, 0xf292, 0xb752, 0x0, 0x1);
        gbc.writeMem(0x30e9, { 0xfa, 0xc0, 0x99 });
        gbc.writeMem(0x99c0, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd284, gbc.sp());
        EXPECT(0x30ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x99c0));
        // FA 0090
        gbc.setState(0x497c, 0x8988, 0xf6e0, 0x36c1, 0x2004, 0x2b38, 0x0, 0x1);
        gbc.writeMem(0x4713, { 0x14 });
        gbc.writeMem(0x497c, { 0xfa, 0x13, 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0x497f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0091
        gbc.setState(0x87c8, 0xc08a, 0x2760, 0xf638, 0xa86c, 0x911f, 0x1, 0x0);
        gbc.writeMem(0x83b9, { 0x28 });
        gbc.writeMem(0x87c8, { 0xfa, 0xb9, 0x83 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc08a, gbc.sp());
        EXPECT(0x87cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x83b9));
        EXPECT(0xfa, gbc.readMem(0x87c8));
        EXPECT(0xb9, gbc.readMem(0x87c9));
        EXPECT(0x83, gbc.readMem(0x87ca));
        // FA 0092
        gbc.setState(0x568c, 0xb63e, 0x960, 0x1f9a, 0xb8c7, 0xd622, 0x1, 0x1);
        gbc.writeMem(0x568c, { 0xfa, 0x5f, 0x91 });
        gbc.writeMem(0x915f, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb63e, gbc.sp());
        EXPECT(0x568f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x915f));
        // FA 0093
        gbc.setState(0xd5b5, 0x3193, 0x8ec0, 0xc2a7, 0x724, 0x7bf2, 0x1, 0x0);
        gbc.writeMem(0x988f, { 0xa9 });
        gbc.writeMem(0xd5b5, { 0xfa, 0x8f, 0x98 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3193, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x988f));
        EXPECT(0xfa, gbc.readMem(0xd5b5));
        EXPECT(0x8f, gbc.readMem(0xd5b6));
        EXPECT(0x98, gbc.readMem(0xd5b7));
        // FA 0094
        gbc.setState(0xc8e8, 0x22b9, 0x80c0, 0x4b3a, 0x511b, 0x2c37, 0x1, 0x0);
        gbc.writeMem(0x11ec, { 0x56 });
        gbc.writeMem(0xc8e8, { 0xfa, 0xec, 0x11 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x22b9, gbc.sp());
        EXPECT(0xc8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc8e8));
        EXPECT(0xec, gbc.readMem(0xc8e9));
        EXPECT(0x11, gbc.readMem(0xc8ea));
        // FA 0095
        gbc.setState(0xac77, 0xe424, 0x6eb0, 0x82c2, 0xc35e, 0xcc51, 0x0, 0x0);
        gbc.writeMem(0x688e, { 0x7 });
        gbc.writeMem(0xac77, { 0xfa, 0x8e, 0x68 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe424, gbc.sp());
        EXPECT(0xac7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xac77));
        EXPECT(0x8e, gbc.readMem(0xac78));
        EXPECT(0x68, gbc.readMem(0xac79));
        // FA 0096
        gbc.setState(0x664f, 0x3062, 0x6470, 0xe4ae, 0x72d, 0x6a9f, 0x1, 0x0);
        gbc.writeMem(0x664f, { 0xfa, 0x8d, 0x6e });
        gbc.writeMem(0x6e8d, { 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3062, gbc.sp());
        EXPECT(0x6652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0097
        gbc.setState(0x2fca, 0x4e87, 0xeec0, 0x9d8e, 0x5c75, 0xabc1, 0x1, 0x0);
        gbc.writeMem(0x2fca, { 0xfa, 0xdc, 0xc0 });
        gbc.writeMem(0xc0dc, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4e87, gbc.sp());
        EXPECT(0x2fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc0dc));
        // FA 0098
        gbc.setState(0xa344, 0x6c4c, 0xcb40, 0x46e4, 0x3665, 0x654, 0x0, 0x0);
        gbc.writeMem(0xa344, { 0xfa, 0xd9, 0xbf });
        gbc.writeMem(0xbfd9, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6c4c, gbc.sp());
        EXPECT(0xa347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa344));
        EXPECT(0xd9, gbc.readMem(0xa345));
        EXPECT(0xbf, gbc.readMem(0xa346));
        EXPECT(0xc1, gbc.readMem(0xbfd9));
        // FA 0099
        gbc.setState(0xcd08, 0xffd5, 0xf150, 0xb310, 0x7501, 0x4e7b, 0x0, 0x1);
        gbc.writeMem(0xcd08, { 0xfa, 0xa6, 0xf5 });
        gbc.writeMem(0xf5a6, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xffd5, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcd08));
        EXPECT(0xa6, gbc.readMem(0xcd09));
        EXPECT(0xf5, gbc.readMem(0xcd0a));
        EXPECT(0x58, gbc.readMem(0xf5a6));
        // FA 009A
        gbc.setState(0xef8f, 0xc115, 0x58a0, 0xad63, 0xd43, 0x9872, 0x1, 0x0);
        gbc.writeMem(0x11a5, { 0xc8 });
        gbc.writeMem(0xef8f, { 0xfa, 0xa5, 0x11 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc115, gbc.sp());
        EXPECT(0xef92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xef8f));
        EXPECT(0xa5, gbc.readMem(0xef90));
        EXPECT(0x11, gbc.readMem(0xef91));
        // FA 009B
        gbc.setState(0x49a, 0x1420, 0xf0d0, 0xfd70, 0xf25f, 0xbb16, 0x1, 0x0);
        gbc.writeMem(0x49a, { 0xfa, 0xf3, 0xfa });
        gbc.writeMem(0xfaf3, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1420, gbc.sp());
        EXPECT(0x49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xfaf3));
        // FA 009C
        gbc.setState(0x6c7f, 0xcda7, 0x98e0, 0xcede, 0x1ad4, 0xb1a, 0x0, 0x1);
        gbc.writeMem(0x6c7f, { 0xfa, 0xcf, 0xf9 });
        gbc.writeMem(0xf9cf, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcda7, gbc.sp());
        EXPECT(0x6c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xf9cf));
        // FA 009D
        gbc.setState(0x6d91, 0x43f6, 0x9950, 0xafe7, 0x3259, 0xfaf8, 0x1, 0x1);
        gbc.writeMem(0x1d66, { 0x1d });
        gbc.writeMem(0x6d91, { 0xfa, 0x66, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0x6d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 009E
        gbc.setState(0xd3d5, 0x4107, 0x7950, 0xf488, 0xbc38, 0x842, 0x1, 0x0);
        gbc.writeMem(0xd3d5, { 0xfa, 0x3f, 0xfc });
        gbc.writeMem(0xfc3f, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4107, gbc.sp());
        EXPECT(0xd3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd3d5));
        EXPECT(0x3f, gbc.readMem(0xd3d6));
        EXPECT(0xfc, gbc.readMem(0xd3d7));
        EXPECT(0x10, gbc.readMem(0xfc3f));
        // FA 009F
        gbc.setState(0xdc29, 0xd6bd, 0x4e50, 0x24a9, 0xe951, 0xe62, 0x0, 0x1);
        gbc.writeMem(0x1788, { 0xc5 });
        gbc.writeMem(0xdc29, { 0xfa, 0x88, 0x17 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd6bd, gbc.sp());
        EXPECT(0xdc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdc29));
        EXPECT(0x88, gbc.readMem(0xdc2a));
        EXPECT(0x17, gbc.readMem(0xdc2b));
        // FA 00A0
        gbc.setState(0x3069, 0xc30a, 0xd00, 0x77ed, 0xda69, 0xe880, 0x1, 0x0);
        gbc.writeMem(0x3069, { 0xfa, 0xeb, 0x3c });
        gbc.writeMem(0x3ceb, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc30a, gbc.sp());
        EXPECT(0x306c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00A1
        gbc.setState(0x666d, 0x5e98, 0x44c0, 0x43e7, 0x8597, 0xe35f, 0x0, 0x1);
        gbc.writeMem(0x666d, { 0xfa, 0xe8, 0xb8 });
        gbc.writeMem(0xb8e8, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5e98, gbc.sp());
        EXPECT(0x6670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb8e8));
        // FA 00A2
        gbc.setState(0xb368, 0xdfa9, 0xe900, 0x9fbc, 0x566c, 0x9ee8, 0x1, 0x1);
        gbc.writeMem(0xb266, { 0x9e });
        gbc.writeMem(0xb368, { 0xfa, 0x66, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdfa9, gbc.sp());
        EXPECT(0xb36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb266));
        EXPECT(0xfa, gbc.readMem(0xb368));
        EXPECT(0x66, gbc.readMem(0xb369));
        EXPECT(0xb2, gbc.readMem(0xb36a));
        // FA 00A3
        gbc.setState(0xea1d, 0x1b21, 0xea10, 0xb376, 0xa9b5, 0xff72, 0x1, 0x0);
        gbc.writeMem(0xd69a, { 0x10 });
        gbc.writeMem(0xea1d, { 0xfa, 0x9a, 0xd6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1b21, gbc.sp());
        EXPECT(0xea20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd69a));
        EXPECT(0xfa, gbc.readMem(0xea1d));
        EXPECT(0x9a, gbc.readMem(0xea1e));
        EXPECT(0xd6, gbc.readMem(0xea1f));
        // FA 00A5
        gbc.setState(0x8581, 0x702f, 0xd8a0, 0xf29, 0x4b15, 0x1a3a, 0x0, 0x1);
        gbc.writeMem(0x5074, { 0x8f });
        gbc.writeMem(0x8581, { 0xfa, 0x74, 0x50 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x702f, gbc.sp());
        EXPECT(0x8584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8581));
        EXPECT(0x74, gbc.readMem(0x8582));
        EXPECT(0x50, gbc.readMem(0x8583));
        // FA 00A6
        gbc.setState(0xc8da, 0x38a5, 0x46f0, 0xd517, 0x1c47, 0xb770, 0x0, 0x0);
        gbc.writeMem(0xae72, { 0x4 });
        gbc.writeMem(0xc8da, { 0xfa, 0x72, 0xae });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x38a5, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xae72));
        EXPECT(0xfa, gbc.readMem(0xc8da));
        EXPECT(0x72, gbc.readMem(0xc8db));
        EXPECT(0xae, gbc.readMem(0xc8dc));
        // FA 00A7
        gbc.setState(0x8df9, 0x8079, 0xef00, 0x50f4, 0x5659, 0xcdad, 0x1, 0x1);
        gbc.writeMem(0x3990, { 0x97 });
        gbc.writeMem(0x8df9, { 0xfa, 0x90, 0x39 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8079, gbc.sp());
        EXPECT(0x8dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8df9));
        EXPECT(0x90, gbc.readMem(0x8dfa));
        EXPECT(0x39, gbc.readMem(0x8dfb));
        // FA 00A8
        gbc.setState(0x615c, 0x7b17, 0xb130, 0xccef, 0x8295, 0x440, 0x1, 0x0);
        gbc.writeMem(0x615c, { 0xfa, 0x5b, 0xca });
        gbc.writeMem(0xca5b, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0x615f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xca5b));
        // FA 00AA
        gbc.setState(0x1aa2, 0x1fa9, 0xf8c0, 0xdef9, 0x8165, 0x1529, 0x0, 0x0);
        gbc.writeMem(0x1aa2, { 0xfa, 0xf3, 0x55 });
        gbc.writeMem(0x55f3, { 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1fa9, gbc.sp());
        EXPECT(0x1aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00AB
        gbc.setState(0x2167, 0x7d71, 0x77b0, 0xbfe7, 0x3f74, 0x9dac, 0x1, 0x1);
        gbc.writeMem(0x2167, { 0xfa, 0x65, 0xf3 });
        gbc.writeMem(0xf365, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7d71, gbc.sp());
        EXPECT(0x216a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xf365));
        // FA 00AC
        gbc.setState(0x2f8d, 0x4b0c, 0xc000, 0x72d0, 0x6003, 0xc261, 0x1, 0x0);
        gbc.writeMem(0x2f8d, { 0xfa, 0xb6, 0xb2 });
        gbc.writeMem(0xb2b6, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4b0c, gbc.sp());
        EXPECT(0x2f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb2b6));
        // FA 00AD
        gbc.setState(0x7cbc, 0x3c1a, 0x90f0, 0xda8f, 0x20a3, 0x1fa6, 0x0, 0x1);
        gbc.writeMem(0x65ed, { 0xf4 });
        gbc.writeMem(0x7cbc, { 0xfa, 0xed, 0x65 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3c1a, gbc.sp());
        EXPECT(0x7cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00AE
        gbc.setState(0x7455, 0x35a3, 0x5240, 0x1f0f, 0x606f, 0xf68a, 0x0, 0x0);
        gbc.writeMem(0x3115, { 0xb7 });
        gbc.writeMem(0x7455, { 0xfa, 0x15, 0x31 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x35a3, gbc.sp());
        EXPECT(0x7458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00AF
        gbc.setState(0x817f, 0xab02, 0xe500, 0x58bd, 0xe927, 0xea9c, 0x0, 0x1);
        gbc.writeMem(0x5123, { 0x80 });
        gbc.writeMem(0x817f, { 0xfa, 0x23, 0x51 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xab02, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x817f));
        EXPECT(0x23, gbc.readMem(0x8180));
        EXPECT(0x51, gbc.readMem(0x8181));
        // FA 00B0
        gbc.setState(0xbd96, 0xe508, 0x49b0, 0x307d, 0xf19, 0x5548, 0x1, 0x1);
        gbc.writeMem(0x8252, { 0xb5 });
        gbc.writeMem(0xbd96, { 0xfa, 0x52, 0x82 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe508, gbc.sp());
        EXPECT(0xbd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8252));
        EXPECT(0xfa, gbc.readMem(0xbd96));
        EXPECT(0x52, gbc.readMem(0xbd97));
        EXPECT(0x82, gbc.readMem(0xbd98));
        // FA 00B1
        gbc.setState(0x7b14, 0x6f0a, 0xfa30, 0xc3ae, 0x186f, 0x8b6b, 0x1, 0x0);
        gbc.writeMem(0x47ad, { 0xb8 });
        gbc.writeMem(0x7b14, { 0xfa, 0xad, 0x47 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6f0a, gbc.sp());
        EXPECT(0x7b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00B2
        gbc.setState(0x5ba4, 0xd8c1, 0xca40, 0xce71, 0xec91, 0xb802, 0x0, 0x1);
        gbc.writeMem(0x5ba4, { 0xfa, 0x81, 0x6f });
        gbc.writeMem(0x6f81, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd8c1, gbc.sp());
        EXPECT(0x5ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00B3
        gbc.setState(0x68b5, 0xf592, 0xc310, 0xf04e, 0x3207, 0x3282, 0x1, 0x1);
        gbc.writeMem(0xee, { 0x87 });
        gbc.writeMem(0x68b5, { 0xfa, 0xee, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf592, gbc.sp());
        EXPECT(0x68b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00B4
        gbc.setState(0xce5c, 0xda23, 0xa930, 0x9445, 0xd515, 0x7eea, 0x1, 0x1);
        gbc.writeMem(0x6606, { 0xf0 });
        gbc.writeMem(0xce5c, { 0xfa, 0x6, 0x66 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xda23, gbc.sp());
        EXPECT(0xce5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xce5c));
        EXPECT(0x6, gbc.readMem(0xce5d));
        EXPECT(0x66, gbc.readMem(0xce5e));
        // FA 00B5
        gbc.setState(0x5b8a, 0x7e14, 0xc250, 0xb9ae, 0x6f63, 0xccbd, 0x1, 0x1);
        gbc.writeMem(0x5b8a, { 0xfa, 0x8b, 0x75 });
        gbc.writeMem(0x758b, { 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7e14, gbc.sp());
        EXPECT(0x5b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00B6
        gbc.setState(0xb050, 0x99b5, 0x7670, 0x582b, 0x4a5a, 0x383, 0x1, 0x0);
        gbc.writeMem(0xb6e, { 0x4f });
        gbc.writeMem(0xb050, { 0xfa, 0x6e, 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x99b5, gbc.sp());
        EXPECT(0xb053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb050));
        EXPECT(0x6e, gbc.readMem(0xb051));
        EXPECT(0xb, gbc.readMem(0xb052));
        // FA 00B7
        gbc.setState(0x4eee, 0xd93f, 0x9010, 0x86d1, 0xc27d, 0xe34c, 0x1, 0x0);
        gbc.writeMem(0x4519, { 0xf });
        gbc.writeMem(0x4eee, { 0xfa, 0x19, 0x45 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd93f, gbc.sp());
        EXPECT(0x4ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00B9
        gbc.setState(0x64c8, 0xdace, 0xa610, 0xf8d, 0x8ab2, 0x2132, 0x0, 0x0);
        gbc.writeMem(0x39ad, { 0x96 });
        gbc.writeMem(0x64c8, { 0xfa, 0xad, 0x39 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdace, gbc.sp());
        EXPECT(0x64cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00BA
        gbc.setState(0xd402, 0xd603, 0x4770, 0xd586, 0x824a, 0x10ad, 0x1, 0x0);
        gbc.writeMem(0x8e39, { 0x95 });
        gbc.writeMem(0xd402, { 0xfa, 0x39, 0x8e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8e39));
        EXPECT(0xfa, gbc.readMem(0xd402));
        EXPECT(0x39, gbc.readMem(0xd403));
        EXPECT(0x8e, gbc.readMem(0xd404));
        // FA 00BB
        gbc.setState(0x9050, 0xd0ee, 0x2fc0, 0xb64f, 0x7cf1, 0x7c0d, 0x1, 0x1);
        gbc.writeMem(0x1d3c, { 0xae });
        gbc.writeMem(0x9050, { 0xfa, 0x3c, 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd0ee, gbc.sp());
        EXPECT(0x9053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9050));
        EXPECT(0x3c, gbc.readMem(0x9051));
        EXPECT(0x1d, gbc.readMem(0x9052));
        // FA 00BC
        gbc.setState(0xd810, 0xde6b, 0x4d40, 0x9742, 0x22c, 0x23f0, 0x1, 0x0);
        gbc.writeMem(0xd810, { 0xfa, 0x33, 0xe8 });
        gbc.writeMem(0xe833, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xde6b, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd810));
        EXPECT(0x33, gbc.readMem(0xd811));
        EXPECT(0xe8, gbc.readMem(0xd812));
        EXPECT(0xbc, gbc.readMem(0xe833));
        // FA 00BD
        gbc.setState(0x9e5a, 0x4c53, 0xcdf0, 0x8cbf, 0x169f, 0x66d0, 0x1, 0x1);
        gbc.writeMem(0x9e5a, { 0xfa, 0xa1, 0xcd });
        gbc.writeMem(0xcda1, { 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4c53, gbc.sp());
        EXPECT(0x9e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9e5a));
        EXPECT(0xa1, gbc.readMem(0x9e5b));
        EXPECT(0xcd, gbc.readMem(0x9e5c));
        EXPECT(0xf6, gbc.readMem(0xcda1));
        // FA 00BE
        gbc.setState(0x2d, 0xd38c, 0xfc0, 0x86b6, 0x6981, 0x7f14, 0x1, 0x0);
        gbc.writeMem(0x2d, { 0xfa, 0x2f, 0x48 });
        gbc.writeMem(0x482f, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd38c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00BF
        gbc.setState(0xce, 0x220c, 0xead0, 0x5890, 0x8fb8, 0x6c77, 0x1, 0x0);
        gbc.writeMem(0xce, { 0xfa, 0xd2, 0x4b });
        gbc.writeMem(0x4bd2, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x220c, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00C0
        gbc.setState(0xc2c5, 0x8477, 0x2c00, 0x19ea, 0x7a05, 0xb24a, 0x1, 0x0);
        gbc.writeMem(0xc2c5, { 0xfa, 0x84, 0xff });
        gbc.writeMem(0xff84, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0xc2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc2c5));
        EXPECT(0x84, gbc.readMem(0xc2c6));
        EXPECT(0xff, gbc.readMem(0xc2c7));
        EXPECT(0xb7, gbc.readMem(0xff84));
        // FA 00C2
        gbc.setState(0x4b55, 0x69ad, 0x7080, 0x5383, 0xb7d2, 0x6e77, 0x1, 0x0);
        gbc.writeMem(0x4b55, { 0xfa, 0x24, 0x56 });
        gbc.writeMem(0x5624, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x69ad, gbc.sp());
        EXPECT(0x4b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00C3
        gbc.setState(0x9603, 0x5fc9, 0xdef0, 0xd4d6, 0x80d3, 0xaab8, 0x0, 0x0);
        gbc.writeMem(0x5649, { 0x93 });
        gbc.writeMem(0x9603, { 0xfa, 0x49, 0x56 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5fc9, gbc.sp());
        EXPECT(0x9606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9603));
        EXPECT(0x49, gbc.readMem(0x9604));
        EXPECT(0x56, gbc.readMem(0x9605));
        // FA 00C4
        gbc.setState(0x2ee6, 0x305c, 0x8570, 0x8349, 0x1f38, 0xcb9a, 0x1, 0x0);
        gbc.writeMem(0x17a8, { 0xc8 });
        gbc.writeMem(0x2ee6, { 0xfa, 0xa8, 0x17 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x305c, gbc.sp());
        EXPECT(0x2ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00C5
        gbc.setState(0x184d, 0xaaa7, 0xe570, 0x10e6, 0xc33c, 0xa307, 0x0, 0x1);
        gbc.writeMem(0x184d, { 0xfa, 0x92, 0xfa });
        gbc.writeMem(0xfa92, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaaa7, gbc.sp());
        EXPECT(0x1850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xfa92));
        // FA 00C6
        gbc.setState(0xc481, 0x94bb, 0x4c70, 0x7238, 0x5368, 0x8d19, 0x0, 0x1);
        gbc.writeMem(0xc481, { 0xfa, 0x9f, 0xe7 });
        gbc.writeMem(0xe79f, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x94bb, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc481));
        EXPECT(0x9f, gbc.readMem(0xc482));
        EXPECT(0xe7, gbc.readMem(0xc483));
        EXPECT(0x5e, gbc.readMem(0xe79f));
        // FA 00C8
        gbc.setState(0x625b, 0x6871, 0x9040, 0x88c3, 0x2fe9, 0x2811, 0x1, 0x1);
        gbc.writeMem(0x5405, { 0xa8 });
        gbc.writeMem(0x625b, { 0xfa, 0x5, 0x54 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6871, gbc.sp());
        EXPECT(0x625e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00C9
        gbc.setState(0x806b, 0x922a, 0x9ac0, 0xa7f1, 0xb166, 0xdb34, 0x1, 0x1);
        gbc.writeMem(0x806b, { 0xfa, 0x1b, 0xb0 });
        gbc.writeMem(0xb01b, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x922a, gbc.sp());
        EXPECT(0x806e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x806b));
        EXPECT(0x1b, gbc.readMem(0x806c));
        EXPECT(0xb0, gbc.readMem(0x806d));
        EXPECT(0x95, gbc.readMem(0xb01b));
        // FA 00CA
        gbc.setState(0x9826, 0x3cc1, 0x8410, 0xe6eb, 0x820d, 0x143f, 0x1, 0x0);
        gbc.writeMem(0x1960, { 0x5e });
        gbc.writeMem(0x9826, { 0xfa, 0x60, 0x19 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3cc1, gbc.sp());
        EXPECT(0x9829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9826));
        EXPECT(0x60, gbc.readMem(0x9827));
        EXPECT(0x19, gbc.readMem(0x9828));
        // FA 00CB
        gbc.setState(0xf47, 0xb33d, 0xa670, 0xc504, 0xe26c, 0x917c, 0x1, 0x0);
        gbc.writeMem(0xf47, { 0xfa, 0xaf, 0xe0 });
        gbc.writeMem(0xe0af, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb33d, gbc.sp());
        EXPECT(0xf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe0af));
        // FA 00CC
        gbc.setState(0x4123, 0xde2d, 0x8380, 0x3da4, 0x16eb, 0x6668, 0x1, 0x0);
        gbc.writeMem(0x4123, { 0xfa, 0x74, 0x7e });
        gbc.writeMem(0x7e74, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xde2d, gbc.sp());
        EXPECT(0x4126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00CD
        gbc.setState(0x777, 0xd8ce, 0xe140, 0xc0fd, 0x9b0f, 0xe525, 0x0, 0x0);
        gbc.writeMem(0x777, { 0xfa, 0xbf, 0x99 });
        gbc.writeMem(0x99bf, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd8ce, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x99bf));
        // FA 00CE
        gbc.setState(0x2660, 0xc9da, 0x7750, 0xcd79, 0xca41, 0x8e6b, 0x0, 0x1);
        gbc.writeMem(0x2660, { 0xfa, 0x63, 0x8a });
        gbc.writeMem(0x8a63, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc9da, gbc.sp());
        EXPECT(0x2663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8a63));
        // FA 00CF
        gbc.setState(0x7807, 0xfff2, 0xeb10, 0x904f, 0x4bff, 0xaffd, 0x1, 0x0);
        gbc.writeMem(0x7402, { 0x52 });
        gbc.writeMem(0x7807, { 0xfa, 0x2, 0x74 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfff2, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00D0
        gbc.setState(0x80fc, 0x5134, 0xf330, 0x75df, 0xf04, 0x83f7, 0x0, 0x0);
        gbc.writeMem(0x80fc, { 0xfa, 0x7f, 0xcf });
        gbc.writeMem(0xcf7f, { 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5134, gbc.sp());
        EXPECT(0x80ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x80fc));
        EXPECT(0x7f, gbc.readMem(0x80fd));
        EXPECT(0xcf, gbc.readMem(0x80fe));
        EXPECT(0x20, gbc.readMem(0xcf7f));
        // FA 00D2
        gbc.setState(0x6578, 0x1027, 0xad80, 0x25f8, 0xc085, 0xe431, 0x0, 0x0);
        gbc.writeMem(0x54c, { 0xc });
        gbc.writeMem(0x6578, { 0xfa, 0x4c, 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1027, gbc.sp());
        EXPECT(0x657b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00D3
        gbc.setState(0x3425, 0x9fc, 0x5e30, 0xdfb5, 0x4df4, 0x3cf3, 0x0, 0x0);
        gbc.writeMem(0x3425, { 0xfa, 0xa9, 0x34 });
        gbc.writeMem(0x34a9, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9fc, gbc.sp());
        EXPECT(0x3428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00D4
        gbc.setState(0x71bd, 0xec94, 0x8cc0, 0xe344, 0xfd5d, 0x562, 0x1, 0x1);
        gbc.writeMem(0x71bd, { 0xfa, 0x4c, 0x8b });
        gbc.writeMem(0x8b4c, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xec94, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8b4c));
        // FA 00D5
        gbc.setState(0xa08a, 0x8bf4, 0xab60, 0xbfde, 0x67b7, 0xb4d0, 0x1, 0x0);
        gbc.writeMem(0x1396, { 0x22 });
        gbc.writeMem(0xa08a, { 0xfa, 0x96, 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8bf4, gbc.sp());
        EXPECT(0xa08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa08a));
        EXPECT(0x96, gbc.readMem(0xa08b));
        EXPECT(0x13, gbc.readMem(0xa08c));
        // FA 00D6
        gbc.setState(0x1f3c, 0x3ff3, 0x36b0, 0xb1b2, 0x1a16, 0x8763, 0x1, 0x1);
        gbc.writeMem(0x1f3c, { 0xfa, 0x51, 0x85 });
        gbc.writeMem(0x8551, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3ff3, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8551));
        // FA 00D7
        gbc.setState(0xcc1b, 0x73d5, 0x8340, 0x6fc0, 0x91c8, 0x21c1, 0x0, 0x1);
        gbc.writeMem(0x7acd, { 0x9e });
        gbc.writeMem(0xcc1b, { 0xfa, 0xcd, 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x73d5, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcc1b));
        EXPECT(0xcd, gbc.readMem(0xcc1c));
        EXPECT(0x7a, gbc.readMem(0xcc1d));
        // FA 00D8
        gbc.setState(0x8a47, 0x2d94, 0x4e90, 0x2f7d, 0x3abe, 0xcab8, 0x0, 0x1);
        gbc.writeMem(0x8a47, { 0xfa, 0xd0, 0xb1 });
        gbc.writeMem(0xb1d0, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2d94, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8a47));
        EXPECT(0xd0, gbc.readMem(0x8a48));
        EXPECT(0xb1, gbc.readMem(0x8a49));
        EXPECT(0xb1, gbc.readMem(0xb1d0));
        // FA 00D9
        gbc.setState(0xe885, 0xad9, 0x19a0, 0xc54b, 0x300d, 0x8964, 0x0, 0x0);
        gbc.writeMem(0x2a27, { 0xf0 });
        gbc.writeMem(0xe885, { 0xfa, 0x27, 0x2a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xad9, gbc.sp());
        EXPECT(0xe888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe885));
        EXPECT(0x27, gbc.readMem(0xe886));
        EXPECT(0x2a, gbc.readMem(0xe887));
        // FA 00DA
        gbc.setState(0x5dcd, 0x9f53, 0x3260, 0x5e62, 0x1b7f, 0x51e6, 0x1, 0x1);
        gbc.writeMem(0x5dcd, { 0xfa, 0xc4, 0xeb });
        gbc.writeMem(0xebc4, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9f53, gbc.sp());
        EXPECT(0x5dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xebc4));
        // FA 00DB
        gbc.setState(0x6f7c, 0xc244, 0xecc0, 0x587f, 0xad54, 0xae02, 0x0, 0x0);
        gbc.writeMem(0x6648, { 0xd1 });
        gbc.writeMem(0x6f7c, { 0xfa, 0x48, 0x66 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc244, gbc.sp());
        EXPECT(0x6f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00DC
        gbc.setState(0xd97c, 0x4be5, 0xb470, 0x3aa3, 0x17d9, 0x9303, 0x1, 0x1);
        gbc.writeMem(0x318a, { 0x20 });
        gbc.writeMem(0xd97c, { 0xfa, 0x8a, 0x31 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4be5, gbc.sp());
        EXPECT(0xd97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd97c));
        EXPECT(0x8a, gbc.readMem(0xd97d));
        EXPECT(0x31, gbc.readMem(0xd97e));
        // FA 00DD
        gbc.setState(0xd73f, 0x28d5, 0xc1f0, 0xf829, 0x42e0, 0x9c0, 0x0, 0x0);
        gbc.writeMem(0x4cf5, { 0xd4 });
        gbc.writeMem(0xd73f, { 0xfa, 0xf5, 0x4c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x28d5, gbc.sp());
        EXPECT(0xd742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd73f));
        EXPECT(0xf5, gbc.readMem(0xd740));
        EXPECT(0x4c, gbc.readMem(0xd741));
        // FA 00DE
        gbc.setState(0xe141, 0x30ac, 0x84d0, 0x8624, 0xa56c, 0xa1a3, 0x1, 0x1);
        gbc.writeMem(0xe141, { 0xfa, 0x62, 0xfd });
        gbc.writeMem(0xfd62, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x30ac, gbc.sp());
        EXPECT(0xe144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe141));
        EXPECT(0x62, gbc.readMem(0xe142));
        EXPECT(0xfd, gbc.readMem(0xe143));
        EXPECT(0x34, gbc.readMem(0xfd62));
        // FA 00DF
        gbc.setState(0x2f56, 0x5393, 0xb340, 0x8c52, 0x178, 0x67cf, 0x1, 0x1);
        gbc.writeMem(0x2f56, { 0xfa, 0xe, 0x9a });
        gbc.writeMem(0x9a0e, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5393, gbc.sp());
        EXPECT(0x2f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9a0e));
        // FA 00E0
        gbc.setState(0x6ab4, 0xfd95, 0x1b70, 0xf5f9, 0x9c9c, 0xb051, 0x1, 0x1);
        gbc.writeMem(0x6ab4, { 0xfa, 0xc, 0xcd });
        gbc.writeMem(0xcd0c, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfd95, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xcd0c));
        // FA 00E1
        gbc.setState(0x74c7, 0x9e44, 0x81f0, 0x7a3, 0x659d, 0x885d, 0x0, 0x1);
        gbc.writeMem(0xe5b, { 0x1b });
        gbc.writeMem(0x74c7, { 0xfa, 0x5b, 0xe });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9e44, gbc.sp());
        EXPECT(0x74ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00E2
        gbc.setState(0x7e5b, 0x97e3, 0x31e0, 0xc1a2, 0xad86, 0x5253, 0x0, 0x0);
        gbc.writeMem(0x7e5b, { 0xfa, 0x63, 0xc3 });
        gbc.writeMem(0xc363, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x97e3, gbc.sp());
        EXPECT(0x7e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xc363));
        // FA 00E3
        gbc.setState(0x4430, 0x345, 0xd460, 0x1c5c, 0x4834, 0x4760, 0x1, 0x0);
        gbc.writeMem(0x4430, { 0xfa, 0x99, 0xa8 });
        gbc.writeMem(0xa899, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0x4433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa899));
        // FA 00E4
        gbc.setState(0xb33c, 0x77dd, 0xfa40, 0xe7e2, 0x2632, 0xea74, 0x0, 0x1);
        gbc.writeMem(0xb33c, { 0xfa, 0x3d, 0xc0 });
        gbc.writeMem(0xc03d, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x77dd, gbc.sp());
        EXPECT(0xb33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb33c));
        EXPECT(0x3d, gbc.readMem(0xb33d));
        EXPECT(0xc0, gbc.readMem(0xb33e));
        EXPECT(0x75, gbc.readMem(0xc03d));
        // FA 00E5
        gbc.setState(0xd540, 0x4720, 0x4820, 0x9843, 0xb18f, 0xf484, 0x1, 0x0);
        gbc.writeMem(0x6307, { 0xfa });
        gbc.writeMem(0xd540, { 0xfa, 0x7, 0x63 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4720, gbc.sp());
        EXPECT(0xd543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd540));
        EXPECT(0x7, gbc.readMem(0xd541));
        EXPECT(0x63, gbc.readMem(0xd542));
        // FA 00E7
        gbc.setState(0x2a4b, 0x2c55, 0xa5d0, 0xa162, 0x1427, 0xf7ee, 0x1, 0x0);
        gbc.writeMem(0x2a4b, { 0xfa, 0x63, 0xa9 });
        gbc.writeMem(0xa963, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2c55, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa963));
        // FA 00E8
        gbc.setState(0xcc69, 0xe50e, 0xabe0, 0xe6d9, 0x3373, 0x2185, 0x0, 0x1);
        gbc.writeMem(0x4516, { 0x2f });
        gbc.writeMem(0xcc69, { 0xfa, 0x16, 0x45 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe50e, gbc.sp());
        EXPECT(0xcc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcc69));
        EXPECT(0x16, gbc.readMem(0xcc6a));
        EXPECT(0x45, gbc.readMem(0xcc6b));
        // FA 00E9
        gbc.setState(0x634c, 0xc759, 0xf640, 0x67cf, 0x2804, 0x7391, 0x1, 0x1);
        gbc.writeMem(0x634c, { 0xfa, 0xdf, 0x88 });
        gbc.writeMem(0x88df, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc759, gbc.sp());
        EXPECT(0x634f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x88df));
        // FA 00EA
        gbc.setState(0x6c60, 0xd4be, 0xc9d0, 0xb21f, 0xcc0d, 0xc427, 0x1, 0x1);
        gbc.writeMem(0x6c60, { 0xfa, 0xd3, 0xcf });
        gbc.writeMem(0xcfd3, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xcfd3));
        // FA 00EB
        gbc.setState(0x567, 0xaf33, 0xe9c0, 0x2901, 0xadb0, 0x5635, 0x1, 0x0);
        gbc.writeMem(0x567, { 0xfa, 0x40, 0x37 });
        gbc.writeMem(0x3740, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0x56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00EC
        gbc.setState(0x7400, 0x6be6, 0x350, 0x4b84, 0x9f06, 0xaaf, 0x1, 0x1);
        gbc.writeMem(0x52bd, { 0x2a });
        gbc.writeMem(0x7400, { 0xfa, 0xbd, 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0x7403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00ED
        gbc.setState(0x99ac, 0x5680, 0x6970, 0x6e4d, 0x69d2, 0x14a3, 0x1, 0x0);
        gbc.writeMem(0x99ac, { 0xfa, 0x5d, 0xbb });
        gbc.writeMem(0xbb5d, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5680, gbc.sp());
        EXPECT(0x99af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x99ac));
        EXPECT(0x5d, gbc.readMem(0x99ad));
        EXPECT(0xbb, gbc.readMem(0x99ae));
        EXPECT(0x36, gbc.readMem(0xbb5d));
        // FA 00EE
        gbc.setState(0x5642, 0x2aa4, 0x3710, 0xc144, 0xcb49, 0xbe59, 0x1, 0x0);
        gbc.writeMem(0x5642, { 0xfa, 0x59, 0xc3 });
        gbc.writeMem(0xc359, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2aa4, gbc.sp());
        EXPECT(0x5645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc359));
        // FA 00EF
        gbc.setState(0x4271, 0x4013, 0x3640, 0x8ac8, 0x81b5, 0x9dcb, 0x0, 0x1);
        gbc.writeMem(0x4271, { 0xfa, 0x12, 0xe8 });
        gbc.writeMem(0xe812, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4013, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe812));
        // FA 00F0
        gbc.setState(0x7cf, 0x8488, 0x6070, 0x6d02, 0x1809, 0xbeac, 0x1, 0x1);
        gbc.writeMem(0x7cf, { 0xfa, 0x8e, 0x32 });
        gbc.writeMem(0x328e, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8488, gbc.sp());
        EXPECT(0x7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00F1
        gbc.setState(0xe5df, 0x404c, 0x5ba0, 0x4eb6, 0x4e8e, 0xca41, 0x1, 0x0);
        gbc.writeMem(0x29e2, { 0x94 });
        gbc.writeMem(0xe5df, { 0xfa, 0xe2, 0x29 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x404c, gbc.sp());
        EXPECT(0xe5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe5df));
        EXPECT(0xe2, gbc.readMem(0xe5e0));
        EXPECT(0x29, gbc.readMem(0xe5e1));
        // FA 00F2
        gbc.setState(0x52d7, 0xa000, 0x9260, 0xf1d1, 0x2db4, 0x5b99, 0x0, 0x1);
        gbc.writeMem(0x4023, { 0xae });
        gbc.writeMem(0x52d7, { 0xfa, 0x23, 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa000, gbc.sp());
        EXPECT(0x52da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00F3
        gbc.setState(0x927f, 0x97db, 0xe0d0, 0xa40d, 0xba80, 0xc0fe, 0x1, 0x1);
        gbc.writeMem(0x5e01, { 0xf });
        gbc.writeMem(0x927f, { 0xfa, 0x1, 0x5e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x97db, gbc.sp());
        EXPECT(0x9282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x927f));
        EXPECT(0x1, gbc.readMem(0x9280));
        EXPECT(0x5e, gbc.readMem(0x9281));
        // FA 00F4
        gbc.setState(0x5788, 0xf630, 0x2db0, 0x3036, 0xf46c, 0x6c3a, 0x0, 0x0);
        gbc.writeMem(0x5788, { 0xfa, 0x11, 0xf8 });
        gbc.writeMem(0xf811, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf630, gbc.sp());
        EXPECT(0x578b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xf811));
        // FA 00F5
        gbc.setState(0xea53, 0x10e1, 0x4c80, 0xc8d7, 0x9519, 0xcbfe, 0x1, 0x1);
        gbc.writeMem(0x1a29, { 0x76 });
        gbc.writeMem(0xea53, { 0xfa, 0x29, 0x1a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x10e1, gbc.sp());
        EXPECT(0xea56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xea53));
        EXPECT(0x29, gbc.readMem(0xea54));
        EXPECT(0x1a, gbc.readMem(0xea55));
        // FA 00F6
        gbc.setState(0xa08d, 0x7060, 0x1200, 0xecab, 0x159f, 0xc026, 0x0, 0x1);
        gbc.writeMem(0xa08d, { 0xfa, 0x8e, 0xc6 });
        gbc.writeMem(0xc68e, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7060, gbc.sp());
        EXPECT(0xa090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa08d));
        EXPECT(0x8e, gbc.readMem(0xa08e));
        EXPECT(0xc6, gbc.readMem(0xa08f));
        EXPECT(0x13, gbc.readMem(0xc68e));
        // FA 00F7
        gbc.setState(0x68e9, 0xe4af, 0xef60, 0x4dca, 0x157c, 0x6168, 0x1, 0x0);
        gbc.writeMem(0x68e9, { 0xfa, 0x58, 0x7c });
        gbc.writeMem(0x7c58, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe4af, gbc.sp());
        EXPECT(0x68ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 00F8
        gbc.setState(0x2eaa, 0xebc9, 0x9fb0, 0x7bb5, 0xb07b, 0xb905, 0x1, 0x1);
        gbc.writeMem(0x1585, { 0xe7 });
        gbc.writeMem(0x2eaa, { 0xfa, 0x85, 0x15 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xebc9, gbc.sp());
        EXPECT(0x2ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00F9
        gbc.setState(0x3d36, 0xf5ec, 0x5710, 0x3490, 0x1a67, 0xb1aa, 0x0, 0x1);
        gbc.writeMem(0x2211, { 0x1 });
        gbc.writeMem(0x3d36, { 0xfa, 0x11, 0x22 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 00FA
        gbc.setState(0x66b3, 0xec35, 0xd540, 0xc128, 0xc5e9, 0x8025, 0x1, 0x0);
        gbc.writeMem(0x66b3, { 0xfa, 0x90, 0xc0 });
        gbc.writeMem(0xc090, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xec35, gbc.sp());
        EXPECT(0x66b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc090));
        // FA 00FB
        gbc.setState(0x210e, 0xd178, 0xdf70, 0x8166, 0xd30d, 0xc13f, 0x1, 0x0);
        gbc.writeMem(0x210e, { 0xfa, 0xe5, 0x88 });
        gbc.writeMem(0x88e5, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd178, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x88e5));
        // FA 00FC
        gbc.setState(0x8f33, 0x7a4f, 0xdd60, 0x5faf, 0x4807, 0x7158, 0x0, 0x0);
        gbc.writeMem(0x8f33, { 0xfa, 0x88, 0xaa });
        gbc.writeMem(0xaa88, { 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a4f, gbc.sp());
        EXPECT(0x8f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8f33));
        EXPECT(0x88, gbc.readMem(0x8f34));
        EXPECT(0xaa, gbc.readMem(0x8f35));
        EXPECT(0xba, gbc.readMem(0xaa88));
        // FA 00FD
        gbc.setState(0x33ce, 0x5905, 0xad40, 0xd3f6, 0x4d34, 0x4be2, 0x1, 0x0);
        gbc.writeMem(0x33ce, { 0xfa, 0x7c, 0xcb });
        gbc.writeMem(0xcb7c, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5905, gbc.sp());
        EXPECT(0x33d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcb7c));
        // FA 00FE
        gbc.setState(0x8b53, 0x2ce3, 0xc6d0, 0x4201, 0x47a7, 0x1437, 0x1, 0x1);
        gbc.writeMem(0x8b53, { 0xfa, 0xcb, 0xaa });
        gbc.writeMem(0xaacb, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2ce3, gbc.sp());
        EXPECT(0x8b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8b53));
        EXPECT(0xcb, gbc.readMem(0x8b54));
        EXPECT(0xaa, gbc.readMem(0x8b55));
        EXPECT(0xf3, gbc.readMem(0xaacb));
        // FA 00FF
        gbc.setState(0x383f, 0xa4b4, 0x5d70, 0x592f, 0xd301, 0x3d8c, 0x1, 0x0);
        gbc.writeMem(0x383f, { 0xfa, 0x88, 0xe9 });
        gbc.writeMem(0xe988, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa4b4, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe988));
        // FA 0100
        gbc.setState(0x12d4, 0xb69b, 0x1bb0, 0x1b1, 0x2ac2, 0x320c, 0x1, 0x0);
        gbc.writeMem(0x12d4, { 0xfa, 0x73, 0xf3 });
        gbc.writeMem(0xf373, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb69b, gbc.sp());
        EXPECT(0x12d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf373));
        // FA 0101
        gbc.setState(0x5626, 0xb808, 0x55f0, 0xf195, 0x9138, 0x77e3, 0x0, 0x0);
        gbc.writeMem(0x2e1a, { 0xc });
        gbc.writeMem(0x5626, { 0xfa, 0x1a, 0x2e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb808, gbc.sp());
        EXPECT(0x5629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0102
        gbc.setState(0xdc72, 0xc328, 0xd20, 0x92f7, 0x568d, 0x5c98, 0x1, 0x1);
        gbc.writeMem(0x636, { 0x13 });
        gbc.writeMem(0xdc72, { 0xfa, 0x36, 0x6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc328, gbc.sp());
        EXPECT(0xdc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdc72));
        EXPECT(0x36, gbc.readMem(0xdc73));
        EXPECT(0x6, gbc.readMem(0xdc74));
        // FA 0103
        gbc.setState(0x279a, 0xe51, 0x6c50, 0x49be, 0x5505, 0xedf1, 0x1, 0x0);
        gbc.writeMem(0x783, { 0x72 });
        gbc.writeMem(0x279a, { 0xfa, 0x83, 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe51, gbc.sp());
        EXPECT(0x279d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0104
        gbc.setState(0x29dd, 0xcf3, 0x1360, 0xc7d3, 0xd5e3, 0x1db5, 0x0, 0x0);
        gbc.writeMem(0x11e0, { 0x42 });
        gbc.writeMem(0x29dd, { 0xfa, 0xe0, 0x11 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcf3, gbc.sp());
        EXPECT(0x29e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0105
        gbc.setState(0x35c3, 0x6e6c, 0x17e0, 0xf94e, 0x641b, 0x63a1, 0x0, 0x0);
        gbc.writeMem(0x35c3, { 0xfa, 0x7b, 0x3e });
        gbc.writeMem(0x3e7b, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6e6c, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0106
        gbc.setState(0x51f0, 0xeaad, 0xc60, 0x146, 0x3123, 0xd5e4, 0x1, 0x0);
        gbc.writeMem(0x51f0, { 0xfa, 0x7e, 0x87 });
        gbc.writeMem(0x877e, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeaad, gbc.sp());
        EXPECT(0x51f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x877e));
        // FA 0107
        gbc.setState(0x4b04, 0xc263, 0xf0, 0x6294, 0x5395, 0x4bc6, 0x1, 0x1);
        gbc.writeMem(0x4b04, { 0xfa, 0x50, 0xca });
        gbc.writeMem(0xca50, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc263, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xca50));
        // FA 0108
        gbc.setState(0x8ccb, 0xc46a, 0x6ab0, 0x5854, 0x65f5, 0xdbf1, 0x0, 0x0);
        gbc.writeMem(0x276f, { 0x5c });
        gbc.writeMem(0x8ccb, { 0xfa, 0x6f, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc46a, gbc.sp());
        EXPECT(0x8cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8ccb));
        EXPECT(0x6f, gbc.readMem(0x8ccc));
        EXPECT(0x27, gbc.readMem(0x8ccd));
        // FA 0109
        gbc.setState(0x82e5, 0x7275, 0xa0b0, 0xc79b, 0x905c, 0x6fad, 0x1, 0x1);
        gbc.writeMem(0x39dd, { 0x27 });
        gbc.writeMem(0x82e5, { 0xfa, 0xdd, 0x39 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7275, gbc.sp());
        EXPECT(0x82e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x82e5));
        EXPECT(0xdd, gbc.readMem(0x82e6));
        EXPECT(0x39, gbc.readMem(0x82e7));
        // FA 010B
        gbc.setState(0xdc9a, 0xaa40, 0xa4b0, 0x3621, 0xd25f, 0xe1d, 0x0, 0x1);
        gbc.writeMem(0xc4c5, { 0x1b });
        gbc.writeMem(0xdc9a, { 0xfa, 0xc5, 0xc4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaa40, gbc.sp());
        EXPECT(0xdc9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xc4c5));
        EXPECT(0xfa, gbc.readMem(0xdc9a));
        EXPECT(0xc5, gbc.readMem(0xdc9b));
        EXPECT(0xc4, gbc.readMem(0xdc9c));
        // FA 010C
        gbc.setState(0x6c7c, 0x23ed, 0xead0, 0xf8f6, 0xb2ba, 0x5fed, 0x0, 0x1);
        gbc.writeMem(0x6c7c, { 0xfa, 0x7e, 0xba });
        gbc.writeMem(0xba7e, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x23ed, gbc.sp());
        EXPECT(0x6c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xba7e));
        // FA 010D
        gbc.setState(0xbf25, 0xe45b, 0x43d0, 0x34d6, 0x6438, 0xc64c, 0x0, 0x1);
        gbc.writeMem(0xbf25, { 0xfa, 0xd2, 0xce });
        gbc.writeMem(0xced2, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe45b, gbc.sp());
        EXPECT(0xbf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbf25));
        EXPECT(0xd2, gbc.readMem(0xbf26));
        EXPECT(0xce, gbc.readMem(0xbf27));
        EXPECT(0x2c, gbc.readMem(0xced2));
        // FA 010F
        gbc.setState(0x2a89, 0x64d7, 0x45d0, 0xaaf1, 0x3c38, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0x173b, { 0xbe });
        gbc.writeMem(0x2a89, { 0xfa, 0x3b, 0x17 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x64d7, gbc.sp());
        EXPECT(0x2a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0110
        gbc.setState(0xd0d6, 0x370, 0xf730, 0x3342, 0x68ff, 0xf38e, 0x0, 0x0);
        gbc.writeMem(0xd0d6, { 0xfa, 0xee, 0xd3 });
        gbc.writeMem(0xd3ee, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x370, gbc.sp());
        EXPECT(0xd0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd0d6));
        EXPECT(0xee, gbc.readMem(0xd0d7));
        EXPECT(0xd3, gbc.readMem(0xd0d8));
        EXPECT(0xe0, gbc.readMem(0xd3ee));
        // FA 0111
        gbc.setState(0x92ea, 0x3cfa, 0x3ed0, 0x1eab, 0x7d38, 0x49ef, 0x1, 0x0);
        gbc.writeMem(0x6efb, { 0x4e });
        gbc.writeMem(0x92ea, { 0xfa, 0xfb, 0x6e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3cfa, gbc.sp());
        EXPECT(0x92ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x92ea));
        EXPECT(0xfb, gbc.readMem(0x92eb));
        EXPECT(0x6e, gbc.readMem(0x92ec));
        // FA 0112
        gbc.setState(0x422c, 0x2548, 0x6030, 0xc05f, 0x6333, 0x130d, 0x0, 0x1);
        gbc.writeMem(0x422c, { 0xfa, 0x55, 0x50 });
        gbc.writeMem(0x5055, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2548, gbc.sp());
        EXPECT(0x422f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0113
        gbc.setState(0x3409, 0x6818, 0x38c0, 0xd46e, 0x9a7e, 0xb14f, 0x1, 0x1);
        gbc.writeMem(0x3409, { 0xfa, 0x5b, 0x92 });
        gbc.writeMem(0x925b, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6818, gbc.sp());
        EXPECT(0x340c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x925b));
        // FA 0114
        gbc.setState(0x5c54, 0x8fd2, 0xc3b0, 0x97ae, 0x27bc, 0xea1, 0x0, 0x0);
        gbc.writeMem(0x5c54, { 0xfa, 0xcd, 0xfb });
        gbc.writeMem(0xfbcd, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8fd2, gbc.sp());
        EXPECT(0x5c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xfbcd));
        // FA 0115
        gbc.setState(0xab8d, 0x8dbe, 0x1ff0, 0x4022, 0xcb1e, 0x8219, 0x0, 0x1);
        gbc.writeMem(0xab8d, { 0xfa, 0xf1, 0xaf });
        gbc.writeMem(0xaff1, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8dbe, gbc.sp());
        EXPECT(0xab90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xab8d));
        EXPECT(0xf1, gbc.readMem(0xab8e));
        EXPECT(0xaf, gbc.readMem(0xab8f));
        EXPECT(0xff, gbc.readMem(0xaff1));
        // FA 0116
        gbc.setState(0x47fc, 0x1584, 0xafe0, 0xdb40, 0x8951, 0x118, 0x1, 0x0);
        gbc.writeMem(0x28cb, { 0xf0 });
        gbc.writeMem(0x47fc, { 0xfa, 0xcb, 0x28 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1584, gbc.sp());
        EXPECT(0x47ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0117
        gbc.setState(0x9942, 0xb4c, 0x9fb0, 0x3808, 0xa3d8, 0xd153, 0x0, 0x1);
        gbc.writeMem(0x6bb7, { 0xdc });
        gbc.writeMem(0x9942, { 0xfa, 0xb7, 0x6b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb4c, gbc.sp());
        EXPECT(0x9945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9942));
        EXPECT(0xb7, gbc.readMem(0x9943));
        EXPECT(0x6b, gbc.readMem(0x9944));
        // FA 0118
        gbc.setState(0xbf54, 0xba4, 0xbf20, 0x28f4, 0xf714, 0xfc6e, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xfa, 0x51, 0xf8 });
        gbc.writeMem(0xf851, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xba4, gbc.sp());
        EXPECT(0xbf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbf54));
        EXPECT(0x51, gbc.readMem(0xbf55));
        EXPECT(0xf8, gbc.readMem(0xbf56));
        EXPECT(0xc4, gbc.readMem(0xf851));
        // FA 0119
        gbc.setState(0xd84a, 0x93ee, 0xfa00, 0x19d7, 0x9f58, 0xb21e, 0x1, 0x0);
        gbc.writeMem(0x3baf, { 0x6f });
        gbc.writeMem(0xd84a, { 0xfa, 0xaf, 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x93ee, gbc.sp());
        EXPECT(0xd84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd84a));
        EXPECT(0xaf, gbc.readMem(0xd84b));
        EXPECT(0x3b, gbc.readMem(0xd84c));
        // FA 011A
        gbc.setState(0x1ab3, 0x836d, 0x3810, 0xb67e, 0x4a95, 0x3bd7, 0x1, 0x1);
        gbc.writeMem(0x439, { 0xda });
        gbc.writeMem(0x1ab3, { 0xfa, 0x39, 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x836d, gbc.sp());
        EXPECT(0x1ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 011B
        gbc.setState(0x8101, 0xedd0, 0xc740, 0x462c, 0xa7e3, 0x6729, 0x0, 0x1);
        gbc.writeMem(0x6249, { 0x41 });
        gbc.writeMem(0x8101, { 0xfa, 0x49, 0x62 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xedd0, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8101));
        EXPECT(0x49, gbc.readMem(0x8102));
        EXPECT(0x62, gbc.readMem(0x8103));
        // FA 011C
        gbc.setState(0x8ebc, 0x1549, 0x1a60, 0xcc9a, 0x438a, 0x12cf, 0x1, 0x0);
        gbc.writeMem(0x414b, { 0xbb });
        gbc.writeMem(0x8ebc, { 0xfa, 0x4b, 0x41 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1549, gbc.sp());
        EXPECT(0x8ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8ebc));
        EXPECT(0x4b, gbc.readMem(0x8ebd));
        EXPECT(0x41, gbc.readMem(0x8ebe));
        // FA 011D
        gbc.setState(0xbc25, 0x1835, 0x5930, 0xce42, 0x8f2f, 0xf855, 0x1, 0x0);
        gbc.writeMem(0xb9a8, { 0x8e });
        gbc.writeMem(0xbc25, { 0xfa, 0xa8, 0xb9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0xbc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb9a8));
        EXPECT(0xfa, gbc.readMem(0xbc25));
        EXPECT(0xa8, gbc.readMem(0xbc26));
        EXPECT(0xb9, gbc.readMem(0xbc27));
        // FA 011E
        gbc.setState(0xcdd1, 0xf603, 0x9060, 0x82a3, 0x71c0, 0xa4c, 0x1, 0x0);
        gbc.writeMem(0x4a64, { 0x49 });
        gbc.writeMem(0xcdd1, { 0xfa, 0x64, 0x4a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf603, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcdd1));
        EXPECT(0x64, gbc.readMem(0xcdd2));
        EXPECT(0x4a, gbc.readMem(0xcdd3));
        // FA 011F
        gbc.setState(0x1b53, 0x2fe0, 0x8c50, 0x6e03, 0x68bb, 0xbbea, 0x1, 0x0);
        gbc.writeMem(0x1b53, { 0xfa, 0x43, 0xa1 });
        gbc.writeMem(0xa143, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2fe0, gbc.sp());
        EXPECT(0x1b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa143));
        // FA 0120
        gbc.setState(0xcb10, 0x9f58, 0x3f40, 0xe202, 0x395b, 0x1c32, 0x0, 0x0);
        gbc.writeMem(0xcb10, { 0xfa, 0xd1, 0xdb });
        gbc.writeMem(0xdbd1, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9f58, gbc.sp());
        EXPECT(0xcb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcb10));
        EXPECT(0xd1, gbc.readMem(0xcb11));
        EXPECT(0xdb, gbc.readMem(0xcb12));
        EXPECT(0x4e, gbc.readMem(0xdbd1));
        // FA 0121
        gbc.setState(0xc30e, 0x8f10, 0x68c0, 0x4805, 0x30f, 0x6f92, 0x0, 0x0);
        gbc.writeMem(0x21d8, { 0x2a });
        gbc.writeMem(0xc30e, { 0xfa, 0xd8, 0x21 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8f10, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc30e));
        EXPECT(0xd8, gbc.readMem(0xc30f));
        EXPECT(0x21, gbc.readMem(0xc310));
        // FA 0122
        gbc.setState(0x3a73, 0x55a2, 0xcdc0, 0x3b9d, 0x9477, 0xa885, 0x1, 0x1);
        gbc.writeMem(0x3a73, { 0xfa, 0x62, 0xaa });
        gbc.writeMem(0xaa62, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x55a2, gbc.sp());
        EXPECT(0x3a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xaa62));
        // FA 0123
        gbc.setState(0xc332, 0x8fc6, 0x5640, 0xc9e7, 0xa7f3, 0x25f3, 0x1, 0x1);
        gbc.writeMem(0xc332, { 0xfa, 0xd1, 0xef });
        gbc.writeMem(0xefd1, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8fc6, gbc.sp());
        EXPECT(0xc335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc332));
        EXPECT(0xd1, gbc.readMem(0xc333));
        EXPECT(0xef, gbc.readMem(0xc334));
        EXPECT(0x98, gbc.readMem(0xefd1));
        // FA 0124
        gbc.setState(0x4a94, 0x2fe9, 0xe900, 0xd69d, 0xfb20, 0x7bc0, 0x1, 0x0);
        gbc.writeMem(0x4a94, { 0xfa, 0x1a, 0x8f });
        gbc.writeMem(0x8f1a, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2fe9, gbc.sp());
        EXPECT(0x4a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8f1a));
        // FA 0125
        gbc.setState(0x87c7, 0xb4d6, 0xa5c0, 0x1383, 0x4b39, 0xe1c2, 0x1, 0x1);
        gbc.writeMem(0x87c7, { 0xfa, 0xff, 0xb9 });
        gbc.writeMem(0xb9ff, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb4d6, gbc.sp());
        EXPECT(0x87ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x87c7));
        EXPECT(0xff, gbc.readMem(0x87c8));
        EXPECT(0xb9, gbc.readMem(0x87c9));
        EXPECT(0x5f, gbc.readMem(0xb9ff));
        // FA 0126
        gbc.setState(0x7136, 0xffcc, 0x96a0, 0xe61c, 0x53cb, 0x8359, 0x1, 0x0);
        gbc.writeMem(0x7136, { 0xfa, 0xdb, 0xce });
        gbc.writeMem(0xcedb, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xffcc, gbc.sp());
        EXPECT(0x7139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcedb));
        // FA 0127
        gbc.setState(0x93bd, 0xda97, 0xd470, 0xd87b, 0x2b8c, 0x4002, 0x0, 0x0);
        gbc.writeMem(0x79c4, { 0xbc });
        gbc.writeMem(0x93bd, { 0xfa, 0xc4, 0x79 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x93c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x93bd));
        EXPECT(0xc4, gbc.readMem(0x93be));
        EXPECT(0x79, gbc.readMem(0x93bf));
        // FA 0129
        gbc.setState(0x1455, 0x3e67, 0xe510, 0x1993, 0x6725, 0x5f0f, 0x1, 0x1);
        gbc.writeMem(0x1455, { 0xfa, 0xf9, 0xd3 });
        gbc.writeMem(0xd3f9, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3e67, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd3f9));
        // FA 012A
        gbc.setState(0x3008, 0x152a, 0xe7d0, 0x53b0, 0xf441, 0x8de0, 0x1, 0x1);
        gbc.writeMem(0xa74, { 0x2d });
        gbc.writeMem(0x3008, { 0xfa, 0x74, 0xa });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x152a, gbc.sp());
        EXPECT(0x300b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 012B
        gbc.setState(0x1334, 0xf7db, 0x1030, 0x4a85, 0x6e33, 0xe26d, 0x1, 0x0);
        gbc.writeMem(0x1334, { 0xfa, 0xc2, 0x1a });
        gbc.writeMem(0x1ac2, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf7db, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 012C
        gbc.setState(0x5855, 0x4ecd, 0xd370, 0xfffb, 0x8ea1, 0xd02f, 0x1, 0x0);
        gbc.writeMem(0x5855, { 0xfa, 0xbe, 0x7b });
        gbc.writeMem(0x7bbe, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4ecd, gbc.sp());
        EXPECT(0x5858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 012D
        gbc.setState(0x9425, 0x82a7, 0x53f0, 0x1873, 0x96c3, 0x9902, 0x1, 0x0);
        gbc.writeMem(0x9425, { 0xfa, 0x1f, 0xf7 });
        gbc.writeMem(0xf71f, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x82a7, gbc.sp());
        EXPECT(0x9428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9425));
        EXPECT(0x1f, gbc.readMem(0x9426));
        EXPECT(0xf7, gbc.readMem(0x9427));
        EXPECT(0xb3, gbc.readMem(0xf71f));
        // FA 012E
        gbc.setState(0xdd8a, 0x575c, 0x7de0, 0x3cca, 0x290c, 0x7727, 0x1, 0x1);
        gbc.writeMem(0x277a, { 0x53 });
        gbc.writeMem(0xdd8a, { 0xfa, 0x7a, 0x27 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x575c, gbc.sp());
        EXPECT(0xdd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdd8a));
        EXPECT(0x7a, gbc.readMem(0xdd8b));
        EXPECT(0x27, gbc.readMem(0xdd8c));
        // FA 012F
        gbc.setState(0x9a95, 0x2a14, 0xe9a0, 0x5884, 0xe63, 0x358a, 0x0, 0x1);
        gbc.writeMem(0x9a95, { 0xfa, 0x39, 0xba });
        gbc.writeMem(0xba39, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2a14, gbc.sp());
        EXPECT(0x9a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9a95));
        EXPECT(0x39, gbc.readMem(0x9a96));
        EXPECT(0xba, gbc.readMem(0x9a97));
        EXPECT(0x7d, gbc.readMem(0xba39));
        // FA 0130
        gbc.setState(0xbe1c, 0xbd41, 0xb770, 0x6004, 0x180e, 0xfc39, 0x1, 0x0);
        gbc.writeMem(0x5fd1, { 0xf4 });
        gbc.writeMem(0xbe1c, { 0xfa, 0xd1, 0x5f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbd41, gbc.sp());
        EXPECT(0xbe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbe1c));
        EXPECT(0xd1, gbc.readMem(0xbe1d));
        EXPECT(0x5f, gbc.readMem(0xbe1e));
        // FA 0131
        gbc.setState(0x6422, 0xeed1, 0xb1b0, 0x1dde, 0xa095, 0x164a, 0x1, 0x1);
        gbc.writeMem(0x5c8e, { 0x1d });
        gbc.writeMem(0x6422, { 0xfa, 0x8e, 0x5c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeed1, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0132
        gbc.setState(0xaa5a, 0xce8e, 0x7a10, 0xbf81, 0x1e0b, 0x9b6a, 0x0, 0x1);
        gbc.writeMem(0x4fa0, { 0x8a });
        gbc.writeMem(0xaa5a, { 0xfa, 0xa0, 0x4f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xce8e, gbc.sp());
        EXPECT(0xaa5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaa5a));
        EXPECT(0xa0, gbc.readMem(0xaa5b));
        EXPECT(0x4f, gbc.readMem(0xaa5c));
        // FA 0133
        gbc.setState(0x1c00, 0x71be, 0xd430, 0xf622, 0xbea2, 0x80df, 0x1, 0x0);
        gbc.writeMem(0x1c00, { 0xfa, 0xfe, 0xbc });
        gbc.writeMem(0xbcfe, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x71be, gbc.sp());
        EXPECT(0x1c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbcfe));
        // FA 0134
        gbc.setState(0x17c0, 0xcce6, 0xc8f0, 0x67d2, 0x103c, 0x288c, 0x0, 0x1);
        gbc.writeMem(0x17c0, { 0xfa, 0xf3, 0x44 });
        gbc.writeMem(0x44f3, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcce6, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0136
        gbc.setState(0x5edb, 0x5c2e, 0xf380, 0x940b, 0x9d55, 0x361f, 0x0, 0x0);
        gbc.writeMem(0x5edb, { 0xfa, 0x1b, 0xac });
        gbc.writeMem(0xac1b, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5c2e, gbc.sp());
        EXPECT(0x5ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xac1b));
        // FA 0137
        gbc.setState(0xdbf5, 0xb572, 0xce00, 0x96cb, 0xacdc, 0xfe06, 0x0, 0x0);
        gbc.writeMem(0xce58, { 0xcc });
        gbc.writeMem(0xdbf5, { 0xfa, 0x58, 0xce });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb572, gbc.sp());
        EXPECT(0xdbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xce58));
        EXPECT(0xfa, gbc.readMem(0xdbf5));
        EXPECT(0x58, gbc.readMem(0xdbf6));
        EXPECT(0xce, gbc.readMem(0xdbf7));
        // FA 0138
        gbc.setState(0xa310, 0xf11f, 0x8ed0, 0x81b6, 0x5f80, 0x4dc1, 0x1, 0x0);
        gbc.writeMem(0x5f92, { 0x0 });
        gbc.writeMem(0xa310, { 0xfa, 0x92, 0x5f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf11f, gbc.sp());
        EXPECT(0xa313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa310));
        EXPECT(0x92, gbc.readMem(0xa311));
        EXPECT(0x5f, gbc.readMem(0xa312));
        // FA 0139
        gbc.setState(0x4354, 0xd627, 0x4740, 0xce6b, 0x7ce4, 0x8937, 0x0, 0x0);
        gbc.writeMem(0x4354, { 0xfa, 0xfa, 0xc6 });
        gbc.writeMem(0xc6fa, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd627, gbc.sp());
        EXPECT(0x4357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc6fa));
        // FA 013A
        gbc.setState(0xc820, 0x8596, 0x7740, 0x5a0c, 0x522f, 0x1be5, 0x0, 0x1);
        gbc.writeMem(0x34f4, { 0xb3 });
        gbc.writeMem(0xc820, { 0xfa, 0xf4, 0x34 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8596, gbc.sp());
        EXPECT(0xc823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc820));
        EXPECT(0xf4, gbc.readMem(0xc821));
        EXPECT(0x34, gbc.readMem(0xc822));
        // FA 013B
        gbc.setState(0xa012, 0xf85c, 0xa500, 0xad6, 0x8e6, 0x7ce4, 0x0, 0x0);
        gbc.writeMem(0xa012, { 0xfa, 0x4c, 0xf0 });
        gbc.writeMem(0xf04c, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf85c, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa012));
        EXPECT(0x4c, gbc.readMem(0xa013));
        EXPECT(0xf0, gbc.readMem(0xa014));
        EXPECT(0x4a, gbc.readMem(0xf04c));
        // FA 013C
        gbc.setState(0xa3c8, 0xea2d, 0x65f0, 0xc21, 0x605e, 0x5859, 0x1, 0x1);
        gbc.writeMem(0xa3c8, { 0xfa, 0x10, 0xd5 });
        gbc.writeMem(0xd510, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xea2d, gbc.sp());
        EXPECT(0xa3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa3c8));
        EXPECT(0x10, gbc.readMem(0xa3c9));
        EXPECT(0xd5, gbc.readMem(0xa3ca));
        EXPECT(0xeb, gbc.readMem(0xd510));
        // FA 013D
        gbc.setState(0xdb4a, 0x16ab, 0x5f20, 0xa655, 0xc34e, 0x8336, 0x1, 0x1);
        gbc.writeMem(0xdb4a, { 0xfa, 0x80, 0xde });
        gbc.writeMem(0xde80, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x16ab, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdb4a));
        EXPECT(0x80, gbc.readMem(0xdb4b));
        EXPECT(0xde, gbc.readMem(0xdb4c));
        EXPECT(0xf3, gbc.readMem(0xde80));
        // FA 013E
        gbc.setState(0x54a5, 0x4a8b, 0x9450, 0x9bc9, 0x3c13, 0x3adf, 0x0, 0x1);
        gbc.writeMem(0x54a5, { 0xfa, 0x4e, 0x89 });
        gbc.writeMem(0x894e, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4a8b, gbc.sp());
        EXPECT(0x54a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x894e));
        // FA 013F
        gbc.setState(0x631a, 0x40fd, 0xbca0, 0x5609, 0xed8f, 0x717b, 0x1, 0x0);
        gbc.writeMem(0x631a, { 0xfa, 0x48, 0x83 });
        gbc.writeMem(0x8348, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x40fd, gbc.sp());
        EXPECT(0x631d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8348));
        // FA 0140
        gbc.setState(0x47e2, 0xce74, 0xc850, 0x9ce0, 0x9542, 0x63e7, 0x1, 0x0);
        gbc.writeMem(0x47e2, { 0xfa, 0x45, 0x84 });
        gbc.writeMem(0x8445, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xce74, gbc.sp());
        EXPECT(0x47e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8445));
        // FA 0141
        gbc.setState(0xcca3, 0x333b, 0x1a70, 0xf6b0, 0x3f37, 0xbe6, 0x0, 0x1);
        gbc.writeMem(0xbdb3, { 0x19 });
        gbc.writeMem(0xcca3, { 0xfa, 0xb3, 0xbd });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0xcca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbdb3));
        EXPECT(0xfa, gbc.readMem(0xcca3));
        EXPECT(0xb3, gbc.readMem(0xcca4));
        EXPECT(0xbd, gbc.readMem(0xcca5));
        // FA 0142
        gbc.setState(0x6925, 0x52e2, 0x69e0, 0x69d7, 0x627c, 0xa095, 0x1, 0x1);
        gbc.writeMem(0x5c94, { 0x0 });
        gbc.writeMem(0x6925, { 0xfa, 0x94, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x52e2, gbc.sp());
        EXPECT(0x6928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0143
        gbc.setState(0x606d, 0xe79e, 0xd550, 0xa0cf, 0xd5ad, 0xd19b, 0x1, 0x1);
        gbc.writeMem(0x606d, { 0xfa, 0x2b, 0x71 });
        gbc.writeMem(0x712b, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x6070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0144
        gbc.setState(0xeee7, 0xbec, 0xd800, 0xe150, 0xa54, 0xdfda, 0x0, 0x1);
        gbc.writeMem(0x68ab, { 0x56 });
        gbc.writeMem(0xeee7, { 0xfa, 0xab, 0x68 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbec, gbc.sp());
        EXPECT(0xeeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xeee7));
        EXPECT(0xab, gbc.readMem(0xeee8));
        EXPECT(0x68, gbc.readMem(0xeee9));
        // FA 0145
        gbc.setState(0xa3cf, 0x2323, 0x46c0, 0x2c9e, 0xaa2, 0x692b, 0x1, 0x0);
        gbc.writeMem(0x1668, { 0x67 });
        gbc.writeMem(0xa3cf, { 0xfa, 0x68, 0x16 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2323, gbc.sp());
        EXPECT(0xa3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa3cf));
        EXPECT(0x68, gbc.readMem(0xa3d0));
        EXPECT(0x16, gbc.readMem(0xa3d1));
        // FA 0146
        gbc.setState(0xbc42, 0x74a8, 0xf160, 0xb16b, 0x6f7f, 0xb733, 0x1, 0x0);
        gbc.writeMem(0x5c4e, { 0xd1 });
        gbc.writeMem(0xbc42, { 0xfa, 0x4e, 0x5c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x74a8, gbc.sp());
        EXPECT(0xbc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbc42));
        EXPECT(0x4e, gbc.readMem(0xbc43));
        EXPECT(0x5c, gbc.readMem(0xbc44));
        // FA 0147
        gbc.setState(0x1428, 0x62c3, 0x5700, 0x5288, 0xf321, 0x771, 0x1, 0x0);
        gbc.writeMem(0x1428, { 0xfa, 0xd, 0x1a });
        gbc.writeMem(0x1a0d, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x62c3, gbc.sp());
        EXPECT(0x142b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0148
        gbc.setState(0xb662, 0x19a6, 0x86f0, 0xd950, 0xfc28, 0xf9bc, 0x0, 0x1);
        gbc.writeMem(0x1d3, { 0xa6 });
        gbc.writeMem(0xb662, { 0xfa, 0xd3, 0x1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x19a6, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb662));
        EXPECT(0xd3, gbc.readMem(0xb663));
        EXPECT(0x1, gbc.readMem(0xb664));
        // FA 0149
        gbc.setState(0x31c2, 0xb3e2, 0xf60, 0x1320, 0x6951, 0x5e71, 0x0, 0x1);
        gbc.writeMem(0xa23, { 0x4f });
        gbc.writeMem(0x31c2, { 0xfa, 0x23, 0xa });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb3e2, gbc.sp());
        EXPECT(0x31c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 014A
        gbc.setState(0x1f3, 0x5ed8, 0xfdd0, 0x90b9, 0xb56c, 0xd0cc, 0x0, 0x0);
        gbc.writeMem(0x1f3, { 0xfa, 0xe4, 0x2a });
        gbc.writeMem(0x2ae4, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5ed8, gbc.sp());
        EXPECT(0x1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 014C
        gbc.setState(0x2c69, 0xf828, 0x7980, 0xfa6f, 0xc902, 0x8a6b, 0x0, 0x1);
        gbc.writeMem(0x1040, { 0xf3 });
        gbc.writeMem(0x2c69, { 0xfa, 0x40, 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0x2c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 014D
        gbc.setState(0x48e0, 0xcf9e, 0xcc60, 0x26b2, 0xb5a5, 0xcc00, 0x0, 0x1);
        gbc.writeMem(0x2821, { 0x64 });
        gbc.writeMem(0x48e0, { 0xfa, 0x21, 0x28 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcf9e, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 014E
        gbc.setState(0x3912, 0xe5cb, 0x4850, 0x71f7, 0x2d08, 0xca4c, 0x0, 0x0);
        gbc.writeMem(0x3912, { 0xfa, 0x86, 0x76 });
        gbc.writeMem(0x7686, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe5cb, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 014F
        gbc.setState(0x2cd9, 0x1f97, 0xcac0, 0xacf4, 0x3549, 0x500c, 0x1, 0x0);
        gbc.writeMem(0x1075, { 0xa });
        gbc.writeMem(0x2cd9, { 0xfa, 0x75, 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1f97, gbc.sp());
        EXPECT(0x2cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0150
        gbc.setState(0x1f75, 0x41a1, 0x5990, 0xe072, 0x27f6, 0xdfd1, 0x0, 0x0);
        gbc.writeMem(0x1f75, { 0xfa, 0x16, 0x70 });
        gbc.writeMem(0x7016, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x41a1, gbc.sp());
        EXPECT(0x1f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0151
        gbc.setState(0x664d, 0xe93e, 0xaeb0, 0x548e, 0xdb1b, 0x564c, 0x1, 0x0);
        gbc.writeMem(0x664d, { 0xfa, 0x89, 0xb9 });
        gbc.writeMem(0xb989, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe93e, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xb989));
        // FA 0152
        gbc.setState(0x8509, 0x8d7a, 0xb6e0, 0x9873, 0xe302, 0x6594, 0x0, 0x0);
        gbc.writeMem(0x4d92, { 0x7d });
        gbc.writeMem(0x8509, { 0xfa, 0x92, 0x4d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8d7a, gbc.sp());
        EXPECT(0x850c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8509));
        EXPECT(0x92, gbc.readMem(0x850a));
        EXPECT(0x4d, gbc.readMem(0x850b));
        // FA 0153
        gbc.setState(0x12f3, 0x61cb, 0x7020, 0xaf5f, 0x8d03, 0x441b, 0x1, 0x1);
        gbc.writeMem(0x12f3, { 0xfa, 0xad, 0x58 });
        gbc.writeMem(0x58ad, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x61cb, gbc.sp());
        EXPECT(0x12f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0154
        gbc.setState(0xe45a, 0x9f97, 0xc060, 0x8e2d, 0x4ad0, 0x1536, 0x1, 0x1);
        gbc.writeMem(0x7d73, { 0x57 });
        gbc.writeMem(0xe45a, { 0xfa, 0x73, 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9f97, gbc.sp());
        EXPECT(0xe45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe45a));
        EXPECT(0x73, gbc.readMem(0xe45b));
        EXPECT(0x7d, gbc.readMem(0xe45c));
        // FA 0155
        gbc.setState(0x345a, 0x66e1, 0x36c0, 0xd2e6, 0xa272, 0xdf4, 0x1, 0x0);
        gbc.writeMem(0x345a, { 0xfa, 0x14, 0xa5 });
        gbc.writeMem(0xa514, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x66e1, gbc.sp());
        EXPECT(0x345d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa514));
        // FA 0156
        gbc.setState(0x9a2d, 0x4f29, 0x2940, 0x8826, 0x4a1, 0xf089, 0x0, 0x1);
        gbc.writeMem(0x1820, { 0xba });
        gbc.writeMem(0x9a2d, { 0xfa, 0x20, 0x18 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4f29, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9a2d));
        EXPECT(0x20, gbc.readMem(0x9a2e));
        EXPECT(0x18, gbc.readMem(0x9a2f));
        // FA 0157
        gbc.setState(0x49df, 0x5751, 0xba60, 0x96ea, 0xcd01, 0xf09f, 0x1, 0x1);
        gbc.writeMem(0x49df, { 0xfa, 0x26, 0xb9 });
        gbc.writeMem(0xb926, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0x49e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb926));
        // FA 0158
        gbc.setState(0xd68d, 0xa9d3, 0x77b0, 0x85f3, 0xb8e8, 0x545f, 0x1, 0x1);
        gbc.writeMem(0xafef, { 0x60 });
        gbc.writeMem(0xd68d, { 0xfa, 0xef, 0xaf });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa9d3, gbc.sp());
        EXPECT(0xd690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xafef));
        EXPECT(0xfa, gbc.readMem(0xd68d));
        EXPECT(0xef, gbc.readMem(0xd68e));
        EXPECT(0xaf, gbc.readMem(0xd68f));
        // FA 0159
        gbc.setState(0x1b07, 0x62b0, 0x9720, 0xbae7, 0x50c0, 0x8b2c, 0x1, 0x0);
        gbc.writeMem(0x1b07, { 0xfa, 0x22, 0x63 });
        gbc.writeMem(0x6322, { 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x62b0, gbc.sp());
        EXPECT(0x1b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 015A
        gbc.setState(0x4340, 0xef13, 0x57d0, 0x1f07, 0xa6, 0x7129, 0x1, 0x1);
        gbc.writeMem(0x19a8, { 0xa6 });
        gbc.writeMem(0x4340, { 0xfa, 0xa8, 0x19 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xef13, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 015B
        gbc.setState(0x2c54, 0xf5dc, 0xef70, 0xb2b7, 0xc9fd, 0x895f, 0x0, 0x0);
        gbc.writeMem(0x2c54, { 0xfa, 0xf7, 0x45 });
        gbc.writeMem(0x45f7, { 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf5dc, gbc.sp());
        EXPECT(0x2c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 015C
        gbc.setState(0x30ac, 0xc3ae, 0xe590, 0x4f81, 0x4d6, 0x9293, 0x1, 0x1);
        gbc.writeMem(0x30ac, { 0xfa, 0xdf, 0x8b });
        gbc.writeMem(0x8bdf, { 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc3ae, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8bdf));
        // FA 015D
        gbc.setState(0x464e, 0x95a8, 0x7fc0, 0xe559, 0x24b5, 0x4a30, 0x0, 0x1);
        gbc.writeMem(0x464e, { 0xfa, 0x8e, 0xa4 });
        gbc.writeMem(0xa48e, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x95a8, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa48e));
        // FA 015E
        gbc.setState(0xa457, 0x952e, 0xc000, 0xe863, 0xf84b, 0xb70b, 0x1, 0x0);
        gbc.writeMem(0x9ce0, { 0xe6 });
        gbc.writeMem(0xa457, { 0xfa, 0xe0, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x952e, gbc.sp());
        EXPECT(0xa45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9ce0));
        EXPECT(0xfa, gbc.readMem(0xa457));
        EXPECT(0xe0, gbc.readMem(0xa458));
        EXPECT(0x9c, gbc.readMem(0xa459));
        // FA 015F
        gbc.setState(0x4f3e, 0x490, 0x5bf0, 0x854e, 0x31ea, 0x68c8, 0x1, 0x1);
        gbc.writeMem(0x4f3e, { 0xfa, 0x46, 0x8c });
        gbc.writeMem(0x8c46, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x490, gbc.sp());
        EXPECT(0x4f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8c46));
        // FA 0160
        gbc.setState(0x3172, 0x3c5c, 0x4dd0, 0x681, 0xf92b, 0x7669, 0x0, 0x1);
        gbc.writeMem(0x8df, { 0x3e });
        gbc.writeMem(0x3172, { 0xfa, 0xdf, 0x8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3c5c, gbc.sp());
        EXPECT(0x3175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0161
        gbc.setState(0x57df, 0xef1c, 0x9770, 0x7d9b, 0x5b27, 0x9bcc, 0x1, 0x1);
        gbc.writeMem(0x41bf, { 0x14 });
        gbc.writeMem(0x57df, { 0xfa, 0xbf, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xef1c, gbc.sp());
        EXPECT(0x57e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0162
        gbc.setState(0x5ded, 0x12e7, 0x2490, 0x636e, 0x1a2a, 0x7692, 0x0, 0x1);
        gbc.writeMem(0x882, { 0x25 });
        gbc.writeMem(0x5ded, { 0xfa, 0x82, 0x8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x12e7, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0163
        gbc.setState(0x50e7, 0xc887, 0x28b0, 0x971b, 0x8fa9, 0x5436, 0x1, 0x1);
        gbc.writeMem(0x50e7, { 0xfa, 0xd1, 0x99 });
        gbc.writeMem(0x99d1, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc887, gbc.sp());
        EXPECT(0x50ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x99d1));
        // FA 0164
        gbc.setState(0xea3, 0xcade, 0x3620, 0x9993, 0x7582, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0xea3, { 0xfa, 0xe9, 0x5c });
        gbc.writeMem(0x5ce9, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcade, gbc.sp());
        EXPECT(0xea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0165
        gbc.setState(0x4c13, 0xfafc, 0x6fc0, 0x6629, 0xbed, 0x8420, 0x1, 0x1);
        gbc.writeMem(0x8b5, { 0x6f });
        gbc.writeMem(0x4c13, { 0xfa, 0xb5, 0x8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0166
        gbc.setState(0xb310, 0x2610, 0xa070, 0x7b2f, 0xb907, 0x66fa, 0x1, 0x0);
        gbc.writeMem(0x4b8e, { 0x41 });
        gbc.writeMem(0xb310, { 0xfa, 0x8e, 0x4b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0xb313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb310));
        EXPECT(0x8e, gbc.readMem(0xb311));
        EXPECT(0x4b, gbc.readMem(0xb312));
        // FA 0167
        gbc.setState(0xe4c8, 0x112c, 0x9110, 0xfbde, 0xe141, 0x6542, 0x0, 0x0);
        gbc.writeMem(0x32c0, { 0x5 });
        gbc.writeMem(0xe4c8, { 0xfa, 0xc0, 0x32 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x112c, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe4c8));
        EXPECT(0xc0, gbc.readMem(0xe4c9));
        EXPECT(0x32, gbc.readMem(0xe4ca));
        // FA 0168
        gbc.setState(0xe4bb, 0xea0f, 0x6710, 0x234f, 0xfec6, 0xd8d0, 0x0, 0x1);
        gbc.writeMem(0x1b89, { 0xb });
        gbc.writeMem(0xe4bb, { 0xfa, 0x89, 0x1b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xea0f, gbc.sp());
        EXPECT(0xe4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe4bb));
        EXPECT(0x89, gbc.readMem(0xe4bc));
        EXPECT(0x1b, gbc.readMem(0xe4bd));
        // FA 0169
        gbc.setState(0x1c5d, 0xfe96, 0x8230, 0xec12, 0xb47a, 0xc700, 0x1, 0x1);
        gbc.writeMem(0x1c5d, { 0xfa, 0xde, 0x9d });
        gbc.writeMem(0x9dde, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfe96, gbc.sp());
        EXPECT(0x1c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9dde));
        // FA 016A
        gbc.setState(0x29a, 0x2392, 0x1eb0, 0xdbfb, 0xe138, 0xf28f, 0x0, 0x0);
        gbc.writeMem(0x29a, { 0xfa, 0xf3, 0x40 });
        gbc.writeMem(0x40f3, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2392, gbc.sp());
        EXPECT(0x29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 016B
        gbc.setState(0x8af8, 0x3cd2, 0xb3b0, 0x212d, 0xdd42, 0x37ea, 0x0, 0x0);
        gbc.writeMem(0x988, { 0xc3 });
        gbc.writeMem(0x8af8, { 0xfa, 0x88, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0x8afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8af8));
        EXPECT(0x88, gbc.readMem(0x8af9));
        EXPECT(0x9, gbc.readMem(0x8afa));
        // FA 016C
        gbc.setState(0xd997, 0x2a8, 0xacb0, 0xd55e, 0x6e8d, 0x8616, 0x1, 0x0);
        gbc.writeMem(0xd997, { 0xfa, 0xba, 0xfc });
        gbc.writeMem(0xfcba, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2a8, gbc.sp());
        EXPECT(0xd99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd997));
        EXPECT(0xba, gbc.readMem(0xd998));
        EXPECT(0xfc, gbc.readMem(0xd999));
        EXPECT(0x1f, gbc.readMem(0xfcba));
        // FA 016D
        gbc.setState(0x433d, 0xbe2a, 0x1520, 0x34cd, 0x8735, 0xe338, 0x1, 0x0);
        gbc.writeMem(0x433d, { 0xfa, 0x75, 0x5a });
        gbc.writeMem(0x5a75, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbe2a, gbc.sp());
        EXPECT(0x4340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 016E
        gbc.setState(0x2b1d, 0xb453, 0xf900, 0x82d4, 0x4888, 0x41ac, 0x1, 0x0);
        gbc.writeMem(0x2b1d, { 0xfa, 0x11, 0xe6 });
        gbc.writeMem(0xe611, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb453, gbc.sp());
        EXPECT(0x2b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xe611));
        // FA 016F
        gbc.setState(0xa399, 0x9bee, 0x2480, 0xb238, 0x1179, 0xb729, 0x0, 0x1);
        gbc.writeMem(0x5c86, { 0x81 });
        gbc.writeMem(0xa399, { 0xfa, 0x86, 0x5c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9bee, gbc.sp());
        EXPECT(0xa39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa399));
        EXPECT(0x86, gbc.readMem(0xa39a));
        EXPECT(0x5c, gbc.readMem(0xa39b));
        // FA 0170
        gbc.setState(0xe53d, 0xac9b, 0x9760, 0xcf7d, 0x2cc, 0xf621, 0x0, 0x1);
        gbc.writeMem(0xe53d, { 0xfa, 0xbf, 0xfe });
        gbc.writeMem(0xfebf, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xac9b, gbc.sp());
        EXPECT(0xe540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe53d));
        EXPECT(0xbf, gbc.readMem(0xe53e));
        EXPECT(0xfe, gbc.readMem(0xe53f));
        EXPECT(0xfa, gbc.readMem(0xfebf));
        // FA 0172
        gbc.setState(0x6fe2, 0x23ef, 0x9990, 0xfb6a, 0xfcda, 0x9de4, 0x0, 0x1);
        gbc.writeMem(0x672f, { 0x1e });
        gbc.writeMem(0x6fe2, { 0xfa, 0x2f, 0x67 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0x6fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0173
        gbc.setState(0xddb6, 0xb4ec, 0x6810, 0xf0c7, 0xfb30, 0x60cb, 0x1, 0x1);
        gbc.writeMem(0x11c1, { 0x9e });
        gbc.writeMem(0xddb6, { 0xfa, 0xc1, 0x11 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb4ec, gbc.sp());
        EXPECT(0xddb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xddb6));
        EXPECT(0xc1, gbc.readMem(0xddb7));
        EXPECT(0x11, gbc.readMem(0xddb8));
        // FA 0174
        gbc.setState(0x3d4b, 0x4772, 0x4240, 0x33f6, 0xe092, 0x2156, 0x1, 0x0);
        gbc.writeMem(0x3d4b, { 0xfa, 0xb4, 0xb4 });
        gbc.writeMem(0xb4b4, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4772, gbc.sp());
        EXPECT(0x3d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb4b4));
        // FA 0175
        gbc.setState(0xcac, 0x2aab, 0x7300, 0x39c, 0x65a4, 0xf9f5, 0x0, 0x0);
        gbc.writeMem(0xcac, { 0xfa, 0x5f, 0x41 });
        gbc.writeMem(0x415f, { 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2aab, gbc.sp());
        EXPECT(0xcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0176
        gbc.setState(0x5537, 0xa7de, 0x4ef0, 0x3662, 0x2dfa, 0x1b7c, 0x1, 0x0);
        gbc.writeMem(0x193b, { 0x55 });
        gbc.writeMem(0x5537, { 0xfa, 0x3b, 0x19 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa7de, gbc.sp());
        EXPECT(0x553a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0177
        gbc.setState(0x3cc5, 0x7508, 0x7100, 0x3369, 0xb93d, 0x9f9f, 0x0, 0x1);
        gbc.writeMem(0x3cc5, { 0xfa, 0x67, 0x50 });
        gbc.writeMem(0x5067, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7508, gbc.sp());
        EXPECT(0x3cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0178
        gbc.setState(0x7f1b, 0xed9, 0x4ac0, 0xac2b, 0x3691, 0x9eb8, 0x0, 0x1);
        gbc.writeMem(0x7f1b, { 0xfa, 0xb7, 0x97 });
        gbc.writeMem(0x97b7, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xed9, gbc.sp());
        EXPECT(0x7f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x97b7));
        // FA 0179
        gbc.setState(0x2acd, 0x84b7, 0x84f0, 0x8365, 0xe6e, 0x65f4, 0x1, 0x0);
        gbc.writeMem(0x2acd, { 0xfa, 0xad, 0xb2 });
        gbc.writeMem(0xb2ad, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x84b7, gbc.sp());
        EXPECT(0x2ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb2ad));
        // FA 017A
        gbc.setState(0x2874, 0x647d, 0x74a0, 0xcba8, 0x436e, 0xe98d, 0x0, 0x0);
        gbc.writeMem(0x24d9, { 0x18 });
        gbc.writeMem(0x2874, { 0xfa, 0xd9, 0x24 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x647d, gbc.sp());
        EXPECT(0x2877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 017B
        gbc.setState(0x7e9b, 0x5c5e, 0x50d0, 0x1f4d, 0x709c, 0xc0bf, 0x1, 0x0);
        gbc.writeMem(0x7e9b, { 0xfa, 0x15, 0x99 });
        gbc.writeMem(0x9915, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9915));
        // FA 017C
        gbc.setState(0x96a1, 0xc6ed, 0x2600, 0x9199, 0x341f, 0x9a52, 0x0, 0x1);
        gbc.writeMem(0x189f, { 0x77 });
        gbc.writeMem(0x96a1, { 0xfa, 0x9f, 0x18 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc6ed, gbc.sp());
        EXPECT(0x96a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x96a1));
        EXPECT(0x9f, gbc.readMem(0x96a2));
        EXPECT(0x18, gbc.readMem(0x96a3));
        // FA 017D
        gbc.setState(0xca83, 0x2a1, 0xed0, 0x49ce, 0xac74, 0xa1df, 0x0, 0x0);
        gbc.writeMem(0x8a22, { 0x4b });
        gbc.writeMem(0xca83, { 0xfa, 0x22, 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2a1, gbc.sp());
        EXPECT(0xca86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8a22));
        EXPECT(0xfa, gbc.readMem(0xca83));
        EXPECT(0x22, gbc.readMem(0xca84));
        EXPECT(0x8a, gbc.readMem(0xca85));
        // FA 017E
        gbc.setState(0xa286, 0x3648, 0xe8f0, 0x1b9a, 0x1bb9, 0x265c, 0x0, 0x0);
        gbc.writeMem(0x2521, { 0x25 });
        gbc.writeMem(0xa286, { 0xfa, 0x21, 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3648, gbc.sp());
        EXPECT(0xa289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa286));
        EXPECT(0x21, gbc.readMem(0xa287));
        EXPECT(0x25, gbc.readMem(0xa288));
        // FA 0180
        gbc.setState(0x3678, 0xc1e0, 0xc250, 0xc187, 0x2107, 0x1da0, 0x0, 0x0);
        gbc.writeMem(0x3678, { 0xfa, 0xd, 0xef });
        gbc.writeMem(0xef0d, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc1e0, gbc.sp());
        EXPECT(0x367b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xef0d));
        // FA 0181
        gbc.setState(0xb853, 0xcb12, 0xcda0, 0x4fdb, 0xb139, 0x2211, 0x0, 0x0);
        gbc.writeMem(0x1b2d, { 0xcd });
        gbc.writeMem(0xb853, { 0xfa, 0x2d, 0x1b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcb12, gbc.sp());
        EXPECT(0xb856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb853));
        EXPECT(0x2d, gbc.readMem(0xb854));
        EXPECT(0x1b, gbc.readMem(0xb855));
        // FA 0182
        gbc.setState(0x195b, 0x9bca, 0x3b20, 0x3c88, 0x4b5f, 0x6b1, 0x1, 0x1);
        gbc.writeMem(0x195b, { 0xfa, 0x52, 0x54 });
        gbc.writeMem(0x5452, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0x195e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0183
        gbc.setState(0xb3c8, 0x806, 0xe3b0, 0x578a, 0x8471, 0x4d64, 0x0, 0x0);
        gbc.writeMem(0xb3c8, { 0xfa, 0x88, 0xb4 });
        gbc.writeMem(0xb488, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0xb3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb3c8));
        EXPECT(0x88, gbc.readMem(0xb3c9));
        EXPECT(0xb4, gbc.readMem(0xb3ca));
        EXPECT(0xde, gbc.readMem(0xb488));
        // FA 0184
        gbc.setState(0x997a, 0xfbfb, 0x8ee0, 0x8960, 0xe056, 0xd03b, 0x1, 0x0);
        gbc.writeMem(0x1b90, { 0x7d });
        gbc.writeMem(0x997a, { 0xfa, 0x90, 0x1b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfbfb, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x997a));
        EXPECT(0x90, gbc.readMem(0x997b));
        EXPECT(0x1b, gbc.readMem(0x997c));
        // FA 0185
        gbc.setState(0xc711, 0xac07, 0xff10, 0x77f0, 0x614f, 0x43f1, 0x0, 0x1);
        gbc.writeMem(0xbe43, { 0x2a });
        gbc.writeMem(0xc711, { 0xfa, 0x43, 0xbe });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xac07, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xbe43));
        EXPECT(0xfa, gbc.readMem(0xc711));
        EXPECT(0x43, gbc.readMem(0xc712));
        EXPECT(0xbe, gbc.readMem(0xc713));
        // FA 0186
        gbc.setState(0x3a63, 0xefbe, 0x91f0, 0x81ef, 0xf7a6, 0xfc5c, 0x0, 0x0);
        gbc.writeMem(0x3a63, { 0xfa, 0x94, 0x5b });
        gbc.writeMem(0x5b94, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0x3a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0187
        gbc.setState(0xc73f, 0xb937, 0xf470, 0x728a, 0xf6d5, 0x949a, 0x1, 0x0);
        gbc.writeMem(0x9dca, { 0xc5 });
        gbc.writeMem(0xc73f, { 0xfa, 0xca, 0x9d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0xc742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9dca));
        EXPECT(0xfa, gbc.readMem(0xc73f));
        EXPECT(0xca, gbc.readMem(0xc740));
        EXPECT(0x9d, gbc.readMem(0xc741));
        // FA 0188
        gbc.setState(0xc09a, 0x3429, 0x9510, 0x6249, 0x56cf, 0x8c86, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0x25 });
        gbc.writeMem(0xc09a, { 0xfa, 0xf5, 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3429, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9df5));
        EXPECT(0xfa, gbc.readMem(0xc09a));
        EXPECT(0xf5, gbc.readMem(0xc09b));
        EXPECT(0x9d, gbc.readMem(0xc09c));
        // FA 0189
        gbc.setState(0x154e, 0x361, 0x6df0, 0xd257, 0xa2b, 0x1688, 0x0, 0x0);
        gbc.writeMem(0x154e, { 0xfa, 0xf9, 0x7d });
        gbc.writeMem(0x7df9, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x361, gbc.sp());
        EXPECT(0x1551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 018A
        gbc.setState(0xc655, 0xad50, 0xee30, 0xec7b, 0x1ef1, 0x6073, 0x0, 0x0);
        gbc.writeMem(0x96a0, { 0x4 });
        gbc.writeMem(0xc655, { 0xfa, 0xa0, 0x96 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x96a0));
        EXPECT(0xfa, gbc.readMem(0xc655));
        EXPECT(0xa0, gbc.readMem(0xc656));
        EXPECT(0x96, gbc.readMem(0xc657));
        // FA 018B
        gbc.setState(0x2e8c, 0xa0f8, 0xe090, 0xead4, 0x343a, 0xf6be, 0x0, 0x0);
        gbc.writeMem(0x2e8c, { 0xfa, 0xdf, 0x81 });
        gbc.writeMem(0x81df, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa0f8, gbc.sp());
        EXPECT(0x2e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x81df));
        // FA 018C
        gbc.setState(0xcb9, 0xf10e, 0x35d0, 0x6885, 0xb07e, 0x99b7, 0x1, 0x1);
        gbc.writeMem(0xcb9, { 0xfa, 0x71, 0xbd });
        gbc.writeMem(0xbd71, { 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf10e, gbc.sp());
        EXPECT(0xcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbd71));
        // FA 018D
        gbc.setState(0x4e46, 0x607e, 0x2070, 0xfe23, 0x806d, 0xfef0, 0x1, 0x1);
        gbc.writeMem(0x4e46, { 0xfa, 0xc5, 0xa1 });
        gbc.writeMem(0xa1c5, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x607e, gbc.sp());
        EXPECT(0x4e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa1c5));
        // FA 018E
        gbc.setState(0x65c8, 0xcd3b, 0x8ff0, 0x4afa, 0xd0fb, 0x482f, 0x1, 0x1);
        gbc.writeMem(0x27e0, { 0x7d });
        gbc.writeMem(0x65c8, { 0xfa, 0xe0, 0x27 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcd3b, gbc.sp());
        EXPECT(0x65cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 018F
        gbc.setState(0x73d8, 0x6ede, 0x7c60, 0x2998, 0x3b6, 0xefca, 0x0, 0x1);
        gbc.writeMem(0x73d8, { 0xfa, 0x33, 0x84 });
        gbc.writeMem(0x8433, { 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6ede, gbc.sp());
        EXPECT(0x73db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8433));
        // FA 0190
        gbc.setState(0x5329, 0x7acf, 0x1360, 0x1038, 0x16b5, 0x902a, 0x1, 0x1);
        gbc.writeMem(0x5329, { 0xfa, 0x49, 0x8d });
        gbc.writeMem(0x8d49, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7acf, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8d49));
        // FA 0191
        gbc.setState(0x6f80, 0xbe64, 0x25c0, 0x965a, 0x6794, 0xf565, 0x0, 0x1);
        gbc.writeMem(0x6f80, { 0xfa, 0xe7, 0xde });
        gbc.writeMem(0xdee7, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbe64, gbc.sp());
        EXPECT(0x6f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdee7));
        // FA 0192
        gbc.setState(0x29bd, 0x1031, 0x9110, 0x6e7f, 0xa079, 0x8fe6, 0x0, 0x1);
        gbc.writeMem(0x29bd, { 0xfa, 0x74, 0x93 });
        gbc.writeMem(0x9374, { 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1031, gbc.sp());
        EXPECT(0x29c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x9374));
        // FA 0193
        gbc.setState(0x94ca, 0x5285, 0x6510, 0x2857, 0xeb51, 0xe27c, 0x1, 0x0);
        gbc.writeMem(0x3d64, { 0x3 });
        gbc.writeMem(0x94ca, { 0xfa, 0x64, 0x3d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5285, gbc.sp());
        EXPECT(0x94cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x94ca));
        EXPECT(0x64, gbc.readMem(0x94cb));
        EXPECT(0x3d, gbc.readMem(0x94cc));
        // FA 0194
        gbc.setState(0xa816, 0x5f07, 0xf100, 0xd08c, 0x43b1, 0x9ae6, 0x0, 0x1);
        gbc.writeMem(0x8672, { 0xaa });
        gbc.writeMem(0xa816, { 0xfa, 0x72, 0x86 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0xa819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8672));
        EXPECT(0xfa, gbc.readMem(0xa816));
        EXPECT(0x72, gbc.readMem(0xa817));
        EXPECT(0x86, gbc.readMem(0xa818));
        // FA 0195
        gbc.setState(0x74f9, 0xd9e6, 0x3c60, 0xd272, 0x13dd, 0x8e08, 0x0, 0x0);
        gbc.writeMem(0x5a65, { 0xd1 });
        gbc.writeMem(0x74f9, { 0xfa, 0x65, 0x5a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd9e6, gbc.sp());
        EXPECT(0x74fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0196
        gbc.setState(0xc33c, 0x2b80, 0xe640, 0xe535, 0xe62c, 0x2b1b, 0x1, 0x1);
        gbc.writeMem(0x727b, { 0xff });
        gbc.writeMem(0xc33c, { 0xfa, 0x7b, 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2b80, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc33c));
        EXPECT(0x7b, gbc.readMem(0xc33d));
        EXPECT(0x72, gbc.readMem(0xc33e));
        // FA 0197
        gbc.setState(0x8ea7, 0xb451, 0x91f0, 0x3c90, 0x3bef, 0x3c43, 0x1, 0x1);
        gbc.writeMem(0x8ea7, { 0xfa, 0x3e, 0xd5 });
        gbc.writeMem(0xd53e, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb451, gbc.sp());
        EXPECT(0x8eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8ea7));
        EXPECT(0x3e, gbc.readMem(0x8ea8));
        EXPECT(0xd5, gbc.readMem(0x8ea9));
        EXPECT(0x1b, gbc.readMem(0xd53e));
        // FA 0198
        gbc.setState(0x2c0c, 0x7aed, 0x4320, 0x6156, 0xd4bf, 0xfb50, 0x1, 0x0);
        gbc.writeMem(0x2c0c, { 0xfa, 0x4c, 0x69 });
        gbc.writeMem(0x694c, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7aed, gbc.sp());
        EXPECT(0x2c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0199
        gbc.setState(0xe7b4, 0x646a, 0x2020, 0x8cb3, 0xe357, 0x586b, 0x1, 0x1);
        gbc.writeMem(0xe7b4, { 0xfa, 0x57, 0xec });
        gbc.writeMem(0xec57, { 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x646a, gbc.sp());
        EXPECT(0xe7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe7b4));
        EXPECT(0x57, gbc.readMem(0xe7b5));
        EXPECT(0xec, gbc.readMem(0xe7b6));
        EXPECT(0xa8, gbc.readMem(0xec57));
        // FA 019A
        gbc.setState(0x59c2, 0x3615, 0x3ca0, 0xcec2, 0x6be0, 0x502f, 0x1, 0x0);
        gbc.writeMem(0x59c2, { 0xfa, 0x51, 0xf8 });
        gbc.writeMem(0xf851, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3615, gbc.sp());
        EXPECT(0x59c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xf851));
        // FA 019B
        gbc.setState(0x57c9, 0x9fb7, 0x1930, 0x8fc4, 0x7c97, 0x45ff, 0x0, 0x0);
        gbc.writeMem(0x57c9, { 0xfa, 0xe7, 0x90 });
        gbc.writeMem(0x90e7, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9fb7, gbc.sp());
        EXPECT(0x57cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x90e7));
        // FA 019C
        gbc.setState(0xafc2, 0xc1a4, 0xcb00, 0x9033, 0xd82b, 0xd34f, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0x5a });
        gbc.writeMem(0xafc2, { 0xfa, 0x80, 0x3d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc1a4, gbc.sp());
        EXPECT(0xafc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xafc2));
        EXPECT(0x80, gbc.readMem(0xafc3));
        EXPECT(0x3d, gbc.readMem(0xafc4));
        // FA 019D
        gbc.setState(0x32b, 0xbf5d, 0xb940, 0xad3c, 0x59b9, 0x11d1, 0x1, 0x1);
        gbc.writeMem(0x32b, { 0xfa, 0x32, 0x10 });
        gbc.writeMem(0x1032, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbf5d, gbc.sp());
        EXPECT(0x32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 019E
        gbc.setState(0x9e5d, 0xc14e, 0x500, 0xd6fe, 0x220d, 0x7578, 0x1, 0x1);
        gbc.writeMem(0x9e5d, { 0xfa, 0x9, 0xa4 });
        gbc.writeMem(0xa409, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc14e, gbc.sp());
        EXPECT(0x9e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9e5d));
        EXPECT(0x9, gbc.readMem(0x9e5e));
        EXPECT(0xa4, gbc.readMem(0x9e5f));
        EXPECT(0xa1, gbc.readMem(0xa409));
        // FA 019F
        gbc.setState(0x16b8, 0x8cd1, 0x8200, 0xa750, 0xb442, 0x1a66, 0x0, 0x0);
        gbc.writeMem(0x16b8, { 0xfa, 0xb4, 0x3c });
        gbc.writeMem(0x3cb4, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8cd1, gbc.sp());
        EXPECT(0x16bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01A0
        gbc.setState(0x7249, 0x5e6e, 0xb300, 0xe1ca, 0xc79d, 0xaa12, 0x1, 0x1);
        gbc.writeMem(0x7249, { 0xfa, 0xd4, 0x9a });
        gbc.writeMem(0x9ad4, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5e6e, gbc.sp());
        EXPECT(0x724c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9ad4));
        // FA 01A1
        gbc.setState(0xa771, 0x45b7, 0xb2a0, 0xe9f8, 0xa705, 0xd36b, 0x1, 0x1);
        gbc.writeMem(0x4b4b, { 0x60 });
        gbc.writeMem(0xa771, { 0xfa, 0x4b, 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x45b7, gbc.sp());
        EXPECT(0xa774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa771));
        EXPECT(0x4b, gbc.readMem(0xa772));
        EXPECT(0x4b, gbc.readMem(0xa773));
        // FA 01A2
        gbc.setState(0x1fb5, 0xbb5a, 0x6f0, 0xfdc1, 0xa71b, 0x8041, 0x0, 0x0);
        gbc.writeMem(0x1fb5, { 0xfa, 0xe1, 0xcc });
        gbc.writeMem(0xcce1, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbb5a, gbc.sp());
        EXPECT(0x1fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xcce1));
        // FA 01A3
        gbc.setState(0xa3af, 0xcf1c, 0x1880, 0xd62a, 0x2f39, 0x69d2, 0x1, 0x1);
        gbc.writeMem(0x537d, { 0x21 });
        gbc.writeMem(0xa3af, { 0xfa, 0x7d, 0x53 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcf1c, gbc.sp());
        EXPECT(0xa3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa3af));
        EXPECT(0x7d, gbc.readMem(0xa3b0));
        EXPECT(0x53, gbc.readMem(0xa3b1));
        // FA 01A4
        gbc.setState(0x71a2, 0xfa50, 0x7e70, 0xcbe7, 0x72f7, 0x634a, 0x1, 0x0);
        gbc.writeMem(0x6629, { 0xff });
        gbc.writeMem(0x71a2, { 0xfa, 0x29, 0x66 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfa50, gbc.sp());
        EXPECT(0x71a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01A5
        gbc.setState(0xa275, 0x516f, 0xab90, 0xf76, 0x9c1a, 0xa7ac, 0x1, 0x0);
        gbc.writeMem(0x3303, { 0x93 });
        gbc.writeMem(0xa275, { 0xfa, 0x3, 0x33 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x516f, gbc.sp());
        EXPECT(0xa278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa275));
        EXPECT(0x3, gbc.readMem(0xa276));
        EXPECT(0x33, gbc.readMem(0xa277));
        // FA 01A6
        gbc.setState(0x721c, 0xb201, 0x9d10, 0xde7d, 0x9c7d, 0x5db6, 0x1, 0x0);
        gbc.writeMem(0x5394, { 0xa1 });
        gbc.writeMem(0x721c, { 0xfa, 0x94, 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb201, gbc.sp());
        EXPECT(0x721f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01A7
        gbc.setState(0xaabb, 0xb5fe, 0x69e0, 0x107, 0x5a26, 0x47ae, 0x0, 0x1);
        gbc.writeMem(0x74d0, { 0xb7 });
        gbc.writeMem(0xaabb, { 0xfa, 0xd0, 0x74 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb5fe, gbc.sp());
        EXPECT(0xaabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaabb));
        EXPECT(0xd0, gbc.readMem(0xaabc));
        EXPECT(0x74, gbc.readMem(0xaabd));
        // FA 01A8
        gbc.setState(0x6a99, 0x8247, 0xdf70, 0xeda8, 0x49de, 0x7879, 0x1, 0x1);
        gbc.writeMem(0x6a99, { 0xfa, 0x41, 0x92 });
        gbc.writeMem(0x9241, { 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8247, gbc.sp());
        EXPECT(0x6a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9241));
        // FA 01A9
        gbc.setState(0xdd28, 0x8b79, 0xc260, 0x624a, 0x2a7c, 0x3002, 0x1, 0x0);
        gbc.writeMem(0xbec7, { 0xb6 });
        gbc.writeMem(0xdd28, { 0xfa, 0xc7, 0xbe });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0xdd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbec7));
        EXPECT(0xfa, gbc.readMem(0xdd28));
        EXPECT(0xc7, gbc.readMem(0xdd29));
        EXPECT(0xbe, gbc.readMem(0xdd2a));
        // FA 01AA
        gbc.setState(0xc342, 0x51bb, 0x4b80, 0x662b, 0x2cea, 0xbd29, 0x0, 0x0);
        gbc.writeMem(0xc342, { 0xfa, 0x5f, 0xd5 });
        gbc.writeMem(0xd55f, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x51bb, gbc.sp());
        EXPECT(0xc345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc342));
        EXPECT(0x5f, gbc.readMem(0xc343));
        EXPECT(0xd5, gbc.readMem(0xc344));
        EXPECT(0x5a, gbc.readMem(0xd55f));
        // FA 01AB
        gbc.setState(0x62a, 0xa986, 0x6150, 0xbe92, 0x97e7, 0xc012, 0x1, 0x0);
        gbc.writeMem(0x62a, { 0xfa, 0x1, 0x8 });
        gbc.writeMem(0x801, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa986, gbc.sp());
        EXPECT(0x62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01AC
        gbc.setState(0x29db, 0x7c5c, 0xfa20, 0xea34, 0xc37c, 0x57d6, 0x1, 0x1);
        gbc.writeMem(0x1062, { 0x1f });
        gbc.writeMem(0x29db, { 0xfa, 0x62, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7c5c, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01AD
        gbc.setState(0xeecf, 0x46a7, 0x7d00, 0x9629, 0x843a, 0xe7dc, 0x1, 0x0);
        gbc.writeMem(0x4203, { 0xa6 });
        gbc.writeMem(0xeecf, { 0xfa, 0x3, 0x42 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x46a7, gbc.sp());
        EXPECT(0xeed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xeecf));
        EXPECT(0x3, gbc.readMem(0xeed0));
        EXPECT(0x42, gbc.readMem(0xeed1));
        // FA 01AE
        gbc.setState(0xe02f, 0x713e, 0xc9f0, 0x170c, 0x5bb3, 0xe0f9, 0x0, 0x0);
        gbc.writeMem(0x380, { 0x76 });
        gbc.writeMem(0xe02f, { 0xfa, 0x80, 0x3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x713e, gbc.sp());
        EXPECT(0xe032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe02f));
        EXPECT(0x80, gbc.readMem(0xe030));
        EXPECT(0x3, gbc.readMem(0xe031));
        // FA 01AF
        gbc.setState(0xb00f, 0x57c0, 0x2e70, 0xd382, 0xcd8a, 0xfbe6, 0x1, 0x1);
        gbc.writeMem(0x31d4, { 0x59 });
        gbc.writeMem(0xb00f, { 0xfa, 0xd4, 0x31 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x57c0, gbc.sp());
        EXPECT(0xb012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb00f));
        EXPECT(0xd4, gbc.readMem(0xb010));
        EXPECT(0x31, gbc.readMem(0xb011));
        // FA 01B0
        gbc.setState(0x297a, 0x400e, 0x9950, 0xf3c1, 0x35ef, 0xf042, 0x1, 0x0);
        gbc.writeMem(0x297a, { 0xfa, 0xfc, 0xea });
        gbc.writeMem(0xeafc, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0x297d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xeafc));
        // FA 01B1
        gbc.setState(0x6b13, 0xcb42, 0x5750, 0x715d, 0xda1b, 0xa9ff, 0x1, 0x1);
        gbc.writeMem(0x4327, { 0xf7 });
        gbc.writeMem(0x6b13, { 0xfa, 0x27, 0x43 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcb42, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01B2
        gbc.setState(0xad8d, 0x7bfa, 0x5c0, 0xeb16, 0x4d03, 0xfcd2, 0x1, 0x1);
        gbc.writeMem(0x2dd, { 0xd7 });
        gbc.writeMem(0xad8d, { 0xfa, 0xdd, 0x2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7bfa, gbc.sp());
        EXPECT(0xad90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xad8d));
        EXPECT(0xdd, gbc.readMem(0xad8e));
        EXPECT(0x2, gbc.readMem(0xad8f));
        // FA 01B3
        gbc.setState(0x563d, 0xef06, 0x1170, 0xa06, 0x32e8, 0x5077, 0x1, 0x1);
        gbc.writeMem(0x1fd4, { 0xde });
        gbc.writeMem(0x563d, { 0xfa, 0xd4, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xef06, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01B4
        gbc.setState(0x8755, 0x7a1a, 0xc00, 0xab9e, 0xbfe4, 0x667a, 0x0, 0x0);
        gbc.writeMem(0x8755, { 0xfa, 0x7c, 0xc9 });
        gbc.writeMem(0xc97c, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7a1a, gbc.sp());
        EXPECT(0x8758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8755));
        EXPECT(0x7c, gbc.readMem(0x8756));
        EXPECT(0xc9, gbc.readMem(0x8757));
        EXPECT(0x6e, gbc.readMem(0xc97c));
        // FA 01B5
        gbc.setState(0x69e1, 0x232a, 0xedc0, 0x7794, 0x36f0, 0xa86b, 0x1, 0x1);
        gbc.writeMem(0x69e1, { 0xfa, 0xc4, 0xdd });
        gbc.writeMem(0xddc4, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x232a, gbc.sp());
        EXPECT(0x69e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xddc4));
        // FA 01B6
        gbc.setState(0x92d1, 0x154f, 0x3bd0, 0x9886, 0x7af4, 0x7fce, 0x0, 0x0);
        gbc.writeMem(0x4f4f, { 0x84 });
        gbc.writeMem(0x92d1, { 0xfa, 0x4f, 0x4f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x154f, gbc.sp());
        EXPECT(0x92d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x92d1));
        EXPECT(0x4f, gbc.readMem(0x92d2));
        EXPECT(0x4f, gbc.readMem(0x92d3));
        // FA 01B7
        gbc.setState(0x5343, 0xd38, 0xdba0, 0xeb16, 0x8414, 0x1f65, 0x1, 0x1);
        gbc.writeMem(0x3e5d, { 0x13 });
        gbc.writeMem(0x5343, { 0xfa, 0x5d, 0x3e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd38, gbc.sp());
        EXPECT(0x5346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01B8
        gbc.setState(0x69dc, 0xa50c, 0xd0c0, 0x1373, 0xd997, 0xf873, 0x0, 0x1);
        gbc.writeMem(0x69dc, { 0xfa, 0x26, 0x9e });
        gbc.writeMem(0x9e26, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa50c, gbc.sp());
        EXPECT(0x69df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9e26));
        // FA 01B9
        gbc.setState(0xc57c, 0xb582, 0xf110, 0x1624, 0xe57, 0xd3c8, 0x1, 0x1);
        gbc.writeMem(0xc57c, { 0xfa, 0x20, 0xde });
        gbc.writeMem(0xde20, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb582, gbc.sp());
        EXPECT(0xc57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc57c));
        EXPECT(0x20, gbc.readMem(0xc57d));
        EXPECT(0xde, gbc.readMem(0xc57e));
        EXPECT(0xa6, gbc.readMem(0xde20));
        // FA 01BB
        gbc.setState(0xec4d, 0xaa0f, 0xb9c0, 0xfa7b, 0xa35d, 0x791b, 0x1, 0x0);
        gbc.writeMem(0x4adf, { 0x5f });
        gbc.writeMem(0xec4d, { 0xfa, 0xdf, 0x4a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaa0f, gbc.sp());
        EXPECT(0xec50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xec4d));
        EXPECT(0xdf, gbc.readMem(0xec4e));
        EXPECT(0x4a, gbc.readMem(0xec4f));
        // FA 01BD
        gbc.setState(0xc4a, 0xbcbe, 0x9530, 0x358e, 0xaeb5, 0x6458, 0x0, 0x1);
        gbc.writeMem(0xc4a, { 0xfa, 0x70, 0x2a });
        gbc.writeMem(0x2a70, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbcbe, gbc.sp());
        EXPECT(0xc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01BE
        gbc.setState(0x79de, 0xf05b, 0x6920, 0x7196, 0x4e74, 0xf9be, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0xfa, 0xd5, 0xe3 });
        gbc.writeMem(0xe3d5, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf05b, gbc.sp());
        EXPECT(0x79e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe3d5));
        // FA 01C0
        gbc.setState(0x2e62, 0xa070, 0xff00, 0x2ac6, 0x825a, 0x8dbf, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0xfa, 0x43, 0x99 });
        gbc.writeMem(0x9943, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa070, gbc.sp());
        EXPECT(0x2e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9943));
        // FA 01C1
        gbc.setState(0x313b, 0xe375, 0x5360, 0x6566, 0x3e2a, 0x953a, 0x0, 0x0);
        gbc.writeMem(0x313b, { 0xfa, 0xac, 0xe2 });
        gbc.writeMem(0xe2ac, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe375, gbc.sp());
        EXPECT(0x313e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe2ac));
        // FA 01C2
        gbc.setState(0x1cf0, 0xcdc4, 0x9b00, 0x268d, 0x10ce, 0x6b78, 0x1, 0x1);
        gbc.writeMem(0x1cf0, { 0xfa, 0x3a, 0xf0 });
        gbc.writeMem(0xf03a, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcdc4, gbc.sp());
        EXPECT(0x1cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xf03a));
        // FA 01C3
        gbc.setState(0x3507, 0xf6b0, 0xacb0, 0x7c6c, 0x14a7, 0x8b44, 0x0, 0x0);
        gbc.writeMem(0x3507, { 0xfa, 0x6e, 0xb2 });
        gbc.writeMem(0xb26e, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf6b0, gbc.sp());
        EXPECT(0x350a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb26e));
        // FA 01C4
        gbc.setState(0xbc5, 0x7275, 0xf160, 0x7a17, 0xb569, 0x516b, 0x1, 0x0);
        gbc.writeMem(0xbc5, { 0xfa, 0x24, 0x5e });
        gbc.writeMem(0x5e24, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7275, gbc.sp());
        EXPECT(0xbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01C5
        gbc.setState(0x7181, 0x92df, 0xdad0, 0x828b, 0xbaf, 0xaf5c, 0x1, 0x0);
        gbc.writeMem(0x36d7, { 0xa7 });
        gbc.writeMem(0x7181, { 0xfa, 0xd7, 0x36 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x92df, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01C7
        gbc.setState(0xa07c, 0x48b2, 0xb8b0, 0xfb04, 0x5f07, 0x3926, 0x1, 0x1);
        gbc.writeMem(0xa07c, { 0xfa, 0x91, 0xfa });
        gbc.writeMem(0xfa91, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x48b2, gbc.sp());
        EXPECT(0xa07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa07c));
        EXPECT(0x91, gbc.readMem(0xa07d));
        EXPECT(0xfa, gbc.readMem(0xa07e));
        EXPECT(0x66, gbc.readMem(0xfa91));
        // FA 01C8
        gbc.setState(0x253, 0x17e8, 0x28e0, 0x8236, 0xf111, 0xee59, 0x0, 0x0);
        gbc.writeMem(0x253, { 0xfa, 0xc, 0xd8 });
        gbc.writeMem(0xd80c, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x17e8, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd80c));
        // FA 01C9
        gbc.setState(0x47fe, 0xb1c5, 0x43a0, 0xdebe, 0xd7f8, 0x5bae, 0x1, 0x1);
        gbc.writeMem(0x47fe, { 0xfa, 0x72, 0x78 });
        gbc.writeMem(0x7872, { 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb1c5, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01CA
        gbc.setState(0xe062, 0xe6be, 0xd5f0, 0x92e7, 0xc5a3, 0x4944, 0x1, 0x1);
        gbc.writeMem(0x9a67, { 0xad });
        gbc.writeMem(0xe062, { 0xfa, 0x67, 0x9a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe6be, gbc.sp());
        EXPECT(0xe065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9a67));
        EXPECT(0xfa, gbc.readMem(0xe062));
        EXPECT(0x67, gbc.readMem(0xe063));
        EXPECT(0x9a, gbc.readMem(0xe064));
        // FA 01CB
        gbc.setState(0xc633, 0xfd1c, 0x3480, 0xc079, 0x17ab, 0xe1aa, 0x1, 0x1);
        gbc.writeMem(0xc633, { 0xfa, 0x9c, 0xe6 });
        gbc.writeMem(0xe69c, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfd1c, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc633));
        EXPECT(0x9c, gbc.readMem(0xc634));
        EXPECT(0xe6, gbc.readMem(0xc635));
        EXPECT(0x2, gbc.readMem(0xe69c));
        // FA 01CC
        gbc.setState(0xa1d2, 0x1214, 0xa370, 0x2f4b, 0xf89c, 0x139, 0x1, 0x1);
        gbc.writeMem(0x6eaa, { 0x2f });
        gbc.writeMem(0xa1d2, { 0xfa, 0xaa, 0x6e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1214, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa1d2));
        EXPECT(0xaa, gbc.readMem(0xa1d3));
        EXPECT(0x6e, gbc.readMem(0xa1d4));
        // FA 01CD
        gbc.setState(0x65f, 0x3025, 0x3190, 0x2973, 0xfbd0, 0xaaea, 0x0, 0x1);
        gbc.writeMem(0x65f, { 0xfa, 0x89, 0xb5 });
        gbc.writeMem(0xb589, { 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3025, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xb589));
        // FA 01CE
        gbc.setState(0x552f, 0x64fd, 0xd0b0, 0x141a, 0x5935, 0xc3e, 0x1, 0x0);
        gbc.writeMem(0x3dca, { 0x54 });
        gbc.writeMem(0x552f, { 0xfa, 0xca, 0x3d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0x5532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01CF
        gbc.setState(0xb905, 0x311a, 0x4160, 0xdbbe, 0x2919, 0xbbdd, 0x0, 0x0);
        gbc.writeMem(0x2c42, { 0x8a });
        gbc.writeMem(0xb905, { 0xfa, 0x42, 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x311a, gbc.sp());
        EXPECT(0xb908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb905));
        EXPECT(0x42, gbc.readMem(0xb906));
        EXPECT(0x2c, gbc.readMem(0xb907));
        // FA 01D0
        gbc.setState(0xadd9, 0x97e5, 0xcb10, 0x3877, 0xae68, 0xf580, 0x0, 0x0);
        gbc.writeMem(0xf73, { 0x4c });
        gbc.writeMem(0xadd9, { 0xfa, 0x73, 0xf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x97e5, gbc.sp());
        EXPECT(0xaddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xadd9));
        EXPECT(0x73, gbc.readMem(0xadda));
        EXPECT(0xf, gbc.readMem(0xaddb));
        // FA 01D1
        gbc.setState(0x5465, 0xe1bb, 0xd3f0, 0x99d8, 0x1b3b, 0x2e82, 0x0, 0x0);
        gbc.writeMem(0x5465, { 0xfa, 0xfd, 0x56 });
        gbc.writeMem(0x56fd, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe1bb, gbc.sp());
        EXPECT(0x5468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01D2
        gbc.setState(0x45d8, 0x9766, 0xf0a0, 0x36c3, 0x699a, 0xee37, 0x1, 0x0);
        gbc.writeMem(0x45d8, { 0xfa, 0xd8, 0xb1 });
        gbc.writeMem(0xb1d8, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9766, gbc.sp());
        EXPECT(0x45db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb1d8));
        // FA 01D3
        gbc.setState(0x5d0d, 0x94fe, 0xd0a0, 0x7f80, 0x1ea1, 0xbfd7, 0x1, 0x1);
        gbc.writeMem(0x5d0d, { 0xfa, 0xaa, 0x5d });
        gbc.writeMem(0x5daa, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01D4
        gbc.setState(0xe294, 0x9bc6, 0xe80, 0xd1e8, 0xbc7e, 0x8047, 0x1, 0x0);
        gbc.writeMem(0xd8fd, { 0x31 });
        gbc.writeMem(0xe294, { 0xfa, 0xfd, 0xd8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0xe297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd8fd));
        EXPECT(0xfa, gbc.readMem(0xe294));
        EXPECT(0xfd, gbc.readMem(0xe295));
        EXPECT(0xd8, gbc.readMem(0xe296));
        // FA 01D5
        gbc.setState(0xbbd9, 0xc8c2, 0x5c60, 0xa2b3, 0xa2ec, 0xd6ef, 0x0, 0x0);
        gbc.writeMem(0x2093, { 0xce });
        gbc.writeMem(0xbbd9, { 0xfa, 0x93, 0x20 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc8c2, gbc.sp());
        EXPECT(0xbbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbbd9));
        EXPECT(0x93, gbc.readMem(0xbbda));
        EXPECT(0x20, gbc.readMem(0xbbdb));
        // FA 01D6
        gbc.setState(0x499c, 0x6e73, 0x4cc0, 0x19f7, 0x5ada, 0xa929, 0x0, 0x1);
        gbc.writeMem(0x499c, { 0xfa, 0xf7, 0xb5 });
        gbc.writeMem(0xb5f7, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6e73, gbc.sp());
        EXPECT(0x499f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xb5f7));
        // FA 01D7
        gbc.setState(0x64ea, 0x7acb, 0x7760, 0x35ce, 0x85c1, 0xb23, 0x0, 0x0);
        gbc.writeMem(0x6062, { 0xf6 });
        gbc.writeMem(0x64ea, { 0xfa, 0x62, 0x60 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7acb, gbc.sp());
        EXPECT(0x64ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01D8
        gbc.setState(0x2a2f, 0xfc56, 0xc4b0, 0x6a40, 0xd61f, 0x3693, 0x1, 0x1);
        gbc.writeMem(0x27b5, { 0x4 });
        gbc.writeMem(0x2a2f, { 0xfa, 0xb5, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfc56, gbc.sp());
        EXPECT(0x2a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01D9
        gbc.setState(0x991c, 0x70f7, 0x6030, 0x7399, 0xb042, 0xcf43, 0x0, 0x1);
        gbc.writeMem(0x991c, { 0xfa, 0xf8, 0xe5 });
        gbc.writeMem(0xe5f8, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x70f7, gbc.sp());
        EXPECT(0x991f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x991c));
        EXPECT(0xf8, gbc.readMem(0x991d));
        EXPECT(0xe5, gbc.readMem(0x991e));
        EXPECT(0xbd, gbc.readMem(0xe5f8));
        // FA 01DA
        gbc.setState(0xbc4d, 0xf6e9, 0xe80, 0x3c57, 0xb243, 0xb942, 0x1, 0x1);
        gbc.writeMem(0x38cd, { 0x1e });
        gbc.writeMem(0xbc4d, { 0xfa, 0xcd, 0x38 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf6e9, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbc4d));
        EXPECT(0xcd, gbc.readMem(0xbc4e));
        EXPECT(0x38, gbc.readMem(0xbc4f));
        // FA 01DB
        gbc.setState(0x57ff, 0xf88b, 0x3fe0, 0x196, 0x38d2, 0xc30b, 0x1, 0x0);
        gbc.writeMem(0x57ff, { 0xfa, 0xc, 0xa3 });
        gbc.writeMem(0xa30c, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x5802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa30c));
        // FA 01DC
        gbc.setState(0xa7ec, 0xbcf, 0x1d60, 0x5e70, 0x6581, 0x35ab, 0x0, 0x0);
        gbc.writeMem(0xa7ec, { 0xfa, 0x77, 0xd2 });
        gbc.writeMem(0xd277, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbcf, gbc.sp());
        EXPECT(0xa7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa7ec));
        EXPECT(0x77, gbc.readMem(0xa7ed));
        EXPECT(0xd2, gbc.readMem(0xa7ee));
        EXPECT(0x96, gbc.readMem(0xd277));
        // FA 01DD
        gbc.setState(0xd2d9, 0xf2a3, 0xda70, 0xe5d0, 0x2e50, 0xebd9, 0x0, 0x0);
        gbc.writeMem(0xd2d9, { 0xfa, 0x6, 0xfe });
        gbc.writeMem(0xfe06, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf2a3, gbc.sp());
        EXPECT(0xd2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd2d9));
        EXPECT(0x6, gbc.readMem(0xd2da));
        EXPECT(0xfe, gbc.readMem(0xd2db));
        EXPECT(0xa2, gbc.readMem(0xfe06));
        // FA 01DE
        gbc.setState(0x453d, 0x7d67, 0x5e30, 0xad51, 0x9bb9, 0x214e, 0x0, 0x0);
        gbc.writeMem(0x817, { 0x9c });
        gbc.writeMem(0x453d, { 0xfa, 0x17, 0x8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7d67, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01DF
        gbc.setState(0xb25, 0x2b7e, 0xc960, 0xc703, 0x4b0d, 0x22b, 0x1, 0x1);
        gbc.writeMem(0xb25, { 0xfa, 0x3a, 0xb2 });
        gbc.writeMem(0xb23a, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2b7e, gbc.sp());
        EXPECT(0xb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb23a));
        // FA 01E0
        gbc.setState(0x1431, 0x8202, 0x1cd0, 0xe42a, 0x3b9f, 0xa595, 0x0, 0x1);
        gbc.writeMem(0x354, { 0x1b });
        gbc.writeMem(0x1431, { 0xfa, 0x54, 0x3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8202, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01E1
        gbc.setState(0x69e2, 0x1acf, 0xeb40, 0xaad5, 0xf8da, 0xd893, 0x0, 0x0);
        gbc.writeMem(0xedd, { 0x4f });
        gbc.writeMem(0x69e2, { 0xfa, 0xdd, 0xe });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1acf, gbc.sp());
        EXPECT(0x69e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01E2
        gbc.setState(0xd3c0, 0xad20, 0xe790, 0xbe73, 0xf704, 0xb083, 0x0, 0x0);
        gbc.writeMem(0xd3c0, { 0xfa, 0xd0, 0xea });
        gbc.writeMem(0xead0, { 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xad20, gbc.sp());
        EXPECT(0xd3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd3c0));
        EXPECT(0xd0, gbc.readMem(0xd3c1));
        EXPECT(0xea, gbc.readMem(0xd3c2));
        EXPECT(0xe5, gbc.readMem(0xead0));
        // FA 01E3
        gbc.setState(0xa08f, 0x76bf, 0xbcf0, 0x18d8, 0x170e, 0x8036, 0x0, 0x1);
        gbc.writeMem(0xa08f, { 0xfa, 0x6b, 0xc4 });
        gbc.writeMem(0xc46b, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x76bf, gbc.sp());
        EXPECT(0xa092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa08f));
        EXPECT(0x6b, gbc.readMem(0xa090));
        EXPECT(0xc4, gbc.readMem(0xa091));
        EXPECT(0x6c, gbc.readMem(0xc46b));
        // FA 01E4
        gbc.setState(0xdc05, 0x5191, 0x6810, 0x4e2e, 0x3048, 0x7418, 0x0, 0x0);
        gbc.writeMem(0x8fb7, { 0x2c });
        gbc.writeMem(0xdc05, { 0xfa, 0xb7, 0x8f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5191, gbc.sp());
        EXPECT(0xdc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8fb7));
        EXPECT(0xfa, gbc.readMem(0xdc05));
        EXPECT(0xb7, gbc.readMem(0xdc06));
        EXPECT(0x8f, gbc.readMem(0xdc07));
        // FA 01E5
        gbc.setState(0x1df4, 0xeed4, 0xd5d0, 0x6b66, 0x8b1b, 0x9fea, 0x0, 0x0);
        gbc.writeMem(0xa96, { 0x3f });
        gbc.writeMem(0x1df4, { 0xfa, 0x96, 0xa });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeed4, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01E6
        gbc.setState(0xb2d2, 0x8756, 0x4160, 0x787d, 0x6723, 0x5822, 0x1, 0x1);
        gbc.writeMem(0x174a, { 0xc9 });
        gbc.writeMem(0xb2d2, { 0xfa, 0x4a, 0x17 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8756, gbc.sp());
        EXPECT(0xb2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb2d2));
        EXPECT(0x4a, gbc.readMem(0xb2d3));
        EXPECT(0x17, gbc.readMem(0xb2d4));
        // FA 01E7
        gbc.setState(0x6714, 0x7532, 0x4290, 0x4a5d, 0x91d8, 0xcd04, 0x0, 0x0);
        gbc.writeMem(0x6714, { 0xfa, 0xab, 0x80 });
        gbc.writeMem(0x80ab, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7532, gbc.sp());
        EXPECT(0x6717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x80ab));
        // FA 01E8
        gbc.setState(0x5b8a, 0x512f, 0x7710, 0x775a, 0x1eee, 0xec9a, 0x1, 0x0);
        gbc.writeMem(0x5b8a, { 0xfa, 0x8b, 0x75 });
        gbc.writeMem(0x758b, { 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x512f, gbc.sp());
        EXPECT(0x5b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01E9
        gbc.setState(0xd419, 0x52a5, 0x4bc0, 0xce5e, 0x5819, 0xba3d, 0x1, 0x0);
        gbc.writeMem(0x9523, { 0xac });
        gbc.writeMem(0xd419, { 0xfa, 0x23, 0x95 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x52a5, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9523));
        EXPECT(0xfa, gbc.readMem(0xd419));
        EXPECT(0x23, gbc.readMem(0xd41a));
        EXPECT(0x95, gbc.readMem(0xd41b));
        // FA 01EA
        gbc.setState(0x9f4a, 0xabf8, 0x9970, 0xcd9a, 0x2968, 0x639a, 0x0, 0x1);
        gbc.writeMem(0x3504, { 0x51 });
        gbc.writeMem(0x9f4a, { 0xfa, 0x4, 0x35 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xabf8, gbc.sp());
        EXPECT(0x9f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9f4a));
        EXPECT(0x4, gbc.readMem(0x9f4b));
        EXPECT(0x35, gbc.readMem(0x9f4c));
        // FA 01EB
        gbc.setState(0x62c5, 0x1d40, 0x5cc0, 0xc99a, 0x4e57, 0x5dd2, 0x0, 0x0);
        gbc.writeMem(0x62c5, { 0xfa, 0xa5, 0xf2 });
        gbc.writeMem(0xf2a5, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1d40, gbc.sp());
        EXPECT(0x62c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xf2a5));
        // FA 01EC
        gbc.setState(0x3302, 0x57bc, 0x4040, 0xe016, 0xf319, 0xf7f5, 0x0, 0x0);
        gbc.writeMem(0x3302, { 0xfa, 0x93, 0xa0 });
        gbc.writeMem(0xa093, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x57bc, gbc.sp());
        EXPECT(0x3305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa093));
        // FA 01ED
        gbc.setState(0x7fcd, 0x3e37, 0xba40, 0xf59f, 0x544e, 0x7c30, 0x1, 0x0);
        gbc.writeMem(0x7fcd, { 0xfa, 0x1a, 0xe7 });
        gbc.writeMem(0xe71a, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3e37, gbc.sp());
        EXPECT(0x7fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe71a));
        // FA 01EE
        gbc.setState(0x598f, 0xf244, 0x5120, 0x9408, 0x9df7, 0x20d9, 0x1, 0x1);
        gbc.writeMem(0x149f, { 0x26 });
        gbc.writeMem(0x598f, { 0xfa, 0x9f, 0x14 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf244, gbc.sp());
        EXPECT(0x5992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01EF
        gbc.setState(0xcf3b, 0xf06a, 0xa280, 0x46c1, 0xa0b5, 0xb1ed, 0x1, 0x0);
        gbc.writeMem(0x3d22, { 0xfb });
        gbc.writeMem(0xcf3b, { 0xfa, 0x22, 0x3d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf06a, gbc.sp());
        EXPECT(0xcf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcf3b));
        EXPECT(0x22, gbc.readMem(0xcf3c));
        EXPECT(0x3d, gbc.readMem(0xcf3d));
        // FA 01F0
        gbc.setState(0x533e, 0x5b74, 0xaca0, 0x391f, 0xb5b2, 0xe92e, 0x1, 0x1);
        gbc.writeMem(0x7dc, { 0x73 });
        gbc.writeMem(0x533e, { 0xfa, 0xdc, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5b74, gbc.sp());
        EXPECT(0x5341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01F1
        gbc.setState(0xceab, 0x19d5, 0xee60, 0xb6fb, 0x5278, 0x21ae, 0x0, 0x1);
        gbc.writeMem(0x50, { 0x55 });
        gbc.writeMem(0xceab, { 0xfa, 0x50, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x19d5, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xceab));
        EXPECT(0x50, gbc.readMem(0xceac));
        EXPECT(0x0, gbc.readMem(0xcead));
        // FA 01F2
        gbc.setState(0x1b3e, 0xcbb0, 0x3220, 0x7369, 0xe30b, 0xc386, 0x1, 0x1);
        gbc.writeMem(0x1b3e, { 0xfa, 0x7d, 0x21 });
        gbc.writeMem(0x217d, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcbb0, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01F3
        gbc.setState(0x1125, 0x1181, 0x7ef0, 0x536a, 0xb750, 0x4a9b, 0x0, 0x0);
        gbc.writeMem(0x1125, { 0xfa, 0xa1, 0x29 });
        gbc.writeMem(0x29a1, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1181, gbc.sp());
        EXPECT(0x1128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01F4
        gbc.setState(0xc12c, 0x7a0d, 0xbed0, 0x5e24, 0x8a76, 0xb20c, 0x1, 0x0);
        gbc.writeMem(0xa808, { 0xa7 });
        gbc.writeMem(0xc12c, { 0xfa, 0x8, 0xa8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7a0d, gbc.sp());
        EXPECT(0xc12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa808));
        EXPECT(0xfa, gbc.readMem(0xc12c));
        EXPECT(0x8, gbc.readMem(0xc12d));
        EXPECT(0xa8, gbc.readMem(0xc12e));
        // FA 01F5
        gbc.setState(0x1ec8, 0xd5a3, 0x8c00, 0x6065, 0x6af0, 0x6b8f, 0x0, 0x0);
        gbc.writeMem(0x18, { 0xf1 });
        gbc.writeMem(0x1ec8, { 0xfa, 0x18, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0x1ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01F6
        gbc.setState(0x2544, 0x90b7, 0x2eb0, 0xcb8, 0x6865, 0x7b05, 0x0, 0x0);
        gbc.writeMem(0x2544, { 0xfa, 0x4d, 0x66 });
        gbc.writeMem(0x664d, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x2547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01F7
        gbc.setState(0x9423, 0xa7c6, 0xa290, 0xb16, 0x7093, 0x989a, 0x1, 0x1);
        gbc.writeMem(0x8405, { 0x88 });
        gbc.writeMem(0x9423, { 0xfa, 0x5, 0x84 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa7c6, gbc.sp());
        EXPECT(0x9426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8405));
        EXPECT(0xfa, gbc.readMem(0x9423));
        EXPECT(0x5, gbc.readMem(0x9424));
        EXPECT(0x84, gbc.readMem(0x9425));
        // FA 01F8
        gbc.setState(0x1da1, 0xb95e, 0xccd0, 0x2b5, 0xc411, 0x15e0, 0x0, 0x0);
        gbc.writeMem(0x1da1, { 0xfa, 0x4a, 0x61 });
        gbc.writeMem(0x614a, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb95e, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01F9
        gbc.setState(0xe39e, 0xa1c, 0xf340, 0xfb67, 0x57a7, 0xc2fe, 0x0, 0x1);
        gbc.writeMem(0x87f8, { 0x50 });
        gbc.writeMem(0xe39e, { 0xfa, 0xf8, 0x87 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa1c, gbc.sp());
        EXPECT(0xe3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x87f8));
        EXPECT(0xfa, gbc.readMem(0xe39e));
        EXPECT(0xf8, gbc.readMem(0xe39f));
        EXPECT(0x87, gbc.readMem(0xe3a0));
        // FA 01FA
        gbc.setState(0x41a5, 0x8a1b, 0xb80, 0x7766, 0xc9fd, 0xcad1, 0x0, 0x0);
        gbc.writeMem(0x34a6, { 0x8f });
        gbc.writeMem(0x41a5, { 0xfa, 0xa6, 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8a1b, gbc.sp());
        EXPECT(0x41a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01FB
        gbc.setState(0x22bf, 0x24f4, 0xa160, 0xe4cf, 0x6c6, 0xa74e, 0x1, 0x0);
        gbc.writeMem(0x22bf, { 0xfa, 0xfe, 0x3a });
        gbc.writeMem(0x3afe, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x24f4, gbc.sp());
        EXPECT(0x22c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 01FC
        gbc.setState(0x6b6c, 0x8352, 0xfe50, 0x5332, 0x3446, 0x1fb9, 0x0, 0x0);
        gbc.writeMem(0x3f5c, { 0x27 });
        gbc.writeMem(0x6b6c, { 0xfa, 0x5c, 0x3f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0x6b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01FD
        gbc.setState(0x2e73, 0x2fe1, 0xafc0, 0x97fa, 0x1fcc, 0xdba5, 0x0, 0x1);
        gbc.writeMem(0x2e73, { 0xfa, 0x9f, 0xbb });
        gbc.writeMem(0xbb9f, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2fe1, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xbb9f));
        // FA 01FE
        gbc.setState(0x5f47, 0x21d1, 0x6790, 0xcd10, 0x513e, 0x59ac, 0x1, 0x0);
        gbc.writeMem(0x1e1b, { 0x92 });
        gbc.writeMem(0x5f47, { 0xfa, 0x1b, 0x1e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 01FF
        gbc.setState(0xd6aa, 0x2cc8, 0x6030, 0x2450, 0x6290, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0x179b, { 0xa1 });
        gbc.writeMem(0xd6aa, { 0xfa, 0x9b, 0x17 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2cc8, gbc.sp());
        EXPECT(0xd6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd6aa));
        EXPECT(0x9b, gbc.readMem(0xd6ab));
        EXPECT(0x17, gbc.readMem(0xd6ac));
        // FA 0200
        gbc.setState(0x5a0f, 0x576c, 0x2400, 0x7f8d, 0xe637, 0xfa60, 0x0, 0x1);
        gbc.writeMem(0x5a0f, { 0xfa, 0x96, 0x96 });
        gbc.writeMem(0x9696, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x576c, gbc.sp());
        EXPECT(0x5a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9696));
        // FA 0202
        gbc.setState(0x491f, 0xd61a, 0x4540, 0xc920, 0x1a60, 0x29ee, 0x0, 0x1);
        gbc.writeMem(0x22ed, { 0x59 });
        gbc.writeMem(0x491f, { 0xfa, 0xed, 0x22 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd61a, gbc.sp());
        EXPECT(0x4922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0203
        gbc.setState(0x263a, 0x7a8d, 0xc480, 0xaf81, 0x5ffc, 0x2ab5, 0x0, 0x0);
        gbc.writeMem(0x263a, { 0xfa, 0xe5, 0xf6 });
        gbc.writeMem(0xf6e5, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7a8d, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xf6e5));
        // FA 0204
        gbc.setState(0x9617, 0x3fe8, 0xf260, 0x6bae, 0x2b6d, 0x358e, 0x1, 0x0);
        gbc.writeMem(0x2373, { 0x9f });
        gbc.writeMem(0x9617, { 0xfa, 0x73, 0x23 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3fe8, gbc.sp());
        EXPECT(0x961a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9617));
        EXPECT(0x73, gbc.readMem(0x9618));
        EXPECT(0x23, gbc.readMem(0x9619));
        // FA 0205
        gbc.setState(0x9272, 0x1ff2, 0x1720, 0x67c7, 0xa17, 0x7f80, 0x1, 0x1);
        gbc.writeMem(0x7528, { 0x2c });
        gbc.writeMem(0x9272, { 0xfa, 0x28, 0x75 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0x9275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9272));
        EXPECT(0x28, gbc.readMem(0x9273));
        EXPECT(0x75, gbc.readMem(0x9274));
        // FA 0206
        gbc.setState(0x5e18, 0x5b57, 0xa530, 0x4a83, 0x39ad, 0x4695, 0x1, 0x1);
        gbc.writeMem(0x1cf6, { 0xd3 });
        gbc.writeMem(0x5e18, { 0xfa, 0xf6, 0x1c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5b57, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0207
        gbc.setState(0x94d8, 0xf0c8, 0x3ec0, 0x36d1, 0x56a6, 0x368b, 0x1, 0x1);
        gbc.writeMem(0x94d8, { 0xfa, 0x16, 0xb8 });
        gbc.writeMem(0xb816, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf0c8, gbc.sp());
        EXPECT(0x94db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x94d8));
        EXPECT(0x16, gbc.readMem(0x94d9));
        EXPECT(0xb8, gbc.readMem(0x94da));
        EXPECT(0xc9, gbc.readMem(0xb816));
        // FA 0208
        gbc.setState(0x2771, 0x57a4, 0xc120, 0x39b1, 0xcde9, 0xf7ac, 0x1, 0x0);
        gbc.writeMem(0x2771, { 0xfa, 0x39, 0xd1 });
        gbc.writeMem(0xd139, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x57a4, gbc.sp());
        EXPECT(0x2774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd139));
        // FA 0209
        gbc.setState(0x27a1, 0xa0d4, 0xefa0, 0x9035, 0x3534, 0x8f81, 0x0, 0x1);
        gbc.writeMem(0x27a1, { 0xfa, 0xed, 0x75 });
        gbc.writeMem(0x75ed, { 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa0d4, gbc.sp());
        EXPECT(0x27a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 020A
        gbc.setState(0x5b06, 0xaa98, 0xa7a0, 0x4d8c, 0x12d1, 0x573f, 0x0, 0x0);
        gbc.writeMem(0x5b06, { 0xfa, 0x6a, 0x9d });
        gbc.writeMem(0x9d6a, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0x5b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9d6a));
        // FA 020B
        gbc.setState(0x41eb, 0xa3d3, 0xaa50, 0x256e, 0x9d91, 0x1a43, 0x0, 0x1);
        gbc.writeMem(0x582, { 0x28 });
        gbc.writeMem(0x41eb, { 0xfa, 0x82, 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa3d3, gbc.sp());
        EXPECT(0x41ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 020C
        gbc.setState(0xd3fb, 0xd3eb, 0xc6e0, 0x7f9e, 0xcbde, 0x2de0, 0x1, 0x1);
        gbc.writeMem(0x50a6, { 0xa7 });
        gbc.writeMem(0xd3fb, { 0xfa, 0xa6, 0x50 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd3eb, gbc.sp());
        EXPECT(0xd3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd3fb));
        EXPECT(0xa6, gbc.readMem(0xd3fc));
        EXPECT(0x50, gbc.readMem(0xd3fd));
        // FA 020D
        gbc.setState(0x3f76, 0xc795, 0xcd0, 0x6d1b, 0xb38e, 0x4140, 0x0, 0x0);
        gbc.writeMem(0x3f76, { 0xfa, 0x96, 0x52 });
        gbc.writeMem(0x5296, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc795, gbc.sp());
        EXPECT(0x3f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 020E
        gbc.setState(0x8fc7, 0xaa6, 0xac0, 0x8f87, 0x554a, 0xb676, 0x1, 0x1);
        gbc.writeMem(0x8fc7, { 0xfa, 0xfe, 0xf7 });
        gbc.writeMem(0xf7fe, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0x8fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8fc7));
        EXPECT(0xfe, gbc.readMem(0x8fc8));
        EXPECT(0xf7, gbc.readMem(0x8fc9));
        EXPECT(0xc5, gbc.readMem(0xf7fe));
        // FA 0210
        gbc.setState(0xec53, 0xfd63, 0xf370, 0xef72, 0xe3e2, 0xf08c, 0x1, 0x0);
        gbc.writeMem(0xce66, { 0xdf });
        gbc.writeMem(0xec53, { 0xfa, 0x66, 0xce });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfd63, gbc.sp());
        EXPECT(0xec56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xce66));
        EXPECT(0xfa, gbc.readMem(0xec53));
        EXPECT(0x66, gbc.readMem(0xec54));
        EXPECT(0xce, gbc.readMem(0xec55));
        // FA 0211
        gbc.setState(0x4878, 0x1817, 0xde10, 0xaf25, 0x14dd, 0xe79c, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0x15 });
        gbc.writeMem(0x4878, { 0xfa, 0xa1, 0x35 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1817, gbc.sp());
        EXPECT(0x487b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0212
        gbc.setState(0xb2e8, 0xcb56, 0x7ee0, 0x3e7, 0xfb4b, 0x54a7, 0x1, 0x1);
        gbc.writeMem(0x6fdb, { 0xbd });
        gbc.writeMem(0xb2e8, { 0xfa, 0xdb, 0x6f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcb56, gbc.sp());
        EXPECT(0xb2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb2e8));
        EXPECT(0xdb, gbc.readMem(0xb2e9));
        EXPECT(0x6f, gbc.readMem(0xb2ea));
        // FA 0213
        gbc.setState(0xdc77, 0x2f6e, 0x4190, 0x6a1f, 0xef71, 0x43d4, 0x0, 0x0);
        gbc.writeMem(0x4f0e, { 0x5f });
        gbc.writeMem(0xdc77, { 0xfa, 0xe, 0x4f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2f6e, gbc.sp());
        EXPECT(0xdc7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdc77));
        EXPECT(0xe, gbc.readMem(0xdc78));
        EXPECT(0x4f, gbc.readMem(0xdc79));
        // FA 0214
        gbc.setState(0x7382, 0xd027, 0x8cc0, 0x8b11, 0xe9a0, 0x667e, 0x0, 0x1);
        gbc.writeMem(0x7382, { 0xfa, 0xc6, 0xdd });
        gbc.writeMem(0xddc6, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd027, gbc.sp());
        EXPECT(0x7385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xddc6));
        // FA 0215
        gbc.setState(0x2b17, 0xdf54, 0x3f0, 0xbf60, 0x4ca2, 0xe83b, 0x1, 0x0);
        gbc.writeMem(0x1afe, { 0x28 });
        gbc.writeMem(0x2b17, { 0xfa, 0xfe, 0x1a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf54, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0216
        gbc.setState(0x553f, 0xda9e, 0xb280, 0xbf68, 0x3821, 0x5d0, 0x1, 0x1);
        gbc.writeMem(0x553f, { 0xfa, 0x35, 0xba });
        gbc.writeMem(0xba35, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xda9e, gbc.sp());
        EXPECT(0x5542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xba35));
        // FA 0217
        gbc.setState(0xabdd, 0xedeb, 0xc490, 0x9dd5, 0xb71a, 0x1b0c, 0x0, 0x1);
        gbc.writeMem(0xabdd, { 0xfa, 0x9c, 0xfb });
        gbc.writeMem(0xfb9c, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xedeb, gbc.sp());
        EXPECT(0xabe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xabdd));
        EXPECT(0x9c, gbc.readMem(0xabde));
        EXPECT(0xfb, gbc.readMem(0xabdf));
        EXPECT(0x26, gbc.readMem(0xfb9c));
        // FA 0218
        gbc.setState(0xb500, 0xba84, 0x2bf0, 0x19a3, 0xd8c2, 0xe7cf, 0x0, 0x0);
        gbc.writeMem(0xb500, { 0xfa, 0x43, 0xc7 });
        gbc.writeMem(0xc743, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xba84, gbc.sp());
        EXPECT(0xb503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb500));
        EXPECT(0x43, gbc.readMem(0xb501));
        EXPECT(0xc7, gbc.readMem(0xb502));
        EXPECT(0x4f, gbc.readMem(0xc743));
        // FA 0219
        gbc.setState(0x8baa, 0xa98a, 0x42d0, 0xdaf2, 0xa01e, 0x485a, 0x0, 0x1);
        gbc.writeMem(0x8baa, { 0xfa, 0xfd, 0xd3 });
        gbc.writeMem(0xd3fd, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa98a, gbc.sp());
        EXPECT(0x8bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8baa));
        EXPECT(0xfd, gbc.readMem(0x8bab));
        EXPECT(0xd3, gbc.readMem(0x8bac));
        EXPECT(0x50, gbc.readMem(0xd3fd));
        // FA 021A
        gbc.setState(0xa214, 0xc27d, 0x9b50, 0xd5e8, 0xafdb, 0x5003, 0x0, 0x1);
        gbc.writeMem(0x85f6, { 0xfe });
        gbc.writeMem(0xa214, { 0xfa, 0xf6, 0x85 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc27d, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x85f6));
        EXPECT(0xfa, gbc.readMem(0xa214));
        EXPECT(0xf6, gbc.readMem(0xa215));
        EXPECT(0x85, gbc.readMem(0xa216));
        // FA 021B
        gbc.setState(0xbfd, 0xa30e, 0xe90, 0x9e45, 0x187a, 0xa3e2, 0x0, 0x1);
        gbc.writeMem(0xbfd, { 0xfa, 0xd3, 0xc3 });
        gbc.writeMem(0xc3d3, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa30e, gbc.sp());
        EXPECT(0xc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc3d3));
        // FA 021C
        gbc.setState(0x4f0d, 0x33db, 0x5430, 0xb428, 0x2d16, 0x19b4, 0x0, 0x0);
        gbc.writeMem(0x445f, { 0xc8 });
        gbc.writeMem(0x4f0d, { 0xfa, 0x5f, 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x33db, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 021D
        gbc.setState(0x5917, 0x7271, 0xb400, 0xcc30, 0x6b9a, 0x553b, 0x1, 0x1);
        gbc.writeMem(0x5917, { 0xfa, 0x54, 0xc8 });
        gbc.writeMem(0xc854, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7271, gbc.sp());
        EXPECT(0x591a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xc854));
        // FA 021E
        gbc.setState(0x3422, 0xdd67, 0x8dc0, 0xeb1, 0x9769, 0xa70d, 0x1, 0x1);
        gbc.writeMem(0x3422, { 0xfa, 0xd4, 0xf2 });
        gbc.writeMem(0xf2d4, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdd67, gbc.sp());
        EXPECT(0x3425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xf2d4));
        // FA 021F
        gbc.setState(0x6f47, 0xb043, 0x2e50, 0x9673, 0x30eb, 0x8b9b, 0x1, 0x0);
        gbc.writeMem(0x6f47, { 0xfa, 0x33, 0xbc });
        gbc.writeMem(0xbc33, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb043, gbc.sp());
        EXPECT(0x6f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xbc33));
        // FA 0220
        gbc.setState(0x5178, 0x3488, 0x7010, 0x304b, 0xf148, 0x200d, 0x0, 0x1);
        gbc.writeMem(0x124d, { 0x46 });
        gbc.writeMem(0x5178, { 0xfa, 0x4d, 0x12 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3488, gbc.sp());
        EXPECT(0x517b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0221
        gbc.setState(0xa80e, 0x2238, 0x68b0, 0x1eee, 0x2372, 0x2be7, 0x1, 0x0);
        gbc.writeMem(0xa80e, { 0xfa, 0x17, 0xaa });
        gbc.writeMem(0xaa17, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2238, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa80e));
        EXPECT(0x17, gbc.readMem(0xa80f));
        EXPECT(0xaa, gbc.readMem(0xa810));
        EXPECT(0x66, gbc.readMem(0xaa17));
        // FA 0222
        gbc.setState(0x719b, 0xd17d, 0x85f0, 0xc672, 0x5526, 0x187d, 0x0, 0x0);
        gbc.writeMem(0x719b, { 0xfa, 0x6a, 0xab });
        gbc.writeMem(0xab6a, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd17d, gbc.sp());
        EXPECT(0x719e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xab6a));
        // FA 0223
        gbc.setState(0xe3c8, 0xf521, 0x1cd0, 0xc53d, 0x7f10, 0x2ffa, 0x0, 0x1);
        gbc.writeMem(0xa567, { 0xb2 });
        gbc.writeMem(0xe3c8, { 0xfa, 0x67, 0xa5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf521, gbc.sp());
        EXPECT(0xe3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa567));
        EXPECT(0xfa, gbc.readMem(0xe3c8));
        EXPECT(0x67, gbc.readMem(0xe3c9));
        EXPECT(0xa5, gbc.readMem(0xe3ca));
        // FA 0224
        gbc.setState(0xedf, 0xe921, 0xb190, 0xb8bd, 0x607a, 0xf9bb, 0x0, 0x0);
        gbc.writeMem(0xedf, { 0xfa, 0x78, 0xd5 });
        gbc.writeMem(0xd578, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe921, gbc.sp());
        EXPECT(0xee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd578));
        // FA 0225
        gbc.setState(0x9673, 0xcbd5, 0x1fc0, 0xb54f, 0x883f, 0x2e9e, 0x1, 0x1);
        gbc.writeMem(0x9673, { 0xfa, 0xce, 0xc0 });
        gbc.writeMem(0xc0ce, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcbd5, gbc.sp());
        EXPECT(0x9676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9673));
        EXPECT(0xce, gbc.readMem(0x9674));
        EXPECT(0xc0, gbc.readMem(0x9675));
        EXPECT(0x52, gbc.readMem(0xc0ce));
        // FA 0226
        gbc.setState(0x2200, 0x7d0, 0x3f0, 0xe9c1, 0x222c, 0xc157, 0x1, 0x0);
        gbc.writeMem(0x2200, { 0xfa, 0xbe, 0x24 });
        gbc.writeMem(0x24be, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0x2203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0227
        gbc.setState(0xccab, 0xaaf5, 0x3fe0, 0x2a07, 0xb987, 0xb697, 0x1, 0x1);
        gbc.writeMem(0x6a6b, { 0xa7 });
        gbc.writeMem(0xccab, { 0xfa, 0x6b, 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaaf5, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xccab));
        EXPECT(0x6b, gbc.readMem(0xccac));
        EXPECT(0x6a, gbc.readMem(0xccad));
        // FA 0229
        gbc.setState(0xaeb, 0x6f33, 0x64b0, 0x8c28, 0x434f, 0x5db5, 0x1, 0x0);
        gbc.writeMem(0xaeb, { 0xfa, 0x70, 0x99 });
        gbc.writeMem(0x9970, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6f33, gbc.sp());
        EXPECT(0xaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9970));
        // FA 022A
        gbc.setState(0xc0d5, 0x332b, 0x5070, 0xd483, 0xd11b, 0x3e1a, 0x1, 0x0);
        gbc.writeMem(0xc0d5, { 0xfa, 0xc1, 0xee });
        gbc.writeMem(0xeec1, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0xc0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc0d5));
        EXPECT(0xc1, gbc.readMem(0xc0d6));
        EXPECT(0xee, gbc.readMem(0xc0d7));
        EXPECT(0x28, gbc.readMem(0xeec1));
        // FA 022B
        gbc.setState(0x2008, 0x548c, 0x57b0, 0x8d14, 0xa6b3, 0xb16c, 0x0, 0x0);
        gbc.writeMem(0x2008, { 0xfa, 0x7a, 0x52 });
        gbc.writeMem(0x527a, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0x200b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 022C
        gbc.setState(0xd952, 0x1677, 0x8d90, 0xe6cf, 0xe22b, 0xf7ac, 0x0, 0x0);
        gbc.writeMem(0x49b7, { 0xdc });
        gbc.writeMem(0xd952, { 0xfa, 0xb7, 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1677, gbc.sp());
        EXPECT(0xd955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd952));
        EXPECT(0xb7, gbc.readMem(0xd953));
        EXPECT(0x49, gbc.readMem(0xd954));
        // FA 022D
        gbc.setState(0x836b, 0x846f, 0x4320, 0xc1b5, 0x574a, 0xfbb, 0x0, 0x1);
        gbc.writeMem(0x1fe4, { 0x98 });
        gbc.writeMem(0x836b, { 0xfa, 0xe4, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x846f, gbc.sp());
        EXPECT(0x836e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x836b));
        EXPECT(0xe4, gbc.readMem(0x836c));
        EXPECT(0x1f, gbc.readMem(0x836d));
        // FA 022E
        gbc.setState(0xe04, 0xb9f3, 0xcc60, 0xd1eb, 0x930, 0x9464, 0x1, 0x0);
        gbc.writeMem(0xe04, { 0xfa, 0x8b, 0xed });
        gbc.writeMem(0xed8b, { 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb9f3, gbc.sp());
        EXPECT(0xe07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xed8b));
        // FA 022F
        gbc.setState(0x50d5, 0x9234, 0x3a60, 0x5d65, 0x47ab, 0x64f1, 0x0, 0x1);
        gbc.writeMem(0x6ee, { 0x36 });
        gbc.writeMem(0x50d5, { 0xfa, 0xee, 0x6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9234, gbc.sp());
        EXPECT(0x50d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0230
        gbc.setState(0x3642, 0x15eb, 0x2b0, 0x70fe, 0x92ec, 0xbb90, 0x0, 0x1);
        gbc.writeMem(0x222a, { 0x52 });
        gbc.writeMem(0x3642, { 0xfa, 0x2a, 0x22 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x15eb, gbc.sp());
        EXPECT(0x3645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0231
        gbc.setState(0xb561, 0x3198, 0x2690, 0xfd3, 0x8011, 0x3d90, 0x1, 0x1);
        gbc.writeMem(0xb561, { 0xfa, 0xfa, 0xfc });
        gbc.writeMem(0xfcfa, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3198, gbc.sp());
        EXPECT(0xb564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb561));
        EXPECT(0xfa, gbc.readMem(0xb562));
        EXPECT(0xfc, gbc.readMem(0xb563));
        EXPECT(0x31, gbc.readMem(0xfcfa));
        // FA 0232
        gbc.setState(0x6ac2, 0x9216, 0x8fa0, 0x83c0, 0x3bc7, 0xc1ea, 0x0, 0x1);
        gbc.writeMem(0x15ea, { 0xcb });
        gbc.writeMem(0x6ac2, { 0xfa, 0xea, 0x15 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9216, gbc.sp());
        EXPECT(0x6ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0234
        gbc.setState(0x160f, 0x4c7, 0xd970, 0x73a6, 0x29fe, 0x9082, 0x1, 0x1);
        gbc.writeMem(0x160f, { 0xfa, 0x86, 0x36 });
        gbc.writeMem(0x3686, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4c7, gbc.sp());
        EXPECT(0x1612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0236
        gbc.setState(0xda58, 0x5a2a, 0x5640, 0xf3ca, 0x882c, 0x5f92, 0x1, 0x0);
        gbc.writeMem(0x5af6, { 0x82 });
        gbc.writeMem(0xda58, { 0xfa, 0xf6, 0x5a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5a2a, gbc.sp());
        EXPECT(0xda5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xda58));
        EXPECT(0xf6, gbc.readMem(0xda59));
        EXPECT(0x5a, gbc.readMem(0xda5a));
        // FA 0237
        gbc.setState(0x9099, 0x2dc2, 0x5cf0, 0xb1a7, 0x2d8e, 0x9692, 0x0, 0x0);
        gbc.writeMem(0x291e, { 0xc7 });
        gbc.writeMem(0x9099, { 0xfa, 0x1e, 0x29 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2dc2, gbc.sp());
        EXPECT(0x909c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9099));
        EXPECT(0x1e, gbc.readMem(0x909a));
        EXPECT(0x29, gbc.readMem(0x909b));
        // FA 0238
        gbc.setState(0x1e0a, 0x2f64, 0xbbc0, 0x3962, 0xf74e, 0x2923, 0x1, 0x0);
        gbc.writeMem(0x1e0a, { 0xfa, 0x7, 0x71 });
        gbc.writeMem(0x7107, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2f64, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0239
        gbc.setState(0x17aa, 0xe3e4, 0x2690, 0x6f8b, 0xd8e4, 0x831f, 0x0, 0x0);
        gbc.writeMem(0x17aa, { 0xfa, 0xa0, 0x42 });
        gbc.writeMem(0x42a0, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe3e4, gbc.sp());
        EXPECT(0x17ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 023A
        gbc.setState(0x319f, 0x7d3c, 0xfb00, 0x7bee, 0xb6fd, 0x57b5, 0x0, 0x1);
        gbc.writeMem(0x319f, { 0xfa, 0xe4, 0x4a });
        gbc.writeMem(0x4ae4, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7d3c, gbc.sp());
        EXPECT(0x31a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 023B
        gbc.setState(0x86af, 0x741d, 0xc430, 0x5c98, 0x7ed, 0xf803, 0x1, 0x0);
        gbc.writeMem(0x86af, { 0xfa, 0x7d, 0xa6 });
        gbc.writeMem(0xa67d, { 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x741d, gbc.sp());
        EXPECT(0x86b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x86af));
        EXPECT(0x7d, gbc.readMem(0x86b0));
        EXPECT(0xa6, gbc.readMem(0x86b1));
        EXPECT(0xdd, gbc.readMem(0xa67d));
        // FA 023C
        gbc.setState(0x3ef1, 0x7270, 0xa2e0, 0xdfd8, 0xcdbb, 0x8aee, 0x0, 0x0);
        gbc.writeMem(0x3ef1, { 0xfa, 0xfe, 0xa6 });
        gbc.writeMem(0xa6fe, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7270, gbc.sp());
        EXPECT(0x3ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa6fe));
        // FA 023D
        gbc.setState(0xd09d, 0x3140, 0x7680, 0x526e, 0x2603, 0x8ea7, 0x0, 0x0);
        gbc.writeMem(0x2ae3, { 0xcd });
        gbc.writeMem(0xd09d, { 0xfa, 0xe3, 0x2a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3140, gbc.sp());
        EXPECT(0xd0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd09d));
        EXPECT(0xe3, gbc.readMem(0xd09e));
        EXPECT(0x2a, gbc.readMem(0xd09f));
        // FA 023E
        gbc.setState(0x6946, 0x9670, 0x1590, 0x546e, 0x1b7b, 0x5982, 0x0, 0x0);
        gbc.writeMem(0x4db2, { 0x7c });
        gbc.writeMem(0x6946, { 0xfa, 0xb2, 0x4d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0x6949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 023F
        gbc.setState(0x74d8, 0xcf4b, 0x1f50, 0xc864, 0x444, 0xd478, 0x1, 0x0);
        gbc.writeMem(0x74d8, { 0xfa, 0x61, 0x9d });
        gbc.writeMem(0x9d61, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf4b, gbc.sp());
        EXPECT(0x74db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9d61));
        // FA 0240
        gbc.setState(0xe741, 0x7866, 0x3650, 0xf305, 0xdf2a, 0xdae1, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xdb });
        gbc.writeMem(0xe741, { 0xfa, 0xf9, 0xa });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7866, gbc.sp());
        EXPECT(0xe744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe741));
        EXPECT(0xf9, gbc.readMem(0xe742));
        EXPECT(0xa, gbc.readMem(0xe743));
        // FA 0241
        gbc.setState(0x44d2, 0x4b62, 0x9be0, 0x249a, 0x6180, 0x9ec0, 0x1, 0x1);
        gbc.writeMem(0x44d2, { 0xfa, 0xcf, 0xe8 });
        gbc.writeMem(0xe8cf, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4b62, gbc.sp());
        EXPECT(0x44d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xe8cf));
        // FA 0242
        gbc.setState(0x43c2, 0x7723, 0x7600, 0xe56d, 0xde4e, 0x1738, 0x1, 0x1);
        gbc.writeMem(0x43c2, { 0xfa, 0xd7, 0x5a });
        gbc.writeMem(0x5ad7, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7723, gbc.sp());
        EXPECT(0x43c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0243
        gbc.setState(0xd7b, 0x9d24, 0x9860, 0xcd9d, 0xaf29, 0xddf0, 0x1, 0x1);
        gbc.writeMem(0xd7b, { 0xfa, 0x9d, 0x9c });
        gbc.writeMem(0x9c9d, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9d24, gbc.sp());
        EXPECT(0xd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9c9d));
        // FA 0244
        gbc.setState(0x4a74, 0xb4fe, 0xe7e0, 0x5e72, 0x7772, 0x9a5f, 0x0, 0x1);
        gbc.writeMem(0x4a74, { 0xfa, 0x76, 0x67 });
        gbc.writeMem(0x6776, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb4fe, gbc.sp());
        EXPECT(0x4a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0245
        gbc.setState(0x8231, 0xad23, 0x2e00, 0x780e, 0xe356, 0x388e, 0x0, 0x1);
        gbc.writeMem(0x8231, { 0xfa, 0x83, 0x99 });
        gbc.writeMem(0x9983, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xad23, gbc.sp());
        EXPECT(0x8234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8231));
        EXPECT(0x83, gbc.readMem(0x8232));
        EXPECT(0x99, gbc.readMem(0x8233));
        EXPECT(0xf5, gbc.readMem(0x9983));
        // FA 0246
        gbc.setState(0x27bc, 0x5eaf, 0xabf0, 0x1dbc, 0xc06e, 0xf8d1, 0x1, 0x1);
        gbc.writeMem(0x27bc, { 0xfa, 0x8a, 0x92 });
        gbc.writeMem(0x928a, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5eaf, gbc.sp());
        EXPECT(0x27bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x928a));
        // FA 0247
        gbc.setState(0x93d9, 0xe001, 0x9050, 0x8ef, 0x8dac, 0x245c, 0x0, 0x1);
        gbc.writeMem(0x93d9, { 0xfa, 0x3d, 0xa7 });
        gbc.writeMem(0xa73d, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe001, gbc.sp());
        EXPECT(0x93dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x93d9));
        EXPECT(0x3d, gbc.readMem(0x93da));
        EXPECT(0xa7, gbc.readMem(0x93db));
        EXPECT(0x3d, gbc.readMem(0xa73d));
        // FA 0248
        gbc.setState(0x413e, 0x604a, 0xeb20, 0xbe3, 0x1d6, 0xe567, 0x0, 0x1);
        gbc.writeMem(0x413e, { 0xfa, 0xc2, 0xc3 });
        gbc.writeMem(0xc3c2, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x604a, gbc.sp());
        EXPECT(0x4141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc3c2));
        // FA 024A
        gbc.setState(0x3c07, 0x9fe8, 0xb690, 0xa8df, 0xa4c9, 0x4da3, 0x0, 0x0);
        gbc.writeMem(0x836, { 0xb8 });
        gbc.writeMem(0x3c07, { 0xfa, 0x36, 0x8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9fe8, gbc.sp());
        EXPECT(0x3c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 024B
        gbc.setState(0x5dca, 0xcc36, 0x7d50, 0x5ae3, 0xf5f7, 0x9aa0, 0x1, 0x0);
        gbc.writeMem(0x5dca, { 0xfa, 0x30, 0xe6 });
        gbc.writeMem(0xe630, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc36, gbc.sp());
        EXPECT(0x5dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe630));
        // FA 024C
        gbc.setState(0xcb18, 0x5cd6, 0x3800, 0x6a74, 0x144, 0x4f9d, 0x0, 0x1);
        gbc.writeMem(0x847b, { 0x2f });
        gbc.writeMem(0xcb18, { 0xfa, 0x7b, 0x84 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5cd6, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x847b));
        EXPECT(0xfa, gbc.readMem(0xcb18));
        EXPECT(0x7b, gbc.readMem(0xcb19));
        EXPECT(0x84, gbc.readMem(0xcb1a));
        // FA 024D
        gbc.setState(0xc96f, 0x5417, 0x91f0, 0xb30c, 0x40c6, 0xe596, 0x1, 0x1);
        gbc.writeMem(0x9e7d, { 0x28 });
        gbc.writeMem(0xc96f, { 0xfa, 0x7d, 0x9e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5417, gbc.sp());
        EXPECT(0xc972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x9e7d));
        EXPECT(0xfa, gbc.readMem(0xc96f));
        EXPECT(0x7d, gbc.readMem(0xc970));
        EXPECT(0x9e, gbc.readMem(0xc971));
        // FA 024F
        gbc.setState(0x142f, 0xfb1d, 0xa100, 0x867f, 0x3e88, 0x742c, 0x0, 0x0);
        gbc.writeMem(0x142f, { 0xfa, 0x28, 0x39 });
        gbc.writeMem(0x3928, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfb1d, gbc.sp());
        EXPECT(0x1432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0250
        gbc.setState(0x3ecc, 0xa15f, 0x3c70, 0x27c9, 0xd67d, 0x7b1, 0x0, 0x1);
        gbc.writeMem(0x27bb, { 0xcf });
        gbc.writeMem(0x3ecc, { 0xfa, 0xbb, 0x27 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa15f, gbc.sp());
        EXPECT(0x3ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0252
        gbc.setState(0xd754, 0x619b, 0xd7c0, 0x93cf, 0x88ef, 0xa382, 0x0, 0x0);
        gbc.writeMem(0x36fa, { 0xd0 });
        gbc.writeMem(0xd754, { 0xfa, 0xfa, 0x36 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x619b, gbc.sp());
        EXPECT(0xd757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd754));
        EXPECT(0xfa, gbc.readMem(0xd755));
        EXPECT(0x36, gbc.readMem(0xd756));
        // FA 0253
        gbc.setState(0x98b3, 0xa78a, 0x50e0, 0x6c9e, 0xb6b3, 0x54a3, 0x0, 0x1);
        gbc.writeMem(0x98b3, { 0xfa, 0x7e, 0xd6 });
        gbc.writeMem(0xd67e, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa78a, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x98b3));
        EXPECT(0x7e, gbc.readMem(0x98b4));
        EXPECT(0xd6, gbc.readMem(0x98b5));
        EXPECT(0x2a, gbc.readMem(0xd67e));
        // FA 0254
        gbc.setState(0x1791, 0xf559, 0xe1e0, 0x2a3d, 0xcd7, 0x7fa6, 0x1, 0x1);
        gbc.writeMem(0x1791, { 0xfa, 0xc, 0x18 });
        gbc.writeMem(0x180c, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf559, gbc.sp());
        EXPECT(0x1794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0255
        gbc.setState(0x22, 0x895a, 0x63e0, 0xe7a, 0xf6e1, 0x20aa, 0x1, 0x0);
        gbc.writeMem(0x22, { 0xfa, 0x47, 0x5a });
        gbc.writeMem(0x5a47, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x895a, gbc.sp());
        EXPECT(0x25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0256
        gbc.setState(0x20c9, 0xb643, 0xa970, 0x6925, 0x8263, 0x32dd, 0x1, 0x1);
        gbc.writeMem(0x20c9, { 0xfa, 0x6, 0xab });
        gbc.writeMem(0xab06, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb643, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xab06));
        // FA 0257
        gbc.setState(0x9eb1, 0xf357, 0x2bc0, 0x3b33, 0xbd77, 0xbded, 0x1, 0x1);
        gbc.writeMem(0x9eb1, { 0xfa, 0xd2, 0xcd });
        gbc.writeMem(0xcdd2, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf357, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9eb1));
        EXPECT(0xd2, gbc.readMem(0x9eb2));
        EXPECT(0xcd, gbc.readMem(0x9eb3));
        EXPECT(0x64, gbc.readMem(0xcdd2));
        // FA 0259
        gbc.setState(0x25dd, 0xb939, 0xae50, 0xf287, 0x70d3, 0xc938, 0x1, 0x1);
        gbc.writeMem(0x205f, { 0xa7 });
        gbc.writeMem(0x25dd, { 0xfa, 0x5f, 0x20 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb939, gbc.sp());
        EXPECT(0x25e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 025A
        gbc.setState(0x616, 0x9992, 0x5fa0, 0xd99d, 0x8c89, 0xea79, 0x0, 0x0);
        gbc.writeMem(0x616, { 0xfa, 0x1b, 0x76 });
        gbc.writeMem(0x761b, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9992, gbc.sp());
        EXPECT(0x619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 025B
        gbc.setState(0x154f, 0xce0c, 0x9970, 0x3e1a, 0x1f0f, 0xa56c, 0x0, 0x0);
        gbc.writeMem(0x127d, { 0xa8 });
        gbc.writeMem(0x154f, { 0xfa, 0x7d, 0x12 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xce0c, gbc.sp());
        EXPECT(0x1552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 025C
        gbc.setState(0x73f2, 0x46b7, 0x7aa0, 0x7d48, 0x7493, 0x5ee6, 0x1, 0x1);
        gbc.writeMem(0x1d10, { 0x53 });
        gbc.writeMem(0x73f2, { 0xfa, 0x10, 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x46b7, gbc.sp());
        EXPECT(0x73f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 025D
        gbc.setState(0x3f64, 0xa486, 0xf7a0, 0xb983, 0xb5e6, 0x1dc8, 0x0, 0x0);
        gbc.writeMem(0x3f64, { 0xfa, 0x7e, 0xf6 });
        gbc.writeMem(0xf67e, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa486, gbc.sp());
        EXPECT(0x3f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xf67e));
        // FA 025E
        gbc.setState(0x2bae, 0x2054, 0xece0, 0x329e, 0x8a05, 0xbea1, 0x1, 0x0);
        gbc.writeMem(0x737, { 0x6 });
        gbc.writeMem(0x2bae, { 0xfa, 0x37, 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2054, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 025F
        gbc.setState(0xf31, 0xcb3d, 0x510, 0x8c7e, 0x7662, 0x6721, 0x0, 0x1);
        gbc.writeMem(0xf31, { 0xfa, 0x30, 0xe7 });
        gbc.writeMem(0xe730, { 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0xf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe730));
        // FA 0260
        gbc.setState(0xa32a, 0x6b0a, 0x8220, 0xcec8, 0x9c89, 0x3f5b, 0x0, 0x0);
        gbc.writeMem(0x6d23, { 0x1f });
        gbc.writeMem(0xa32a, { 0xfa, 0x23, 0x6d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6b0a, gbc.sp());
        EXPECT(0xa32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa32a));
        EXPECT(0x23, gbc.readMem(0xa32b));
        EXPECT(0x6d, gbc.readMem(0xa32c));
        // FA 0262
        gbc.setState(0x1056, 0x8034, 0xf9f0, 0x836, 0xcab3, 0xedb0, 0x1, 0x1);
        gbc.writeMem(0x1056, { 0xfa, 0xee, 0xf4 });
        gbc.writeMem(0xf4ee, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8034, gbc.sp());
        EXPECT(0x1059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xf4ee));
        // FA 0263
        gbc.setState(0xae0, 0xb0a5, 0xce10, 0xe27a, 0x912, 0x7b72, 0x0, 0x1);
        gbc.writeMem(0xae0, { 0xfa, 0x67, 0x49 });
        gbc.writeMem(0x4967, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb0a5, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0264
        gbc.setState(0x5714, 0x7bf4, 0x2880, 0x38c6, 0xb0a5, 0xd3f4, 0x1, 0x1);
        gbc.writeMem(0x208d, { 0x24 });
        gbc.writeMem(0x5714, { 0xfa, 0x8d, 0x20 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7bf4, gbc.sp());
        EXPECT(0x5717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0265
        gbc.setState(0xec5d, 0x42d0, 0x3f90, 0x19b, 0x1d7, 0xf77e, 0x1, 0x1);
        gbc.writeMem(0x6afb, { 0xfd });
        gbc.writeMem(0xec5d, { 0xfa, 0xfb, 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x42d0, gbc.sp());
        EXPECT(0xec60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xec5d));
        EXPECT(0xfb, gbc.readMem(0xec5e));
        EXPECT(0x6a, gbc.readMem(0xec5f));
        // FA 0266
        gbc.setState(0xc312, 0x652a, 0x5200, 0xb6da, 0x1a95, 0x134b, 0x0, 0x1);
        gbc.writeMem(0x4eea, { 0x1d });
        gbc.writeMem(0xc312, { 0xfa, 0xea, 0x4e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x652a, gbc.sp());
        EXPECT(0xc315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc312));
        EXPECT(0xea, gbc.readMem(0xc313));
        EXPECT(0x4e, gbc.readMem(0xc314));
        // FA 0267
        gbc.setState(0xebb3, 0xc016, 0xc9f0, 0xd7a5, 0xa6d4, 0x6bbb, 0x1, 0x0);
        gbc.writeMem(0x3bad, { 0xa8 });
        gbc.writeMem(0xebb3, { 0xfa, 0xad, 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc016, gbc.sp());
        EXPECT(0xebb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xebb3));
        EXPECT(0xad, gbc.readMem(0xebb4));
        EXPECT(0x3b, gbc.readMem(0xebb5));
        // FA 0268
        gbc.setState(0xdbe3, 0x9b3e, 0x8200, 0x2114, 0xd200, 0x1f62, 0x0, 0x0);
        gbc.writeMem(0x5629, { 0xf1 });
        gbc.writeMem(0xdbe3, { 0xfa, 0x29, 0x56 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9b3e, gbc.sp());
        EXPECT(0xdbe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdbe3));
        EXPECT(0x29, gbc.readMem(0xdbe4));
        EXPECT(0x56, gbc.readMem(0xdbe5));
        // FA 0269
        gbc.setState(0x7580, 0x480c, 0xec50, 0x7957, 0x41c6, 0x238e, 0x1, 0x1);
        gbc.writeMem(0x7580, { 0xfa, 0x24, 0xf2 });
        gbc.writeMem(0xf224, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x480c, gbc.sp());
        EXPECT(0x7583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xf224));
        // FA 026A
        gbc.setState(0x6702, 0xa197, 0x7b0, 0x8deb, 0xf468, 0x3772, 0x1, 0x0);
        gbc.writeMem(0x6702, { 0xfa, 0x9e, 0x95 });
        gbc.writeMem(0x959e, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa197, gbc.sp());
        EXPECT(0x6705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x959e));
        // FA 026B
        gbc.setState(0x6836, 0xbe70, 0xd0e0, 0xbcc0, 0x12b1, 0x1f5d, 0x0, 0x1);
        gbc.writeMem(0x3f8b, { 0xcc });
        gbc.writeMem(0x6836, { 0xfa, 0x8b, 0x3f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbe70, gbc.sp());
        EXPECT(0x6839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 026C
        gbc.setState(0x572, 0xa085, 0x49b0, 0xfd9c, 0x1703, 0x9cb, 0x1, 0x0);
        gbc.writeMem(0x572, { 0xfa, 0x5d, 0xea });
        gbc.writeMem(0xea5d, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa085, gbc.sp());
        EXPECT(0x575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xea5d));
        // FA 026D
        gbc.setState(0x1ada, 0xfe9b, 0x4140, 0x9cba, 0xaf40, 0x98b8, 0x0, 0x0);
        gbc.writeMem(0x1ada, { 0xfa, 0x47, 0xa9 });
        gbc.writeMem(0xa947, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfe9b, gbc.sp());
        EXPECT(0x1add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa947));
        // FA 026E
        gbc.setState(0xbfd7, 0x8108, 0x40, 0x799b, 0x3b8e, 0x3fc6, 0x0, 0x1);
        gbc.writeMem(0xbfd7, { 0xfa, 0x13, 0xc1 });
        gbc.writeMem(0xc113, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8108, gbc.sp());
        EXPECT(0xbfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbfd7));
        EXPECT(0x13, gbc.readMem(0xbfd8));
        EXPECT(0xc1, gbc.readMem(0xbfd9));
        EXPECT(0x41, gbc.readMem(0xc113));
        // FA 026F
        gbc.setState(0x42cf, 0x5c91, 0x6c60, 0x8f99, 0xbf16, 0x1593, 0x0, 0x1);
        gbc.writeMem(0x287c, { 0x69 });
        gbc.writeMem(0x42cf, { 0xfa, 0x7c, 0x28 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5c91, gbc.sp());
        EXPECT(0x42d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0270
        gbc.setState(0x539b, 0x45f8, 0x2240, 0xacf1, 0xa4a1, 0x1b82, 0x1, 0x1);
        gbc.writeMem(0x539b, { 0xfa, 0x70, 0xf5 });
        gbc.writeMem(0xf570, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0x539e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf570));
        // FA 0271
        gbc.setState(0x95cc, 0x40ed, 0x8d50, 0x7091, 0x9f96, 0x5cb6, 0x0, 0x0);
        gbc.writeMem(0x6aaa, { 0xcf });
        gbc.writeMem(0x95cc, { 0xfa, 0xaa, 0x6a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x40ed, gbc.sp());
        EXPECT(0x95cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x95cc));
        EXPECT(0xaa, gbc.readMem(0x95cd));
        EXPECT(0x6a, gbc.readMem(0x95ce));
        // FA 0272
        gbc.setState(0x20ec, 0x27c9, 0x1f0, 0xb943, 0x577c, 0x18f5, 0x0, 0x0);
        gbc.writeMem(0x20ec, { 0xfa, 0x1f, 0x70 });
        gbc.writeMem(0x701f, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x27c9, gbc.sp());
        EXPECT(0x20ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0273
        gbc.setState(0x3543, 0x8288, 0xa40, 0xd552, 0xecc3, 0x3bc3, 0x1, 0x1);
        gbc.writeMem(0x3543, { 0xfa, 0x86, 0x54 });
        gbc.writeMem(0x5486, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8288, gbc.sp());
        EXPECT(0x3546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0274
        gbc.setState(0x6e58, 0xc463, 0x6da0, 0x754b, 0xb48c, 0x7a01, 0x1, 0x0);
        gbc.writeMem(0x6e58, { 0xfa, 0x38, 0xf6 });
        gbc.writeMem(0xf638, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0x6e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xf638));
        // FA 0275
        gbc.setState(0xd6c9, 0xc9cf, 0xae90, 0x663b, 0x702, 0x43da, 0x0, 0x1);
        gbc.writeMem(0x335b, { 0xf5 });
        gbc.writeMem(0xd6c9, { 0xfa, 0x5b, 0x33 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0xd6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd6c9));
        EXPECT(0x5b, gbc.readMem(0xd6ca));
        EXPECT(0x33, gbc.readMem(0xd6cb));
        // FA 0278
        gbc.setState(0xc337, 0x7828, 0xc3b0, 0xd041, 0x6d01, 0x1959, 0x1, 0x0);
        gbc.writeMem(0xc337, { 0xfa, 0xc7, 0xdd });
        gbc.writeMem(0xddc7, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0xc33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc337));
        EXPECT(0xc7, gbc.readMem(0xc338));
        EXPECT(0xdd, gbc.readMem(0xc339));
        EXPECT(0x62, gbc.readMem(0xddc7));
        // FA 0279
        gbc.setState(0xa121, 0x8dca, 0xf470, 0xbb50, 0x416e, 0x407d, 0x1, 0x1);
        gbc.writeMem(0x566f, { 0xf8 });
        gbc.writeMem(0xa121, { 0xfa, 0x6f, 0x56 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8dca, gbc.sp());
        EXPECT(0xa124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa121));
        EXPECT(0x6f, gbc.readMem(0xa122));
        EXPECT(0x56, gbc.readMem(0xa123));
        // FA 027A
        gbc.setState(0x42f1, 0x74ef, 0x6060, 0x846e, 0xbd1, 0xd53, 0x0, 0x0);
        gbc.writeMem(0x42f1, { 0xfa, 0x70, 0x96 });
        gbc.writeMem(0x9670, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x74ef, gbc.sp());
        EXPECT(0x42f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9670));
        // FA 027B
        gbc.setState(0x41b5, 0xcad2, 0x6350, 0xaa53, 0x5106, 0x867c, 0x1, 0x1);
        gbc.writeMem(0x1a9b, { 0x38 });
        gbc.writeMem(0x41b5, { 0xfa, 0x9b, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcad2, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 027C
        gbc.setState(0xb0a7, 0x5bb8, 0xdae0, 0x61e0, 0x2cea, 0xe75f, 0x1, 0x0);
        gbc.writeMem(0xb0a7, { 0xfa, 0xd5, 0xea });
        gbc.writeMem(0xead5, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5bb8, gbc.sp());
        EXPECT(0xb0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb0a7));
        EXPECT(0xd5, gbc.readMem(0xb0a8));
        EXPECT(0xea, gbc.readMem(0xb0a9));
        EXPECT(0x65, gbc.readMem(0xead5));
        // FA 027D
        gbc.setState(0xe0be, 0x6e04, 0xf110, 0x605f, 0xafd1, 0xc1d2, 0x1, 0x1);
        gbc.writeMem(0x440b, { 0x86 });
        gbc.writeMem(0xe0be, { 0xfa, 0xb, 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6e04, gbc.sp());
        EXPECT(0xe0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe0be));
        EXPECT(0xb, gbc.readMem(0xe0bf));
        EXPECT(0x44, gbc.readMem(0xe0c0));
        // FA 027E
        gbc.setState(0x56b3, 0x3e30, 0xcae0, 0x7b4, 0x48a7, 0xc4ae, 0x0, 0x0);
        gbc.writeMem(0x20cc, { 0xb0 });
        gbc.writeMem(0x56b3, { 0xfa, 0xcc, 0x20 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3e30, gbc.sp());
        EXPECT(0x56b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 027F
        gbc.setState(0x40b8, 0xbf7d, 0xec70, 0xed1b, 0x40b8, 0x489f, 0x1, 0x1);
        gbc.writeMem(0x40b8, { 0xfa, 0xee, 0xb6 });
        gbc.writeMem(0xb6ee, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbf7d, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb6ee));
        // FA 0280
        gbc.setState(0x3d58, 0xf26f, 0x97a0, 0x3d30, 0xf30, 0x12be, 0x0, 0x1);
        gbc.writeMem(0x3d58, { 0xfa, 0xf9, 0x4d });
        gbc.writeMem(0x4df9, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf26f, gbc.sp());
        EXPECT(0x3d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0281
        gbc.setState(0xa07, 0x22e3, 0xadb0, 0x8ada, 0xd49a, 0x14db, 0x1, 0x1);
        gbc.writeMem(0xa07, { 0xfa, 0x26, 0xc2 });
        gbc.writeMem(0xc226, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x22e3, gbc.sp());
        EXPECT(0xa0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc226));
        // FA 0282
        gbc.setState(0xa51c, 0x334b, 0x3c00, 0x47c0, 0x631b, 0x154b, 0x1, 0x1);
        gbc.writeMem(0x18d5, { 0x5d });
        gbc.writeMem(0xa51c, { 0xfa, 0xd5, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x334b, gbc.sp());
        EXPECT(0xa51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa51c));
        EXPECT(0xd5, gbc.readMem(0xa51d));
        EXPECT(0x18, gbc.readMem(0xa51e));
        // FA 0283
        gbc.setState(0x55d4, 0x943f, 0x6ab0, 0x74dc, 0xbd0b, 0x6d64, 0x1, 0x0);
        gbc.writeMem(0x55d4, { 0xfa, 0x33, 0x7f });
        gbc.writeMem(0x7f33, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x943f, gbc.sp());
        EXPECT(0x55d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0285
        gbc.setState(0x12eb, 0x2cd1, 0xdfb0, 0x7cbd, 0xa364, 0xc393, 0x1, 0x1);
        gbc.writeMem(0x12eb, { 0xfa, 0x57, 0x8e });
        gbc.writeMem(0x8e57, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2cd1, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8e57));
        // FA 0286
        gbc.setState(0x3fa4, 0x17fd, 0xea0, 0x4966, 0xe955, 0x7ae7, 0x0, 0x1);
        gbc.writeMem(0x3fa4, { 0xfa, 0xb6, 0x8c });
        gbc.writeMem(0x8cb6, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x17fd, gbc.sp());
        EXPECT(0x3fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8cb6));
        // FA 0287
        gbc.setState(0xd17, 0x4618, 0xe9e0, 0xf5f1, 0x1bda, 0x2a6f, 0x1, 0x1);
        gbc.writeMem(0xd17, { 0xfa, 0xc2, 0xf7 });
        gbc.writeMem(0xf7c2, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4618, gbc.sp());
        EXPECT(0xd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf7c2));
        // FA 0288
        gbc.setState(0xe526, 0xc80d, 0xab50, 0x4cd0, 0x6b63, 0x9f3d, 0x1, 0x1);
        gbc.writeMem(0x4811, { 0x43 });
        gbc.writeMem(0xe526, { 0xfa, 0x11, 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc80d, gbc.sp());
        EXPECT(0xe529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe526));
        EXPECT(0x11, gbc.readMem(0xe527));
        EXPECT(0x48, gbc.readMem(0xe528));
        // FA 0289
        gbc.setState(0x2217, 0xebfe, 0x6260, 0xe420, 0xe435, 0xae2, 0x1, 0x1);
        gbc.writeMem(0x1e8d, { 0xc7 });
        gbc.writeMem(0x2217, { 0xfa, 0x8d, 0x1e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xebfe, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 028A
        gbc.setState(0xb0e0, 0xd036, 0x4680, 0x3e95, 0xbda6, 0xfaaa, 0x1, 0x1);
        gbc.writeMem(0xb0e0, { 0xfa, 0x30, 0xc6 });
        gbc.writeMem(0xc630, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd036, gbc.sp());
        EXPECT(0xb0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb0e0));
        EXPECT(0x30, gbc.readMem(0xb0e1));
        EXPECT(0xc6, gbc.readMem(0xb0e2));
        EXPECT(0x7b, gbc.readMem(0xc630));
        // FA 028B
        gbc.setState(0x5464, 0x9bf0, 0x8cf0, 0x1659, 0xa0b2, 0xeea9, 0x0, 0x0);
        gbc.writeMem(0x5464, { 0xfa, 0xbc, 0xfd });
        gbc.writeMem(0xfdbc, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9bf0, gbc.sp());
        EXPECT(0x5467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xfdbc));
        // FA 028C
        gbc.setState(0xcc8c, 0x1da7, 0xce20, 0x6979, 0xc1d0, 0xdcef, 0x1, 0x1);
        gbc.writeMem(0xf22, { 0xaf });
        gbc.writeMem(0xcc8c, { 0xfa, 0x22, 0xf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1da7, gbc.sp());
        EXPECT(0xcc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcc8c));
        EXPECT(0x22, gbc.readMem(0xcc8d));
        EXPECT(0xf, gbc.readMem(0xcc8e));
        // FA 028D
        gbc.setState(0x6e0c, 0xf715, 0x6e70, 0xe992, 0xfe52, 0x70fe, 0x1, 0x1);
        gbc.writeMem(0x7a1, { 0x5d });
        gbc.writeMem(0x6e0c, { 0xfa, 0xa1, 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf715, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 028E
        gbc.setState(0xea2d, 0x6e5c, 0xbfe0, 0x1239, 0x53fb, 0x968d, 0x0, 0x0);
        gbc.writeMem(0x9840, { 0x52 });
        gbc.writeMem(0xea2d, { 0xfa, 0x40, 0x98 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6e5c, gbc.sp());
        EXPECT(0xea30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9840));
        EXPECT(0xfa, gbc.readMem(0xea2d));
        EXPECT(0x40, gbc.readMem(0xea2e));
        EXPECT(0x98, gbc.readMem(0xea2f));
        // FA 028F
        gbc.setState(0xb63f, 0x51a4, 0xbcb0, 0x6a5f, 0x19cf, 0xec3c, 0x0, 0x0);
        gbc.writeMem(0xbc6, { 0x24 });
        gbc.writeMem(0xb63f, { 0xfa, 0xc6, 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x51a4, gbc.sp());
        EXPECT(0xb642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb63f));
        EXPECT(0xc6, gbc.readMem(0xb640));
        EXPECT(0xb, gbc.readMem(0xb641));
        // FA 0290
        gbc.setState(0x2d2f, 0x96d0, 0xf940, 0x65a9, 0x3b53, 0x9efb, 0x0, 0x1);
        gbc.writeMem(0x2d2f, { 0xfa, 0x6b, 0x8a });
        gbc.writeMem(0x8a6b, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x96d0, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x8a6b));
        // FA 0291
        gbc.setState(0x6e65, 0x3236, 0x20e0, 0x79f2, 0x4fb5, 0x5d1f, 0x1, 0x1);
        gbc.writeMem(0x6025, { 0xcc });
        gbc.writeMem(0x6e65, { 0xfa, 0x25, 0x60 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3236, gbc.sp());
        EXPECT(0x6e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0292
        gbc.setState(0x2ef, 0xf1e, 0x7970, 0xeb56, 0x81d3, 0xabd9, 0x1, 0x1);
        gbc.writeMem(0x2ef, { 0xfa, 0x51, 0xa3 });
        gbc.writeMem(0xa351, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf1e, gbc.sp());
        EXPECT(0x2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa351));
        // FA 0293
        gbc.setState(0xbc87, 0xa869, 0x4550, 0x44b8, 0xeb6f, 0xed83, 0x1, 0x0);
        gbc.writeMem(0x6052, { 0xfb });
        gbc.writeMem(0xbc87, { 0xfa, 0x52, 0x60 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa869, gbc.sp());
        EXPECT(0xbc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbc87));
        EXPECT(0x52, gbc.readMem(0xbc88));
        EXPECT(0x60, gbc.readMem(0xbc89));
        // FA 0294
        gbc.setState(0xcc43, 0xfc9d, 0xd4e0, 0x50ad, 0xccfc, 0x6960, 0x0, 0x0);
        gbc.writeMem(0xa6e6, { 0x98 });
        gbc.writeMem(0xcc43, { 0xfa, 0xe6, 0xa6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfc9d, gbc.sp());
        EXPECT(0xcc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa6e6));
        EXPECT(0xfa, gbc.readMem(0xcc43));
        EXPECT(0xe6, gbc.readMem(0xcc44));
        EXPECT(0xa6, gbc.readMem(0xcc45));
        // FA 0295
        gbc.setState(0x20d9, 0xe7ca, 0x4460, 0xa9c8, 0x325, 0xa8a6, 0x1, 0x0);
        gbc.writeMem(0x1aad, { 0xda });
        gbc.writeMem(0x20d9, { 0xfa, 0xad, 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe7ca, gbc.sp());
        EXPECT(0x20dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0296
        gbc.setState(0x7512, 0x4f92, 0x8500, 0x9eed, 0xddfe, 0xa590, 0x0, 0x0);
        gbc.writeMem(0x7512, { 0xfa, 0xc3, 0xbd });
        gbc.writeMem(0xbdc3, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4f92, gbc.sp());
        EXPECT(0x7515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbdc3));
        // FA 0297
        gbc.setState(0xa6e1, 0x7181, 0xb2d0, 0xced2, 0xdf0, 0x2ed5, 0x1, 0x1);
        gbc.writeMem(0xa6e1, { 0xfa, 0x49, 0xb2 });
        gbc.writeMem(0xb249, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7181, gbc.sp());
        EXPECT(0xa6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa6e1));
        EXPECT(0x49, gbc.readMem(0xa6e2));
        EXPECT(0xb2, gbc.readMem(0xa6e3));
        EXPECT(0x3e, gbc.readMem(0xb249));
        // FA 0298
        gbc.setState(0x586d, 0xb75c, 0x3480, 0xd772, 0xb87d, 0x20e2, 0x0, 0x0);
        gbc.writeMem(0x5828, { 0x85 });
        gbc.writeMem(0x586d, { 0xfa, 0x28, 0x58 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb75c, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0299
        gbc.setState(0x6ccc, 0xf77a, 0x46a0, 0x2db5, 0xe8b3, 0x6b9, 0x0, 0x0);
        gbc.writeMem(0x6ccc, { 0xfa, 0x17, 0xa1 });
        gbc.writeMem(0xa117, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa117));
        // FA 029A
        gbc.setState(0x5a92, 0x7582, 0x9b20, 0x16b6, 0x67dd, 0x6e51, 0x0, 0x0);
        gbc.writeMem(0x5a92, { 0xfa, 0xf9, 0x7a });
        gbc.writeMem(0x7af9, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7582, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 029B
        gbc.setState(0x6429, 0x64b2, 0x6da0, 0xd30, 0xc285, 0x47fd, 0x1, 0x0);
        gbc.writeMem(0xe40, { 0x95 });
        gbc.writeMem(0x6429, { 0xfa, 0x40, 0xe });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x64b2, gbc.sp());
        EXPECT(0x642c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 029C
        gbc.setState(0x637e, 0xa730, 0xb130, 0x54e, 0x5f, 0xf13, 0x1, 0x1);
        gbc.writeMem(0x637e, { 0xfa, 0xef, 0xb8 });
        gbc.writeMem(0xb8ef, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa730, gbc.sp());
        EXPECT(0x6381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb8ef));
        // FA 029D
        gbc.setState(0xf75, 0xe4e7, 0xfb50, 0x6e62, 0xd588, 0xcca4, 0x0, 0x1);
        gbc.writeMem(0xf75, { 0xfa, 0xee, 0x53 });
        gbc.writeMem(0x53ee, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe4e7, gbc.sp());
        EXPECT(0xf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 029E
        gbc.setState(0xb78a, 0xa000, 0x9b10, 0x4414, 0x7869, 0xfa0a, 0x1, 0x0);
        gbc.writeMem(0x7c39, { 0xea });
        gbc.writeMem(0xb78a, { 0xfa, 0x39, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa000, gbc.sp());
        EXPECT(0xb78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb78a));
        EXPECT(0x39, gbc.readMem(0xb78b));
        EXPECT(0x7c, gbc.readMem(0xb78c));
        // FA 029F
        gbc.setState(0x8b8e, 0xce6f, 0x81d0, 0xc5de, 0x381f, 0x3d01, 0x0, 0x1);
        gbc.writeMem(0x8b8e, { 0xfa, 0x9a, 0xe8 });
        gbc.writeMem(0xe89a, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xce6f, gbc.sp());
        EXPECT(0x8b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8b8e));
        EXPECT(0x9a, gbc.readMem(0x8b8f));
        EXPECT(0xe8, gbc.readMem(0x8b90));
        EXPECT(0x1c, gbc.readMem(0xe89a));
        // FA 02A1
        gbc.setState(0xb235, 0xbcec, 0x3e80, 0x8b55, 0xd9e2, 0x491a, 0x1, 0x0);
        gbc.writeMem(0x93a3, { 0x1e });
        gbc.writeMem(0xb235, { 0xfa, 0xa3, 0x93 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbcec, gbc.sp());
        EXPECT(0xb238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x93a3));
        EXPECT(0xfa, gbc.readMem(0xb235));
        EXPECT(0xa3, gbc.readMem(0xb236));
        EXPECT(0x93, gbc.readMem(0xb237));
        // FA 02A2
        gbc.setState(0x8f35, 0x6917, 0x24c0, 0x9447, 0x1182, 0x20e3, 0x0, 0x0);
        gbc.writeMem(0x1d52, { 0xed });
        gbc.writeMem(0x8f35, { 0xfa, 0x52, 0x1d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6917, gbc.sp());
        EXPECT(0x8f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8f35));
        EXPECT(0x52, gbc.readMem(0x8f36));
        EXPECT(0x1d, gbc.readMem(0x8f37));
        // FA 02A3
        gbc.setState(0x57d7, 0x65d4, 0xee10, 0xf55e, 0xe042, 0xf0bc, 0x1, 0x0);
        gbc.writeMem(0x7a1, { 0x5d });
        gbc.writeMem(0x57d7, { 0xfa, 0xa1, 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x65d4, gbc.sp());
        EXPECT(0x57da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02A4
        gbc.setState(0x8bb5, 0xf608, 0xa970, 0x6268, 0xc133, 0x2f89, 0x0, 0x0);
        gbc.writeMem(0x4b65, { 0x5c });
        gbc.writeMem(0x8bb5, { 0xfa, 0x65, 0x4b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf608, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8bb5));
        EXPECT(0x65, gbc.readMem(0x8bb6));
        EXPECT(0x4b, gbc.readMem(0x8bb7));
        // FA 02A5
        gbc.setState(0x6bb7, 0xe8ab, 0xaa20, 0x481a, 0xb163, 0x5feb, 0x1, 0x0);
        gbc.writeMem(0x1486, { 0x6a });
        gbc.writeMem(0x6bb7, { 0xfa, 0x86, 0x14 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0x6bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02A6
        gbc.setState(0xe337, 0x9b00, 0x3730, 0x793f, 0x9a8, 0x9ccd, 0x0, 0x1);
        gbc.writeMem(0x89d1, { 0x19 });
        gbc.writeMem(0xe337, { 0xfa, 0xd1, 0x89 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0xe33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x89d1));
        EXPECT(0xfa, gbc.readMem(0xe337));
        EXPECT(0xd1, gbc.readMem(0xe338));
        EXPECT(0x89, gbc.readMem(0xe339));
        // FA 02A7
        gbc.setState(0xd3a7, 0x5529, 0xfa40, 0xbe5a, 0x5f6b, 0x7b73, 0x0, 0x1);
        gbc.writeMem(0xa84d, { 0xf0 });
        gbc.writeMem(0xd3a7, { 0xfa, 0x4d, 0xa8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5529, gbc.sp());
        EXPECT(0xd3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa84d));
        EXPECT(0xfa, gbc.readMem(0xd3a7));
        EXPECT(0x4d, gbc.readMem(0xd3a8));
        EXPECT(0xa8, gbc.readMem(0xd3a9));
        // FA 02A8
        gbc.setState(0x926e, 0x8db3, 0x6450, 0xe2e4, 0xf3dd, 0xb092, 0x0, 0x1);
        gbc.writeMem(0x926e, { 0xfa, 0xef, 0xca });
        gbc.writeMem(0xcaef, { 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8db3, gbc.sp());
        EXPECT(0x9271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x926e));
        EXPECT(0xef, gbc.readMem(0x926f));
        EXPECT(0xca, gbc.readMem(0x9270));
        EXPECT(0x12, gbc.readMem(0xcaef));
        // FA 02A9
        gbc.setState(0xacf3, 0xf7e5, 0xd810, 0x9af9, 0x124f, 0xdd05, 0x1, 0x1);
        gbc.writeMem(0x9582, { 0x98 });
        gbc.writeMem(0xacf3, { 0xfa, 0x82, 0x95 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf7e5, gbc.sp());
        EXPECT(0xacf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9582));
        EXPECT(0xfa, gbc.readMem(0xacf3));
        EXPECT(0x82, gbc.readMem(0xacf4));
        EXPECT(0x95, gbc.readMem(0xacf5));
        // FA 02AA
        gbc.setState(0x38f5, 0xbf66, 0xadc0, 0xf61b, 0x2770, 0x6a0c, 0x1, 0x0);
        gbc.writeMem(0x38f5, { 0xfa, 0xee, 0x71 });
        gbc.writeMem(0x71ee, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbf66, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02AB
        gbc.setState(0x8340, 0xe4a2, 0xa1b0, 0xdd5, 0x3edd, 0x66da, 0x0, 0x0);
        gbc.writeMem(0x8340, { 0xfa, 0xfd, 0x98 });
        gbc.writeMem(0x98fd, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe4a2, gbc.sp());
        EXPECT(0x8343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8340));
        EXPECT(0xfd, gbc.readMem(0x8341));
        EXPECT(0x98, gbc.readMem(0x8342));
        EXPECT(0x1a, gbc.readMem(0x98fd));
        // FA 02AC
        gbc.setState(0x7e23, 0xdae4, 0xe7a0, 0xeb2a, 0x2b1c, 0xe5f0, 0x1, 0x1);
        gbc.writeMem(0x296, { 0x23 });
        gbc.writeMem(0x7e23, { 0xfa, 0x96, 0x2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdae4, gbc.sp());
        EXPECT(0x7e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02AD
        gbc.setState(0x1c56, 0xaf55, 0x42d0, 0x4891, 0xdaf5, 0xe3ee, 0x0, 0x1);
        gbc.writeMem(0x1c56, { 0xfa, 0x45, 0x78 });
        gbc.writeMem(0x7845, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaf55, gbc.sp());
        EXPECT(0x1c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02AE
        gbc.setState(0xb054, 0x1dd3, 0x6330, 0xedd6, 0xff0e, 0x977e, 0x1, 0x0);
        gbc.writeMem(0xb054, { 0xfa, 0xc7, 0xdc });
        gbc.writeMem(0xdcc7, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1dd3, gbc.sp());
        EXPECT(0xb057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb054));
        EXPECT(0xc7, gbc.readMem(0xb055));
        EXPECT(0xdc, gbc.readMem(0xb056));
        EXPECT(0xee, gbc.readMem(0xdcc7));
        // FA 02AF
        gbc.setState(0x7b7a, 0xf4a1, 0x2360, 0xbaf8, 0x6752, 0x2c92, 0x1, 0x1);
        gbc.writeMem(0x7b7a, { 0xfa, 0x16, 0xe8 });
        gbc.writeMem(0xe816, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf4a1, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe816));
        // FA 02B0
        gbc.setState(0x33a4, 0x98b0, 0x53c0, 0xca23, 0x8689, 0x72f6, 0x0, 0x1);
        gbc.writeMem(0x33a4, { 0xfa, 0xba, 0xe2 });
        gbc.writeMem(0xe2ba, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0x33a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xe2ba));
        // FA 02B1
        gbc.setState(0x3b44, 0x8521, 0x5120, 0xeba2, 0xd8a2, 0x5e7c, 0x0, 0x0);
        gbc.writeMem(0x1410, { 0xb4 });
        gbc.writeMem(0x3b44, { 0xfa, 0x10, 0x14 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8521, gbc.sp());
        EXPECT(0x3b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02B2
        gbc.setState(0xb15a, 0x382a, 0xd370, 0xeae3, 0x282a, 0xb1ab, 0x1, 0x0);
        gbc.writeMem(0x247b, { 0x25 });
        gbc.writeMem(0xb15a, { 0xfa, 0x7b, 0x24 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x382a, gbc.sp());
        EXPECT(0xb15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb15a));
        EXPECT(0x7b, gbc.readMem(0xb15b));
        EXPECT(0x24, gbc.readMem(0xb15c));
        // FA 02B3
        gbc.setState(0xd5bc, 0xf5ea, 0x29d0, 0x9caa, 0xb375, 0x60e, 0x0, 0x1);
        gbc.writeMem(0xa54f, { 0x16 });
        gbc.writeMem(0xd5bc, { 0xfa, 0x4f, 0xa5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf5ea, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa54f));
        EXPECT(0xfa, gbc.readMem(0xd5bc));
        EXPECT(0x4f, gbc.readMem(0xd5bd));
        EXPECT(0xa5, gbc.readMem(0xd5be));
        // FA 02B4
        gbc.setState(0x8068, 0x2b72, 0xcdc0, 0xedfc, 0xdb72, 0x3f3e, 0x0, 0x0);
        gbc.writeMem(0xb88, { 0xf1 });
        gbc.writeMem(0x8068, { 0xfa, 0x88, 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2b72, gbc.sp());
        EXPECT(0x806b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8068));
        EXPECT(0x88, gbc.readMem(0x8069));
        EXPECT(0xb, gbc.readMem(0x806a));
        // FA 02B5
        gbc.setState(0xe6b, 0xf328, 0x7fb0, 0x7535, 0x2dc4, 0x1542, 0x1, 0x1);
        gbc.writeMem(0x44d, { 0xa5 });
        gbc.writeMem(0xe6b, { 0xfa, 0x4d, 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf328, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02B6
        gbc.setState(0xc70a, 0xa047, 0x6080, 0x1cc0, 0x1be9, 0xce4d, 0x1, 0x0);
        gbc.writeMem(0x3041, { 0x9d });
        gbc.writeMem(0xc70a, { 0xfa, 0x41, 0x30 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0xc70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc70a));
        EXPECT(0x41, gbc.readMem(0xc70b));
        EXPECT(0x30, gbc.readMem(0xc70c));
        // FA 02B7
        gbc.setState(0xd049, 0xa35d, 0xf320, 0x81f1, 0x719b, 0xf228, 0x1, 0x1);
        gbc.writeMem(0x6c19, { 0x84 });
        gbc.writeMem(0xd049, { 0xfa, 0x19, 0x6c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0xd04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd049));
        EXPECT(0x19, gbc.readMem(0xd04a));
        EXPECT(0x6c, gbc.readMem(0xd04b));
        // FA 02B8
        gbc.setState(0x8200, 0x1fdd, 0x1620, 0x94dc, 0x50ed, 0xb703, 0x1, 0x0);
        gbc.writeMem(0x3793, { 0xeb });
        gbc.writeMem(0x8200, { 0xfa, 0x93, 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1fdd, gbc.sp());
        EXPECT(0x8203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8200));
        EXPECT(0x93, gbc.readMem(0x8201));
        EXPECT(0x37, gbc.readMem(0x8202));
        // FA 02B9
        gbc.setState(0xae0c, 0x7cd2, 0x91b0, 0x67fc, 0xe575, 0x4055, 0x0, 0x0);
        gbc.writeMem(0xae0c, { 0xfa, 0x6, 0xdc });
        gbc.writeMem(0xdc06, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7cd2, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xae0c));
        EXPECT(0x6, gbc.readMem(0xae0d));
        EXPECT(0xdc, gbc.readMem(0xae0e));
        EXPECT(0xb7, gbc.readMem(0xdc06));
        // FA 02BB
        gbc.setState(0x355f, 0x1d36, 0xf0d0, 0x1f9b, 0x10a5, 0xf588, 0x1, 0x0);
        gbc.writeMem(0x355f, { 0xfa, 0x7b, 0x95 });
        gbc.writeMem(0x957b, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1d36, gbc.sp());
        EXPECT(0x3562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x957b));
        // FA 02BC
        gbc.setState(0xb1aa, 0xde70, 0x5760, 0x2193, 0x80c6, 0x4d83, 0x0, 0x0);
        gbc.writeMem(0x88d2, { 0xad });
        gbc.writeMem(0xb1aa, { 0xfa, 0xd2, 0x88 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xde70, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x88d2));
        EXPECT(0xfa, gbc.readMem(0xb1aa));
        EXPECT(0xd2, gbc.readMem(0xb1ab));
        EXPECT(0x88, gbc.readMem(0xb1ac));
        // FA 02BD
        gbc.setState(0xa0d8, 0x3f8b, 0x6f0, 0xcf1f, 0x7e3b, 0x9663, 0x0, 0x1);
        gbc.writeMem(0xa0d8, { 0xfa, 0xfe, 0xaa });
        gbc.writeMem(0xaafe, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3f8b, gbc.sp());
        EXPECT(0xa0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa0d8));
        EXPECT(0xfe, gbc.readMem(0xa0d9));
        EXPECT(0xaa, gbc.readMem(0xa0da));
        EXPECT(0xa9, gbc.readMem(0xaafe));
        // FA 02BF
        gbc.setState(0x6b06, 0x5541, 0xb410, 0xdeba, 0x74e0, 0xe306, 0x0, 0x0);
        gbc.writeMem(0x6b06, { 0xfa, 0xc8, 0x72 });
        gbc.writeMem(0x72c8, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5541, gbc.sp());
        EXPECT(0x6b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02C0
        gbc.setState(0x8e32, 0xb8f2, 0x2fe0, 0x2235, 0x922a, 0x5d02, 0x0, 0x0);
        gbc.writeMem(0x829, { 0xff });
        gbc.writeMem(0x8e32, { 0xfa, 0x29, 0x8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb8f2, gbc.sp());
        EXPECT(0x8e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8e32));
        EXPECT(0x29, gbc.readMem(0x8e33));
        EXPECT(0x8, gbc.readMem(0x8e34));
        // FA 02C1
        gbc.setState(0x4956, 0x4a74, 0xe310, 0x803d, 0x5d5e, 0x4427, 0x0, 0x1);
        gbc.writeMem(0x4956, { 0xfa, 0x4a, 0x97 });
        gbc.writeMem(0x974a, { 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4a74, gbc.sp());
        EXPECT(0x4959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x974a));
        // FA 02C2
        gbc.setState(0xb0ec, 0x980b, 0xfdf0, 0xd193, 0x72fa, 0x9534, 0x1, 0x0);
        gbc.writeMem(0xb0ec, { 0xfa, 0xf4, 0xf0 });
        gbc.writeMem(0xf0f4, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x980b, gbc.sp());
        EXPECT(0xb0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb0ec));
        EXPECT(0xf4, gbc.readMem(0xb0ed));
        EXPECT(0xf0, gbc.readMem(0xb0ee));
        EXPECT(0x8e, gbc.readMem(0xf0f4));
        // FA 02C3
        gbc.setState(0xc75a, 0x5c06, 0xb020, 0x2103, 0xe9d6, 0x3b55, 0x0, 0x0);
        gbc.writeMem(0xc75a, { 0xfa, 0xda, 0xf3 });
        gbc.writeMem(0xf3da, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5c06, gbc.sp());
        EXPECT(0xc75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc75a));
        EXPECT(0xda, gbc.readMem(0xc75b));
        EXPECT(0xf3, gbc.readMem(0xc75c));
        EXPECT(0x95, gbc.readMem(0xf3da));
        // FA 02C4
        gbc.setState(0xe333, 0x171a, 0x7e80, 0x859b, 0xeb6e, 0xd179, 0x0, 0x0);
        gbc.writeMem(0xae5e, { 0xb4 });
        gbc.writeMem(0xe333, { 0xfa, 0x5e, 0xae });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x171a, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xae5e));
        EXPECT(0xfa, gbc.readMem(0xe333));
        EXPECT(0x5e, gbc.readMem(0xe334));
        EXPECT(0xae, gbc.readMem(0xe335));
        // FA 02C5
        gbc.setState(0xbffd, 0x2dcd, 0xc670, 0x1b7e, 0x5ab2, 0x5958, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0x51 });
        gbc.writeMem(0xbffd, { 0xfa, 0x6a, 0x41 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0xc000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbffd));
        EXPECT(0x6a, gbc.readMem(0xbffe));
        EXPECT(0x41, gbc.readMem(0xbfff));
        // FA 02C6
        gbc.setState(0x3a5b, 0x88b8, 0x2150, 0xfe0, 0x63c6, 0x6ca1, 0x0, 0x1);
        gbc.writeMem(0x2325, { 0x61 });
        gbc.writeMem(0x3a5b, { 0xfa, 0x25, 0x23 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0x3a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02C7
        gbc.setState(0x4072, 0x8cdb, 0x55f0, 0xad65, 0x98df, 0x533d, 0x0, 0x1);
        gbc.writeMem(0x1529, { 0xf0 });
        gbc.writeMem(0x4072, { 0xfa, 0x29, 0x15 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8cdb, gbc.sp());
        EXPECT(0x4075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02C8
        gbc.setState(0xa3a0, 0xf9ef, 0xcb40, 0x962a, 0x1b0e, 0x4ee6, 0x0, 0x1);
        gbc.writeMem(0x337b, { 0x45 });
        gbc.writeMem(0xa3a0, { 0xfa, 0x7b, 0x33 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0xa3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa3a0));
        EXPECT(0x7b, gbc.readMem(0xa3a1));
        EXPECT(0x33, gbc.readMem(0xa3a2));
        // FA 02C9
        gbc.setState(0xe649, 0x9125, 0x8ff0, 0xfa12, 0xdaa3, 0x594c, 0x1, 0x1);
        gbc.writeMem(0x6da4, { 0xff });
        gbc.writeMem(0xe649, { 0xfa, 0xa4, 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9125, gbc.sp());
        EXPECT(0xe64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe649));
        EXPECT(0xa4, gbc.readMem(0xe64a));
        EXPECT(0x6d, gbc.readMem(0xe64b));
        // FA 02CA
        gbc.setState(0x54a, 0x73c8, 0xe740, 0xb38b, 0xec0, 0x9aed, 0x0, 0x0);
        gbc.writeMem(0x54a, { 0xfa, 0x61, 0xc });
        gbc.writeMem(0xc61, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0x54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02CB
        gbc.setState(0x44b, 0xac91, 0xcc70, 0x76f8, 0xd6e1, 0x56da, 0x1, 0x0);
        gbc.writeMem(0x44b, { 0xfa, 0xf0, 0xa5 });
        gbc.writeMem(0xa5f0, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xac91, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa5f0));
        // FA 02CC
        gbc.setState(0xd554, 0x4a17, 0x5fb0, 0xbbd8, 0x73b8, 0x968d, 0x1, 0x0);
        gbc.writeMem(0x7b8, { 0x2a });
        gbc.writeMem(0xd554, { 0xfa, 0xb8, 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4a17, gbc.sp());
        EXPECT(0xd557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd554));
        EXPECT(0xb8, gbc.readMem(0xd555));
        EXPECT(0x7, gbc.readMem(0xd556));
        // FA 02CD
        gbc.setState(0xe242, 0x9b58, 0xd350, 0xb0ae, 0x6450, 0xe94c, 0x0, 0x0);
        gbc.writeMem(0x11fa, { 0xe6 });
        gbc.writeMem(0xe242, { 0xfa, 0xfa, 0x11 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe242));
        EXPECT(0xfa, gbc.readMem(0xe243));
        EXPECT(0x11, gbc.readMem(0xe244));
        // FA 02CE
        gbc.setState(0x72fc, 0xd697, 0x8a20, 0x401e, 0x2a58, 0x3c79, 0x0, 0x1);
        gbc.writeMem(0x72fc, { 0xfa, 0x47, 0x9d });
        gbc.writeMem(0x9d47, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd697, gbc.sp());
        EXPECT(0x72ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9d47));
        // FA 02CF
        gbc.setState(0xbcf5, 0x27f2, 0xf470, 0x2150, 0xaa19, 0xa559, 0x0, 0x1);
        gbc.writeMem(0xa1da, { 0x16 });
        gbc.writeMem(0xbcf5, { 0xfa, 0xda, 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x27f2, gbc.sp());
        EXPECT(0xbcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa1da));
        EXPECT(0xfa, gbc.readMem(0xbcf5));
        EXPECT(0xda, gbc.readMem(0xbcf6));
        EXPECT(0xa1, gbc.readMem(0xbcf7));
        // FA 02D0
        gbc.setState(0x7b81, 0xdbe0, 0x7300, 0xe39d, 0x821b, 0x5378, 0x0, 0x0);
        gbc.writeMem(0x7b81, { 0xfa, 0xf5, 0xf4 });
        gbc.writeMem(0xf4f5, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdbe0, gbc.sp());
        EXPECT(0x7b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xf4f5));
        // FA 02D1
        gbc.setState(0x634a, 0x3857, 0xe760, 0x1d67, 0x1014, 0x883f, 0x1, 0x1);
        gbc.writeMem(0x4641, { 0xd2 });
        gbc.writeMem(0x634a, { 0xfa, 0x41, 0x46 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3857, gbc.sp());
        EXPECT(0x634d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02D2
        gbc.setState(0x10e3, 0xe2a1, 0xc690, 0x7761, 0x302e, 0xd3d5, 0x0, 0x1);
        gbc.writeMem(0x39f, { 0x85 });
        gbc.writeMem(0x10e3, { 0xfa, 0x9f, 0x3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe2a1, gbc.sp());
        EXPECT(0x10e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02D3
        gbc.setState(0xc2b6, 0x145e, 0xd410, 0x82f7, 0xa0bd, 0x3499, 0x0, 0x0);
        gbc.writeMem(0xc2b6, { 0xfa, 0x66, 0xd7 });
        gbc.writeMem(0xd766, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x145e, gbc.sp());
        EXPECT(0xc2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc2b6));
        EXPECT(0x66, gbc.readMem(0xc2b7));
        EXPECT(0xd7, gbc.readMem(0xc2b8));
        EXPECT(0x1e, gbc.readMem(0xd766));
        // FA 02D4
        gbc.setState(0x9ede, 0x69b8, 0x2660, 0xab3c, 0xe5f9, 0xbd33, 0x0, 0x0);
        gbc.writeMem(0x9ede, { 0xfa, 0x42, 0xf5 });
        gbc.writeMem(0xf542, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x69b8, gbc.sp());
        EXPECT(0x9ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9ede));
        EXPECT(0x42, gbc.readMem(0x9edf));
        EXPECT(0xf5, gbc.readMem(0x9ee0));
        EXPECT(0xce, gbc.readMem(0xf542));
        // FA 02D6
        gbc.setState(0xcc15, 0x566c, 0xb970, 0xa9a6, 0x2c85, 0xe73d, 0x0, 0x0);
        gbc.writeMem(0x4f4f, { 0x84 });
        gbc.writeMem(0xcc15, { 0xfa, 0x4f, 0x4f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x566c, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcc15));
        EXPECT(0x4f, gbc.readMem(0xcc16));
        EXPECT(0x4f, gbc.readMem(0xcc17));
        // FA 02D7
        gbc.setState(0xadbe, 0xc504, 0x4570, 0x61f9, 0xa712, 0xf31c, 0x1, 0x0);
        gbc.writeMem(0xadbe, { 0xfa, 0x23, 0xca });
        gbc.writeMem(0xca23, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc504, gbc.sp());
        EXPECT(0xadc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xadbe));
        EXPECT(0x23, gbc.readMem(0xadbf));
        EXPECT(0xca, gbc.readMem(0xadc0));
        EXPECT(0xe9, gbc.readMem(0xca23));
        // FA 02D8
        gbc.setState(0x7a86, 0x38b8, 0xe770, 0x9a07, 0x8af1, 0x6154, 0x0, 0x0);
        gbc.writeMem(0x4bbe, { 0xeb });
        gbc.writeMem(0x7a86, { 0xfa, 0xbe, 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x38b8, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02D9
        gbc.setState(0x3971, 0x5f4c, 0xdb90, 0x9aa6, 0x5388, 0xc700, 0x1, 0x1);
        gbc.writeMem(0x3971, { 0xfa, 0xb8, 0xd0 });
        gbc.writeMem(0xd0b8, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5f4c, gbc.sp());
        EXPECT(0x3974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd0b8));
        // FA 02DA
        gbc.setState(0x1680, 0x6f8c, 0xe060, 0x6824, 0x205b, 0x9cbc, 0x0, 0x0);
        gbc.writeMem(0x1680, { 0xfa, 0x44, 0x1d });
        gbc.writeMem(0x1d44, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6f8c, gbc.sp());
        EXPECT(0x1683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02DB
        gbc.setState(0x4e58, 0x964c, 0x5790, 0x2190, 0xa9d5, 0x25f5, 0x1, 0x0);
        gbc.writeMem(0x4e58, { 0xfa, 0xb0, 0xc3 });
        gbc.writeMem(0xc3b0, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x964c, gbc.sp());
        EXPECT(0x4e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc3b0));
        // FA 02DC
        gbc.setState(0x571a, 0x6d4, 0x8c60, 0xf0c6, 0xe6d, 0x280c, 0x1, 0x1);
        gbc.writeMem(0x571a, { 0xfa, 0xb, 0xa1 });
        gbc.writeMem(0xa10b, { 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6d4, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa10b));
        // FA 02DD
        gbc.setState(0x1030, 0x6f67, 0xd3f0, 0x6911, 0x1983, 0x3566, 0x0, 0x0);
        gbc.writeMem(0x1030, { 0xfa, 0x50, 0x9c });
        gbc.writeMem(0x9c50, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6f67, gbc.sp());
        EXPECT(0x1033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9c50));
        // FA 02DE
        gbc.setState(0xb8ca, 0xf9fd, 0xd010, 0x9ea9, 0xd1a1, 0xa57b, 0x0, 0x0);
        gbc.writeMem(0x63ed, { 0x48 });
        gbc.writeMem(0xb8ca, { 0xfa, 0xed, 0x63 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf9fd, gbc.sp());
        EXPECT(0xb8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb8ca));
        EXPECT(0xed, gbc.readMem(0xb8cb));
        EXPECT(0x63, gbc.readMem(0xb8cc));
        // FA 02DF
        gbc.setState(0xb5a7, 0x2d25, 0xd540, 0x7c06, 0x41b, 0x1865, 0x1, 0x1);
        gbc.writeMem(0x3e13, { 0xcb });
        gbc.writeMem(0xb5a7, { 0xfa, 0x13, 0x3e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2d25, gbc.sp());
        EXPECT(0xb5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb5a7));
        EXPECT(0x13, gbc.readMem(0xb5a8));
        EXPECT(0x3e, gbc.readMem(0xb5a9));
        // FA 02E0
        gbc.setState(0x1b19, 0x9e34, 0x3670, 0x8417, 0xdf7a, 0x3e35, 0x1, 0x0);
        gbc.writeMem(0xf6a, { 0xf6 });
        gbc.writeMem(0x1b19, { 0xfa, 0x6a, 0xf });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9e34, gbc.sp());
        EXPECT(0x1b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02E1
        gbc.setState(0xd8c, 0x3999, 0xda50, 0x3469, 0x3694, 0xabc, 0x0, 0x1);
        gbc.writeMem(0xd8c, { 0xfa, 0x7f, 0xab });
        gbc.writeMem(0xab7f, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3999, gbc.sp());
        EXPECT(0xd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xab7f));
        // FA 02E2
        gbc.setState(0xd74f, 0xdfd0, 0xa680, 0x6ba1, 0x2b9e, 0x326a, 0x0, 0x1);
        gbc.writeMem(0x13be, { 0xb2 });
        gbc.writeMem(0xd74f, { 0xfa, 0xbe, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdfd0, gbc.sp());
        EXPECT(0xd752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd74f));
        EXPECT(0xbe, gbc.readMem(0xd750));
        EXPECT(0x13, gbc.readMem(0xd751));
        // FA 02E3
        gbc.setState(0xa01c, 0x81f1, 0x7d20, 0xff63, 0x7663, 0xab74, 0x0, 0x1);
        gbc.writeMem(0xa01c, { 0xfa, 0xec, 0xd1 });
        gbc.writeMem(0xd1ec, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x81f1, gbc.sp());
        EXPECT(0xa01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa01c));
        EXPECT(0xec, gbc.readMem(0xa01d));
        EXPECT(0xd1, gbc.readMem(0xa01e));
        EXPECT(0x31, gbc.readMem(0xd1ec));
        // FA 02E4
        gbc.setState(0x7bc9, 0x9dd6, 0x3f00, 0xa0bf, 0x954, 0x7be3, 0x0, 0x0);
        gbc.writeMem(0x7bc9, { 0xfa, 0x8f, 0xa5 });
        gbc.writeMem(0xa58f, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0x7bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa58f));
        // FA 02E5
        gbc.setState(0xa03, 0x3fe5, 0x7940, 0xfefb, 0x4e41, 0x64fe, 0x1, 0x0);
        gbc.writeMem(0xa03, { 0xfa, 0x75, 0xbc });
        gbc.writeMem(0xbc75, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3fe5, gbc.sp());
        EXPECT(0xa06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbc75));
        // FA 02E6
        gbc.setState(0x20d4, 0x574f, 0x3450, 0x9a77, 0x91d4, 0xf392, 0x0, 0x1);
        gbc.writeMem(0x20d4, { 0xfa, 0xdb, 0x2b });
        gbc.writeMem(0x2bdb, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x574f, gbc.sp());
        EXPECT(0x20d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02E7
        gbc.setState(0xc387, 0x50fd, 0x2420, 0xc633, 0x3910, 0x1edf, 0x1, 0x1);
        gbc.writeMem(0xc387, { 0xfa, 0xfe, 0xc3 });
        gbc.writeMem(0xc3fe, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x50fd, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc387));
        EXPECT(0xfe, gbc.readMem(0xc388));
        EXPECT(0xc3, gbc.readMem(0xc389));
        EXPECT(0x8c, gbc.readMem(0xc3fe));
        // FA 02E8
        gbc.setState(0x778e, 0x1192, 0x2760, 0xe5cf, 0xabbb, 0xb22b, 0x0, 0x0);
        gbc.writeMem(0x778e, { 0xfa, 0x5b, 0x90 });
        gbc.writeMem(0x905b, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0x7791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x905b));
        // FA 02E9
        gbc.setState(0x726d, 0x9704, 0x210, 0xffb0, 0xc884, 0x799, 0x1, 0x1);
        gbc.writeMem(0x726d, { 0xfa, 0xa7, 0xf4 });
        gbc.writeMem(0xf4a7, { 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9704, gbc.sp());
        EXPECT(0x7270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf4a7));
        // FA 02EA
        gbc.setState(0xa8a0, 0xa926, 0xb890, 0xf2d5, 0x7e0d, 0x333b, 0x0, 0x0);
        gbc.writeMem(0x6438, { 0x4e });
        gbc.writeMem(0xa8a0, { 0xfa, 0x38, 0x64 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa926, gbc.sp());
        EXPECT(0xa8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa8a0));
        EXPECT(0x38, gbc.readMem(0xa8a1));
        EXPECT(0x64, gbc.readMem(0xa8a2));
        // FA 02EB
        gbc.setState(0x5b7d, 0x3e69, 0x79c0, 0x6604, 0x1f91, 0xc1f5, 0x0, 0x0);
        gbc.writeMem(0x4a62, { 0x17 });
        gbc.writeMem(0x5b7d, { 0xfa, 0x62, 0x4a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3e69, gbc.sp());
        EXPECT(0x5b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02EC
        gbc.setState(0x971e, 0x8b03, 0x4660, 0xe3d1, 0x71ee, 0xc6e9, 0x1, 0x1);
        gbc.writeMem(0x971e, { 0xfa, 0xb3, 0xbc });
        gbc.writeMem(0xbcb3, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8b03, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x971e));
        EXPECT(0xb3, gbc.readMem(0x971f));
        EXPECT(0xbc, gbc.readMem(0x9720));
        EXPECT(0x79, gbc.readMem(0xbcb3));
        // FA 02ED
        gbc.setState(0x6255, 0x57fb, 0xe6b0, 0x71f9, 0x79b, 0x2b64, 0x0, 0x1);
        gbc.writeMem(0x1dd2, { 0x8b });
        gbc.writeMem(0x6255, { 0xfa, 0xd2, 0x1d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x57fb, gbc.sp());
        EXPECT(0x6258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02EE
        gbc.setState(0x8b2c, 0x74ea, 0x1ba0, 0xe79, 0x3943, 0xa11a, 0x1, 0x0);
        gbc.writeMem(0x8b2c, { 0xfa, 0x9b, 0xf0 });
        gbc.writeMem(0xf09b, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x74ea, gbc.sp());
        EXPECT(0x8b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8b2c));
        EXPECT(0x9b, gbc.readMem(0x8b2d));
        EXPECT(0xf0, gbc.readMem(0x8b2e));
        EXPECT(0xf1, gbc.readMem(0xf09b));
        // FA 02EF
        gbc.setState(0xe3bf, 0x2279, 0xe800, 0x12f9, 0x9e0f, 0x2435, 0x1, 0x1);
        gbc.writeMem(0xb7cc, { 0xc0 });
        gbc.writeMem(0xe3bf, { 0xfa, 0xcc, 0xb7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2279, gbc.sp());
        EXPECT(0xe3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb7cc));
        EXPECT(0xfa, gbc.readMem(0xe3bf));
        EXPECT(0xcc, gbc.readMem(0xe3c0));
        EXPECT(0xb7, gbc.readMem(0xe3c1));
        // FA 02F0
        gbc.setState(0xb500, 0x7a2d, 0x8850, 0x44d7, 0x50d0, 0xf105, 0x0, 0x1);
        gbc.writeMem(0xb500, { 0xfa, 0x43, 0xc7 });
        gbc.writeMem(0xc743, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7a2d, gbc.sp());
        EXPECT(0xb503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb500));
        EXPECT(0x43, gbc.readMem(0xb501));
        EXPECT(0xc7, gbc.readMem(0xb502));
        EXPECT(0x4f, gbc.readMem(0xc743));
        // FA 02F1
        gbc.setState(0x1a41, 0xe8a1, 0xf630, 0x902, 0x3da8, 0x56d4, 0x0, 0x1);
        gbc.writeMem(0x1a41, { 0xfa, 0x6b, 0xb1 });
        gbc.writeMem(0xb16b, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe8a1, gbc.sp());
        EXPECT(0x1a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb16b));
        // FA 02F2
        gbc.setState(0x5433, 0xfca8, 0xf730, 0xee57, 0xb1dd, 0x824c, 0x1, 0x1);
        gbc.writeMem(0x276d, { 0x8a });
        gbc.writeMem(0x5433, { 0xfa, 0x6d, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfca8, gbc.sp());
        EXPECT(0x5436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02F3
        gbc.setState(0xe6c4, 0xa670, 0x41a0, 0xfb1b, 0x88e2, 0x595e, 0x1, 0x0);
        gbc.writeMem(0x56b, { 0x8 });
        gbc.writeMem(0xe6c4, { 0xfa, 0x6b, 0x5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa670, gbc.sp());
        EXPECT(0xe6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe6c4));
        EXPECT(0x6b, gbc.readMem(0xe6c5));
        EXPECT(0x5, gbc.readMem(0xe6c6));
        // FA 02F4
        gbc.setState(0x1073, 0xba20, 0xa900, 0xa28c, 0x832e, 0x128d, 0x1, 0x1);
        gbc.writeMem(0xa2b, { 0x59 });
        gbc.writeMem(0x1073, { 0xfa, 0x2b, 0xa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x1076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02F5
        gbc.setState(0xa0ac, 0xcca4, 0x6240, 0x9e6b, 0xe1ad, 0x9a44, 0x1, 0x1);
        gbc.writeMem(0x3c19, { 0x47 });
        gbc.writeMem(0xa0ac, { 0xfa, 0x19, 0x3c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcca4, gbc.sp());
        EXPECT(0xa0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa0ac));
        EXPECT(0x19, gbc.readMem(0xa0ad));
        EXPECT(0x3c, gbc.readMem(0xa0ae));
        // FA 02F7
        gbc.setState(0x1256, 0x61e6, 0x5070, 0xbb8e, 0xd168, 0x8ca0, 0x1, 0x1);
        gbc.writeMem(0x1256, { 0xfa, 0x7c, 0x19 });
        gbc.writeMem(0x197c, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x61e6, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 02F8
        gbc.setState(0xe1b6, 0x42a8, 0xd4d0, 0xea34, 0x505f, 0xfe24, 0x1, 0x1);
        gbc.writeMem(0x8bba, { 0x29 });
        gbc.writeMem(0xe1b6, { 0xfa, 0xba, 0x8b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x42a8, gbc.sp());
        EXPECT(0xe1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8bba));
        EXPECT(0xfa, gbc.readMem(0xe1b6));
        EXPECT(0xba, gbc.readMem(0xe1b7));
        EXPECT(0x8b, gbc.readMem(0xe1b8));
        // FA 02F9
        gbc.setState(0xa67a, 0xbf26, 0xfca0, 0x3ff3, 0xe052, 0xde1f, 0x0, 0x1);
        gbc.writeMem(0xa67a, { 0xfa, 0xd0, 0xf4 });
        gbc.writeMem(0xf4d0, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf26, gbc.sp());
        EXPECT(0xa67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa67a));
        EXPECT(0xd0, gbc.readMem(0xa67b));
        EXPECT(0xf4, gbc.readMem(0xa67c));
        EXPECT(0xcc, gbc.readMem(0xf4d0));
        // FA 02FA
        gbc.setState(0x3876, 0xe8df, 0xc380, 0x9797, 0x2dd, 0xad31, 0x1, 0x1);
        gbc.writeMem(0x345a, { 0x35 });
        gbc.writeMem(0x3876, { 0xfa, 0x5a, 0x34 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe8df, gbc.sp());
        EXPECT(0x3879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 02FB
        gbc.setState(0x8d12, 0x9ecc, 0x6540, 0xe27b, 0x5719, 0xed82, 0x0, 0x0);
        gbc.writeMem(0x8d12, { 0xfa, 0xf7, 0x93 });
        gbc.writeMem(0x93f7, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9ecc, gbc.sp());
        EXPECT(0x8d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8d12));
        EXPECT(0xf7, gbc.readMem(0x8d13));
        EXPECT(0x93, gbc.readMem(0x8d14));
        EXPECT(0xac, gbc.readMem(0x93f7));
        // FA 02FC
        gbc.setState(0x9d6a, 0x1851, 0xeb00, 0x865b, 0x2788, 0xebda, 0x1, 0x0);
        gbc.writeMem(0x8b9d, { 0xf1 });
        gbc.writeMem(0x9d6a, { 0xfa, 0x9d, 0x8b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1851, gbc.sp());
        EXPECT(0x9d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8b9d));
        EXPECT(0xfa, gbc.readMem(0x9d6a));
        EXPECT(0x9d, gbc.readMem(0x9d6b));
        EXPECT(0x8b, gbc.readMem(0x9d6c));
        // FA 02FD
        gbc.setState(0xe62c, 0x4e6d, 0x7db0, 0x6c6f, 0x7c5, 0x45bf, 0x0, 0x1);
        gbc.writeMem(0x402c, { 0x8c });
        gbc.writeMem(0xe62c, { 0xfa, 0x2c, 0x40 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4e6d, gbc.sp());
        EXPECT(0xe62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe62c));
        EXPECT(0x2c, gbc.readMem(0xe62d));
        EXPECT(0x40, gbc.readMem(0xe62e));
        // FA 02FE
        gbc.setState(0x2407, 0x9095, 0xf520, 0xd8c2, 0xf46e, 0xada, 0x1, 0x1);
        gbc.writeMem(0x2407, { 0xfa, 0x5b, 0xe8 });
        gbc.writeMem(0xe85b, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9095, gbc.sp());
        EXPECT(0x240a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe85b));
        // FA 02FF
        gbc.setState(0xaf79, 0xdd4d, 0xe280, 0x9d4a, 0xb71e, 0xd32b, 0x0, 0x1);
        gbc.writeMem(0x7494, { 0x35 });
        gbc.writeMem(0xaf79, { 0xfa, 0x94, 0x74 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdd4d, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaf79));
        EXPECT(0x94, gbc.readMem(0xaf7a));
        EXPECT(0x74, gbc.readMem(0xaf7b));
        // FA 0300
        gbc.setState(0xcbcf, 0xa6f4, 0x25e0, 0xd729, 0xfadf, 0x75ec, 0x1, 0x0);
        gbc.writeMem(0x1e4, { 0xd });
        gbc.writeMem(0xcbcf, { 0xfa, 0xe4, 0x1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa6f4, gbc.sp());
        EXPECT(0xcbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcbcf));
        EXPECT(0xe4, gbc.readMem(0xcbd0));
        EXPECT(0x1, gbc.readMem(0xcbd1));
        // FA 0301
        gbc.setState(0xb34d, 0x9395, 0x7a80, 0x7113, 0x8fd0, 0x2696, 0x1, 0x1);
        gbc.writeMem(0x3c52, { 0x66 });
        gbc.writeMem(0xb34d, { 0xfa, 0x52, 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9395, gbc.sp());
        EXPECT(0xb350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb34d));
        EXPECT(0x52, gbc.readMem(0xb34e));
        EXPECT(0x3c, gbc.readMem(0xb34f));
        // FA 0302
        gbc.setState(0x99a0, 0x73a0, 0xbeb0, 0x7c22, 0x8d5a, 0x8ecf, 0x0, 0x0);
        gbc.writeMem(0x1cd4, { 0x2 });
        gbc.writeMem(0x99a0, { 0xfa, 0xd4, 0x1c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x73a0, gbc.sp());
        EXPECT(0x99a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x99a0));
        EXPECT(0xd4, gbc.readMem(0x99a1));
        EXPECT(0x1c, gbc.readMem(0x99a2));
        // FA 0303
        gbc.setState(0x2c3a, 0x7074, 0x81b0, 0xc6b0, 0x11, 0xb212, 0x1, 0x0);
        gbc.writeMem(0x2c3a, { 0xfa, 0xca, 0xad });
        gbc.writeMem(0xadca, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7074, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xadca));
        // FA 0304
        gbc.setState(0x6475, 0xec9e, 0xeff0, 0xa454, 0xc500, 0x3875, 0x0, 0x1);
        gbc.writeMem(0x3312, { 0x1f });
        gbc.writeMem(0x6475, { 0xfa, 0x12, 0x33 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xec9e, gbc.sp());
        EXPECT(0x6478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0305
        gbc.setState(0x9f4b, 0x59f, 0xdb30, 0x7965, 0x64b, 0xf140, 0x0, 0x0);
        gbc.writeMem(0x135, { 0x11 });
        gbc.writeMem(0x9f4b, { 0xfa, 0x35, 0x1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0x9f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9f4b));
        EXPECT(0x35, gbc.readMem(0x9f4c));
        EXPECT(0x1, gbc.readMem(0x9f4d));
        // FA 0306
        gbc.setState(0xd18e, 0x4951, 0x5e40, 0x17c9, 0x68d9, 0xf18c, 0x0, 0x1);
        gbc.writeMem(0xc01d, { 0x9 });
        gbc.writeMem(0xd18e, { 0xfa, 0x1d, 0xc0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4951, gbc.sp());
        EXPECT(0xd191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc01d));
        EXPECT(0xfa, gbc.readMem(0xd18e));
        EXPECT(0x1d, gbc.readMem(0xd18f));
        EXPECT(0xc0, gbc.readMem(0xd190));
        // FA 0307
        gbc.setState(0x895, 0x4ace, 0x3670, 0x3541, 0xf6fd, 0xbeac, 0x1, 0x0);
        gbc.writeMem(0x895, { 0xfa, 0xdb, 0x9e });
        gbc.writeMem(0x9edb, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4ace, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9edb));
        // FA 0308
        gbc.setState(0xd31, 0x21cb, 0x7010, 0x8f9f, 0x12c9, 0xfc8f, 0x1, 0x0);
        gbc.writeMem(0xd31, { 0xfa, 0x6a, 0x97 });
        gbc.writeMem(0x976a, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x21cb, gbc.sp());
        EXPECT(0xd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x976a));
        // FA 0309
        gbc.setState(0x7aa, 0xbd45, 0xba70, 0x3b71, 0x1985, 0xceb7, 0x1, 0x1);
        gbc.writeMem(0x7aa, { 0xfa, 0x57, 0xc6 });
        gbc.writeMem(0xc657, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbd45, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc657));
        // FA 030A
        gbc.setState(0xeea6, 0x310b, 0xedd0, 0x1b3c, 0x1b78, 0x6f01, 0x0, 0x1);
        gbc.writeMem(0x35b6, { 0x7c });
        gbc.writeMem(0xeea6, { 0xfa, 0xb6, 0x35 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0xeea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xeea6));
        EXPECT(0xb6, gbc.readMem(0xeea7));
        EXPECT(0x35, gbc.readMem(0xeea8));
        // FA 030B
        gbc.setState(0x6126, 0xe84c, 0xfad0, 0x89c1, 0x99f7, 0x5bdf, 0x1, 0x0);
        gbc.writeMem(0xf8f, { 0x2f });
        gbc.writeMem(0x6126, { 0xfa, 0x8f, 0xf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe84c, gbc.sp());
        EXPECT(0x6129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 030C
        gbc.setState(0xc4e9, 0xea15, 0x9e70, 0xb780, 0x43ec, 0xa9dd, 0x0, 0x0);
        gbc.writeMem(0x32b1, { 0x3d });
        gbc.writeMem(0xc4e9, { 0xfa, 0xb1, 0x32 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xea15, gbc.sp());
        EXPECT(0xc4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc4e9));
        EXPECT(0xb1, gbc.readMem(0xc4ea));
        EXPECT(0x32, gbc.readMem(0xc4eb));
        // FA 030D
        gbc.setState(0xb404, 0xc1ea, 0x1090, 0x3f88, 0xcc64, 0xa497, 0x0, 0x0);
        gbc.writeMem(0x3424, { 0xf2 });
        gbc.writeMem(0xb404, { 0xfa, 0x24, 0x34 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0xb407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb404));
        EXPECT(0x24, gbc.readMem(0xb405));
        EXPECT(0x34, gbc.readMem(0xb406));
        // FA 030E
        gbc.setState(0x9e10, 0x11, 0xdba0, 0x8adb, 0x5563, 0x104b, 0x0, 0x0);
        gbc.writeMem(0xb13, { 0x78 });
        gbc.writeMem(0x9e10, { 0xfa, 0x13, 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x11, gbc.sp());
        EXPECT(0x9e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9e10));
        EXPECT(0x13, gbc.readMem(0x9e11));
        EXPECT(0xb, gbc.readMem(0x9e12));
        // FA 030F
        gbc.setState(0x3e02, 0x3c12, 0x2e00, 0x26e0, 0x6646, 0x68c2, 0x1, 0x1);
        gbc.writeMem(0x3e02, { 0xfa, 0x3e, 0x8d });
        gbc.writeMem(0x8d3e, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3c12, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8d3e));
        // FA 0310
        gbc.setState(0x256b, 0x3dff, 0xf130, 0x3469, 0x5b78, 0x1d21, 0x1, 0x0);
        gbc.writeMem(0x1e3a, { 0x4b });
        gbc.writeMem(0x256b, { 0xfa, 0x3a, 0x1e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3dff, gbc.sp());
        EXPECT(0x256e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0311
        gbc.setState(0x33c7, 0x5db, 0xe000, 0x6915, 0x6579, 0x4986, 0x0, 0x1);
        gbc.writeMem(0x1db3, { 0xee });
        gbc.writeMem(0x33c7, { 0xfa, 0xb3, 0x1d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0x33ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0315
        gbc.setState(0x262e, 0x4e39, 0x3f90, 0xbf6, 0x12b9, 0xe818, 0x0, 0x0);
        gbc.writeMem(0x262e, { 0xfa, 0xf1, 0x7a });
        gbc.writeMem(0x7af1, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4e39, gbc.sp());
        EXPECT(0x2631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0316
        gbc.setState(0x6dd7, 0xfe5d, 0x2e0, 0x71d3, 0xd7ab, 0xa3c1, 0x1, 0x0);
        gbc.writeMem(0x5ae, { 0x1b });
        gbc.writeMem(0x6dd7, { 0xfa, 0xae, 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfe5d, gbc.sp());
        EXPECT(0x6dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0317
        gbc.setState(0x2866, 0x19a8, 0xc130, 0x117e, 0x64a3, 0x688d, 0x1, 0x1);
        gbc.writeMem(0x2866, { 0xfa, 0x44, 0xe8 });
        gbc.writeMem(0xe844, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x19a8, gbc.sp());
        EXPECT(0x2869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xe844));
        // FA 0318
        gbc.setState(0xb98f, 0x123e, 0xae0, 0xdfb8, 0xb53f, 0x33cf, 0x1, 0x0);
        gbc.writeMem(0xd79, { 0x9 });
        gbc.writeMem(0xb98f, { 0xfa, 0x79, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x123e, gbc.sp());
        EXPECT(0xb992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb98f));
        EXPECT(0x79, gbc.readMem(0xb990));
        EXPECT(0xd, gbc.readMem(0xb991));
        // FA 0319
        gbc.setState(0xb693, 0xc031, 0xe70, 0xb471, 0xded2, 0xf6fc, 0x1, 0x1);
        gbc.writeMem(0xb693, { 0xfa, 0xb0, 0xb6 });
        gbc.writeMem(0xb6b0, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc031, gbc.sp());
        EXPECT(0xb696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb693));
        EXPECT(0xb0, gbc.readMem(0xb694));
        EXPECT(0xb6, gbc.readMem(0xb695));
        EXPECT(0xb4, gbc.readMem(0xb6b0));
        // FA 031A
        gbc.setState(0x47d5, 0xa960, 0xfd80, 0x3da0, 0x40e5, 0xe7dc, 0x1, 0x0);
        gbc.writeMem(0xb84, { 0x60 });
        gbc.writeMem(0x47d5, { 0xfa, 0x84, 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa960, gbc.sp());
        EXPECT(0x47d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 031B
        gbc.setState(0x50e8, 0xe8cd, 0x6840, 0x3bb7, 0x30bf, 0x6ca7, 0x1, 0x0);
        gbc.writeMem(0x50e8, { 0xfa, 0x99, 0xb8 });
        gbc.writeMem(0xb899, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe8cd, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb899));
        // FA 031C
        gbc.setState(0x6121, 0xfcb4, 0xd4b0, 0x835c, 0x380, 0xf57e, 0x0, 0x0);
        gbc.writeMem(0x5249, { 0xfc });
        gbc.writeMem(0x6121, { 0xfa, 0x49, 0x52 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfcb4, gbc.sp());
        EXPECT(0x6124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 031D
        gbc.setState(0x1b36, 0xe34, 0xa5e0, 0x532b, 0x9d9b, 0x4a0, 0x1, 0x1);
        gbc.writeMem(0x1b36, { 0xfa, 0x23, 0xf2 });
        gbc.writeMem(0xf223, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe34, gbc.sp());
        EXPECT(0x1b39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf223));
        // FA 031E
        gbc.setState(0xc09a, 0xace5, 0x3a40, 0xf6e6, 0x19ee, 0x9dec, 0x0, 0x0);
        gbc.writeMem(0x9df5, { 0x25 });
        gbc.writeMem(0xc09a, { 0xfa, 0xf5, 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9df5));
        EXPECT(0xfa, gbc.readMem(0xc09a));
        EXPECT(0xf5, gbc.readMem(0xc09b));
        EXPECT(0x9d, gbc.readMem(0xc09c));
        // FA 031F
        gbc.setState(0xa0b4, 0x518a, 0x8e20, 0xf6f3, 0x1da1, 0x1fcf, 0x1, 0x1);
        gbc.writeMem(0x168b, { 0xd2 });
        gbc.writeMem(0xa0b4, { 0xfa, 0x8b, 0x16 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x518a, gbc.sp());
        EXPECT(0xa0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa0b4));
        EXPECT(0x8b, gbc.readMem(0xa0b5));
        EXPECT(0x16, gbc.readMem(0xa0b6));
        // FA 0320
        gbc.setState(0xbfa3, 0xc410, 0x7b50, 0x59d2, 0x3a0f, 0xe833, 0x0, 0x1);
        gbc.writeMem(0xd6a, { 0xb1 });
        gbc.writeMem(0xbfa3, { 0xfa, 0x6a, 0xd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc410, gbc.sp());
        EXPECT(0xbfa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbfa3));
        EXPECT(0x6a, gbc.readMem(0xbfa4));
        EXPECT(0xd, gbc.readMem(0xbfa5));
        // FA 0322
        gbc.setState(0x12cd, 0x3ec9, 0xbc10, 0x4ce5, 0x466d, 0xcd4c, 0x0, 0x1);
        gbc.writeMem(0x12cd, { 0xfa, 0xe1, 0xb0 });
        gbc.writeMem(0xb0e1, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3ec9, gbc.sp());
        EXPECT(0x12d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb0e1));
        // FA 0323
        gbc.setState(0x564a, 0x1054, 0xbdf0, 0x3327, 0x4a5b, 0x772f, 0x1, 0x0);
        gbc.writeMem(0x564a, { 0xfa, 0x5e, 0xe9 });
        gbc.writeMem(0xe95e, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1054, gbc.sp());
        EXPECT(0x564d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe95e));
        // FA 0324
        gbc.setState(0x14a1, 0x9eca, 0xdc0, 0x9b7b, 0xb69f, 0xe584, 0x1, 0x0);
        gbc.writeMem(0x14a1, { 0xfa, 0x2, 0x57 });
        gbc.writeMem(0x5702, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9eca, gbc.sp());
        EXPECT(0x14a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0325
        gbc.setState(0x5dbb, 0xe8ff, 0x8030, 0x4eff, 0xc718, 0x39f8, 0x1, 0x0);
        gbc.writeMem(0x5dbb, { 0xfa, 0xf9, 0xfc });
        gbc.writeMem(0xfcf9, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe8ff, gbc.sp());
        EXPECT(0x5dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xfcf9));
        // FA 0326
        gbc.setState(0x39b7, 0xaf8b, 0xb2c0, 0xf7ca, 0xdc97, 0xa18d, 0x1, 0x0);
        gbc.writeMem(0x11cd, { 0x43 });
        gbc.writeMem(0x39b7, { 0xfa, 0xcd, 0x11 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaf8b, gbc.sp());
        EXPECT(0x39ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0327
        gbc.setState(0x22a9, 0xbd78, 0x8ef0, 0xf74e, 0x385e, 0x7a2, 0x0, 0x1);
        gbc.writeMem(0x22a9, { 0xfa, 0xa6, 0x46 });
        gbc.writeMem(0x46a6, { 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbd78, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0328
        gbc.setState(0x6ad7, 0x1484, 0x3850, 0x1b0f, 0x361c, 0x3bf2, 0x1, 0x0);
        gbc.writeMem(0x6ad7, { 0xfa, 0x6c, 0xf8 });
        gbc.writeMem(0xf86c, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1484, gbc.sp());
        EXPECT(0x6ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xf86c));
        // FA 0329
        gbc.setState(0x4665, 0x9cfe, 0x7950, 0xa96c, 0x1c56, 0x1afe, 0x1, 0x0);
        gbc.writeMem(0x4665, { 0xfa, 0x1, 0x8c });
        gbc.writeMem(0x8c01, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9cfe, gbc.sp());
        EXPECT(0x4668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8c01));
        // FA 032A
        gbc.setState(0xa2b9, 0xdc5f, 0x6710, 0x8a76, 0x8bb4, 0xed42, 0x1, 0x0);
        gbc.writeMem(0x52d0, { 0x81 });
        gbc.writeMem(0xa2b9, { 0xfa, 0xd0, 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdc5f, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa2b9));
        EXPECT(0xd0, gbc.readMem(0xa2ba));
        EXPECT(0x52, gbc.readMem(0xa2bb));
        // FA 032B
        gbc.setState(0xeb3f, 0xb83, 0x7e70, 0x5f87, 0xbf26, 0x1f19, 0x0, 0x0);
        gbc.writeMem(0x914b, { 0x73 });
        gbc.writeMem(0xeb3f, { 0xfa, 0x4b, 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb83, gbc.sp());
        EXPECT(0xeb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x914b));
        EXPECT(0xfa, gbc.readMem(0xeb3f));
        EXPECT(0x4b, gbc.readMem(0xeb40));
        EXPECT(0x91, gbc.readMem(0xeb41));
        // FA 032C
        gbc.setState(0xaac4, 0x4805, 0x3a20, 0x3256, 0x8b69, 0xd933, 0x0, 0x0);
        gbc.writeMem(0x63b7, { 0x38 });
        gbc.writeMem(0xaac4, { 0xfa, 0xb7, 0x63 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4805, gbc.sp());
        EXPECT(0xaac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaac4));
        EXPECT(0xb7, gbc.readMem(0xaac5));
        EXPECT(0x63, gbc.readMem(0xaac6));
        // FA 032E
        gbc.setState(0xbf2b, 0x8e07, 0x10d0, 0xf235, 0xf5bd, 0xec6f, 0x0, 0x1);
        gbc.writeMem(0xb12e, { 0xcb });
        gbc.writeMem(0xbf2b, { 0xfa, 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8e07, gbc.sp());
        EXPECT(0xbf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12e));
        EXPECT(0xfa, gbc.readMem(0xbf2b));
        EXPECT(0x2e, gbc.readMem(0xbf2c));
        EXPECT(0xb1, gbc.readMem(0xbf2d));
        // FA 032F
        gbc.setState(0x5188, 0xc2f0, 0xa8c0, 0x6a4c, 0x9a48, 0xffa3, 0x1, 0x1);
        gbc.writeMem(0x372d, { 0xf1 });
        gbc.writeMem(0x5188, { 0xfa, 0x2d, 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc2f0, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0330
        gbc.setState(0x90bd, 0x7a8f, 0xba10, 0x1e03, 0x9610, 0x661c, 0x0, 0x1);
        gbc.writeMem(0x65a8, { 0x35 });
        gbc.writeMem(0x90bd, { 0xfa, 0xa8, 0x65 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a8f, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x90bd));
        EXPECT(0xa8, gbc.readMem(0x90be));
        EXPECT(0x65, gbc.readMem(0x90bf));
        // FA 0331
        gbc.setState(0xc9c8, 0x7c62, 0xbcb0, 0x8f73, 0x134e, 0xd58c, 0x0, 0x1);
        gbc.writeMem(0xa425, { 0xa7 });
        gbc.writeMem(0xc9c8, { 0xfa, 0x25, 0xa4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0xc9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa425));
        EXPECT(0xfa, gbc.readMem(0xc9c8));
        EXPECT(0x25, gbc.readMem(0xc9c9));
        EXPECT(0xa4, gbc.readMem(0xc9ca));
        // FA 0332
        gbc.setState(0xdb82, 0x260f, 0xa290, 0xae6, 0x61dd, 0xc407, 0x0, 0x1);
        gbc.writeMem(0x2c8b, { 0x7 });
        gbc.writeMem(0xdb82, { 0xfa, 0x8b, 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0xdb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdb82));
        EXPECT(0x8b, gbc.readMem(0xdb83));
        EXPECT(0x2c, gbc.readMem(0xdb84));
        // FA 0333
        gbc.setState(0xa882, 0x787c, 0x70d0, 0x351e, 0x585f, 0x26bd, 0x1, 0x1);
        gbc.writeMem(0xa882, { 0xfa, 0x21, 0xde });
        gbc.writeMem(0xde21, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0xa885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa882));
        EXPECT(0x21, gbc.readMem(0xa883));
        EXPECT(0xde, gbc.readMem(0xa884));
        EXPECT(0xc7, gbc.readMem(0xde21));
        // FA 0335
        gbc.setState(0x9d91, 0xe5a6, 0x9160, 0x7962, 0x44ef, 0xe95b, 0x0, 0x0);
        gbc.writeMem(0x1d15, { 0x11 });
        gbc.writeMem(0x9d91, { 0xfa, 0x15, 0x1d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe5a6, gbc.sp());
        EXPECT(0x9d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9d91));
        EXPECT(0x15, gbc.readMem(0x9d92));
        EXPECT(0x1d, gbc.readMem(0x9d93));
        // FA 0336
        gbc.setState(0xb66f, 0x237e, 0x7a40, 0x9de6, 0xfb46, 0x41ca, 0x0, 0x1);
        gbc.writeMem(0x8807, { 0xdb });
        gbc.writeMem(0xb66f, { 0xfa, 0x7, 0x88 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x237e, gbc.sp());
        EXPECT(0xb672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8807));
        EXPECT(0xfa, gbc.readMem(0xb66f));
        EXPECT(0x7, gbc.readMem(0xb670));
        EXPECT(0x88, gbc.readMem(0xb671));
        // FA 0337
        gbc.setState(0x281f, 0xc769, 0x9d60, 0xa68d, 0x4ba2, 0xc93d, 0x0, 0x0);
        gbc.writeMem(0x281f, { 0xfa, 0xf7, 0x64 });
        gbc.writeMem(0x64f7, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc769, gbc.sp());
        EXPECT(0x2822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0338
        gbc.setState(0x398d, 0xdce4, 0x380, 0xdbfc, 0x42bc, 0x5aee, 0x1, 0x0);
        gbc.writeMem(0x398d, { 0xfa, 0x69, 0xa1 });
        gbc.writeMem(0xa169, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x3990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa169));
        // FA 0339
        gbc.setState(0x3855, 0xb1cf, 0x1f20, 0x4300, 0x25c6, 0x257b, 0x1, 0x1);
        gbc.writeMem(0x3855, { 0xfa, 0x22, 0x91 });
        gbc.writeMem(0x9122, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb1cf, gbc.sp());
        EXPECT(0x3858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9122));
        // FA 033A
        gbc.setState(0xb179, 0x8c9b, 0xd510, 0xd46e, 0x87e5, 0xbec1, 0x1, 0x0);
        gbc.writeMem(0xb179, { 0xfa, 0x28, 0xd7 });
        gbc.writeMem(0xd728, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8c9b, gbc.sp());
        EXPECT(0xb17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb179));
        EXPECT(0x28, gbc.readMem(0xb17a));
        EXPECT(0xd7, gbc.readMem(0xb17b));
        EXPECT(0xdf, gbc.readMem(0xd728));
        // FA 033B
        gbc.setState(0xc648, 0xaea7, 0x4f20, 0xab7, 0x263c, 0x1b4d, 0x0, 0x0);
        gbc.writeMem(0xc648, { 0xfa, 0xc6, 0xea });
        gbc.writeMem(0xeac6, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0xc64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc648));
        EXPECT(0xc6, gbc.readMem(0xc649));
        EXPECT(0xea, gbc.readMem(0xc64a));
        EXPECT(0xc6, gbc.readMem(0xeac6));
        // FA 033C
        gbc.setState(0x74ba, 0x7ca, 0x18c0, 0x70f7, 0x56af, 0x7f73, 0x1, 0x0);
        gbc.writeMem(0x45cf, { 0x66 });
        gbc.writeMem(0x74ba, { 0xfa, 0xcf, 0x45 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7ca, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 033D
        gbc.setState(0x28f4, 0x48f5, 0x66e0, 0x63c7, 0xa1d9, 0xa63d, 0x0, 0x0);
        gbc.writeMem(0x28f4, { 0xfa, 0x54, 0x71 });
        gbc.writeMem(0x7154, { 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x48f5, gbc.sp());
        EXPECT(0x28f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 033F
        gbc.setState(0x764e, 0x81ef, 0x9300, 0xe914, 0x2cca, 0xe117, 0x0, 0x0);
        gbc.writeMem(0x764e, { 0xfa, 0x60, 0x84 });
        gbc.writeMem(0x8460, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x81ef, gbc.sp());
        EXPECT(0x7651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8460));
        // FA 0340
        gbc.setState(0x5512, 0xea4c, 0xc0f0, 0xb8d1, 0x309, 0xde0a, 0x1, 0x1);
        gbc.writeMem(0x5512, { 0xfa, 0xfc, 0xaa });
        gbc.writeMem(0xaafc, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0x5515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaafc));
        // FA 0341
        gbc.setState(0x4c1d, 0xbb94, 0x5350, 0xf596, 0xb289, 0xc870, 0x1, 0x1);
        gbc.writeMem(0x4c1d, { 0xfa, 0xb5, 0x75 });
        gbc.writeMem(0x75b5, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbb94, gbc.sp());
        EXPECT(0x4c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0342
        gbc.setState(0x5f76, 0x9d43, 0x8c40, 0x16b9, 0xf485, 0x4d5c, 0x0, 0x0);
        gbc.writeMem(0x56c6, { 0x38 });
        gbc.writeMem(0x5f76, { 0xfa, 0xc6, 0x56 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9d43, gbc.sp());
        EXPECT(0x5f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0343
        gbc.setState(0x1b30, 0x5f4b, 0x7870, 0xabcf, 0x4767, 0xad4f, 0x0, 0x0);
        gbc.writeMem(0x1b30, { 0xfa, 0x3a, 0xb7 });
        gbc.writeMem(0xb73a, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5f4b, gbc.sp());
        EXPECT(0x1b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb73a));
        // FA 0344
        gbc.setState(0x3fa5, 0xed33, 0xaf0, 0x1608, 0xf624, 0x66d6, 0x0, 0x1);
        gbc.writeMem(0x8c, { 0xf1 });
        gbc.writeMem(0x3fa5, { 0xfa, 0x8c, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xed33, gbc.sp());
        EXPECT(0x3fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0345
        gbc.setState(0xbe92, 0x2831, 0x6a00, 0x2527, 0x799e, 0x749e, 0x0, 0x1);
        gbc.writeMem(0xbe92, { 0xfa, 0x4e, 0xc7 });
        gbc.writeMem(0xc74e, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0xbe95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbe92));
        EXPECT(0x4e, gbc.readMem(0xbe93));
        EXPECT(0xc7, gbc.readMem(0xbe94));
        EXPECT(0xfa, gbc.readMem(0xc74e));
        // FA 0346
        gbc.setState(0xe8c8, 0xe1fb, 0xf090, 0xb35c, 0xfda2, 0x296b, 0x1, 0x0);
        gbc.writeMem(0xe8c8, { 0xfa, 0xf7, 0xe9 });
        gbc.writeMem(0xe9f7, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0xe8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe8c8));
        EXPECT(0xf7, gbc.readMem(0xe8c9));
        EXPECT(0xe9, gbc.readMem(0xe8ca));
        EXPECT(0x4e, gbc.readMem(0xe9f7));
        // FA 0347
        gbc.setState(0x9487, 0x8a28, 0x83d0, 0x7409, 0xa7a7, 0xe23a, 0x1, 0x0);
        gbc.writeMem(0x9487, { 0xfa, 0xba, 0xf4 });
        gbc.writeMem(0xf4ba, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8a28, gbc.sp());
        EXPECT(0x948a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9487));
        EXPECT(0xba, gbc.readMem(0x9488));
        EXPECT(0xf4, gbc.readMem(0x9489));
        EXPECT(0xa0, gbc.readMem(0xf4ba));
        // FA 0348
        gbc.setState(0xd47a, 0xe7b4, 0xa890, 0xd80b, 0x5523, 0xf4e8, 0x1, 0x0);
        gbc.writeMem(0xa313, { 0xe4 });
        gbc.writeMem(0xd47a, { 0xfa, 0x13, 0xa3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe7b4, gbc.sp());
        EXPECT(0xd47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xa313));
        EXPECT(0xfa, gbc.readMem(0xd47a));
        EXPECT(0x13, gbc.readMem(0xd47b));
        EXPECT(0xa3, gbc.readMem(0xd47c));
        // FA 0349
        gbc.setState(0xced, 0x4ca8, 0xc10, 0xc1f2, 0xb1e1, 0x76f7, 0x0, 0x0);
        gbc.writeMem(0xced, { 0xfa, 0x9a, 0xa5 });
        gbc.writeMem(0xa59a, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4ca8, gbc.sp());
        EXPECT(0xcf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa59a));
        // FA 034A
        gbc.setState(0xd39c, 0xbf7, 0xa000, 0x9887, 0x290d, 0x4967, 0x1, 0x0);
        gbc.writeMem(0x2f4b, { 0xfe });
        gbc.writeMem(0xd39c, { 0xfa, 0x4b, 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbf7, gbc.sp());
        EXPECT(0xd39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd39c));
        EXPECT(0x4b, gbc.readMem(0xd39d));
        EXPECT(0x2f, gbc.readMem(0xd39e));
        // FA 034C
        gbc.setState(0x5dc2, 0x3d3c, 0x5d0, 0xeed3, 0xbec6, 0xea4e, 0x1, 0x1);
        gbc.writeMem(0x5dc2, { 0xfa, 0x63, 0xb7 });
        gbc.writeMem(0xb763, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3d3c, gbc.sp());
        EXPECT(0x5dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb763));
        // FA 034D
        gbc.setState(0x9f6d, 0xdcee, 0x2fd0, 0x750f, 0xe2d4, 0xbbd4, 0x1, 0x1);
        gbc.writeMem(0x9f6d, { 0xfa, 0xe0, 0xa7 });
        gbc.writeMem(0xa7e0, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdcee, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9f6d));
        EXPECT(0xe0, gbc.readMem(0x9f6e));
        EXPECT(0xa7, gbc.readMem(0x9f6f));
        EXPECT(0xce, gbc.readMem(0xa7e0));
        // FA 034E
        gbc.setState(0x4805, 0x3b02, 0x4430, 0x9b1, 0xac4a, 0x565d, 0x1, 0x0);
        gbc.writeMem(0x4805, { 0xfa, 0xb0, 0xfd });
        gbc.writeMem(0xfdb0, { 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3b02, gbc.sp());
        EXPECT(0x4808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xfdb0));
        // FA 034F
        gbc.setState(0x5b31, 0x573f, 0xc5d0, 0xc22a, 0xa561, 0x544a, 0x0, 0x1);
        gbc.writeMem(0x5b31, { 0xfa, 0xa8, 0xb2 });
        gbc.writeMem(0xb2a8, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x573f, gbc.sp());
        EXPECT(0x5b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb2a8));
        // FA 0350
        gbc.setState(0x644d, 0x4333, 0xfa30, 0x7dd8, 0xc5ff, 0x9fbc, 0x1, 0x1);
        gbc.writeMem(0x38be, { 0xe8 });
        gbc.writeMem(0x644d, { 0xfa, 0xbe, 0x38 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4333, gbc.sp());
        EXPECT(0x6450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0351
        gbc.setState(0x4d0f, 0x3801, 0xb110, 0xbafb, 0xede0, 0x4c59, 0x1, 0x1);
        gbc.writeMem(0x2f9d, { 0x76 });
        gbc.writeMem(0x4d0f, { 0xfa, 0x9d, 0x2f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3801, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0352
        gbc.setState(0x427b, 0x87b5, 0xd230, 0xebca, 0xe8ae, 0xa44f, 0x1, 0x0);
        gbc.writeMem(0x427b, { 0xfa, 0xcb, 0xf8 });
        gbc.writeMem(0xf8cb, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x87b5, gbc.sp());
        EXPECT(0x427e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xf8cb));
        // FA 0353
        gbc.setState(0x9607, 0x5cab, 0xa330, 0x3458, 0x70cc, 0xc14a, 0x1, 0x1);
        gbc.writeMem(0x9607, { 0xfa, 0xdd, 0xb8 });
        gbc.writeMem(0xb8dd, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5cab, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9607));
        EXPECT(0xdd, gbc.readMem(0x9608));
        EXPECT(0xb8, gbc.readMem(0x9609));
        EXPECT(0xcf, gbc.readMem(0xb8dd));
        // FA 0354
        gbc.setState(0x5a36, 0xcc73, 0x4720, 0x36c, 0xb331, 0x7dd8, 0x0, 0x0);
        gbc.writeMem(0x5a36, { 0xfa, 0x8c, 0xe5 });
        gbc.writeMem(0xe58c, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc73, gbc.sp());
        EXPECT(0x5a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe58c));
        // FA 0355
        gbc.setState(0xc709, 0x3994, 0x39e0, 0x8e67, 0xcd97, 0xf281, 0x0, 0x1);
        gbc.writeMem(0x4107, { 0xfb });
        gbc.writeMem(0xc709, { 0xfa, 0x7, 0x41 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3994, gbc.sp());
        EXPECT(0xc70c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc709));
        EXPECT(0x7, gbc.readMem(0xc70a));
        EXPECT(0x41, gbc.readMem(0xc70b));
        // FA 0356
        gbc.setState(0x563a, 0xa5f0, 0x4490, 0xe0f9, 0x85c0, 0xa476, 0x1, 0x1);
        gbc.writeMem(0x563a, { 0xfa, 0xc3, 0xa6 });
        gbc.writeMem(0xa6c3, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa5f0, gbc.sp());
        EXPECT(0x563d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa6c3));
        // FA 0357
        gbc.setState(0x12cf, 0xf082, 0x5210, 0xe555, 0xa4c3, 0xc8a6, 0x1, 0x1);
        gbc.writeMem(0x12cf, { 0xfa, 0x14, 0xd7 });
        gbc.writeMem(0xd714, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf082, gbc.sp());
        EXPECT(0x12d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd714));
        // FA 0358
        gbc.setState(0x5736, 0xc9f8, 0x43f0, 0xb365, 0x490d, 0xe3ad, 0x0, 0x0);
        gbc.writeMem(0x5736, { 0xfa, 0x42, 0xdc });
        gbc.writeMem(0xdc42, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc9f8, gbc.sp());
        EXPECT(0x5739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdc42));
        // FA 035A
        gbc.setState(0x61c6, 0x6f3f, 0x60, 0x309b, 0x2144, 0xd021, 0x0, 0x1);
        gbc.writeMem(0x61c6, { 0xfa, 0x55, 0xbe });
        gbc.writeMem(0xbe55, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6f3f, gbc.sp());
        EXPECT(0x61c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbe55));
        // FA 035B
        gbc.setState(0xe64e, 0x6519, 0x1230, 0x25dd, 0xf44c, 0xc5a8, 0x0, 0x0);
        gbc.writeMem(0x2bc8, { 0xe2 });
        gbc.writeMem(0xe64e, { 0xfa, 0xc8, 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6519, gbc.sp());
        EXPECT(0xe651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe64e));
        EXPECT(0xc8, gbc.readMem(0xe64f));
        EXPECT(0x2b, gbc.readMem(0xe650));
        // FA 035D
        gbc.setState(0x8b83, 0x4d23, 0xc400, 0xc3ff, 0xc309, 0xc882, 0x0, 0x0);
        gbc.writeMem(0x8b83, { 0xfa, 0x70, 0xe0 });
        gbc.writeMem(0xe070, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4d23, gbc.sp());
        EXPECT(0x8b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8b83));
        EXPECT(0x70, gbc.readMem(0x8b84));
        EXPECT(0xe0, gbc.readMem(0x8b85));
        EXPECT(0x74, gbc.readMem(0xe070));
        // FA 035E
        gbc.setState(0xb74, 0xb3c4, 0x4440, 0x9da1, 0x35e7, 0xa271, 0x1, 0x0);
        gbc.writeMem(0xb74, { 0xfa, 0x1f, 0xfd });
        gbc.writeMem(0xfd1f, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb3c4, gbc.sp());
        EXPECT(0xb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xfd1f));
        // FA 035F
        gbc.setState(0x4f6f, 0xeff9, 0xa0c0, 0x615, 0x3ba9, 0xf322, 0x0, 0x0);
        gbc.writeMem(0x4f6f, { 0xfa, 0x72, 0x64 });
        gbc.writeMem(0x6472, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xeff9, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0360
        gbc.setState(0x3f68, 0x368e, 0xc190, 0xff89, 0xf431, 0x34fe, 0x1, 0x0);
        gbc.writeMem(0x3f68, { 0xfa, 0x69, 0xf6 });
        gbc.writeMem(0xf669, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x368e, gbc.sp());
        EXPECT(0x3f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xf669));
        // FA 0361
        gbc.setState(0xbf5d, 0xd116, 0xd7b0, 0x17f, 0x8fad, 0xd436, 0x0, 0x0);
        gbc.writeMem(0x7a8b, { 0xba });
        gbc.writeMem(0xbf5d, { 0xfa, 0x8b, 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd116, gbc.sp());
        EXPECT(0xbf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbf5d));
        EXPECT(0x8b, gbc.readMem(0xbf5e));
        EXPECT(0x7a, gbc.readMem(0xbf5f));
        // FA 0362
        gbc.setState(0x6cc7, 0xca2a, 0xcdd0, 0x8464, 0xee4b, 0x8255, 0x1, 0x1);
        gbc.writeMem(0x6cc7, { 0xfa, 0xbb, 0x9c });
        gbc.writeMem(0x9cbb, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xca2a, gbc.sp());
        EXPECT(0x6cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9cbb));
        // FA 0363
        gbc.setState(0x8de9, 0xbb47, 0x3cf0, 0x31e6, 0x4ac6, 0xefd3, 0x1, 0x1);
        gbc.writeMem(0x6522, { 0x7f });
        gbc.writeMem(0x8de9, { 0xfa, 0x22, 0x65 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbb47, gbc.sp());
        EXPECT(0x8dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8de9));
        EXPECT(0x22, gbc.readMem(0x8dea));
        EXPECT(0x65, gbc.readMem(0x8deb));
        // FA 0364
        gbc.setState(0xeb63, 0x23c6, 0xca30, 0x71de, 0x7ca4, 0xa8f9, 0x0, 0x1);
        gbc.writeMem(0x7a2b, { 0x59 });
        gbc.writeMem(0xeb63, { 0xfa, 0x2b, 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x23c6, gbc.sp());
        EXPECT(0xeb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xeb63));
        EXPECT(0x2b, gbc.readMem(0xeb64));
        EXPECT(0x7a, gbc.readMem(0xeb65));
        // FA 0366
        gbc.setState(0x5c4d, 0xc5d2, 0xed20, 0xd9cb, 0x99ee, 0x4492, 0x1, 0x0);
        gbc.writeMem(0x5c4d, { 0xfa, 0xd1, 0xda });
        gbc.writeMem(0xdad1, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0x5c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xdad1));
        // FA 0367
        gbc.setState(0x63a6, 0x20d9, 0x9ce0, 0x67f0, 0x42bc, 0xa074, 0x0, 0x0);
        gbc.writeMem(0x63a6, { 0xfa, 0xcd, 0xf7 });
        gbc.writeMem(0xf7cd, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x20d9, gbc.sp());
        EXPECT(0x63a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xf7cd));
        // FA 0368
        gbc.setState(0x3ea9, 0xa1ff, 0x84e0, 0x8a0a, 0x1048, 0x8ff1, 0x0, 0x1);
        gbc.writeMem(0x130d, { 0x65 });
        gbc.writeMem(0x3ea9, { 0xfa, 0xd, 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa1ff, gbc.sp());
        EXPECT(0x3eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0369
        gbc.setState(0x8102, 0x48bd, 0x1710, 0x91ab, 0x30b9, 0x8954, 0x1, 0x0);
        gbc.writeMem(0x1e62, { 0x89 });
        gbc.writeMem(0x8102, { 0xfa, 0x62, 0x1e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x48bd, gbc.sp());
        EXPECT(0x8105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8102));
        EXPECT(0x62, gbc.readMem(0x8103));
        EXPECT(0x1e, gbc.readMem(0x8104));
        // FA 036A
        gbc.setState(0xbd8d, 0x1f74, 0x3620, 0x76a7, 0x6e47, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0x1883, { 0x3 });
        gbc.writeMem(0xbd8d, { 0xfa, 0x83, 0x18 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0xbd90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbd8d));
        EXPECT(0x83, gbc.readMem(0xbd8e));
        EXPECT(0x18, gbc.readMem(0xbd8f));
        // FA 036B
        gbc.setState(0x1dd4, 0x57a5, 0x3440, 0x2270, 0xe1a8, 0xa602, 0x0, 0x0);
        gbc.writeMem(0x1dd4, { 0xfa, 0xe3, 0x6e });
        gbc.writeMem(0x6ee3, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x57a5, gbc.sp());
        EXPECT(0x1dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 036C
        gbc.setState(0xeae8, 0x390b, 0x9f50, 0x17ea, 0x4452, 0x9f1b, 0x0, 0x0);
        gbc.writeMem(0x5aae, { 0xf8 });
        gbc.writeMem(0xeae8, { 0xfa, 0xae, 0x5a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x390b, gbc.sp());
        EXPECT(0xeaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xeae8));
        EXPECT(0xae, gbc.readMem(0xeae9));
        EXPECT(0x5a, gbc.readMem(0xeaea));
        // FA 036D
        gbc.setState(0xba2e, 0xc6f3, 0xd080, 0x91be, 0xb95b, 0x7704, 0x1, 0x0);
        gbc.writeMem(0x22b6, { 0x0 });
        gbc.writeMem(0xba2e, { 0xfa, 0xb6, 0x22 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc6f3, gbc.sp());
        EXPECT(0xba31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xba2e));
        EXPECT(0xb6, gbc.readMem(0xba2f));
        EXPECT(0x22, gbc.readMem(0xba30));
        // FA 036E
        gbc.setState(0x7356, 0xa9d2, 0x3830, 0xafbc, 0x9930, 0xbf49, 0x1, 0x1);
        gbc.writeMem(0x7356, { 0xfa, 0x5f, 0x87 });
        gbc.writeMem(0x875f, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0x7359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x875f));
        // FA 036F
        gbc.setState(0x595b, 0xa745, 0x5d10, 0xa598, 0xb112, 0xfad0, 0x0, 0x1);
        gbc.writeMem(0x28ca, { 0xe4 });
        gbc.writeMem(0x595b, { 0xfa, 0xca, 0x28 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa745, gbc.sp());
        EXPECT(0x595e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0370
        gbc.setState(0xe977, 0xd998, 0xfc90, 0x44ce, 0x73b7, 0xe0b5, 0x1, 0x1);
        gbc.writeMem(0xbcbf, { 0x58 });
        gbc.writeMem(0xe977, { 0xfa, 0xbf, 0xbc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd998, gbc.sp());
        EXPECT(0xe97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbcbf));
        EXPECT(0xfa, gbc.readMem(0xe977));
        EXPECT(0xbf, gbc.readMem(0xe978));
        EXPECT(0xbc, gbc.readMem(0xe979));
        // FA 0371
        gbc.setState(0x3949, 0x3923, 0xd400, 0xfc9c, 0xb258, 0x7abd, 0x1, 0x0);
        gbc.writeMem(0x32a, { 0xe0 });
        gbc.writeMem(0x3949, { 0xfa, 0x2a, 0x3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3923, gbc.sp());
        EXPECT(0x394c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0372
        gbc.setState(0x599c, 0x78b9, 0x9f30, 0x1ca4, 0xee0e, 0x6a1c, 0x1, 0x0);
        gbc.writeMem(0x599c, { 0xfa, 0x24, 0xc0 });
        gbc.writeMem(0xc024, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0x599f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc024));
        // FA 0373
        gbc.setState(0x65d3, 0x7e67, 0xa280, 0x8c3b, 0xde7a, 0x35c3, 0x1, 0x0);
        gbc.writeMem(0x390a, { 0xfd });
        gbc.writeMem(0x65d3, { 0xfa, 0xa, 0x39 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7e67, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0374
        gbc.setState(0x8908, 0xd325, 0xfaa0, 0xdd95, 0xd241, 0x64c3, 0x1, 0x1);
        gbc.writeMem(0x83b5, { 0xab });
        gbc.writeMem(0x8908, { 0xfa, 0xb5, 0x83 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd325, gbc.sp());
        EXPECT(0x890b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x83b5));
        EXPECT(0xfa, gbc.readMem(0x8908));
        EXPECT(0xb5, gbc.readMem(0x8909));
        EXPECT(0x83, gbc.readMem(0x890a));
        // FA 0375
        gbc.setState(0x6ec, 0x7808, 0x6b20, 0xc79c, 0x6d29, 0x7b73, 0x0, 0x1);
        gbc.writeMem(0x6ec, { 0xfa, 0xbc, 0x36 });
        gbc.writeMem(0x36bc, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7808, gbc.sp());
        EXPECT(0x6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0376
        gbc.setState(0xb1cc, 0x9ddd, 0x3310, 0x45be, 0xa344, 0xaec9, 0x1, 0x1);
        gbc.writeMem(0xb1cc, { 0xfa, 0xb8, 0xcf });
        gbc.writeMem(0xcfb8, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9ddd, gbc.sp());
        EXPECT(0xb1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb1cc));
        EXPECT(0xb8, gbc.readMem(0xb1cd));
        EXPECT(0xcf, gbc.readMem(0xb1ce));
        EXPECT(0x66, gbc.readMem(0xcfb8));
        // FA 0377
        gbc.setState(0xd9ab, 0x1836, 0xeab0, 0x569c, 0xc462, 0xd693, 0x0, 0x1);
        gbc.writeMem(0x84a, { 0x1 });
        gbc.writeMem(0xd9ab, { 0xfa, 0x4a, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1836, gbc.sp());
        EXPECT(0xd9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd9ab));
        EXPECT(0x4a, gbc.readMem(0xd9ac));
        EXPECT(0x8, gbc.readMem(0xd9ad));
        // FA 0378
        gbc.setState(0x87c7, 0xf33e, 0x5ca0, 0xadfa, 0xd265, 0x5db3, 0x0, 0x1);
        gbc.writeMem(0x87c7, { 0xfa, 0xff, 0xb9 });
        gbc.writeMem(0xb9ff, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf33e, gbc.sp());
        EXPECT(0x87ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x87c7));
        EXPECT(0xff, gbc.readMem(0x87c8));
        EXPECT(0xb9, gbc.readMem(0x87c9));
        EXPECT(0x5f, gbc.readMem(0xb9ff));
        // FA 0379
        gbc.setState(0x19d6, 0x44aa, 0xf740, 0xab85, 0x575d, 0x5b84, 0x1, 0x1);
        gbc.writeMem(0x19d6, { 0xfa, 0xbe, 0x25 });
        gbc.writeMem(0x25be, { 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x44aa, gbc.sp());
        EXPECT(0x19d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 037A
        gbc.setState(0xd3a, 0xd66d, 0xb940, 0x4102, 0xa51e, 0x42da, 0x1, 0x0);
        gbc.writeMem(0xd3a, { 0xfa, 0xf4, 0x2d });
        gbc.writeMem(0x2df4, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd66d, gbc.sp());
        EXPECT(0xd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 037B
        gbc.setState(0x5f77, 0xfee0, 0xbac0, 0xbe20, 0x2fb3, 0x6e2b, 0x1, 0x0);
        gbc.writeMem(0x756, { 0x5 });
        gbc.writeMem(0x5f77, { 0xfa, 0x56, 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfee0, gbc.sp());
        EXPECT(0x5f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 037C
        gbc.setState(0xb265, 0x5b16, 0x3730, 0x75c, 0x95e2, 0x5711, 0x0, 0x0);
        gbc.writeMem(0xb19e, { 0x9d });
        gbc.writeMem(0xb265, { 0xfa, 0x9e, 0xb1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0xb268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb19e));
        EXPECT(0xfa, gbc.readMem(0xb265));
        EXPECT(0x9e, gbc.readMem(0xb266));
        EXPECT(0xb1, gbc.readMem(0xb267));
        // FA 037D
        gbc.setState(0xa505, 0xe458, 0xf240, 0xe3b2, 0xd0b2, 0xeb0a, 0x0, 0x0);
        gbc.writeMem(0xa505, { 0xfa, 0x96, 0xfc });
        gbc.writeMem(0xfc96, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe458, gbc.sp());
        EXPECT(0xa508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa505));
        EXPECT(0x96, gbc.readMem(0xa506));
        EXPECT(0xfc, gbc.readMem(0xa507));
        EXPECT(0x37, gbc.readMem(0xfc96));
        // FA 037E
        gbc.setState(0x4410, 0x84e9, 0xa930, 0xc522, 0xe506, 0x2099, 0x0, 0x1);
        gbc.writeMem(0x4410, { 0xfa, 0x29, 0x87 });
        gbc.writeMem(0x8729, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x84e9, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8729));
        // FA 037F
        gbc.setState(0x6e6e, 0xfb68, 0x5430, 0x2aa0, 0xf258, 0xdacc, 0x0, 0x0);
        gbc.writeMem(0x6e6e, { 0xfa, 0xd1, 0xd3 });
        gbc.writeMem(0xd3d1, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0x6e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd3d1));
        // FA 0380
        gbc.setState(0x4601, 0x8013, 0xedc0, 0x334a, 0xe064, 0x58fb, 0x0, 0x1);
        gbc.writeMem(0x4601, { 0xfa, 0xb9, 0x67 });
        gbc.writeMem(0x67b9, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8013, gbc.sp());
        EXPECT(0x4604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0381
        gbc.setState(0xc857, 0xfe08, 0x8f50, 0xbcb0, 0xcc2c, 0x9684, 0x1, 0x0);
        gbc.writeMem(0x7f03, { 0x9a });
        gbc.writeMem(0xc857, { 0xfa, 0x3, 0x7f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe08, gbc.sp());
        EXPECT(0xc85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc857));
        EXPECT(0x3, gbc.readMem(0xc858));
        EXPECT(0x7f, gbc.readMem(0xc859));
        // FA 0382
        gbc.setState(0x5aa2, 0x7a09, 0xb5b0, 0x1449, 0x689d, 0xc356, 0x1, 0x0);
        gbc.writeMem(0x9fd, { 0x1d });
        gbc.writeMem(0x5aa2, { 0xfa, 0xfd, 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7a09, gbc.sp());
        EXPECT(0x5aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0383
        gbc.setState(0x48ba, 0xe869, 0xe910, 0x2f4f, 0xdf7a, 0x2a28, 0x1, 0x0);
        gbc.writeMem(0x2b7b, { 0xc7 });
        gbc.writeMem(0x48ba, { 0xfa, 0x7b, 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe869, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0384
        gbc.setState(0x88a5, 0x524c, 0x8e10, 0x6b1a, 0x201f, 0xc5b, 0x1, 0x1);
        gbc.writeMem(0x88a5, { 0xfa, 0xa, 0xb4 });
        gbc.writeMem(0xb40a, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x524c, gbc.sp());
        EXPECT(0x88a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x88a5));
        EXPECT(0xa, gbc.readMem(0x88a6));
        EXPECT(0xb4, gbc.readMem(0x88a7));
        EXPECT(0xfa, gbc.readMem(0xb40a));
        // FA 0385
        gbc.setState(0x9d9f, 0x1d1, 0x2ab0, 0x2753, 0xc1cf, 0x481d, 0x0, 0x1);
        gbc.writeMem(0x57bb, { 0x3e });
        gbc.writeMem(0x9d9f, { 0xfa, 0xbb, 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1d1, gbc.sp());
        EXPECT(0x9da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9d9f));
        EXPECT(0xbb, gbc.readMem(0x9da0));
        EXPECT(0x57, gbc.readMem(0x9da1));
        // FA 0386
        gbc.setState(0xa3cd, 0x1384, 0xa430, 0xf65e, 0xb352, 0x6e77, 0x0, 0x0);
        gbc.writeMem(0x6928, { 0xbb });
        gbc.writeMem(0xa3cd, { 0xfa, 0x28, 0x69 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1384, gbc.sp());
        EXPECT(0xa3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa3cd));
        EXPECT(0x28, gbc.readMem(0xa3ce));
        EXPECT(0x69, gbc.readMem(0xa3cf));
        // FA 0387
        gbc.setState(0x2852, 0x87b3, 0xfdb0, 0xa291, 0xfede, 0xabea, 0x1, 0x0);
        gbc.writeMem(0x23b2, { 0x65 });
        gbc.writeMem(0x2852, { 0xfa, 0xb2, 0x23 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x87b3, gbc.sp());
        EXPECT(0x2855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 0388
        gbc.setState(0x9145, 0xaf52, 0xd290, 0xa432, 0xcbb6, 0x4b4d, 0x0, 0x1);
        gbc.writeMem(0x9145, { 0xfa, 0xc, 0x9d });
        gbc.writeMem(0x9d0c, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaf52, gbc.sp());
        EXPECT(0x9148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9145));
        EXPECT(0xc, gbc.readMem(0x9146));
        EXPECT(0x9d, gbc.readMem(0x9147));
        EXPECT(0x77, gbc.readMem(0x9d0c));
        // FA 0389
        gbc.setState(0x3ec7, 0x3e82, 0x990, 0xe45c, 0x4760, 0xd39a, 0x0, 0x0);
        gbc.writeMem(0x3ec7, { 0xfa, 0xc0, 0x63 });
        gbc.writeMem(0x63c0, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3e82, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 038A
        gbc.setState(0x2ce0, 0xcd, 0x6870, 0x41a7, 0xeb02, 0xfc08, 0x0, 0x0);
        gbc.writeMem(0x2ce0, { 0xfa, 0xef, 0x90 });
        gbc.writeMem(0x90ef, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcd, gbc.sp());
        EXPECT(0x2ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x90ef));
        // FA 038B
        gbc.setState(0x8089, 0xb0, 0x9170, 0x21df, 0xb83c, 0xc2c7, 0x1, 0x0);
        gbc.writeMem(0x16ba, { 0x3c });
        gbc.writeMem(0x8089, { 0xfa, 0xba, 0x16 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb0, gbc.sp());
        EXPECT(0x808c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8089));
        EXPECT(0xba, gbc.readMem(0x808a));
        EXPECT(0x16, gbc.readMem(0x808b));
        // FA 038C
        gbc.setState(0xba6c, 0x7cc3, 0xb280, 0xf296, 0x9e41, 0x8406, 0x0, 0x0);
        gbc.writeMem(0xba6c, { 0xfa, 0x4a, 0xfb });
        gbc.writeMem(0xfb4a, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7cc3, gbc.sp());
        EXPECT(0xba6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xba6c));
        EXPECT(0x4a, gbc.readMem(0xba6d));
        EXPECT(0xfb, gbc.readMem(0xba6e));
        EXPECT(0x5f, gbc.readMem(0xfb4a));
        // FA 038D
        gbc.setState(0x8e64, 0xab6f, 0x2c00, 0x6f36, 0xe94c, 0x3144, 0x0, 0x0);
        gbc.writeMem(0x8e64, { 0xfa, 0x99, 0x90 });
        gbc.writeMem(0x9099, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xab6f, gbc.sp());
        EXPECT(0x8e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8e64));
        EXPECT(0x99, gbc.readMem(0x8e65));
        EXPECT(0x90, gbc.readMem(0x8e66));
        EXPECT(0xbc, gbc.readMem(0x9099));
        // FA 038E
        gbc.setState(0xb585, 0x2204, 0x29b0, 0xd6f9, 0x8ba2, 0xece5, 0x1, 0x1);
        gbc.writeMem(0xa602, { 0x42 });
        gbc.writeMem(0xb585, { 0xfa, 0x2, 0xa6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2204, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa602));
        EXPECT(0xfa, gbc.readMem(0xb585));
        EXPECT(0x2, gbc.readMem(0xb586));
        EXPECT(0xa6, gbc.readMem(0xb587));
        // FA 038F
        gbc.setState(0x9ed, 0xdfae, 0x4880, 0x55f9, 0x420c, 0x43b6, 0x1, 0x0);
        gbc.writeMem(0x9ed, { 0xfa, 0x0, 0x87 });
        gbc.writeMem(0x8700, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdfae, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8700));
        // FA 0390
        gbc.setState(0x9a77, 0x8ca6, 0x4740, 0xa92c, 0xe9cb, 0xf361, 0x0, 0x1);
        gbc.writeMem(0x5d2, { 0x81 });
        gbc.writeMem(0x9a77, { 0xfa, 0xd2, 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8ca6, gbc.sp());
        EXPECT(0x9a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9a77));
        EXPECT(0xd2, gbc.readMem(0x9a78));
        EXPECT(0x5, gbc.readMem(0x9a79));
        // FA 0391
        gbc.setState(0xf2e, 0x6b0f, 0x8500, 0xc06d, 0xf78e, 0x899e, 0x0, 0x0);
        gbc.writeMem(0xf2e, { 0xfa, 0x10, 0x51 });
        gbc.writeMem(0x5110, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6b0f, gbc.sp());
        EXPECT(0xf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0393
        gbc.setState(0xbff2, 0x1b61, 0x7490, 0xd027, 0xb64a, 0x4c4b, 0x0, 0x0);
        gbc.writeMem(0x5298, { 0xd });
        gbc.writeMem(0xbff2, { 0xfa, 0x98, 0x52 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1b61, gbc.sp());
        EXPECT(0xbff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbff2));
        EXPECT(0x98, gbc.readMem(0xbff3));
        EXPECT(0x52, gbc.readMem(0xbff4));
        // FA 0394
        gbc.setState(0xaa6b, 0x4a14, 0xd4a0, 0xaf68, 0xec3f, 0x6991, 0x1, 0x1);
        gbc.writeMem(0x3a48, { 0xac });
        gbc.writeMem(0xaa6b, { 0xfa, 0x48, 0x3a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4a14, gbc.sp());
        EXPECT(0xaa6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaa6b));
        EXPECT(0x48, gbc.readMem(0xaa6c));
        EXPECT(0x3a, gbc.readMem(0xaa6d));
        // FA 0395
        gbc.setState(0x1ec7, 0xd98b, 0xdfa0, 0x9478, 0x8728, 0x6fe5, 0x1, 0x0);
        gbc.writeMem(0x180d, { 0xad });
        gbc.writeMem(0x1ec7, { 0xfa, 0xd, 0x18 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd98b, gbc.sp());
        EXPECT(0x1eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 0396
        gbc.setState(0xdf77, 0xc15c, 0x2e00, 0x1797, 0xb0cd, 0x894c, 0x1, 0x1);
        gbc.writeMem(0x7a7f, { 0xd6 });
        gbc.writeMem(0xdf77, { 0xfa, 0x7f, 0x7a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc15c, gbc.sp());
        EXPECT(0xdf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdf77));
        EXPECT(0x7f, gbc.readMem(0xdf78));
        EXPECT(0x7a, gbc.readMem(0xdf79));
        // FA 0397
        gbc.setState(0xa655, 0x371c, 0x5540, 0xd5ff, 0xb01d, 0xe110, 0x1, 0x1);
        gbc.writeMem(0x170a, { 0x7f });
        gbc.writeMem(0xa655, { 0xfa, 0xa, 0x17 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x371c, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa655));
        EXPECT(0xa, gbc.readMem(0xa656));
        EXPECT(0x17, gbc.readMem(0xa657));
        // FA 0398
        gbc.setState(0xb05a, 0xf3e5, 0xbb20, 0x5df6, 0xdd7b, 0xebd3, 0x1, 0x1);
        gbc.writeMem(0x8207, { 0x9 });
        gbc.writeMem(0xb05a, { 0xfa, 0x7, 0x82 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf3e5, gbc.sp());
        EXPECT(0xb05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8207));
        EXPECT(0xfa, gbc.readMem(0xb05a));
        EXPECT(0x7, gbc.readMem(0xb05b));
        EXPECT(0x82, gbc.readMem(0xb05c));
        // FA 0399
        gbc.setState(0x874d, 0xd62d, 0xbc50, 0x2cab, 0x55e7, 0x66bb, 0x1, 0x0);
        gbc.writeMem(0x129b, { 0xec });
        gbc.writeMem(0x874d, { 0xfa, 0x9b, 0x12 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd62d, gbc.sp());
        EXPECT(0x8750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x874d));
        EXPECT(0x9b, gbc.readMem(0x874e));
        EXPECT(0x12, gbc.readMem(0x874f));
        // FA 039A
        gbc.setState(0x5fbc, 0x2833, 0x5fd0, 0x2625, 0xa110, 0x853a, 0x1, 0x0);
        gbc.writeMem(0x1538, { 0x72 });
        gbc.writeMem(0x5fbc, { 0xfa, 0x38, 0x15 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2833, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 039B
        gbc.setState(0x5c3e, 0xf7a9, 0xbde0, 0xd834, 0xcea3, 0xa2dc, 0x1, 0x1);
        gbc.writeMem(0x521, { 0x57 });
        gbc.writeMem(0x5c3e, { 0xfa, 0x21, 0x5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf7a9, gbc.sp());
        EXPECT(0x5c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 039C
        gbc.setState(0xc9af, 0xfe9f, 0x6a80, 0xbc19, 0xa034, 0x13b7, 0x1, 0x0);
        gbc.writeMem(0xc9af, { 0xfa, 0x54, 0xf2 });
        gbc.writeMem(0xf254, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfe9f, gbc.sp());
        EXPECT(0xc9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc9af));
        EXPECT(0x54, gbc.readMem(0xc9b0));
        EXPECT(0xf2, gbc.readMem(0xc9b1));
        EXPECT(0x7, gbc.readMem(0xf254));
        // FA 039D
        gbc.setState(0x387c, 0xfbb2, 0x2520, 0xd0ad, 0x6a3f, 0x1697, 0x1, 0x1);
        gbc.writeMem(0x96, { 0x74 });
        gbc.writeMem(0x387c, { 0xfa, 0x96, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfbb2, gbc.sp());
        EXPECT(0x387f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 039E
        gbc.setState(0x66ed, 0xf234, 0x1e20, 0x73a3, 0x1571, 0xda10, 0x0, 0x0);
        gbc.writeMem(0x5513, { 0xfc });
        gbc.writeMem(0x66ed, { 0xfa, 0x13, 0x55 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0x66f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 039F
        gbc.setState(0xe2ed, 0xb8fe, 0xb30, 0x9b7d, 0xf729, 0x3987, 0x0, 0x1);
        gbc.writeMem(0xacdd, { 0x23 });
        gbc.writeMem(0xe2ed, { 0xfa, 0xdd, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb8fe, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xacdd));
        EXPECT(0xfa, gbc.readMem(0xe2ed));
        EXPECT(0xdd, gbc.readMem(0xe2ee));
        EXPECT(0xac, gbc.readMem(0xe2ef));
        // FA 03A0
        gbc.setState(0x9070, 0xf470, 0x9760, 0x2105, 0x38f, 0x9fe, 0x1, 0x0);
        gbc.writeMem(0x5b06, { 0xd1 });
        gbc.writeMem(0x9070, { 0xfa, 0x6, 0x5b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0x9073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9070));
        EXPECT(0x6, gbc.readMem(0x9071));
        EXPECT(0x5b, gbc.readMem(0x9072));
        // FA 03A1
        gbc.setState(0x8f66, 0x1ee0, 0xae30, 0xe53e, 0xbb10, 0xbcee, 0x0, 0x0);
        gbc.writeMem(0x7a30, { 0x95 });
        gbc.writeMem(0x8f66, { 0xfa, 0x30, 0x7a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1ee0, gbc.sp());
        EXPECT(0x8f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8f66));
        EXPECT(0x30, gbc.readMem(0x8f67));
        EXPECT(0x7a, gbc.readMem(0x8f68));
        // FA 03A2
        gbc.setState(0x916c, 0x25f, 0xef60, 0x4d0f, 0xabee, 0x1ff5, 0x1, 0x1);
        gbc.writeMem(0x916c, { 0xfa, 0xaa, 0xc7 });
        gbc.writeMem(0xc7aa, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x25f, gbc.sp());
        EXPECT(0x916f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x916c));
        EXPECT(0xaa, gbc.readMem(0x916d));
        EXPECT(0xc7, gbc.readMem(0x916e));
        EXPECT(0xc5, gbc.readMem(0xc7aa));
        // FA 03A3
        gbc.setState(0x6616, 0xab6a, 0x7000, 0x6ccd, 0xff44, 0xbc5d, 0x0, 0x0);
        gbc.writeMem(0x6616, { 0xfa, 0xb4, 0xe1 });
        gbc.writeMem(0xe1b4, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0x6619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe1b4));
        // FA 03A4
        gbc.setState(0xd7ea, 0x89b1, 0x8eb0, 0x8eea, 0x743e, 0xd2c4, 0x0, 0x1);
        gbc.writeMem(0xd7ea, { 0xfa, 0xa5, 0xf0 });
        gbc.writeMem(0xf0a5, { 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x89b1, gbc.sp());
        EXPECT(0xd7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd7ea));
        EXPECT(0xa5, gbc.readMem(0xd7eb));
        EXPECT(0xf0, gbc.readMem(0xd7ec));
        EXPECT(0xd7, gbc.readMem(0xf0a5));
        // FA 03A5
        gbc.setState(0xedf4, 0x30bf, 0x840, 0xbb8b, 0x916c, 0x52b9, 0x1, 0x0);
        gbc.writeMem(0x4611, { 0xde });
        gbc.writeMem(0xedf4, { 0xfa, 0x11, 0x46 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x30bf, gbc.sp());
        EXPECT(0xedf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xedf4));
        EXPECT(0x11, gbc.readMem(0xedf5));
        EXPECT(0x46, gbc.readMem(0xedf6));
        // FA 03A6
        gbc.setState(0xa65b, 0xc75c, 0xc950, 0x8cff, 0x883a, 0x844b, 0x0, 0x1);
        gbc.writeMem(0xa65b, { 0xfa, 0xb0, 0xc2 });
        gbc.writeMem(0xc2b0, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc75c, gbc.sp());
        EXPECT(0xa65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa65b));
        EXPECT(0xb0, gbc.readMem(0xa65c));
        EXPECT(0xc2, gbc.readMem(0xa65d));
        EXPECT(0x61, gbc.readMem(0xc2b0));
        // FA 03A7
        gbc.setState(0xa485, 0x2006, 0xee30, 0x38f1, 0xf498, 0xd3ad, 0x0, 0x0);
        gbc.writeMem(0x8c65, { 0x3f });
        gbc.writeMem(0xa485, { 0xfa, 0x65, 0x8c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2006, gbc.sp());
        EXPECT(0xa488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8c65));
        EXPECT(0xfa, gbc.readMem(0xa485));
        EXPECT(0x65, gbc.readMem(0xa486));
        EXPECT(0x8c, gbc.readMem(0xa487));
        // FA 03A8
        gbc.setState(0x5be3, 0xcc5d, 0x9e90, 0xda18, 0x614b, 0xd272, 0x1, 0x0);
        gbc.writeMem(0x5a17, { 0x7d });
        gbc.writeMem(0x5be3, { 0xfa, 0x17, 0x5a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0x5be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03A9
        gbc.setState(0xba96, 0xafc7, 0xdb60, 0x9fc8, 0xe7db, 0xd036, 0x1, 0x1);
        gbc.writeMem(0x13e5, { 0x5e });
        gbc.writeMem(0xba96, { 0xfa, 0xe5, 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xafc7, gbc.sp());
        EXPECT(0xba99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xba96));
        EXPECT(0xe5, gbc.readMem(0xba97));
        EXPECT(0x13, gbc.readMem(0xba98));
        // FA 03AA
        gbc.setState(0xcc08, 0x7d12, 0x3ab0, 0x799e, 0x8f0f, 0x6026, 0x1, 0x0);
        gbc.writeMem(0x1001, { 0x93 });
        gbc.writeMem(0xcc08, { 0xfa, 0x1, 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7d12, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xcc08));
        EXPECT(0x1, gbc.readMem(0xcc09));
        EXPECT(0x10, gbc.readMem(0xcc0a));
        // FA 03AB
        gbc.setState(0x2c0e, 0xe7af, 0x69c0, 0xfc49, 0xc7b6, 0x6ffa, 0x1, 0x0);
        gbc.writeMem(0x2c0e, { 0xfa, 0xda, 0x8b });
        gbc.writeMem(0x8bda, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe7af, gbc.sp());
        EXPECT(0x2c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8bda));
        // FA 03AC
        gbc.setState(0xde32, 0x1bcf, 0x4820, 0xff12, 0x860c, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0xde32, { 0xfa, 0x15, 0xf9 });
        gbc.writeMem(0xf915, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1bcf, gbc.sp());
        EXPECT(0xde35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xde32));
        EXPECT(0x15, gbc.readMem(0xde33));
        EXPECT(0xf9, gbc.readMem(0xde34));
        EXPECT(0xc1, gbc.readMem(0xf915));
        // FA 03AE
        gbc.setState(0x12cc, 0x5616, 0xc210, 0xc27, 0xa079, 0xb6f7, 0x1, 0x1);
        gbc.writeMem(0x12cc, { 0xfa, 0xc2, 0xe1 });
        gbc.writeMem(0xe1c2, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5616, gbc.sp());
        EXPECT(0x12cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe1c2));
        // FA 03B0
        gbc.setState(0x9036, 0x96c7, 0xadb0, 0x598f, 0xf815, 0x83af, 0x0, 0x1);
        gbc.writeMem(0x9036, { 0xfa, 0xe, 0xea });
        gbc.writeMem(0xea0e, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x96c7, gbc.sp());
        EXPECT(0x9039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9036));
        EXPECT(0xe, gbc.readMem(0x9037));
        EXPECT(0xea, gbc.readMem(0x9038));
        EXPECT(0x25, gbc.readMem(0xea0e));
        // FA 03B1
        gbc.setState(0xaf1b, 0xf0c5, 0x9d00, 0x4f25, 0x34d1, 0xac49, 0x0, 0x1);
        gbc.writeMem(0x7817, { 0x92 });
        gbc.writeMem(0xaf1b, { 0xfa, 0x17, 0x78 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf0c5, gbc.sp());
        EXPECT(0xaf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaf1b));
        EXPECT(0x17, gbc.readMem(0xaf1c));
        EXPECT(0x78, gbc.readMem(0xaf1d));
        // FA 03B2
        gbc.setState(0x356a, 0x9b18, 0xb3b0, 0x30b, 0x15c6, 0x7c62, 0x1, 0x1);
        gbc.writeMem(0x356a, { 0xfa, 0xd2, 0xa2 });
        gbc.writeMem(0xa2d2, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9b18, gbc.sp());
        EXPECT(0x356d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa2d2));
        // FA 03B3
        gbc.setState(0x2dd4, 0x9695, 0x6d30, 0x6018, 0x95d6, 0x10d2, 0x0, 0x1);
        gbc.writeMem(0x2dd4, { 0xfa, 0x8f, 0xdb });
        gbc.writeMem(0xdb8f, { 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9695, gbc.sp());
        EXPECT(0x2dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xdb8f));
        // FA 03B4
        gbc.setState(0x245b, 0xfc16, 0x7410, 0xefc7, 0x91fe, 0x18b6, 0x0, 0x1);
        gbc.writeMem(0x14b4, { 0x3 });
        gbc.writeMem(0x245b, { 0xfa, 0xb4, 0x14 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfc16, gbc.sp());
        EXPECT(0x245e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03B5
        gbc.setState(0x41, 0x652f, 0x1420, 0xa8a7, 0x49bb, 0x272c, 0x1, 0x0);
        gbc.writeMem(0x41, { 0xfa, 0x67, 0x6e });
        gbc.writeMem(0x6e67, { 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x652f, gbc.sp());
        EXPECT(0x44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 03B6
        gbc.setState(0x6687, 0x3ab3, 0xa250, 0x9493, 0x26b1, 0x5efa, 0x1, 0x1);
        gbc.writeMem(0x6687, { 0xfa, 0xcd, 0xb9 });
        gbc.writeMem(0xb9cd, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3ab3, gbc.sp());
        EXPECT(0x668a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xb9cd));
        // FA 03B7
        gbc.setState(0x9940, 0x2118, 0x6ae0, 0x3bf2, 0xc710, 0xa41d, 0x1, 0x0);
        gbc.writeMem(0x12c5, { 0xe8 });
        gbc.writeMem(0x9940, { 0xfa, 0xc5, 0x12 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2118, gbc.sp());
        EXPECT(0x9943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9940));
        EXPECT(0xc5, gbc.readMem(0x9941));
        EXPECT(0x12, gbc.readMem(0x9942));
        // FA 03B8
        gbc.setState(0xa9c5, 0x5156, 0x6bb0, 0x8cc1, 0x6327, 0xe35a, 0x0, 0x0);
        gbc.writeMem(0xa9c5, { 0xfa, 0x16, 0xf6 });
        gbc.writeMem(0xf616, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5156, gbc.sp());
        EXPECT(0xa9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa9c5));
        EXPECT(0x16, gbc.readMem(0xa9c6));
        EXPECT(0xf6, gbc.readMem(0xa9c7));
        EXPECT(0x8f, gbc.readMem(0xf616));
        // FA 03B9
        gbc.setState(0xd65c, 0x7ecd, 0x9d70, 0x9e4f, 0xbbf0, 0x40c5, 0x1, 0x0);
        gbc.writeMem(0x8cd0, { 0x76 });
        gbc.writeMem(0xd65c, { 0xfa, 0xd0, 0x8c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7ecd, gbc.sp());
        EXPECT(0xd65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8cd0));
        EXPECT(0xfa, gbc.readMem(0xd65c));
        EXPECT(0xd0, gbc.readMem(0xd65d));
        EXPECT(0x8c, gbc.readMem(0xd65e));
        // FA 03BA
        gbc.setState(0x7562, 0xc21b, 0xab50, 0xc9a5, 0x406b, 0xb464, 0x1, 0x0);
        gbc.writeMem(0x7562, { 0xfa, 0x86, 0x81 });
        gbc.writeMem(0x8186, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc21b, gbc.sp());
        EXPECT(0x7565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8186));
        // FA 03BB
        gbc.setState(0x4832, 0x2259, 0xae40, 0x91cc, 0x4744, 0x357b, 0x1, 0x0);
        gbc.writeMem(0x4832, { 0xfa, 0x7f, 0xaa });
        gbc.writeMem(0xaa7f, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2259, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaa7f));
        // FA 03BC
        gbc.setState(0x6eb9, 0x1a5b, 0x89b0, 0xad61, 0x9fff, 0x78b6, 0x0, 0x0);
        gbc.writeMem(0x6eb9, { 0xfa, 0xa4, 0xce });
        gbc.writeMem(0xcea4, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1a5b, gbc.sp());
        EXPECT(0x6ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcea4));
        // FA 03BD
        gbc.setState(0x3a98, 0xc805, 0xe3c0, 0x9d3c, 0x9c70, 0x6ceb, 0x0, 0x0);
        gbc.writeMem(0x3a98, { 0xfa, 0x1d, 0xc4 });
        gbc.writeMem(0xc41d, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc805, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xc41d));
        // FA 03BE
        gbc.setState(0x97aa, 0xb563, 0xc410, 0x36cf, 0x29f3, 0xf86, 0x1, 0x0);
        gbc.writeMem(0x4f84, { 0xb2 });
        gbc.writeMem(0x97aa, { 0xfa, 0x84, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb563, gbc.sp());
        EXPECT(0x97ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x97aa));
        EXPECT(0x84, gbc.readMem(0x97ab));
        EXPECT(0x4f, gbc.readMem(0x97ac));
        // FA 03BF
        gbc.setState(0xccff, 0x82c6, 0xa470, 0x1130, 0x8cfa, 0xb11c, 0x1, 0x1);
        gbc.writeMem(0x6cbe, { 0x6a });
        gbc.writeMem(0xccff, { 0xfa, 0xbe, 0x6c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x82c6, gbc.sp());
        EXPECT(0xcd02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xccff));
        EXPECT(0xbe, gbc.readMem(0xcd00));
        EXPECT(0x6c, gbc.readMem(0xcd01));
        // FA 03C0
        gbc.setState(0xc609, 0x9362, 0xe020, 0xc4d9, 0xc3d8, 0x16c6, 0x1, 0x1);
        gbc.writeMem(0xc609, { 0xfa, 0xa1, 0xe5 });
        gbc.writeMem(0xe5a1, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9362, gbc.sp());
        EXPECT(0xc60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc609));
        EXPECT(0xa1, gbc.readMem(0xc60a));
        EXPECT(0xe5, gbc.readMem(0xc60b));
        EXPECT(0x78, gbc.readMem(0xe5a1));
        // FA 03C1
        gbc.setState(0x39b7, 0x9af9, 0x8f40, 0xce39, 0xe22f, 0xa0b5, 0x1, 0x0);
        gbc.writeMem(0x11cd, { 0x43 });
        gbc.writeMem(0x39b7, { 0xfa, 0xcd, 0x11 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9af9, gbc.sp());
        EXPECT(0x39ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 03C2
        gbc.setState(0xc23f, 0xcf3, 0xe140, 0xa70e, 0x47af, 0xb72, 0x0, 0x1);
        gbc.writeMem(0x4d8d, { 0x36 });
        gbc.writeMem(0xc23f, { 0xfa, 0x8d, 0x4d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcf3, gbc.sp());
        EXPECT(0xc242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc23f));
        EXPECT(0x8d, gbc.readMem(0xc240));
        EXPECT(0x4d, gbc.readMem(0xc241));
        // FA 03C4
        gbc.setState(0xb99c, 0x422b, 0x5f20, 0x8245, 0x8b8a, 0x8d65, 0x1, 0x1);
        gbc.writeMem(0xb99c, { 0xfa, 0xc2, 0xe1 });
        gbc.writeMem(0xe1c2, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0xb99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb99c));
        EXPECT(0xc2, gbc.readMem(0xb99d));
        EXPECT(0xe1, gbc.readMem(0xb99e));
        EXPECT(0xb2, gbc.readMem(0xe1c2));
        // FA 03C5
        gbc.setState(0xe33b, 0xffa6, 0x2ad0, 0xa96c, 0x72f5, 0x697c, 0x0, 0x0);
        gbc.writeMem(0x2a21, { 0x9b });
        gbc.writeMem(0xe33b, { 0xfa, 0x21, 0x2a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xffa6, gbc.sp());
        EXPECT(0xe33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe33b));
        EXPECT(0x21, gbc.readMem(0xe33c));
        EXPECT(0x2a, gbc.readMem(0xe33d));
        // FA 03C6
        gbc.setState(0xe3a3, 0x1d8d, 0x3b0, 0x6b06, 0x4840, 0x9b55, 0x1, 0x0);
        gbc.writeMem(0x6886, { 0xaa });
        gbc.writeMem(0xe3a3, { 0xfa, 0x86, 0x68 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0xe3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe3a3));
        EXPECT(0x86, gbc.readMem(0xe3a4));
        EXPECT(0x68, gbc.readMem(0xe3a5));
        // FA 03C7
        gbc.setState(0xaa6a, 0x940a, 0x87a0, 0xd479, 0x899c, 0x2780, 0x1, 0x0);
        gbc.writeMem(0x48ac, { 0x20 });
        gbc.writeMem(0xaa6a, { 0xfa, 0xac, 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0xaa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaa6a));
        EXPECT(0xac, gbc.readMem(0xaa6b));
        EXPECT(0x48, gbc.readMem(0xaa6c));
        // FA 03C8
        gbc.setState(0x690f, 0x52b5, 0x3710, 0xa0e5, 0x353c, 0x6661, 0x1, 0x1);
        gbc.writeMem(0x53b2, { 0xac });
        gbc.writeMem(0x690f, { 0xfa, 0xb2, 0x53 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x52b5, gbc.sp());
        EXPECT(0x6912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03C9
        gbc.setState(0xe823, 0x4cf3, 0xe5d0, 0x6fc, 0x4b6e, 0x6401, 0x0, 0x0);
        gbc.writeMem(0x799b, { 0x27 });
        gbc.writeMem(0xe823, { 0xfa, 0x9b, 0x79 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0xe826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe823));
        EXPECT(0x9b, gbc.readMem(0xe824));
        EXPECT(0x79, gbc.readMem(0xe825));
        // FA 03CA
        gbc.setState(0xeaf3, 0xaaf2, 0xdb40, 0x39eb, 0xe6a9, 0x6d67, 0x1, 0x0);
        gbc.writeMem(0xb881, { 0x1c });
        gbc.writeMem(0xeaf3, { 0xfa, 0x81, 0xb8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaaf2, gbc.sp());
        EXPECT(0xeaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb881));
        EXPECT(0xfa, gbc.readMem(0xeaf3));
        EXPECT(0x81, gbc.readMem(0xeaf4));
        EXPECT(0xb8, gbc.readMem(0xeaf5));
        // FA 03CB
        gbc.setState(0x43d3, 0xeb3a, 0x5240, 0xa683, 0xd0a9, 0xe7ba, 0x1, 0x1);
        gbc.writeMem(0x43d3, { 0xfa, 0xb0, 0x8f });
        gbc.writeMem(0x8fb0, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xeb3a, gbc.sp());
        EXPECT(0x43d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8fb0));
        // FA 03CC
        gbc.setState(0x6613, 0x9d26, 0x8200, 0xa02a, 0x44c9, 0xede, 0x1, 0x0);
        gbc.writeMem(0x420f, { 0x82 });
        gbc.writeMem(0x6613, { 0xfa, 0xf, 0x42 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9d26, gbc.sp());
        EXPECT(0x6616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 03CD
        gbc.setState(0xd808, 0x2dd1, 0xf8f0, 0xb6a8, 0x132d, 0xac49, 0x1, 0x0);
        gbc.writeMem(0x56d7, { 0x94 });
        gbc.writeMem(0xd808, { 0xfa, 0xd7, 0x56 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2dd1, gbc.sp());
        EXPECT(0xd80b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd808));
        EXPECT(0xd7, gbc.readMem(0xd809));
        EXPECT(0x56, gbc.readMem(0xd80a));
        // FA 03CE
        gbc.setState(0xa471, 0xc415, 0xc0f0, 0xa551, 0xc77f, 0x549f, 0x0, 0x1);
        gbc.writeMem(0x5f37, { 0x36 });
        gbc.writeMem(0xa471, { 0xfa, 0x37, 0x5f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc415, gbc.sp());
        EXPECT(0xa474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa471));
        EXPECT(0x37, gbc.readMem(0xa472));
        EXPECT(0x5f, gbc.readMem(0xa473));
        // FA 03CF
        gbc.setState(0x9181, 0xf8c3, 0x4a90, 0xd8c6, 0xd5f4, 0x9db4, 0x0, 0x1);
        gbc.writeMem(0x9181, { 0xfa, 0xf3, 0xab });
        gbc.writeMem(0xabf3, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf8c3, gbc.sp());
        EXPECT(0x9184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9181));
        EXPECT(0xf3, gbc.readMem(0x9182));
        EXPECT(0xab, gbc.readMem(0x9183));
        EXPECT(0x45, gbc.readMem(0xabf3));
        // FA 03D0
        gbc.setState(0x9b76, 0x56c4, 0x1f0, 0xc6d5, 0xb358, 0x5d22, 0x1, 0x1);
        gbc.writeMem(0x1e93, { 0x7d });
        gbc.writeMem(0x9b76, { 0xfa, 0x93, 0x1e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0x9b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9b76));
        EXPECT(0x93, gbc.readMem(0x9b77));
        EXPECT(0x1e, gbc.readMem(0x9b78));
        // FA 03D1
        gbc.setState(0x98f9, 0x679a, 0xce40, 0x4ccf, 0xf4bd, 0x5d56, 0x0, 0x1);
        gbc.writeMem(0x3bf0, { 0xf3 });
        gbc.writeMem(0x98f9, { 0xfa, 0xf0, 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x679a, gbc.sp());
        EXPECT(0x98fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x98f9));
        EXPECT(0xf0, gbc.readMem(0x98fa));
        EXPECT(0x3b, gbc.readMem(0x98fb));
        // FA 03D2
        gbc.setState(0xed39, 0x63fc, 0xde70, 0x2968, 0xf3fe, 0x839c, 0x1, 0x0);
        gbc.writeMem(0x337c, { 0x1f });
        gbc.writeMem(0xed39, { 0xfa, 0x7c, 0x33 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0xed3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xed39));
        EXPECT(0x7c, gbc.readMem(0xed3a));
        EXPECT(0x33, gbc.readMem(0xed3b));
        // FA 03D3
        gbc.setState(0x5053, 0xf33a, 0x4210, 0xb8b3, 0x6e96, 0x13ea, 0x0, 0x1);
        gbc.writeMem(0x5053, { 0xfa, 0x32, 0x75 });
        gbc.writeMem(0x7532, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf33a, gbc.sp());
        EXPECT(0x5056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03D4
        gbc.setState(0x8911, 0xc8d, 0xc4b0, 0x7a9c, 0x8ed8, 0x2d49, 0x0, 0x0);
        gbc.writeMem(0x8911, { 0xfa, 0x9e, 0xe3 });
        gbc.writeMem(0xe39e, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc8d, gbc.sp());
        EXPECT(0x8914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8911));
        EXPECT(0x9e, gbc.readMem(0x8912));
        EXPECT(0xe3, gbc.readMem(0x8913));
        EXPECT(0x6e, gbc.readMem(0xe39e));
        // FA 03D5
        gbc.setState(0x9c61, 0xc88e, 0x6330, 0xc678, 0x25eb, 0x581c, 0x1, 0x1);
        gbc.writeMem(0x9c61, { 0xfa, 0x22, 0xa0 });
        gbc.writeMem(0xa022, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0x9c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9c61));
        EXPECT(0x22, gbc.readMem(0x9c62));
        EXPECT(0xa0, gbc.readMem(0x9c63));
        EXPECT(0xc5, gbc.readMem(0xa022));
        // FA 03D6
        gbc.setState(0xc033, 0xcdb4, 0xb4f0, 0x9ef0, 0x8afe, 0x7f8f, 0x1, 0x0);
        gbc.writeMem(0xa27e, { 0x22 });
        gbc.writeMem(0xc033, { 0xfa, 0x7e, 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcdb4, gbc.sp());
        EXPECT(0xc036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa27e));
        EXPECT(0xfa, gbc.readMem(0xc033));
        EXPECT(0x7e, gbc.readMem(0xc034));
        EXPECT(0xa2, gbc.readMem(0xc035));
        // FA 03D7
        gbc.setState(0x74c9, 0x4787, 0x5650, 0x8bfc, 0xec91, 0xa00c, 0x1, 0x0);
        gbc.writeMem(0x74c9, { 0xfa, 0xbe, 0xbd });
        gbc.writeMem(0xbdbe, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4787, gbc.sp());
        EXPECT(0x74cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xbdbe));
        // FA 03D8
        gbc.setState(0x62db, 0x407, 0x7900, 0xf587, 0x8a84, 0xa1a, 0x0, 0x0);
        gbc.writeMem(0x62db, { 0xfa, 0xa7, 0xa9 });
        gbc.writeMem(0xa9a7, { 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x407, gbc.sp());
        EXPECT(0x62de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa9a7));
        // FA 03D9
        gbc.setState(0x5c29, 0x31, 0x7230, 0xb956, 0x54b, 0x8e2e, 0x1, 0x0);
        gbc.writeMem(0x6cc, { 0xee });
        gbc.writeMem(0x5c29, { 0xfa, 0xcc, 0x6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x31, gbc.sp());
        EXPECT(0x5c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03DA
        gbc.setState(0xa85, 0xcb37, 0x7530, 0x225a, 0xbf3a, 0xa1ce, 0x1, 0x0);
        gbc.writeMem(0xa85, { 0xfa, 0x1c, 0x23 });
        gbc.writeMem(0x231c, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcb37, gbc.sp());
        EXPECT(0xa88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03DB
        gbc.setState(0x98ac, 0xc17f, 0x8c70, 0x7f94, 0x794c, 0x8bd8, 0x1, 0x0);
        gbc.writeMem(0x5301, { 0xa });
        gbc.writeMem(0x98ac, { 0xfa, 0x1, 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc17f, gbc.sp());
        EXPECT(0x98af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x98ac));
        EXPECT(0x1, gbc.readMem(0x98ad));
        EXPECT(0x53, gbc.readMem(0x98ae));
        // FA 03DC
        gbc.setState(0xce1, 0x84a8, 0xd390, 0xee58, 0x1db8, 0x4fe1, 0x0, 0x0);
        gbc.writeMem(0xce1, { 0xfa, 0xfb, 0xd3 });
        gbc.writeMem(0xd3fb, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x84a8, gbc.sp());
        EXPECT(0xce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd3fb));
        // FA 03DD
        gbc.setState(0xb8c, 0x6ae4, 0xefb0, 0x6531, 0xd2dd, 0x1e48, 0x0, 0x1);
        gbc.writeMem(0xb8c, { 0xfa, 0x89, 0x55 });
        gbc.writeMem(0x5589, { 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0xb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03DE
        gbc.setState(0xd1bd, 0xff46, 0xc6f0, 0x2b22, 0xfa86, 0xd2d6, 0x1, 0x1);
        gbc.writeMem(0xd1bd, { 0xfa, 0x11, 0xfe });
        gbc.writeMem(0xfe11, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xff46, gbc.sp());
        EXPECT(0xd1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd1bd));
        EXPECT(0x11, gbc.readMem(0xd1be));
        EXPECT(0xfe, gbc.readMem(0xd1bf));
        EXPECT(0x13, gbc.readMem(0xfe11));
        // FA 03DF
        gbc.setState(0x9e4, 0x9d68, 0x5a0, 0xe714, 0xdf68, 0x4dab, 0x0, 0x1);
        gbc.writeMem(0x9e4, { 0xfa, 0xb3, 0xa4 });
        gbc.writeMem(0xa4b3, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9d68, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa4b3));
        // FA 03E0
        gbc.setState(0x6e45, 0x2a94, 0x3a50, 0xf90a, 0xd8b8, 0x891, 0x1, 0x1);
        gbc.writeMem(0x6e45, { 0xfa, 0x19, 0xdc });
        gbc.writeMem(0xdc19, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2a94, gbc.sp());
        EXPECT(0x6e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdc19));
        // FA 03E1
        gbc.setState(0x5c0a, 0x6bf1, 0x2d80, 0x86dc, 0x63fc, 0xd07d, 0x0, 0x1);
        gbc.writeMem(0x5c0a, { 0xfa, 0x11, 0xcb });
        gbc.writeMem(0xcb11, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6bf1, gbc.sp());
        EXPECT(0x5c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xcb11));
        // FA 03E2
        gbc.setState(0x715b, 0x24d1, 0x5840, 0x238c, 0x2968, 0x7419, 0x1, 0x1);
        gbc.writeMem(0x715b, { 0xfa, 0xd4, 0x7e });
        gbc.writeMem(0x7ed4, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0x715e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FA 03E3
        gbc.setState(0x3264, 0xc65, 0xd6d0, 0x3f4b, 0xdbc9, 0xf44a, 0x1, 0x0);
        gbc.writeMem(0x3264, { 0xfa, 0x95, 0x80 });
        gbc.writeMem(0x8095, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc65, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8095));
        // FA 03E4
        gbc.setState(0xab8a, 0x90be, 0xf2c0, 0xd4f3, 0x2b44, 0x6552, 0x1, 0x1);
        gbc.writeMem(0x7187, { 0xd3 });
        gbc.writeMem(0xab8a, { 0xfa, 0x87, 0x71 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x90be, gbc.sp());
        EXPECT(0xab8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xab8a));
        EXPECT(0x87, gbc.readMem(0xab8b));
        EXPECT(0x71, gbc.readMem(0xab8c));
        // FA 03E5
        gbc.setState(0x785d, 0xf744, 0x4330, 0x1f49, 0x52da, 0x3798, 0x0, 0x1);
        gbc.writeMem(0x63a3, { 0xc6 });
        gbc.writeMem(0x785d, { 0xfa, 0xa3, 0x63 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf744, gbc.sp());
        EXPECT(0x7860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03E6
        gbc.setState(0x1987, 0x5bc, 0xb230, 0xbfa8, 0xd87c, 0x83a8, 0x1, 0x1);
        gbc.writeMem(0x1987, { 0xfa, 0x24, 0x39 });
        gbc.writeMem(0x3924, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5bc, gbc.sp());
        EXPECT(0x198a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FA 03E7
        gbc.setState(0x2b24, 0xe997, 0x2360, 0xa1a4, 0x39bd, 0x89ec, 0x0, 0x1);
        gbc.writeMem(0x2b24, { 0xfa, 0x7f, 0x83 });
        gbc.writeMem(0x837f, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe997, gbc.sp());
        EXPECT(0x2b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x837f));
    }
