    TEST(gbcemu, opcode_7b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 7B 0000
        gbc.setState(0x82c3, 0xc53a, 0x3e0, 0xddfa, 0x362a, 0x8153, 0x1, 0x1);
        gbc.writeMem(0x82c3, { 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc53a, gbc.sp());
        EXPECT(0x82c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x82c3));
        // 7B 0001
        gbc.setState(0x48b9, 0x7ac, 0xd030, 0xf6d, 0xab38, 0xef84, 0x1, 0x1);
        gbc.writeMem(0x48b9, { 0x7b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7ac, gbc.sp());
        EXPECT(0x48ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0002
        gbc.setState(0xaca7, 0x5995, 0x7af0, 0xd0db, 0x425a, 0x3d1b, 0x1, 0x0);
        gbc.writeMem(0xaca7, { 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5995, gbc.sp());
        EXPECT(0xaca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaca7));
        // 7B 0003
        gbc.setState(0xe47e, 0x81fc, 0x55f0, 0x5fac, 0xf02c, 0x9696, 0x1, 0x1);
        gbc.writeMem(0xe47e, { 0x7b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x81fc, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe47e));
        // 7B 0004
        gbc.setState(0x4452, 0x5aad, 0x7c30, 0xcae5, 0x8331, 0xc380, 0x1, 0x0);
        gbc.writeMem(0x4452, { 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5aad, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0005
        gbc.setState(0x5ca9, 0x3444, 0xc0e0, 0x3466, 0x403f, 0xd640, 0x1, 0x0);
        gbc.writeMem(0x5ca9, { 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3444, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0006
        gbc.setState(0xb107, 0xddb0, 0xba60, 0x61e4, 0x954e, 0xe421, 0x1, 0x0);
        gbc.writeMem(0xb107, { 0x7b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xddb0, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb107));
        // 7B 0007
        gbc.setState(0x19f0, 0xbde5, 0x80e0, 0x9472, 0xa0a, 0xe24b, 0x0, 0x0);
        gbc.writeMem(0x19f0, { 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbde5, gbc.sp());
        EXPECT(0x19f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0008
        gbc.setState(0xb19f, 0xbbf4, 0x9060, 0xe54f, 0x42b1, 0x415, 0x1, 0x0);
        gbc.writeMem(0xb19f, { 0x7b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbbf4, gbc.sp());
        EXPECT(0xb1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb19f));
        // 7B 0009
        gbc.setState(0xcd46, 0x17dd, 0x9d10, 0x7fc2, 0xee43, 0xe8e5, 0x0, 0x0);
        gbc.writeMem(0xcd46, { 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0xcd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcd46));
        // 7B 000A
        gbc.setState(0x3118, 0x1a22, 0xfba0, 0x85d6, 0x461e, 0x155d, 0x1, 0x0);
        gbc.writeMem(0x3118, { 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1a22, gbc.sp());
        EXPECT(0x3119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 000B
        gbc.setState(0x4f00, 0x3d2d, 0x2410, 0x5e1, 0xaf6f, 0x7de2, 0x0, 0x1);
        gbc.writeMem(0x4f00, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3d2d, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 000D
        gbc.setState(0xd23b, 0x91c0, 0x1c0, 0xb95, 0xc37c, 0x8bdd, 0x0, 0x0);
        gbc.writeMem(0xd23b, { 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x91c0, gbc.sp());
        EXPECT(0xd23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd23b));
        // 7B 000E
        gbc.setState(0xe6b0, 0x97e9, 0xdd90, 0xf2f5, 0x5ee3, 0xb89, 0x0, 0x0);
        gbc.writeMem(0xe6b0, { 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0xe6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe6b0));
        // 7B 000F
        gbc.setState(0xead8, 0x6df8, 0xce0, 0xeae7, 0x1f48, 0x3ce0, 0x1, 0x1);
        gbc.writeMem(0xead8, { 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6df8, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xead8));
        // 7B 0010
        gbc.setState(0x2db5, 0xbcee, 0x2a10, 0x2c3c, 0x79ba, 0x6fc0, 0x1, 0x1);
        gbc.writeMem(0x2db5, { 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbcee, gbc.sp());
        EXPECT(0x2db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0011
        gbc.setState(0x2459, 0xd6d, 0x71d0, 0x2ddb, 0xdb74, 0x5898, 0x0, 0x1);
        gbc.writeMem(0x2459, { 0x7b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd6d, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0013
        gbc.setState(0x69f4, 0x5cba, 0xef50, 0xf154, 0x3f7a, 0x5310, 0x0, 0x0);
        gbc.writeMem(0x69f4, { 0x7b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0x69f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0014
        gbc.setState(0xa831, 0x7809, 0x8880, 0xd7ae, 0x7b0a, 0xa898, 0x0, 0x0);
        gbc.writeMem(0xa831, { 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7809, gbc.sp());
        EXPECT(0xa832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa831));
        // 7B 0015
        gbc.setState(0x9af0, 0x42a3, 0x890, 0x6c72, 0x3505, 0x9dfa, 0x1, 0x0);
        gbc.writeMem(0x9af0, { 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x42a3, gbc.sp());
        EXPECT(0x9af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9af0));
        // 7B 0016
        gbc.setState(0x4f0a, 0x32c3, 0xc50, 0xade6, 0xc1a0, 0x3c2f, 0x1, 0x0);
        gbc.writeMem(0x4f0a, { 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x32c3, gbc.sp());
        EXPECT(0x4f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0017
        gbc.setState(0xde5d, 0x3974, 0xb2a0, 0xdb44, 0x9f91, 0x9264, 0x1, 0x1);
        gbc.writeMem(0xde5d, { 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3974, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xde5d));
        // 7B 0018
        gbc.setState(0x2956, 0x36f5, 0x50b0, 0xd878, 0x77a5, 0xcd5a, 0x0, 0x1);
        gbc.writeMem(0x2956, { 0x7b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x36f5, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0019
        gbc.setState(0x10eb, 0x752e, 0xb3d0, 0xbf7b, 0x9d59, 0x3e64, 0x1, 0x0);
        gbc.writeMem(0x10eb, { 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x752e, gbc.sp());
        EXPECT(0x10ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 001A
        gbc.setState(0x7c85, 0x7e55, 0x7d30, 0x528a, 0x47fd, 0x8a96, 0x0, 0x1);
        gbc.writeMem(0x7c85, { 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 001B
        gbc.setState(0x7df, 0x755, 0xe500, 0xbee2, 0x61d4, 0x86ef, 0x0, 0x0);
        gbc.writeMem(0x7df, { 0x7b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x755, gbc.sp());
        EXPECT(0x7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 001C
        gbc.setState(0x60c5, 0xde41, 0xa2e0, 0x718b, 0xe05a, 0x8cd5, 0x0, 0x1);
        gbc.writeMem(0x60c5, { 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xde41, gbc.sp());
        EXPECT(0x60c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 001D
        gbc.setState(0xa978, 0x2635, 0x9890, 0xbeb7, 0x2b4, 0xd54f, 0x1, 0x1);
        gbc.writeMem(0xa978, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2635, gbc.sp());
        EXPECT(0xa979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa978));
        // 7B 001E
        gbc.setState(0x7a87, 0x497e, 0x9d20, 0x3c0d, 0xae06, 0x7fef, 0x1, 0x1);
        gbc.writeMem(0x7a87, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x497e, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 001F
        gbc.setState(0x3d5b, 0x323e, 0x9d60, 0x3715, 0xa1bf, 0x5e4e, 0x0, 0x0);
        gbc.writeMem(0x3d5b, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x323e, gbc.sp());
        EXPECT(0x3d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0020
        gbc.setState(0x1baf, 0x69e7, 0xcfc0, 0x2145, 0x51ad, 0x967b, 0x0, 0x1);
        gbc.writeMem(0x1baf, { 0x7b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0x1bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0021
        gbc.setState(0x820e, 0x84c0, 0x1360, 0xc5d5, 0xea4d, 0x42a1, 0x0, 0x0);
        gbc.writeMem(0x820e, { 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x84c0, gbc.sp());
        EXPECT(0x820f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x820e));
        // 7B 0022
        gbc.setState(0xad21, 0x80b5, 0xbcd0, 0x4ecd, 0x2d29, 0x2c90, 0x0, 0x1);
        gbc.writeMem(0xad21, { 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x80b5, gbc.sp());
        EXPECT(0xad22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xad21));
        // 7B 0023
        gbc.setState(0x5604, 0x4951, 0x4ff0, 0x7bed, 0xc3c4, 0xfbcc, 0x1, 0x1);
        gbc.writeMem(0x5604, { 0x7b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4951, gbc.sp());
        EXPECT(0x5605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0024
        gbc.setState(0x757a, 0xf869, 0x6670, 0x1d3c, 0x1b45, 0xcdfc, 0x1, 0x0);
        gbc.writeMem(0x757a, { 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf869, gbc.sp());
        EXPECT(0x757b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0025
        gbc.setState(0xd003, 0xc4a5, 0x8d60, 0x4052, 0x8830, 0x6a87, 0x0, 0x0);
        gbc.writeMem(0xd003, { 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc4a5, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd003));
        // 7B 0026
        gbc.setState(0xc623, 0xc636, 0x4c80, 0xeeb2, 0x191d, 0xe53d, 0x1, 0x1);
        gbc.writeMem(0xc623, { 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc636, gbc.sp());
        EXPECT(0xc624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc623));
        // 7B 0027
        gbc.setState(0x5bd2, 0xf92e, 0xbdf0, 0x841, 0x8e0e, 0x8c13, 0x1, 0x1);
        gbc.writeMem(0x5bd2, { 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf92e, gbc.sp());
        EXPECT(0x5bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0028
        gbc.setState(0x88ba, 0xea11, 0x67b0, 0x1095, 0xf115, 0x2d3f, 0x0, 0x1);
        gbc.writeMem(0x88ba, { 0x7b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xea11, gbc.sp());
        EXPECT(0x88bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x88ba));
        // 7B 0029
        gbc.setState(0xcf4, 0x741a, 0x8e60, 0xff9e, 0xe308, 0xd94a, 0x0, 0x1);
        gbc.writeMem(0xcf4, { 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x741a, gbc.sp());
        EXPECT(0xcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 002A
        gbc.setState(0xa72c, 0x7127, 0xd20, 0x10e3, 0xe4ec, 0xe1a7, 0x0, 0x1);
        gbc.writeMem(0xa72c, { 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0xa72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa72c));
        // 7B 002B
        gbc.setState(0x321a, 0xb748, 0x4ee0, 0x6d63, 0xd96e, 0xb97e, 0x0, 0x0);
        gbc.writeMem(0x321a, { 0x7b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb748, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 002C
        gbc.setState(0xcff6, 0xdee8, 0x73d0, 0xa8a0, 0x7259, 0x974, 0x1, 0x0);
        gbc.writeMem(0xcff6, { 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0xcff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcff6));
        // 7B 002D
        gbc.setState(0xe3ff, 0x1b49, 0x1320, 0xa4bf, 0x6cb1, 0x9d78, 0x1, 0x0);
        gbc.writeMem(0xe3ff, { 0x7b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1b49, gbc.sp());
        EXPECT(0xe400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe3ff));
        // 7B 002E
        gbc.setState(0x2a0a, 0x25b3, 0x1590, 0x863b, 0x7b64, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x2a0a, { 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x25b3, gbc.sp());
        EXPECT(0x2a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 002F
        gbc.setState(0x914f, 0xaf9b, 0xa6a0, 0xcb74, 0xe48f, 0xf20f, 0x0, 0x1);
        gbc.writeMem(0x914f, { 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaf9b, gbc.sp());
        EXPECT(0x9150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x914f));
        // 7B 0030
        gbc.setState(0xed21, 0xc68c, 0x35a0, 0xbd0e, 0x9b98, 0xa68e, 0x1, 0x1);
        gbc.writeMem(0xed21, { 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc68c, gbc.sp());
        EXPECT(0xed22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xed21));
        // 7B 0031
        gbc.setState(0xe39e, 0x57b1, 0xdcc0, 0x80e5, 0xa973, 0xf80d, 0x0, 0x0);
        gbc.writeMem(0xe39e, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x57b1, gbc.sp());
        EXPECT(0xe39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe39e));
        // 7B 0032
        gbc.setState(0x102d, 0x34dc, 0x2550, 0x92af, 0xda3c, 0xc4c5, 0x1, 0x1);
        gbc.writeMem(0x102d, { 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x34dc, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0033
        gbc.setState(0xaf2a, 0xe518, 0xb380, 0x19e, 0x21b, 0x4c3f, 0x1, 0x0);
        gbc.writeMem(0xaf2a, { 0x7b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaf2a));
        // 7B 0034
        gbc.setState(0xeeab, 0x28cf, 0x1670, 0x39ec, 0xca6c, 0x188d, 0x1, 0x1);
        gbc.writeMem(0xeeab, { 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x28cf, gbc.sp());
        EXPECT(0xeeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xeeab));
        // 7B 0035
        gbc.setState(0x5e7d, 0x6f09, 0xb70, 0xb3df, 0x4564, 0x53be, 0x1, 0x0);
        gbc.writeMem(0x5e7d, { 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6f09, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0036
        gbc.setState(0x59ed, 0xc8c1, 0xde60, 0x36b6, 0xfb31, 0xb60f, 0x0, 0x0);
        gbc.writeMem(0x59ed, { 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc8c1, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0037
        gbc.setState(0xa64d, 0xf94b, 0x66f0, 0xe21a, 0x8445, 0x9b99, 0x0, 0x1);
        gbc.writeMem(0xa64d, { 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0xa64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa64d));
        // 7B 0038
        gbc.setState(0x240e, 0xc809, 0x1ab0, 0xed48, 0xf41d, 0x5eae, 0x0, 0x0);
        gbc.writeMem(0x240e, { 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc809, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0039
        gbc.setState(0x9501, 0x6e53, 0xdcc0, 0x53e6, 0x468a, 0xf94c, 0x0, 0x0);
        gbc.writeMem(0x9501, { 0x7b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6e53, gbc.sp());
        EXPECT(0x9502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9501));
        // 7B 003A
        gbc.setState(0x7c70, 0x2770, 0x5560, 0x469f, 0x61c0, 0xa679, 0x1, 0x1);
        gbc.writeMem(0x7c70, { 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2770, gbc.sp());
        EXPECT(0x7c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 003B
        gbc.setState(0xe6d4, 0x2b8e, 0x1bf0, 0x5395, 0xc7f3, 0xe1bd, 0x0, 0x1);
        gbc.writeMem(0xe6d4, { 0x7b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2b8e, gbc.sp());
        EXPECT(0xe6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe6d4));
        // 7B 003C
        gbc.setState(0xc81a, 0xc482, 0xebd0, 0xb179, 0x197d, 0xf823, 0x0, 0x1);
        gbc.writeMem(0xc81a, { 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc482, gbc.sp());
        EXPECT(0xc81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc81a));
        // 7B 003D
        gbc.setState(0x2e70, 0xcaef, 0x9c70, 0xd409, 0xf285, 0x527b, 0x0, 0x0);
        gbc.writeMem(0x2e70, { 0x7b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcaef, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 003E
        gbc.setState(0x2947, 0x9bd, 0xd580, 0x2b42, 0x3fe2, 0x8f80, 0x1, 0x0);
        gbc.writeMem(0x2947, { 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9bd, gbc.sp());
        EXPECT(0x2948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 003F
        gbc.setState(0x1404, 0xa428, 0xe770, 0x3217, 0xf9e1, 0x1f2, 0x1, 0x0);
        gbc.writeMem(0x1404, { 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa428, gbc.sp());
        EXPECT(0x1405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0040
        gbc.setState(0x4af1, 0xa34c, 0xbba0, 0xc9a4, 0x818f, 0xc5fd, 0x1, 0x1);
        gbc.writeMem(0x4af1, { 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa34c, gbc.sp());
        EXPECT(0x4af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0041
        gbc.setState(0x572, 0x9cd2, 0xc3c0, 0x2417, 0x4a93, 0x8da0, 0x1, 0x0);
        gbc.writeMem(0x572, { 0x7b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9cd2, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0042
        gbc.setState(0x6863, 0x6421, 0xfb0, 0xfa7f, 0xf42e, 0xbf49, 0x0, 0x1);
        gbc.writeMem(0x6863, { 0x7b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6421, gbc.sp());
        EXPECT(0x6864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0044
        gbc.setState(0x1daf, 0x7867, 0xcfe0, 0xba5, 0xa284, 0xb08, 0x1, 0x0);
        gbc.writeMem(0x1daf, { 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7867, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0045
        gbc.setState(0xc2c6, 0x857b, 0x7640, 0x1cd3, 0xcafd, 0x42ad, 0x0, 0x0);
        gbc.writeMem(0xc2c6, { 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x857b, gbc.sp());
        EXPECT(0xc2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc2c6));
        // 7B 0046
        gbc.setState(0xa6ef, 0x8c27, 0xa060, 0x5000, 0x2987, 0x1843, 0x1, 0x1);
        gbc.writeMem(0xa6ef, { 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8c27, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa6ef));
        // 7B 0047
        gbc.setState(0x2367, 0x1b6f, 0x9220, 0x197, 0x900, 0xbb24, 0x0, 0x1);
        gbc.writeMem(0x2367, { 0x7b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1b6f, gbc.sp());
        EXPECT(0x2368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0048
        gbc.setState(0xe490, 0x2422, 0x52d0, 0x6297, 0x452f, 0x3679, 0x1, 0x0);
        gbc.writeMem(0xe490, { 0x7b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2422, gbc.sp());
        EXPECT(0xe491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe490));
        // 7B 0049
        gbc.setState(0x4c22, 0x6984, 0x8380, 0x67fc, 0x26b8, 0xd81c, 0x1, 0x1);
        gbc.writeMem(0x4c22, { 0x7b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6984, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 004A
        gbc.setState(0x84f9, 0x4c14, 0x8be0, 0xa512, 0x6246, 0x4503, 0x1, 0x0);
        gbc.writeMem(0x84f9, { 0x7b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4c14, gbc.sp());
        EXPECT(0x84fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x84f9));
        // 7B 004B
        gbc.setState(0x1bf3, 0xa657, 0x2ed0, 0x707, 0x291f, 0x37e, 0x0, 0x1);
        gbc.writeMem(0x1bf3, { 0x7b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa657, gbc.sp());
        EXPECT(0x1bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 004C
        gbc.setState(0xc1fc, 0x2b03, 0x9450, 0x1200, 0x9e43, 0xec39, 0x1, 0x1);
        gbc.writeMem(0xc1fc, { 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc1fc));
        // 7B 004D
        gbc.setState(0x811c, 0x8538, 0xa6c0, 0xd550, 0x9f8e, 0xbe59, 0x0, 0x1);
        gbc.writeMem(0x811c, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8538, gbc.sp());
        EXPECT(0x811d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x811c));
        // 7B 004F
        gbc.setState(0x33ea, 0xe9f8, 0xabd0, 0x348, 0x63c, 0x78e8, 0x0, 0x0);
        gbc.writeMem(0x33ea, { 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe9f8, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0050
        gbc.setState(0xdb28, 0x4827, 0x45e0, 0x9e5a, 0xedf4, 0x17af, 0x1, 0x1);
        gbc.writeMem(0xdb28, { 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0xdb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdb28));
        // 7B 0051
        gbc.setState(0xdd92, 0xbb59, 0x4a00, 0x9da5, 0xd862, 0x3b6e, 0x1, 0x0);
        gbc.writeMem(0xdd92, { 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbb59, gbc.sp());
        EXPECT(0xdd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdd92));
        // 7B 0052
        gbc.setState(0xc214, 0x1558, 0x5360, 0xb96c, 0x5b1e, 0xe63f, 0x0, 0x0);
        gbc.writeMem(0xc214, { 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1558, gbc.sp());
        EXPECT(0xc215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc214));
        // 7B 0053
        gbc.setState(0xf17, 0x113b, 0x7bb0, 0xca2d, 0xaa31, 0x8070, 0x0, 0x0);
        gbc.writeMem(0xf17, { 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x113b, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0054
        gbc.setState(0xa5c0, 0xe4b8, 0xedd0, 0x37b9, 0x40b2, 0xc717, 0x1, 0x0);
        gbc.writeMem(0xa5c0, { 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe4b8, gbc.sp());
        EXPECT(0xa5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa5c0));
        // 7B 0055
        gbc.setState(0x99fd, 0x8b2a, 0x7ec0, 0xf240, 0x8013, 0xff2, 0x0, 0x1);
        gbc.writeMem(0x99fd, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8b2a, gbc.sp());
        EXPECT(0x99fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x99fd));
        // 7B 0056
        gbc.setState(0x51f3, 0x1978, 0x29a0, 0x5a31, 0x9847, 0x33b2, 0x0, 0x1);
        gbc.writeMem(0x51f3, { 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0x51f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0057
        gbc.setState(0xadca, 0xd1c3, 0x77c0, 0xe65a, 0xadbf, 0x9bbf, 0x0, 0x1);
        gbc.writeMem(0xadca, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd1c3, gbc.sp());
        EXPECT(0xadcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xadca));
        // 7B 0058
        gbc.setState(0x8b85, 0xc06a, 0x5440, 0xb254, 0xe5f0, 0xbd5f, 0x1, 0x0);
        gbc.writeMem(0x8b85, { 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc06a, gbc.sp());
        EXPECT(0x8b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8b85));
        // 7B 0059
        gbc.setState(0xbae0, 0x7a97, 0x7ae0, 0x292b, 0x7309, 0xea4e, 0x1, 0x1);
        gbc.writeMem(0xbae0, { 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7a97, gbc.sp());
        EXPECT(0xbae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbae0));
        // 7B 005A
        gbc.setState(0x1ba7, 0xc027, 0xf640, 0xd95, 0xeb11, 0xd3c4, 0x1, 0x0);
        gbc.writeMem(0x1ba7, { 0x7b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc027, gbc.sp());
        EXPECT(0x1ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 005B
        gbc.setState(0x83a4, 0x64ec, 0x7c70, 0x9f98, 0xcc38, 0x7a4, 0x0, 0x0);
        gbc.writeMem(0x83a4, { 0x7b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0x83a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x83a4));
        // 7B 005C
        gbc.setState(0x6ab2, 0x11eb, 0xf9e0, 0x6926, 0x5030, 0x7215, 0x1, 0x0);
        gbc.writeMem(0x6ab2, { 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x11eb, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 005D
        gbc.setState(0x33e4, 0x33b9, 0x5b60, 0xcdd2, 0xc726, 0x7227, 0x1, 0x1);
        gbc.writeMem(0x33e4, { 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x33e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 005E
        gbc.setState(0x3020, 0x9383, 0xa900, 0x9554, 0x3c49, 0x5a8d, 0x1, 0x0);
        gbc.writeMem(0x3020, { 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9383, gbc.sp());
        EXPECT(0x3021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 005F
        gbc.setState(0x14c0, 0xc358, 0xfa0, 0xf964, 0x9517, 0x8dd7, 0x0, 0x0);
        gbc.writeMem(0x14c0, { 0x7b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc358, gbc.sp());
        EXPECT(0x14c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0060
        gbc.setState(0x1a6, 0xc310, 0xae50, 0xaaf1, 0xaab8, 0xd309, 0x1, 0x0);
        gbc.writeMem(0x1a6, { 0x7b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc310, gbc.sp());
        EXPECT(0x1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0061
        gbc.setState(0xbf66, 0xd0ed, 0xd4e0, 0x2ada, 0xb3c1, 0x2c44, 0x1, 0x0);
        gbc.writeMem(0xbf66, { 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd0ed, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbf66));
        // 7B 0062
        gbc.setState(0xe167, 0x143c, 0xe110, 0x766a, 0xf26c, 0xecfb, 0x0, 0x1);
        gbc.writeMem(0xe167, { 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x143c, gbc.sp());
        EXPECT(0xe168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe167));
        // 7B 0063
        gbc.setState(0x5275, 0x75a1, 0x9b70, 0x2e2a, 0x9e7b, 0xe12f, 0x1, 0x1);
        gbc.writeMem(0x5275, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x75a1, gbc.sp());
        EXPECT(0x5276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0064
        gbc.setState(0xae56, 0xd5b6, 0x7c90, 0x3b0, 0xa29, 0x3058, 0x1, 0x1);
        gbc.writeMem(0xae56, { 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd5b6, gbc.sp());
        EXPECT(0xae57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xae56));
        // 7B 0065
        gbc.setState(0xed37, 0x88fc, 0x4a30, 0x5926, 0xe378, 0xa86e, 0x0, 0x1);
        gbc.writeMem(0xed37, { 0x7b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x88fc, gbc.sp());
        EXPECT(0xed38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xed37));
        // 7B 0066
        gbc.setState(0x7181, 0x2dbf, 0xbf80, 0xf89d, 0x6752, 0x65c4, 0x1, 0x1);
        gbc.writeMem(0x7181, { 0x7b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2dbf, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0067
        gbc.setState(0x5a8a, 0x1258, 0xe2d0, 0x58c4, 0x7970, 0xf4de, 0x0, 0x1);
        gbc.writeMem(0x5a8a, { 0x7b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1258, gbc.sp());
        EXPECT(0x5a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0068
        gbc.setState(0xcfea, 0xc8ac, 0xd530, 0xc6dc, 0x8b5e, 0x54f0, 0x1, 0x0);
        gbc.writeMem(0xcfea, { 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc8ac, gbc.sp());
        EXPECT(0xcfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcfea));
        // 7B 0069
        gbc.setState(0xb2f, 0x3a0, 0x8ed0, 0x8fb1, 0xdcf, 0x2843, 0x0, 0x1);
        gbc.writeMem(0xb2f, { 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a0, gbc.sp());
        EXPECT(0xb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 006A
        gbc.setState(0x5b31, 0xc926, 0x1610, 0xf9c3, 0x9053, 0xb2b8, 0x0, 0x1);
        gbc.writeMem(0x5b31, { 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc926, gbc.sp());
        EXPECT(0x5b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 006B
        gbc.setState(0x84db, 0x4863, 0x4180, 0xae48, 0x9d18, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0x84db, { 0x7b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4863, gbc.sp());
        EXPECT(0x84dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x84db));
        // 7B 006C
        gbc.setState(0xb684, 0x8b00, 0xbca0, 0x877d, 0xb897, 0x204b, 0x0, 0x0);
        gbc.writeMem(0xb684, { 0x7b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8b00, gbc.sp());
        EXPECT(0xb685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb684));
        // 7B 006D
        gbc.setState(0x115a, 0x9d56, 0x2300, 0xa049, 0x2dfa, 0xf12f, 0x0, 0x1);
        gbc.writeMem(0x115a, { 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9d56, gbc.sp());
        EXPECT(0x115b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 006E
        gbc.setState(0x3e5a, 0x3dfe, 0xb90, 0x3dbe, 0x2044, 0xea8c, 0x0, 0x1);
        gbc.writeMem(0x3e5a, { 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3dfe, gbc.sp());
        EXPECT(0x3e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 006F
        gbc.setState(0xc9fb, 0x1f5a, 0xdb10, 0xf752, 0x94f8, 0xcbd8, 0x1, 0x1);
        gbc.writeMem(0xc9fb, { 0x7b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1f5a, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc9fb));
        // 7B 0070
        gbc.setState(0x9a92, 0x5842, 0xf370, 0x9f67, 0x9c2b, 0x9927, 0x0, 0x1);
        gbc.writeMem(0x9a92, { 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5842, gbc.sp());
        EXPECT(0x9a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9a92));
        // 7B 0071
        gbc.setState(0x99e, 0x2141, 0xca0, 0x8341, 0xade7, 0x3515, 0x1, 0x0);
        gbc.writeMem(0x99e, { 0x7b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2141, gbc.sp());
        EXPECT(0x99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0072
        gbc.setState(0xe9f1, 0x3fa9, 0x1b70, 0xc16a, 0xf3c3, 0xa50f, 0x0, 0x1);
        gbc.writeMem(0xe9f1, { 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe9f1));
        // 7B 0073
        gbc.setState(0x870a, 0x8ebc, 0x4440, 0x9a11, 0xcac7, 0x5dfe, 0x1, 0x0);
        gbc.writeMem(0x870a, { 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8ebc, gbc.sp());
        EXPECT(0x870b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x870a));
        // 7B 0074
        gbc.setState(0x5d4, 0x19e5, 0xaab0, 0xf155, 0x41f6, 0x3b86, 0x0, 0x0);
        gbc.writeMem(0x5d4, { 0x7b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x19e5, gbc.sp());
        EXPECT(0x5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0075
        gbc.setState(0x3fc9, 0x7ca1, 0x1800, 0x1d50, 0x9e86, 0x84d3, 0x1, 0x1);
        gbc.writeMem(0x3fc9, { 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x3fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0076
        gbc.setState(0x8a90, 0xcf42, 0x5f30, 0xfab, 0xac0f, 0xabd4, 0x0, 0x0);
        gbc.writeMem(0x8a90, { 0x7b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcf42, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8a90));
        // 7B 0077
        gbc.setState(0xf48, 0xa06d, 0x75b0, 0xbc31, 0x2190, 0xfdca, 0x1, 0x0);
        gbc.writeMem(0xf48, { 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0xf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0078
        gbc.setState(0x2c15, 0x4e46, 0xa5b0, 0xbdb9, 0x187f, 0xaeb0, 0x1, 0x0);
        gbc.writeMem(0x2c15, { 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4e46, gbc.sp());
        EXPECT(0x2c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0079
        gbc.setState(0x35b1, 0x7742, 0xdc90, 0x8cd7, 0xc577, 0x42ca, 0x0, 0x0);
        gbc.writeMem(0x35b1, { 0x7b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7742, gbc.sp());
        EXPECT(0x35b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 007A
        gbc.setState(0x5c39, 0x4a77, 0x7490, 0x2db5, 0x6699, 0x757e, 0x0, 0x1);
        gbc.writeMem(0x5c39, { 0x7b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4a77, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 007B
        gbc.setState(0x3e55, 0x910a, 0x53c0, 0x6a7b, 0xf269, 0xebe6, 0x0, 0x0);
        gbc.writeMem(0x3e55, { 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x910a, gbc.sp());
        EXPECT(0x3e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 007C
        gbc.setState(0x5301, 0x78da, 0x9f70, 0x758, 0x24a, 0x1f52, 0x1, 0x0);
        gbc.writeMem(0x5301, { 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x78da, gbc.sp());
        EXPECT(0x5302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 007D
        gbc.setState(0x8cb1, 0xf121, 0xaae0, 0x60ee, 0xa922, 0xb05, 0x0, 0x1);
        gbc.writeMem(0x8cb1, { 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0x8cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8cb1));
        // 7B 007E
        gbc.setState(0xdb73, 0x1a60, 0xc960, 0xbc40, 0x6473, 0x3e88, 0x0, 0x1);
        gbc.writeMem(0xdb73, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a60, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdb73));
        // 7B 007F
        gbc.setState(0xa2fe, 0x64c9, 0xebb0, 0xe3cb, 0xb7a7, 0xa72b, 0x1, 0x0);
        gbc.writeMem(0xa2fe, { 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x64c9, gbc.sp());
        EXPECT(0xa2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa2fe));
        // 7B 0080
        gbc.setState(0xa3f2, 0x5304, 0xcbd0, 0x67, 0x5782, 0x5e43, 0x0, 0x1);
        gbc.writeMem(0xa3f2, { 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5304, gbc.sp());
        EXPECT(0xa3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa3f2));
        // 7B 0081
        gbc.setState(0xe706, 0xcace, 0x8cc0, 0xd447, 0xf0d1, 0x430a, 0x0, 0x0);
        gbc.writeMem(0xe706, { 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcace, gbc.sp());
        EXPECT(0xe707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe706));
        // 7B 0082
        gbc.setState(0x469b, 0x7d53, 0xce60, 0xafbd, 0xb53, 0x818f, 0x1, 0x1);
        gbc.writeMem(0x469b, { 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7d53, gbc.sp());
        EXPECT(0x469c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0083
        gbc.setState(0x4c61, 0xc01f, 0x7220, 0xe81c, 0x9b04, 0x51a1, 0x1, 0x0);
        gbc.writeMem(0x4c61, { 0x7b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc01f, gbc.sp());
        EXPECT(0x4c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0084
        gbc.setState(0xdd82, 0xc549, 0x1d60, 0xe18a, 0x2dfc, 0xd160, 0x0, 0x1);
        gbc.writeMem(0xdd82, { 0x7b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc549, gbc.sp());
        EXPECT(0xdd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdd82));
        // 7B 0085
        gbc.setState(0x92b0, 0x75b1, 0x19d0, 0x5044, 0xe8e3, 0xa28f, 0x0, 0x1);
        gbc.writeMem(0x92b0, { 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x75b1, gbc.sp());
        EXPECT(0x92b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x92b0));
        // 7B 0086
        gbc.setState(0x71fc, 0x8613, 0xa140, 0xf285, 0x58ab, 0x8f16, 0x1, 0x1);
        gbc.writeMem(0x71fc, { 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8613, gbc.sp());
        EXPECT(0x71fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0087
        gbc.setState(0xcb3f, 0x3821, 0x6eb0, 0xc2b3, 0xebe9, 0x95ae, 0x1, 0x0);
        gbc.writeMem(0xcb3f, { 0x7b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3821, gbc.sp());
        EXPECT(0xcb40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcb3f));
        // 7B 0088
        gbc.setState(0xc875, 0x239e, 0xfe90, 0xd0d7, 0x7709, 0xca49, 0x1, 0x1);
        gbc.writeMem(0xc875, { 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x239e, gbc.sp());
        EXPECT(0xc876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc875));
        // 7B 0089
        gbc.setState(0xe9ff, 0x4eab, 0xbb70, 0xeeca, 0x7863, 0x3436, 0x1, 0x0);
        gbc.writeMem(0xe9ff, { 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4eab, gbc.sp());
        EXPECT(0xea00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe9ff));
        // 7B 008A
        gbc.setState(0xbb7e, 0xe83e, 0x1a70, 0xc215, 0x6503, 0x350e, 0x0, 0x1);
        gbc.writeMem(0xbb7e, { 0x7b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe83e, gbc.sp());
        EXPECT(0xbb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbb7e));
        // 7B 008C
        gbc.setState(0x5667, 0x4e24, 0xb7f0, 0x358c, 0xefa4, 0x1dca, 0x0, 0x0);
        gbc.writeMem(0x5667, { 0x7b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4e24, gbc.sp());
        EXPECT(0x5668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 008D
        gbc.setState(0x22e3, 0xe203, 0x42a0, 0x27e, 0x48b4, 0x4475, 0x1, 0x1);
        gbc.writeMem(0x22e3, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe203, gbc.sp());
        EXPECT(0x22e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 008E
        gbc.setState(0xa0a4, 0xdb90, 0x8a60, 0x87e8, 0x9945, 0x1218, 0x1, 0x1);
        gbc.writeMem(0xa0a4, { 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdb90, gbc.sp());
        EXPECT(0xa0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa0a4));
        // 7B 008F
        gbc.setState(0x3f66, 0x6c69, 0x8800, 0x2539, 0x2e40, 0x3920, 0x1, 0x0);
        gbc.writeMem(0x3f66, { 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6c69, gbc.sp());
        EXPECT(0x3f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0090
        gbc.setState(0x5eba, 0xd6d8, 0xba00, 0x5be, 0x9264, 0x6ffe, 0x0, 0x1);
        gbc.writeMem(0x5eba, { 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd6d8, gbc.sp());
        EXPECT(0x5ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0091
        gbc.setState(0xcf71, 0xc6dc, 0xddc0, 0x8b95, 0x6a87, 0xc3d9, 0x1, 0x0);
        gbc.writeMem(0xcf71, { 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc6dc, gbc.sp());
        EXPECT(0xcf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcf71));
        // 7B 0092
        gbc.setState(0x8599, 0x4203, 0x94a0, 0x690e, 0xb31e, 0xffc5, 0x0, 0x0);
        gbc.writeMem(0x8599, { 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4203, gbc.sp());
        EXPECT(0x859a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8599));
        // 7B 0093
        gbc.setState(0x23c4, 0xe3d8, 0x6af0, 0xa21c, 0xdb6b, 0xedb0, 0x0, 0x1);
        gbc.writeMem(0x23c4, { 0x7b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe3d8, gbc.sp());
        EXPECT(0x23c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0094
        gbc.setState(0x3cf6, 0x1b8d, 0x5f40, 0x5b5f, 0x5a8d, 0xa48a, 0x1, 0x0);
        gbc.writeMem(0x3cf6, { 0x7b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1b8d, gbc.sp());
        EXPECT(0x3cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0095
        gbc.setState(0x7d4, 0xa5b3, 0x9c60, 0x949e, 0x9ea, 0x92df, 0x0, 0x0);
        gbc.writeMem(0x7d4, { 0x7b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa5b3, gbc.sp());
        EXPECT(0x7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0096
        gbc.setState(0x432, 0xac10, 0x2c60, 0x747e, 0x539a, 0x5e93, 0x1, 0x0);
        gbc.writeMem(0x432, { 0x7b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0x433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0097
        gbc.setState(0x9d1a, 0x791a, 0x6c50, 0xfa8b, 0xfa59, 0x5a6f, 0x1, 0x0);
        gbc.writeMem(0x9d1a, { 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x791a, gbc.sp());
        EXPECT(0x9d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9d1a));
        // 7B 0098
        gbc.setState(0x30cd, 0x43e, 0x35f0, 0x2cb9, 0xddb0, 0x274c, 0x0, 0x1);
        gbc.writeMem(0x30cd, { 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x43e, gbc.sp());
        EXPECT(0x30ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0099
        gbc.setState(0xdae8, 0xdd20, 0x6d70, 0x7ab4, 0xd306, 0x614d, 0x0, 0x0);
        gbc.writeMem(0xdae8, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdd20, gbc.sp());
        EXPECT(0xdae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdae8));
        // 7B 009A
        gbc.setState(0x1441, 0xc101, 0xf5e0, 0xb4f4, 0xc02d, 0x31d8, 0x0, 0x0);
        gbc.writeMem(0x1441, { 0x7b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc101, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 009B
        gbc.setState(0xa6a9, 0xca35, 0x570, 0x932a, 0xfd91, 0x7cb4, 0x1, 0x0);
        gbc.writeMem(0xa6a9, { 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xca35, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa6a9));
        // 7B 009C
        gbc.setState(0x17eb, 0x17fe, 0x66d0, 0x5909, 0x2090, 0x42d6, 0x1, 0x1);
        gbc.writeMem(0x17eb, { 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x17fe, gbc.sp());
        EXPECT(0x17ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 009D
        gbc.setState(0x9b01, 0x4189, 0xe410, 0xd9a4, 0x13df, 0x3330, 0x1, 0x1);
        gbc.writeMem(0x9b01, { 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0x9b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9b01));
        // 7B 009E
        gbc.setState(0xcb17, 0x190e, 0x6e50, 0x3d93, 0x9b13, 0x1f86, 0x0, 0x0);
        gbc.writeMem(0xcb17, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x190e, gbc.sp());
        EXPECT(0xcb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcb17));
        // 7B 009F
        gbc.setState(0x74, 0x2480, 0x2860, 0x39e5, 0x8c01, 0x5294, 0x0, 0x1);
        gbc.writeMem(0x74, { 0x7b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2480, gbc.sp());
        EXPECT(0x75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00A0
        gbc.setState(0x7392, 0xe185, 0x8bf0, 0xdb32, 0xdc35, 0x1862, 0x0, 0x1);
        gbc.writeMem(0x7392, { 0x7b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe185, gbc.sp());
        EXPECT(0x7393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00A1
        gbc.setState(0x2b7, 0x8c20, 0xf8d0, 0x538d, 0x8998, 0x2936, 0x1, 0x1);
        gbc.writeMem(0x2b7, { 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8c20, gbc.sp());
        EXPECT(0x2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00A2
        gbc.setState(0x1110, 0x9077, 0xda10, 0x1a86, 0xc148, 0x6460, 0x0, 0x0);
        gbc.writeMem(0x1110, { 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9077, gbc.sp());
        EXPECT(0x1111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00A3
        gbc.setState(0xcaa, 0x3d6d, 0xdcf0, 0xa6fd, 0x9ce, 0x5fb1, 0x1, 0x0);
        gbc.writeMem(0xcaa, { 0x7b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3d6d, gbc.sp());
        EXPECT(0xcab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00A4
        gbc.setState(0x975f, 0x6aa4, 0xd6b0, 0xf74a, 0xcc10, 0x9bb7, 0x1, 0x0);
        gbc.writeMem(0x975f, { 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6aa4, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x975f));
        // 7B 00A5
        gbc.setState(0xeabc, 0xe757, 0xadf0, 0x17a8, 0x667a, 0x9ca, 0x1, 0x1);
        gbc.writeMem(0xeabc, { 0x7b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xeabc));
        // 7B 00A6
        gbc.setState(0xa0f2, 0x7117, 0x2dd0, 0x6a6a, 0x393f, 0xce20, 0x1, 0x1);
        gbc.writeMem(0xa0f2, { 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa0f2));
        // 7B 00A8
        gbc.setState(0x9159, 0x7663, 0x7d00, 0x353b, 0xfb97, 0x7182, 0x1, 0x1);
        gbc.writeMem(0x9159, { 0x7b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7663, gbc.sp());
        EXPECT(0x915a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9159));
        // 7B 00A9
        gbc.setState(0x9477, 0x3690, 0x7460, 0x1c9f, 0x15e2, 0x6d8, 0x1, 0x0);
        gbc.writeMem(0x9477, { 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3690, gbc.sp());
        EXPECT(0x9478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9477));
        // 7B 00AA
        gbc.setState(0x644e, 0x1fc3, 0xc2c0, 0x1ce6, 0x9b5, 0x2135, 0x0, 0x1);
        gbc.writeMem(0x644e, { 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1fc3, gbc.sp());
        EXPECT(0x644f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00AB
        gbc.setState(0x7537, 0xa606, 0x9b80, 0x56e2, 0x85b3, 0x53d8, 0x1, 0x0);
        gbc.writeMem(0x7537, { 0x7b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa606, gbc.sp());
        EXPECT(0x7538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00AD
        gbc.setState(0xabb2, 0x1fe2, 0x530, 0x6110, 0x88e0, 0xefe0, 0x0, 0x0);
        gbc.writeMem(0xabb2, { 0x7b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1fe2, gbc.sp());
        EXPECT(0xabb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xabb2));
        // 7B 00AE
        gbc.setState(0x8e33, 0xbfe1, 0x4f90, 0x5394, 0x3c41, 0xcd70, 0x0, 0x0);
        gbc.writeMem(0x8e33, { 0x7b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbfe1, gbc.sp());
        EXPECT(0x8e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8e33));
        // 7B 00AF
        gbc.setState(0x4460, 0x35c3, 0xa090, 0xc9c3, 0x3ee9, 0xd8f2, 0x1, 0x1);
        gbc.writeMem(0x4460, { 0x7b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x35c3, gbc.sp());
        EXPECT(0x4461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00B0
        gbc.setState(0x475a, 0x8fa6, 0x2970, 0x45c0, 0xc94d, 0x186e, 0x0, 0x1);
        gbc.writeMem(0x475a, { 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8fa6, gbc.sp());
        EXPECT(0x475b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00B1
        gbc.setState(0xc36, 0x5874, 0xe860, 0x404d, 0xa2e2, 0x9d81, 0x1, 0x0);
        gbc.writeMem(0xc36, { 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5874, gbc.sp());
        EXPECT(0xc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00B2
        gbc.setState(0xcb52, 0xb4d5, 0xfda0, 0x3d7f, 0x159f, 0x6272, 0x1, 0x0);
        gbc.writeMem(0xcb52, { 0x7b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb4d5, gbc.sp());
        EXPECT(0xcb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcb52));
        // 7B 00B3
        gbc.setState(0xba7d, 0xd1e1, 0xc130, 0xea09, 0x13c7, 0xd889, 0x1, 0x1);
        gbc.writeMem(0xba7d, { 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd1e1, gbc.sp());
        EXPECT(0xba7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xba7d));
        // 7B 00B4
        gbc.setState(0xca21, 0x804b, 0x5410, 0xf127, 0x8f6e, 0x90bd, 0x1, 0x1);
        gbc.writeMem(0xca21, { 0x7b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x804b, gbc.sp());
        EXPECT(0xca22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xca21));
        // 7B 00B5
        gbc.setState(0xd2d8, 0xd454, 0xa810, 0x1ed9, 0xb716, 0x4864, 0x1, 0x0);
        gbc.writeMem(0xd2d8, { 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0xd2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd2d8));
        // 7B 00B6
        gbc.setState(0x849d, 0xd490, 0xc910, 0x36c, 0xf884, 0x9a2c, 0x0, 0x1);
        gbc.writeMem(0x849d, { 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd490, gbc.sp());
        EXPECT(0x849e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x849d));
        // 7B 00B7
        gbc.setState(0x8e4c, 0x2791, 0xe580, 0x982d, 0x2e91, 0xb7ee, 0x0, 0x1);
        gbc.writeMem(0x8e4c, { 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0x8e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8e4c));
        // 7B 00B9
        gbc.setState(0x2992, 0x6aac, 0xace0, 0xe342, 0x1008, 0x244, 0x0, 0x1);
        gbc.writeMem(0x2992, { 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6aac, gbc.sp());
        EXPECT(0x2993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00BA
        gbc.setState(0x249b, 0x2557, 0xf030, 0xd32, 0xba8f, 0xfee, 0x0, 0x1);
        gbc.writeMem(0x249b, { 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2557, gbc.sp());
        EXPECT(0x249c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00BB
        gbc.setState(0xb8e0, 0xfaad, 0xce80, 0xc261, 0x1d61, 0xa818, 0x1, 0x0);
        gbc.writeMem(0xb8e0, { 0x7b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfaad, gbc.sp());
        EXPECT(0xb8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb8e0));
        // 7B 00BC
        gbc.setState(0x33f, 0xf4b8, 0x7400, 0x742f, 0x4248, 0x630, 0x0, 0x0);
        gbc.writeMem(0x33f, { 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf4b8, gbc.sp());
        EXPECT(0x340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00BD
        gbc.setState(0x86d4, 0x38cb, 0x5e00, 0x96d7, 0x608e, 0x8345, 0x0, 0x0);
        gbc.writeMem(0x86d4, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x38cb, gbc.sp());
        EXPECT(0x86d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x86d4));
        // 7B 00BE
        gbc.setState(0xce85, 0x6d1e, 0x5f10, 0x3d03, 0x1b0, 0x197c, 0x1, 0x1);
        gbc.writeMem(0xce85, { 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6d1e, gbc.sp());
        EXPECT(0xce86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xce85));
        // 7B 00BF
        gbc.setState(0x77cd, 0x618b, 0xc250, 0xb80e, 0xa9ba, 0xff1a, 0x1, 0x0);
        gbc.writeMem(0x77cd, { 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x618b, gbc.sp());
        EXPECT(0x77ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00C0
        gbc.setState(0xcba0, 0x2f59, 0x45b0, 0x1cf5, 0xac33, 0xa955, 0x0, 0x0);
        gbc.writeMem(0xcba0, { 0x7b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2f59, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcba0));
        // 7B 00C1
        gbc.setState(0xbc9f, 0xb25b, 0xb260, 0x2070, 0x4340, 0x35cb, 0x0, 0x1);
        gbc.writeMem(0xbc9f, { 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb25b, gbc.sp());
        EXPECT(0xbca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbc9f));
        // 7B 00C2
        gbc.setState(0x421a, 0x1d57, 0x9d10, 0xcc42, 0x2827, 0x3035, 0x0, 0x1);
        gbc.writeMem(0x421a, { 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1d57, gbc.sp());
        EXPECT(0x421b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00C3
        gbc.setState(0x1166, 0x71a2, 0x3940, 0x61b4, 0xf51d, 0xc78d, 0x0, 0x0);
        gbc.writeMem(0x1166, { 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x71a2, gbc.sp());
        EXPECT(0x1167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00C4
        gbc.setState(0xce19, 0xaba2, 0xb5f0, 0x64e2, 0xbe3, 0x4559, 0x1, 0x0);
        gbc.writeMem(0xce19, { 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaba2, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xce19));
        // 7B 00C5
        gbc.setState(0x2568, 0x9cbd, 0x8430, 0xce57, 0x7d11, 0xbe0, 0x0, 0x0);
        gbc.writeMem(0x2568, { 0x7b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9cbd, gbc.sp());
        EXPECT(0x2569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00C6
        gbc.setState(0x9f7d, 0xa0e3, 0x7080, 0xc5a, 0x98bd, 0x3e74, 0x0, 0x0);
        gbc.writeMem(0x9f7d, { 0x7b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa0e3, gbc.sp());
        EXPECT(0x9f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9f7d));
        // 7B 00C7
        gbc.setState(0x8797, 0x13bd, 0xe80, 0x72ff, 0x466f, 0x8dc4, 0x0, 0x1);
        gbc.writeMem(0x8797, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x13bd, gbc.sp());
        EXPECT(0x8798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8797));
        // 7B 00C8
        gbc.setState(0x2ffe, 0x94bd, 0xf220, 0x1e7f, 0xce28, 0xdba3, 0x0, 0x1);
        gbc.writeMem(0x2ffe, { 0x7b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x94bd, gbc.sp());
        EXPECT(0x2fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00CA
        gbc.setState(0x5be2, 0xd788, 0x7870, 0x7dd6, 0xe913, 0xa949, 0x1, 0x1);
        gbc.writeMem(0x5be2, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd788, gbc.sp());
        EXPECT(0x5be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00CB
        gbc.setState(0x208b, 0x7699, 0x46a0, 0xb359, 0x951a, 0x2291, 0x1, 0x1);
        gbc.writeMem(0x208b, { 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7699, gbc.sp());
        EXPECT(0x208c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00CC
        gbc.setState(0x8f15, 0xe588, 0xe170, 0x97d3, 0xe145, 0xf941, 0x0, 0x0);
        gbc.writeMem(0x8f15, { 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe588, gbc.sp());
        EXPECT(0x8f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8f15));
        // 7B 00CD
        gbc.setState(0x5d80, 0xd497, 0x5a40, 0xd7a0, 0x77a2, 0xa634, 0x0, 0x1);
        gbc.writeMem(0x5d80, { 0x7b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd497, gbc.sp());
        EXPECT(0x5d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00CE
        gbc.setState(0xc836, 0x4536, 0xb110, 0xf4fc, 0xe210, 0x1300, 0x0, 0x1);
        gbc.writeMem(0xc836, { 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4536, gbc.sp());
        EXPECT(0xc837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc836));
        // 7B 00CF
        gbc.setState(0x83e7, 0x5a81, 0xd6f0, 0x28f2, 0x1b97, 0xe8be, 0x1, 0x0);
        gbc.writeMem(0x83e7, { 0x7b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5a81, gbc.sp());
        EXPECT(0x83e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x83e7));
        // 7B 00D0
        gbc.setState(0xcdfa, 0xe320, 0xd250, 0x242, 0x69c2, 0x4d13, 0x0, 0x0);
        gbc.writeMem(0xcdfa, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe320, gbc.sp());
        EXPECT(0xcdfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcdfa));
        // 7B 00D1
        gbc.setState(0x39cd, 0x57b5, 0x78c0, 0xa62d, 0x22a0, 0xccb5, 0x1, 0x1);
        gbc.writeMem(0x39cd, { 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0x39ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00D2
        gbc.setState(0x5282, 0xee46, 0x6140, 0xd2d2, 0x5d6d, 0xc6ae, 0x0, 0x1);
        gbc.writeMem(0x5282, { 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0x5283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00D3
        gbc.setState(0x92f, 0xc658, 0x19e0, 0xb468, 0x4cd6, 0x3606, 0x0, 0x0);
        gbc.writeMem(0x92f, { 0x7b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc658, gbc.sp());
        EXPECT(0x930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00D6
        gbc.setState(0x4732, 0x6e6d, 0xa8e0, 0x3202, 0x8c4a, 0x9d8f, 0x0, 0x0);
        gbc.writeMem(0x4732, { 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e6d, gbc.sp());
        EXPECT(0x4733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00D7
        gbc.setState(0x1979, 0xd6f1, 0x7e20, 0x7fdb, 0x7e07, 0x8033, 0x0, 0x1);
        gbc.writeMem(0x1979, { 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd6f1, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00D8
        gbc.setState(0x40ae, 0xe9c6, 0x1b10, 0x43f5, 0xf0f9, 0xda95, 0x1, 0x1);
        gbc.writeMem(0x40ae, { 0x7b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe9c6, gbc.sp());
        EXPECT(0x40af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00D9
        gbc.setState(0xd760, 0xcbce, 0x2b10, 0x36c1, 0xdaf3, 0xc0c5, 0x1, 0x1);
        gbc.writeMem(0xd760, { 0x7b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcbce, gbc.sp());
        EXPECT(0xd761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd760));
        // 7B 00DA
        gbc.setState(0x11e3, 0xc396, 0xc40, 0x17e4, 0x89b9, 0x8321, 0x1, 0x0);
        gbc.writeMem(0x11e3, { 0x7b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc396, gbc.sp());
        EXPECT(0x11e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00DB
        gbc.setState(0x2202, 0xb7ce, 0x9ef0, 0x9858, 0xbb50, 0x16c5, 0x0, 0x1);
        gbc.writeMem(0x2202, { 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0x2203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00DC
        gbc.setState(0x2c3b, 0xfb47, 0x6800, 0xfc4c, 0x62e4, 0xeb4f, 0x1, 0x0);
        gbc.writeMem(0x2c3b, { 0x7b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfb47, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00DD
        gbc.setState(0x60c2, 0xad98, 0x8640, 0x7c29, 0xb777, 0x8a13, 0x0, 0x1);
        gbc.writeMem(0x60c2, { 0x7b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xad98, gbc.sp());
        EXPECT(0x60c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00DE
        gbc.setState(0xb407, 0x7ec, 0xf3c0, 0x40e7, 0x14e2, 0x7dd4, 0x0, 0x1);
        gbc.writeMem(0xb407, { 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7ec, gbc.sp());
        EXPECT(0xb408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb407));
        // 7B 00DF
        gbc.setState(0x9408, 0x3e2a, 0x9d20, 0xce9f, 0xd8b6, 0x28a5, 0x1, 0x0);
        gbc.writeMem(0x9408, { 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3e2a, gbc.sp());
        EXPECT(0x9409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9408));
        // 7B 00E0
        gbc.setState(0xcaf4, 0xc5a0, 0xc660, 0xfba8, 0xff56, 0xe8ce, 0x1, 0x0);
        gbc.writeMem(0xcaf4, { 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc5a0, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcaf4));
        // 7B 00E1
        gbc.setState(0xed2f, 0xd6a1, 0xd170, 0x3aaa, 0x5522, 0xf931, 0x1, 0x1);
        gbc.writeMem(0xed2f, { 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd6a1, gbc.sp());
        EXPECT(0xed30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xed2f));
        // 7B 00E2
        gbc.setState(0x99a, 0xdd42, 0x97a0, 0x49db, 0xd638, 0x8305, 0x1, 0x0);
        gbc.writeMem(0x99a, { 0x7b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdd42, gbc.sp());
        EXPECT(0x99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00E3
        gbc.setState(0x3cd2, 0x84ea, 0x7070, 0xafde, 0xc52e, 0x87db, 0x0, 0x0);
        gbc.writeMem(0x3cd2, { 0x7b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x84ea, gbc.sp());
        EXPECT(0x3cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00E4
        gbc.setState(0xcfa3, 0x3a0f, 0x7a50, 0x4d4b, 0x30af, 0x1150, 0x1, 0x1);
        gbc.writeMem(0xcfa3, { 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3a0f, gbc.sp());
        EXPECT(0xcfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcfa3));
        // 7B 00E5
        gbc.setState(0x9545, 0x4e72, 0x6d40, 0xaf28, 0xdb4a, 0x73e4, 0x1, 0x0);
        gbc.writeMem(0x9545, { 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0x9546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9545));
        // 7B 00E6
        gbc.setState(0x4fc7, 0x8c9e, 0xa750, 0x16e1, 0x6489, 0xcc79, 0x0, 0x0);
        gbc.writeMem(0x4fc7, { 0x7b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8c9e, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00E7
        gbc.setState(0x4130, 0xca43, 0xb0e0, 0x79ca, 0x97c9, 0xbd4b, 0x0, 0x1);
        gbc.writeMem(0x4130, { 0x7b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00E8
        gbc.setState(0xe83b, 0x2a0c, 0xcea0, 0x7bf8, 0x2115, 0x632b, 0x1, 0x0);
        gbc.writeMem(0xe83b, { 0x7b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2a0c, gbc.sp());
        EXPECT(0xe83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe83b));
        // 7B 00EA
        gbc.setState(0xd63e, 0xf67d, 0x1990, 0x9e43, 0xa84b, 0x413f, 0x0, 0x0);
        gbc.writeMem(0xd63e, { 0x7b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0xd63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd63e));
        // 7B 00EB
        gbc.setState(0x1ecd, 0x9659, 0x6540, 0xce20, 0x42b5, 0x152, 0x1, 0x1);
        gbc.writeMem(0x1ecd, { 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9659, gbc.sp());
        EXPECT(0x1ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00ED
        gbc.setState(0x4366, 0xcaed, 0x75c0, 0xe3d9, 0xb657, 0x788e, 0x0, 0x1);
        gbc.writeMem(0x4366, { 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcaed, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00EE
        gbc.setState(0x1040, 0x7d21, 0x8a30, 0x57d6, 0x6413, 0x692f, 0x0, 0x1);
        gbc.writeMem(0x1040, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7d21, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00EF
        gbc.setState(0x2d82, 0x2ccb, 0x2520, 0x9244, 0x53fd, 0xf0d3, 0x0, 0x0);
        gbc.writeMem(0x2d82, { 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2ccb, gbc.sp());
        EXPECT(0x2d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00F0
        gbc.setState(0x2bfb, 0xea28, 0x3290, 0xb93c, 0x42f4, 0x53fd, 0x1, 0x0);
        gbc.writeMem(0x2bfb, { 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x2bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00F1
        gbc.setState(0x6b52, 0x517e, 0x7c90, 0xca60, 0x1237, 0xb2bb, 0x0, 0x1);
        gbc.writeMem(0x6b52, { 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x517e, gbc.sp());
        EXPECT(0x6b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00F2
        gbc.setState(0xe687, 0x126d, 0xacb0, 0x4fc4, 0xffb4, 0xecde, 0x1, 0x1);
        gbc.writeMem(0xe687, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x126d, gbc.sp());
        EXPECT(0xe688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe687));
        // 7B 00F3
        gbc.setState(0x137e, 0xf918, 0x5420, 0x5122, 0x6844, 0x9356, 0x0, 0x1);
        gbc.writeMem(0x137e, { 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf918, gbc.sp());
        EXPECT(0x137f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00F4
        gbc.setState(0x5615, 0x4a76, 0x9130, 0x3fb4, 0xf714, 0xf04f, 0x0, 0x0);
        gbc.writeMem(0x5615, { 0x7b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4a76, gbc.sp());
        EXPECT(0x5616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00F6
        gbc.setState(0x1b63, 0xd539, 0x9240, 0x666a, 0x777e, 0xbe78, 0x0, 0x1);
        gbc.writeMem(0x1b63, { 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd539, gbc.sp());
        EXPECT(0x1b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00F8
        gbc.setState(0x1faa, 0xb1ad, 0xe350, 0x6db8, 0x3686, 0xf032, 0x1, 0x0);
        gbc.writeMem(0x1faa, { 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb1ad, gbc.sp());
        EXPECT(0x1fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00F9
        gbc.setState(0x8021, 0xa7d9, 0x1310, 0xcc2a, 0x2772, 0x72b5, 0x1, 0x0);
        gbc.writeMem(0x8021, { 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa7d9, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8021));
        // 7B 00FB
        gbc.setState(0x666, 0xe9db, 0xc490, 0x7a58, 0xe3dd, 0x3ee, 0x1, 0x1);
        gbc.writeMem(0x666, { 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe9db, gbc.sp());
        EXPECT(0x667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 00FC
        gbc.setState(0xbcac, 0x36b3, 0x280, 0x6e21, 0x1467, 0x9863, 0x0, 0x0);
        gbc.writeMem(0xbcac, { 0x7b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x36b3, gbc.sp());
        EXPECT(0xbcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbcac));
        // 7B 00FD
        gbc.setState(0x5455, 0x733e, 0x7aa0, 0x6d4f, 0x612f, 0x6914, 0x0, 0x1);
        gbc.writeMem(0x5455, { 0x7b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0x5456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 00FE
        gbc.setState(0xd02a, 0x32f6, 0x25e0, 0xe464, 0xfd7c, 0xa57c, 0x1, 0x1);
        gbc.writeMem(0xd02a, { 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x32f6, gbc.sp());
        EXPECT(0xd02b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd02a));
        // 7B 0100
        gbc.setState(0x7927, 0xf638, 0x67d0, 0x2200, 0x6f72, 0xe1bc, 0x0, 0x0);
        gbc.writeMem(0x7927, { 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf638, gbc.sp());
        EXPECT(0x7928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0101
        gbc.setState(0x89b3, 0xb15e, 0xd220, 0x1bd6, 0x579e, 0x7017, 0x1, 0x1);
        gbc.writeMem(0x89b3, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb15e, gbc.sp());
        EXPECT(0x89b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x89b3));
        // 7B 0102
        gbc.setState(0xb95e, 0xd472, 0x6f10, 0x7458, 0x37d6, 0x4931, 0x0, 0x0);
        gbc.writeMem(0xb95e, { 0x7b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd472, gbc.sp());
        EXPECT(0xb95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb95e));
        // 7B 0103
        gbc.setState(0xcdb2, 0xd177, 0x72b0, 0x7dfb, 0xec98, 0x8625, 0x0, 0x0);
        gbc.writeMem(0xcdb2, { 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd177, gbc.sp());
        EXPECT(0xcdb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcdb2));
        // 7B 0104
        gbc.setState(0x76d1, 0xef5c, 0x1ab0, 0x6c3a, 0x703c, 0xaa5c, 0x0, 0x0);
        gbc.writeMem(0x76d1, { 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xef5c, gbc.sp());
        EXPECT(0x76d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0105
        gbc.setState(0xb737, 0x66da, 0x66b0, 0xe3c5, 0xbd8e, 0x770f, 0x1, 0x1);
        gbc.writeMem(0xb737, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x66da, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb737));
        // 7B 0106
        gbc.setState(0xa6, 0xfcc9, 0xa490, 0x593a, 0xccda, 0xb70e, 0x1, 0x0);
        gbc.writeMem(0xa6, { 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfcc9, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0107
        gbc.setState(0x148c, 0x863, 0xc760, 0xc75, 0x5613, 0x6aec, 0x1, 0x0);
        gbc.writeMem(0x148c, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x863, gbc.sp());
        EXPECT(0x148d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0108
        gbc.setState(0xb80c, 0xa04c, 0xc870, 0xb0db, 0x15c2, 0x9ed4, 0x1, 0x1);
        gbc.writeMem(0xb80c, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb80c));
        // 7B 0109
        gbc.setState(0xb863, 0x8033, 0xb150, 0xc36, 0x22aa, 0x7589, 0x1, 0x1);
        gbc.writeMem(0xb863, { 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8033, gbc.sp());
        EXPECT(0xb864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb863));
        // 7B 010A
        gbc.setState(0xd1cf, 0xb85d, 0x6870, 0x3ba7, 0x5ee3, 0x1737, 0x1, 0x1);
        gbc.writeMem(0xd1cf, { 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb85d, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd1cf));
        // 7B 010B
        gbc.setState(0xcb75, 0x79e3, 0xfda0, 0x9383, 0xabe4, 0x47bc, 0x0, 0x0);
        gbc.writeMem(0xcb75, { 0x7b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x79e3, gbc.sp());
        EXPECT(0xcb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcb75));
        // 7B 010C
        gbc.setState(0xecb5, 0x1bc0, 0x57b0, 0x9c0b, 0x5b7, 0x7f85, 0x0, 0x0);
        gbc.writeMem(0xecb5, { 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1bc0, gbc.sp());
        EXPECT(0xecb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xecb5));
        // 7B 010D
        gbc.setState(0xb27d, 0x2f62, 0xbd30, 0x33c8, 0x5096, 0xc219, 0x0, 0x1);
        gbc.writeMem(0xb27d, { 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2f62, gbc.sp());
        EXPECT(0xb27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb27d));
        // 7B 010E
        gbc.setState(0xbfed, 0xa6f, 0xaec0, 0x52e6, 0x6fd, 0xb1d9, 0x0, 0x1);
        gbc.writeMem(0xbfed, { 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0xbfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbfed));
        // 7B 010F
        gbc.setState(0xa9c0, 0x8c23, 0xf4d0, 0x1132, 0x776d, 0xf7d8, 0x1, 0x1);
        gbc.writeMem(0xa9c0, { 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8c23, gbc.sp());
        EXPECT(0xa9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa9c0));
        // 7B 0110
        gbc.setState(0x4f2e, 0xfdff, 0x3050, 0x8225, 0xfa74, 0xf38e, 0x0, 0x0);
        gbc.writeMem(0x4f2e, { 0x7b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfdff, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0111
        gbc.setState(0x2e52, 0xd194, 0x3b00, 0x86ba, 0xb0ec, 0xc778, 0x0, 0x1);
        gbc.writeMem(0x2e52, { 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd194, gbc.sp());
        EXPECT(0x2e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0112
        gbc.setState(0x9193, 0xc743, 0x5790, 0x8574, 0x5cec, 0xe0d3, 0x0, 0x0);
        gbc.writeMem(0x9193, { 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0x9194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9193));
        // 7B 0113
        gbc.setState(0x8fb8, 0x8efa, 0x7b50, 0x284c, 0x8453, 0xc5d4, 0x0, 0x1);
        gbc.writeMem(0x8fb8, { 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8efa, gbc.sp());
        EXPECT(0x8fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8fb8));
        // 7B 0114
        gbc.setState(0xd42b, 0xf5dd, 0x980, 0xa287, 0xdbcd, 0xf206, 0x1, 0x1);
        gbc.writeMem(0xd42b, { 0x7b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf5dd, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd42b));
        // 7B 0115
        gbc.setState(0x97a4, 0x9700, 0xe600, 0x53d8, 0x792d, 0xddaa, 0x0, 0x0);
        gbc.writeMem(0x97a4, { 0x7b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9700, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x97a4));
        // 7B 0116
        gbc.setState(0xc065, 0xd644, 0x720, 0x8b08, 0x5def, 0xba95, 0x0, 0x0);
        gbc.writeMem(0xc065, { 0x7b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd644, gbc.sp());
        EXPECT(0xc066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc065));
        // 7B 0117
        gbc.setState(0xc743, 0xf552, 0xd640, 0x7ce9, 0xfb50, 0x1e9f, 0x0, 0x0);
        gbc.writeMem(0xc743, { 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0xc744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc743));
        // 7B 0118
        gbc.setState(0x9850, 0xc018, 0x6750, 0xcd7c, 0xac0a, 0xbb5e, 0x0, 0x1);
        gbc.writeMem(0x9850, { 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc018, gbc.sp());
        EXPECT(0x9851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9850));
        // 7B 0119
        gbc.setState(0x8e1a, 0x91e0, 0x7700, 0x5fd4, 0xe704, 0x5ad1, 0x1, 0x1);
        gbc.writeMem(0x8e1a, { 0x7b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x91e0, gbc.sp());
        EXPECT(0x8e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8e1a));
        // 7B 011A
        gbc.setState(0xb002, 0xff60, 0x5310, 0x53e7, 0x6edd, 0x347a, 0x0, 0x1);
        gbc.writeMem(0xb002, { 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xff60, gbc.sp());
        EXPECT(0xb003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb002));
        // 7B 011B
        gbc.setState(0xa957, 0xda63, 0xe830, 0xe49b, 0xe9ae, 0x8d19, 0x0, 0x0);
        gbc.writeMem(0xa957, { 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xda63, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa957));
        // 7B 011C
        gbc.setState(0x4743, 0xe607, 0x9470, 0xdae8, 0x3272, 0xc4a5, 0x0, 0x1);
        gbc.writeMem(0x4743, { 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe607, gbc.sp());
        EXPECT(0x4744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 011D
        gbc.setState(0x7bee, 0x4bee, 0x9b90, 0xf2a4, 0x30a0, 0x6eb0, 0x1, 0x1);
        gbc.writeMem(0x7bee, { 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4bee, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 011F
        gbc.setState(0xabcf, 0xc17e, 0x310, 0x832c, 0x9be8, 0xd19f, 0x0, 0x0);
        gbc.writeMem(0xabcf, { 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc17e, gbc.sp());
        EXPECT(0xabd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xabcf));
        // 7B 0120
        gbc.setState(0x2635, 0x230f, 0xcd70, 0x9527, 0xff4a, 0x6b22, 0x0, 0x0);
        gbc.writeMem(0x2635, { 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x230f, gbc.sp());
        EXPECT(0x2636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0121
        gbc.setState(0xb84d, 0xed11, 0x8d50, 0x806d, 0x6cc1, 0x1ee2, 0x0, 0x1);
        gbc.writeMem(0xb84d, { 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed11, gbc.sp());
        EXPECT(0xb84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb84d));
        // 7B 0122
        gbc.setState(0xe488, 0xedac, 0x8980, 0x75c5, 0x94ca, 0xe503, 0x1, 0x0);
        gbc.writeMem(0xe488, { 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xedac, gbc.sp());
        EXPECT(0xe489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe488));
        // 7B 0123
        gbc.setState(0x646, 0xd2b5, 0xf1b0, 0xfff3, 0xb544, 0xfe18, 0x1, 0x1);
        gbc.writeMem(0x646, { 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0124
        gbc.setState(0x32c, 0xe9da, 0xb550, 0x873b, 0x3945, 0xc048, 0x0, 0x1);
        gbc.writeMem(0x32c, { 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe9da, gbc.sp());
        EXPECT(0x32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0125
        gbc.setState(0xb040, 0xefe8, 0x83f0, 0xff6b, 0x21c6, 0xb6f, 0x1, 0x0);
        gbc.writeMem(0xb040, { 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xefe8, gbc.sp());
        EXPECT(0xb041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb040));
        // 7B 0126
        gbc.setState(0x8ca2, 0x2e04, 0x98e0, 0x72be, 0xe32f, 0xac56, 0x0, 0x1);
        gbc.writeMem(0x8ca2, { 0x7b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0x8ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8ca2));
        // 7B 0127
        gbc.setState(0xdc34, 0xcfd3, 0xdc90, 0x7cab, 0x3bab, 0x9e6f, 0x1, 0x0);
        gbc.writeMem(0xdc34, { 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcfd3, gbc.sp());
        EXPECT(0xdc35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdc34));
        // 7B 0128
        gbc.setState(0x8d3d, 0x2c5e, 0x400, 0x2d76, 0x62ef, 0xfca7, 0x0, 0x1);
        gbc.writeMem(0x8d3d, { 0x7b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2c5e, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8d3d));
        // 7B 0129
        gbc.setState(0x6b4a, 0xa6c4, 0x3e60, 0x77f3, 0xff94, 0xa995, 0x1, 0x0);
        gbc.writeMem(0x6b4a, { 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa6c4, gbc.sp());
        EXPECT(0x6b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 012A
        gbc.setState(0x563e, 0x366b, 0xbcd0, 0x5036, 0x416, 0x409c, 0x1, 0x1);
        gbc.writeMem(0x563e, { 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x366b, gbc.sp());
        EXPECT(0x563f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 012B
        gbc.setState(0xda27, 0xb399, 0x5e00, 0xa09d, 0xb77b, 0xe811, 0x0, 0x1);
        gbc.writeMem(0xda27, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb399, gbc.sp());
        EXPECT(0xda28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xda27));
        // 7B 012C
        gbc.setState(0x58a1, 0x52f7, 0x14f0, 0x56de, 0x7d6, 0x10f4, 0x1, 0x1);
        gbc.writeMem(0x58a1, { 0x7b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x52f7, gbc.sp());
        EXPECT(0x58a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 012D
        gbc.setState(0xd60c, 0x9f32, 0x3830, 0xa2c, 0xfb4, 0xff97, 0x0, 0x1);
        gbc.writeMem(0xd60c, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9f32, gbc.sp());
        EXPECT(0xd60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd60c));
        // 7B 012E
        gbc.setState(0xa6ac, 0x2e82, 0xa50, 0xe57b, 0xe050, 0x67a5, 0x0, 0x1);
        gbc.writeMem(0xa6ac, { 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2e82, gbc.sp());
        EXPECT(0xa6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa6ac));
        // 7B 012F
        gbc.setState(0x6498, 0x208e, 0x1be0, 0x289e, 0x98b5, 0xfd8f, 0x0, 0x1);
        gbc.writeMem(0x6498, { 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x208e, gbc.sp());
        EXPECT(0x6499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0130
        gbc.setState(0xa674, 0x2d7a, 0x4d80, 0x577b, 0xf962, 0xd517, 0x1, 0x1);
        gbc.writeMem(0xa674, { 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2d7a, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa674));
        // 7B 0131
        gbc.setState(0x4d59, 0xd382, 0xbbe0, 0xe26a, 0x9bff, 0x983b, 0x0, 0x1);
        gbc.writeMem(0x4d59, { 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0x4d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0132
        gbc.setState(0x7d1a, 0x2fce, 0x8820, 0x7922, 0xd8c5, 0x725d, 0x0, 0x0);
        gbc.writeMem(0x7d1a, { 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2fce, gbc.sp());
        EXPECT(0x7d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0133
        gbc.setState(0x9c6e, 0xdfd0, 0x5060, 0x7cea, 0xf613, 0x9d20, 0x0, 0x1);
        gbc.writeMem(0x9c6e, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdfd0, gbc.sp());
        EXPECT(0x9c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9c6e));
        // 7B 0134
        gbc.setState(0xd389, 0x2f79, 0x12f0, 0x4361, 0xbe40, 0x1fed, 0x0, 0x1);
        gbc.writeMem(0xd389, { 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2f79, gbc.sp());
        EXPECT(0xd38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd389));
        // 7B 0135
        gbc.setState(0x7c7e, 0x457a, 0xafd0, 0x36e5, 0x1d37, 0x57da, 0x0, 0x1);
        gbc.writeMem(0x7c7e, { 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x457a, gbc.sp());
        EXPECT(0x7c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0136
        gbc.setState(0x119d, 0x75b5, 0x5740, 0x1b79, 0xea18, 0x6999, 0x0, 0x1);
        gbc.writeMem(0x119d, { 0x7b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0x119e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0137
        gbc.setState(0x2484, 0x33df, 0x3e00, 0xdcf7, 0x6b7e, 0xb570, 0x0, 0x1);
        gbc.writeMem(0x2484, { 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x33df, gbc.sp());
        EXPECT(0x2485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0138
        gbc.setState(0xc4ba, 0x5830, 0xac10, 0xdab6, 0x604c, 0x9431, 0x0, 0x0);
        gbc.writeMem(0xc4ba, { 0x7b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0xc4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc4ba));
        // 7B 0139
        gbc.setState(0x182b, 0xa710, 0xc520, 0x438e, 0x57b7, 0x4f10, 0x1, 0x1);
        gbc.writeMem(0x182b, { 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa710, gbc.sp());
        EXPECT(0x182c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 013A
        gbc.setState(0xa589, 0x577b, 0x7a90, 0x16b, 0x8055, 0xa6ac, 0x0, 0x1);
        gbc.writeMem(0xa589, { 0x7b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0xa58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa589));
        // 7B 013B
        gbc.setState(0x6bd7, 0x153a, 0xe360, 0x5174, 0xbafc, 0x75f9, 0x1, 0x0);
        gbc.writeMem(0x6bd7, { 0x7b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x153a, gbc.sp());
        EXPECT(0x6bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 013C
        gbc.setState(0x21a7, 0x2ed9, 0x4170, 0x44c6, 0xd859, 0xb3ba, 0x1, 0x1);
        gbc.writeMem(0x21a7, { 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2ed9, gbc.sp());
        EXPECT(0x21a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 013D
        gbc.setState(0xf5d, 0xd0e6, 0x2ac0, 0x2ae5, 0xf42b, 0x73a8, 0x0, 0x0);
        gbc.writeMem(0xf5d, { 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd0e6, gbc.sp());
        EXPECT(0xf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 013E
        gbc.setState(0xacd9, 0x606a, 0x75d0, 0x7fd4, 0x44f1, 0x2175, 0x1, 0x0);
        gbc.writeMem(0xacd9, { 0x7b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x606a, gbc.sp());
        EXPECT(0xacda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xacd9));
        // 7B 013F
        gbc.setState(0x5796, 0x51c3, 0x3340, 0x2e56, 0x57cc, 0xf747, 0x1, 0x1);
        gbc.writeMem(0x5796, { 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x51c3, gbc.sp());
        EXPECT(0x5797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0140
        gbc.setState(0x6e70, 0x3e1c, 0x6970, 0x2fb1, 0x718e, 0xbe56, 0x1, 0x1);
        gbc.writeMem(0x6e70, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3e1c, gbc.sp());
        EXPECT(0x6e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0141
        gbc.setState(0x88fb, 0x7760, 0x1a30, 0xe56d, 0x28b2, 0xdfab, 0x1, 0x1);
        gbc.writeMem(0x88fb, { 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7760, gbc.sp());
        EXPECT(0x88fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x88fb));
        // 7B 0142
        gbc.setState(0x29e0, 0x4215, 0x6020, 0xce4e, 0x814a, 0xa979, 0x0, 0x0);
        gbc.writeMem(0x29e0, { 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4215, gbc.sp());
        EXPECT(0x29e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0143
        gbc.setState(0x57b8, 0x678c, 0x3000, 0x8a73, 0x1d91, 0xb49f, 0x1, 0x0);
        gbc.writeMem(0x57b8, { 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x678c, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0144
        gbc.setState(0x2c4, 0x7663, 0x950, 0xfc5b, 0x9986, 0x9d4, 0x0, 0x1);
        gbc.writeMem(0x2c4, { 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7663, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0146
        gbc.setState(0xe139, 0x9c98, 0x4db0, 0xf3df, 0xe281, 0xffd4, 0x1, 0x1);
        gbc.writeMem(0xe139, { 0x7b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9c98, gbc.sp());
        EXPECT(0xe13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe139));
        // 7B 0147
        gbc.setState(0x89a8, 0xe789, 0x350, 0xf7c2, 0x66d7, 0x9f9b, 0x1, 0x1);
        gbc.writeMem(0x89a8, { 0x7b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe789, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x89a8));
        // 7B 0148
        gbc.setState(0x1a67, 0x22b2, 0x6400, 0x4609, 0xaeb6, 0xa7df, 0x1, 0x1);
        gbc.writeMem(0x1a67, { 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x22b2, gbc.sp());
        EXPECT(0x1a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0149
        gbc.setState(0xe5bf, 0x5f55, 0x26b0, 0xf568, 0xda5c, 0xb4fd, 0x0, 0x0);
        gbc.writeMem(0xe5bf, { 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5f55, gbc.sp());
        EXPECT(0xe5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe5bf));
        // 7B 014A
        gbc.setState(0x6ce6, 0xf882, 0x79d0, 0xe4a1, 0x3182, 0xf51, 0x0, 0x0);
        gbc.writeMem(0x6ce6, { 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf882, gbc.sp());
        EXPECT(0x6ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 014B
        gbc.setState(0x2ceb, 0xc7cc, 0x33d0, 0x4989, 0x4f2b, 0x5eea, 0x1, 0x1);
        gbc.writeMem(0x2ceb, { 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0x2cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 014C
        gbc.setState(0xc156, 0x9354, 0x5230, 0xdda5, 0x159f, 0x7ae4, 0x1, 0x1);
        gbc.writeMem(0xc156, { 0x7b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0xc157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc156));
        // 7B 014D
        gbc.setState(0x768b, 0x52a2, 0x11d0, 0x6b17, 0x4e88, 0x708a, 0x1, 0x0);
        gbc.writeMem(0x768b, { 0x7b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x52a2, gbc.sp());
        EXPECT(0x768c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 014E
        gbc.setState(0x33b3, 0xc1c7, 0xe90, 0x6cad, 0x73a8, 0xb338, 0x1, 0x1);
        gbc.writeMem(0x33b3, { 0x7b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc1c7, gbc.sp());
        EXPECT(0x33b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0150
        gbc.setState(0x220b, 0x6592, 0x8a10, 0xca32, 0x8c0e, 0x2c5b, 0x1, 0x0);
        gbc.writeMem(0x220b, { 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0x220c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0151
        gbc.setState(0x8a9e, 0x705d, 0xe990, 0x43ac, 0xe7d1, 0x162, 0x1, 0x0);
        gbc.writeMem(0x8a9e, { 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x705d, gbc.sp());
        EXPECT(0x8a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8a9e));
        // 7B 0152
        gbc.setState(0x65f5, 0x72ff, 0xba50, 0xf23b, 0x95f8, 0x957a, 0x0, 0x1);
        gbc.writeMem(0x65f5, { 0x7b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x72ff, gbc.sp());
        EXPECT(0x65f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0153
        gbc.setState(0x2815, 0xd946, 0xb820, 0xe191, 0x8a6d, 0x3489, 0x1, 0x0);
        gbc.writeMem(0x2815, { 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd946, gbc.sp());
        EXPECT(0x2816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0154
        gbc.setState(0x1d8f, 0x6553, 0x4080, 0x866a, 0x4aee, 0x2f95, 0x1, 0x0);
        gbc.writeMem(0x1d8f, { 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6553, gbc.sp());
        EXPECT(0x1d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0155
        gbc.setState(0x51cd, 0xec64, 0x3730, 0xabe, 0x91b4, 0x5b3e, 0x0, 0x1);
        gbc.writeMem(0x51cd, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xec64, gbc.sp());
        EXPECT(0x51ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0156
        gbc.setState(0x6909, 0x61f7, 0x3580, 0x2349, 0xf596, 0xce1b, 0x0, 0x1);
        gbc.writeMem(0x6909, { 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x61f7, gbc.sp());
        EXPECT(0x690a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0157
        gbc.setState(0xca49, 0xa38c, 0x1390, 0xe691, 0x2afb, 0x549a, 0x1, 0x1);
        gbc.writeMem(0xca49, { 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa38c, gbc.sp());
        EXPECT(0xca4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xca49));
        // 7B 0158
        gbc.setState(0xb9f, 0x89e5, 0xce50, 0x10fd, 0x6971, 0x419d, 0x0, 0x1);
        gbc.writeMem(0xb9f, { 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x89e5, gbc.sp());
        EXPECT(0xba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0159
        gbc.setState(0x4130, 0x575f, 0x1250, 0x2b60, 0x42aa, 0x291a, 0x0, 0x0);
        gbc.writeMem(0x4130, { 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x575f, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 015A
        gbc.setState(0x94af, 0xceb0, 0x4120, 0x4183, 0x175d, 0xaabc, 0x0, 0x1);
        gbc.writeMem(0x94af, { 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xceb0, gbc.sp());
        EXPECT(0x94b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x94af));
        // 7B 015C
        gbc.setState(0xcdbd, 0x98c4, 0x1130, 0xe31f, 0xedba, 0x3ebe, 0x0, 0x0);
        gbc.writeMem(0xcdbd, { 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x98c4, gbc.sp());
        EXPECT(0xcdbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcdbd));
        // 7B 015D
        gbc.setState(0xb9cf, 0xcda6, 0x4950, 0x1769, 0x61d, 0x2022, 0x0, 0x1);
        gbc.writeMem(0xb9cf, { 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcda6, gbc.sp());
        EXPECT(0xb9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb9cf));
        // 7B 015E
        gbc.setState(0x957c, 0xceb4, 0x39e0, 0x462a, 0x8632, 0xf244, 0x1, 0x1);
        gbc.writeMem(0x957c, { 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0x957d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x957c));
        // 7B 0160
        gbc.setState(0xae8a, 0x8d07, 0xe2b0, 0x6604, 0x45b7, 0x2943, 0x1, 0x1);
        gbc.writeMem(0xae8a, { 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8d07, gbc.sp());
        EXPECT(0xae8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xae8a));
        // 7B 0161
        gbc.setState(0xb297, 0x1b19, 0x5960, 0xb900, 0x331c, 0xa0c, 0x0, 0x1);
        gbc.writeMem(0xb297, { 0x7b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1b19, gbc.sp());
        EXPECT(0xb298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb297));
        // 7B 0162
        gbc.setState(0xa1a, 0x6c74, 0x2950, 0x7b4, 0xa7e1, 0x76f, 0x0, 0x1);
        gbc.writeMem(0xa1a, { 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6c74, gbc.sp());
        EXPECT(0xa1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0163
        gbc.setState(0x720b, 0x2f6a, 0x3810, 0xa950, 0x629e, 0x468c, 0x1, 0x1);
        gbc.writeMem(0x720b, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2f6a, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0164
        gbc.setState(0x783a, 0x9597, 0x6760, 0xd52b, 0x6036, 0xc3fc, 0x0, 0x0);
        gbc.writeMem(0x783a, { 0x7b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9597, gbc.sp());
        EXPECT(0x783b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0165
        gbc.setState(0xed8c, 0x37be, 0x6930, 0x35b7, 0xff87, 0xcc5d, 0x0, 0x1);
        gbc.writeMem(0xed8c, { 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x37be, gbc.sp());
        EXPECT(0xed8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xed8c));
        // 7B 0166
        gbc.setState(0xba8, 0x3e3c, 0xd2d0, 0xfd03, 0x8f48, 0x54dd, 0x0, 0x1);
        gbc.writeMem(0xba8, { 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3e3c, gbc.sp());
        EXPECT(0xba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0168
        gbc.setState(0x9201, 0x1860, 0x6010, 0x999c, 0xa54f, 0xa5bb, 0x1, 0x1);
        gbc.writeMem(0x9201, { 0x7b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1860, gbc.sp());
        EXPECT(0x9202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9201));
        // 7B 0169
        gbc.setState(0xb06d, 0x35fd, 0x59a0, 0xb867, 0xb46c, 0x3fe4, 0x0, 0x0);
        gbc.writeMem(0xb06d, { 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x35fd, gbc.sp());
        EXPECT(0xb06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb06d));
        // 7B 016A
        gbc.setState(0x26bf, 0x18e6, 0x85b0, 0x195c, 0xd656, 0x84c4, 0x0, 0x1);
        gbc.writeMem(0x26bf, { 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x18e6, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 016B
        gbc.setState(0xa5d4, 0x70d2, 0xd470, 0x53ef, 0x59e4, 0xf9f7, 0x1, 0x0);
        gbc.writeMem(0xa5d4, { 0x7b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0xa5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa5d4));
        // 7B 016C
        gbc.setState(0x97b9, 0x2022, 0x8a50, 0xe9e4, 0x1c75, 0x5655, 0x1, 0x0);
        gbc.writeMem(0x97b9, { 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2022, gbc.sp());
        EXPECT(0x97ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x97b9));
        // 7B 016D
        gbc.setState(0x4464, 0xe9bd, 0xa7b0, 0xff37, 0x62d4, 0xa1cf, 0x1, 0x0);
        gbc.writeMem(0x4464, { 0x7b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe9bd, gbc.sp());
        EXPECT(0x4465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 016E
        gbc.setState(0x2296, 0xdc1e, 0xd4e0, 0x5c42, 0x913b, 0xc43d, 0x0, 0x0);
        gbc.writeMem(0x2296, { 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdc1e, gbc.sp());
        EXPECT(0x2297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 016F
        gbc.setState(0x7848, 0x7c00, 0xe7c0, 0x213d, 0x5222, 0x3490, 0x1, 0x1);
        gbc.writeMem(0x7848, { 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7c00, gbc.sp());
        EXPECT(0x7849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0170
        gbc.setState(0xbfe7, 0xfaa7, 0xf7c0, 0x4102, 0x5f77, 0x5845, 0x0, 0x1);
        gbc.writeMem(0xbfe7, { 0x7b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfaa7, gbc.sp());
        EXPECT(0xbfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbfe7));
        // 7B 0171
        gbc.setState(0x9f8f, 0x3e5e, 0xbd10, 0x4a1a, 0x14fb, 0x3ff3, 0x0, 0x1);
        gbc.writeMem(0x9f8f, { 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3e5e, gbc.sp());
        EXPECT(0x9f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9f8f));
        // 7B 0172
        gbc.setState(0x7407, 0xd66a, 0x1780, 0x627a, 0x1446, 0x7d63, 0x1, 0x0);
        gbc.writeMem(0x7407, { 0x7b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd66a, gbc.sp());
        EXPECT(0x7408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0173
        gbc.setState(0x6824, 0x9d73, 0x2620, 0xee86, 0x5ef5, 0x91b9, 0x1, 0x1);
        gbc.writeMem(0x6824, { 0x7b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9d73, gbc.sp());
        EXPECT(0x6825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0174
        gbc.setState(0xe257, 0xcf50, 0x1470, 0x9a77, 0x47df, 0xe79b, 0x1, 0x0);
        gbc.writeMem(0xe257, { 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcf50, gbc.sp());
        EXPECT(0xe258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe257));
        // 7B 0176
        gbc.setState(0xc193, 0xe1a6, 0xd2d0, 0x5301, 0xc307, 0x4a51, 0x0, 0x1);
        gbc.writeMem(0xc193, { 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe1a6, gbc.sp());
        EXPECT(0xc194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc193));
        // 7B 0177
        gbc.setState(0x17cf, 0xf4c5, 0x10c0, 0xe5e5, 0x81ee, 0x6d96, 0x1, 0x0);
        gbc.writeMem(0x17cf, { 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf4c5, gbc.sp());
        EXPECT(0x17d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0178
        gbc.setState(0x50c7, 0xe24b, 0x2700, 0x604, 0x3452, 0xf9e5, 0x1, 0x1);
        gbc.writeMem(0x50c7, { 0x7b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe24b, gbc.sp());
        EXPECT(0x50c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0179
        gbc.setState(0xb82c, 0xf7b3, 0x56c0, 0x1a09, 0x7245, 0x13d2, 0x1, 0x1);
        gbc.writeMem(0xb82c, { 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0xb82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb82c));
        // 7B 017A
        gbc.setState(0x4b23, 0xf659, 0x3630, 0x6e07, 0xbc8c, 0xd7b3, 0x1, 0x1);
        gbc.writeMem(0x4b23, { 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0x4b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 017B
        gbc.setState(0x69c, 0x6cbf, 0xbdb0, 0x150, 0x136c, 0xa637, 0x1, 0x0);
        gbc.writeMem(0x69c, { 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6cbf, gbc.sp());
        EXPECT(0x69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 017C
        gbc.setState(0xc505, 0xc93a, 0x2e60, 0xd6e5, 0x622, 0xf8d3, 0x0, 0x0);
        gbc.writeMem(0xc505, { 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc93a, gbc.sp());
        EXPECT(0xc506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc505));
        // 7B 017D
        gbc.setState(0x1e01, 0x1bf9, 0x2360, 0xd64, 0x722a, 0xc394, 0x1, 0x1);
        gbc.writeMem(0x1e01, { 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1bf9, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 017F
        gbc.setState(0x95a6, 0x20b8, 0x2dc0, 0x7c09, 0x266f, 0x537c, 0x1, 0x1);
        gbc.writeMem(0x95a6, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x20b8, gbc.sp());
        EXPECT(0x95a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x95a6));
        // 7B 0180
        gbc.setState(0x8c7b, 0xcb4c, 0xf3b0, 0x880c, 0x1ab1, 0x1678, 0x0, 0x1);
        gbc.writeMem(0x8c7b, { 0x7b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcb4c, gbc.sp());
        EXPECT(0x8c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8c7b));
        // 7B 0181
        gbc.setState(0xd99, 0xc7a6, 0x6e30, 0xa03f, 0x5516, 0xc45, 0x0, 0x0);
        gbc.writeMem(0xd99, { 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0xd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0182
        gbc.setState(0x126b, 0xa4cc, 0x79f0, 0x6af4, 0x52c2, 0x5e4b, 0x1, 0x0);
        gbc.writeMem(0x126b, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa4cc, gbc.sp());
        EXPECT(0x126c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0183
        gbc.setState(0x4968, 0xef13, 0x84a0, 0x9221, 0x760a, 0x835a, 0x1, 0x0);
        gbc.writeMem(0x4968, { 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xef13, gbc.sp());
        EXPECT(0x4969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0184
        gbc.setState(0x2a2d, 0xdfee, 0x5920, 0x5027, 0xaa1f, 0x4ad9, 0x0, 0x0);
        gbc.writeMem(0x2a2d, { 0x7b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdfee, gbc.sp());
        EXPECT(0x2a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0185
        gbc.setState(0x5353, 0xbe5a, 0x92d0, 0xad52, 0x9c8, 0x4d4a, 0x0, 0x1);
        gbc.writeMem(0x5353, { 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0x5354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0186
        gbc.setState(0xc466, 0xc029, 0xcf50, 0xdad9, 0x9892, 0x8487, 0x0, 0x1);
        gbc.writeMem(0xc466, { 0x7b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0xc467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc466));
        // 7B 0187
        gbc.setState(0xe586, 0xcc9b, 0x9e60, 0xe9e7, 0x5bd9, 0x9315, 0x0, 0x0);
        gbc.writeMem(0xe586, { 0x7b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0xe587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe586));
        // 7B 0188
        gbc.setState(0xb8b, 0xed0e, 0x69a0, 0x291c, 0x8bcf, 0x7265, 0x0, 0x0);
        gbc.writeMem(0xb8b, { 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed0e, gbc.sp());
        EXPECT(0xb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0189
        gbc.setState(0x5f1f, 0x8647, 0x5ef0, 0xd629, 0x97dc, 0xc6f5, 0x0, 0x1);
        gbc.writeMem(0x5f1f, { 0x7b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0x5f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 018A
        gbc.setState(0xac8b, 0x57ec, 0x9b0, 0x1e82, 0x1c1d, 0x83f3, 0x0, 0x0);
        gbc.writeMem(0xac8b, { 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x57ec, gbc.sp());
        EXPECT(0xac8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xac8b));
        // 7B 018B
        gbc.setState(0x48aa, 0xedd, 0xfab0, 0x1603, 0xe6fd, 0x1f18, 0x0, 0x1);
        gbc.writeMem(0x48aa, { 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xedd, gbc.sp());
        EXPECT(0x48ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 018D
        gbc.setState(0xa766, 0xddcc, 0x1da0, 0x2d9c, 0x7a24, 0xf9a3, 0x0, 0x0);
        gbc.writeMem(0xa766, { 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xddcc, gbc.sp());
        EXPECT(0xa767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa766));
        // 7B 018E
        gbc.setState(0x1be8, 0xee22, 0x9370, 0x5784, 0x958f, 0x6fa, 0x0, 0x1);
        gbc.writeMem(0x1be8, { 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xee22, gbc.sp());
        EXPECT(0x1be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 018F
        gbc.setState(0x9d8b, 0x870e, 0xf460, 0xb5e1, 0xac37, 0x5d99, 0x0, 0x1);
        gbc.writeMem(0x9d8b, { 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x870e, gbc.sp());
        EXPECT(0x9d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9d8b));
        // 7B 0190
        gbc.setState(0xad41, 0x9a22, 0x6760, 0xdf90, 0x176b, 0xdc2c, 0x0, 0x1);
        gbc.writeMem(0xad41, { 0x7b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9a22, gbc.sp());
        EXPECT(0xad42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xad41));
        // 7B 0192
        gbc.setState(0x4dbd, 0xa3a0, 0xfd0, 0xb78c, 0xde73, 0xfb55, 0x1, 0x0);
        gbc.writeMem(0x4dbd, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa3a0, gbc.sp());
        EXPECT(0x4dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0193
        gbc.setState(0x692c, 0x4f35, 0x18d0, 0xee62, 0x3bd2, 0x9076, 0x1, 0x1);
        gbc.writeMem(0x692c, { 0x7b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4f35, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0194
        gbc.setState(0x9223, 0xfee8, 0x6e70, 0xeb76, 0x69df, 0xc7b1, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfee8, gbc.sp());
        EXPECT(0x9224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9223));
        // 7B 0195
        gbc.setState(0x3e0f, 0x691e, 0xa470, 0x2d0, 0xb14e, 0x1cb3, 0x0, 0x0);
        gbc.writeMem(0x3e0f, { 0x7b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x691e, gbc.sp());
        EXPECT(0x3e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0196
        gbc.setState(0x7e60, 0x6990, 0xb5e0, 0x91bc, 0x4588, 0xb007, 0x0, 0x0);
        gbc.writeMem(0x7e60, { 0x7b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6990, gbc.sp());
        EXPECT(0x7e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0197
        gbc.setState(0x70cd, 0xb5d7, 0x5660, 0xc282, 0xdfbc, 0xd9e6, 0x0, 0x1);
        gbc.writeMem(0x70cd, { 0x7b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb5d7, gbc.sp());
        EXPECT(0x70ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0198
        gbc.setState(0x39f9, 0x3f6a, 0x7ca0, 0xc3f5, 0x3434, 0x6f7e, 0x0, 0x0);
        gbc.writeMem(0x39f9, { 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3f6a, gbc.sp());
        EXPECT(0x39fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0199
        gbc.setState(0xa08a, 0x94b3, 0x19b0, 0x3bd1, 0xf7dc, 0x1337, 0x0, 0x0);
        gbc.writeMem(0xa08a, { 0x7b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x94b3, gbc.sp());
        EXPECT(0xa08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa08a));
        // 7B 019A
        gbc.setState(0x5aab, 0xff4f, 0xf480, 0xc87a, 0x882d, 0xba07, 0x1, 0x1);
        gbc.writeMem(0x5aab, { 0x7b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff4f, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 019B
        gbc.setState(0x9c56, 0x5e35, 0x3d70, 0x19bc, 0x55c6, 0x57bc, 0x0, 0x1);
        gbc.writeMem(0x9c56, { 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0x9c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9c56));
        // 7B 019C
        gbc.setState(0xe4ca, 0xe551, 0x7950, 0x7c16, 0xc113, 0x3788, 0x1, 0x1);
        gbc.writeMem(0xe4ca, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe551, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe4ca));
        // 7B 019D
        gbc.setState(0x8761, 0x9d82, 0xde30, 0xe127, 0x8bd2, 0x45c1, 0x1, 0x0);
        gbc.writeMem(0x8761, { 0x7b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x8762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8761));
        // 7B 019E
        gbc.setState(0x338c, 0x67d, 0x8be0, 0x7678, 0x82c1, 0xd308, 0x1, 0x0);
        gbc.writeMem(0x338c, { 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0x338d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 019F
        gbc.setState(0x3f0b, 0x26fd, 0xb640, 0xa1a5, 0xd257, 0xd52b, 0x0, 0x1);
        gbc.writeMem(0x3f0b, { 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0x3f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01A0
        gbc.setState(0x6e18, 0xf35b, 0x8900, 0x5db9, 0xe24b, 0xed85, 0x0, 0x1);
        gbc.writeMem(0x6e18, { 0x7b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf35b, gbc.sp());
        EXPECT(0x6e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01A1
        gbc.setState(0x4c6b, 0x5039, 0xa690, 0xf344, 0x7e77, 0x74c8, 0x0, 0x1);
        gbc.writeMem(0x4c6b, { 0x7b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5039, gbc.sp());
        EXPECT(0x4c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01A2
        gbc.setState(0x1684, 0xfc02, 0x5f0, 0x3ec5, 0x1d26, 0x212c, 0x1, 0x0);
        gbc.writeMem(0x1684, { 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfc02, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01A3
        gbc.setState(0x147, 0xb0cc, 0xd0e0, 0x9373, 0xe06f, 0x9ba6, 0x0, 0x1);
        gbc.writeMem(0x147, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb0cc, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01A4
        gbc.setState(0x4ddc, 0x3e4e, 0x62f0, 0x3759, 0x1fd0, 0x4bea, 0x0, 0x0);
        gbc.writeMem(0x4ddc, { 0x7b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3e4e, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01A5
        gbc.setState(0x5958, 0x2363, 0x5500, 0x629c, 0x1e9c, 0xfb78, 0x0, 0x1);
        gbc.writeMem(0x5958, { 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0x5959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01A6
        gbc.setState(0x253f, 0xb1f2, 0xd4b0, 0x985a, 0xc9bd, 0xdb6f, 0x0, 0x0);
        gbc.writeMem(0x253f, { 0x7b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb1f2, gbc.sp());
        EXPECT(0x2540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01A7
        gbc.setState(0xb135, 0x64a9, 0xa2d0, 0x7a36, 0xc93f, 0xaa97, 0x0, 0x0);
        gbc.writeMem(0xb135, { 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x64a9, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb135));
        // 7B 01A8
        gbc.setState(0x1481, 0x70a2, 0xfb30, 0xf3a4, 0x3735, 0xe676, 0x1, 0x1);
        gbc.writeMem(0x1481, { 0x7b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x70a2, gbc.sp());
        EXPECT(0x1482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01A9
        gbc.setState(0x5a2d, 0x124c, 0xd6f0, 0x7c14, 0x1c51, 0xc2c9, 0x0, 0x1);
        gbc.writeMem(0x5a2d, { 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x124c, gbc.sp());
        EXPECT(0x5a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01AA
        gbc.setState(0xdb36, 0xde89, 0x44d0, 0xf0c4, 0xef0e, 0x7d45, 0x1, 0x1);
        gbc.writeMem(0xdb36, { 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xde89, gbc.sp());
        EXPECT(0xdb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdb36));
        // 7B 01AB
        gbc.setState(0x6153, 0x5d4a, 0x5420, 0x91d9, 0xa541, 0xb7bc, 0x1, 0x0);
        gbc.writeMem(0x6153, { 0x7b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5d4a, gbc.sp());
        EXPECT(0x6154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01AC
        gbc.setState(0xa587, 0x8353, 0x1500, 0x70f7, 0x94bf, 0x5223, 0x0, 0x0);
        gbc.writeMem(0xa587, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8353, gbc.sp());
        EXPECT(0xa588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa587));
        // 7B 01AD
        gbc.setState(0xda6f, 0x398f, 0xea50, 0xe811, 0x17fb, 0xf6bd, 0x1, 0x1);
        gbc.writeMem(0xda6f, { 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x398f, gbc.sp());
        EXPECT(0xda70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xda6f));
        // 7B 01AE
        gbc.setState(0x62f8, 0xaa2d, 0x5730, 0xccff, 0xe17d, 0xd546, 0x0, 0x1);
        gbc.writeMem(0x62f8, { 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaa2d, gbc.sp());
        EXPECT(0x62f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01AF
        gbc.setState(0x172a, 0x9976, 0x7c20, 0xddf4, 0x103f, 0xca06, 0x0, 0x0);
        gbc.writeMem(0x172a, { 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9976, gbc.sp());
        EXPECT(0x172b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01B0
        gbc.setState(0x73cb, 0xc8f7, 0x4a00, 0xde86, 0x129e, 0x95fe, 0x1, 0x0);
        gbc.writeMem(0x73cb, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc8f7, gbc.sp());
        EXPECT(0x73cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01B1
        gbc.setState(0x93aa, 0x805b, 0x7e20, 0xccc1, 0x67f0, 0xabd9, 0x1, 0x1);
        gbc.writeMem(0x93aa, { 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x805b, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x93aa));
        // 7B 01B2
        gbc.setState(0x302f, 0x4ad5, 0x7cb0, 0x47, 0xdce, 0x7ae6, 0x1, 0x1);
        gbc.writeMem(0x302f, { 0x7b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4ad5, gbc.sp());
        EXPECT(0x3030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01B3
        gbc.setState(0x4949, 0x1df8, 0x5c00, 0xb624, 0xa5c0, 0x4f48, 0x1, 0x0);
        gbc.writeMem(0x4949, { 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1df8, gbc.sp());
        EXPECT(0x494a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01B5
        gbc.setState(0x5516, 0x18b2, 0xe460, 0x292f, 0x8954, 0xc44d, 0x1, 0x1);
        gbc.writeMem(0x5516, { 0x7b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x18b2, gbc.sp());
        EXPECT(0x5517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01B6
        gbc.setState(0xec2d, 0xdadb, 0xa5b0, 0xbbe9, 0x824, 0x3987, 0x0, 0x1);
        gbc.writeMem(0xec2d, { 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdadb, gbc.sp());
        EXPECT(0xec2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xec2d));
        // 7B 01B7
        gbc.setState(0x68c5, 0xb0fc, 0x4de0, 0xd76, 0xaa12, 0xd400, 0x0, 0x0);
        gbc.writeMem(0x68c5, { 0x7b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb0fc, gbc.sp());
        EXPECT(0x68c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01B8
        gbc.setState(0x2fa5, 0xa33e, 0x41d0, 0xfe21, 0xcd7b, 0xd683, 0x1, 0x0);
        gbc.writeMem(0x2fa5, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa33e, gbc.sp());
        EXPECT(0x2fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01B9
        gbc.setState(0xb7b6, 0x6b07, 0x7b20, 0x7ef2, 0xe8f7, 0xfaef, 0x1, 0x1);
        gbc.writeMem(0xb7b6, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6b07, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb7b6));
        // 7B 01BA
        gbc.setState(0x643d, 0xb0ba, 0xc640, 0x8ee0, 0x7bdd, 0x12b3, 0x1, 0x1);
        gbc.writeMem(0x643d, { 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb0ba, gbc.sp());
        EXPECT(0x643e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01BC
        gbc.setState(0x2685, 0x5f0, 0x320, 0x16, 0x9434, 0x1e69, 0x0, 0x0);
        gbc.writeMem(0x2685, { 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5f0, gbc.sp());
        EXPECT(0x2686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01BD
        gbc.setState(0xe0ad, 0x2c34, 0x5af0, 0x989e, 0x6e0e, 0xda7c, 0x1, 0x0);
        gbc.writeMem(0xe0ad, { 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2c34, gbc.sp());
        EXPECT(0xe0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe0ad));
        // 7B 01BE
        gbc.setState(0x6d3b, 0x78a7, 0x8360, 0x658b, 0xa8e0, 0x4618, 0x1, 0x0);
        gbc.writeMem(0x6d3b, { 0x7b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x78a7, gbc.sp());
        EXPECT(0x6d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01BF
        gbc.setState(0x8476, 0xf47, 0xe190, 0x8893, 0xb0a8, 0xc05, 0x0, 0x0);
        gbc.writeMem(0x8476, { 0x7b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf47, gbc.sp());
        EXPECT(0x8477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8476));
        // 7B 01C0
        gbc.setState(0x4964, 0x5920, 0x42a0, 0x6644, 0xad5e, 0xcacd, 0x1, 0x0);
        gbc.writeMem(0x4964, { 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5920, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01C1
        gbc.setState(0x3e0, 0xa62a, 0x3e50, 0xe921, 0xb2ff, 0x7a2, 0x1, 0x0);
        gbc.writeMem(0x3e0, { 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa62a, gbc.sp());
        EXPECT(0x3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01C2
        gbc.setState(0x1406, 0x62db, 0x5920, 0xa273, 0x784e, 0x9712, 0x1, 0x0);
        gbc.writeMem(0x1406, { 0x7b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x62db, gbc.sp());
        EXPECT(0x1407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01C4
        gbc.setState(0x2d89, 0x2942, 0xc710, 0x4f3a, 0x30f0, 0x4fc5, 0x0, 0x1);
        gbc.writeMem(0x2d89, { 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2942, gbc.sp());
        EXPECT(0x2d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01C5
        gbc.setState(0x832f, 0x6b0b, 0x7330, 0x3b94, 0x2f7, 0x9a44, 0x0, 0x1);
        gbc.writeMem(0x832f, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6b0b, gbc.sp());
        EXPECT(0x8330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x832f));
        // 7B 01C6
        gbc.setState(0x66, 0x258e, 0xbdc0, 0x29ac, 0x836f, 0x95c8, 0x0, 0x0);
        gbc.writeMem(0x66, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x258e, gbc.sp());
        EXPECT(0x67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01C7
        gbc.setState(0x6da1, 0xb077, 0xe8d0, 0x45e4, 0xa70d, 0x37ca, 0x1, 0x0);
        gbc.writeMem(0x6da1, { 0x7b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0x6da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01C8
        gbc.setState(0x299a, 0xd806, 0x5940, 0xe053, 0x4b0b, 0x4c3d, 0x0, 0x1);
        gbc.writeMem(0x299a, { 0x7b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd806, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01C9
        gbc.setState(0x5486, 0x7238, 0x9c80, 0x6435, 0x55a2, 0x82da, 0x0, 0x1);
        gbc.writeMem(0x5486, { 0x7b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7238, gbc.sp());
        EXPECT(0x5487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01CA
        gbc.setState(0xc7a5, 0xd578, 0x52b0, 0xf30f, 0x62b8, 0x378e, 0x0, 0x1);
        gbc.writeMem(0xc7a5, { 0x7b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd578, gbc.sp());
        EXPECT(0xc7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc7a5));
        // 7B 01CB
        gbc.setState(0xaf5, 0x6514, 0xcaf0, 0x7f62, 0x34d1, 0x416e, 0x0, 0x1);
        gbc.writeMem(0xaf5, { 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6514, gbc.sp());
        EXPECT(0xaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01CC
        gbc.setState(0xe812, 0xcbac, 0x7140, 0x79bd, 0xba88, 0xec0d, 0x1, 0x1);
        gbc.writeMem(0xe812, { 0x7b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0xe813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe812));
        // 7B 01CE
        gbc.setState(0x95f, 0xd7d8, 0x82c0, 0xfb60, 0x2bd9, 0x1edc, 0x1, 0x0);
        gbc.writeMem(0x95f, { 0x7b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0x960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01CF
        gbc.setState(0x75ba, 0x4240, 0xc8e0, 0xf09, 0x5896, 0xcf93, 0x0, 0x0);
        gbc.writeMem(0x75ba, { 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4240, gbc.sp());
        EXPECT(0x75bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01D0
        gbc.setState(0xd57d, 0xa7be, 0xf770, 0x5d67, 0x10d3, 0xfd49, 0x0, 0x0);
        gbc.writeMem(0xd57d, { 0x7b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa7be, gbc.sp());
        EXPECT(0xd57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd57d));
        // 7B 01D1
        gbc.setState(0x8d78, 0x74f0, 0x2ed0, 0xa2ae, 0x9fc7, 0xc250, 0x0, 0x0);
        gbc.writeMem(0x8d78, { 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x74f0, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8d78));
        // 7B 01D2
        gbc.setState(0xda34, 0x61d0, 0xe1e0, 0x8392, 0xe547, 0xbfad, 0x1, 0x0);
        gbc.writeMem(0xda34, { 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xda34));
        // 7B 01D3
        gbc.setState(0x9ed9, 0x2fde, 0xdc00, 0x52ec, 0x84a6, 0x9472, 0x1, 0x0);
        gbc.writeMem(0x9ed9, { 0x7b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2fde, gbc.sp());
        EXPECT(0x9eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9ed9));
        // 7B 01D4
        gbc.setState(0xc179, 0x57ac, 0xbd40, 0xd026, 0xd797, 0xe06f, 0x0, 0x1);
        gbc.writeMem(0xc179, { 0x7b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x57ac, gbc.sp());
        EXPECT(0xc17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc179));
        // 7B 01D5
        gbc.setState(0xa8f5, 0x7db2, 0xbb80, 0xd1d0, 0x32b2, 0x3459, 0x0, 0x1);
        gbc.writeMem(0xa8f5, { 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7db2, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa8f5));
        // 7B 01D6
        gbc.setState(0xe2aa, 0x9b2, 0xa910, 0xe693, 0x9751, 0x1dda, 0x1, 0x1);
        gbc.writeMem(0xe2aa, { 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0xe2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe2aa));
        // 7B 01D7
        gbc.setState(0x5188, 0xd7c5, 0xbb70, 0x2a28, 0xaacb, 0x88ce, 0x0, 0x0);
        gbc.writeMem(0x5188, { 0x7b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0x5189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01D8
        gbc.setState(0x8d23, 0xc47a, 0x6d10, 0x3e94, 0x5cd2, 0x40a3, 0x0, 0x1);
        gbc.writeMem(0x8d23, { 0x7b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc47a, gbc.sp());
        EXPECT(0x8d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8d23));
        // 7B 01D9
        gbc.setState(0x7bf3, 0x7621, 0x9b00, 0xb89, 0xeb43, 0xda5e, 0x0, 0x0);
        gbc.writeMem(0x7bf3, { 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7621, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01DA
        gbc.setState(0x606c, 0x1133, 0xa810, 0x7ad7, 0xdad1, 0x7c37, 0x1, 0x0);
        gbc.writeMem(0x606c, { 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1133, gbc.sp());
        EXPECT(0x606d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01DB
        gbc.setState(0x531a, 0x8877, 0x31d0, 0xe08, 0xbe9e, 0x7a9a, 0x0, 0x1);
        gbc.writeMem(0x531a, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x531b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01DC
        gbc.setState(0xc45e, 0x85c7, 0xbd90, 0xe33d, 0xc35c, 0x7958, 0x1, 0x1);
        gbc.writeMem(0xc45e, { 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x85c7, gbc.sp());
        EXPECT(0xc45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc45e));
        // 7B 01DD
        gbc.setState(0xd010, 0x27a, 0x7240, 0x545b, 0x6d07, 0x1724, 0x0, 0x1);
        gbc.writeMem(0xd010, { 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x27a, gbc.sp());
        EXPECT(0xd011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd010));
        // 7B 01DE
        gbc.setState(0xa0ba, 0x4ebd, 0x5770, 0xdc8a, 0x7227, 0xf9b4, 0x1, 0x0);
        gbc.writeMem(0xa0ba, { 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4ebd, gbc.sp());
        EXPECT(0xa0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa0ba));
        // 7B 01DF
        gbc.setState(0x76fb, 0x93b0, 0xbd0, 0xe69f, 0x49d7, 0x97b2, 0x0, 0x0);
        gbc.writeMem(0x76fb, { 0x7b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x93b0, gbc.sp());
        EXPECT(0x76fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01E0
        gbc.setState(0x3321, 0x8137, 0x7ff0, 0xf736, 0x96d0, 0x6a20, 0x1, 0x1);
        gbc.writeMem(0x3321, { 0x7b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8137, gbc.sp());
        EXPECT(0x3322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01E1
        gbc.setState(0xc027, 0x9ce7, 0xd030, 0xceee, 0xf58e, 0x7ec5, 0x1, 0x0);
        gbc.writeMem(0xc027, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9ce7, gbc.sp());
        EXPECT(0xc028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc027));
        // 7B 01E2
        gbc.setState(0xb2ec, 0xd19c, 0x5b50, 0x2321, 0xd6fa, 0x25b7, 0x0, 0x0);
        gbc.writeMem(0xb2ec, { 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd19c, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb2ec));
        // 7B 01E3
        gbc.setState(0xd80b, 0xf5f4, 0x48d0, 0xdcdc, 0x74bd, 0xf458, 0x0, 0x1);
        gbc.writeMem(0xd80b, { 0x7b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf5f4, gbc.sp());
        EXPECT(0xd80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd80b));
        // 7B 01E4
        gbc.setState(0xbdb, 0xdf4d, 0x4150, 0x4873, 0x983a, 0x3ae7, 0x0, 0x1);
        gbc.writeMem(0xbdb, { 0x7b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdf4d, gbc.sp());
        EXPECT(0xbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01E5
        gbc.setState(0x37e2, 0xae63, 0x3b20, 0xea8d, 0x2922, 0x68d5, 0x1, 0x0);
        gbc.writeMem(0x37e2, { 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xae63, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01E6
        gbc.setState(0x7378, 0xd692, 0x7b80, 0xfdc6, 0x1025, 0x27d3, 0x0, 0x0);
        gbc.writeMem(0x7378, { 0x7b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd692, gbc.sp());
        EXPECT(0x7379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01E8
        gbc.setState(0x88cb, 0xc16f, 0xf4c0, 0x77d1, 0xff5e, 0x88c4, 0x1, 0x1);
        gbc.writeMem(0x88cb, { 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc16f, gbc.sp());
        EXPECT(0x88cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x88cb));
        // 7B 01E9
        gbc.setState(0x9446, 0xac2f, 0xdfc0, 0xc7ff, 0x50b6, 0xc7f5, 0x1, 0x1);
        gbc.writeMem(0x9446, { 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xac2f, gbc.sp());
        EXPECT(0x9447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9446));
        // 7B 01EA
        gbc.setState(0xdb40, 0x17d2, 0xb9f0, 0xa857, 0x70a9, 0xcf76, 0x1, 0x0);
        gbc.writeMem(0xdb40, { 0x7b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x17d2, gbc.sp());
        EXPECT(0xdb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdb40));
        // 7B 01EB
        gbc.setState(0xb478, 0x870a, 0x1370, 0x388e, 0x58d1, 0xd980, 0x0, 0x0);
        gbc.writeMem(0xb478, { 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x870a, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb478));
        // 7B 01EC
        gbc.setState(0x4710, 0x9e58, 0x2c40, 0x2c2e, 0xcac3, 0xfe6f, 0x0, 0x1);
        gbc.writeMem(0x4710, { 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9e58, gbc.sp());
        EXPECT(0x4711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01EE
        gbc.setState(0x1fd4, 0x86aa, 0xb8a0, 0xae3c, 0x9f76, 0x6584, 0x0, 0x0);
        gbc.writeMem(0x1fd4, { 0x7b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x86aa, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01EF
        gbc.setState(0xb42, 0x249e, 0x2a50, 0xb607, 0xb1b9, 0x6976, 0x1, 0x1);
        gbc.writeMem(0xb42, { 0x7b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x249e, gbc.sp());
        EXPECT(0xb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01F0
        gbc.setState(0x1e0, 0xa681, 0x8040, 0x80fc, 0x7b9b, 0xcbd7, 0x1, 0x1);
        gbc.writeMem(0x1e0, { 0x7b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa681, gbc.sp());
        EXPECT(0x1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01F1
        gbc.setState(0x8e2, 0x8b06, 0x4340, 0x6f1a, 0x4fcf, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0x8e2, { 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8b06, gbc.sp());
        EXPECT(0x8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01F2
        gbc.setState(0x5132, 0x3b05, 0xc720, 0x3ee9, 0x3c06, 0xf1b0, 0x0, 0x0);
        gbc.writeMem(0x5132, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3b05, gbc.sp());
        EXPECT(0x5133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01F3
        gbc.setState(0x4657, 0x235b, 0xab60, 0x6ec7, 0x85af, 0x14a0, 0x0, 0x1);
        gbc.writeMem(0x4657, { 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x235b, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01F4
        gbc.setState(0xbaaa, 0x9344, 0x2200, 0xb92e, 0x38c1, 0x4bca, 0x0, 0x0);
        gbc.writeMem(0xbaaa, { 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9344, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbaaa));
        // 7B 01F6
        gbc.setState(0x1eb6, 0x80ff, 0xbe0, 0x2137, 0xdc18, 0x8206, 0x0, 0x0);
        gbc.writeMem(0x1eb6, { 0x7b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x80ff, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 01F7
        gbc.setState(0x7b6c, 0xedff, 0x6dd0, 0x4474, 0x27bb, 0x91c9, 0x0, 0x0);
        gbc.writeMem(0x7b6c, { 0x7b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xedff, gbc.sp());
        EXPECT(0x7b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01F8
        gbc.setState(0x6268, 0xa251, 0xee90, 0xc31d, 0xf4a7, 0x93cf, 0x1, 0x1);
        gbc.writeMem(0x6268, { 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa251, gbc.sp());
        EXPECT(0x6269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01F9
        gbc.setState(0x2fcf, 0x318b, 0x92f0, 0xb8ae, 0x24bf, 0xdded, 0x0, 0x1);
        gbc.writeMem(0x2fcf, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x318b, gbc.sp());
        EXPECT(0x2fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01FA
        gbc.setState(0x8a92, 0xc4bb, 0x8050, 0x6ebd, 0x967e, 0xca77, 0x1, 0x0);
        gbc.writeMem(0x8a92, { 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc4bb, gbc.sp());
        EXPECT(0x8a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8a92));
        // 7B 01FB
        gbc.setState(0x49ae, 0xcfbf, 0x7c30, 0x4daa, 0x7a64, 0x112c, 0x0, 0x1);
        gbc.writeMem(0x49ae, { 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcfbf, gbc.sp());
        EXPECT(0x49af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 01FC
        gbc.setState(0x8b11, 0xb105, 0xa8f0, 0x9923, 0xc37e, 0xc2eb, 0x1, 0x0);
        gbc.writeMem(0x8b11, { 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb105, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8b11));
        // 7B 01FD
        gbc.setState(0xd9d3, 0x5d3b, 0xd760, 0xf493, 0x3a6a, 0x50fa, 0x1, 0x0);
        gbc.writeMem(0xd9d3, { 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5d3b, gbc.sp());
        EXPECT(0xd9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd9d3));
        // 7B 01FE
        gbc.setState(0xd6bf, 0xa08a, 0x6ac0, 0x50eb, 0x8f2e, 0x74, 0x1, 0x0);
        gbc.writeMem(0xd6bf, { 0x7b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa08a, gbc.sp());
        EXPECT(0xd6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd6bf));
        // 7B 01FF
        gbc.setState(0x7ba6, 0xcdd6, 0x42d0, 0x4bc1, 0x8e37, 0xfa50, 0x1, 0x1);
        gbc.writeMem(0x7ba6, { 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcdd6, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0200
        gbc.setState(0xdf29, 0x790a, 0x1240, 0xd400, 0xcbda, 0x2128, 0x1, 0x1);
        gbc.writeMem(0xdf29, { 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x790a, gbc.sp());
        EXPECT(0xdf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdf29));
        // 7B 0201
        gbc.setState(0x55a3, 0xb4bb, 0x5400, 0xba87, 0x1496, 0x4663, 0x1, 0x1);
        gbc.writeMem(0x55a3, { 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb4bb, gbc.sp());
        EXPECT(0x55a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0202
        gbc.setState(0xe93c, 0x8ed3, 0x77d0, 0x31a4, 0x8806, 0x14ac, 0x1, 0x0);
        gbc.writeMem(0xe93c, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8ed3, gbc.sp());
        EXPECT(0xe93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe93c));
        // 7B 0203
        gbc.setState(0x74b2, 0xd7f1, 0x8b50, 0x2f2a, 0xad50, 0xf1a, 0x1, 0x1);
        gbc.writeMem(0x74b2, { 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd7f1, gbc.sp());
        EXPECT(0x74b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0204
        gbc.setState(0x9beb, 0x1166, 0x4670, 0x3109, 0xe606, 0x24db, 0x1, 0x1);
        gbc.writeMem(0x9beb, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1166, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9beb));
        // 7B 0205
        gbc.setState(0xb536, 0x597c, 0x4690, 0xd6ca, 0x4509, 0xe06, 0x1, 0x0);
        gbc.writeMem(0xb536, { 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x597c, gbc.sp());
        EXPECT(0xb537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb536));
        // 7B 0206
        gbc.setState(0x9ab1, 0xde6b, 0x9120, 0x626f, 0xac0f, 0x490f, 0x1, 0x1);
        gbc.writeMem(0x9ab1, { 0x7b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xde6b, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9ab1));
        // 7B 0207
        gbc.setState(0x1517, 0xcea3, 0xc670, 0xe0a4, 0x8a79, 0x882e, 0x0, 0x0);
        gbc.writeMem(0x1517, { 0x7b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcea3, gbc.sp());
        EXPECT(0x1518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0208
        gbc.setState(0xb39b, 0x9ec6, 0x280, 0xb7f2, 0xf7f0, 0x5a42, 0x1, 0x1);
        gbc.writeMem(0xb39b, { 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0xb39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb39b));
        // 7B 0209
        gbc.setState(0xd328, 0x6d3a, 0x8e90, 0x5776, 0x8aa4, 0x5716, 0x0, 0x0);
        gbc.writeMem(0xd328, { 0x7b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6d3a, gbc.sp());
        EXPECT(0xd329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd328));
        // 7B 020A
        gbc.setState(0xc5cb, 0x8bef, 0x6380, 0x1683, 0x4326, 0x1d06, 0x0, 0x0);
        gbc.writeMem(0xc5cb, { 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8bef, gbc.sp());
        EXPECT(0xc5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc5cb));
        // 7B 020B
        gbc.setState(0x8772, 0xa2d, 0xef20, 0xbb61, 0xad87, 0x6924, 0x1, 0x1);
        gbc.writeMem(0x8772, { 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa2d, gbc.sp());
        EXPECT(0x8773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8772));
        // 7B 020C
        gbc.setState(0x9819, 0x8bfb, 0xbc20, 0x3598, 0xd529, 0x8595, 0x0, 0x0);
        gbc.writeMem(0x9819, { 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8bfb, gbc.sp());
        EXPECT(0x981a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9819));
        // 7B 020D
        gbc.setState(0x7de0, 0x126, 0x4d60, 0x573f, 0xac9d, 0xd0d9, 0x1, 0x0);
        gbc.writeMem(0x7de0, { 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x126, gbc.sp());
        EXPECT(0x7de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 020E
        gbc.setState(0xe1ce, 0x90a5, 0xd650, 0xd6cf, 0x8d47, 0x8225, 0x0, 0x0);
        gbc.writeMem(0xe1ce, { 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x90a5, gbc.sp());
        EXPECT(0xe1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe1ce));
        // 7B 020F
        gbc.setState(0xe746, 0x46fe, 0x4a0, 0xc949, 0x4181, 0xcb7c, 0x1, 0x1);
        gbc.writeMem(0xe746, { 0x7b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x46fe, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe746));
        // 7B 0210
        gbc.setState(0x8458, 0xec54, 0x28b0, 0x9559, 0xf5bf, 0xe4d5, 0x0, 0x0);
        gbc.writeMem(0x8458, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xec54, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8458));
        // 7B 0211
        gbc.setState(0x16ae, 0x29cd, 0xd680, 0xe7b4, 0x8480, 0x2337, 0x0, 0x1);
        gbc.writeMem(0x16ae, { 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x29cd, gbc.sp());
        EXPECT(0x16af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0212
        gbc.setState(0xefb0, 0xbb48, 0x95c0, 0xba40, 0xa727, 0x201a, 0x1, 0x0);
        gbc.writeMem(0xefb0, { 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbb48, gbc.sp());
        EXPECT(0xefb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xefb0));
        // 7B 0213
        gbc.setState(0xc1db, 0x65a4, 0x3280, 0x5a14, 0x1261, 0x81ec, 0x0, 0x0);
        gbc.writeMem(0xc1db, { 0x7b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0xc1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc1db));
        // 7B 0214
        gbc.setState(0x98bc, 0x4dc4, 0xc610, 0x62ed, 0x58bf, 0xef66, 0x0, 0x1);
        gbc.writeMem(0x98bc, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4dc4, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x98bc));
        // 7B 0215
        gbc.setState(0x70cb, 0xe52b, 0x6e30, 0x67a5, 0x19ca, 0x7dbd, 0x0, 0x0);
        gbc.writeMem(0x70cb, { 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe52b, gbc.sp());
        EXPECT(0x70cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0216
        gbc.setState(0x7b59, 0xf93e, 0x5ba0, 0x23e1, 0x5fa0, 0x692a, 0x0, 0x1);
        gbc.writeMem(0x7b59, { 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf93e, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0217
        gbc.setState(0x9b32, 0xdb02, 0x99e0, 0x6105, 0xdbb8, 0x8924, 0x0, 0x1);
        gbc.writeMem(0x9b32, { 0x7b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdb02, gbc.sp());
        EXPECT(0x9b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9b32));
        // 7B 0218
        gbc.setState(0x2fbb, 0x6ace, 0xeb90, 0x1ef4, 0x1031, 0xa7d9, 0x0, 0x0);
        gbc.writeMem(0x2fbb, { 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6ace, gbc.sp());
        EXPECT(0x2fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0219
        gbc.setState(0xa20, 0x792b, 0x9e60, 0x827a, 0xda83, 0x2764, 0x1, 0x0);
        gbc.writeMem(0xa20, { 0x7b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x792b, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 021A
        gbc.setState(0x411a, 0xabe0, 0x5300, 0xd71c, 0xa857, 0x4fb5, 0x1, 0x1);
        gbc.writeMem(0x411a, { 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xabe0, gbc.sp());
        EXPECT(0x411b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 021B
        gbc.setState(0x9d79, 0x9c59, 0xef00, 0xcfcb, 0x4fcd, 0x7e7f, 0x1, 0x0);
        gbc.writeMem(0x9d79, { 0x7b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9c59, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9d79));
        // 7B 021C
        gbc.setState(0xd4f0, 0x4427, 0xef30, 0xa54, 0x89f2, 0x1ae6, 0x0, 0x1);
        gbc.writeMem(0xd4f0, { 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4427, gbc.sp());
        EXPECT(0xd4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd4f0));
        // 7B 021D
        gbc.setState(0xccc3, 0x8294, 0x8df0, 0x1467, 0xa63b, 0x1a48, 0x0, 0x0);
        gbc.writeMem(0xccc3, { 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8294, gbc.sp());
        EXPECT(0xccc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xccc3));
        // 7B 021E
        gbc.setState(0x5d67, 0x5424, 0x6e90, 0x6e56, 0x203f, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x5d67, { 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5424, gbc.sp());
        EXPECT(0x5d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 021F
        gbc.setState(0xa063, 0xbb8b, 0x3020, 0x9560, 0xb4d4, 0xf072, 0x1, 0x1);
        gbc.writeMem(0xa063, { 0x7b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbb8b, gbc.sp());
        EXPECT(0xa064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa063));
        // 7B 0220
        gbc.setState(0x86, 0xdc0d, 0xb210, 0xa9ac, 0x9414, 0x68ad, 0x1, 0x1);
        gbc.writeMem(0x86, { 0x7b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdc0d, gbc.sp());
        EXPECT(0x87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0222
        gbc.setState(0xcf8d, 0x1ce4, 0x5760, 0xa0d8, 0x1623, 0xfcd7, 0x1, 0x1);
        gbc.writeMem(0xcf8d, { 0x7b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0xcf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcf8d));
        // 7B 0223
        gbc.setState(0x68c5, 0x90f6, 0x6ad0, 0x161d, 0x87e1, 0x2437, 0x1, 0x0);
        gbc.writeMem(0x68c5, { 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x90f6, gbc.sp());
        EXPECT(0x68c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0224
        gbc.setState(0xfa7, 0xa573, 0xbd80, 0xee25, 0x6, 0xbe51, 0x0, 0x0);
        gbc.writeMem(0xfa7, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa573, gbc.sp());
        EXPECT(0xfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0225
        gbc.setState(0x6d5d, 0xd74f, 0xba90, 0x6493, 0xbdee, 0x84bd, 0x0, 0x0);
        gbc.writeMem(0x6d5d, { 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd74f, gbc.sp());
        EXPECT(0x6d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0226
        gbc.setState(0xac12, 0xc2c1, 0x8360, 0x874d, 0x7e8a, 0x2377, 0x1, 0x0);
        gbc.writeMem(0xac12, { 0x7b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc2c1, gbc.sp());
        EXPECT(0xac13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xac12));
        // 7B 0227
        gbc.setState(0xcdfd, 0xcd6, 0x8b10, 0xc41d, 0x6903, 0x6b30, 0x0, 0x1);
        gbc.writeMem(0xcdfd, { 0x7b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcd6, gbc.sp());
        EXPECT(0xcdfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcdfd));
        // 7B 0228
        gbc.setState(0x93de, 0x7ba0, 0xa570, 0x321a, 0x808c, 0x24dc, 0x0, 0x0);
        gbc.writeMem(0x93de, { 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7ba0, gbc.sp());
        EXPECT(0x93df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x93de));
        // 7B 0229
        gbc.setState(0x3537, 0x97ef, 0xacc0, 0xb887, 0x348d, 0x89fd, 0x0, 0x1);
        gbc.writeMem(0x3537, { 0x7b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x97ef, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 022A
        gbc.setState(0x8130, 0x9edf, 0x1c90, 0xfe24, 0x443b, 0xef7a, 0x0, 0x0);
        gbc.writeMem(0x8130, { 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9edf, gbc.sp());
        EXPECT(0x8131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8130));
        // 7B 022B
        gbc.setState(0x9875, 0xbb94, 0x2ba0, 0x1983, 0x58be, 0x83cb, 0x1, 0x1);
        gbc.writeMem(0x9875, { 0x7b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbb94, gbc.sp());
        EXPECT(0x9876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9875));
        // 7B 022C
        gbc.setState(0x2e28, 0x2015, 0xad40, 0xb623, 0xdc3, 0xa0d0, 0x1, 0x0);
        gbc.writeMem(0x2e28, { 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2015, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 022D
        gbc.setState(0xc9fc, 0xabef, 0xe7a0, 0xba3f, 0x979, 0xcfca, 0x0, 0x0);
        gbc.writeMem(0xc9fc, { 0x7b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xabef, gbc.sp());
        EXPECT(0xc9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc9fc));
        // 7B 022E
        gbc.setState(0x5471, 0x8094, 0x2b90, 0xb8ba, 0xa2, 0xfb21, 0x1, 0x1);
        gbc.writeMem(0x5471, { 0x7b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8094, gbc.sp());
        EXPECT(0x5472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 022F
        gbc.setState(0xdbab, 0xfe31, 0xaf30, 0x9fcf, 0x16ae, 0xaa84, 0x1, 0x1);
        gbc.writeMem(0xdbab, { 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe31, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdbab));
        // 7B 0230
        gbc.setState(0xa126, 0x1140, 0x3be0, 0xd211, 0x9044, 0xd910, 0x1, 0x1);
        gbc.writeMem(0xa126, { 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1140, gbc.sp());
        EXPECT(0xa127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa126));
        // 7B 0231
        gbc.setState(0x97e2, 0x7b44, 0x4b00, 0xae89, 0x456a, 0xec33, 0x0, 0x0);
        gbc.writeMem(0x97e2, { 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7b44, gbc.sp());
        EXPECT(0x97e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x97e2));
        // 7B 0232
        gbc.setState(0xebdf, 0x6143, 0xd6c0, 0xc637, 0xb640, 0x66c8, 0x1, 0x1);
        gbc.writeMem(0xebdf, { 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6143, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xebdf));
        // 7B 0233
        gbc.setState(0x2cc1, 0xa493, 0x3130, 0x3738, 0x4163, 0x2286, 0x0, 0x0);
        gbc.writeMem(0x2cc1, { 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa493, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0234
        gbc.setState(0x4664, 0xf29f, 0x9980, 0xde64, 0xe47f, 0x1d39, 0x1, 0x1);
        gbc.writeMem(0x4664, { 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf29f, gbc.sp());
        EXPECT(0x4665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0235
        gbc.setState(0x84e4, 0x26bf, 0x4fc0, 0x606e, 0xb486, 0x14a1, 0x0, 0x0);
        gbc.writeMem(0x84e4, { 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0x84e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x84e4));
        // 7B 0236
        gbc.setState(0xa72f, 0x170c, 0xaa30, 0xbbb6, 0x88c2, 0x5f7b, 0x1, 0x1);
        gbc.writeMem(0xa72f, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x170c, gbc.sp());
        EXPECT(0xa730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa72f));
        // 7B 0237
        gbc.setState(0x18e0, 0x699e, 0x62c0, 0xf350, 0x51f0, 0xd2d4, 0x1, 0x1);
        gbc.writeMem(0x18e0, { 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x699e, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0238
        gbc.setState(0xdbf2, 0x5310, 0x440, 0xf860, 0xcf1, 0xcd97, 0x0, 0x0);
        gbc.writeMem(0xdbf2, { 0x7b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5310, gbc.sp());
        EXPECT(0xdbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdbf2));
        // 7B 0239
        gbc.setState(0x71e2, 0x592, 0x320, 0x2d7d, 0x625b, 0x3d73, 0x1, 0x0);
        gbc.writeMem(0x71e2, { 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x592, gbc.sp());
        EXPECT(0x71e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 023A
        gbc.setState(0x3dde, 0xd735, 0x7d60, 0x93c1, 0xef8e, 0xb438, 0x0, 0x1);
        gbc.writeMem(0x3dde, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd735, gbc.sp());
        EXPECT(0x3ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 023B
        gbc.setState(0x8c28, 0xad86, 0x44f0, 0xa440, 0x9af, 0x288e, 0x0, 0x1);
        gbc.writeMem(0x8c28, { 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8c28));
        // 7B 023C
        gbc.setState(0xea3a, 0x4769, 0x6470, 0x790b, 0x66c3, 0x3f38, 0x0, 0x0);
        gbc.writeMem(0xea3a, { 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0xea3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xea3a));
        // 7B 023D
        gbc.setState(0x526f, 0x48a4, 0x7090, 0xb293, 0x3927, 0xfd57, 0x0, 0x0);
        gbc.writeMem(0x526f, { 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x48a4, gbc.sp());
        EXPECT(0x5270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 023E
        gbc.setState(0x2d71, 0x2ac2, 0x25e0, 0x726a, 0x6621, 0x679f, 0x0, 0x1);
        gbc.writeMem(0x2d71, { 0x7b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0x2d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 023F
        gbc.setState(0x274, 0xa3ba, 0x4f20, 0xe817, 0x5b6e, 0xfc3b, 0x0, 0x1);
        gbc.writeMem(0x274, { 0x7b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0240
        gbc.setState(0x20e6, 0x448b, 0x90b0, 0xad1c, 0xc83e, 0x4bf1, 0x1, 0x1);
        gbc.writeMem(0x20e6, { 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0x20e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0241
        gbc.setState(0xb98b, 0xba03, 0x33e0, 0x17f9, 0xf8c0, 0x75c6, 0x1, 0x1);
        gbc.writeMem(0xb98b, { 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xba03, gbc.sp());
        EXPECT(0xb98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb98b));
        // 7B 0242
        gbc.setState(0xc7f9, 0x11a4, 0x8380, 0xc3cd, 0x7e9a, 0x373a, 0x0, 0x0);
        gbc.writeMem(0xc7f9, { 0x7b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x11a4, gbc.sp());
        EXPECT(0xc7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc7f9));
        // 7B 0243
        gbc.setState(0x1551, 0xeac2, 0x9e0, 0x88fb, 0x20fe, 0x343a, 0x1, 0x0);
        gbc.writeMem(0x1551, { 0x7b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0x1552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0244
        gbc.setState(0xcda8, 0x4ccb, 0x910, 0x1493, 0xb855, 0xd517, 0x1, 0x1);
        gbc.writeMem(0xcda8, { 0x7b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0xcda9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcda8));
        // 7B 0245
        gbc.setState(0x95da, 0xb47d, 0x160, 0xf3e1, 0xdfab, 0x42b0, 0x0, 0x0);
        gbc.writeMem(0x95da, { 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb47d, gbc.sp());
        EXPECT(0x95db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x95da));
        // 7B 0246
        gbc.setState(0x6ac1, 0x161f, 0xaf30, 0xbbb6, 0x1880, 0x95b1, 0x1, 0x0);
        gbc.writeMem(0x6ac1, { 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x161f, gbc.sp());
        EXPECT(0x6ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0247
        gbc.setState(0xb5a0, 0xc0e, 0xa240, 0x41a9, 0x209, 0x1c86, 0x1, 0x0);
        gbc.writeMem(0xb5a0, { 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc0e, gbc.sp());
        EXPECT(0xb5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb5a0));
        // 7B 0248
        gbc.setState(0x65e, 0x4b8c, 0x7e90, 0x3a1c, 0x2b16, 0x480d, 0x0, 0x0);
        gbc.writeMem(0x65e, { 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0x65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0249
        gbc.setState(0xbbca, 0x6db9, 0x84d0, 0xf1b8, 0xc027, 0x86bb, 0x1, 0x0);
        gbc.writeMem(0xbbca, { 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6db9, gbc.sp());
        EXPECT(0xbbcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbbca));
        // 7B 024A
        gbc.setState(0x721a, 0x42f3, 0xe790, 0x99ae, 0xf92a, 0xe765, 0x0, 0x1);
        gbc.writeMem(0x721a, { 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x42f3, gbc.sp());
        EXPECT(0x721b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 024B
        gbc.setState(0x543f, 0xf350, 0x4360, 0x5ffa, 0xe748, 0xf4e8, 0x1, 0x0);
        gbc.writeMem(0x543f, { 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf350, gbc.sp());
        EXPECT(0x5440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 024C
        gbc.setState(0x43d6, 0xa4d8, 0x3520, 0xd1e6, 0x6867, 0xe5c7, 0x0, 0x0);
        gbc.writeMem(0x43d6, { 0x7b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa4d8, gbc.sp());
        EXPECT(0x43d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 024D
        gbc.setState(0x52ae, 0x9bbe, 0x8280, 0xdab0, 0x4906, 0xd78, 0x1, 0x1);
        gbc.writeMem(0x52ae, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9bbe, gbc.sp());
        EXPECT(0x52af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 024F
        gbc.setState(0x806, 0xd880, 0x4730, 0x7449, 0x66ae, 0xf38, 0x0, 0x0);
        gbc.writeMem(0x806, { 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd880, gbc.sp());
        EXPECT(0x807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0250
        gbc.setState(0x3d44, 0xea9c, 0x860, 0xf0fd, 0x8f05, 0x9d7c, 0x1, 0x0);
        gbc.writeMem(0x3d44, { 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0251
        gbc.setState(0x615a, 0xe00d, 0xdf00, 0xb051, 0xb2dc, 0x5b8d, 0x1, 0x0);
        gbc.writeMem(0x615a, { 0x7b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0x615b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0252
        gbc.setState(0x6b10, 0x804, 0xa520, 0x763, 0x80f7, 0xf024, 0x1, 0x0);
        gbc.writeMem(0x6b10, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x804, gbc.sp());
        EXPECT(0x6b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0253
        gbc.setState(0xcfa4, 0xc6f5, 0x2400, 0xcf47, 0xd8ab, 0x2683, 0x1, 0x0);
        gbc.writeMem(0xcfa4, { 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc6f5, gbc.sp());
        EXPECT(0xcfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcfa4));
        // 7B 0254
        gbc.setState(0x8ae6, 0xc813, 0x3900, 0xf68a, 0x34ed, 0xb24e, 0x0, 0x1);
        gbc.writeMem(0x8ae6, { 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc813, gbc.sp());
        EXPECT(0x8ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8ae6));
        // 7B 0255
        gbc.setState(0x298a, 0xc1af, 0x9930, 0x3a7f, 0x5cec, 0x8678, 0x0, 0x0);
        gbc.writeMem(0x298a, { 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc1af, gbc.sp());
        EXPECT(0x298b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0256
        gbc.setState(0x527b, 0x228a, 0xf8e0, 0xb51, 0x24d5, 0xa7de, 0x0, 0x1);
        gbc.writeMem(0x527b, { 0x7b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x228a, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0257
        gbc.setState(0x8d93, 0x982a, 0x8390, 0x9377, 0x6400, 0x97d0, 0x1, 0x0);
        gbc.writeMem(0x8d93, { 0x7b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x982a, gbc.sp());
        EXPECT(0x8d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8d93));
        // 7B 0258
        gbc.setState(0xa6df, 0xfa9f, 0x8a40, 0x8434, 0x617c, 0x7930, 0x0, 0x1);
        gbc.writeMem(0xa6df, { 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfa9f, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa6df));
        // 7B 025A
        gbc.setState(0x5d3d, 0x7f97, 0x5b00, 0xdf04, 0x735a, 0x5be4, 0x0, 0x1);
        gbc.writeMem(0x5d3d, { 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f97, gbc.sp());
        EXPECT(0x5d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 025B
        gbc.setState(0x591f, 0xf09b, 0xa880, 0xebb4, 0xc83e, 0x66b0, 0x0, 0x1);
        gbc.writeMem(0x591f, { 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf09b, gbc.sp());
        EXPECT(0x5920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 025C
        gbc.setState(0xdc38, 0x29e6, 0xbd40, 0xc211, 0x3e1, 0x4233, 0x0, 0x0);
        gbc.writeMem(0xdc38, { 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x29e6, gbc.sp());
        EXPECT(0xdc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdc38));
        // 7B 025D
        gbc.setState(0x1a66, 0x4c7c, 0x4b80, 0x3fe5, 0x62f2, 0x8e4c, 0x1, 0x1);
        gbc.writeMem(0x1a66, { 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4c7c, gbc.sp());
        EXPECT(0x1a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 025E
        gbc.setState(0x4ea3, 0xdac3, 0x5580, 0xd8b5, 0x2349, 0x3f8f, 0x0, 0x0);
        gbc.writeMem(0x4ea3, { 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdac3, gbc.sp());
        EXPECT(0x4ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 025F
        gbc.setState(0x9e81, 0x6248, 0x2000, 0xfa4f, 0xdcc3, 0x5095, 0x0, 0x1);
        gbc.writeMem(0x9e81, { 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6248, gbc.sp());
        EXPECT(0x9e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9e81));
        // 7B 0260
        gbc.setState(0xa5a7, 0x85a7, 0x5a90, 0x40ca, 0xfac, 0x8de4, 0x0, 0x1);
        gbc.writeMem(0xa5a7, { 0x7b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x85a7, gbc.sp());
        EXPECT(0xa5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa5a7));
        // 7B 0261
        gbc.setState(0x35ae, 0x5db4, 0xf450, 0x5263, 0x750c, 0xccb7, 0x0, 0x1);
        gbc.writeMem(0x35ae, { 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5db4, gbc.sp());
        EXPECT(0x35af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0262
        gbc.setState(0x4b32, 0x32d, 0x2e90, 0x1580, 0x8e57, 0xe1d5, 0x1, 0x1);
        gbc.writeMem(0x4b32, { 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x32d, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0263
        gbc.setState(0xc95c, 0x4d62, 0x98d0, 0xcf5e, 0xaafb, 0x4c4f, 0x1, 0x1);
        gbc.writeMem(0xc95c, { 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4d62, gbc.sp());
        EXPECT(0xc95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc95c));
        // 7B 0264
        gbc.setState(0x747d, 0x32e6, 0xe410, 0x5fe9, 0xc89a, 0x172, 0x0, 0x1);
        gbc.writeMem(0x747d, { 0x7b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x32e6, gbc.sp());
        EXPECT(0x747e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0265
        gbc.setState(0x81c1, 0x246c, 0x98e0, 0x4a64, 0xf875, 0xea8f, 0x0, 0x0);
        gbc.writeMem(0x81c1, { 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x246c, gbc.sp());
        EXPECT(0x81c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x81c1));
        // 7B 0266
        gbc.setState(0xc1bd, 0x519d, 0x4210, 0x280f, 0x385, 0x8cc2, 0x1, 0x1);
        gbc.writeMem(0xc1bd, { 0x7b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x519d, gbc.sp());
        EXPECT(0xc1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc1bd));
        // 7B 0267
        gbc.setState(0xf8a, 0xd25f, 0xd360, 0x4072, 0x78f7, 0x398f, 0x0, 0x1);
        gbc.writeMem(0xf8a, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd25f, gbc.sp());
        EXPECT(0xf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0268
        gbc.setState(0x8d8a, 0xd03e, 0xbb80, 0x68bd, 0xfe89, 0xc2b6, 0x0, 0x0);
        gbc.writeMem(0x8d8a, { 0x7b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd03e, gbc.sp());
        EXPECT(0x8d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8d8a));
        // 7B 0269
        gbc.setState(0x1cad, 0x4e7d, 0x2680, 0x72df, 0xb1b7, 0xe5fc, 0x0, 0x1);
        gbc.writeMem(0x1cad, { 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4e7d, gbc.sp());
        EXPECT(0x1cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 026A
        gbc.setState(0xb018, 0x76ab, 0x3b80, 0xfebc, 0x7a75, 0x9777, 0x1, 0x0);
        gbc.writeMem(0xb018, { 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x76ab, gbc.sp());
        EXPECT(0xb019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb018));
        // 7B 026B
        gbc.setState(0x78e7, 0x4e65, 0xc2e0, 0x562a, 0xe886, 0x75a, 0x0, 0x1);
        gbc.writeMem(0x78e7, { 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4e65, gbc.sp());
        EXPECT(0x78e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 026D
        gbc.setState(0x831c, 0x6fc3, 0xb820, 0xc008, 0x4f76, 0x48e6, 0x1, 0x0);
        gbc.writeMem(0x831c, { 0x7b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6fc3, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x831c));
        // 7B 026E
        gbc.setState(0xe4fc, 0x3142, 0xef80, 0xaa2d, 0xcdb6, 0x11f8, 0x1, 0x0);
        gbc.writeMem(0xe4fc, { 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0xe4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe4fc));
        // 7B 026F
        gbc.setState(0xc73b, 0xc55a, 0xc810, 0x590e, 0x3d6, 0xc530, 0x0, 0x0);
        gbc.writeMem(0xc73b, { 0x7b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc55a, gbc.sp());
        EXPECT(0xc73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc73b));
        // 7B 0271
        gbc.setState(0x548, 0xe47d, 0x46f0, 0x6565, 0xf32a, 0xc459, 0x0, 0x0);
        gbc.writeMem(0x548, { 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe47d, gbc.sp());
        EXPECT(0x549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0272
        gbc.setState(0x71ef, 0x3dc5, 0xfd50, 0xd95b, 0x4725, 0x72af, 0x0, 0x0);
        gbc.writeMem(0x71ef, { 0x7b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3dc5, gbc.sp());
        EXPECT(0x71f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0273
        gbc.setState(0x7a72, 0x188a, 0x65d0, 0x3ad4, 0x4e04, 0xa062, 0x1, 0x0);
        gbc.writeMem(0x7a72, { 0x7b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x188a, gbc.sp());
        EXPECT(0x7a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0274
        gbc.setState(0x414a, 0x30d0, 0x7f20, 0xcab5, 0x4094, 0x5636, 0x1, 0x0);
        gbc.writeMem(0x414a, { 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x30d0, gbc.sp());
        EXPECT(0x414b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0275
        gbc.setState(0x1094, 0x5058, 0xded0, 0xffde, 0x872c, 0x6ef4, 0x0, 0x0);
        gbc.writeMem(0x1094, { 0x7b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5058, gbc.sp());
        EXPECT(0x1095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0276
        gbc.setState(0x763f, 0x395f, 0x7030, 0x3969, 0x563c, 0xe16e, 0x1, 0x0);
        gbc.writeMem(0x763f, { 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x395f, gbc.sp());
        EXPECT(0x7640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0277
        gbc.setState(0x3dcc, 0xacd3, 0xe280, 0x7332, 0xd865, 0x7465, 0x1, 0x0);
        gbc.writeMem(0x3dcc, { 0x7b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xacd3, gbc.sp());
        EXPECT(0x3dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0279
        gbc.setState(0x295e, 0x131e, 0xa000, 0xd185, 0xb781, 0xae3, 0x1, 0x1);
        gbc.writeMem(0x295e, { 0x7b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x131e, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 027A
        gbc.setState(0x4466, 0xf4f, 0xd810, 0xb96b, 0xc83e, 0xe7b, 0x1, 0x0);
        gbc.writeMem(0x4466, { 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf4f, gbc.sp());
        EXPECT(0x4467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 027C
        gbc.setState(0x6716, 0x6985, 0x8670, 0xd47d, 0xb433, 0xc1af, 0x0, 0x0);
        gbc.writeMem(0x6716, { 0x7b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6985, gbc.sp());
        EXPECT(0x6717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 027D
        gbc.setState(0x3c17, 0x5fda, 0xf450, 0x7e0, 0xfa9, 0xed92, 0x0, 0x0);
        gbc.writeMem(0x3c17, { 0x7b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5fda, gbc.sp());
        EXPECT(0x3c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 027E
        gbc.setState(0x3c13, 0x91f, 0x46b0, 0xb42e, 0x4b2, 0x9065, 0x1, 0x1);
        gbc.writeMem(0x3c13, { 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x91f, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 027F
        gbc.setState(0xaa0b, 0x2c87, 0x18e0, 0xd2f1, 0xd9a, 0x158b, 0x1, 0x0);
        gbc.writeMem(0xaa0b, { 0x7b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2c87, gbc.sp());
        EXPECT(0xaa0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaa0b));
        // 7B 0280
        gbc.setState(0xe497, 0x51d0, 0x2f00, 0x62c1, 0xe9f4, 0xa4e, 0x0, 0x1);
        gbc.writeMem(0xe497, { 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x51d0, gbc.sp());
        EXPECT(0xe498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe497));
        // 7B 0281
        gbc.setState(0xb6eb, 0x8de7, 0x7340, 0xb201, 0x4bc3, 0x8aa8, 0x0, 0x0);
        gbc.writeMem(0xb6eb, { 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8de7, gbc.sp());
        EXPECT(0xb6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb6eb));
        // 7B 0282
        gbc.setState(0x1b10, 0xcd81, 0xb7d0, 0xf6d7, 0x5d5a, 0x2624, 0x0, 0x1);
        gbc.writeMem(0x1b10, { 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcd81, gbc.sp());
        EXPECT(0x1b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0283
        gbc.setState(0x43b6, 0x6e9a, 0x73b0, 0x25bf, 0x63da, 0xd75b, 0x0, 0x0);
        gbc.writeMem(0x43b6, { 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6e9a, gbc.sp());
        EXPECT(0x43b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0284
        gbc.setState(0xb2ce, 0x4a5a, 0x79c0, 0xbbab, 0x5bf7, 0x2263, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4a5a, gbc.sp());
        EXPECT(0xb2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb2ce));
        // 7B 0285
        gbc.setState(0x8a1c, 0xc4ac, 0xa9f0, 0xb11d, 0xfb8e, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0x8a1c, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc4ac, gbc.sp());
        EXPECT(0x8a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8a1c));
        // 7B 0286
        gbc.setState(0x6531, 0xaddc, 0x35f0, 0x6861, 0xac9d, 0x302f, 0x0, 0x1);
        gbc.writeMem(0x6531, { 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaddc, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0287
        gbc.setState(0xbfb8, 0xd4bb, 0xf2f0, 0xf28c, 0x17e, 0x7b90, 0x0, 0x1);
        gbc.writeMem(0xbfb8, { 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd4bb, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbfb8));
        // 7B 0288
        gbc.setState(0x45a7, 0x34c7, 0x23a0, 0x10c5, 0x8eb, 0xaa2f, 0x0, 0x0);
        gbc.writeMem(0x45a7, { 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x34c7, gbc.sp());
        EXPECT(0x45a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0289
        gbc.setState(0xe30f, 0xe05a, 0xdf00, 0x2e6d, 0xca1a, 0xb4a6, 0x1, 0x1);
        gbc.writeMem(0xe30f, { 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0xe310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe30f));
        // 7B 028A
        gbc.setState(0x1591, 0xea61, 0x4820, 0x85ed, 0x105c, 0x1691, 0x1, 0x0);
        gbc.writeMem(0x1591, { 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xea61, gbc.sp());
        EXPECT(0x1592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 028B
        gbc.setState(0x644, 0xd63d, 0xe50, 0xc6ad, 0x55dc, 0x732b, 0x0, 0x0);
        gbc.writeMem(0x644, { 0x7b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd63d, gbc.sp());
        EXPECT(0x645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 028C
        gbc.setState(0xb356, 0x680, 0xcdd0, 0xde3f, 0x9fc, 0xd844, 0x1, 0x0);
        gbc.writeMem(0xb356, { 0x7b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x680, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb356));
        // 7B 028D
        gbc.setState(0xa28e, 0xb6f4, 0x5290, 0x8a93, 0xe0df, 0x828, 0x1, 0x0);
        gbc.writeMem(0xa28e, { 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb6f4, gbc.sp());
        EXPECT(0xa28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa28e));
        // 7B 028E
        gbc.setState(0x983d, 0xa2c9, 0xe700, 0x6ac5, 0x3077, 0x68a2, 0x0, 0x1);
        gbc.writeMem(0x983d, { 0x7b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa2c9, gbc.sp());
        EXPECT(0x983e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x983d));
        // 7B 028F
        gbc.setState(0xab5b, 0x3db8, 0x32d0, 0xc2d3, 0xa20d, 0x6a1f, 0x1, 0x0);
        gbc.writeMem(0xab5b, { 0x7b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3db8, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xab5b));
        // 7B 0290
        gbc.setState(0x6161, 0xa7b7, 0xb590, 0x8c16, 0xc134, 0xd5ee, 0x1, 0x0);
        gbc.writeMem(0x6161, { 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa7b7, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0291
        gbc.setState(0x9191, 0xc3dd, 0x6e70, 0x6a25, 0x7a21, 0xd74d, 0x0, 0x1);
        gbc.writeMem(0x9191, { 0x7b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc3dd, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9191));
        // 7B 0292
        gbc.setState(0x24e9, 0xcb70, 0x2930, 0x741b, 0xa9b0, 0x7de3, 0x1, 0x0);
        gbc.writeMem(0x24e9, { 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcb70, gbc.sp());
        EXPECT(0x24ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0293
        gbc.setState(0x4b1a, 0x21ab, 0xa910, 0x38ab, 0x4f34, 0xf1fe, 0x1, 0x0);
        gbc.writeMem(0x4b1a, { 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x21ab, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0294
        gbc.setState(0x335f, 0x70e5, 0xe780, 0x58b0, 0xca9e, 0xb4a9, 0x0, 0x0);
        gbc.writeMem(0x335f, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x70e5, gbc.sp());
        EXPECT(0x3360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0295
        gbc.setState(0x2ee5, 0x83c8, 0xa070, 0xb4c6, 0xb8b9, 0x2c8b, 0x1, 0x1);
        gbc.writeMem(0x2ee5, { 0x7b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0x2ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0296
        gbc.setState(0x71ab, 0xa15f, 0xa680, 0xf90, 0xcf1e, 0x3760, 0x1, 0x1);
        gbc.writeMem(0x71ab, { 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa15f, gbc.sp());
        EXPECT(0x71ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0297
        gbc.setState(0xaa6f, 0x1f72, 0x2520, 0xe444, 0x9a49, 0xe4cb, 0x0, 0x1);
        gbc.writeMem(0xaa6f, { 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1f72, gbc.sp());
        EXPECT(0xaa70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaa6f));
        // 7B 0298
        gbc.setState(0x831f, 0x4f15, 0x40f0, 0x4d5d, 0x56ab, 0x4531, 0x0, 0x1);
        gbc.writeMem(0x831f, { 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4f15, gbc.sp());
        EXPECT(0x8320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x831f));
        // 7B 0299
        gbc.setState(0x43d8, 0xd1dd, 0x6590, 0xb579, 0x272, 0xecc, 0x0, 0x0);
        gbc.writeMem(0x43d8, { 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd1dd, gbc.sp());
        EXPECT(0x43d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 029A
        gbc.setState(0x6073, 0xebcf, 0x5f60, 0xe81e, 0x11e0, 0x45f2, 0x1, 0x0);
        gbc.writeMem(0x6073, { 0x7b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xebcf, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 029B
        gbc.setState(0xe2b, 0xe221, 0x73a0, 0x2, 0x25ab, 0xdad8, 0x0, 0x1);
        gbc.writeMem(0xe2b, { 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe221, gbc.sp());
        EXPECT(0xe2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 029C
        gbc.setState(0x74e8, 0x843f, 0xad40, 0xa8c9, 0x73f9, 0x3fbe, 0x1, 0x0);
        gbc.writeMem(0x74e8, { 0x7b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x843f, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 029D
        gbc.setState(0xb25e, 0x3abf, 0xdd90, 0x47a1, 0x444d, 0x16ac, 0x0, 0x1);
        gbc.writeMem(0xb25e, { 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb25e));
        // 7B 029E
        gbc.setState(0x2b97, 0x5924, 0xecf0, 0x605a, 0x1abf, 0xeb8d, 0x1, 0x1);
        gbc.writeMem(0x2b97, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5924, gbc.sp());
        EXPECT(0x2b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 029F
        gbc.setState(0xef5f, 0x30f3, 0x59e0, 0x23aa, 0x9a9d, 0x7606, 0x0, 0x0);
        gbc.writeMem(0xef5f, { 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x30f3, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xef5f));
        // 7B 02A2
        gbc.setState(0x3d08, 0xd766, 0xae30, 0x8a0d, 0x27eb, 0xd3f5, 0x1, 0x0);
        gbc.writeMem(0x3d08, { 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd766, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02A3
        gbc.setState(0xcda, 0xab03, 0xa560, 0xda08, 0x9ed1, 0xf1b0, 0x0, 0x0);
        gbc.writeMem(0xcda, { 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xab03, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02A4
        gbc.setState(0x28e, 0xfd21, 0x5910, 0x108b, 0xb473, 0xe22a, 0x1, 0x0);
        gbc.writeMem(0x28e, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfd21, gbc.sp());
        EXPECT(0x28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02A5
        gbc.setState(0xdbb7, 0xd3b, 0xf450, 0x9b29, 0x5a2b, 0xa019, 0x0, 0x1);
        gbc.writeMem(0xdbb7, { 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd3b, gbc.sp());
        EXPECT(0xdbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdbb7));
        // 7B 02A6
        gbc.setState(0x58bf, 0x3fc1, 0x7620, 0xc1f7, 0x9c15, 0x9d3f, 0x0, 0x1);
        gbc.writeMem(0x58bf, { 0x7b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3fc1, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02A7
        gbc.setState(0x3b30, 0x372e, 0xa930, 0x435f, 0x200b, 0x1cf6, 0x0, 0x0);
        gbc.writeMem(0x3b30, { 0x7b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0x3b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02A8
        gbc.setState(0x67a5, 0xed0, 0x9c60, 0x24e0, 0x116, 0x2b67, 0x1, 0x0);
        gbc.writeMem(0x67a5, { 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xed0, gbc.sp());
        EXPECT(0x67a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02A9
        gbc.setState(0xaa7c, 0x74d2, 0x4650, 0xc8b6, 0x94ef, 0x6dd0, 0x0, 0x1);
        gbc.writeMem(0xaa7c, { 0x7b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0xaa7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaa7c));
        // 7B 02AA
        gbc.setState(0x5107, 0xdc9, 0x1a0, 0x1c15, 0xed87, 0x91e9, 0x1, 0x0);
        gbc.writeMem(0x5107, { 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdc9, gbc.sp());
        EXPECT(0x5108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02AB
        gbc.setState(0x12c3, 0x5ef8, 0xfff0, 0x9bb9, 0xc86f, 0x6358, 0x0, 0x0);
        gbc.writeMem(0x12c3, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0x12c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02AC
        gbc.setState(0x9c02, 0x6166, 0x2b00, 0x20ca, 0x8803, 0xc82b, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0x7b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6166, gbc.sp());
        EXPECT(0x9c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9c02));
        // 7B 02AE
        gbc.setState(0x45e7, 0x83b1, 0x2300, 0x2917, 0x94a5, 0x6e11, 0x1, 0x0);
        gbc.writeMem(0x45e7, { 0x7b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0x45e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02AF
        gbc.setState(0x7cb5, 0x228f, 0xf920, 0x3a50, 0x9239, 0x3cec, 0x0, 0x1);
        gbc.writeMem(0x7cb5, { 0x7b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x228f, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02B0
        gbc.setState(0xd910, 0xaaae, 0x3dd0, 0x8909, 0x272c, 0x5c21, 0x0, 0x0);
        gbc.writeMem(0xd910, { 0x7b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaaae, gbc.sp());
        EXPECT(0xd911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd910));
        // 7B 02B1
        gbc.setState(0x9073, 0x9259, 0x7e90, 0xc24, 0x6b07, 0x7fe0, 0x0, 0x1);
        gbc.writeMem(0x9073, { 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0x9074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9073));
        // 7B 02B2
        gbc.setState(0xdcb5, 0x939b, 0x4770, 0x2a6b, 0x9d08, 0xd37, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0xdcb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdcb5));
        // 7B 02B3
        gbc.setState(0x6f2c, 0x4041, 0xe40, 0x9439, 0xaca0, 0x6b38, 0x1, 0x0);
        gbc.writeMem(0x6f2c, { 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4041, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02B6
        gbc.setState(0x9ef9, 0xd69d, 0x3450, 0x4bf7, 0x3fb5, 0x3a55, 0x1, 0x0);
        gbc.writeMem(0x9ef9, { 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9ef9));
        // 7B 02B7
        gbc.setState(0x626d, 0x2bb5, 0xb470, 0x8eb7, 0x6068, 0x9067, 0x0, 0x1);
        gbc.writeMem(0x626d, { 0x7b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2bb5, gbc.sp());
        EXPECT(0x626e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02B8
        gbc.setState(0x906c, 0xaf5b, 0x2b30, 0xfc8a, 0x3eda, 0xf377, 0x0, 0x1);
        gbc.writeMem(0x906c, { 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0x906d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x906c));
        // 7B 02B9
        gbc.setState(0xc355, 0x9f70, 0xb70, 0x6f35, 0xe83, 0x9c7, 0x0, 0x0);
        gbc.writeMem(0xc355, { 0x7b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9f70, gbc.sp());
        EXPECT(0xc356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc355));
        // 7B 02BA
        gbc.setState(0x7f2f, 0x8648, 0xf4f0, 0x5bce, 0x4280, 0x3dfd, 0x1, 0x0);
        gbc.writeMem(0x7f2f, { 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8648, gbc.sp());
        EXPECT(0x7f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02BB
        gbc.setState(0x6337, 0xf2e6, 0x1fc0, 0x12e4, 0x3d0c, 0x150, 0x1, 0x0);
        gbc.writeMem(0x6337, { 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x6338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02BC
        gbc.setState(0x4b02, 0xd7ad, 0xd290, 0xc340, 0x59e7, 0x80dd, 0x0, 0x0);
        gbc.writeMem(0x4b02, { 0x7b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd7ad, gbc.sp());
        EXPECT(0x4b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02BD
        gbc.setState(0xc10a, 0x286b, 0x4ea0, 0x3404, 0x5710, 0x7363, 0x0, 0x0);
        gbc.writeMem(0xc10a, { 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0xc10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc10a));
        // 7B 02BE
        gbc.setState(0x43cc, 0xcd57, 0x5e00, 0xedbe, 0x64ba, 0x2ccf, 0x1, 0x1);
        gbc.writeMem(0x43cc, { 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcd57, gbc.sp());
        EXPECT(0x43cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02BF
        gbc.setState(0xad31, 0x6e6a, 0x6220, 0xe2e6, 0x7657, 0x7b21, 0x0, 0x0);
        gbc.writeMem(0xad31, { 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6e6a, gbc.sp());
        EXPECT(0xad32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xad31));
        // 7B 02C0
        gbc.setState(0x933f, 0x29cf, 0x4b0, 0xd006, 0xce71, 0x1801, 0x0, 0x1);
        gbc.writeMem(0x933f, { 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x29cf, gbc.sp());
        EXPECT(0x9340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x933f));
        // 7B 02C2
        gbc.setState(0xee4b, 0x6b87, 0x3830, 0xad89, 0x91c7, 0x6a8d, 0x0, 0x0);
        gbc.writeMem(0xee4b, { 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6b87, gbc.sp());
        EXPECT(0xee4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xee4b));
        // 7B 02C3
        gbc.setState(0x1b15, 0xa9dd, 0xe050, 0x6bf9, 0x3d3c, 0x13aa, 0x0, 0x0);
        gbc.writeMem(0x1b15, { 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa9dd, gbc.sp());
        EXPECT(0x1b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02C4
        gbc.setState(0x2d66, 0x369, 0x3ae0, 0x9b51, 0xd199, 0x1569, 0x0, 0x1);
        gbc.writeMem(0x2d66, { 0x7b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x369, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02C5
        gbc.setState(0x4dae, 0x47b4, 0xffd0, 0x2447, 0x9f6f, 0x5e85, 0x1, 0x0);
        gbc.writeMem(0x4dae, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0x4daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02C6
        gbc.setState(0x29d0, 0x5d55, 0x8310, 0x703e, 0x17af, 0x38c4, 0x0, 0x0);
        gbc.writeMem(0x29d0, { 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0x29d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02C7
        gbc.setState(0xa0b4, 0xdbb0, 0x4360, 0xbb17, 0x561f, 0xf405, 0x1, 0x1);
        gbc.writeMem(0xa0b4, { 0x7b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdbb0, gbc.sp());
        EXPECT(0xa0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa0b4));
        // 7B 02C8
        gbc.setState(0xb30, 0xb732, 0x9ed0, 0x2d75, 0x654, 0xacae, 0x1, 0x1);
        gbc.writeMem(0xb30, { 0x7b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb732, gbc.sp());
        EXPECT(0xb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02C9
        gbc.setState(0x80cc, 0xe75f, 0x6c0, 0xc1f7, 0xce6e, 0xb712, 0x0, 0x0);
        gbc.writeMem(0x80cc, { 0x7b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe75f, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x80cc));
        // 7B 02CA
        gbc.setState(0x334a, 0x2d31, 0x5800, 0x2bd1, 0xebe8, 0x5235, 0x0, 0x0);
        gbc.writeMem(0x334a, { 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2d31, gbc.sp());
        EXPECT(0x334b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02CB
        gbc.setState(0x8a7, 0x6e74, 0x7140, 0x6595, 0xdefb, 0xe6df, 0x0, 0x1);
        gbc.writeMem(0x8a7, { 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0x8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02CC
        gbc.setState(0x8b11, 0x99fc, 0xfcd0, 0xe452, 0x3a6d, 0x8e8b, 0x1, 0x0);
        gbc.writeMem(0x8b11, { 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x99fc, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8b11));
        // 7B 02CD
        gbc.setState(0x6363, 0xc7ad, 0xc5b0, 0x91c5, 0x8370, 0xaf10, 0x0, 0x0);
        gbc.writeMem(0x6363, { 0x7b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0x6364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02CE
        gbc.setState(0xa051, 0x7725, 0xb420, 0xec5e, 0x30f, 0xb633, 0x1, 0x1);
        gbc.writeMem(0xa051, { 0x7b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7725, gbc.sp());
        EXPECT(0xa052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa051));
        // 7B 02CF
        gbc.setState(0x962a, 0xc254, 0xbcb0, 0xf8aa, 0x44b3, 0xac12, 0x0, 0x0);
        gbc.writeMem(0x962a, { 0x7b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc254, gbc.sp());
        EXPECT(0x962b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x962a));
        // 7B 02D0
        gbc.setState(0x77c4, 0x2428, 0x6b10, 0x3316, 0x39d4, 0xb620, 0x1, 0x0);
        gbc.writeMem(0x77c4, { 0x7b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2428, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02D1
        gbc.setState(0x262c, 0xe35c, 0xecd0, 0x6982, 0x27e6, 0x2eb9, 0x1, 0x1);
        gbc.writeMem(0x262c, { 0x7b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe35c, gbc.sp());
        EXPECT(0x262d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02D2
        gbc.setState(0x903d, 0x164a, 0x3040, 0x28d7, 0xa173, 0x19ad, 0x0, 0x1);
        gbc.writeMem(0x903d, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x164a, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x903d));
        // 7B 02D3
        gbc.setState(0x1fd9, 0x56cf, 0x35b0, 0x1692, 0xdf94, 0x148e, 0x0, 0x1);
        gbc.writeMem(0x1fd9, { 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x56cf, gbc.sp());
        EXPECT(0x1fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02D4
        gbc.setState(0xa700, 0x658d, 0x710, 0x1315, 0xf055, 0x8508, 0x0, 0x1);
        gbc.writeMem(0xa700, { 0x7b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x658d, gbc.sp());
        EXPECT(0xa701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa700));
        // 7B 02D5
        gbc.setState(0x693e, 0xcfb2, 0x94c0, 0xb76c, 0xa7d0, 0x6cab, 0x0, 0x1);
        gbc.writeMem(0x693e, { 0x7b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcfb2, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02D6
        gbc.setState(0x8776, 0x4f8a, 0x9d20, 0x9218, 0x3d8f, 0xcc4d, 0x1, 0x0);
        gbc.writeMem(0x8776, { 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4f8a, gbc.sp());
        EXPECT(0x8777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8776));
        // 7B 02D7
        gbc.setState(0x1c36, 0x4aaa, 0x4560, 0x9e19, 0x5311, 0x852b, 0x1, 0x0);
        gbc.writeMem(0x1c36, { 0x7b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0x1c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02D8
        gbc.setState(0x26db, 0x8a77, 0x210, 0x4b0f, 0x41b4, 0xd1dd, 0x0, 0x0);
        gbc.writeMem(0x26db, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8a77, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02D9
        gbc.setState(0x5776, 0x7d45, 0x56f0, 0x4b5b, 0x65a3, 0xb63a, 0x1, 0x0);
        gbc.writeMem(0x5776, { 0x7b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7d45, gbc.sp());
        EXPECT(0x5777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02DA
        gbc.setState(0xe9cd, 0x1c8, 0x7f10, 0x8423, 0x8319, 0xcca4, 0x0, 0x0);
        gbc.writeMem(0xe9cd, { 0x7b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1c8, gbc.sp());
        EXPECT(0xe9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe9cd));
        // 7B 02DB
        gbc.setState(0xb043, 0x1eff, 0x4ee0, 0xce35, 0x3963, 0x3821, 0x1, 0x1);
        gbc.writeMem(0xb043, { 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1eff, gbc.sp());
        EXPECT(0xb044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb043));
        // 7B 02DD
        gbc.setState(0x122d, 0x342b, 0xe040, 0x23db, 0x52e8, 0xb1d4, 0x0, 0x1);
        gbc.writeMem(0x122d, { 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x342b, gbc.sp());
        EXPECT(0x122e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02DF
        gbc.setState(0x396a, 0x557, 0x4290, 0xbd19, 0x669e, 0x5888, 0x0, 0x1);
        gbc.writeMem(0x396a, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x557, gbc.sp());
        EXPECT(0x396b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02E0
        gbc.setState(0x72cd, 0xf78d, 0x2a30, 0x881, 0x5e7, 0x2d9e, 0x1, 0x0);
        gbc.writeMem(0x72cd, { 0x7b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf78d, gbc.sp());
        EXPECT(0x72ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02E1
        gbc.setState(0x4a8c, 0xb123, 0x92f0, 0x8f26, 0x1f4d, 0x3834, 0x1, 0x0);
        gbc.writeMem(0x4a8c, { 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02E2
        gbc.setState(0xa208, 0x5310, 0x7c50, 0x7b49, 0xdaf, 0x277f, 0x1, 0x0);
        gbc.writeMem(0xa208, { 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5310, gbc.sp());
        EXPECT(0xa209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa208));
        // 7B 02E3
        gbc.setState(0xca5d, 0x82d5, 0x6b20, 0xba64, 0x2223, 0xc9d4, 0x1, 0x1);
        gbc.writeMem(0xca5d, { 0x7b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0xca5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xca5d));
        // 7B 02E4
        gbc.setState(0x222c, 0x6d58, 0x4050, 0x5563, 0xbe58, 0x394d, 0x1, 0x1);
        gbc.writeMem(0x222c, { 0x7b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6d58, gbc.sp());
        EXPECT(0x222d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02E5
        gbc.setState(0x3dbd, 0xb2ca, 0xa6e0, 0x6fee, 0x2a8e, 0x32dd, 0x0, 0x0);
        gbc.writeMem(0x3dbd, { 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb2ca, gbc.sp());
        EXPECT(0x3dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02E6
        gbc.setState(0x2c2b, 0x5447, 0xa490, 0xa9c7, 0x6d3b, 0x33db, 0x1, 0x1);
        gbc.writeMem(0x2c2b, { 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5447, gbc.sp());
        EXPECT(0x2c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02E8
        gbc.setState(0x84fb, 0x5fa4, 0x50b0, 0xe01, 0x3395, 0x9497, 0x0, 0x1);
        gbc.writeMem(0x84fb, { 0x7b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5fa4, gbc.sp());
        EXPECT(0x84fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x84fb));
        // 7B 02E9
        gbc.setState(0x2d24, 0xe642, 0xc940, 0xbd09, 0x14c7, 0x74fd, 0x0, 0x1);
        gbc.writeMem(0x2d24, { 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe642, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02EA
        gbc.setState(0x21fb, 0x50e7, 0xcfe0, 0xa96b, 0xccc9, 0xa1ff, 0x1, 0x0);
        gbc.writeMem(0x21fb, { 0x7b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x50e7, gbc.sp());
        EXPECT(0x21fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02EB
        gbc.setState(0x1791, 0xc3c2, 0xa9b0, 0x8ff3, 0xb7e0, 0xfe96, 0x1, 0x0);
        gbc.writeMem(0x1791, { 0x7b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc3c2, gbc.sp());
        EXPECT(0x1792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02EC
        gbc.setState(0xb90d, 0xbe74, 0x3f40, 0xaeec, 0x5fc8, 0x685d, 0x1, 0x1);
        gbc.writeMem(0xb90d, { 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbe74, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb90d));
        // 7B 02ED
        gbc.setState(0xe0b0, 0x57b5, 0x1390, 0x7545, 0xdcb7, 0xa241, 0x1, 0x0);
        gbc.writeMem(0xe0b0, { 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe0b0));
        // 7B 02EE
        gbc.setState(0x6b65, 0x23ac, 0x2a70, 0x75f4, 0xae53, 0xf95b, 0x0, 0x1);
        gbc.writeMem(0x6b65, { 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0x6b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02EF
        gbc.setState(0xdac4, 0x3bb8, 0x6f20, 0x2d04, 0xbb16, 0x50f3, 0x0, 0x0);
        gbc.writeMem(0xdac4, { 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3bb8, gbc.sp());
        EXPECT(0xdac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdac4));
        // 7B 02F0
        gbc.setState(0x4f3b, 0xb678, 0xbab0, 0xdd8e, 0x8629, 0x5f2, 0x0, 0x0);
        gbc.writeMem(0x4f3b, { 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb678, gbc.sp());
        EXPECT(0x4f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02F1
        gbc.setState(0xad6d, 0xee5a, 0x7010, 0x47e4, 0x8530, 0xd85, 0x0, 0x0);
        gbc.writeMem(0xad6d, { 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xee5a, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xad6d));
        // 7B 02F2
        gbc.setState(0x5f54, 0x9758, 0xa400, 0xaaab, 0x82d0, 0x2ccb, 0x1, 0x1);
        gbc.writeMem(0x5f54, { 0x7b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9758, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02F3
        gbc.setState(0xa8d, 0x1137, 0x9b70, 0x42a6, 0x3c2d, 0xa6a8, 0x0, 0x1);
        gbc.writeMem(0xa8d, { 0x7b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1137, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02F4
        gbc.setState(0xcb1c, 0x76be, 0x3600, 0x9b2c, 0x18ff, 0x7c7b, 0x0, 0x1);
        gbc.writeMem(0xcb1c, { 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x76be, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcb1c));
        // 7B 02F5
        gbc.setState(0xc668, 0x3940, 0xd240, 0x98e5, 0xc8b1, 0x573f, 0x1, 0x1);
        gbc.writeMem(0xc668, { 0x7b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3940, gbc.sp());
        EXPECT(0xc669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc668));
        // 7B 02F6
        gbc.setState(0x42ad, 0xa599, 0x7c20, 0x5cb8, 0x2bca, 0xb42b, 0x1, 0x1);
        gbc.writeMem(0x42ad, { 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa599, gbc.sp());
        EXPECT(0x42ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 02F7
        gbc.setState(0xb1da, 0x4185, 0x9870, 0x36d1, 0x4c94, 0x590e, 0x1, 0x0);
        gbc.writeMem(0xb1da, { 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4185, gbc.sp());
        EXPECT(0xb1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb1da));
        // 7B 02F8
        gbc.setState(0xea54, 0x993a, 0xf690, 0xd8cb, 0x1c84, 0xd46f, 0x0, 0x0);
        gbc.writeMem(0xea54, { 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x993a, gbc.sp());
        EXPECT(0xea55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xea54));
        // 7B 02F9
        gbc.setState(0xc434, 0x1c5b, 0x75f0, 0x88b, 0x9d9c, 0x470c, 0x0, 0x0);
        gbc.writeMem(0xc434, { 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1c5b, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc434));
        // 7B 02FA
        gbc.setState(0x3eed, 0x872a, 0xda70, 0xa91a, 0x4922, 0x388a, 0x1, 0x1);
        gbc.writeMem(0x3eed, { 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x872a, gbc.sp());
        EXPECT(0x3eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02FB
        gbc.setState(0x4a4, 0x5736, 0x6350, 0xe7a4, 0xb642, 0x48b0, 0x0, 0x1);
        gbc.writeMem(0x4a4, { 0x7b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5736, gbc.sp());
        EXPECT(0x4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02FC
        gbc.setState(0x3fff, 0x6915, 0x2710, 0x3470, 0x36ba, 0x4bed, 0x0, 0x1);
        gbc.writeMem(0x3fff, { 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6915, gbc.sp());
        EXPECT(0x4000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02FD
        gbc.setState(0x8b7, 0xa2d0, 0x5490, 0x1670, 0xa11a, 0xc967, 0x0, 0x0);
        gbc.writeMem(0x8b7, { 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa2d0, gbc.sp());
        EXPECT(0x8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 02FF
        gbc.setState(0x2d41, 0x789e, 0xddc0, 0x285f, 0x433c, 0xb21d, 0x0, 0x0);
        gbc.writeMem(0x2d41, { 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x789e, gbc.sp());
        EXPECT(0x2d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0300
        gbc.setState(0xdfc6, 0x8f9e, 0xf910, 0x4883, 0xa, 0x8658, 0x1, 0x1);
        gbc.writeMem(0xdfc6, { 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8f9e, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdfc6));
        // 7B 0301
        gbc.setState(0xa52a, 0x3ea2, 0x6e90, 0x5524, 0x8052, 0xea34, 0x0, 0x1);
        gbc.writeMem(0xa52a, { 0x7b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3ea2, gbc.sp());
        EXPECT(0xa52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa52a));
        // 7B 0302
        gbc.setState(0x2d81, 0x60bd, 0xd2b0, 0x92e7, 0xc5d6, 0x16ba, 0x1, 0x0);
        gbc.writeMem(0x2d81, { 0x7b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x60bd, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0303
        gbc.setState(0xb2c, 0xdd2f, 0x6b40, 0x3d5a, 0xeb97, 0xd0d9, 0x1, 0x0);
        gbc.writeMem(0xb2c, { 0x7b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdd2f, gbc.sp());
        EXPECT(0xb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0304
        gbc.setState(0x9c77, 0x4b78, 0x6340, 0xa950, 0x3c98, 0x4579, 0x0, 0x1);
        gbc.writeMem(0x9c77, { 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4b78, gbc.sp());
        EXPECT(0x9c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9c77));
        // 7B 0305
        gbc.setState(0xe48b, 0xafa6, 0xd30, 0x2d47, 0xd732, 0xe43e, 0x1, 0x0);
        gbc.writeMem(0xe48b, { 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xafa6, gbc.sp());
        EXPECT(0xe48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe48b));
        // 7B 0306
        gbc.setState(0x138a, 0xdc87, 0x4680, 0x80a9, 0x3c33, 0x7749, 0x0, 0x1);
        gbc.writeMem(0x138a, { 0x7b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdc87, gbc.sp());
        EXPECT(0x138b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0307
        gbc.setState(0xaa96, 0x65cd, 0x18c0, 0x16df, 0x6a5e, 0x10ad, 0x0, 0x1);
        gbc.writeMem(0xaa96, { 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x65cd, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaa96));
        // 7B 0308
        gbc.setState(0x968e, 0xf486, 0x8550, 0x6972, 0x619d, 0xa68, 0x0, 0x0);
        gbc.writeMem(0x968e, { 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf486, gbc.sp());
        EXPECT(0x968f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x968e));
        // 7B 0309
        gbc.setState(0x2209, 0x710b, 0x8110, 0x7f5, 0x62e2, 0xcd28, 0x0, 0x0);
        gbc.writeMem(0x2209, { 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x710b, gbc.sp());
        EXPECT(0x220a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 030A
        gbc.setState(0xcf10, 0xb6a6, 0xa400, 0x13d, 0x4426, 0xdff3, 0x0, 0x1);
        gbc.writeMem(0xcf10, { 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb6a6, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcf10));
        // 7B 030B
        gbc.setState(0x869a, 0x52ad, 0xf400, 0xd9cb, 0xa93e, 0x4964, 0x0, 0x1);
        gbc.writeMem(0x869a, { 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x52ad, gbc.sp());
        EXPECT(0x869b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x869a));
        // 7B 030C
        gbc.setState(0x2e8a, 0xefa4, 0x3b40, 0xc232, 0x785b, 0x5a8c, 0x0, 0x0);
        gbc.writeMem(0x2e8a, { 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0x2e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 030D
        gbc.setState(0x44f9, 0x98e5, 0xa790, 0xdb09, 0x18c, 0x516c, 0x1, 0x0);
        gbc.writeMem(0x44f9, { 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x98e5, gbc.sp());
        EXPECT(0x44fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 030E
        gbc.setState(0x4a22, 0x5bf8, 0xf700, 0xcdc2, 0x4f44, 0xd7e7, 0x1, 0x1);
        gbc.writeMem(0x4a22, { 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5bf8, gbc.sp());
        EXPECT(0x4a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 030F
        gbc.setState(0xe590, 0xa334, 0x420, 0xdde5, 0xbef6, 0xebd5, 0x0, 0x1);
        gbc.writeMem(0xe590, { 0x7b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa334, gbc.sp());
        EXPECT(0xe591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe590));
        // 7B 0311
        gbc.setState(0x21d3, 0x39ef, 0x9e0, 0xbe6b, 0xc11e, 0xf03c, 0x1, 0x1);
        gbc.writeMem(0x21d3, { 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x39ef, gbc.sp());
        EXPECT(0x21d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0312
        gbc.setState(0xb7b7, 0xc98, 0x2590, 0x2d1d, 0xe77c, 0xafc3, 0x0, 0x1);
        gbc.writeMem(0xb7b7, { 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc98, gbc.sp());
        EXPECT(0xb7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb7b7));
        // 7B 0313
        gbc.setState(0xe41, 0x9ecd, 0xd710, 0x5aad, 0x833e, 0x346d, 0x0, 0x1);
        gbc.writeMem(0xe41, { 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9ecd, gbc.sp());
        EXPECT(0xe42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0314
        gbc.setState(0x2cf0, 0x41e0, 0xa920, 0xe595, 0xae32, 0x7b30, 0x0, 0x0);
        gbc.writeMem(0x2cf0, { 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x41e0, gbc.sp());
        EXPECT(0x2cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0315
        gbc.setState(0xaf44, 0x6830, 0xe440, 0x21e0, 0x40be, 0x8e77, 0x0, 0x0);
        gbc.writeMem(0xaf44, { 0x7b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6830, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaf44));
        // 7B 0316
        gbc.setState(0x1ad8, 0x8c2f, 0x2d80, 0xe574, 0x59ce, 0xe092, 0x0, 0x0);
        gbc.writeMem(0x1ad8, { 0x7b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8c2f, gbc.sp());
        EXPECT(0x1ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0317
        gbc.setState(0xa54a, 0x858, 0xd210, 0xa08f, 0x4832, 0xb738, 0x1, 0x1);
        gbc.writeMem(0xa54a, { 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0xa54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa54a));
        // 7B 0318
        gbc.setState(0x612d, 0x1db8, 0xa2f0, 0xd122, 0xfe79, 0x6fb3, 0x1, 0x0);
        gbc.writeMem(0x612d, { 0x7b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1db8, gbc.sp());
        EXPECT(0x612e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0319
        gbc.setState(0xa3b3, 0x59a1, 0xbab0, 0xe1df, 0xd20c, 0xfebb, 0x0, 0x0);
        gbc.writeMem(0xa3b3, { 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa3b3));
        // 7B 031A
        gbc.setState(0xb10b, 0x13aa, 0x92c0, 0x42ac, 0xe17a, 0xfbea, 0x0, 0x0);
        gbc.writeMem(0xb10b, { 0x7b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x13aa, gbc.sp());
        EXPECT(0xb10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb10b));
        // 7B 031B
        gbc.setState(0x4d72, 0xc3f, 0xbef0, 0xb260, 0x4d24, 0x2fb8, 0x0, 0x0);
        gbc.writeMem(0x4d72, { 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc3f, gbc.sp());
        EXPECT(0x4d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 031C
        gbc.setState(0x6004, 0xf465, 0xbd0, 0xfb14, 0x7019, 0x50f9, 0x0, 0x0);
        gbc.writeMem(0x6004, { 0x7b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 031D
        gbc.setState(0x649a, 0xd733, 0x6f20, 0xfe76, 0x1ac2, 0x8d52, 0x1, 0x1);
        gbc.writeMem(0x649a, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd733, gbc.sp());
        EXPECT(0x649b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 031E
        gbc.setState(0x48dd, 0x4c27, 0xf450, 0x238c, 0x7aeb, 0x5e0, 0x1, 0x1);
        gbc.writeMem(0x48dd, { 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4c27, gbc.sp());
        EXPECT(0x48de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 031F
        gbc.setState(0x475d, 0xa4b0, 0xccc0, 0x3e93, 0xe8b4, 0xcbe5, 0x0, 0x1);
        gbc.writeMem(0x475d, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa4b0, gbc.sp());
        EXPECT(0x475e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0320
        gbc.setState(0xea0b, 0xe101, 0x3960, 0xedcd, 0x36f3, 0x1482, 0x1, 0x1);
        gbc.writeMem(0xea0b, { 0x7b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe101, gbc.sp());
        EXPECT(0xea0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xea0b));
        // 7B 0321
        gbc.setState(0x9128, 0x205e, 0xbf10, 0x5fc2, 0x5b48, 0x87f3, 0x1, 0x0);
        gbc.writeMem(0x9128, { 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x205e, gbc.sp());
        EXPECT(0x9129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9128));
        // 7B 0322
        gbc.setState(0xa5cc, 0x1f33, 0xff70, 0xbda6, 0xbe, 0xac6b, 0x1, 0x0);
        gbc.writeMem(0xa5cc, { 0x7b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1f33, gbc.sp());
        EXPECT(0xa5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa5cc));
        // 7B 0323
        gbc.setState(0x260f, 0xf2b2, 0x1b00, 0xac33, 0x3711, 0x5faf, 0x1, 0x1);
        gbc.writeMem(0x260f, { 0x7b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf2b2, gbc.sp());
        EXPECT(0x2610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0324
        gbc.setState(0x578, 0xc2ac, 0x1880, 0xf929, 0x3103, 0x927c, 0x0, 0x1);
        gbc.writeMem(0x578, { 0x7b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0325
        gbc.setState(0xae99, 0x734f, 0x93a0, 0x1ac1, 0xfa9d, 0x82c5, 0x0, 0x0);
        gbc.writeMem(0xae99, { 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x734f, gbc.sp());
        EXPECT(0xae9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xae99));
        // 7B 0326
        gbc.setState(0x9468, 0xde1c, 0xcb70, 0xbaf, 0x8c79, 0x273f, 0x1, 0x1);
        gbc.writeMem(0x9468, { 0x7b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xde1c, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9468));
        // 7B 0327
        gbc.setState(0xd62a, 0x3118, 0xa740, 0xc43e, 0x9507, 0x97f9, 0x1, 0x0);
        gbc.writeMem(0xd62a, { 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3118, gbc.sp());
        EXPECT(0xd62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd62a));
        // 7B 0328
        gbc.setState(0x2d79, 0x3404, 0x99d0, 0x7e5b, 0x7843, 0xf409, 0x0, 0x0);
        gbc.writeMem(0x2d79, { 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3404, gbc.sp());
        EXPECT(0x2d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0329
        gbc.setState(0x45a8, 0x966a, 0xf50, 0x6e8, 0xc9b5, 0xbf21, 0x0, 0x1);
        gbc.writeMem(0x45a8, { 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x966a, gbc.sp());
        EXPECT(0x45a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 032A
        gbc.setState(0xcda7, 0x3216, 0xb230, 0x201c, 0x9d70, 0xf2d, 0x0, 0x1);
        gbc.writeMem(0xcda7, { 0x7b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3216, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcda7));
        // 7B 032B
        gbc.setState(0xb7fe, 0xd223, 0xe6d0, 0xde99, 0x3671, 0xa2d5, 0x1, 0x1);
        gbc.writeMem(0xb7fe, { 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd223, gbc.sp());
        EXPECT(0xb7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb7fe));
        // 7B 032C
        gbc.setState(0xa29d, 0x4f92, 0xa150, 0x4da0, 0xe0f7, 0x65d7, 0x1, 0x0);
        gbc.writeMem(0xa29d, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4f92, gbc.sp());
        EXPECT(0xa29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa29d));
        // 7B 032D
        gbc.setState(0x172b, 0xd2f9, 0xf090, 0xf369, 0x9615, 0x5a7a, 0x1, 0x0);
        gbc.writeMem(0x172b, { 0x7b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0x172c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 032E
        gbc.setState(0x6bd2, 0xc14b, 0x1470, 0x533a, 0xdd47, 0xf1c1, 0x0, 0x1);
        gbc.writeMem(0x6bd2, { 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc14b, gbc.sp());
        EXPECT(0x6bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 032F
        gbc.setState(0x5a72, 0x5b66, 0xd160, 0x7393, 0x8f91, 0x4d38, 0x1, 0x1);
        gbc.writeMem(0x5a72, { 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0x5a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0330
        gbc.setState(0x7081, 0x9100, 0x7a90, 0xd089, 0xfc49, 0xaa41, 0x1, 0x1);
        gbc.writeMem(0x7081, { 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9100, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0331
        gbc.setState(0xab00, 0x8e3e, 0x3d10, 0xb454, 0xb149, 0xb89c, 0x0, 0x1);
        gbc.writeMem(0xab00, { 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8e3e, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xab00));
        // 7B 0332
        gbc.setState(0x9f90, 0x5993, 0x41e0, 0x9e47, 0x798, 0x6731, 0x1, 0x0);
        gbc.writeMem(0x9f90, { 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5993, gbc.sp());
        EXPECT(0x9f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9f90));
        // 7B 0333
        gbc.setState(0x3136, 0xa4b1, 0xbd30, 0xa671, 0x9aa9, 0x71f1, 0x0, 0x0);
        gbc.writeMem(0x3136, { 0x7b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa4b1, gbc.sp());
        EXPECT(0x3137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0334
        gbc.setState(0xccde, 0x593e, 0x3030, 0x56ca, 0x4ef9, 0xefd5, 0x0, 0x1);
        gbc.writeMem(0xccde, { 0x7b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x593e, gbc.sp());
        EXPECT(0xccdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xccde));
        // 7B 0335
        gbc.setState(0xca5f, 0xa89b, 0xf740, 0xeda, 0xcbca, 0x5e15, 0x1, 0x0);
        gbc.writeMem(0xca5f, { 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa89b, gbc.sp());
        EXPECT(0xca60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xca5f));
        // 7B 0336
        gbc.setState(0x7f2, 0x44b9, 0x6b30, 0x21f2, 0x7add, 0xeaf4, 0x0, 0x0);
        gbc.writeMem(0x7f2, { 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x44b9, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0337
        gbc.setState(0x61c8, 0xd22e, 0x11a0, 0x50ea, 0x2d6c, 0xe587, 0x1, 0x1);
        gbc.writeMem(0x61c8, { 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd22e, gbc.sp());
        EXPECT(0x61c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0338
        gbc.setState(0xb18b, 0x67a9, 0x8e00, 0x741c, 0x5cc, 0xdd0e, 0x1, 0x1);
        gbc.writeMem(0xb18b, { 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x67a9, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb18b));
        // 7B 0339
        gbc.setState(0x2990, 0xd7ba, 0x93a0, 0x8a15, 0x9195, 0x316d, 0x1, 0x1);
        gbc.writeMem(0x2990, { 0x7b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd7ba, gbc.sp());
        EXPECT(0x2991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 033A
        gbc.setState(0x5000, 0x2ca9, 0xc4b0, 0xb7db, 0x1ffe, 0x5441, 0x1, 0x1);
        gbc.writeMem(0x5000, { 0x7b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2ca9, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 033B
        gbc.setState(0xdd15, 0x3101, 0x6e30, 0xca38, 0xbf5a, 0xdf36, 0x1, 0x1);
        gbc.writeMem(0xdd15, { 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3101, gbc.sp());
        EXPECT(0xdd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdd15));
        // 7B 033C
        gbc.setState(0x53fb, 0x3490, 0x5d30, 0x57fd, 0x225a, 0x4f6e, 0x0, 0x1);
        gbc.writeMem(0x53fb, { 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3490, gbc.sp());
        EXPECT(0x53fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 033D
        gbc.setState(0xd110, 0x8ca0, 0xadf0, 0x54c, 0xd675, 0x290d, 0x0, 0x1);
        gbc.writeMem(0xd110, { 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8ca0, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd110));
        // 7B 033F
        gbc.setState(0x6685, 0x52c1, 0xfc40, 0x9c89, 0x7371, 0xc10e, 0x0, 0x1);
        gbc.writeMem(0x6685, { 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x52c1, gbc.sp());
        EXPECT(0x6686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0340
        gbc.setState(0x93c, 0xf711, 0xea90, 0x1ba, 0xeb63, 0x33ee, 0x0, 0x1);
        gbc.writeMem(0x93c, { 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf711, gbc.sp());
        EXPECT(0x93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0341
        gbc.setState(0x950d, 0x87e9, 0x6cb0, 0xae0d, 0x3d27, 0xec1a, 0x1, 0x0);
        gbc.writeMem(0x950d, { 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x87e9, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x950d));
        // 7B 0342
        gbc.setState(0xe550, 0x3324, 0x3e10, 0x786a, 0x2494, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0xe550, { 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3324, gbc.sp());
        EXPECT(0xe551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe550));
        // 7B 0343
        gbc.setState(0x336a, 0x1ad3, 0x2120, 0x6a93, 0x65d5, 0x427f, 0x0, 0x0);
        gbc.writeMem(0x336a, { 0x7b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1ad3, gbc.sp());
        EXPECT(0x336b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0344
        gbc.setState(0xd924, 0x221a, 0x58b0, 0x2df2, 0x4d76, 0xd4c9, 0x0, 0x0);
        gbc.writeMem(0xd924, { 0x7b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x221a, gbc.sp());
        EXPECT(0xd925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd924));
        // 7B 0345
        gbc.setState(0x78be, 0xedc8, 0x6720, 0xc0d9, 0x1216, 0x3950, 0x0, 0x1);
        gbc.writeMem(0x78be, { 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xedc8, gbc.sp());
        EXPECT(0x78bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0346
        gbc.setState(0x2581, 0xe8ba, 0x90f0, 0xb609, 0x6413, 0xc788, 0x1, 0x1);
        gbc.writeMem(0x2581, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe8ba, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0347
        gbc.setState(0x76bb, 0xae37, 0xc060, 0xf6b, 0x9674, 0xb9d, 0x0, 0x1);
        gbc.writeMem(0x76bb, { 0x7b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xae37, gbc.sp());
        EXPECT(0x76bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0348
        gbc.setState(0x30b, 0xa329, 0x4470, 0x4420, 0xfc17, 0x67d3, 0x0, 0x1);
        gbc.writeMem(0x30b, { 0x7b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa329, gbc.sp());
        EXPECT(0x30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 034A
        gbc.setState(0x6a14, 0x1eb0, 0xd70, 0x937d, 0x5094, 0x8f30, 0x1, 0x0);
        gbc.writeMem(0x6a14, { 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1eb0, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 034B
        gbc.setState(0xaa72, 0xae41, 0xf150, 0x9309, 0x47dc, 0x5665, 0x0, 0x1);
        gbc.writeMem(0xaa72, { 0x7b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xae41, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaa72));
        // 7B 034C
        gbc.setState(0x1c, 0x4924, 0xfaa0, 0xed3, 0x610f, 0xab57, 0x0, 0x1);
        gbc.writeMem(0x1c, { 0x7b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4924, gbc.sp());
        EXPECT(0x1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 034D
        gbc.setState(0x6c14, 0xd9da, 0x8c10, 0xdf4, 0xfb1d, 0x35c4, 0x1, 0x0);
        gbc.writeMem(0x6c14, { 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0x6c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 034E
        gbc.setState(0x5a17, 0x66b3, 0xa90, 0xb1a5, 0xd231, 0xd42e, 0x1, 0x0);
        gbc.writeMem(0x5a17, { 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x66b3, gbc.sp());
        EXPECT(0x5a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 034F
        gbc.setState(0xe9ee, 0xf172, 0x12a0, 0x9ce7, 0xb1dd, 0x80f2, 0x0, 0x1);
        gbc.writeMem(0xe9ee, { 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe9ee));
        // 7B 0350
        gbc.setState(0xa83a, 0xa7ba, 0x9940, 0x7518, 0xc0ae, 0x9d72, 0x0, 0x0);
        gbc.writeMem(0xa83a, { 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa7ba, gbc.sp());
        EXPECT(0xa83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa83a));
        // 7B 0351
        gbc.setState(0xa65, 0x633, 0xbd80, 0x1f39, 0x3569, 0x5467, 0x0, 0x0);
        gbc.writeMem(0xa65, { 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x633, gbc.sp());
        EXPECT(0xa66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0352
        gbc.setState(0xcc57, 0xd9ce, 0x5620, 0x4012, 0xddbc, 0x4bb0, 0x1, 0x0);
        gbc.writeMem(0xcc57, { 0x7b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd9ce, gbc.sp());
        EXPECT(0xcc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcc57));
        // 7B 0353
        gbc.setState(0x7a6c, 0xfb38, 0x3780, 0xb3ca, 0xa889, 0x60c8, 0x1, 0x0);
        gbc.writeMem(0x7a6c, { 0x7b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0x7a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0354
        gbc.setState(0x4fd1, 0xc8b5, 0x1c50, 0x7099, 0x712, 0xb379, 0x1, 0x0);
        gbc.writeMem(0x4fd1, { 0x7b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x4fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0355
        gbc.setState(0x6f7, 0x8d6b, 0x3160, 0x653b, 0xc0d3, 0xdc59, 0x1, 0x0);
        gbc.writeMem(0x6f7, { 0x7b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8d6b, gbc.sp());
        EXPECT(0x6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0357
        gbc.setState(0x4233, 0x1b64, 0x3d80, 0x13ff, 0xf940, 0xb9f, 0x0, 0x0);
        gbc.writeMem(0x4233, { 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1b64, gbc.sp());
        EXPECT(0x4234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0358
        gbc.setState(0x57f9, 0xcca3, 0x6570, 0x8856, 0x3e5f, 0x5acd, 0x1, 0x1);
        gbc.writeMem(0x57f9, { 0x7b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcca3, gbc.sp());
        EXPECT(0x57fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0359
        gbc.setState(0x21ef, 0x200b, 0x45f0, 0x57b5, 0xb844, 0x6ba, 0x0, 0x0);
        gbc.writeMem(0x21ef, { 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x200b, gbc.sp());
        EXPECT(0x21f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 035A
        gbc.setState(0xbcd, 0x9358, 0x9920, 0xe99c, 0x33ed, 0x42a0, 0x0, 0x0);
        gbc.writeMem(0xbcd, { 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9358, gbc.sp());
        EXPECT(0xbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 035B
        gbc.setState(0x3b9d, 0xbb9d, 0x4c70, 0xd962, 0x8ddd, 0x5e3f, 0x1, 0x1);
        gbc.writeMem(0x3b9d, { 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbb9d, gbc.sp());
        EXPECT(0x3b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 035C
        gbc.setState(0xce01, 0x5271, 0xab70, 0x2f76, 0x77a6, 0x6a00, 0x1, 0x1);
        gbc.writeMem(0xce01, { 0x7b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5271, gbc.sp());
        EXPECT(0xce02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xce01));
        // 7B 035D
        gbc.setState(0x683d, 0xa6c7, 0xbf70, 0x56a4, 0x4610, 0xca63, 0x1, 0x1);
        gbc.writeMem(0x683d, { 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x683e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 035E
        gbc.setState(0xad16, 0x33c5, 0x1130, 0x233b, 0x8b06, 0xb9c9, 0x1, 0x1);
        gbc.writeMem(0xad16, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x33c5, gbc.sp());
        EXPECT(0xad17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xad16));
        // 7B 035F
        gbc.setState(0xa839, 0x8b10, 0xd2c0, 0xbca5, 0xb831, 0x9e66, 0x1, 0x0);
        gbc.writeMem(0xa839, { 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8b10, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa839));
        // 7B 0360
        gbc.setState(0xe83e, 0xb841, 0x6280, 0xad79, 0x53b5, 0x9714, 0x0, 0x1);
        gbc.writeMem(0xe83e, { 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb841, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe83e));
        // 7B 0361
        gbc.setState(0x8226, 0x89c2, 0x38d0, 0x8ba5, 0x8ac1, 0xfabe, 0x1, 0x1);
        gbc.writeMem(0x8226, { 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x89c2, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8226));
        // 7B 0362
        gbc.setState(0x99b5, 0x99a0, 0x6ed0, 0xce46, 0x3062, 0x9def, 0x1, 0x0);
        gbc.writeMem(0x99b5, { 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x99a0, gbc.sp());
        EXPECT(0x99b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x99b5));
        // 7B 0363
        gbc.setState(0xa5b1, 0x6e92, 0xb810, 0xfc11, 0x4404, 0x1a8f, 0x1, 0x0);
        gbc.writeMem(0xa5b1, { 0x7b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e92, gbc.sp());
        EXPECT(0xa5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa5b1));
        // 7B 0364
        gbc.setState(0x87a2, 0x3cea, 0x28b0, 0x2254, 0x2045, 0x5214, 0x1, 0x1);
        gbc.writeMem(0x87a2, { 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3cea, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x87a2));
        // 7B 0365
        gbc.setState(0x590, 0xc9b7, 0xf6a0, 0xb105, 0x4ffb, 0x8f3f, 0x1, 0x1);
        gbc.writeMem(0x590, { 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0x591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0366
        gbc.setState(0x246c, 0x8a3a, 0xd3c0, 0xebcb, 0xcd24, 0xb908, 0x1, 0x0);
        gbc.writeMem(0x246c, { 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8a3a, gbc.sp());
        EXPECT(0x246d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0367
        gbc.setState(0xb101, 0x6659, 0x5510, 0xdb08, 0xbac9, 0x8044, 0x0, 0x0);
        gbc.writeMem(0xb101, { 0x7b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0xb102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb101));
        // 7B 0368
        gbc.setState(0xc33d, 0x7042, 0x95d0, 0xbbc9, 0xfae8, 0x7ca4, 0x1, 0x0);
        gbc.writeMem(0xc33d, { 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7042, gbc.sp());
        EXPECT(0xc33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc33d));
        // 7B 036A
        gbc.setState(0xcfc3, 0x7973, 0x95c0, 0x110a, 0x1dec, 0x27f0, 0x0, 0x1);
        gbc.writeMem(0xcfc3, { 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7973, gbc.sp());
        EXPECT(0xcfc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcfc3));
        // 7B 036B
        gbc.setState(0x5c54, 0xa312, 0x8cb0, 0x398a, 0x95cc, 0x5122, 0x0, 0x1);
        gbc.writeMem(0x5c54, { 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa312, gbc.sp());
        EXPECT(0x5c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 036D
        gbc.setState(0x6908, 0x3c12, 0xc050, 0x81ed, 0x4815, 0x9753, 0x0, 0x1);
        gbc.writeMem(0x6908, { 0x7b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3c12, gbc.sp());
        EXPECT(0x6909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 036E
        gbc.setState(0xe20d, 0x1f2b, 0x60c0, 0xc5f1, 0x1226, 0x7710, 0x0, 0x1);
        gbc.writeMem(0xe20d, { 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1f2b, gbc.sp());
        EXPECT(0xe20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe20d));
        // 7B 036F
        gbc.setState(0x5f75, 0x1fb5, 0xe680, 0x39f4, 0x8b89, 0x391e, 0x0, 0x0);
        gbc.writeMem(0x5f75, { 0x7b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1fb5, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0370
        gbc.setState(0x2b95, 0xacfe, 0xbb90, 0x5384, 0x65a5, 0x5180, 0x1, 0x1);
        gbc.writeMem(0x2b95, { 0x7b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xacfe, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0371
        gbc.setState(0x374f, 0xba3c, 0xc110, 0x1061, 0x3cd, 0xde8c, 0x0, 0x1);
        gbc.writeMem(0x374f, { 0x7b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xba3c, gbc.sp());
        EXPECT(0x3750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0372
        gbc.setState(0x34af, 0x5b72, 0x8000, 0x8d7a, 0xdd46, 0xe845, 0x1, 0x0);
        gbc.writeMem(0x34af, { 0x7b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5b72, gbc.sp());
        EXPECT(0x34b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0373
        gbc.setState(0x3931, 0x5f88, 0x7390, 0xba51, 0xbdf6, 0x35cf, 0x0, 0x0);
        gbc.writeMem(0x3931, { 0x7b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5f88, gbc.sp());
        EXPECT(0x3932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0374
        gbc.setState(0x2f56, 0xe59a, 0x7f80, 0x89bc, 0x3d67, 0x8d5, 0x1, 0x0);
        gbc.writeMem(0x2f56, { 0x7b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0x2f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0375
        gbc.setState(0xd1f8, 0xb785, 0xea0, 0xba14, 0x811d, 0x22e9, 0x0, 0x1);
        gbc.writeMem(0xd1f8, { 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb785, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd1f8));
        // 7B 0377
        gbc.setState(0x87f5, 0xc952, 0xc2c0, 0x17d, 0xb196, 0xea98, 0x0, 0x1);
        gbc.writeMem(0x87f5, { 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc952, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x87f5));
        // 7B 0378
        gbc.setState(0x2c8d, 0x5f12, 0xc020, 0x9ebb, 0x8718, 0x3940, 0x1, 0x0);
        gbc.writeMem(0x2c8d, { 0x7b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5f12, gbc.sp());
        EXPECT(0x2c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0379
        gbc.setState(0x49a8, 0xdd58, 0x1d70, 0x1846, 0xa069, 0x6360, 0x0, 0x0);
        gbc.writeMem(0x49a8, { 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdd58, gbc.sp());
        EXPECT(0x49a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 037A
        gbc.setState(0x9117, 0x6964, 0xb410, 0xd4cd, 0x659, 0x308d, 0x1, 0x1);
        gbc.writeMem(0x9117, { 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6964, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9117));
        // 7B 037B
        gbc.setState(0xa126, 0x48ba, 0xf3b0, 0x738f, 0xb0f7, 0x7099, 0x1, 0x0);
        gbc.writeMem(0xa126, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x48ba, gbc.sp());
        EXPECT(0xa127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa126));
        // 7B 037C
        gbc.setState(0x9acc, 0x8f09, 0xda50, 0xedce, 0xe8bc, 0x668e, 0x1, 0x1);
        gbc.writeMem(0x9acc, { 0x7b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8f09, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9acc));
        // 7B 037D
        gbc.setState(0x2a5c, 0x61a0, 0xe260, 0x1a86, 0x123b, 0x490, 0x1, 0x0);
        gbc.writeMem(0x2a5c, { 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x61a0, gbc.sp());
        EXPECT(0x2a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 037F
        gbc.setState(0x3e87, 0xaf1c, 0xead0, 0x762e, 0x870e, 0x496e, 0x0, 0x0);
        gbc.writeMem(0x3e87, { 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaf1c, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0380
        gbc.setState(0xfe8, 0xb690, 0x5630, 0xb604, 0xfb05, 0xd35d, 0x0, 0x0);
        gbc.writeMem(0xfe8, { 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb690, gbc.sp());
        EXPECT(0xfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0381
        gbc.setState(0xbe31, 0xdeb8, 0x3d20, 0x1d4b, 0x24b4, 0x9b4c, 0x1, 0x0);
        gbc.writeMem(0xbe31, { 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdeb8, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbe31));
        // 7B 0382
        gbc.setState(0x9014, 0x79ca, 0x6000, 0x2bd2, 0x9b2b, 0xfa64, 0x0, 0x1);
        gbc.writeMem(0x9014, { 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x9015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9014));
        // 7B 0383
        gbc.setState(0x546f, 0x546d, 0x570, 0xda7, 0xb5c8, 0xd9b2, 0x1, 0x1);
        gbc.writeMem(0x546f, { 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x546d, gbc.sp());
        EXPECT(0x5470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0384
        gbc.setState(0x4e0d, 0x29, 0x2290, 0xf381, 0x319e, 0x510b, 0x0, 0x0);
        gbc.writeMem(0x4e0d, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x29, gbc.sp());
        EXPECT(0x4e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0385
        gbc.setState(0xc246, 0xf3ca, 0xdca0, 0x2366, 0xf6f3, 0x3610, 0x1, 0x1);
        gbc.writeMem(0xc246, { 0x7b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf3ca, gbc.sp());
        EXPECT(0xc247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc246));
        // 7B 0386
        gbc.setState(0x20e8, 0xa404, 0x1510, 0xe495, 0xa506, 0x6654, 0x1, 0x1);
        gbc.writeMem(0x20e8, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa404, gbc.sp());
        EXPECT(0x20e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0388
        gbc.setState(0x5a33, 0x2e0f, 0xe7a0, 0xd7cd, 0xbc85, 0x5093, 0x0, 0x1);
        gbc.writeMem(0x5a33, { 0x7b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2e0f, gbc.sp());
        EXPECT(0x5a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0389
        gbc.setState(0xb564, 0xe10b, 0xfd30, 0xaf76, 0x8d91, 0x8e54, 0x1, 0x1);
        gbc.writeMem(0xb564, { 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb564));
        // 7B 038A
        gbc.setState(0x5e24, 0x88cd, 0xe70, 0x92a0, 0x210f, 0xd65f, 0x1, 0x1);
        gbc.writeMem(0x5e24, { 0x7b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x88cd, gbc.sp());
        EXPECT(0x5e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 038B
        gbc.setState(0x4cfd, 0xf8e6, 0x60c0, 0xf71b, 0xd80b, 0xb69d, 0x0, 0x0);
        gbc.writeMem(0x4cfd, { 0x7b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf8e6, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 038C
        gbc.setState(0x9fbb, 0x4f06, 0xa650, 0xc726, 0xa39f, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0x9fbb, { 0x7b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4f06, gbc.sp());
        EXPECT(0x9fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9fbb));
        // 7B 038D
        gbc.setState(0x301b, 0x56fb, 0x7470, 0x6bb6, 0xa190, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0x301b, { 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x56fb, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 038E
        gbc.setState(0x681c, 0xb26f, 0x8ae0, 0xa665, 0xd073, 0x7df0, 0x0, 0x1);
        gbc.writeMem(0x681c, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb26f, gbc.sp());
        EXPECT(0x681d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 038F
        gbc.setState(0xf9f, 0x77a6, 0x9e80, 0x77c3, 0xa873, 0xac1c, 0x1, 0x0);
        gbc.writeMem(0xf9f, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x77a6, gbc.sp());
        EXPECT(0xfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0390
        gbc.setState(0x11d0, 0xf726, 0x2750, 0x8035, 0xd113, 0x6222, 0x0, 0x1);
        gbc.writeMem(0x11d0, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf726, gbc.sp());
        EXPECT(0x11d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0391
        gbc.setState(0xc055, 0xeab1, 0xe490, 0x198e, 0xbd94, 0x7281, 0x1, 0x0);
        gbc.writeMem(0xc055, { 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0xc056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc055));
        // 7B 0392
        gbc.setState(0x7978, 0x5a85, 0x6c10, 0x417a, 0x3e58, 0xd9d5, 0x0, 0x0);
        gbc.writeMem(0x7978, { 0x7b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0x7979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 0393
        gbc.setState(0xdf49, 0xb0fb, 0x6590, 0x8699, 0xbc30, 0xf17a, 0x1, 0x1);
        gbc.writeMem(0xdf49, { 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb0fb, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdf49));
        // 7B 0394
        gbc.setState(0xa943, 0x4806, 0xb070, 0xd3a1, 0x6df7, 0x67bb, 0x1, 0x1);
        gbc.writeMem(0xa943, { 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4806, gbc.sp());
        EXPECT(0xa944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa943));
        // 7B 0395
        gbc.setState(0x2cfd, 0x893f, 0x69c0, 0x55f7, 0x2ad9, 0x9431, 0x1, 0x1);
        gbc.writeMem(0x2cfd, { 0x7b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x893f, gbc.sp());
        EXPECT(0x2cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0396
        gbc.setState(0xdd3e, 0xb1c4, 0x3e20, 0xfbb, 0x89f9, 0xd7fb, 0x0, 0x1);
        gbc.writeMem(0xdd3e, { 0x7b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0xdd3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdd3e));
        // 7B 0397
        gbc.setState(0x1e80, 0xf6fd, 0xac40, 0xe6a0, 0x5ebb, 0xe5a2, 0x1, 0x0);
        gbc.writeMem(0x1e80, { 0x7b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf6fd, gbc.sp());
        EXPECT(0x1e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0398
        gbc.setState(0x1682, 0x93ae, 0x58a0, 0x526a, 0xfa9c, 0x1808, 0x0, 0x0);
        gbc.writeMem(0x1682, { 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x93ae, gbc.sp());
        EXPECT(0x1683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 0399
        gbc.setState(0xbf70, 0x5dbb, 0xe2b0, 0xd32d, 0xfbbc, 0x3575, 0x1, 0x0);
        gbc.writeMem(0xbf70, { 0x7b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0xbf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbf70));
        // 7B 039A
        gbc.setState(0xb0c0, 0x6e26, 0xb220, 0x39fc, 0x7e39, 0x1d33, 0x1, 0x0);
        gbc.writeMem(0xb0c0, { 0x7b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6e26, gbc.sp());
        EXPECT(0xb0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb0c0));
        // 7B 039B
        gbc.setState(0x6d98, 0x6848, 0xf8c0, 0xf257, 0x7eff, 0x4011, 0x0, 0x1);
        gbc.writeMem(0x6d98, { 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x6d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 039C
        gbc.setState(0x99d4, 0x4829, 0x1bc0, 0xa685, 0x8808, 0xe00b, 0x1, 0x1);
        gbc.writeMem(0x99d4, { 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4829, gbc.sp());
        EXPECT(0x99d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x99d4));
        // 7B 039D
        gbc.setState(0x4343, 0x1699, 0xf210, 0xc171, 0xe663, 0x31f1, 0x0, 0x0);
        gbc.writeMem(0x4343, { 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x4344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 039E
        gbc.setState(0x1c49, 0xb1a7, 0xf0f0, 0x7a71, 0x4c68, 0x8c53, 0x1, 0x1);
        gbc.writeMem(0x1c49, { 0x7b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb1a7, gbc.sp());
        EXPECT(0x1c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 039F
        gbc.setState(0x80f5, 0x79a7, 0x3790, 0xa193, 0xa2c2, 0x8cc, 0x1, 0x1);
        gbc.writeMem(0x80f5, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x79a7, gbc.sp());
        EXPECT(0x80f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x80f5));
        // 7B 03A0
        gbc.setState(0x6d64, 0xe89c, 0x44f0, 0x11cd, 0xae06, 0xea02, 0x0, 0x0);
        gbc.writeMem(0x6d64, { 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe89c, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03A1
        gbc.setState(0xd1fc, 0x777e, 0xef70, 0xacfe, 0xac3a, 0x29ad, 0x0, 0x1);
        gbc.writeMem(0xd1fc, { 0x7b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x777e, gbc.sp());
        EXPECT(0xd1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd1fc));
        // 7B 03A2
        gbc.setState(0x3f20, 0x7c62, 0xd860, 0x4da4, 0xf6c5, 0xfcca, 0x0, 0x0);
        gbc.writeMem(0x3f20, { 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x3f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03A3
        gbc.setState(0x98e8, 0x74d2, 0x3560, 0xd172, 0x37bb, 0x64dc, 0x1, 0x0);
        gbc.writeMem(0x98e8, { 0x7b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0x98e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x98e8));
        // 7B 03A4
        gbc.setState(0x9888, 0x7d1e, 0xa6e0, 0x1db0, 0x443d, 0x34c9, 0x1, 0x0);
        gbc.writeMem(0x9888, { 0x7b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7d1e, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9888));
        // 7B 03A6
        gbc.setState(0x3f3a, 0x782, 0xfa30, 0x5b7f, 0xf62c, 0xb81d, 0x1, 0x0);
        gbc.writeMem(0x3f3a, { 0x7b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x782, gbc.sp());
        EXPECT(0x3f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03A7
        gbc.setState(0xa013, 0x3efa, 0xbc10, 0xf76c, 0xdeb6, 0xd205, 0x1, 0x0);
        gbc.writeMem(0xa013, { 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0xa014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa013));
        // 7B 03A8
        gbc.setState(0x6c65, 0xc6df, 0x4720, 0xec0c, 0xe6c2, 0xf7c5, 0x1, 0x0);
        gbc.writeMem(0x6c65, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc6df, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03A9
        gbc.setState(0x1230, 0x7b3e, 0x2f40, 0x81e9, 0x9ccc, 0x3d96, 0x0, 0x0);
        gbc.writeMem(0x1230, { 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7b3e, gbc.sp());
        EXPECT(0x1231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03AA
        gbc.setState(0x9961, 0x485c, 0x3f20, 0xfb5a, 0xa624, 0x2557, 0x0, 0x0);
        gbc.writeMem(0x9961, { 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x485c, gbc.sp());
        EXPECT(0x9962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9961));
        // 7B 03AB
        gbc.setState(0xe63f, 0xd739, 0x9c60, 0xd5ed, 0x98d3, 0x154d, 0x1, 0x1);
        gbc.writeMem(0xe63f, { 0x7b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd739, gbc.sp());
        EXPECT(0xe640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe63f));
        // 7B 03AC
        gbc.setState(0x3799, 0x3689, 0x44e0, 0x1ec4, 0xc96, 0x7b48, 0x1, 0x1);
        gbc.writeMem(0x3799, { 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3689, gbc.sp());
        EXPECT(0x379a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03AD
        gbc.setState(0x4bd2, 0x49c4, 0xec10, 0xe654, 0x9428, 0x85bc, 0x0, 0x1);
        gbc.writeMem(0x4bd2, { 0x7b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x49c4, gbc.sp());
        EXPECT(0x4bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03AE
        gbc.setState(0xb562, 0x685f, 0x8110, 0xd66d, 0x7587, 0x97cd, 0x1, 0x1);
        gbc.writeMem(0xb562, { 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x685f, gbc.sp());
        EXPECT(0xb563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb562));
        // 7B 03AF
        gbc.setState(0xafd3, 0xb2a9, 0x2f40, 0xc93, 0x6d8b, 0x943c, 0x0, 0x1);
        gbc.writeMem(0xafd3, { 0x7b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb2a9, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xafd3));
        // 7B 03B0
        gbc.setState(0xdafe, 0x8f9b, 0xf8d0, 0xd0ff, 0xd57f, 0x2649, 0x0, 0x1);
        gbc.writeMem(0xdafe, { 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdafe));
        // 7B 03B1
        gbc.setState(0xc435, 0x94b4, 0x8d20, 0x6f70, 0x33eb, 0x7444, 0x1, 0x1);
        gbc.writeMem(0xc435, { 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x94b4, gbc.sp());
        EXPECT(0xc436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc435));
        // 7B 03B2
        gbc.setState(0x3573, 0x301e, 0xa010, 0x25d7, 0x4c71, 0x1e8a, 0x0, 0x0);
        gbc.writeMem(0x3573, { 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x301e, gbc.sp());
        EXPECT(0x3574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03B3
        gbc.setState(0x48e7, 0x900c, 0xcef0, 0x9908, 0xafa6, 0x3074, 0x1, 0x1);
        gbc.writeMem(0x48e7, { 0x7b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x900c, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03B4
        gbc.setState(0x3477, 0x67dd, 0x96b0, 0x6cfa, 0xb20d, 0x3736, 0x1, 0x0);
        gbc.writeMem(0x3477, { 0x7b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03B5
        gbc.setState(0xa799, 0x612, 0x2240, 0x767f, 0x1c9e, 0x2466, 0x0, 0x0);
        gbc.writeMem(0xa799, { 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x612, gbc.sp());
        EXPECT(0xa79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa799));
        // 7B 03B6
        gbc.setState(0x3ef0, 0x6bf3, 0xd060, 0x532e, 0x1dbb, 0x2c70, 0x1, 0x1);
        gbc.writeMem(0x3ef0, { 0x7b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6bf3, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03B7
        gbc.setState(0x6ab2, 0x1f80, 0x4570, 0xfd42, 0x4409, 0x798d, 0x1, 0x0);
        gbc.writeMem(0x6ab2, { 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1f80, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03B8
        gbc.setState(0xce57, 0x9263, 0xac60, 0x2ba1, 0x2f91, 0xa9b1, 0x0, 0x1);
        gbc.writeMem(0xce57, { 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9263, gbc.sp());
        EXPECT(0xce58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xce57));
        // 7B 03B9
        gbc.setState(0x9d8f, 0x9b8f, 0x7a10, 0x2673, 0xf5a5, 0x67c6, 0x1, 0x1);
        gbc.writeMem(0x9d8f, { 0x7b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9b8f, gbc.sp());
        EXPECT(0x9d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9d8f));
        // 7B 03BA
        gbc.setState(0xbdcd, 0x54b2, 0x1230, 0xbb05, 0xdc15, 0xeaed, 0x0, 0x0);
        gbc.writeMem(0xbdcd, { 0x7b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x54b2, gbc.sp());
        EXPECT(0xbdce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbdcd));
        // 7B 03BB
        gbc.setState(0x855f, 0xa509, 0x5030, 0xb845, 0x687e, 0x2cf0, 0x1, 0x1);
        gbc.writeMem(0x855f, { 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa509, gbc.sp());
        EXPECT(0x8560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x855f));
        // 7B 03BC
        gbc.setState(0x129, 0xfec4, 0xd7f0, 0x2f05, 0x7c63, 0x77eb, 0x0, 0x1);
        gbc.writeMem(0x129, { 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfec4, gbc.sp());
        EXPECT(0x12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03BD
        gbc.setState(0xb6dc, 0xf954, 0xca40, 0xab04, 0x40c8, 0x5196, 0x1, 0x1);
        gbc.writeMem(0xb6dc, { 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf954, gbc.sp());
        EXPECT(0xb6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb6dc));
        // 7B 03BE
        gbc.setState(0xdee2, 0xc12, 0xebe0, 0x93c2, 0x8b12, 0x894e, 0x0, 0x0);
        gbc.writeMem(0xdee2, { 0x7b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc12, gbc.sp());
        EXPECT(0xdee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdee2));
        // 7B 03BF
        gbc.setState(0x8b1, 0xbf16, 0xd7c0, 0xa9cb, 0xf1bf, 0xad4d, 0x1, 0x0);
        gbc.writeMem(0x8b1, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbf16, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03C0
        gbc.setState(0xb456, 0x99ac, 0x1740, 0x2f93, 0x99ac, 0x45ec, 0x1, 0x1);
        gbc.writeMem(0xb456, { 0x7b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x99ac, gbc.sp());
        EXPECT(0xb457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb456));
        // 7B 03C1
        gbc.setState(0xd1d7, 0x1575, 0xce80, 0x8756, 0xc3a, 0xde75, 0x0, 0x0);
        gbc.writeMem(0xd1d7, { 0x7b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1575, gbc.sp());
        EXPECT(0xd1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd1d7));
        // 7B 03C2
        gbc.setState(0x2705, 0x6c50, 0x1f0, 0xb249, 0xdf73, 0x42df, 0x0, 0x0);
        gbc.writeMem(0x2705, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6c50, gbc.sp());
        EXPECT(0x2706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03C3
        gbc.setState(0x3f93, 0x9da8, 0x8410, 0x92e, 0xc20c, 0xd75, 0x0, 0x0);
        gbc.writeMem(0x3f93, { 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0x3f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03C4
        gbc.setState(0xdcff, 0x8d9d, 0xb8f0, 0xd734, 0xab59, 0x5789, 0x0, 0x0);
        gbc.writeMem(0xdcff, { 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8d9d, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xdcff));
        // 7B 03C5
        gbc.setState(0x3605, 0xfa40, 0xd940, 0x29a1, 0x3dd3, 0x4257, 0x1, 0x1);
        gbc.writeMem(0x3605, { 0x7b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfa40, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03C6
        gbc.setState(0x4c76, 0x71bf, 0x53d0, 0x1120, 0xc88c, 0x66c4, 0x0, 0x0);
        gbc.writeMem(0x4c76, { 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x71bf, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03C7
        gbc.setState(0x9cec, 0xd1ac, 0x4480, 0x8ef2, 0xa0a7, 0xfd30, 0x0, 0x0);
        gbc.writeMem(0x9cec, { 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd1ac, gbc.sp());
        EXPECT(0x9ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9cec));
        // 7B 03C8
        gbc.setState(0x95e3, 0x85dc, 0x6670, 0x32f0, 0x42a3, 0x7c1b, 0x1, 0x0);
        gbc.writeMem(0x95e3, { 0x7b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x85dc, gbc.sp());
        EXPECT(0x95e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x95e3));
        // 7B 03CA
        gbc.setState(0x365e, 0x4b1, 0x8d70, 0xde35, 0x9aae, 0xda18, 0x1, 0x1);
        gbc.writeMem(0x365e, { 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4b1, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03CB
        gbc.setState(0xd5bb, 0x627, 0x760, 0xd10c, 0x2773, 0x54a7, 0x1, 0x0);
        gbc.writeMem(0xd5bb, { 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x627, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd5bb));
        // 7B 03CC
        gbc.setState(0xbae6, 0xeca0, 0xaeb0, 0xc8f5, 0x1588, 0x60a0, 0x1, 0x0);
        gbc.writeMem(0xbae6, { 0x7b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0xbae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbae6));
        // 7B 03CE
        gbc.setState(0x8838, 0x174c, 0x91b0, 0xa7cd, 0x6114, 0x9d80, 0x1, 0x0);
        gbc.writeMem(0x8838, { 0x7b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x174c, gbc.sp());
        EXPECT(0x8839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8838));
        // 7B 03CF
        gbc.setState(0x9c6c, 0x8810, 0x7990, 0xd733, 0x5aae, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0x9c6c, { 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8810, gbc.sp());
        EXPECT(0x9c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9c6c));
        // 7B 03D0
        gbc.setState(0x2efb, 0x3fc9, 0x3530, 0xe6cf, 0xa10a, 0xeed5, 0x1, 0x0);
        gbc.writeMem(0x2efb, { 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3fc9, gbc.sp());
        EXPECT(0x2efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03D1
        gbc.setState(0x3a89, 0x8b55, 0xf440, 0xcde3, 0x850, 0x8c9f, 0x0, 0x0);
        gbc.writeMem(0x3a89, { 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8b55, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03D2
        gbc.setState(0x45cc, 0xd5df, 0xb30, 0x32ab, 0x9351, 0x6efd, 0x1, 0x1);
        gbc.writeMem(0x45cc, { 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd5df, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03D3
        gbc.setState(0x3e74, 0x648c, 0x1420, 0xbba4, 0x364, 0x5778, 0x0, 0x1);
        gbc.writeMem(0x3e74, { 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x648c, gbc.sp());
        EXPECT(0x3e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03D4
        gbc.setState(0xe8dc, 0xe6c5, 0x2180, 0xfbf7, 0x663f, 0x38f8, 0x0, 0x0);
        gbc.writeMem(0xe8dc, { 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe6c5, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe8dc));
        // 7B 03D5
        gbc.setState(0x42a4, 0x2f53, 0x78c0, 0x3e8f, 0xde76, 0x226b, 0x1, 0x0);
        gbc.writeMem(0x42a4, { 0x7b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2f53, gbc.sp());
        EXPECT(0x42a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03D6
        gbc.setState(0x61fd, 0x8310, 0x9690, 0xdaeb, 0x7ba4, 0x34bb, 0x0, 0x1);
        gbc.writeMem(0x61fd, { 0x7b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8310, gbc.sp());
        EXPECT(0x61fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03D7
        gbc.setState(0x4a11, 0x2e83, 0x4060, 0xc65d, 0x351c, 0x9d4e, 0x0, 0x1);
        gbc.writeMem(0x4a11, { 0x7b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2e83, gbc.sp());
        EXPECT(0x4a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03D8
        gbc.setState(0xbc57, 0x6eb7, 0x8f50, 0xe45e, 0x76fd, 0x1651, 0x1, 0x1);
        gbc.writeMem(0xbc57, { 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6eb7, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbc57));
        // 7B 03D9
        gbc.setState(0xcac9, 0xf636, 0x2b0, 0xfe6f, 0xe7f2, 0xb6c5, 0x1, 0x0);
        gbc.writeMem(0xcac9, { 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf636, gbc.sp());
        EXPECT(0xcaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcac9));
        // 7B 03DA
        gbc.setState(0x7c93, 0x2e53, 0x4070, 0xaff7, 0x3f5c, 0xe1ed, 0x0, 0x1);
        gbc.writeMem(0x7c93, { 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2e53, gbc.sp());
        EXPECT(0x7c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03DB
        gbc.setState(0x403, 0xa17, 0xedf0, 0x20af, 0x8684, 0x4b31, 0x1, 0x0);
        gbc.writeMem(0x403, { 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa17, gbc.sp());
        EXPECT(0x404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03DC
        gbc.setState(0xd72f, 0x2d26, 0x7e10, 0xa8b3, 0x6c2, 0xbb81, 0x0, 0x0);
        gbc.writeMem(0xd72f, { 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2d26, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd72f));
        // 7B 03DD
        gbc.setState(0x312f, 0x5e35, 0xa120, 0xea08, 0x3cbf, 0x1424, 0x0, 0x1);
        gbc.writeMem(0x312f, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0x3130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03DE
        gbc.setState(0xbac3, 0x3867, 0x80c0, 0x624, 0x2d0f, 0xab69, 0x1, 0x1);
        gbc.writeMem(0xbac3, { 0x7b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3867, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbac3));
        // 7B 03DF
        gbc.setState(0x611e, 0xeb72, 0x45d0, 0x466a, 0x5b60, 0x4cf1, 0x0, 0x1);
        gbc.writeMem(0x611e, { 0x7b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeb72, gbc.sp());
        EXPECT(0x611f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03E0
        gbc.setState(0xb5fd, 0xebe5, 0x7130, 0x8b20, 0xf9e9, 0xda94, 0x1, 0x1);
        gbc.writeMem(0xb5fd, { 0x7b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xebe5, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb5fd));
        // 7B 03E1
        gbc.setState(0x5179, 0xfc3e, 0x9cb0, 0xdbee, 0x3313, 0x39b, 0x1, 0x1);
        gbc.writeMem(0x5179, { 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfc3e, gbc.sp());
        EXPECT(0x517a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03E2
        gbc.setState(0x493f, 0xf35a, 0xb210, 0x2540, 0x8580, 0xbeb1, 0x0, 0x0);
        gbc.writeMem(0x493f, { 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf35a, gbc.sp());
        EXPECT(0x4940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7B 03E3
        gbc.setState(0x54ea, 0xd72d, 0x1420, 0x3ad6, 0x39ff, 0x1177, 0x1, 0x1);
        gbc.writeMem(0x54ea, { 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd72d, gbc.sp());
        EXPECT(0x54eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03E4
        gbc.setState(0x8c10, 0x3337, 0x93a0, 0x4c31, 0x3d5c, 0x1478, 0x1, 0x0);
        gbc.writeMem(0x8c10, { 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3337, gbc.sp());
        EXPECT(0x8c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8c10));
        // 7B 03E5
        gbc.setState(0xe7c, 0x475a, 0x4740, 0x6be6, 0xba9d, 0x49e, 0x1, 0x1);
        gbc.writeMem(0xe7c, { 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x475a, gbc.sp());
        EXPECT(0xe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7B 03E7
        gbc.setState(0xba7d, 0x3e4d, 0x3900, 0x49fb, 0xd5fb, 0xaed8, 0x1, 0x1);
        gbc.writeMem(0xba7d, { 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3e4d, gbc.sp());
        EXPECT(0xba7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xba7d));
    }
