    TEST(gbcemu, opcode_cb_67) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 67 0000
        gbc.setState(0xa462, 0x4c42, 0x6960, 0xb2ae, 0x8cff, 0x2fa, 0x0, 0x1);
        gbc.writeMem(0xa462, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4c42, gbc.sp());
        EXPECT(0xa464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa462));
        EXPECT(0x67, gbc.readMem(0xa463));
        // CB 67 0001
        gbc.setState(0x287b, 0x202b, 0x340, 0x55a0, 0xa35a, 0x8822, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0002
        gbc.setState(0x4372, 0x8d51, 0xdae0, 0x8425, 0xc877, 0x26b4, 0x0, 0x1);
        gbc.writeMem(0x4372, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8d51, gbc.sp());
        EXPECT(0x4374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0003
        gbc.setState(0xe62a, 0x9b34, 0xbcc0, 0x277e, 0xfc7d, 0xd321, 0x0, 0x0);
        gbc.writeMem(0xe62a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0xe62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62a));
        EXPECT(0x67, gbc.readMem(0xe62b));
        // CB 67 0004
        gbc.setState(0x5ce8, 0x866d, 0xb440, 0x96fe, 0x7ae2, 0x91f0, 0x1, 0x0);
        gbc.writeMem(0x5ce8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x866d, gbc.sp());
        EXPECT(0x5cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0005
        gbc.setState(0x1b3d, 0x8aa1, 0xf620, 0x7909, 0xde9d, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0x1b3d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0006
        gbc.setState(0xb820, 0x21e3, 0x4ac0, 0xfb38, 0xd82, 0x94f0, 0x1, 0x0);
        gbc.writeMem(0xb820, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x21e3, gbc.sp());
        EXPECT(0xb822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb820));
        EXPECT(0x67, gbc.readMem(0xb821));
        // CB 67 0007
        gbc.setState(0x7d50, 0xaf46, 0x3e0, 0xddb2, 0xa75a, 0xdecf, 0x1, 0x0);
        gbc.writeMem(0x7d50, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0x7d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0008
        gbc.setState(0x6c52, 0xc8a5, 0xaa40, 0xf3a0, 0x5e40, 0x606f, 0x1, 0x0);
        gbc.writeMem(0x6c52, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc8a5, gbc.sp());
        EXPECT(0x6c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0009
        gbc.setState(0x123f, 0xa0f5, 0x7fc0, 0xb35e, 0xbeee, 0x9456, 0x0, 0x0);
        gbc.writeMem(0x123f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa0f5, gbc.sp());
        EXPECT(0x1241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 000A
        gbc.setState(0xe332, 0x114, 0x6d90, 0x3a56, 0x81be, 0x3864, 0x1, 0x1);
        gbc.writeMem(0xe332, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x114, gbc.sp());
        EXPECT(0xe334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe332));
        EXPECT(0x67, gbc.readMem(0xe333));
        // CB 67 000B
        gbc.setState(0x7eda, 0xa1ce, 0x5410, 0xac28, 0xa2e4, 0xe901, 0x1, 0x1);
        gbc.writeMem(0x7eda, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa1ce, gbc.sp());
        EXPECT(0x7edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 000C
        gbc.setState(0xcf48, 0x2f6f, 0x4690, 0x91a, 0x398, 0xb783, 0x1, 0x0);
        gbc.writeMem(0xcf48, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2f6f, gbc.sp());
        EXPECT(0xcf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf48));
        EXPECT(0x67, gbc.readMem(0xcf49));
        // CB 67 000D
        gbc.setState(0x6a46, 0x6f8c, 0xb4d0, 0x87aa, 0xe3ee, 0xac8e, 0x0, 0x1);
        gbc.writeMem(0x6a46, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6f8c, gbc.sp());
        EXPECT(0x6a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 000E
        gbc.setState(0x1aa9, 0xe0b2, 0x7710, 0xa819, 0xe980, 0x6892, 0x1, 0x0);
        gbc.writeMem(0x1aa9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0x1aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 000F
        gbc.setState(0x2311, 0xc172, 0x7860, 0x80c5, 0xedc9, 0xdc6, 0x1, 0x1);
        gbc.writeMem(0x2311, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc172, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0010
        gbc.setState(0xf01, 0x4994, 0xe7e0, 0xbb0d, 0xb329, 0x2f1b, 0x1, 0x0);
        gbc.writeMem(0xf01, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4994, gbc.sp());
        EXPECT(0xf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0011
        gbc.setState(0x208c, 0x7f8c, 0x3020, 0xd625, 0xf901, 0x691f, 0x0, 0x0);
        gbc.writeMem(0x208c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7f8c, gbc.sp());
        EXPECT(0x208e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0012
        gbc.setState(0x6576, 0x77e9, 0xaf90, 0x5919, 0xa574, 0x734, 0x1, 0x1);
        gbc.writeMem(0x6576, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x6578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0013
        gbc.setState(0x538, 0xd4fb, 0xf610, 0xf873, 0xbc7b, 0x13e, 0x0, 0x0);
        gbc.writeMem(0x538, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0x53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0014
        gbc.setState(0xaa65, 0x20d, 0xcf0, 0xb1e8, 0xb551, 0xd955, 0x0, 0x1);
        gbc.writeMem(0xaa65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x20d, gbc.sp());
        EXPECT(0xaa67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa65));
        EXPECT(0x67, gbc.readMem(0xaa66));
        // CB 67 0015
        gbc.setState(0x7c29, 0x7d70, 0x180, 0x18b5, 0x3f65, 0xafda, 0x0, 0x0);
        gbc.writeMem(0x7c29, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7d70, gbc.sp());
        EXPECT(0x7c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0017
        gbc.setState(0x15fd, 0xef4e, 0x86c0, 0x6e0e, 0x3b08, 0x36bb, 0x0, 0x0);
        gbc.writeMem(0x15fd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xef4e, gbc.sp());
        EXPECT(0x15ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0018
        gbc.setState(0x7704, 0xe33b, 0xf200, 0x7577, 0x88e0, 0x6e76, 0x0, 0x1);
        gbc.writeMem(0x7704, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe33b, gbc.sp());
        EXPECT(0x7706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0019
        gbc.setState(0x96ef, 0x6b5b, 0x8840, 0x1a77, 0x20c, 0x63b2, 0x0, 0x1);
        gbc.writeMem(0x96ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6b5b, gbc.sp());
        EXPECT(0x96f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ef));
        EXPECT(0x67, gbc.readMem(0x96f0));
        // CB 67 001A
        gbc.setState(0xa4cc, 0xa1e0, 0x6650, 0xca1a, 0x5008, 0xa75f, 0x0, 0x0);
        gbc.writeMem(0xa4cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa1e0, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cc));
        EXPECT(0x67, gbc.readMem(0xa4cd));
        // CB 67 001B
        gbc.setState(0x1649, 0x4f6b, 0x2460, 0x7928, 0xc103, 0x389, 0x0, 0x0);
        gbc.writeMem(0x1649, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4f6b, gbc.sp());
        EXPECT(0x164b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 001C
        gbc.setState(0xad61, 0xc35f, 0xe5f0, 0x1782, 0x4d89, 0x87b, 0x0, 0x0);
        gbc.writeMem(0xad61, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc35f, gbc.sp());
        EXPECT(0xad63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad61));
        EXPECT(0x67, gbc.readMem(0xad62));
        // CB 67 001D
        gbc.setState(0xc0f8, 0xa02f, 0x8b50, 0x88b1, 0x89a8, 0x1eaf, 0x1, 0x1);
        gbc.writeMem(0xc0f8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa02f, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f8));
        EXPECT(0x67, gbc.readMem(0xc0f9));
        // CB 67 001E
        gbc.setState(0x7216, 0x2690, 0x2940, 0xfbb7, 0x57bc, 0x9b5b, 0x0, 0x1);
        gbc.writeMem(0x7216, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x7218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 001F
        gbc.setState(0x4cd1, 0x2ce4, 0xc760, 0xd02e, 0x1290, 0x6beb, 0x1, 0x0);
        gbc.writeMem(0x4cd1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2ce4, gbc.sp());
        EXPECT(0x4cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0020
        gbc.setState(0x7613, 0x95cb, 0x1160, 0x25dd, 0x14a, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0x7613, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0x7615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0021
        gbc.setState(0x8b88, 0x689e, 0x6610, 0x5dab, 0xeb29, 0x9a22, 0x1, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x689e, gbc.sp());
        EXPECT(0x8b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b88));
        EXPECT(0x67, gbc.readMem(0x8b89));
        // CB 67 0022
        gbc.setState(0x8386, 0x8884, 0xe580, 0xf885, 0xb1e7, 0x2bdf, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8884, gbc.sp());
        EXPECT(0x8388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8386));
        EXPECT(0x67, gbc.readMem(0x8387));
        // CB 67 0023
        gbc.setState(0x6265, 0x9504, 0x6a60, 0xa759, 0xb8fc, 0x90c6, 0x1, 0x1);
        gbc.writeMem(0x6265, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9504, gbc.sp());
        EXPECT(0x6267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0024
        gbc.setState(0xb8f5, 0xd94c, 0x6530, 0xf2f4, 0x7555, 0x99c2, 0x0, 0x1);
        gbc.writeMem(0xb8f5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd94c, gbc.sp());
        EXPECT(0xb8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f5));
        EXPECT(0x67, gbc.readMem(0xb8f6));
        // CB 67 0025
        gbc.setState(0x4362, 0xdc7d, 0xc700, 0xfc6a, 0xcbb9, 0x4b17, 0x1, 0x0);
        gbc.writeMem(0x4362, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0x4364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0026
        gbc.setState(0xb2d4, 0xadb2, 0x9670, 0x8db2, 0xda93, 0x1db5, 0x0, 0x0);
        gbc.writeMem(0xb2d4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0xb2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d4));
        EXPECT(0x67, gbc.readMem(0xb2d5));
        // CB 67 0027
        gbc.setState(0x42b1, 0x26f7, 0x2590, 0x4dd9, 0x30b2, 0x19f1, 0x0, 0x1);
        gbc.writeMem(0x42b1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x26f7, gbc.sp());
        EXPECT(0x42b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0028
        gbc.setState(0x3560, 0xef12, 0x9a20, 0x8bdf, 0x592c, 0x65df, 0x1, 0x1);
        gbc.writeMem(0x3560, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xef12, gbc.sp());
        EXPECT(0x3562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0029
        gbc.setState(0xc2d3, 0xd07b, 0xf4b0, 0xebf7, 0x2518, 0x4e0b, 0x0, 0x1);
        gbc.writeMem(0xc2d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd07b, gbc.sp());
        EXPECT(0xc2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d3));
        EXPECT(0x67, gbc.readMem(0xc2d4));
        // CB 67 002A
        gbc.setState(0xb10e, 0x629a, 0xbe30, 0xac3a, 0x58b8, 0x1594, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x629a, gbc.sp());
        EXPECT(0xb110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10e));
        EXPECT(0x67, gbc.readMem(0xb10f));
        // CB 67 002B
        gbc.setState(0xf9c, 0x4e, 0x6140, 0xd857, 0x90c2, 0x56a2, 0x0, 0x0);
        gbc.writeMem(0xf9c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4e, gbc.sp());
        EXPECT(0xf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 002C
        gbc.setState(0xbbe7, 0x1511, 0xd6b0, 0xa5d7, 0x5993, 0x40e2, 0x0, 0x1);
        gbc.writeMem(0xbbe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1511, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0x67, gbc.readMem(0xbbe8));
        // CB 67 002D
        gbc.setState(0xbf7b, 0x75ca, 0x5df0, 0x7d46, 0x8d96, 0xe052, 0x1, 0x0);
        gbc.writeMem(0xbf7b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x75ca, gbc.sp());
        EXPECT(0xbf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7b));
        EXPECT(0x67, gbc.readMem(0xbf7c));
        // CB 67 002E
        gbc.setState(0xe217, 0x9641, 0x5be0, 0xac7a, 0xe10c, 0x157e, 0x1, 0x0);
        gbc.writeMem(0xe217, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9641, gbc.sp());
        EXPECT(0xe219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe217));
        EXPECT(0x67, gbc.readMem(0xe218));
        // CB 67 002F
        gbc.setState(0x1d16, 0xc451, 0x2c60, 0xa03, 0x3072, 0xe650, 0x0, 0x0);
        gbc.writeMem(0x1d16, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0x1d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0030
        gbc.setState(0xd407, 0x1dfa, 0x4990, 0xea10, 0xb7d3, 0xa693, 0x1, 0x0);
        gbc.writeMem(0xd407, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1dfa, gbc.sp());
        EXPECT(0xd409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd407));
        EXPECT(0x67, gbc.readMem(0xd408));
        // CB 67 0031
        gbc.setState(0xb7c2, 0x2f17, 0xc1b0, 0xc486, 0x9c5a, 0xb844, 0x1, 0x0);
        gbc.writeMem(0xb7c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2f17, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c2));
        EXPECT(0x67, gbc.readMem(0xb7c3));
        // CB 67 0032
        gbc.setState(0xde99, 0xcd76, 0x6e80, 0x5842, 0xd95a, 0x330b, 0x0, 0x0);
        gbc.writeMem(0xde99, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcd76, gbc.sp());
        EXPECT(0xde9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde99));
        EXPECT(0x67, gbc.readMem(0xde9a));
        // CB 67 0033
        gbc.setState(0x1e20, 0xe4fc, 0x7f70, 0x731f, 0xf689, 0x6441, 0x0, 0x0);
        gbc.writeMem(0x1e20, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe4fc, gbc.sp());
        EXPECT(0x1e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0034
        gbc.setState(0xeb0e, 0x7a0b, 0x4250, 0xd3a, 0x1f44, 0xc12, 0x1, 0x0);
        gbc.writeMem(0xeb0e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0xeb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0e));
        EXPECT(0x67, gbc.readMem(0xeb0f));
        // CB 67 0035
        gbc.setState(0x9a92, 0x8775, 0x3eb0, 0x1f69, 0xa4e0, 0x79c8, 0x1, 0x1);
        gbc.writeMem(0x9a92, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8775, gbc.sp());
        EXPECT(0x9a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a92));
        EXPECT(0x67, gbc.readMem(0x9a93));
        // CB 67 0036
        gbc.setState(0x7c1d, 0xecd, 0x67d0, 0x3c15, 0x1d40, 0xf95, 0x1, 0x1);
        gbc.writeMem(0x7c1d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xecd, gbc.sp());
        EXPECT(0x7c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0037
        gbc.setState(0x3a58, 0xada1, 0x46b0, 0x9e3d, 0x29d9, 0xbe0e, 0x1, 0x1);
        gbc.writeMem(0x3a58, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xada1, gbc.sp());
        EXPECT(0x3a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0038
        gbc.setState(0x4b10, 0x8be6, 0xf620, 0x7a93, 0x3478, 0x8df4, 0x0, 0x1);
        gbc.writeMem(0x4b10, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8be6, gbc.sp());
        EXPECT(0x4b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0039
        gbc.setState(0xbbc4, 0xa8bf, 0xfb70, 0x47a3, 0xa8c8, 0x36af, 0x1, 0x0);
        gbc.writeMem(0xbbc4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa8bf, gbc.sp());
        EXPECT(0xbbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc4));
        EXPECT(0x67, gbc.readMem(0xbbc5));
        // CB 67 003A
        gbc.setState(0x2b35, 0x2cdd, 0x7c0, 0x85e6, 0x55ff, 0x3e15, 0x1, 0x1);
        gbc.writeMem(0x2b35, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2cdd, gbc.sp());
        EXPECT(0x2b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 003B
        gbc.setState(0x64ba, 0x65fc, 0xa870, 0x97a5, 0x8f3d, 0x8a12, 0x0, 0x0);
        gbc.writeMem(0x64ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x65fc, gbc.sp());
        EXPECT(0x64bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 003C
        gbc.setState(0x6467, 0x260d, 0xfa00, 0x3a16, 0xb9d5, 0x1c91, 0x0, 0x1);
        gbc.writeMem(0x6467, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x260d, gbc.sp());
        EXPECT(0x6469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 003D
        gbc.setState(0x780d, 0x3091, 0x3150, 0x4e01, 0x3d48, 0xb0c5, 0x0, 0x1);
        gbc.writeMem(0x780d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3091, gbc.sp());
        EXPECT(0x780f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 003E
        gbc.setState(0x17a0, 0xc3e7, 0x69f0, 0x1873, 0xceae, 0xa9b8, 0x1, 0x1);
        gbc.writeMem(0x17a0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc3e7, gbc.sp());
        EXPECT(0x17a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 003F
        gbc.setState(0x7b33, 0x427a, 0x1a80, 0xb5e, 0x7284, 0x4a2, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x427a, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0040
        gbc.setState(0x1eec, 0xdac5, 0xb560, 0x1627, 0x3f5d, 0xe0e4, 0x0, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdac5, gbc.sp());
        EXPECT(0x1eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0041
        gbc.setState(0x7101, 0xf4ed, 0xd7c0, 0xbbaf, 0x4299, 0x33c7, 0x1, 0x0);
        gbc.writeMem(0x7101, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf4ed, gbc.sp());
        EXPECT(0x7103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0042
        gbc.setState(0x3f18, 0x2b31, 0x7400, 0x7450, 0x15e0, 0x8874, 0x0, 0x1);
        gbc.writeMem(0x3f18, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2b31, gbc.sp());
        EXPECT(0x3f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0043
        gbc.setState(0xcc1e, 0x1d0d, 0x89b0, 0x3433, 0x6309, 0xb803, 0x1, 0x0);
        gbc.writeMem(0xcc1e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1d0d, gbc.sp());
        EXPECT(0xcc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1e));
        EXPECT(0x67, gbc.readMem(0xcc1f));
        // CB 67 0044
        gbc.setState(0x7fe2, 0xa788, 0xe140, 0x5013, 0xde37, 0xf259, 0x0, 0x0);
        gbc.writeMem(0x7fe2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa788, gbc.sp());
        EXPECT(0x7fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0045
        gbc.setState(0xbb81, 0x632c, 0xa9a0, 0x2dff, 0x4f30, 0xc1, 0x1, 0x0);
        gbc.writeMem(0xbb81, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x632c, gbc.sp());
        EXPECT(0xbb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb81));
        EXPECT(0x67, gbc.readMem(0xbb82));
        // CB 67 0046
        gbc.setState(0x2367, 0xd6a0, 0x870, 0xe52b, 0x4067, 0x5c, 0x1, 0x0);
        gbc.writeMem(0x2367, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0047
        gbc.setState(0x737d, 0xe50e, 0x37f0, 0xae33, 0x73fb, 0x71fc, 0x0, 0x1);
        gbc.writeMem(0x737d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe50e, gbc.sp());
        EXPECT(0x737f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0048
        gbc.setState(0x107d, 0xd1c4, 0xf280, 0xba1, 0xe7f3, 0xb285, 0x0, 0x0);
        gbc.writeMem(0x107d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd1c4, gbc.sp());
        EXPECT(0x107f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0049
        gbc.setState(0xdc8, 0x8bfe, 0xbc60, 0x8919, 0x1f85, 0x184f, 0x0, 0x1);
        gbc.writeMem(0xdc8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 004A
        gbc.setState(0x424f, 0xa6c, 0xe3b0, 0x7675, 0x2186, 0x3a57, 0x0, 0x1);
        gbc.writeMem(0x424f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa6c, gbc.sp());
        EXPECT(0x4251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 004B
        gbc.setState(0x9d93, 0xde30, 0x35a0, 0x4aa2, 0x389f, 0xe2e3, 0x0, 0x0);
        gbc.writeMem(0x9d93, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xde30, gbc.sp());
        EXPECT(0x9d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d93));
        EXPECT(0x67, gbc.readMem(0x9d94));
        // CB 67 004C
        gbc.setState(0xa389, 0x21bb, 0x7700, 0x742b, 0x91d9, 0xa4c3, 0x1, 0x1);
        gbc.writeMem(0xa389, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0xa38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa389));
        EXPECT(0x67, gbc.readMem(0xa38a));
        // CB 67 004D
        gbc.setState(0x185f, 0xd24c, 0x9d80, 0x1786, 0x18a9, 0x7c24, 0x1, 0x0);
        gbc.writeMem(0x185f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd24c, gbc.sp());
        EXPECT(0x1861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 004F
        gbc.setState(0xc694, 0xa4cc, 0x69d0, 0x9ff4, 0x5f2a, 0x8237, 0x1, 0x1);
        gbc.writeMem(0xc694, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa4cc, gbc.sp());
        EXPECT(0xc696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc694));
        EXPECT(0x67, gbc.readMem(0xc695));
        // CB 67 0050
        gbc.setState(0xd89e, 0x7ae2, 0x5ef0, 0x7f79, 0xaf4b, 0xcb84, 0x1, 0x1);
        gbc.writeMem(0xd89e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7ae2, gbc.sp());
        EXPECT(0xd8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89e));
        EXPECT(0x67, gbc.readMem(0xd89f));
        // CB 67 0051
        gbc.setState(0x2ee6, 0x7c49, 0xed50, 0x6d7f, 0xdd27, 0x283e, 0x0, 0x0);
        gbc.writeMem(0x2ee6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7c49, gbc.sp());
        EXPECT(0x2ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0052
        gbc.setState(0x744b, 0x47be, 0xfb20, 0x9966, 0xddc7, 0x84d9, 0x1, 0x1);
        gbc.writeMem(0x744b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x47be, gbc.sp());
        EXPECT(0x744d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0053
        gbc.setState(0xe3a3, 0xc8b2, 0x50e0, 0xb448, 0x9151, 0x3aad, 0x1, 0x1);
        gbc.writeMem(0xe3a3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc8b2, gbc.sp());
        EXPECT(0xe3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a3));
        EXPECT(0x67, gbc.readMem(0xe3a4));
        // CB 67 0054
        gbc.setState(0x827f, 0x2625, 0x4c50, 0x6009, 0x1f2c, 0x5462, 0x1, 0x0);
        gbc.writeMem(0x827f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2625, gbc.sp());
        EXPECT(0x8281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827f));
        EXPECT(0x67, gbc.readMem(0x8280));
        // CB 67 0055
        gbc.setState(0x72ba, 0x533c, 0x8290, 0xe467, 0xa685, 0x7404, 0x1, 0x1);
        gbc.writeMem(0x72ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x533c, gbc.sp());
        EXPECT(0x72bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0056
        gbc.setState(0xe187, 0x5e23, 0xc30, 0xb298, 0xf540, 0x56d3, 0x0, 0x0);
        gbc.writeMem(0xe187, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5e23, gbc.sp());
        EXPECT(0xe189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe187));
        EXPECT(0x67, gbc.readMem(0xe188));
        // CB 67 0057
        gbc.setState(0xdcea, 0x32dd, 0xf360, 0xe878, 0xe167, 0xe78, 0x0, 0x1);
        gbc.writeMem(0xdcea, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x32dd, gbc.sp());
        EXPECT(0xdcec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcea));
        EXPECT(0x67, gbc.readMem(0xdceb));
        // CB 67 0058
        gbc.setState(0x9f10, 0x4ced, 0x2750, 0x39c, 0x1cd0, 0x4c5e, 0x1, 0x1);
        gbc.writeMem(0x9f10, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ced, gbc.sp());
        EXPECT(0x9f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f10));
        EXPECT(0x67, gbc.readMem(0x9f11));
        // CB 67 0059
        gbc.setState(0xabfa, 0x607e, 0xf590, 0xdf09, 0x7301, 0x6eac, 0x0, 0x0);
        gbc.writeMem(0xabfa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x607e, gbc.sp());
        EXPECT(0xabfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfa));
        EXPECT(0x67, gbc.readMem(0xabfb));
        // CB 67 005A
        gbc.setState(0xdbe7, 0x453e, 0x5280, 0x5e75, 0x1cf4, 0xe2c4, 0x1, 0x0);
        gbc.writeMem(0xdbe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x453e, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe7));
        EXPECT(0x67, gbc.readMem(0xdbe8));
        // CB 67 005B
        gbc.setState(0x9927, 0xa5c6, 0x1d80, 0xaa2, 0x8b3a, 0xd3f6, 0x1, 0x1);
        gbc.writeMem(0x9927, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9927));
        EXPECT(0x67, gbc.readMem(0x9928));
        // CB 67 005C
        gbc.setState(0x93f, 0x982e, 0xb290, 0x6a3, 0xffc0, 0x5c6f, 0x1, 0x1);
        gbc.writeMem(0x93f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x982e, gbc.sp());
        EXPECT(0x941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 005D
        gbc.setState(0xcfad, 0x4ec3, 0x6160, 0x4ce, 0x1fc7, 0xbe4c, 0x0, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4ec3, gbc.sp());
        EXPECT(0xcfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfad));
        EXPECT(0x67, gbc.readMem(0xcfae));
        // CB 67 005E
        gbc.setState(0xe7bd, 0xa490, 0x1b0, 0x22e3, 0x3fe4, 0x9742, 0x0, 0x1);
        gbc.writeMem(0xe7bd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa490, gbc.sp());
        EXPECT(0xe7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bd));
        EXPECT(0x67, gbc.readMem(0xe7be));
        // CB 67 005F
        gbc.setState(0xcabd, 0xe632, 0xed00, 0x205, 0xc7a2, 0x8944, 0x0, 0x0);
        gbc.writeMem(0xcabd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe632, gbc.sp());
        EXPECT(0xcabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabd));
        EXPECT(0x67, gbc.readMem(0xcabe));
        // CB 67 0060
        gbc.setState(0x7557, 0x619b, 0xadb0, 0x2da2, 0xe106, 0xe070, 0x1, 0x1);
        gbc.writeMem(0x7557, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x619b, gbc.sp());
        EXPECT(0x7559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0061
        gbc.setState(0x7794, 0xf28a, 0xf0f0, 0xa056, 0x2862, 0xb9e1, 0x0, 0x0);
        gbc.writeMem(0x7794, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0062
        gbc.setState(0x8efd, 0x7125, 0xa720, 0x1578, 0xfb7e, 0xee95, 0x0, 0x1);
        gbc.writeMem(0x8efd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7125, gbc.sp());
        EXPECT(0x8eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efd));
        EXPECT(0x67, gbc.readMem(0x8efe));
        // CB 67 0063
        gbc.setState(0x1c01, 0x9d85, 0x5370, 0x7a4b, 0x41b7, 0x1705, 0x0, 0x0);
        gbc.writeMem(0x1c01, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9d85, gbc.sp());
        EXPECT(0x1c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0064
        gbc.setState(0x4d03, 0x8a69, 0x5620, 0x4fba, 0xb524, 0xe068, 0x1, 0x1);
        gbc.writeMem(0x4d03, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8a69, gbc.sp());
        EXPECT(0x4d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0065
        gbc.setState(0x9720, 0xe643, 0x6c80, 0xba1e, 0xd922, 0xad02, 0x0, 0x0);
        gbc.writeMem(0x9720, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe643, gbc.sp());
        EXPECT(0x9722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9720));
        EXPECT(0x67, gbc.readMem(0x9721));
        // CB 67 0066
        gbc.setState(0x4883, 0x4e6f, 0xc300, 0xe280, 0xc39b, 0xdcb9, 0x0, 0x1);
        gbc.writeMem(0x4883, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0067
        gbc.setState(0xb307, 0xb487, 0xe7c0, 0xc0d5, 0x431a, 0xab4f, 0x1, 0x0);
        gbc.writeMem(0xb307, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb487, gbc.sp());
        EXPECT(0xb309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb307));
        EXPECT(0x67, gbc.readMem(0xb308));
        // CB 67 0069
        gbc.setState(0xbd22, 0x50e3, 0x2590, 0x53bc, 0x7404, 0x4347, 0x1, 0x1);
        gbc.writeMem(0xbd22, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd22));
        EXPECT(0x67, gbc.readMem(0xbd23));
        // CB 67 006A
        gbc.setState(0x3d8f, 0xda95, 0x980, 0xeaf7, 0xa633, 0x9a8d, 0x0, 0x0);
        gbc.writeMem(0x3d8f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0x3d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 006B
        gbc.setState(0x7bdf, 0xbd25, 0x8720, 0x99f0, 0xd5ac, 0xe65d, 0x0, 0x1);
        gbc.writeMem(0x7bdf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbd25, gbc.sp());
        EXPECT(0x7be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 006C
        gbc.setState(0x2ce2, 0x27b9, 0x7480, 0x2210, 0xe4c0, 0xa000, 0x1, 0x0);
        gbc.writeMem(0x2ce2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x27b9, gbc.sp());
        EXPECT(0x2ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 006D
        gbc.setState(0x72ef, 0x63c7, 0x6360, 0xc908, 0xdaa9, 0xcff0, 0x1, 0x0);
        gbc.writeMem(0x72ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x63c7, gbc.sp());
        EXPECT(0x72f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 006E
        gbc.setState(0x92a7, 0x6857, 0xdf10, 0x4366, 0x1cb0, 0xc0b9, 0x1, 0x0);
        gbc.writeMem(0x92a7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6857, gbc.sp());
        EXPECT(0x92a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a7));
        EXPECT(0x67, gbc.readMem(0x92a8));
        // CB 67 006F
        gbc.setState(0xa7bf, 0xf450, 0x80e0, 0x4d8e, 0x8de9, 0x8a6, 0x1, 0x0);
        gbc.writeMem(0xa7bf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf450, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bf));
        EXPECT(0x67, gbc.readMem(0xa7c0));
        // CB 67 0070
        gbc.setState(0xd827, 0x67dc, 0xa690, 0x8167, 0xd598, 0xfe8a, 0x0, 0x1);
        gbc.writeMem(0xd827, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x67dc, gbc.sp());
        EXPECT(0xd829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd827));
        EXPECT(0x67, gbc.readMem(0xd828));
        // CB 67 0071
        gbc.setState(0xc41c, 0x9def, 0x9370, 0x183f, 0xc950, 0xc239, 0x1, 0x0);
        gbc.writeMem(0xc41c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9def, gbc.sp());
        EXPECT(0xc41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41c));
        EXPECT(0x67, gbc.readMem(0xc41d));
        // CB 67 0072
        gbc.setState(0xe281, 0x5121, 0xe310, 0xa8a4, 0x8ab2, 0x80b4, 0x0, 0x1);
        gbc.writeMem(0xe281, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5121, gbc.sp());
        EXPECT(0xe283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe281));
        EXPECT(0x67, gbc.readMem(0xe282));
        // CB 67 0073
        gbc.setState(0x3754, 0x6573, 0x6d90, 0xa5a4, 0xb6ab, 0x8d0, 0x0, 0x0);
        gbc.writeMem(0x3754, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6573, gbc.sp());
        EXPECT(0x3756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0074
        gbc.setState(0x79c7, 0x8e21, 0x6bd0, 0x97c1, 0x815c, 0xd99b, 0x0, 0x1);
        gbc.writeMem(0x79c7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8e21, gbc.sp());
        EXPECT(0x79c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0075
        gbc.setState(0x6761, 0xfce0, 0x2c50, 0x4c67, 0x7269, 0x737f, 0x0, 0x1);
        gbc.writeMem(0x6761, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfce0, gbc.sp());
        EXPECT(0x6763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0076
        gbc.setState(0xe2a6, 0xfe7d, 0x25a0, 0xf73f, 0x2ba9, 0x4df8, 0x1, 0x1);
        gbc.writeMem(0xe2a6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0xe2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a6));
        EXPECT(0x67, gbc.readMem(0xe2a7));
        // CB 67 0077
        gbc.setState(0xebf3, 0x6188, 0x5da0, 0xa624, 0x16a1, 0x112a, 0x0, 0x1);
        gbc.writeMem(0xebf3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6188, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf3));
        EXPECT(0x67, gbc.readMem(0xebf4));
        // CB 67 0079
        gbc.setState(0xb383, 0x3e69, 0xa180, 0x3516, 0xcb8a, 0xbc7d, 0x0, 0x0);
        gbc.writeMem(0xb383, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3e69, gbc.sp());
        EXPECT(0xb385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb383));
        EXPECT(0x67, gbc.readMem(0xb384));
        // CB 67 007A
        gbc.setState(0xb73e, 0x93e2, 0x51a0, 0x129f, 0x4de3, 0xce69, 0x1, 0x0);
        gbc.writeMem(0xb73e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x93e2, gbc.sp());
        EXPECT(0xb740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73e));
        EXPECT(0x67, gbc.readMem(0xb73f));
        // CB 67 007B
        gbc.setState(0x6664, 0x2e02, 0x8a20, 0xbaa2, 0xab0, 0x819e, 0x1, 0x0);
        gbc.writeMem(0x6664, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2e02, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 007C
        gbc.setState(0x54cb, 0x59dd, 0x2f30, 0x4e37, 0x6623, 0x5e5f, 0x0, 0x0);
        gbc.writeMem(0x54cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x59dd, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 007D
        gbc.setState(0xeaf9, 0x37b, 0x13d0, 0xdc5b, 0x147b, 0xcd29, 0x0, 0x1);
        gbc.writeMem(0xeaf9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0xeafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf9));
        EXPECT(0x67, gbc.readMem(0xeafa));
        // CB 67 007E
        gbc.setState(0xac05, 0x346e, 0x1b00, 0x84ca, 0xc482, 0xd0fd, 0x1, 0x1);
        gbc.writeMem(0xac05, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x346e, gbc.sp());
        EXPECT(0xac07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac05));
        EXPECT(0x67, gbc.readMem(0xac06));
        // CB 67 007F
        gbc.setState(0x4121, 0x6456, 0x8ab0, 0x859f, 0xbd53, 0x29a6, 0x1, 0x0);
        gbc.writeMem(0x4121, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6456, gbc.sp());
        EXPECT(0x4123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0080
        gbc.setState(0x6baa, 0x9f03, 0xfe0, 0xafc5, 0x8ba, 0xba1b, 0x1, 0x0);
        gbc.writeMem(0x6baa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9f03, gbc.sp());
        EXPECT(0x6bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0081
        gbc.setState(0x7147, 0x7aaf, 0xae30, 0x8065, 0x9e4a, 0x8466, 0x0, 0x0);
        gbc.writeMem(0x7147, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0x7149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0082
        gbc.setState(0xb95e, 0xaab9, 0x880, 0xa305, 0x8774, 0x2ff7, 0x1, 0x0);
        gbc.writeMem(0xb95e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaab9, gbc.sp());
        EXPECT(0xb960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95e));
        EXPECT(0x67, gbc.readMem(0xb95f));
        // CB 67 0083
        gbc.setState(0x938d, 0x83af, 0xf340, 0x7986, 0xc0b6, 0x1d35, 0x1, 0x1);
        gbc.writeMem(0x938d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0x938f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938d));
        EXPECT(0x67, gbc.readMem(0x938e));
        // CB 67 0084
        gbc.setState(0x7db4, 0x5598, 0xb090, 0x90b5, 0xbe27, 0x4098, 0x0, 0x0);
        gbc.writeMem(0x7db4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0085
        gbc.setState(0xde3a, 0x1b20, 0x38f0, 0xcf96, 0xe355, 0xf782, 0x0, 0x0);
        gbc.writeMem(0xde3a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1b20, gbc.sp());
        EXPECT(0xde3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3a));
        EXPECT(0x67, gbc.readMem(0xde3b));
        // CB 67 0086
        gbc.setState(0x4627, 0x8a73, 0x8ec0, 0xc6a4, 0xcfce, 0x2c7f, 0x0, 0x0);
        gbc.writeMem(0x4627, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8a73, gbc.sp());
        EXPECT(0x4629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0087
        gbc.setState(0xc87a, 0x17e5, 0xaaf0, 0x3f6f, 0xe414, 0x155f, 0x0, 0x1);
        gbc.writeMem(0xc87a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x17e5, gbc.sp());
        EXPECT(0xc87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87a));
        EXPECT(0x67, gbc.readMem(0xc87b));
        // CB 67 0088
        gbc.setState(0x8356, 0x69dd, 0xc90, 0xabbd, 0x1c18, 0x947f, 0x1, 0x0);
        gbc.writeMem(0x8356, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x69dd, gbc.sp());
        EXPECT(0x8358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8356));
        EXPECT(0x67, gbc.readMem(0x8357));
        // CB 67 0089
        gbc.setState(0x2262, 0x83a1, 0x29b0, 0x332, 0xf29a, 0x72a7, 0x0, 0x0);
        gbc.writeMem(0x2262, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x83a1, gbc.sp());
        EXPECT(0x2264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 008A
        gbc.setState(0x5243, 0x28be, 0x45f0, 0xbfcd, 0x4b48, 0xb964, 0x0, 0x1);
        gbc.writeMem(0x5243, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x28be, gbc.sp());
        EXPECT(0x5245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 008B
        gbc.setState(0x4ea0, 0x558b, 0x8540, 0xa453, 0xe911, 0x7dd6, 0x0, 0x1);
        gbc.writeMem(0x4ea0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x558b, gbc.sp());
        EXPECT(0x4ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 008C
        gbc.setState(0xe883, 0xd044, 0xf670, 0x1698, 0x439f, 0x8289, 0x0, 0x1);
        gbc.writeMem(0xe883, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd044, gbc.sp());
        EXPECT(0xe885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe883));
        EXPECT(0x67, gbc.readMem(0xe884));
        // CB 67 008D
        gbc.setState(0x886a, 0xd51d, 0xf2e0, 0x557f, 0x6e51, 0x2f30, 0x1, 0x1);
        gbc.writeMem(0x886a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd51d, gbc.sp());
        EXPECT(0x886c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886a));
        EXPECT(0x67, gbc.readMem(0x886b));
        // CB 67 008E
        gbc.setState(0x20e, 0x3d85, 0xde20, 0x72d6, 0xcfb0, 0x44ec, 0x1, 0x1);
        gbc.writeMem(0x20e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3d85, gbc.sp());
        EXPECT(0x210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 008F
        gbc.setState(0xf4d, 0xfb3b, 0x5470, 0xd33, 0x5ebd, 0xa25e, 0x0, 0x1);
        gbc.writeMem(0xf4d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfb3b, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0090
        gbc.setState(0xd808, 0xbaad, 0x8e80, 0x6ef5, 0x14bb, 0x7641, 0x0, 0x1);
        gbc.writeMem(0xd808, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbaad, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd808));
        EXPECT(0x67, gbc.readMem(0xd809));
        // CB 67 0092
        gbc.setState(0x1fe7, 0x2c80, 0x4360, 0x926f, 0x32a9, 0x80f6, 0x0, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2c80, gbc.sp());
        EXPECT(0x1fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0093
        gbc.setState(0x4b8, 0xa983, 0x28f0, 0xf50d, 0xaf40, 0x3c60, 0x0, 0x1);
        gbc.writeMem(0x4b8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa983, gbc.sp());
        EXPECT(0x4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0094
        gbc.setState(0x3910, 0x6c67, 0x5760, 0x3700, 0x20a0, 0x985b, 0x1, 0x1);
        gbc.writeMem(0x3910, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6c67, gbc.sp());
        EXPECT(0x3912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0095
        gbc.setState(0xbbed, 0x9074, 0xc770, 0x4f30, 0xf50c, 0x4cae, 0x0, 0x0);
        gbc.writeMem(0xbbed, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9074, gbc.sp());
        EXPECT(0xbbef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbed));
        EXPECT(0x67, gbc.readMem(0xbbee));
        // CB 67 0096
        gbc.setState(0x58ad, 0x30a0, 0xc540, 0x8a1b, 0x2941, 0x1c8c, 0x1, 0x1);
        gbc.writeMem(0x58ad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x30a0, gbc.sp());
        EXPECT(0x58af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0097
        gbc.setState(0x4f37, 0x51db, 0x7530, 0xc784, 0x86ae, 0x124c, 0x1, 0x1);
        gbc.writeMem(0x4f37, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0x4f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0098
        gbc.setState(0x71f, 0xaffe, 0x4320, 0x4098, 0x212, 0xeb1b, 0x0, 0x0);
        gbc.writeMem(0x71f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaffe, gbc.sp());
        EXPECT(0x721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0099
        gbc.setState(0xd2e3, 0xd543, 0x4000, 0x360c, 0x7cff, 0xf4b9, 0x0, 0x1);
        gbc.writeMem(0xd2e3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd543, gbc.sp());
        EXPECT(0xd2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e3));
        EXPECT(0x67, gbc.readMem(0xd2e4));
        // CB 67 009B
        gbc.setState(0x5bf1, 0x8ac6, 0x1c30, 0xc61e, 0x459c, 0x335e, 0x0, 0x1);
        gbc.writeMem(0x5bf1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8ac6, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 009D
        gbc.setState(0x5673, 0x5266, 0x15a0, 0xcdce, 0x910a, 0x4eb4, 0x0, 0x1);
        gbc.writeMem(0x5673, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5266, gbc.sp());
        EXPECT(0x5675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 009E
        gbc.setState(0xcef5, 0xe9bf, 0x23c0, 0x2cd9, 0xd8ce, 0x2fd7, 0x0, 0x0);
        gbc.writeMem(0xcef5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe9bf, gbc.sp());
        EXPECT(0xcef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef5));
        EXPECT(0x67, gbc.readMem(0xcef6));
        // CB 67 009F
        gbc.setState(0x4e58, 0x7435, 0xc470, 0xd6f7, 0xb783, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x4e58, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7435, gbc.sp());
        EXPECT(0x4e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00A0
        gbc.setState(0x9183, 0x668e, 0xc5e0, 0xee80, 0x64a2, 0x680a, 0x1, 0x0);
        gbc.writeMem(0x9183, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x668e, gbc.sp());
        EXPECT(0x9185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9183));
        EXPECT(0x67, gbc.readMem(0x9184));
        // CB 67 00A2
        gbc.setState(0xef1b, 0x4b88, 0x2b20, 0x6654, 0x550a, 0xb1dd, 0x0, 0x0);
        gbc.writeMem(0xef1b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4b88, gbc.sp());
        EXPECT(0xef1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1b));
        EXPECT(0x67, gbc.readMem(0xef1c));
        // CB 67 00A3
        gbc.setState(0x8991, 0x646f, 0xe620, 0xecaf, 0x2b8b, 0x35d2, 0x0, 0x0);
        gbc.writeMem(0x8991, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0x8993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8991));
        EXPECT(0x67, gbc.readMem(0x8992));
        // CB 67 00A4
        gbc.setState(0x3fa8, 0x3ec6, 0xd710, 0x660b, 0x975f, 0x3ea3, 0x0, 0x1);
        gbc.writeMem(0x3fa8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3ec6, gbc.sp());
        EXPECT(0x3faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00A5
        gbc.setState(0x7978, 0x7a5f, 0xba50, 0x97f1, 0x3448, 0x56f1, 0x0, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7a5f, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00A6
        gbc.setState(0xc3ef, 0x66, 0x9200, 0x16d4, 0x344f, 0xe393, 0x1, 0x0);
        gbc.writeMem(0xc3ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x66, gbc.sp());
        EXPECT(0xc3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ef));
        EXPECT(0x67, gbc.readMem(0xc3f0));
        // CB 67 00A7
        gbc.setState(0x6095, 0xf546, 0x1110, 0x36bb, 0xb78, 0x7f18, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf546, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00A8
        gbc.setState(0x5ef3, 0xdc1f, 0xd900, 0x50e6, 0xc580, 0x9c7c, 0x0, 0x0);
        gbc.writeMem(0x5ef3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdc1f, gbc.sp());
        EXPECT(0x5ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00A9
        gbc.setState(0x5c38, 0xf75c, 0x83d0, 0x1926, 0x7397, 0xac31, 0x1, 0x0);
        gbc.writeMem(0x5c38, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf75c, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00AA
        gbc.setState(0xe1c8, 0xb3c6, 0xf4c0, 0x5850, 0xb1ab, 0xe904, 0x0, 0x0);
        gbc.writeMem(0xe1c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb3c6, gbc.sp());
        EXPECT(0xe1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c8));
        EXPECT(0x67, gbc.readMem(0xe1c9));
        // CB 67 00AB
        gbc.setState(0x843b, 0xe8e6, 0xa50, 0x4ff9, 0x8686, 0xd78e, 0x0, 0x1);
        gbc.writeMem(0x843b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe8e6, gbc.sp());
        EXPECT(0x843d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843b));
        EXPECT(0x67, gbc.readMem(0x843c));
        // CB 67 00AC
        gbc.setState(0xd252, 0xb5ea, 0xc880, 0x9f1, 0x70e6, 0xa6b1, 0x1, 0x1);
        gbc.writeMem(0xd252, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb5ea, gbc.sp());
        EXPECT(0xd254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd252));
        EXPECT(0x67, gbc.readMem(0xd253));
        // CB 67 00AD
        gbc.setState(0x4d3d, 0xfa54, 0x8940, 0x2884, 0xa386, 0xd48b, 0x1, 0x0);
        gbc.writeMem(0x4d3d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfa54, gbc.sp());
        EXPECT(0x4d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00AE
        gbc.setState(0xbee6, 0x9f25, 0x8b90, 0x996f, 0x524f, 0xd954, 0x1, 0x0);
        gbc.writeMem(0xbee6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9f25, gbc.sp());
        EXPECT(0xbee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee6));
        EXPECT(0x67, gbc.readMem(0xbee7));
        // CB 67 00AF
        gbc.setState(0x8132, 0xc9ff, 0x28f0, 0x8f30, 0xe547, 0xe938, 0x1, 0x1);
        gbc.writeMem(0x8132, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc9ff, gbc.sp());
        EXPECT(0x8134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8132));
        EXPECT(0x67, gbc.readMem(0x8133));
        // CB 67 00B0
        gbc.setState(0x89b4, 0x80aa, 0x5280, 0xdba5, 0x246c, 0x515f, 0x1, 0x0);
        gbc.writeMem(0x89b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x80aa, gbc.sp());
        EXPECT(0x89b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b4));
        EXPECT(0x67, gbc.readMem(0x89b5));
        // CB 67 00B1
        gbc.setState(0x6019, 0xd019, 0x6770, 0xf681, 0x4330, 0x489e, 0x1, 0x0);
        gbc.writeMem(0x6019, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0x601b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00B2
        gbc.setState(0x1d1f, 0xead1, 0x57d0, 0xde95, 0x717, 0xd7af, 0x1, 0x1);
        gbc.writeMem(0x1d1f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0x1d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00B3
        gbc.setState(0x9d88, 0x9643, 0x4820, 0xfcfe, 0x7bbc, 0x7ad5, 0x0, 0x0);
        gbc.writeMem(0x9d88, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0x9d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d88));
        EXPECT(0x67, gbc.readMem(0x9d89));
        // CB 67 00B4
        gbc.setState(0xe856, 0x5b62, 0xdf20, 0x3b85, 0xb7b1, 0x98de, 0x0, 0x0);
        gbc.writeMem(0xe856, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xe858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe856));
        EXPECT(0x67, gbc.readMem(0xe857));
        // CB 67 00B5
        gbc.setState(0xa874, 0x3d7e, 0x40c0, 0xcb22, 0xda27, 0xd2d7, 0x1, 0x0);
        gbc.writeMem(0xa874, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3d7e, gbc.sp());
        EXPECT(0xa876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa874));
        EXPECT(0x67, gbc.readMem(0xa875));
        // CB 67 00B6
        gbc.setState(0xc954, 0xf48c, 0xb4e0, 0xaed, 0x4fe, 0x73db, 0x0, 0x0);
        gbc.writeMem(0xc954, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf48c, gbc.sp());
        EXPECT(0xc956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc954));
        EXPECT(0x67, gbc.readMem(0xc955));
        // CB 67 00B7
        gbc.setState(0x69c1, 0xd23b, 0x33e0, 0xfecb, 0x20d0, 0x54b7, 0x0, 0x1);
        gbc.writeMem(0x69c1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd23b, gbc.sp());
        EXPECT(0x69c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00B8
        gbc.setState(0x7ea8, 0x351, 0x4b60, 0x3b79, 0xe838, 0xa81f, 0x1, 0x1);
        gbc.writeMem(0x7ea8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00B9
        gbc.setState(0x3d5e, 0x8fda, 0xa1e0, 0xf764, 0x1a6c, 0xd934, 0x1, 0x1);
        gbc.writeMem(0x3d5e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8fda, gbc.sp());
        EXPECT(0x3d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00BA
        gbc.setState(0xf43, 0x802a, 0x36f0, 0x2c7b, 0x1ae7, 0xf0c6, 0x0, 0x1);
        gbc.writeMem(0xf43, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x802a, gbc.sp());
        EXPECT(0xf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00BC
        gbc.setState(0xdf6, 0x78e9, 0xd210, 0x2c8b, 0x2e25, 0x8444, 0x0, 0x0);
        gbc.writeMem(0xdf6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x78e9, gbc.sp());
        EXPECT(0xdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00BD
        gbc.setState(0xbff0, 0xfda8, 0x9330, 0x8d16, 0x9dbe, 0xccda, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfda8, gbc.sp());
        EXPECT(0xbff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff0));
        EXPECT(0x67, gbc.readMem(0xbff1));
        // CB 67 00BE
        gbc.setState(0x5fd2, 0x5825, 0xb050, 0x27ef, 0x8845, 0x88e4, 0x1, 0x1);
        gbc.writeMem(0x5fd2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x5fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00BF
        gbc.setState(0x425d, 0x7456, 0x7bc0, 0x1877, 0x14f5, 0xb80e, 0x0, 0x1);
        gbc.writeMem(0x425d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7456, gbc.sp());
        EXPECT(0x425f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00C0
        gbc.setState(0x5af9, 0x2c45, 0x7220, 0xd59a, 0x5161, 0x5268, 0x0, 0x0);
        gbc.writeMem(0x5af9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2c45, gbc.sp());
        EXPECT(0x5afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00C1
        gbc.setState(0x447d, 0xdfb5, 0x4a0, 0x10bf, 0x66ab, 0x6459, 0x1, 0x1);
        gbc.writeMem(0x447d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdfb5, gbc.sp());
        EXPECT(0x447f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00C2
        gbc.setState(0x5427, 0xd0a8, 0xb410, 0x92b, 0x1de5, 0x2c4b, 0x0, 0x0);
        gbc.writeMem(0x5427, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd0a8, gbc.sp());
        EXPECT(0x5429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00C3
        gbc.setState(0x8bb8, 0x1699, 0x6720, 0x9f82, 0x318c, 0x2317, 0x0, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb8));
        EXPECT(0x67, gbc.readMem(0x8bb9));
        // CB 67 00C4
        gbc.setState(0x699b, 0x7783, 0x2df0, 0x8f12, 0x1a38, 0x750d, 0x0, 0x0);
        gbc.writeMem(0x699b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7783, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00C6
        gbc.setState(0xc2b3, 0xf400, 0x1bb0, 0x18f4, 0x162, 0xfa49, 0x1, 0x0);
        gbc.writeMem(0xc2b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf400, gbc.sp());
        EXPECT(0xc2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b3));
        EXPECT(0x67, gbc.readMem(0xc2b4));
        // CB 67 00C7
        gbc.setState(0xd31d, 0x3e8b, 0x8f50, 0x3e92, 0x5599, 0x573d, 0x0, 0x1);
        gbc.writeMem(0xd31d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0xd31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31d));
        EXPECT(0x67, gbc.readMem(0xd31e));
        // CB 67 00C8
        gbc.setState(0x6d2e, 0x4cb7, 0xc1c0, 0x274f, 0x6c14, 0x6a27, 0x0, 0x1);
        gbc.writeMem(0x6d2e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4cb7, gbc.sp());
        EXPECT(0x6d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00C9
        gbc.setState(0xeee5, 0x15e6, 0x3b00, 0x81f7, 0xd79b, 0xde64, 0x0, 0x1);
        gbc.writeMem(0xeee5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x15e6, gbc.sp());
        EXPECT(0xeee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee5));
        EXPECT(0x67, gbc.readMem(0xeee6));
        // CB 67 00CA
        gbc.setState(0x2b13, 0x8ca2, 0xf160, 0x8097, 0x6bed, 0x8152, 0x1, 0x1);
        gbc.writeMem(0x2b13, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8ca2, gbc.sp());
        EXPECT(0x2b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00CB
        gbc.setState(0xadd, 0xb38, 0x7120, 0x13eb, 0x7275, 0x9819, 0x0, 0x1);
        gbc.writeMem(0xadd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0xadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00CC
        gbc.setState(0x9cf4, 0x5a7e, 0x25c0, 0xf68d, 0x70c0, 0xb4f4, 0x0, 0x0);
        gbc.writeMem(0x9cf4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5a7e, gbc.sp());
        EXPECT(0x9cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf4));
        EXPECT(0x67, gbc.readMem(0x9cf5));
        // CB 67 00CD
        gbc.setState(0x33af, 0xf490, 0x72b0, 0x950e, 0x3e17, 0x14e2, 0x0, 0x0);
        gbc.writeMem(0x33af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf490, gbc.sp());
        EXPECT(0x33b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00CE
        gbc.setState(0xd650, 0xa3a8, 0x15a0, 0x7243, 0xa6b9, 0x94ee, 0x0, 0x1);
        gbc.writeMem(0xd650, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa3a8, gbc.sp());
        EXPECT(0xd652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd650));
        EXPECT(0x67, gbc.readMem(0xd651));
        // CB 67 00CF
        gbc.setState(0x51c5, 0xa6fa, 0xbeb0, 0x3091, 0xbd71, 0x6f28, 0x0, 0x0);
        gbc.writeMem(0x51c5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa6fa, gbc.sp());
        EXPECT(0x51c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00D0
        gbc.setState(0xa0d7, 0x257f, 0x4250, 0x69ec, 0x5c7f, 0x58be, 0x1, 0x0);
        gbc.writeMem(0xa0d7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x257f, gbc.sp());
        EXPECT(0xa0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d7));
        EXPECT(0x67, gbc.readMem(0xa0d8));
        // CB 67 00D1
        gbc.setState(0x7238, 0xf6b9, 0x6760, 0xdd70, 0xfad7, 0x55b0, 0x1, 0x1);
        gbc.writeMem(0x7238, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf6b9, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00D2
        gbc.setState(0xee8f, 0x73f4, 0xf2f0, 0xfdc5, 0x5a12, 0x359a, 0x1, 0x0);
        gbc.writeMem(0xee8f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x73f4, gbc.sp());
        EXPECT(0xee91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8f));
        EXPECT(0x67, gbc.readMem(0xee90));
        // CB 67 00D3
        gbc.setState(0x85f, 0xe239, 0xeb0, 0x522c, 0x98f3, 0xbeb6, 0x1, 0x0);
        gbc.writeMem(0x85f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe239, gbc.sp());
        EXPECT(0x861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00D4
        gbc.setState(0x98bf, 0x1d40, 0x9f70, 0x1bf4, 0x7312, 0xb17, 0x0, 0x0);
        gbc.writeMem(0x98bf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1d40, gbc.sp());
        EXPECT(0x98c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bf));
        EXPECT(0x67, gbc.readMem(0x98c0));
        // CB 67 00D5
        gbc.setState(0x18bc, 0xae24, 0x6ac0, 0x819, 0x6ae, 0x845f, 0x0, 0x0);
        gbc.writeMem(0x18bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xae24, gbc.sp());
        EXPECT(0x18be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00D6
        gbc.setState(0x8b02, 0xb1b0, 0x7bb0, 0x6ab9, 0xa63f, 0x45a7, 0x0, 0x1);
        gbc.writeMem(0x8b02, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb1b0, gbc.sp());
        EXPECT(0x8b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b02));
        EXPECT(0x67, gbc.readMem(0x8b03));
        // CB 67 00D7
        gbc.setState(0xaafe, 0x78c8, 0xe3e0, 0x4faf, 0xff35, 0x29c1, 0x1, 0x0);
        gbc.writeMem(0xaafe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x78c8, gbc.sp());
        EXPECT(0xab00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafe));
        EXPECT(0x67, gbc.readMem(0xaaff));
        // CB 67 00D8
        gbc.setState(0x3da9, 0x70da, 0xef30, 0x852c, 0xc17b, 0x751a, 0x1, 0x0);
        gbc.writeMem(0x3da9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x70da, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00D9
        gbc.setState(0x90bb, 0xb95b, 0xca10, 0xddc9, 0xc78, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x90bb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb95b, gbc.sp());
        EXPECT(0x90bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90bb));
        EXPECT(0x67, gbc.readMem(0x90bc));
        // CB 67 00DA
        gbc.setState(0xed9, 0xb566, 0xee80, 0xda7, 0x7f49, 0x6e20, 0x0, 0x0);
        gbc.writeMem(0xed9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb566, gbc.sp());
        EXPECT(0xedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00DB
        gbc.setState(0xe36d, 0x677c, 0xc4e0, 0xb3ef, 0xd759, 0xafb9, 0x0, 0x0);
        gbc.writeMem(0xe36d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0xe36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36d));
        EXPECT(0x67, gbc.readMem(0xe36e));
        // CB 67 00DD
        gbc.setState(0x62, 0xe2b8, 0x7e20, 0x1f81, 0x8ddb, 0x20da, 0x1, 0x1);
        gbc.writeMem(0x62, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe2b8, gbc.sp());
        EXPECT(0x64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00DE
        gbc.setState(0xd863, 0xd66, 0x8ca0, 0xa044, 0x2e98, 0xed4, 0x0, 0x1);
        gbc.writeMem(0xd863, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd66, gbc.sp());
        EXPECT(0xd865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd863));
        EXPECT(0x67, gbc.readMem(0xd864));
        // CB 67 00DF
        gbc.setState(0x6434, 0xd5e6, 0xbf50, 0x33eb, 0x44af, 0xd4cc, 0x1, 0x1);
        gbc.writeMem(0x6434, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0x6436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00E0
        gbc.setState(0xb4b3, 0x23e6, 0x75b0, 0x5881, 0x5b46, 0xacea, 0x0, 0x0);
        gbc.writeMem(0xb4b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x23e6, gbc.sp());
        EXPECT(0xb4b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b3));
        EXPECT(0x67, gbc.readMem(0xb4b4));
        // CB 67 00E1
        gbc.setState(0xc5d0, 0x2625, 0x23b0, 0xd2ec, 0xd505, 0xc356, 0x0, 0x0);
        gbc.writeMem(0xc5d0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2625, gbc.sp());
        EXPECT(0xc5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d0));
        EXPECT(0x67, gbc.readMem(0xc5d1));
        // CB 67 00E2
        gbc.setState(0x3ba7, 0xfa64, 0x36c0, 0x7295, 0xf814, 0x440f, 0x1, 0x1);
        gbc.writeMem(0x3ba7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfa64, gbc.sp());
        EXPECT(0x3ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00E3
        gbc.setState(0xccad, 0x1508, 0x25b0, 0xdd19, 0x2e12, 0xa6a8, 0x0, 0x0);
        gbc.writeMem(0xccad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1508, gbc.sp());
        EXPECT(0xccaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccad));
        EXPECT(0x67, gbc.readMem(0xccae));
        // CB 67 00E4
        gbc.setState(0x5ce0, 0xc84, 0x1ba0, 0x40f5, 0xf7b8, 0x22d1, 0x0, 0x1);
        gbc.writeMem(0x5ce0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc84, gbc.sp());
        EXPECT(0x5ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00E5
        gbc.setState(0x278f, 0xe3af, 0xc320, 0x735a, 0x65d, 0x939, 0x1, 0x1);
        gbc.writeMem(0x278f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe3af, gbc.sp());
        EXPECT(0x2791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00E6
        gbc.setState(0xa58e, 0xadd0, 0x86f0, 0x9114, 0x37ac, 0xa9a8, 0x1, 0x1);
        gbc.writeMem(0xa58e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xadd0, gbc.sp());
        EXPECT(0xa590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58e));
        EXPECT(0x67, gbc.readMem(0xa58f));
        // CB 67 00E7
        gbc.setState(0x93e, 0xed2e, 0x1380, 0x5a5e, 0xb142, 0x7cc5, 0x1, 0x1);
        gbc.writeMem(0x93e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xed2e, gbc.sp());
        EXPECT(0x940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00E8
        gbc.setState(0x59b4, 0xd15f, 0x7940, 0x7918, 0xa2d, 0x10cb, 0x1, 0x1);
        gbc.writeMem(0x59b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd15f, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00E9
        gbc.setState(0x4dac, 0xfceb, 0x56c0, 0x64f6, 0x27aa, 0x374f, 0x1, 0x0);
        gbc.writeMem(0x4dac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfceb, gbc.sp());
        EXPECT(0x4dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00EA
        gbc.setState(0x3b, 0x2d45, 0x8aa0, 0xa880, 0x48ff, 0x1a7f, 0x1, 0x1);
        gbc.writeMem(0x3b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2d45, gbc.sp());
        EXPECT(0x3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00EB
        gbc.setState(0xdb70, 0xc532, 0xffa0, 0x422f, 0x7d00, 0x34ab, 0x1, 0x0);
        gbc.writeMem(0xdb70, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc532, gbc.sp());
        EXPECT(0xdb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb70));
        EXPECT(0x67, gbc.readMem(0xdb71));
        // CB 67 00EC
        gbc.setState(0x8c8c, 0xd531, 0xca0, 0xf60d, 0xb02b, 0x2542, 0x1, 0x0);
        gbc.writeMem(0x8c8c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd531, gbc.sp());
        EXPECT(0x8c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8c));
        EXPECT(0x67, gbc.readMem(0x8c8d));
        // CB 67 00ED
        gbc.setState(0x108c, 0xd53d, 0x3c10, 0x90, 0xeaa4, 0xf28c, 0x1, 0x0);
        gbc.writeMem(0x108c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd53d, gbc.sp());
        EXPECT(0x108e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00EE
        gbc.setState(0xb65, 0xf747, 0xad80, 0xbad4, 0x4c6a, 0x84e9, 0x0, 0x1);
        gbc.writeMem(0xb65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0xb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00EF
        gbc.setState(0x1adb, 0x5fd8, 0x28d0, 0x3914, 0x3481, 0xf5ba, 0x0, 0x1);
        gbc.writeMem(0x1adb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5fd8, gbc.sp());
        EXPECT(0x1add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00F0
        gbc.setState(0x3b00, 0xdea6, 0xcc70, 0x4d36, 0x3e66, 0xa16e, 0x0, 0x0);
        gbc.writeMem(0x3b00, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdea6, gbc.sp());
        EXPECT(0x3b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00F1
        gbc.setState(0x24ba, 0x69b1, 0x12c0, 0xba39, 0x3abe, 0x8b61, 0x1, 0x1);
        gbc.writeMem(0x24ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x69b1, gbc.sp());
        EXPECT(0x24bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00F2
        gbc.setState(0x56be, 0x8dcc, 0x8eb0, 0x353e, 0x59e2, 0xb1c, 0x0, 0x0);
        gbc.writeMem(0x56be, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8dcc, gbc.sp());
        EXPECT(0x56c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00F3
        gbc.setState(0x89ac, 0x8ae5, 0xed0, 0x18f0, 0x8a4b, 0x97ad, 0x1, 0x0);
        gbc.writeMem(0x89ac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8ae5, gbc.sp());
        EXPECT(0x89ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ac));
        EXPECT(0x67, gbc.readMem(0x89ad));
        // CB 67 00F4
        gbc.setState(0x5efd, 0xa437, 0xfc30, 0x4c03, 0xea47, 0x64fc, 0x0, 0x0);
        gbc.writeMem(0x5efd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00F5
        gbc.setState(0xa0f4, 0xfa3d, 0x6110, 0xd57c, 0xa923, 0x4f23, 0x0, 0x1);
        gbc.writeMem(0xa0f4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfa3d, gbc.sp());
        EXPECT(0xa0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f4));
        EXPECT(0x67, gbc.readMem(0xa0f5));
        // CB 67 00F6
        gbc.setState(0x3543, 0x88a0, 0x7c90, 0x8e87, 0x9183, 0x1cff, 0x1, 0x0);
        gbc.writeMem(0x3543, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x88a0, gbc.sp());
        EXPECT(0x3545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00F7
        gbc.setState(0x30dc, 0xb944, 0x9d30, 0x834, 0xd558, 0x902c, 0x0, 0x1);
        gbc.writeMem(0x30dc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb944, gbc.sp());
        EXPECT(0x30de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00F8
        gbc.setState(0x5d3, 0x77ed, 0xf480, 0x7dfa, 0x6584, 0xfa7d, 0x0, 0x1);
        gbc.writeMem(0x5d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0x5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00F9
        gbc.setState(0x3770, 0x6317, 0xba70, 0xb527, 0x4887, 0x8536, 0x1, 0x0);
        gbc.writeMem(0x3770, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6317, gbc.sp());
        EXPECT(0x3772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00FA
        gbc.setState(0x886f, 0x7ac5, 0x3cf0, 0xebed, 0x14e7, 0x7396, 0x0, 0x0);
        gbc.writeMem(0x886f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7ac5, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886f));
        EXPECT(0x67, gbc.readMem(0x8870));
        // CB 67 00FC
        gbc.setState(0x35c7, 0xb332, 0x9ce0, 0x2130, 0xa803, 0x4b17, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x35c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00FD
        gbc.setState(0x256, 0x986c, 0x56f0, 0x97c7, 0x1062, 0x138, 0x0, 0x1);
        gbc.writeMem(0x256, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x986c, gbc.sp());
        EXPECT(0x258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 00FE
        gbc.setState(0x3cf2, 0xe6f7, 0x1280, 0xfd52, 0xb192, 0xb8bc, 0x1, 0x1);
        gbc.writeMem(0x3cf2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe6f7, gbc.sp());
        EXPECT(0x3cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 00FF
        gbc.setState(0xd11b, 0x9e6, 0xef40, 0x2a3f, 0x4023, 0xbaab, 0x0, 0x1);
        gbc.writeMem(0xd11b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0xd11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11b));
        EXPECT(0x67, gbc.readMem(0xd11c));
        // CB 67 0100
        gbc.setState(0xa75, 0x4048, 0x8340, 0x8df1, 0xe2fc, 0xdb7b, 0x1, 0x0);
        gbc.writeMem(0xa75, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4048, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0101
        gbc.setState(0x2736, 0x781b, 0x4870, 0xdbf9, 0xf57b, 0xc703, 0x1, 0x0);
        gbc.writeMem(0x2736, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x781b, gbc.sp());
        EXPECT(0x2738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0102
        gbc.setState(0x2ed3, 0x466b, 0x1270, 0xee7f, 0x9975, 0x92b0, 0x1, 0x0);
        gbc.writeMem(0x2ed3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x466b, gbc.sp());
        EXPECT(0x2ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0104
        gbc.setState(0xe0bc, 0x9327, 0xcbc0, 0xa4f0, 0x2871, 0x379a, 0x1, 0x0);
        gbc.writeMem(0xe0bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9327, gbc.sp());
        EXPECT(0xe0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bc));
        EXPECT(0x67, gbc.readMem(0xe0bd));
        // CB 67 0105
        gbc.setState(0x47ad, 0x7c2f, 0xca80, 0xaa33, 0x561e, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x47ad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c2f, gbc.sp());
        EXPECT(0x47af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0106
        gbc.setState(0x502f, 0xd7c5, 0x3f90, 0xc61b, 0x8957, 0xc55d, 0x0, 0x1);
        gbc.writeMem(0x502f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0x5031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0107
        gbc.setState(0x3b38, 0xed1d, 0x1c70, 0x1f2a, 0xae6d, 0x8fc8, 0x1, 0x1);
        gbc.writeMem(0x3b38, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xed1d, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0108
        gbc.setState(0x9502, 0x936, 0x6c90, 0xcc21, 0x84, 0x57ab, 0x1, 0x0);
        gbc.writeMem(0x9502, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x936, gbc.sp());
        EXPECT(0x9504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9502));
        EXPECT(0x67, gbc.readMem(0x9503));
        // CB 67 0109
        gbc.setState(0x43de, 0x9e4c, 0xd320, 0x1a9c, 0xd8e2, 0x31df, 0x0, 0x1);
        gbc.writeMem(0x43de, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9e4c, gbc.sp());
        EXPECT(0x43e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 010A
        gbc.setState(0x349c, 0xe008, 0xf000, 0xc2fd, 0xeca8, 0x5a2d, 0x0, 0x0);
        gbc.writeMem(0x349c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe008, gbc.sp());
        EXPECT(0x349e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 010B
        gbc.setState(0xc058, 0x2466, 0x2da0, 0xff23, 0xc4c0, 0x73b6, 0x0, 0x1);
        gbc.writeMem(0xc058, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0xc05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc058));
        EXPECT(0x67, gbc.readMem(0xc059));
        // CB 67 010C
        gbc.setState(0x282f, 0xd819, 0x1710, 0x3411, 0x9037, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0x282f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd819, gbc.sp());
        EXPECT(0x2831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 010D
        gbc.setState(0x92a6, 0xaaf9, 0xfb60, 0x8809, 0x9701, 0xacb8, 0x1, 0x0);
        gbc.writeMem(0x92a6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaaf9, gbc.sp());
        EXPECT(0x92a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a6));
        EXPECT(0x67, gbc.readMem(0x92a7));
        // CB 67 010E
        gbc.setState(0xc6e6, 0x9547, 0xb7c0, 0x448e, 0x92ae, 0xa027, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xc6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e6));
        EXPECT(0x67, gbc.readMem(0xc6e7));
        // CB 67 010F
        gbc.setState(0x1c6b, 0x97b5, 0xf450, 0xf4d1, 0x3bf0, 0x420d, 0x0, 0x0);
        gbc.writeMem(0x1c6b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x97b5, gbc.sp());
        EXPECT(0x1c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0110
        gbc.setState(0xec31, 0x72af, 0xc540, 0x67e1, 0x47bb, 0x6c7a, 0x1, 0x0);
        gbc.writeMem(0xec31, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x72af, gbc.sp());
        EXPECT(0xec33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec31));
        EXPECT(0x67, gbc.readMem(0xec32));
        // CB 67 0111
        gbc.setState(0x9be7, 0x2182, 0xa780, 0x2880, 0x3858, 0x7db8, 0x0, 0x1);
        gbc.writeMem(0x9be7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0x9be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be7));
        EXPECT(0x67, gbc.readMem(0x9be8));
        // CB 67 0112
        gbc.setState(0x5f2f, 0xe7df, 0xfb60, 0x551d, 0xc92e, 0xdce, 0x1, 0x1);
        gbc.writeMem(0x5f2f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe7df, gbc.sp());
        EXPECT(0x5f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0113
        gbc.setState(0xaa4, 0x92cf, 0x1ab0, 0xb15b, 0xd823, 0x2c6f, 0x1, 0x1);
        gbc.writeMem(0xaa4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x92cf, gbc.sp());
        EXPECT(0xaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0114
        gbc.setState(0x5014, 0xf422, 0x2300, 0xd968, 0xed54, 0xf51f, 0x1, 0x0);
        gbc.writeMem(0x5014, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf422, gbc.sp());
        EXPECT(0x5016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0116
        gbc.setState(0xaddf, 0x8456, 0x7ac0, 0x382c, 0xfccb, 0x7d3d, 0x1, 0x0);
        gbc.writeMem(0xaddf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8456, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddf));
        EXPECT(0x67, gbc.readMem(0xade0));
        // CB 67 0117
        gbc.setState(0x4b5e, 0xd3c1, 0xc3b0, 0xf295, 0xabea, 0x884d, 0x1, 0x0);
        gbc.writeMem(0x4b5e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd3c1, gbc.sp());
        EXPECT(0x4b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0118
        gbc.setState(0x4eee, 0xb372, 0x8b50, 0x2db3, 0x345b, 0xf709, 0x1, 0x0);
        gbc.writeMem(0x4eee, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb372, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0119
        gbc.setState(0x6ae2, 0x36c8, 0x9b50, 0x935e, 0x11c1, 0x1152, 0x0, 0x0);
        gbc.writeMem(0x6ae2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x36c8, gbc.sp());
        EXPECT(0x6ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 011A
        gbc.setState(0x8166, 0xb7e, 0x90f0, 0xc5dd, 0x4ec0, 0xe9a2, 0x0, 0x0);
        gbc.writeMem(0x8166, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb7e, gbc.sp());
        EXPECT(0x8168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8166));
        EXPECT(0x67, gbc.readMem(0x8167));
        // CB 67 011B
        gbc.setState(0x68d, 0x3c1f, 0x3fb0, 0xe120, 0xb523, 0x1acc, 0x0, 0x0);
        gbc.writeMem(0x68d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3c1f, gbc.sp());
        EXPECT(0x68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 011C
        gbc.setState(0xafa0, 0x4f6a, 0xd400, 0x20a1, 0x856d, 0x886b, 0x0, 0x1);
        gbc.writeMem(0xafa0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4f6a, gbc.sp());
        EXPECT(0xafa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa0));
        EXPECT(0x67, gbc.readMem(0xafa1));
        // CB 67 011D
        gbc.setState(0x56f6, 0xc15d, 0x9720, 0x6b5b, 0x5233, 0x3234, 0x0, 0x1);
        gbc.writeMem(0x56f6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc15d, gbc.sp());
        EXPECT(0x56f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 011E
        gbc.setState(0x761e, 0x756, 0xa90, 0xffcb, 0xdfa9, 0x7c8e, 0x0, 0x1);
        gbc.writeMem(0x761e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0x7620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 011F
        gbc.setState(0xc61a, 0x2e99, 0xbf90, 0x27e9, 0x93ac, 0x8a7c, 0x0, 0x1);
        gbc.writeMem(0xc61a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2e99, gbc.sp());
        EXPECT(0xc61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61a));
        EXPECT(0x67, gbc.readMem(0xc61b));
        // CB 67 0120
        gbc.setState(0x1601, 0xab1a, 0x3aa0, 0x2d6c, 0xaf66, 0x70d, 0x1, 0x1);
        gbc.writeMem(0x1601, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xab1a, gbc.sp());
        EXPECT(0x1603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0121
        gbc.setState(0x7720, 0x513f, 0x1710, 0x9972, 0xb6ee, 0x1ab0, 0x1, 0x0);
        gbc.writeMem(0x7720, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x513f, gbc.sp());
        EXPECT(0x7722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0122
        gbc.setState(0x7fb3, 0xe99b, 0x5240, 0x637a, 0xa0ce, 0x4fe4, 0x0, 0x1);
        gbc.writeMem(0x7fb3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe99b, gbc.sp());
        EXPECT(0x7fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0123
        gbc.setState(0x5e17, 0x262, 0x1830, 0xd3ca, 0xb1ad, 0xb731, 0x0, 0x1);
        gbc.writeMem(0x5e17, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x262, gbc.sp());
        EXPECT(0x5e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0124
        gbc.setState(0xa58, 0x4559, 0x4ca0, 0x2e68, 0x4607, 0x14f6, 0x0, 0x0);
        gbc.writeMem(0xa58, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4559, gbc.sp());
        EXPECT(0xa5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0125
        gbc.setState(0xeaaa, 0x6ba2, 0xd8a0, 0xbdea, 0xe08f, 0x5031, 0x0, 0x0);
        gbc.writeMem(0xeaaa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6ba2, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaaa));
        EXPECT(0x67, gbc.readMem(0xeaab));
        // CB 67 0126
        gbc.setState(0x9ae4, 0x204, 0x57d0, 0xe17f, 0x754e, 0x9ff8, 0x1, 0x0);
        gbc.writeMem(0x9ae4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x204, gbc.sp());
        EXPECT(0x9ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae4));
        EXPECT(0x67, gbc.readMem(0x9ae5));
        // CB 67 0127
        gbc.setState(0xb5aa, 0xb8ab, 0xf2c0, 0xbf0d, 0xa7bb, 0x8a21, 0x1, 0x0);
        gbc.writeMem(0xb5aa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb8ab, gbc.sp());
        EXPECT(0xb5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5aa));
        EXPECT(0x67, gbc.readMem(0xb5ab));
        // CB 67 0128
        gbc.setState(0x3e3f, 0xf1ab, 0xe1f0, 0xc7b3, 0xfce5, 0xe, 0x1, 0x1);
        gbc.writeMem(0x3e3f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0x3e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0129
        gbc.setState(0x946a, 0x5d51, 0xeeb0, 0x3a2e, 0xb636, 0x40e1, 0x1, 0x0);
        gbc.writeMem(0x946a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0x946c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946a));
        EXPECT(0x67, gbc.readMem(0x946b));
        // CB 67 012A
        gbc.setState(0xc28c, 0x1a8e, 0xc6f0, 0xaaa7, 0x5e9d, 0xcd8f, 0x1, 0x0);
        gbc.writeMem(0xc28c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1a8e, gbc.sp());
        EXPECT(0xc28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28c));
        EXPECT(0x67, gbc.readMem(0xc28d));
        // CB 67 012B
        gbc.setState(0x5fae, 0x2705, 0x8510, 0xc1ff, 0xa4ba, 0x9180, 0x1, 0x1);
        gbc.writeMem(0x5fae, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2705, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 012C
        gbc.setState(0x542f, 0x5cbb, 0x2b10, 0x211a, 0xc5e3, 0x573c, 0x1, 0x0);
        gbc.writeMem(0x542f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5cbb, gbc.sp());
        EXPECT(0x5431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 012D
        gbc.setState(0x82cf, 0xb624, 0x9b50, 0xc98a, 0x9a7d, 0xeb9f, 0x0, 0x0);
        gbc.writeMem(0x82cf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb624, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cf));
        EXPECT(0x67, gbc.readMem(0x82d0));
        // CB 67 012E
        gbc.setState(0xefc7, 0xb674, 0x6a50, 0xf2b0, 0x4475, 0x93c0, 0x1, 0x1);
        gbc.writeMem(0xefc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb674, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc7));
        EXPECT(0x67, gbc.readMem(0xefc8));
        // CB 67 012F
        gbc.setState(0x91ac, 0x4aac, 0x5680, 0xa3af, 0xe06b, 0x6a76, 0x1, 0x0);
        gbc.writeMem(0x91ac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4aac, gbc.sp());
        EXPECT(0x91ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ac));
        EXPECT(0x67, gbc.readMem(0x91ad));
        // CB 67 0130
        gbc.setState(0x10d3, 0xa5b9, 0x3f0, 0xc7b7, 0xabfb, 0xe28, 0x1, 0x1);
        gbc.writeMem(0x10d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa5b9, gbc.sp());
        EXPECT(0x10d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0131
        gbc.setState(0x48b6, 0x7461, 0x1870, 0xa9f1, 0xd37a, 0x745, 0x1, 0x0);
        gbc.writeMem(0x48b6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7461, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0132
        gbc.setState(0x7d89, 0xa739, 0x8c30, 0xd3e2, 0xdbc, 0xf57e, 0x1, 0x1);
        gbc.writeMem(0x7d89, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0x7d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0133
        gbc.setState(0x94d2, 0x13df, 0x3d0, 0xb6d8, 0xc5d9, 0x932e, 0x1, 0x1);
        gbc.writeMem(0x94d2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x13df, gbc.sp());
        EXPECT(0x94d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d2));
        EXPECT(0x67, gbc.readMem(0x94d3));
        // CB 67 0134
        gbc.setState(0x6f65, 0x47af, 0x3bc0, 0xa473, 0x17dd, 0x577f, 0x1, 0x1);
        gbc.writeMem(0x6f65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x47af, gbc.sp());
        EXPECT(0x6f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0135
        gbc.setState(0x14e6, 0xdfcc, 0x23d0, 0x63e9, 0xdf68, 0x4888, 0x1, 0x1);
        gbc.writeMem(0x14e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0x14e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0136
        gbc.setState(0x4e8b, 0xb01f, 0x4de0, 0xf1a8, 0x43f4, 0x3ded, 0x1, 0x1);
        gbc.writeMem(0x4e8b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb01f, gbc.sp());
        EXPECT(0x4e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0137
        gbc.setState(0x4ec, 0x4cc2, 0x7d30, 0x3082, 0xee3f, 0xd2b8, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4cc2, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0138
        gbc.setState(0xd5d8, 0x7dd9, 0x9ef0, 0xe41e, 0xc1cc, 0x2bcf, 0x0, 0x1);
        gbc.writeMem(0xd5d8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7dd9, gbc.sp());
        EXPECT(0xd5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d8));
        EXPECT(0x67, gbc.readMem(0xd5d9));
        // CB 67 0139
        gbc.setState(0x1175, 0x5644, 0x3d90, 0x4543, 0x6da3, 0xc3f4, 0x1, 0x0);
        gbc.writeMem(0x1175, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5644, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 013A
        gbc.setState(0x7634, 0x1f6c, 0x6f00, 0x85c6, 0x416d, 0x8a4d, 0x1, 0x1);
        gbc.writeMem(0x7634, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1f6c, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 013B
        gbc.setState(0xe88d, 0x5b68, 0x8860, 0xa923, 0x22d3, 0xa73f, 0x1, 0x1);
        gbc.writeMem(0xe88d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5b68, gbc.sp());
        EXPECT(0xe88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88d));
        EXPECT(0x67, gbc.readMem(0xe88e));
        // CB 67 013C
        gbc.setState(0x291e, 0xd2ea, 0xb770, 0xe011, 0x3e90, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x291e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd2ea, gbc.sp());
        EXPECT(0x2920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 013D
        gbc.setState(0xd6c8, 0x38df, 0x9670, 0x4d9b, 0x84cb, 0x1958, 0x1, 0x1);
        gbc.writeMem(0xd6c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x38df, gbc.sp());
        EXPECT(0xd6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c8));
        EXPECT(0x67, gbc.readMem(0xd6c9));
        // CB 67 013E
        gbc.setState(0x57ce, 0x2cb0, 0xa610, 0xd22c, 0x38d3, 0x1a47, 0x0, 0x0);
        gbc.writeMem(0x57ce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2cb0, gbc.sp());
        EXPECT(0x57d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 013F
        gbc.setState(0x64fa, 0x7a9d, 0x7df0, 0xc1c9, 0xd4fa, 0x5b9e, 0x1, 0x1);
        gbc.writeMem(0x64fa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7a9d, gbc.sp());
        EXPECT(0x64fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0140
        gbc.setState(0x1b4d, 0x8746, 0xb5c0, 0x439d, 0x61e7, 0xac66, 0x1, 0x0);
        gbc.writeMem(0x1b4d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0x1b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0141
        gbc.setState(0x6b33, 0xd15d, 0x63e0, 0x279, 0xdc80, 0x2445, 0x1, 0x0);
        gbc.writeMem(0x6b33, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0x6b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0142
        gbc.setState(0x28fb, 0x891a, 0xeb30, 0x745d, 0x557e, 0x5bbb, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x891a, gbc.sp());
        EXPECT(0x28fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0143
        gbc.setState(0x318f, 0x6b28, 0xb920, 0x2bd2, 0x82b7, 0x1a60, 0x1, 0x1);
        gbc.writeMem(0x318f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6b28, gbc.sp());
        EXPECT(0x3191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0144
        gbc.setState(0xd6ae, 0x7e45, 0x3c50, 0x109d, 0x37e6, 0x3cd7, 0x0, 0x0);
        gbc.writeMem(0xd6ae, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7e45, gbc.sp());
        EXPECT(0xd6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ae));
        EXPECT(0x67, gbc.readMem(0xd6af));
        // CB 67 0145
        gbc.setState(0x7432, 0xcf9e, 0xb730, 0x99f4, 0xe3bd, 0xd3e2, 0x0, 0x1);
        gbc.writeMem(0x7432, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcf9e, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0146
        gbc.setState(0x8ac6, 0x3315, 0x4490, 0x4b80, 0x9c98, 0xdee6, 0x0, 0x0);
        gbc.writeMem(0x8ac6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3315, gbc.sp());
        EXPECT(0x8ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac6));
        EXPECT(0x67, gbc.readMem(0x8ac7));
        // CB 67 0147
        gbc.setState(0x7a13, 0x8c22, 0xd1a0, 0xda84, 0xdc03, 0xc8dc, 0x0, 0x0);
        gbc.writeMem(0x7a13, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0148
        gbc.setState(0x952b, 0x9775, 0x4a60, 0xd798, 0xa437, 0x975e, 0x1, 0x0);
        gbc.writeMem(0x952b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9775, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952b));
        EXPECT(0x67, gbc.readMem(0x952c));
        // CB 67 0149
        gbc.setState(0xc54e, 0xc0fb, 0xe1e0, 0xc2d1, 0x1229, 0xb2da, 0x1, 0x1);
        gbc.writeMem(0xc54e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc0fb, gbc.sp());
        EXPECT(0xc550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54e));
        EXPECT(0x67, gbc.readMem(0xc54f));
        // CB 67 014A
        gbc.setState(0x11ba, 0xb2c4, 0x8a20, 0x1afe, 0x2e2, 0x60b2, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb2c4, gbc.sp());
        EXPECT(0x11bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 014B
        gbc.setState(0xbb41, 0x29f9, 0xafe0, 0xf918, 0x6740, 0xddc1, 0x1, 0x1);
        gbc.writeMem(0xbb41, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x29f9, gbc.sp());
        EXPECT(0xbb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb41));
        EXPECT(0x67, gbc.readMem(0xbb42));
        // CB 67 014C
        gbc.setState(0x7f9c, 0xfbe8, 0xb5a0, 0x2a8b, 0xfba1, 0xb552, 0x0, 0x1);
        gbc.writeMem(0x7f9c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0x7f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 014D
        gbc.setState(0xe218, 0x9e47, 0x8d90, 0x5fa3, 0x6493, 0x1593, 0x0, 0x0);
        gbc.writeMem(0xe218, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9e47, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe218));
        EXPECT(0x67, gbc.readMem(0xe219));
        // CB 67 014E
        gbc.setState(0x3d6c, 0x337, 0x6c90, 0x4d59, 0xd16, 0x6915, 0x0, 0x0);
        gbc.writeMem(0x3d6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x337, gbc.sp());
        EXPECT(0x3d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 014F
        gbc.setState(0x6e31, 0xd3b4, 0x3430, 0x15ae, 0x83f1, 0xd459, 0x0, 0x0);
        gbc.writeMem(0x6e31, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd3b4, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0150
        gbc.setState(0x2573, 0x19cc, 0xb000, 0x8e4, 0x2a8c, 0xc051, 0x0, 0x0);
        gbc.writeMem(0x2573, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x19cc, gbc.sp());
        EXPECT(0x2575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0152
        gbc.setState(0x7441, 0xa4ee, 0x77b0, 0xefdd, 0x2e4a, 0x820c, 0x0, 0x0);
        gbc.writeMem(0x7441, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa4ee, gbc.sp());
        EXPECT(0x7443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0153
        gbc.setState(0x62c8, 0xc9f2, 0xa180, 0x5bd3, 0x8fc6, 0xf84f, 0x0, 0x0);
        gbc.writeMem(0x62c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc9f2, gbc.sp());
        EXPECT(0x62ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0154
        gbc.setState(0x448b, 0x97c4, 0xd3f0, 0x4243, 0x9ccb, 0xfe4, 0x1, 0x1);
        gbc.writeMem(0x448b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x97c4, gbc.sp());
        EXPECT(0x448d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0155
        gbc.setState(0x25b2, 0x38ac, 0x6e10, 0x8925, 0x37af, 0x4fed, 0x1, 0x1);
        gbc.writeMem(0x25b2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x38ac, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0156
        gbc.setState(0xb08a, 0x190, 0x4dc0, 0x5d0e, 0x5283, 0x4fb8, 0x1, 0x0);
        gbc.writeMem(0xb08a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x190, gbc.sp());
        EXPECT(0xb08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08a));
        EXPECT(0x67, gbc.readMem(0xb08b));
        // CB 67 0157
        gbc.setState(0x2eb8, 0x98ab, 0xa3a0, 0x45c0, 0xfc4a, 0xea71, 0x1, 0x1);
        gbc.writeMem(0x2eb8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x98ab, gbc.sp());
        EXPECT(0x2eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0158
        gbc.setState(0xb60f, 0x4e80, 0xfc00, 0x352f, 0x2f93, 0xe9ec, 0x0, 0x1);
        gbc.writeMem(0xb60f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0xb611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60f));
        EXPECT(0x67, gbc.readMem(0xb610));
        // CB 67 0159
        gbc.setState(0x6a13, 0x428e, 0x81a0, 0x6204, 0x4f36, 0x819c, 0x0, 0x0);
        gbc.writeMem(0x6a13, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x428e, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 015A
        gbc.setState(0xef41, 0x2797, 0x890, 0x1d2e, 0x911e, 0x4ba0, 0x0, 0x0);
        gbc.writeMem(0xef41, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2797, gbc.sp());
        EXPECT(0xef43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef41));
        EXPECT(0x67, gbc.readMem(0xef42));
        // CB 67 015B
        gbc.setState(0x61d8, 0xd341, 0x6d40, 0x885e, 0xa696, 0xfb9c, 0x0, 0x1);
        gbc.writeMem(0x61d8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd341, gbc.sp());
        EXPECT(0x61da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 015C
        gbc.setState(0x526b, 0x8fc8, 0x3150, 0x4652, 0x1959, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0x526b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0x526d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 015D
        gbc.setState(0xd733, 0x9992, 0x2bb0, 0xf7d8, 0x1120, 0x8414, 0x1, 0x1);
        gbc.writeMem(0xd733, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9992, gbc.sp());
        EXPECT(0xd735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd733));
        EXPECT(0x67, gbc.readMem(0xd734));
        // CB 67 015E
        gbc.setState(0x53cf, 0x41e2, 0xcca0, 0x6f4d, 0xe155, 0x6fa, 0x0, 0x1);
        gbc.writeMem(0x53cf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x41e2, gbc.sp());
        EXPECT(0x53d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 015F
        gbc.setState(0x573, 0xe1ce, 0xff90, 0x892c, 0x10e5, 0xe4d7, 0x1, 0x1);
        gbc.writeMem(0x573, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe1ce, gbc.sp());
        EXPECT(0x575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0160
        gbc.setState(0x78e4, 0x8cb3, 0x2860, 0xb219, 0xc6f1, 0x6c0d, 0x1, 0x0);
        gbc.writeMem(0x78e4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8cb3, gbc.sp());
        EXPECT(0x78e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0161
        gbc.setState(0xd9ec, 0x5641, 0xb140, 0x601c, 0x63f0, 0xbf1d, 0x1, 0x1);
        gbc.writeMem(0xd9ec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5641, gbc.sp());
        EXPECT(0xd9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ec));
        EXPECT(0x67, gbc.readMem(0xd9ed));
        // CB 67 0162
        gbc.setState(0xcf6d, 0xb29d, 0xc270, 0x9cbb, 0x226d, 0x4cf3, 0x1, 0x0);
        gbc.writeMem(0xcf6d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb29d, gbc.sp());
        EXPECT(0xcf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6d));
        EXPECT(0x67, gbc.readMem(0xcf6e));
        // CB 67 0163
        gbc.setState(0x7d8a, 0x98b3, 0x5c20, 0xbc9e, 0xea68, 0x18ed, 0x0, 0x1);
        gbc.writeMem(0x7d8a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x98b3, gbc.sp());
        EXPECT(0x7d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0164
        gbc.setState(0x6ee2, 0xaf10, 0x1030, 0xc520, 0x9c18, 0x679e, 0x1, 0x1);
        gbc.writeMem(0x6ee2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaf10, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0165
        gbc.setState(0xc20d, 0x5b15, 0x76c0, 0x72af, 0x818b, 0xa36, 0x1, 0x1);
        gbc.writeMem(0xc20d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5b15, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20d));
        EXPECT(0x67, gbc.readMem(0xc20e));
        // CB 67 0166
        gbc.setState(0x5708, 0xf31, 0x93b0, 0x1aea, 0x2ad9, 0x1e8a, 0x1, 0x0);
        gbc.writeMem(0x5708, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf31, gbc.sp());
        EXPECT(0x570a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0167
        gbc.setState(0x4154, 0xd7bc, 0x4260, 0x687a, 0x2c54, 0x18a9, 0x1, 0x1);
        gbc.writeMem(0x4154, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x4156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0168
        gbc.setState(0xdd64, 0x8bcb, 0x2210, 0x7b87, 0x325f, 0x46b2, 0x0, 0x0);
        gbc.writeMem(0xdd64, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8bcb, gbc.sp());
        EXPECT(0xdd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd64));
        EXPECT(0x67, gbc.readMem(0xdd65));
        // CB 67 0169
        gbc.setState(0x7e0, 0xf593, 0xab50, 0xf7a, 0xfd8a, 0xc1fb, 0x1, 0x1);
        gbc.writeMem(0x7e0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf593, gbc.sp());
        EXPECT(0x7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 016A
        gbc.setState(0x6a75, 0x5cfb, 0x9e0, 0x142a, 0x4e23, 0x1219, 0x1, 0x0);
        gbc.writeMem(0x6a75, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5cfb, gbc.sp());
        EXPECT(0x6a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 016B
        gbc.setState(0x1697, 0xf3e2, 0x8740, 0x2f82, 0x1bdc, 0xd6c2, 0x0, 0x1);
        gbc.writeMem(0x1697, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf3e2, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 016C
        gbc.setState(0x53b3, 0x40b3, 0x21b0, 0xea33, 0x84a1, 0x4b25, 0x0, 0x0);
        gbc.writeMem(0x53b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x40b3, gbc.sp());
        EXPECT(0x53b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 016D
        gbc.setState(0xb0a4, 0xddff, 0x6600, 0x770a, 0xbfc0, 0x8359, 0x1, 0x0);
        gbc.writeMem(0xb0a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xddff, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a4));
        EXPECT(0x67, gbc.readMem(0xb0a5));
        // CB 67 016E
        gbc.setState(0x81b3, 0xe254, 0x9dc0, 0x1d59, 0xee54, 0xde2c, 0x0, 0x1);
        gbc.writeMem(0x81b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe254, gbc.sp());
        EXPECT(0x81b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b3));
        EXPECT(0x67, gbc.readMem(0x81b4));
        // CB 67 016F
        gbc.setState(0xc86e, 0x9ca7, 0x3210, 0x6f60, 0x6052, 0xd6cb, 0x1, 0x1);
        gbc.writeMem(0xc86e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9ca7, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86e));
        EXPECT(0x67, gbc.readMem(0xc86f));
        // CB 67 0170
        gbc.setState(0xa3e2, 0x40b2, 0x2890, 0xa143, 0xdac3, 0x360d, 0x0, 0x0);
        gbc.writeMem(0xa3e2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x40b2, gbc.sp());
        EXPECT(0xa3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e2));
        EXPECT(0x67, gbc.readMem(0xa3e3));
        // CB 67 0171
        gbc.setState(0x2f90, 0xf73b, 0x6820, 0xf785, 0xcc28, 0xdce6, 0x1, 0x1);
        gbc.writeMem(0x2f90, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0x2f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0172
        gbc.setState(0x322e, 0xb464, 0xc630, 0xe62e, 0xcd24, 0x58d7, 0x0, 0x0);
        gbc.writeMem(0x322e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb464, gbc.sp());
        EXPECT(0x3230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0174
        gbc.setState(0xcb53, 0xc951, 0xd900, 0x30d6, 0x6180, 0xd6f3, 0x0, 0x1);
        gbc.writeMem(0xcb53, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc951, gbc.sp());
        EXPECT(0xcb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb53));
        EXPECT(0x67, gbc.readMem(0xcb54));
        // CB 67 0175
        gbc.setState(0x8483, 0xa053, 0x74b0, 0x331d, 0x8262, 0xde2f, 0x1, 0x0);
        gbc.writeMem(0x8483, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa053, gbc.sp());
        EXPECT(0x8485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8483));
        EXPECT(0x67, gbc.readMem(0x8484));
        // CB 67 0176
        gbc.setState(0x4e3e, 0x5a4, 0xb550, 0x589b, 0xaf25, 0x2f38, 0x0, 0x0);
        gbc.writeMem(0x4e3e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5a4, gbc.sp());
        EXPECT(0x4e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0177
        gbc.setState(0xb2dc, 0x8797, 0x2f30, 0xed73, 0xc094, 0xcfa2, 0x0, 0x1);
        gbc.writeMem(0xb2dc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8797, gbc.sp());
        EXPECT(0xb2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2dc));
        EXPECT(0x67, gbc.readMem(0xb2dd));
        // CB 67 0178
        gbc.setState(0x7dfe, 0xa795, 0x3d0, 0xe916, 0xefcf, 0x9634, 0x0, 0x0);
        gbc.writeMem(0x7dfe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa795, gbc.sp());
        EXPECT(0x7e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0179
        gbc.setState(0xbce2, 0xeac0, 0xacf0, 0x928b, 0x196e, 0xbe7b, 0x1, 0x0);
        gbc.writeMem(0xbce2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeac0, gbc.sp());
        EXPECT(0xbce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce2));
        EXPECT(0x67, gbc.readMem(0xbce3));
        // CB 67 017A
        gbc.setState(0x933e, 0x8230, 0x9310, 0xed73, 0xcb9d, 0x9e8d, 0x1, 0x0);
        gbc.writeMem(0x933e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8230, gbc.sp());
        EXPECT(0x9340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933e));
        EXPECT(0x67, gbc.readMem(0x933f));
        // CB 67 017B
        gbc.setState(0x2fd3, 0xe7d0, 0xcd40, 0xcc60, 0x326c, 0x5331, 0x0, 0x1);
        gbc.writeMem(0x2fd3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe7d0, gbc.sp());
        EXPECT(0x2fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 017C
        gbc.setState(0x8263, 0x7644, 0x5830, 0xa2f3, 0xe61c, 0xed17, 0x0, 0x0);
        gbc.writeMem(0x8263, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7644, gbc.sp());
        EXPECT(0x8265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8263));
        EXPECT(0x67, gbc.readMem(0x8264));
        // CB 67 017D
        gbc.setState(0x96ac, 0xab5c, 0x8680, 0xd85c, 0x89bd, 0xe8df, 0x1, 0x0);
        gbc.writeMem(0x96ac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xab5c, gbc.sp());
        EXPECT(0x96ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ac));
        EXPECT(0x67, gbc.readMem(0x96ad));
        // CB 67 017E
        gbc.setState(0x451f, 0x13e6, 0x9200, 0x10dc, 0x5d38, 0x20fc, 0x0, 0x0);
        gbc.writeMem(0x451f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x13e6, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 017F
        gbc.setState(0x1f2e, 0xbb3f, 0x5db0, 0x1650, 0xde87, 0x9969, 0x1, 0x0);
        gbc.writeMem(0x1f2e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbb3f, gbc.sp());
        EXPECT(0x1f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0180
        gbc.setState(0xdef6, 0x4c46, 0xf6f0, 0xa814, 0xdb59, 0x4389, 0x1, 0x0);
        gbc.writeMem(0xdef6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4c46, gbc.sp());
        EXPECT(0xdef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef6));
        EXPECT(0x67, gbc.readMem(0xdef7));
        // CB 67 0181
        gbc.setState(0x540a, 0xb0f8, 0x2370, 0x134d, 0x970e, 0xa8ac, 0x1, 0x1);
        gbc.writeMem(0x540a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb0f8, gbc.sp());
        EXPECT(0x540c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0182
        gbc.setState(0x70e2, 0x3e45, 0x55f0, 0xd496, 0xf2b4, 0xb028, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3e45, gbc.sp());
        EXPECT(0x70e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0183
        gbc.setState(0x5ac4, 0xd230, 0x1780, 0xed73, 0xecdd, 0x87ed, 0x0, 0x0);
        gbc.writeMem(0x5ac4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd230, gbc.sp());
        EXPECT(0x5ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0184
        gbc.setState(0x678, 0x5953, 0x7ef0, 0x3de4, 0xd9a1, 0x8bbc, 0x0, 0x0);
        gbc.writeMem(0x678, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5953, gbc.sp());
        EXPECT(0x67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0185
        gbc.setState(0x9a31, 0x27db, 0x6c90, 0x9128, 0xf925, 0x98fa, 0x0, 0x0);
        gbc.writeMem(0x9a31, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x27db, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a31));
        EXPECT(0x67, gbc.readMem(0x9a32));
        // CB 67 0186
        gbc.setState(0x7b28, 0x9c66, 0xc620, 0x43be, 0xd572, 0xf5a3, 0x1, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9c66, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0187
        gbc.setState(0xc151, 0x61ec, 0x5000, 0x4b3b, 0xe0bf, 0x1322, 0x1, 0x1);
        gbc.writeMem(0xc151, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x61ec, gbc.sp());
        EXPECT(0xc153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc151));
        EXPECT(0x67, gbc.readMem(0xc152));
        // CB 67 0188
        gbc.setState(0xc8a4, 0x96d7, 0x7f70, 0x22cf, 0xfa98, 0xf073, 0x1, 0x0);
        gbc.writeMem(0xc8a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0xc8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a4));
        EXPECT(0x67, gbc.readMem(0xc8a5));
        // CB 67 0189
        gbc.setState(0x8dbf, 0xf698, 0xb630, 0x4de4, 0x1d49, 0xc00, 0x0, 0x1);
        gbc.writeMem(0x8dbf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf698, gbc.sp());
        EXPECT(0x8dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbf));
        EXPECT(0x67, gbc.readMem(0x8dc0));
        // CB 67 018A
        gbc.setState(0x2b83, 0x9dab, 0x4ee0, 0xac52, 0xe19, 0xe0da, 0x0, 0x0);
        gbc.writeMem(0x2b83, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9dab, gbc.sp());
        EXPECT(0x2b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 018B
        gbc.setState(0x8962, 0xf71d, 0x4c0, 0xd1b5, 0xa725, 0xfbd, 0x0, 0x0);
        gbc.writeMem(0x8962, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf71d, gbc.sp());
        EXPECT(0x8964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8962));
        EXPECT(0x67, gbc.readMem(0x8963));
        // CB 67 018C
        gbc.setState(0xdafa, 0x3de5, 0x5230, 0xc1f8, 0x71cc, 0x1c23, 0x1, 0x1);
        gbc.writeMem(0xdafa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3de5, gbc.sp());
        EXPECT(0xdafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafa));
        EXPECT(0x67, gbc.readMem(0xdafb));
        // CB 67 018E
        gbc.setState(0xdd8f, 0x6bb4, 0x8ca0, 0xa27e, 0xc80d, 0x91f1, 0x0, 0x1);
        gbc.writeMem(0xdd8f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6bb4, gbc.sp());
        EXPECT(0xdd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8f));
        EXPECT(0x67, gbc.readMem(0xdd90));
        // CB 67 018F
        gbc.setState(0x3bef, 0x3fa1, 0x1220, 0xcf44, 0x38d9, 0xe6b9, 0x0, 0x0);
        gbc.writeMem(0x3bef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3fa1, gbc.sp());
        EXPECT(0x3bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0190
        gbc.setState(0x69ff, 0xbdd1, 0xba20, 0x4212, 0xbe80, 0x8611, 0x1, 0x1);
        gbc.writeMem(0x69ff, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbdd1, gbc.sp());
        EXPECT(0x6a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0191
        gbc.setState(0x7b84, 0x485c, 0x5380, 0x11e9, 0x820d, 0x9427, 0x0, 0x1);
        gbc.writeMem(0x7b84, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x485c, gbc.sp());
        EXPECT(0x7b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0192
        gbc.setState(0x49ce, 0x2785, 0x6f10, 0xd594, 0x569b, 0x3b6c, 0x1, 0x0);
        gbc.writeMem(0x49ce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2785, gbc.sp());
        EXPECT(0x49d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0193
        gbc.setState(0x8d86, 0x5ad8, 0xa410, 0xb0a5, 0x1ff6, 0xd46c, 0x0, 0x1);
        gbc.writeMem(0x8d86, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5ad8, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d86));
        EXPECT(0x67, gbc.readMem(0x8d87));
        // CB 67 0194
        gbc.setState(0x5aa9, 0x4ce3, 0xb530, 0xfa8f, 0x2fec, 0x87d5, 0x1, 0x1);
        gbc.writeMem(0x5aa9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0x5aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0195
        gbc.setState(0x3d80, 0xdd0a, 0x5af0, 0xc970, 0x3f6f, 0xee8f, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdd0a, gbc.sp());
        EXPECT(0x3d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0196
        gbc.setState(0x1131, 0xbd60, 0x1180, 0x32ab, 0x104a, 0xf82b, 0x1, 0x0);
        gbc.writeMem(0x1131, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbd60, gbc.sp());
        EXPECT(0x1133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0197
        gbc.setState(0xb209, 0x7e09, 0xc410, 0x8bc2, 0x28c, 0x10e8, 0x1, 0x0);
        gbc.writeMem(0xb209, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7e09, gbc.sp());
        EXPECT(0xb20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb209));
        EXPECT(0x67, gbc.readMem(0xb20a));
        // CB 67 0198
        gbc.setState(0x461e, 0x192e, 0x1b30, 0x4034, 0xa3e9, 0x96df, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x192e, gbc.sp());
        EXPECT(0x4620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0199
        gbc.setState(0x3903, 0x55f0, 0x6bd0, 0x41cb, 0xa27f, 0x488f, 0x1, 0x0);
        gbc.writeMem(0x3903, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x55f0, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 019A
        gbc.setState(0x7697, 0xccb4, 0x38f0, 0xd803, 0xad3f, 0xbb9d, 0x0, 0x0);
        gbc.writeMem(0x7697, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xccb4, gbc.sp());
        EXPECT(0x7699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 019B
        gbc.setState(0x7fe5, 0xfe41, 0x5df0, 0xada7, 0xac49, 0xdff1, 0x1, 0x1);
        gbc.writeMem(0x7fe5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfe41, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 019C
        gbc.setState(0x2beb, 0x651, 0x79f0, 0xe20b, 0xa1e8, 0x4cf3, 0x0, 0x0);
        gbc.writeMem(0x2beb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x651, gbc.sp());
        EXPECT(0x2bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 019D
        gbc.setState(0x859b, 0xa539, 0xe5c0, 0x45eb, 0x4a52, 0xcf6e, 0x0, 0x1);
        gbc.writeMem(0x859b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa539, gbc.sp());
        EXPECT(0x859d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859b));
        EXPECT(0x67, gbc.readMem(0x859c));
        // CB 67 019E
        gbc.setState(0xecc7, 0xe259, 0x8ec0, 0xdac4, 0xae86, 0x9e79, 0x0, 0x0);
        gbc.writeMem(0xecc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe259, gbc.sp());
        EXPECT(0xecc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc7));
        EXPECT(0x67, gbc.readMem(0xecc8));
        // CB 67 019F
        gbc.setState(0x4923, 0x9427, 0xd3c0, 0x54ac, 0xd1fc, 0x71e7, 0x0, 0x1);
        gbc.writeMem(0x4923, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x4925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01A0
        gbc.setState(0x39cc, 0x2832, 0x3080, 0x2a2, 0x1de1, 0x54b0, 0x1, 0x1);
        gbc.writeMem(0x39cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2832, gbc.sp());
        EXPECT(0x39ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01A1
        gbc.setState(0x4f87, 0x96eb, 0xc6e0, 0x35a3, 0x4c99, 0x985a, 0x0, 0x1);
        gbc.writeMem(0x4f87, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x96eb, gbc.sp());
        EXPECT(0x4f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01A2
        gbc.setState(0x811d, 0xa8d2, 0xa80, 0x6c1b, 0xb7f4, 0x1aa0, 0x0, 0x0);
        gbc.writeMem(0x811d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa8d2, gbc.sp());
        EXPECT(0x811f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811d));
        EXPECT(0x67, gbc.readMem(0x811e));
        // CB 67 01A3
        gbc.setState(0xa10e, 0x7363, 0x6b10, 0xe71b, 0xe0cf, 0x6847, 0x0, 0x0);
        gbc.writeMem(0xa10e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7363, gbc.sp());
        EXPECT(0xa110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10e));
        EXPECT(0x67, gbc.readMem(0xa10f));
        // CB 67 01A4
        gbc.setState(0x224b, 0x443e, 0xd290, 0x1e1d, 0xb81d, 0x3551, 0x1, 0x1);
        gbc.writeMem(0x224b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x443e, gbc.sp());
        EXPECT(0x224d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01A5
        gbc.setState(0xe428, 0xb25d, 0x1c70, 0x3946, 0xa83a, 0x7c7c, 0x1, 0x1);
        gbc.writeMem(0xe428, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb25d, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe428));
        EXPECT(0x67, gbc.readMem(0xe429));
        // CB 67 01A6
        gbc.setState(0xa425, 0x9f, 0x1350, 0xe955, 0x5742, 0xa601, 0x0, 0x0);
        gbc.writeMem(0xa425, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0xa427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa425));
        EXPECT(0x67, gbc.readMem(0xa426));
        // CB 67 01A7
        gbc.setState(0x22bc, 0x8bba, 0x2630, 0xbf54, 0x7700, 0xc190, 0x1, 0x0);
        gbc.writeMem(0x22bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8bba, gbc.sp());
        EXPECT(0x22be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01A8
        gbc.setState(0xcd32, 0xe59a, 0x2cf0, 0xfc7d, 0xc974, 0x8f31, 0x1, 0x0);
        gbc.writeMem(0xcd32, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0xcd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd32));
        EXPECT(0x67, gbc.readMem(0xcd33));
        // CB 67 01A9
        gbc.setState(0x4ea1, 0x9c33, 0x2710, 0xfed4, 0xcc97, 0x837f, 0x1, 0x1);
        gbc.writeMem(0x4ea1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0x4ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01AA
        gbc.setState(0xdcbb, 0x4742, 0x8380, 0xfe90, 0xd172, 0x9e62, 0x1, 0x1);
        gbc.writeMem(0xdcbb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4742, gbc.sp());
        EXPECT(0xdcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbb));
        EXPECT(0x67, gbc.readMem(0xdcbc));
        // CB 67 01AB
        gbc.setState(0x5bc7, 0xa974, 0xc9f0, 0x2df3, 0xe7cf, 0xbd4f, 0x1, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa974, gbc.sp());
        EXPECT(0x5bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01AC
        gbc.setState(0x206, 0xe5b8, 0xfab0, 0xe4ec, 0x4e, 0xd8b4, 0x0, 0x1);
        gbc.writeMem(0x206, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe5b8, gbc.sp());
        EXPECT(0x208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01AD
        gbc.setState(0x84e, 0xdf16, 0x2760, 0x9d67, 0x12e5, 0xaf8b, 0x1, 0x1);
        gbc.writeMem(0x84e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdf16, gbc.sp());
        EXPECT(0x850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01AE
        gbc.setState(0x23e1, 0x5a13, 0xc970, 0xc442, 0x5a30, 0x906f, 0x1, 0x1);
        gbc.writeMem(0x23e1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5a13, gbc.sp());
        EXPECT(0x23e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01AF
        gbc.setState(0x3ba6, 0xf472, 0x1920, 0x222d, 0xbec7, 0x5711, 0x1, 0x1);
        gbc.writeMem(0x3ba6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf472, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01B0
        gbc.setState(0x1eb3, 0xf412, 0x7ce0, 0x3ef4, 0xd836, 0x7d58, 0x0, 0x1);
        gbc.writeMem(0x1eb3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf412, gbc.sp());
        EXPECT(0x1eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01B1
        gbc.setState(0xecef, 0xa33f, 0x5e30, 0x101e, 0x70ab, 0xb3d9, 0x0, 0x1);
        gbc.writeMem(0xecef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa33f, gbc.sp());
        EXPECT(0xecf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecef));
        EXPECT(0x67, gbc.readMem(0xecf0));
        // CB 67 01B2
        gbc.setState(0xb976, 0x6e58, 0xc500, 0x950a, 0x7e98, 0xf8ed, 0x0, 0x0);
        gbc.writeMem(0xb976, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6e58, gbc.sp());
        EXPECT(0xb978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb976));
        EXPECT(0x67, gbc.readMem(0xb977));
        // CB 67 01B3
        gbc.setState(0x40d3, 0xac82, 0x10e0, 0xa1fc, 0xc417, 0x7e75, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xac82, gbc.sp());
        EXPECT(0x40d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01B4
        gbc.setState(0x5871, 0xc658, 0x98d0, 0xb8b, 0xb610, 0xe987, 0x1, 0x0);
        gbc.writeMem(0x5871, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc658, gbc.sp());
        EXPECT(0x5873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01B5
        gbc.setState(0x1864, 0x4f76, 0x2e50, 0x42d8, 0x28cd, 0xaccd, 0x0, 0x0);
        gbc.writeMem(0x1864, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4f76, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01B6
        gbc.setState(0xe4a8, 0xd043, 0x5750, 0x82f3, 0x63d0, 0x4ac3, 0x1, 0x0);
        gbc.writeMem(0xe4a8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd043, gbc.sp());
        EXPECT(0xe4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a8));
        EXPECT(0x67, gbc.readMem(0xe4a9));
        // CB 67 01B7
        gbc.setState(0x5bf1, 0x8e3a, 0xb950, 0xd202, 0x91f1, 0xa1d2, 0x0, 0x1);
        gbc.writeMem(0x5bf1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8e3a, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01B8
        gbc.setState(0xbc6b, 0x847e, 0xb5f0, 0x55e6, 0x3a60, 0x3baa, 0x1, 0x1);
        gbc.writeMem(0xbc6b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x847e, gbc.sp());
        EXPECT(0xbc6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc6b));
        EXPECT(0x67, gbc.readMem(0xbc6c));
        // CB 67 01B9
        gbc.setState(0x5706, 0x850f, 0xcae0, 0xaba, 0x38c8, 0xa548, 0x0, 0x1);
        gbc.writeMem(0x5706, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x850f, gbc.sp());
        EXPECT(0x5708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01BA
        gbc.setState(0xdcb9, 0xd42c, 0xe010, 0x902d, 0x1e9e, 0x8e08, 0x0, 0x1);
        gbc.writeMem(0xdcb9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd42c, gbc.sp());
        EXPECT(0xdcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb9));
        EXPECT(0x67, gbc.readMem(0xdcba));
        // CB 67 01BB
        gbc.setState(0x82a, 0x7a32, 0x4d70, 0xf3f8, 0x24af, 0x36d0, 0x0, 0x1);
        gbc.writeMem(0x82a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7a32, gbc.sp());
        EXPECT(0x82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01BD
        gbc.setState(0xc83c, 0x1126, 0x1450, 0x6494, 0x9f17, 0x86e1, 0x0, 0x0);
        gbc.writeMem(0xc83c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1126, gbc.sp());
        EXPECT(0xc83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83c));
        EXPECT(0x67, gbc.readMem(0xc83d));
        // CB 67 01BE
        gbc.setState(0x8597, 0xc122, 0x2150, 0xedad, 0x2d6c, 0x6b0f, 0x1, 0x0);
        gbc.writeMem(0x8597, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc122, gbc.sp());
        EXPECT(0x8599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8597));
        EXPECT(0x67, gbc.readMem(0x8598));
        // CB 67 01BF
        gbc.setState(0x69e4, 0x5270, 0x6890, 0x303a, 0x946, 0x9d23, 0x1, 0x0);
        gbc.writeMem(0x69e4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5270, gbc.sp());
        EXPECT(0x69e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01C0
        gbc.setState(0x49b5, 0xce9e, 0xfe10, 0x92e7, 0xfe9d, 0x4626, 0x0, 0x1);
        gbc.writeMem(0x49b5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0x49b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01C1
        gbc.setState(0xe538, 0x5a6c, 0xd4f0, 0xf7d8, 0x8b36, 0x142e, 0x1, 0x1);
        gbc.writeMem(0xe538, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5a6c, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe538));
        EXPECT(0x67, gbc.readMem(0xe539));
        // CB 67 01C2
        gbc.setState(0xc718, 0xb53c, 0x3a10, 0x7200, 0xbe16, 0x4575, 0x1, 0x0);
        gbc.writeMem(0xc718, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0xc71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc718));
        EXPECT(0x67, gbc.readMem(0xc719));
        // CB 67 01C3
        gbc.setState(0x2b14, 0x3715, 0x6bc0, 0x6b93, 0xada3, 0x54db, 0x1, 0x1);
        gbc.writeMem(0x2b14, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3715, gbc.sp());
        EXPECT(0x2b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01C5
        gbc.setState(0x51e6, 0x1cfe, 0x8e90, 0xa46, 0x73b5, 0x65f7, 0x1, 0x1);
        gbc.writeMem(0x51e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1cfe, gbc.sp());
        EXPECT(0x51e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01C7
        gbc.setState(0x5459, 0x81e3, 0x2c20, 0xfed6, 0x46ac, 0x4cde, 0x1, 0x0);
        gbc.writeMem(0x5459, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x81e3, gbc.sp());
        EXPECT(0x545b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01C8
        gbc.setState(0xd6df, 0x96fb, 0xee00, 0x1f2c, 0x730d, 0x9185, 0x0, 0x0);
        gbc.writeMem(0xd6df, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x96fb, gbc.sp());
        EXPECT(0xd6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6df));
        EXPECT(0x67, gbc.readMem(0xd6e0));
        // CB 67 01C9
        gbc.setState(0x5a02, 0x26a1, 0x63a0, 0x583, 0xe82a, 0xd931, 0x0, 0x1);
        gbc.writeMem(0x5a02, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0x5a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01CA
        gbc.setState(0x79b1, 0xb937, 0xfa30, 0x546, 0x94d, 0x62c1, 0x1, 0x0);
        gbc.writeMem(0x79b1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0x79b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01CB
        gbc.setState(0x73c2, 0xee92, 0xc870, 0x37aa, 0xa520, 0x8588, 0x1, 0x1);
        gbc.writeMem(0x73c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0x73c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01CC
        gbc.setState(0xb76d, 0x8004, 0x56d0, 0x296d, 0xb3de, 0x75d6, 0x0, 0x0);
        gbc.writeMem(0xb76d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8004, gbc.sp());
        EXPECT(0xb76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76d));
        EXPECT(0x67, gbc.readMem(0xb76e));
        // CB 67 01CD
        gbc.setState(0xba32, 0x8d01, 0x89c0, 0xb91c, 0x2390, 0x5695, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8d01, gbc.sp());
        EXPECT(0xba34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba32));
        EXPECT(0x67, gbc.readMem(0xba33));
        // CB 67 01CE
        gbc.setState(0x2372, 0x634a, 0x1500, 0x1e77, 0x3b5f, 0x49ba, 0x1, 0x1);
        gbc.writeMem(0x2372, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x634a, gbc.sp());
        EXPECT(0x2374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01CF
        gbc.setState(0xe331, 0xcfb3, 0x40a0, 0xdc67, 0x2941, 0x9c60, 0x0, 0x0);
        gbc.writeMem(0xe331, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcfb3, gbc.sp());
        EXPECT(0xe333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe331));
        EXPECT(0x67, gbc.readMem(0xe332));
        // CB 67 01D0
        gbc.setState(0xe31d, 0xb827, 0xe80, 0x89f8, 0xc6d3, 0x883, 0x0, 0x1);
        gbc.writeMem(0xe31d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb827, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31d));
        EXPECT(0x67, gbc.readMem(0xe31e));
        // CB 67 01D1
        gbc.setState(0x6ab2, 0xce79, 0xe8f0, 0x5caa, 0x26b2, 0x4504, 0x1, 0x1);
        gbc.writeMem(0x6ab2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xce79, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01D2
        gbc.setState(0xddce, 0x390f, 0xd0e0, 0xb023, 0xd440, 0x520b, 0x0, 0x1);
        gbc.writeMem(0xddce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x390f, gbc.sp());
        EXPECT(0xddd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddce));
        EXPECT(0x67, gbc.readMem(0xddcf));
        // CB 67 01D3
        gbc.setState(0x206e, 0x9e99, 0x4890, 0xfe11, 0xe60f, 0xf580, 0x1, 0x1);
        gbc.writeMem(0x206e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9e99, gbc.sp());
        EXPECT(0x2070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01D4
        gbc.setState(0x5dec, 0x275a, 0x9910, 0xfa72, 0x30ba, 0x2c1c, 0x1, 0x0);
        gbc.writeMem(0x5dec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x275a, gbc.sp());
        EXPECT(0x5dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01D5
        gbc.setState(0x6e69, 0x8036, 0xd6e0, 0xedb7, 0x6b6a, 0x3ce, 0x0, 0x0);
        gbc.writeMem(0x6e69, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8036, gbc.sp());
        EXPECT(0x6e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01D6
        gbc.setState(0x584e, 0x14ee, 0x20a0, 0x1671, 0x4569, 0x4e22, 0x0, 0x1);
        gbc.writeMem(0x584e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x14ee, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01D8
        gbc.setState(0xd50e, 0x5582, 0x7a90, 0xfe11, 0xba52, 0xeb7c, 0x0, 0x0);
        gbc.writeMem(0xd50e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5582, gbc.sp());
        EXPECT(0xd510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50e));
        EXPECT(0x67, gbc.readMem(0xd50f));
        // CB 67 01D9
        gbc.setState(0x58e, 0x5bc3, 0xd3a0, 0x796f, 0x7d48, 0x3897, 0x0, 0x0);
        gbc.writeMem(0x58e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5bc3, gbc.sp());
        EXPECT(0x590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01DA
        gbc.setState(0xa43c, 0x5d53, 0x350, 0xc7a7, 0x4df7, 0xe1a, 0x1, 0x1);
        gbc.writeMem(0xa43c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5d53, gbc.sp());
        EXPECT(0xa43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43c));
        EXPECT(0x67, gbc.readMem(0xa43d));
        // CB 67 01DB
        gbc.setState(0x5f22, 0xa6f1, 0xa700, 0x64cb, 0x34d9, 0x42e8, 0x1, 0x1);
        gbc.writeMem(0x5f22, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa6f1, gbc.sp());
        EXPECT(0x5f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01DC
        gbc.setState(0x8397, 0x670, 0xae80, 0x736f, 0x1368, 0x7a28, 0x1, 0x1);
        gbc.writeMem(0x8397, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x670, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8397));
        EXPECT(0x67, gbc.readMem(0x8398));
        // CB 67 01DF
        gbc.setState(0x6dd3, 0xb407, 0x6670, 0x26e4, 0x3cd1, 0xb3bc, 0x0, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0x6dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01E0
        gbc.setState(0xc164, 0x822d, 0x1f60, 0x3046, 0x4ada, 0xc443, 0x1, 0x1);
        gbc.writeMem(0xc164, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x822d, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc164));
        EXPECT(0x67, gbc.readMem(0xc165));
        // CB 67 01E1
        gbc.setState(0xaf94, 0x4adc, 0x5d30, 0xf20, 0xadce, 0x97bd, 0x1, 0x1);
        gbc.writeMem(0xaf94, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4adc, gbc.sp());
        EXPECT(0xaf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf94));
        EXPECT(0x67, gbc.readMem(0xaf95));
        // CB 67 01E2
        gbc.setState(0x1f00, 0xb4c4, 0xf970, 0x326, 0x474e, 0x51e8, 0x1, 0x1);
        gbc.writeMem(0x1f00, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0x1f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01E4
        gbc.setState(0x9dbc, 0x5a42, 0x1800, 0x3721, 0x1160, 0x6c2a, 0x1, 0x0);
        gbc.writeMem(0x9dbc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0x9dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbc));
        EXPECT(0x67, gbc.readMem(0x9dbd));
        // CB 67 01E5
        gbc.setState(0xb105, 0x4a96, 0xdc80, 0xfff0, 0xdadf, 0x3803, 0x1, 0x0);
        gbc.writeMem(0xb105, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4a96, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb105));
        EXPECT(0x67, gbc.readMem(0xb106));
        // CB 67 01E6
        gbc.setState(0xea79, 0xedf6, 0xe080, 0x84f1, 0xaf24, 0x8d2a, 0x1, 0x0);
        gbc.writeMem(0xea79, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xedf6, gbc.sp());
        EXPECT(0xea7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea79));
        EXPECT(0x67, gbc.readMem(0xea7a));
        // CB 67 01E7
        gbc.setState(0xe11d, 0xa190, 0x3580, 0xa510, 0x919c, 0xb059, 0x1, 0x1);
        gbc.writeMem(0xe11d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0xe11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe11d));
        EXPECT(0x67, gbc.readMem(0xe11e));
        // CB 67 01E8
        gbc.setState(0xa95d, 0x64fd, 0x5c00, 0x47a, 0xe659, 0x1c9b, 0x1, 0x0);
        gbc.writeMem(0xa95d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0xa95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95d));
        EXPECT(0x67, gbc.readMem(0xa95e));
        // CB 67 01E9
        gbc.setState(0x938a, 0xbb1a, 0x37e0, 0x9063, 0xf99c, 0xcc18, 0x0, 0x1);
        gbc.writeMem(0x938a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbb1a, gbc.sp());
        EXPECT(0x938c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938a));
        EXPECT(0x67, gbc.readMem(0x938b));
        // CB 67 01EA
        gbc.setState(0x7122, 0x6cd5, 0xb050, 0x549a, 0x4897, 0x6cd7, 0x0, 0x0);
        gbc.writeMem(0x7122, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6cd5, gbc.sp());
        EXPECT(0x7124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01EB
        gbc.setState(0x29e5, 0xc87c, 0x5630, 0xa31a, 0x368c, 0x5293, 0x0, 0x0);
        gbc.writeMem(0x29e5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0x29e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01EC
        gbc.setState(0x647e, 0x934a, 0x5b30, 0xaf59, 0x30c1, 0x7ebd, 0x0, 0x0);
        gbc.writeMem(0x647e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x934a, gbc.sp());
        EXPECT(0x6480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01ED
        gbc.setState(0xa22f, 0x8836, 0x50e0, 0xd89, 0x1f94, 0xf613, 0x0, 0x1);
        gbc.writeMem(0xa22f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8836, gbc.sp());
        EXPECT(0xa231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22f));
        EXPECT(0x67, gbc.readMem(0xa230));
        // CB 67 01EE
        gbc.setState(0x1ea5, 0x12a8, 0xc20, 0xf6fa, 0xbbea, 0xd7c4, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x12a8, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01EF
        gbc.setState(0xd9c0, 0xb819, 0xade0, 0x7673, 0x3d3d, 0xa2b5, 0x1, 0x0);
        gbc.writeMem(0xd9c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb819, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c0));
        EXPECT(0x67, gbc.readMem(0xd9c1));
        // CB 67 01F0
        gbc.setState(0x306f, 0x2151, 0x5330, 0xd7db, 0xf27d, 0xda0a, 0x1, 0x1);
        gbc.writeMem(0x306f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2151, gbc.sp());
        EXPECT(0x3071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01F1
        gbc.setState(0x147, 0xc685, 0xe040, 0x1053, 0x57af, 0x1c7f, 0x0, 0x0);
        gbc.writeMem(0x147, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc685, gbc.sp());
        EXPECT(0x149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01F2
        gbc.setState(0x8728, 0x4e01, 0x1ce0, 0xf1c7, 0xec9e, 0xa2, 0x0, 0x1);
        gbc.writeMem(0x8728, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8728));
        EXPECT(0x67, gbc.readMem(0x8729));
        // CB 67 01F3
        gbc.setState(0x6c1b, 0xee9f, 0x48a0, 0x64f6, 0x18fc, 0x7993, 0x0, 0x0);
        gbc.writeMem(0x6c1b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xee9f, gbc.sp());
        EXPECT(0x6c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01F4
        gbc.setState(0x9df7, 0x48ba, 0x84f0, 0x2ff5, 0x319c, 0xe1c2, 0x0, 0x0);
        gbc.writeMem(0x9df7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x48ba, gbc.sp());
        EXPECT(0x9df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df7));
        EXPECT(0x67, gbc.readMem(0x9df8));
        // CB 67 01F5
        gbc.setState(0x1531, 0xa090, 0xa460, 0xd364, 0x96c0, 0xed7e, 0x0, 0x0);
        gbc.writeMem(0x1531, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa090, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01F6
        gbc.setState(0x6a44, 0x2509, 0x3450, 0x4efd, 0xbf84, 0x3488, 0x0, 0x1);
        gbc.writeMem(0x6a44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2509, gbc.sp());
        EXPECT(0x6a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 01F7
        gbc.setState(0xb56f, 0xdd25, 0xa200, 0xf893, 0xe6cf, 0x37e9, 0x0, 0x1);
        gbc.writeMem(0xb56f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdd25, gbc.sp());
        EXPECT(0xb571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56f));
        EXPECT(0x67, gbc.readMem(0xb570));
        // CB 67 01F8
        gbc.setState(0xcf4a, 0xe14f, 0xae20, 0x2c8e, 0xe400, 0xf365, 0x0, 0x1);
        gbc.writeMem(0xcf4a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe14f, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4a));
        EXPECT(0x67, gbc.readMem(0xcf4b));
        // CB 67 01F9
        gbc.setState(0x3177, 0x41da, 0x6160, 0x52c9, 0x7f1f, 0xcdd7, 0x0, 0x0);
        gbc.writeMem(0x3177, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x41da, gbc.sp());
        EXPECT(0x3179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01FB
        gbc.setState(0x9577, 0xce89, 0x54f0, 0xd44, 0xdf2b, 0xb613, 0x1, 0x0);
        gbc.writeMem(0x9577, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xce89, gbc.sp());
        EXPECT(0x9579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9577));
        EXPECT(0x67, gbc.readMem(0x9578));
        // CB 67 01FC
        gbc.setState(0x50f3, 0x2764, 0xada0, 0x398e, 0x4f11, 0xaed, 0x1, 0x0);
        gbc.writeMem(0x50f3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2764, gbc.sp());
        EXPECT(0x50f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 01FD
        gbc.setState(0x9984, 0x369a, 0xc270, 0x9d72, 0x5e0, 0xdf9, 0x0, 0x0);
        gbc.writeMem(0x9984, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x369a, gbc.sp());
        EXPECT(0x9986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9984));
        EXPECT(0x67, gbc.readMem(0x9985));
        // CB 67 01FE
        gbc.setState(0xbab9, 0xa3, 0xc20, 0xfde0, 0x68c8, 0x1f8b, 0x1, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa3, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab9));
        EXPECT(0x67, gbc.readMem(0xbaba));
        // CB 67 01FF
        gbc.setState(0xe1f9, 0x353c, 0x87b0, 0x53a4, 0x7216, 0x65ce, 0x1, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x353c, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f9));
        EXPECT(0x67, gbc.readMem(0xe1fa));
        // CB 67 0200
        gbc.setState(0x708f, 0x1e3b, 0x6ef0, 0x192f, 0x5e2c, 0xec1c, 0x0, 0x0);
        gbc.writeMem(0x708f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0201
        gbc.setState(0x3a08, 0x49e5, 0x91a0, 0xe2f0, 0xb4fa, 0x3d2a, 0x0, 0x0);
        gbc.writeMem(0x3a08, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x49e5, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0202
        gbc.setState(0x942f, 0xd4fe, 0x8290, 0xc5f6, 0x18d, 0x9b02, 0x0, 0x0);
        gbc.writeMem(0x942f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd4fe, gbc.sp());
        EXPECT(0x9431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942f));
        EXPECT(0x67, gbc.readMem(0x9430));
        // CB 67 0203
        gbc.setState(0xd4ee, 0x1351, 0xc730, 0x9a46, 0xafa3, 0x4383, 0x1, 0x1);
        gbc.writeMem(0xd4ee, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1351, gbc.sp());
        EXPECT(0xd4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ee));
        EXPECT(0x67, gbc.readMem(0xd4ef));
        // CB 67 0204
        gbc.setState(0x22be, 0xff8c, 0x5b60, 0xb119, 0xc6e5, 0x50ba, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xff8c, gbc.sp());
        EXPECT(0x22c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0205
        gbc.setState(0x47b4, 0x2e6, 0xdd80, 0xd727, 0xdd55, 0xf607, 0x0, 0x1);
        gbc.writeMem(0x47b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2e6, gbc.sp());
        EXPECT(0x47b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0206
        gbc.setState(0x2888, 0xff0c, 0x88b0, 0x6c0a, 0xb598, 0xba60, 0x0, 0x1);
        gbc.writeMem(0x2888, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xff0c, gbc.sp());
        EXPECT(0x288a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0207
        gbc.setState(0x675f, 0x5185, 0x68a0, 0xea3b, 0xea20, 0x2460, 0x1, 0x0);
        gbc.writeMem(0x675f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5185, gbc.sp());
        EXPECT(0x6761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0208
        gbc.setState(0x8721, 0xbc85, 0xc050, 0x82d4, 0x316a, 0xf62c, 0x1, 0x0);
        gbc.writeMem(0x8721, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbc85, gbc.sp());
        EXPECT(0x8723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8721));
        EXPECT(0x67, gbc.readMem(0x8722));
        // CB 67 0209
        gbc.setState(0x2129, 0xb7ef, 0x7280, 0xec9d, 0x9697, 0xac42, 0x0, 0x0);
        gbc.writeMem(0x2129, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb7ef, gbc.sp());
        EXPECT(0x212b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 020A
        gbc.setState(0xccac, 0x4655, 0xce40, 0xab66, 0x396b, 0xa901, 0x1, 0x0);
        gbc.writeMem(0xccac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4655, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccac));
        EXPECT(0x67, gbc.readMem(0xccad));
        // CB 67 020B
        gbc.setState(0x872e, 0xc8d6, 0x98b0, 0x5e9c, 0xa8ca, 0x513d, 0x0, 0x1);
        gbc.writeMem(0x872e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x872e));
        EXPECT(0x67, gbc.readMem(0x872f));
        // CB 67 020C
        gbc.setState(0xb130, 0x5d0b, 0x6bf0, 0x54d2, 0x1e2a, 0x7a8d, 0x1, 0x1);
        gbc.writeMem(0xb130, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb130));
        EXPECT(0x67, gbc.readMem(0xb131));
        // CB 67 020D
        gbc.setState(0x3102, 0x1bf2, 0x1fe0, 0xba24, 0x9237, 0x234b, 0x1, 0x1);
        gbc.writeMem(0x3102, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1bf2, gbc.sp());
        EXPECT(0x3104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 020E
        gbc.setState(0x20b5, 0x9e98, 0x12c0, 0x92f1, 0x5eda, 0xfa4c, 0x0, 0x1);
        gbc.writeMem(0x20b5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9e98, gbc.sp());
        EXPECT(0x20b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0210
        gbc.setState(0xd0d9, 0x4043, 0xafd0, 0x889b, 0x8d0b, 0x3e2e, 0x0, 0x0);
        gbc.writeMem(0xd0d9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4043, gbc.sp());
        EXPECT(0xd0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d9));
        EXPECT(0x67, gbc.readMem(0xd0da));
        // CB 67 0211
        gbc.setState(0x9d34, 0x49d2, 0xb480, 0x644f, 0x6fe7, 0xd1e0, 0x1, 0x1);
        gbc.writeMem(0x9d34, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x49d2, gbc.sp());
        EXPECT(0x9d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d34));
        EXPECT(0x67, gbc.readMem(0x9d35));
        // CB 67 0212
        gbc.setState(0x3e40, 0xc8c, 0xc7f0, 0xefbe, 0xe4dc, 0x2796, 0x0, 0x0);
        gbc.writeMem(0x3e40, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc8c, gbc.sp());
        EXPECT(0x3e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0213
        gbc.setState(0x8531, 0x287b, 0x27b0, 0x1e17, 0xdd68, 0x2dc1, 0x0, 0x0);
        gbc.writeMem(0x8531, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x287b, gbc.sp());
        EXPECT(0x8533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8531));
        EXPECT(0x67, gbc.readMem(0x8532));
        // CB 67 0214
        gbc.setState(0x152, 0x6049, 0x8150, 0x4cd2, 0xc944, 0x4f8b, 0x0, 0x1);
        gbc.writeMem(0x152, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6049, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0215
        gbc.setState(0x9dfb, 0x6171, 0x4520, 0x52e1, 0x1634, 0x2a17, 0x0, 0x0);
        gbc.writeMem(0x9dfb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6171, gbc.sp());
        EXPECT(0x9dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfb));
        EXPECT(0x67, gbc.readMem(0x9dfc));
        // CB 67 0216
        gbc.setState(0xb4b0, 0xe92, 0xe230, 0x77d9, 0x26f3, 0x87cd, 0x1, 0x0);
        gbc.writeMem(0xb4b0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe92, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0x67, gbc.readMem(0xb4b1));
        // CB 67 0217
        gbc.setState(0xe58f, 0x599, 0xd530, 0x28f5, 0x53c6, 0x862a, 0x1, 0x1);
        gbc.writeMem(0xe58f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x599, gbc.sp());
        EXPECT(0xe591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58f));
        EXPECT(0x67, gbc.readMem(0xe590));
        // CB 67 0218
        gbc.setState(0x892d, 0xb882, 0xcf00, 0x5584, 0x10c4, 0x9844, 0x1, 0x1);
        gbc.writeMem(0x892d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb882, gbc.sp());
        EXPECT(0x892f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892d));
        EXPECT(0x67, gbc.readMem(0x892e));
        // CB 67 0219
        gbc.setState(0xace7, 0x5c22, 0xf540, 0x45f7, 0xc9c9, 0x59a5, 0x1, 0x1);
        gbc.writeMem(0xace7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5c22, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace7));
        EXPECT(0x67, gbc.readMem(0xace8));
        // CB 67 021A
        gbc.setState(0x39ca, 0xa834, 0x86f0, 0x10cb, 0x7925, 0x630a, 0x0, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa834, gbc.sp());
        EXPECT(0x39cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 021B
        gbc.setState(0xaa7b, 0x484a, 0xb8d0, 0xa28a, 0xa770, 0xec56, 0x1, 0x0);
        gbc.writeMem(0xaa7b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x484a, gbc.sp());
        EXPECT(0xaa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7b));
        EXPECT(0x67, gbc.readMem(0xaa7c));
        // CB 67 021C
        gbc.setState(0x1f44, 0x31bb, 0xc890, 0xffd9, 0xa215, 0x278d, 0x0, 0x0);
        gbc.writeMem(0x1f44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x31bb, gbc.sp());
        EXPECT(0x1f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 021D
        gbc.setState(0x8bf7, 0x8df6, 0xed50, 0x1f9e, 0x9ce7, 0xc221, 0x0, 0x0);
        gbc.writeMem(0x8bf7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8df6, gbc.sp());
        EXPECT(0x8bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf7));
        EXPECT(0x67, gbc.readMem(0x8bf8));
        // CB 67 021E
        gbc.setState(0x7b33, 0x2d0a, 0x71d0, 0x2c92, 0xaed3, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2d0a, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 021F
        gbc.setState(0x5a63, 0xb7de, 0x7ec0, 0x373b, 0x1a18, 0xba02, 0x0, 0x1);
        gbc.writeMem(0x5a63, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb7de, gbc.sp());
        EXPECT(0x5a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0220
        gbc.setState(0x3cf4, 0x432a, 0xaac0, 0xa9d2, 0xd744, 0xc5fa, 0x1, 0x1);
        gbc.writeMem(0x3cf4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x432a, gbc.sp());
        EXPECT(0x3cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0221
        gbc.setState(0x675e, 0xed0f, 0xe580, 0xa766, 0x6ee5, 0xcf62, 0x1, 0x0);
        gbc.writeMem(0x675e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xed0f, gbc.sp());
        EXPECT(0x6760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0222
        gbc.setState(0xc5e5, 0x28be, 0x35d0, 0xa101, 0x97ef, 0x9a29, 0x0, 0x0);
        gbc.writeMem(0xc5e5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x28be, gbc.sp());
        EXPECT(0xc5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e5));
        EXPECT(0x67, gbc.readMem(0xc5e6));
        // CB 67 0223
        gbc.setState(0xb7cd, 0xef96, 0x1db0, 0x78aa, 0xfe10, 0xf79d, 0x0, 0x0);
        gbc.writeMem(0xb7cd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xef96, gbc.sp());
        EXPECT(0xb7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cd));
        EXPECT(0x67, gbc.readMem(0xb7ce));
        // CB 67 0224
        gbc.setState(0xa046, 0x2531, 0xe0c0, 0x4a4e, 0x57d8, 0x8c96, 0x1, 0x1);
        gbc.writeMem(0xa046, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2531, gbc.sp());
        EXPECT(0xa048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa046));
        EXPECT(0x67, gbc.readMem(0xa047));
        // CB 67 0225
        gbc.setState(0x960f, 0x5e84, 0x420, 0x2efb, 0xbdc0, 0x99f6, 0x1, 0x1);
        gbc.writeMem(0x960f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5e84, gbc.sp());
        EXPECT(0x9611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x960f));
        EXPECT(0x67, gbc.readMem(0x9610));
        // CB 67 0226
        gbc.setState(0xa076, 0xe430, 0xc2b0, 0x1b15, 0x2659, 0xce83, 0x1, 0x0);
        gbc.writeMem(0xa076, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe430, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa076));
        EXPECT(0x67, gbc.readMem(0xa077));
        // CB 67 0227
        gbc.setState(0xc2fe, 0xfafe, 0xcd80, 0x69dd, 0x6e2d, 0x5499, 0x1, 0x0);
        gbc.writeMem(0xc2fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfafe, gbc.sp());
        EXPECT(0xc300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2fe));
        EXPECT(0x67, gbc.readMem(0xc2ff));
        // CB 67 0228
        gbc.setState(0xd21f, 0x5420, 0x3d30, 0xb07a, 0x859b, 0xe804, 0x1, 0x1);
        gbc.writeMem(0xd21f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5420, gbc.sp());
        EXPECT(0xd221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21f));
        EXPECT(0x67, gbc.readMem(0xd220));
        // CB 67 0229
        gbc.setState(0x5a63, 0x7ca1, 0xf2e0, 0x3d5a, 0x597a, 0x7a3e, 0x0, 0x0);
        gbc.writeMem(0x5a63, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x5a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 022A
        gbc.setState(0x5707, 0x89a5, 0xb1c0, 0x9ceb, 0x5f13, 0x86f, 0x1, 0x1);
        gbc.writeMem(0x5707, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0x5709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 022B
        gbc.setState(0x156a, 0x4a24, 0xeb70, 0x2a82, 0xca1b, 0xd809, 0x0, 0x0);
        gbc.writeMem(0x156a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4a24, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 022D
        gbc.setState(0xefd9, 0x597c, 0x5320, 0xa69d, 0x3e11, 0x40d9, 0x1, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x597c, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd9));
        EXPECT(0x67, gbc.readMem(0xefda));
        // CB 67 022E
        gbc.setState(0x7ff8, 0x7c7f, 0x3060, 0xcb9a, 0xf133, 0x5e42, 0x0, 0x1);
        gbc.writeMem(0x7ff8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7c7f, gbc.sp());
        EXPECT(0x7ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 022F
        gbc.setState(0xabc8, 0xa7bc, 0xd090, 0x90, 0x7060, 0xb329, 0x0, 0x0);
        gbc.writeMem(0xabc8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa7bc, gbc.sp());
        EXPECT(0xabca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc8));
        EXPECT(0x67, gbc.readMem(0xabc9));
        // CB 67 0230
        gbc.setState(0x2fe3, 0xe180, 0xdd0, 0x8f2c, 0xc3f8, 0x84ce, 0x1, 0x0);
        gbc.writeMem(0x2fe3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe180, gbc.sp());
        EXPECT(0x2fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0231
        gbc.setState(0x3e44, 0x6e5c, 0x610, 0xd750, 0x1742, 0xde6, 0x1, 0x0);
        gbc.writeMem(0x3e44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6e5c, gbc.sp());
        EXPECT(0x3e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0233
        gbc.setState(0xd362, 0xa2f, 0xd350, 0x5924, 0x419, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0xd362, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa2f, gbc.sp());
        EXPECT(0xd364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd362));
        EXPECT(0x67, gbc.readMem(0xd363));
        // CB 67 0234
        gbc.setState(0x9ed7, 0x68e3, 0x94f0, 0x3951, 0xd19, 0xef1c, 0x0, 0x1);
        gbc.writeMem(0x9ed7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x68e3, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed7));
        EXPECT(0x67, gbc.readMem(0x9ed8));
        // CB 67 0235
        gbc.setState(0xb12a, 0xb046, 0xc300, 0x9600, 0x7023, 0x3281, 0x1, 0x1);
        gbc.writeMem(0xb12a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb046, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12a));
        EXPECT(0x67, gbc.readMem(0xb12b));
        // CB 67 0236
        gbc.setState(0x7f6c, 0x1c63, 0x95e0, 0xe47, 0x642d, 0xeb59, 0x1, 0x1);
        gbc.writeMem(0x7f6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0x7f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0237
        gbc.setState(0xc785, 0xf963, 0xe390, 0xd399, 0xe542, 0xb510, 0x0, 0x0);
        gbc.writeMem(0xc785, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf963, gbc.sp());
        EXPECT(0xc787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc785));
        EXPECT(0x67, gbc.readMem(0xc786));
        // CB 67 0238
        gbc.setState(0xec3f, 0x86c8, 0x4640, 0x93de, 0x8e43, 0x2cd2, 0x0, 0x1);
        gbc.writeMem(0xec3f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x86c8, gbc.sp());
        EXPECT(0xec41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3f));
        EXPECT(0x67, gbc.readMem(0xec40));
        // CB 67 0239
        gbc.setState(0x7bec, 0x2931, 0xfd20, 0xcd50, 0x214a, 0xc62b, 0x1, 0x0);
        gbc.writeMem(0x7bec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2931, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 023A
        gbc.setState(0x2c0, 0x9055, 0x66d0, 0xf12c, 0xd595, 0x86d6, 0x1, 0x1);
        gbc.writeMem(0x2c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9055, gbc.sp());
        EXPECT(0x2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 023B
        gbc.setState(0x8888, 0xa6e6, 0x4300, 0x17f5, 0xb3a4, 0x741d, 0x1, 0x1);
        gbc.writeMem(0x8888, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa6e6, gbc.sp());
        EXPECT(0x888a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8888));
        EXPECT(0x67, gbc.readMem(0x8889));
        // CB 67 023C
        gbc.setState(0x7107, 0xd671, 0xab40, 0xee92, 0xcd3e, 0x6b72, 0x0, 0x1);
        gbc.writeMem(0x7107, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd671, gbc.sp());
        EXPECT(0x7109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 023D
        gbc.setState(0xa085, 0xdf8f, 0x6cd0, 0xc0c, 0x52c7, 0xdc37, 0x0, 0x1);
        gbc.writeMem(0xa085, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdf8f, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa085));
        EXPECT(0x67, gbc.readMem(0xa086));
        // CB 67 023E
        gbc.setState(0x3c42, 0xb62e, 0x85e0, 0xacdf, 0x77d9, 0x4eaa, 0x0, 0x0);
        gbc.writeMem(0x3c42, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0x3c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 023F
        gbc.setState(0x6742, 0x6701, 0xf0d0, 0x5ed8, 0x35e4, 0x4f6a, 0x0, 0x0);
        gbc.writeMem(0x6742, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6701, gbc.sp());
        EXPECT(0x6744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0240
        gbc.setState(0x4086, 0x65c3, 0x1ba0, 0xba0c, 0xe79, 0xd2fe, 0x1, 0x0);
        gbc.writeMem(0x4086, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x65c3, gbc.sp());
        EXPECT(0x4088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0241
        gbc.setState(0x20f1, 0x6d80, 0x7ce0, 0x540e, 0x3d7c, 0xffef, 0x0, 0x1);
        gbc.writeMem(0x20f1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6d80, gbc.sp());
        EXPECT(0x20f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0242
        gbc.setState(0x6ff1, 0x40de, 0xef00, 0xb27, 0xaa56, 0x73de, 0x0, 0x0);
        gbc.writeMem(0x6ff1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x40de, gbc.sp());
        EXPECT(0x6ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0243
        gbc.setState(0x1a74, 0x459d, 0x4760, 0x2e9f, 0x7088, 0xc38, 0x1, 0x0);
        gbc.writeMem(0x1a74, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x1a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0244
        gbc.setState(0x3290, 0x47f9, 0xb5b0, 0x8ae3, 0x3170, 0xf042, 0x0, 0x1);
        gbc.writeMem(0x3290, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x47f9, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0245
        gbc.setState(0xab3d, 0xf7f, 0xe920, 0x129c, 0x97be, 0x6c9d, 0x0, 0x1);
        gbc.writeMem(0xab3d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf7f, gbc.sp());
        EXPECT(0xab3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3d));
        EXPECT(0x67, gbc.readMem(0xab3e));
        // CB 67 0246
        gbc.setState(0x96d9, 0x8442, 0x6cc0, 0x5165, 0x1a97, 0x95cc, 0x0, 0x1);
        gbc.writeMem(0x96d9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8442, gbc.sp());
        EXPECT(0x96db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d9));
        EXPECT(0x67, gbc.readMem(0x96da));
        // CB 67 0247
        gbc.setState(0xea3b, 0x8040, 0xbb60, 0xa299, 0xfe91, 0x31ca, 0x1, 0x0);
        gbc.writeMem(0xea3b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8040, gbc.sp());
        EXPECT(0xea3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3b));
        EXPECT(0x67, gbc.readMem(0xea3c));
        // CB 67 0248
        gbc.setState(0xa032, 0x7651, 0x9c40, 0x4556, 0xfcb9, 0xf695, 0x1, 0x1);
        gbc.writeMem(0xa032, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0xa034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa032));
        EXPECT(0x67, gbc.readMem(0xa033));
        // CB 67 0249
        gbc.setState(0x6316, 0x114d, 0x8ae0, 0xe28a, 0xa8df, 0xd321, 0x1, 0x1);
        gbc.writeMem(0x6316, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x114d, gbc.sp());
        EXPECT(0x6318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 024A
        gbc.setState(0xa705, 0x59af, 0x6230, 0xf342, 0xa570, 0xf236, 0x0, 0x1);
        gbc.writeMem(0xa705, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x59af, gbc.sp());
        EXPECT(0xa707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa705));
        EXPECT(0x67, gbc.readMem(0xa706));
        // CB 67 024B
        gbc.setState(0x9fdb, 0x138d, 0xb50, 0xd680, 0xcf5b, 0xf126, 0x1, 0x0);
        gbc.writeMem(0x9fdb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x138d, gbc.sp());
        EXPECT(0x9fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fdb));
        EXPECT(0x67, gbc.readMem(0x9fdc));
        // CB 67 024C
        gbc.setState(0x5d9e, 0x76f4, 0x2490, 0xe092, 0x6226, 0xab7, 0x1, 0x1);
        gbc.writeMem(0x5d9e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x76f4, gbc.sp());
        EXPECT(0x5da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 024D
        gbc.setState(0x82b2, 0x60e3, 0x6400, 0x7335, 0x819c, 0xc4ae, 0x1, 0x1);
        gbc.writeMem(0x82b2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x60e3, gbc.sp());
        EXPECT(0x82b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b2));
        EXPECT(0x67, gbc.readMem(0x82b3));
        // CB 67 024E
        gbc.setState(0xe446, 0x58b1, 0xcef0, 0xbd47, 0xea75, 0x9d5c, 0x0, 0x0);
        gbc.writeMem(0xe446, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x58b1, gbc.sp());
        EXPECT(0xe448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe446));
        EXPECT(0x67, gbc.readMem(0xe447));
        // CB 67 024F
        gbc.setState(0x7a88, 0x56db, 0x770, 0xf870, 0x1360, 0xbc4e, 0x0, 0x1);
        gbc.writeMem(0x7a88, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x56db, gbc.sp());
        EXPECT(0x7a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0250
        gbc.setState(0xd77f, 0xca8a, 0x9620, 0xcb1a, 0x4f0a, 0x60ee, 0x1, 0x0);
        gbc.writeMem(0xd77f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xca8a, gbc.sp());
        EXPECT(0xd781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77f));
        EXPECT(0x67, gbc.readMem(0xd780));
        // CB 67 0251
        gbc.setState(0x31e0, 0xbe75, 0x7ee0, 0xed7b, 0xdf8a, 0xb83b, 0x1, 0x0);
        gbc.writeMem(0x31e0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbe75, gbc.sp());
        EXPECT(0x31e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0252
        gbc.setState(0x2336, 0x2b88, 0xb6a0, 0x9533, 0xd961, 0xc13e, 0x0, 0x1);
        gbc.writeMem(0x2336, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2b88, gbc.sp());
        EXPECT(0x2338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0253
        gbc.setState(0x6fa2, 0x62a2, 0xb3f0, 0xb58e, 0x795a, 0x2aa0, 0x0, 0x0);
        gbc.writeMem(0x6fa2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0x6fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0254
        gbc.setState(0x7d0d, 0x8d2d, 0x21c0, 0x5f11, 0x2b6d, 0xda4c, 0x1, 0x0);
        gbc.writeMem(0x7d0d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8d2d, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0255
        gbc.setState(0x1955, 0x84cb, 0xc620, 0x57bf, 0xf0d5, 0x438e, 0x0, 0x0);
        gbc.writeMem(0x1955, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0x1957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0256
        gbc.setState(0x82ab, 0xf09d, 0x3240, 0x4202, 0x650c, 0x541e, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf09d, gbc.sp());
        EXPECT(0x82ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ab));
        EXPECT(0x67, gbc.readMem(0x82ac));
        // CB 67 0258
        gbc.setState(0x2355, 0x53a1, 0x5880, 0x90a6, 0x1381, 0xb725, 0x0, 0x1);
        gbc.writeMem(0x2355, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x53a1, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0259
        gbc.setState(0x51e3, 0xa0f3, 0x75e0, 0x1f21, 0x15c5, 0x2a42, 0x1, 0x1);
        gbc.writeMem(0x51e3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa0f3, gbc.sp());
        EXPECT(0x51e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 025A
        gbc.setState(0x470, 0xbe53, 0x6990, 0x8556, 0x37aa, 0x537e, 0x1, 0x0);
        gbc.writeMem(0x470, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0x472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 025B
        gbc.setState(0x5c80, 0x5110, 0x2210, 0x7459, 0x9184, 0x302e, 0x0, 0x1);
        gbc.writeMem(0x5c80, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5110, gbc.sp());
        EXPECT(0x5c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 025C
        gbc.setState(0xb975, 0xf25d, 0xe5b0, 0xa72f, 0xd028, 0x1027, 0x1, 0x1);
        gbc.writeMem(0xb975, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf25d, gbc.sp());
        EXPECT(0xb977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb975));
        EXPECT(0x67, gbc.readMem(0xb976));
        // CB 67 025D
        gbc.setState(0x709c, 0x8168, 0x9730, 0xc20e, 0x374c, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0x709c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8168, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 025E
        gbc.setState(0xaa2e, 0xfc50, 0xd680, 0xb5d1, 0xf0a6, 0x6167, 0x0, 0x1);
        gbc.writeMem(0xaa2e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfc50, gbc.sp());
        EXPECT(0xaa30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2e));
        EXPECT(0x67, gbc.readMem(0xaa2f));
        // CB 67 025F
        gbc.setState(0x53a, 0x9849, 0x61c0, 0x39aa, 0x467e, 0xa665, 0x1, 0x0);
        gbc.writeMem(0x53a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0x53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0260
        gbc.setState(0xc42c, 0x234e, 0xa9a0, 0x9e3c, 0x7094, 0x19a1, 0x1, 0x1);
        gbc.writeMem(0xc42c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x234e, gbc.sp());
        EXPECT(0xc42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42c));
        EXPECT(0x67, gbc.readMem(0xc42d));
        // CB 67 0261
        gbc.setState(0x8d45, 0x1ce7, 0x2040, 0x4718, 0xbe05, 0x7f85, 0x1, 0x1);
        gbc.writeMem(0x8d45, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1ce7, gbc.sp());
        EXPECT(0x8d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d45));
        EXPECT(0x67, gbc.readMem(0x8d46));
        // CB 67 0262
        gbc.setState(0x3494, 0xf2f2, 0x3a90, 0xed06, 0xec37, 0x7e21, 0x0, 0x1);
        gbc.writeMem(0x3494, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf2f2, gbc.sp());
        EXPECT(0x3496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0263
        gbc.setState(0x8919, 0x5205, 0x26e0, 0xc82f, 0x6bf3, 0x7868, 0x1, 0x0);
        gbc.writeMem(0x8919, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0x891b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8919));
        EXPECT(0x67, gbc.readMem(0x891a));
        // CB 67 0264
        gbc.setState(0x7ee2, 0x83a6, 0x1720, 0x2b70, 0x409f, 0x55cc, 0x1, 0x1);
        gbc.writeMem(0x7ee2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x83a6, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0265
        gbc.setState(0xc482, 0x80e2, 0x3b20, 0x6214, 0xbff0, 0x6208, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x80e2, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0x67, gbc.readMem(0xc483));
        // CB 67 0266
        gbc.setState(0xc87d, 0x234a, 0x8000, 0x918, 0xb5a4, 0x4f11, 0x1, 0x1);
        gbc.writeMem(0xc87d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x234a, gbc.sp());
        EXPECT(0xc87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87d));
        EXPECT(0x67, gbc.readMem(0xc87e));
        // CB 67 0267
        gbc.setState(0xe1e2, 0xd0e2, 0x92c0, 0x5938, 0x1a5a, 0xfb01, 0x1, 0x1);
        gbc.writeMem(0xe1e2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0xe1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e2));
        EXPECT(0x67, gbc.readMem(0xe1e3));
        // CB 67 0268
        gbc.setState(0x1263, 0xa95f, 0x7590, 0xf89d, 0x8d3a, 0xa279, 0x0, 0x0);
        gbc.writeMem(0x1263, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x1265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0269
        gbc.setState(0x842a, 0xa78, 0xf830, 0xcd09, 0x215c, 0xeb46, 0x1, 0x1);
        gbc.writeMem(0x842a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa78, gbc.sp());
        EXPECT(0x842c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x842a));
        EXPECT(0x67, gbc.readMem(0x842b));
        // CB 67 026A
        gbc.setState(0x50f2, 0xb320, 0xc830, 0xaf82, 0xf5a1, 0x3500, 0x0, 0x0);
        gbc.writeMem(0x50f2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb320, gbc.sp());
        EXPECT(0x50f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 026B
        gbc.setState(0xddec, 0xfeed, 0x68c0, 0x95ec, 0x150, 0x325b, 0x1, 0x0);
        gbc.writeMem(0xddec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfeed, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddec));
        EXPECT(0x67, gbc.readMem(0xdded));
        // CB 67 026C
        gbc.setState(0x127a, 0x987c, 0x9f0, 0x856a, 0x55f8, 0xe2c6, 0x0, 0x0);
        gbc.writeMem(0x127a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x987c, gbc.sp());
        EXPECT(0x127c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 026D
        gbc.setState(0x1106, 0x869a, 0xb930, 0xb6a4, 0x4553, 0xe771, 0x0, 0x0);
        gbc.writeMem(0x1106, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x1108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 026E
        gbc.setState(0xba, 0x6d90, 0xead0, 0xec54, 0x74e5, 0xd8aa, 0x1, 0x1);
        gbc.writeMem(0xba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6d90, gbc.sp());
        EXPECT(0xbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 026F
        gbc.setState(0xde72, 0x89aa, 0x9f80, 0xbb4a, 0x936f, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0xde72, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x89aa, gbc.sp());
        EXPECT(0xde74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde72));
        EXPECT(0x67, gbc.readMem(0xde73));
        // CB 67 0270
        gbc.setState(0x33c2, 0xa6ea, 0x2070, 0x61eb, 0xfd05, 0x3011, 0x1, 0x0);
        gbc.writeMem(0x33c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa6ea, gbc.sp());
        EXPECT(0x33c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0271
        gbc.setState(0xdb98, 0xa985, 0x430, 0x6a84, 0x41c3, 0x82b7, 0x0, 0x1);
        gbc.writeMem(0xdb98, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa985, gbc.sp());
        EXPECT(0xdb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb98));
        EXPECT(0x67, gbc.readMem(0xdb99));
        // CB 67 0272
        gbc.setState(0x2591, 0x5825, 0xaf90, 0x85dd, 0x3bc2, 0x60de, 0x0, 0x0);
        gbc.writeMem(0x2591, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x2593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0273
        gbc.setState(0x625a, 0x7d4c, 0x20, 0xc6dd, 0xf5a6, 0x609e, 0x1, 0x1);
        gbc.writeMem(0x625a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7d4c, gbc.sp());
        EXPECT(0x625c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0274
        gbc.setState(0xcc36, 0x9cce, 0x98c0, 0x8e44, 0xe144, 0xe7a2, 0x0, 0x0);
        gbc.writeMem(0xcc36, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9cce, gbc.sp());
        EXPECT(0xcc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc36));
        EXPECT(0x67, gbc.readMem(0xcc37));
        // CB 67 0275
        gbc.setState(0xab55, 0xa2fd, 0x6790, 0x6819, 0xde0e, 0xa009, 0x0, 0x0);
        gbc.writeMem(0xab55, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa2fd, gbc.sp());
        EXPECT(0xab57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab55));
        EXPECT(0x67, gbc.readMem(0xab56));
        // CB 67 0276
        gbc.setState(0xde20, 0x5b47, 0x1fb0, 0x4d1b, 0x3cd4, 0xbbb9, 0x1, 0x1);
        gbc.writeMem(0xde20, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5b47, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde20));
        EXPECT(0x67, gbc.readMem(0xde21));
        // CB 67 0277
        gbc.setState(0x570a, 0xeaf3, 0x8c60, 0xf722, 0xea8c, 0x7dfc, 0x0, 0x0);
        gbc.writeMem(0x570a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xeaf3, gbc.sp());
        EXPECT(0x570c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0278
        gbc.setState(0xe973, 0x5045, 0xa200, 0xf012, 0xd700, 0x9901, 0x1, 0x1);
        gbc.writeMem(0xe973, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5045, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe973));
        EXPECT(0x67, gbc.readMem(0xe974));
        // CB 67 0279
        gbc.setState(0x7d5d, 0xd7de, 0xc930, 0x8e0b, 0x81e2, 0x25ed, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 027A
        gbc.setState(0x10f1, 0x3c15, 0x5960, 0x469e, 0xd146, 0x3c0e, 0x1, 0x1);
        gbc.writeMem(0x10f1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3c15, gbc.sp());
        EXPECT(0x10f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 027C
        gbc.setState(0xd000, 0xf44e, 0x9960, 0x2d48, 0xeffd, 0xb9ad, 0x0, 0x1);
        gbc.writeMem(0xd000, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0xd002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd000));
        EXPECT(0x67, gbc.readMem(0xd001));
        // CB 67 027D
        gbc.setState(0x14d3, 0xec14, 0xdb70, 0x385a, 0x82df, 0xd, 0x0, 0x1);
        gbc.writeMem(0x14d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xec14, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 027E
        gbc.setState(0x1dce, 0x90a2, 0xe250, 0x1bf4, 0x8cc7, 0x3c3e, 0x1, 0x0);
        gbc.writeMem(0x1dce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x90a2, gbc.sp());
        EXPECT(0x1dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 027F
        gbc.setState(0xb079, 0xdb18, 0x6bf0, 0x8c14, 0x8913, 0x24f5, 0x1, 0x1);
        gbc.writeMem(0xb079, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdb18, gbc.sp());
        EXPECT(0xb07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb079));
        EXPECT(0x67, gbc.readMem(0xb07a));
        // CB 67 0280
        gbc.setState(0xaeb2, 0x4b2e, 0xeb60, 0x2bea, 0x8bf2, 0x409, 0x1, 0x0);
        gbc.writeMem(0xaeb2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4b2e, gbc.sp());
        EXPECT(0xaeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb2));
        EXPECT(0x67, gbc.readMem(0xaeb3));
        // CB 67 0281
        gbc.setState(0xb5d, 0xe8ea, 0xde90, 0xe8bb, 0xb65, 0x9959, 0x0, 0x0);
        gbc.writeMem(0xb5d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe8ea, gbc.sp());
        EXPECT(0xb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0282
        gbc.setState(0xe4fb, 0x89ce, 0xaba0, 0x1374, 0x8066, 0x2db9, 0x1, 0x1);
        gbc.writeMem(0xe4fb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0xe4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fb));
        EXPECT(0x67, gbc.readMem(0xe4fc));
        // CB 67 0283
        gbc.setState(0xe446, 0xb2b8, 0x7340, 0xc4b4, 0xa782, 0xdf03, 0x1, 0x0);
        gbc.writeMem(0xe446, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb2b8, gbc.sp());
        EXPECT(0xe448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe446));
        EXPECT(0x67, gbc.readMem(0xe447));
        // CB 67 0284
        gbc.setState(0xb406, 0xc95f, 0x9d50, 0xfcdf, 0x1826, 0xef68, 0x1, 0x0);
        gbc.writeMem(0xb406, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc95f, gbc.sp());
        EXPECT(0xb408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb406));
        EXPECT(0x67, gbc.readMem(0xb407));
        // CB 67 0285
        gbc.setState(0xa302, 0xd5a5, 0xaa70, 0x3c38, 0xbb49, 0xd5be, 0x0, 0x0);
        gbc.writeMem(0xa302, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd5a5, gbc.sp());
        EXPECT(0xa304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa302));
        EXPECT(0x67, gbc.readMem(0xa303));
        // CB 67 0287
        gbc.setState(0x6b23, 0x3750, 0x8590, 0x5916, 0x194c, 0xa98b, 0x0, 0x1);
        gbc.writeMem(0x6b23, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3750, gbc.sp());
        EXPECT(0x6b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0288
        gbc.setState(0x94de, 0x20b4, 0xb3e0, 0xd6c4, 0x3dde, 0xe25, 0x0, 0x1);
        gbc.writeMem(0x94de, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x20b4, gbc.sp());
        EXPECT(0x94e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94de));
        EXPECT(0x67, gbc.readMem(0x94df));
        // CB 67 0289
        gbc.setState(0xdc9, 0xee33, 0x12a0, 0x7b4d, 0xa064, 0xf169, 0x1, 0x0);
        gbc.writeMem(0xdc9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xee33, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 028A
        gbc.setState(0x4cd5, 0x3396, 0xe870, 0x4434, 0x59b7, 0x3d62, 0x1, 0x1);
        gbc.writeMem(0x4cd5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3396, gbc.sp());
        EXPECT(0x4cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 028B
        gbc.setState(0xc507, 0x10f7, 0x970, 0x9e97, 0x6699, 0x362f, 0x0, 0x1);
        gbc.writeMem(0xc507, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x10f7, gbc.sp());
        EXPECT(0xc509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc507));
        EXPECT(0x67, gbc.readMem(0xc508));
        // CB 67 028C
        gbc.setState(0x30e5, 0xeec1, 0xdb10, 0x1d29, 0x92da, 0x51e6, 0x0, 0x1);
        gbc.writeMem(0x30e5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeec1, gbc.sp());
        EXPECT(0x30e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 028E
        gbc.setState(0xa81, 0xa1d5, 0x9270, 0x5248, 0x9c1f, 0x37f6, 0x1, 0x0);
        gbc.writeMem(0xa81, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa1d5, gbc.sp());
        EXPECT(0xa83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 028F
        gbc.setState(0x26c9, 0xa3b4, 0xbf40, 0x4420, 0xeaf4, 0x29a1, 0x0, 0x1);
        gbc.writeMem(0x26c9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa3b4, gbc.sp());
        EXPECT(0x26cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0290
        gbc.setState(0x7c9f, 0x3e88, 0xe6e0, 0xa336, 0x5d32, 0xa17b, 0x0, 0x0);
        gbc.writeMem(0x7c9f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3e88, gbc.sp());
        EXPECT(0x7ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0291
        gbc.setState(0xcee6, 0xce8, 0x74f0, 0x17a4, 0x2972, 0x5b46, 0x0, 0x1);
        gbc.writeMem(0xcee6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xce8, gbc.sp());
        EXPECT(0xcee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee6));
        EXPECT(0x67, gbc.readMem(0xcee7));
        // CB 67 0292
        gbc.setState(0x444c, 0x70d9, 0xcb0, 0xb1ea, 0x8ab9, 0x2aa7, 0x0, 0x0);
        gbc.writeMem(0x444c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x70d9, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0293
        gbc.setState(0x3477, 0x44bc, 0xea50, 0x9a9, 0xb491, 0xaa37, 0x0, 0x0);
        gbc.writeMem(0x3477, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x44bc, gbc.sp());
        EXPECT(0x3479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0294
        gbc.setState(0x2fd8, 0x5cb1, 0x4140, 0xdcf1, 0x1b05, 0xcc70, 0x0, 0x0);
        gbc.writeMem(0x2fd8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5cb1, gbc.sp());
        EXPECT(0x2fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0295
        gbc.setState(0xcd56, 0xb44b, 0x74c0, 0x8792, 0xd740, 0x1d0f, 0x1, 0x1);
        gbc.writeMem(0xcd56, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb44b, gbc.sp());
        EXPECT(0xcd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd56));
        EXPECT(0x67, gbc.readMem(0xcd57));
        // CB 67 0296
        gbc.setState(0xde78, 0x9814, 0xcc20, 0xb37e, 0x44e2, 0xf48c, 0x1, 0x0);
        gbc.writeMem(0xde78, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0xde7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde78));
        EXPECT(0x67, gbc.readMem(0xde79));
        // CB 67 0297
        gbc.setState(0xb919, 0x303b, 0xecf0, 0x7a4, 0x506, 0x1d36, 0x1, 0x1);
        gbc.writeMem(0xb919, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0xb91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb919));
        EXPECT(0x67, gbc.readMem(0xb91a));
        // CB 67 0298
        gbc.setState(0x892a, 0x2e5f, 0x7d60, 0x32dc, 0x9494, 0x59f9, 0x0, 0x1);
        gbc.writeMem(0x892a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2e5f, gbc.sp());
        EXPECT(0x892c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892a));
        EXPECT(0x67, gbc.readMem(0x892b));
        // CB 67 0299
        gbc.setState(0xcaf5, 0xa516, 0xd720, 0xd8a1, 0x6984, 0x87cd, 0x0, 0x1);
        gbc.writeMem(0xcaf5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa516, gbc.sp());
        EXPECT(0xcaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf5));
        EXPECT(0x67, gbc.readMem(0xcaf6));
        // CB 67 029A
        gbc.setState(0x1503, 0x5bba, 0xaf30, 0xd77, 0x2f6f, 0x7283, 0x1, 0x1);
        gbc.writeMem(0x1503, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5bba, gbc.sp());
        EXPECT(0x1505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 029B
        gbc.setState(0x7f15, 0xec6a, 0x250, 0x91f, 0x9c46, 0xe73a, 0x0, 0x0);
        gbc.writeMem(0x7f15, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xec6a, gbc.sp());
        EXPECT(0x7f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 029C
        gbc.setState(0x83af, 0x61f6, 0x82f0, 0x9370, 0xf72d, 0x4a53, 0x1, 0x1);
        gbc.writeMem(0x83af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x61f6, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83af));
        EXPECT(0x67, gbc.readMem(0x83b0));
        // CB 67 029D
        gbc.setState(0xbaa, 0x3481, 0xb550, 0xcfc1, 0x49a5, 0x2f06, 0x0, 0x1);
        gbc.writeMem(0xbaa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3481, gbc.sp());
        EXPECT(0xbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 029E
        gbc.setState(0xecfc, 0x4000, 0x45f0, 0x74c, 0x138e, 0xc397, 0x1, 0x0);
        gbc.writeMem(0xecfc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0xecfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfc));
        EXPECT(0x67, gbc.readMem(0xecfd));
        // CB 67 029F
        gbc.setState(0xb53c, 0x8fa8, 0x7ce0, 0xc210, 0x9e3d, 0x206a, 0x0, 0x1);
        gbc.writeMem(0xb53c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8fa8, gbc.sp());
        EXPECT(0xb53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53c));
        EXPECT(0x67, gbc.readMem(0xb53d));
        // CB 67 02A0
        gbc.setState(0x20bb, 0xf99b, 0xa10, 0xe2e3, 0x3cc7, 0xc1e, 0x0, 0x0);
        gbc.writeMem(0x20bb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x20bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02A1
        gbc.setState(0xb3ea, 0xbf35, 0x6bf0, 0x2452, 0x4128, 0xab22, 0x1, 0x1);
        gbc.writeMem(0xb3ea, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbf35, gbc.sp());
        EXPECT(0xb3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ea));
        EXPECT(0x67, gbc.readMem(0xb3eb));
        // CB 67 02A2
        gbc.setState(0x8230, 0xc762, 0x5b20, 0x7519, 0x3aa0, 0xd5af, 0x0, 0x1);
        gbc.writeMem(0x8230, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc762, gbc.sp());
        EXPECT(0x8232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8230));
        EXPECT(0x67, gbc.readMem(0x8231));
        // CB 67 02A3
        gbc.setState(0x2b67, 0xf083, 0x58c0, 0x561, 0xb530, 0x932, 0x0, 0x0);
        gbc.writeMem(0x2b67, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf083, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02A4
        gbc.setState(0x9ac3, 0x1803, 0xd8e0, 0x5212, 0x1a1, 0x7495, 0x1, 0x1);
        gbc.writeMem(0x9ac3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1803, gbc.sp());
        EXPECT(0x9ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac3));
        EXPECT(0x67, gbc.readMem(0x9ac4));
        // CB 67 02A5
        gbc.setState(0x954e, 0xd4bb, 0xcd40, 0xd0a9, 0xb6ec, 0xb19d, 0x1, 0x0);
        gbc.writeMem(0x954e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd4bb, gbc.sp());
        EXPECT(0x9550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954e));
        EXPECT(0x67, gbc.readMem(0x954f));
        // CB 67 02A6
        gbc.setState(0xeced, 0x8475, 0xc2e0, 0xcb34, 0x50dd, 0xf52f, 0x1, 0x0);
        gbc.writeMem(0xeced, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8475, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeced));
        EXPECT(0x67, gbc.readMem(0xecee));
        // CB 67 02A7
        gbc.setState(0x391b, 0x3f77, 0x3a00, 0x580a, 0x217e, 0xbd16, 0x1, 0x1);
        gbc.writeMem(0x391b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3f77, gbc.sp());
        EXPECT(0x391d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02A8
        gbc.setState(0x493, 0xcabc, 0x1510, 0x4913, 0xaa59, 0x7148, 0x1, 0x1);
        gbc.writeMem(0x493, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcabc, gbc.sp());
        EXPECT(0x495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02A9
        gbc.setState(0xb3cb, 0x4058, 0x9aa0, 0x5372, 0x37a2, 0x62e8, 0x1, 0x0);
        gbc.writeMem(0xb3cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4058, gbc.sp());
        EXPECT(0xb3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cb));
        EXPECT(0x67, gbc.readMem(0xb3cc));
        // CB 67 02AA
        gbc.setState(0xad95, 0x6f15, 0x6d90, 0x35b1, 0x84b8, 0x7def, 0x0, 0x1);
        gbc.writeMem(0xad95, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0xad97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad95));
        EXPECT(0x67, gbc.readMem(0xad96));
        // CB 67 02AB
        gbc.setState(0xefbf, 0x44bf, 0x2e90, 0xf9d, 0x8a9, 0x49e0, 0x0, 0x1);
        gbc.writeMem(0xefbf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbf));
        EXPECT(0x67, gbc.readMem(0xefc0));
        // CB 67 02AC
        gbc.setState(0x3d8, 0x5f0f, 0xfd50, 0x592d, 0xa614, 0xcaed, 0x1, 0x0);
        gbc.writeMem(0x3d8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5f0f, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02AD
        gbc.setState(0x321d, 0x8b4c, 0xb020, 0xb027, 0x6ba7, 0xb99, 0x1, 0x0);
        gbc.writeMem(0x321d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0x321f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02AE
        gbc.setState(0x96c3, 0xcaeb, 0x8f30, 0x9206, 0x1492, 0x691d, 0x0, 0x0);
        gbc.writeMem(0x96c3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcaeb, gbc.sp());
        EXPECT(0x96c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c3));
        EXPECT(0x67, gbc.readMem(0x96c4));
        // CB 67 02AF
        gbc.setState(0x53b3, 0xe9ae, 0xbf00, 0x51a5, 0x65ef, 0xedce, 0x0, 0x1);
        gbc.writeMem(0x53b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe9ae, gbc.sp());
        EXPECT(0x53b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02B0
        gbc.setState(0x8078, 0x7965, 0x9750, 0x697c, 0x2cb8, 0x921d, 0x0, 0x0);
        gbc.writeMem(0x8078, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0x807a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8078));
        EXPECT(0x67, gbc.readMem(0x8079));
        // CB 67 02B1
        gbc.setState(0x94cc, 0xbe07, 0x73b0, 0x925f, 0xbf6a, 0xd593, 0x1, 0x1);
        gbc.writeMem(0x94cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbe07, gbc.sp());
        EXPECT(0x94ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cc));
        EXPECT(0x67, gbc.readMem(0x94cd));
        // CB 67 02B2
        gbc.setState(0x7e1b, 0x94de, 0x8f50, 0xac1b, 0x5fe9, 0xf12, 0x0, 0x0);
        gbc.writeMem(0x7e1b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x94de, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02B3
        gbc.setState(0xd4f4, 0xcabd, 0x1540, 0xa8d3, 0xa33b, 0xa664, 0x1, 0x0);
        gbc.writeMem(0xd4f4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xd4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f4));
        EXPECT(0x67, gbc.readMem(0xd4f5));
        // CB 67 02B4
        gbc.setState(0xbf95, 0x9f1e, 0x8000, 0x5023, 0xf8eb, 0x79a0, 0x0, 0x1);
        gbc.writeMem(0xbf95, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9f1e, gbc.sp());
        EXPECT(0xbf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf95));
        EXPECT(0x67, gbc.readMem(0xbf96));
        // CB 67 02B5
        gbc.setState(0x26e1, 0x3956, 0x5970, 0x20f9, 0x7072, 0xa243, 0x0, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3956, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02B6
        gbc.setState(0xdf0, 0xfe28, 0x1040, 0xb8e2, 0xa5cc, 0x9eea, 0x1, 0x1);
        gbc.writeMem(0xdf0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfe28, gbc.sp());
        EXPECT(0xdf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02B7
        gbc.setState(0x8288, 0xa5c3, 0xfe80, 0x5c65, 0x1626, 0x7655, 0x0, 0x1);
        gbc.writeMem(0x8288, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa5c3, gbc.sp());
        EXPECT(0x828a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8288));
        EXPECT(0x67, gbc.readMem(0x8289));
        // CB 67 02B8
        gbc.setState(0xe176, 0xfd0d, 0x79a0, 0xa461, 0x3da7, 0x62df, 0x0, 0x1);
        gbc.writeMem(0xe176, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfd0d, gbc.sp());
        EXPECT(0xe178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe176));
        EXPECT(0x67, gbc.readMem(0xe177));
        // CB 67 02B9
        gbc.setState(0x8c43, 0xe32, 0x120, 0xdfc3, 0xd15b, 0xca84, 0x1, 0x1);
        gbc.writeMem(0x8c43, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe32, gbc.sp());
        EXPECT(0x8c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c43));
        EXPECT(0x67, gbc.readMem(0x8c44));
        // CB 67 02BA
        gbc.setState(0x339d, 0x9094, 0x6de0, 0x3930, 0xb9f3, 0xf8e6, 0x0, 0x1);
        gbc.writeMem(0x339d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9094, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02BB
        gbc.setState(0xa615, 0x196, 0xcda0, 0x593e, 0xd1dc, 0x6a3f, 0x0, 0x1);
        gbc.writeMem(0xa615, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x196, gbc.sp());
        EXPECT(0xa617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa615));
        EXPECT(0x67, gbc.readMem(0xa616));
        // CB 67 02BC
        gbc.setState(0x5d39, 0x31f9, 0x4820, 0x11d3, 0x3536, 0xc012, 0x1, 0x1);
        gbc.writeMem(0x5d39, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x31f9, gbc.sp());
        EXPECT(0x5d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02BD
        gbc.setState(0x92dd, 0xf913, 0x5110, 0x4b4f, 0x3568, 0x6f91, 0x1, 0x0);
        gbc.writeMem(0x92dd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf913, gbc.sp());
        EXPECT(0x92df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92dd));
        EXPECT(0x67, gbc.readMem(0x92de));
        // CB 67 02BE
        gbc.setState(0x9e8a, 0x1a5d, 0x70b0, 0xbb0d, 0xd2cf, 0xad3, 0x0, 0x0);
        gbc.writeMem(0x9e8a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1a5d, gbc.sp());
        EXPECT(0x9e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8a));
        EXPECT(0x67, gbc.readMem(0x9e8b));
        // CB 67 02BF
        gbc.setState(0xd96c, 0x84a2, 0x97e0, 0x2610, 0xd79b, 0x44b7, 0x0, 0x0);
        gbc.writeMem(0xd96c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x84a2, gbc.sp());
        EXPECT(0xd96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96c));
        EXPECT(0x67, gbc.readMem(0xd96d));
        // CB 67 02C0
        gbc.setState(0x9504, 0x1247, 0xfef0, 0x8ec5, 0xf1d5, 0x4ac, 0x1, 0x0);
        gbc.writeMem(0x9504, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1247, gbc.sp());
        EXPECT(0x9506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9504));
        EXPECT(0x67, gbc.readMem(0x9505));
        // CB 67 02C1
        gbc.setState(0xd9c3, 0x326f, 0xd820, 0xd69a, 0x1102, 0x5124, 0x1, 0x1);
        gbc.writeMem(0xd9c3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x326f, gbc.sp());
        EXPECT(0xd9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c3));
        EXPECT(0x67, gbc.readMem(0xd9c4));
        // CB 67 02C2
        gbc.setState(0x1ebe, 0x2b9c, 0x2a90, 0x7860, 0x909e, 0xaf1d, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2b9c, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02C3
        gbc.setState(0x838, 0x2253, 0x9d10, 0xde01, 0x3661, 0xfb91, 0x0, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02C4
        gbc.setState(0x6e7a, 0xa5de, 0x1ca0, 0xa147, 0xdc35, 0x19db, 0x1, 0x0);
        gbc.writeMem(0x6e7a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa5de, gbc.sp());
        EXPECT(0x6e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02C5
        gbc.setState(0xac07, 0xa6d2, 0xfb00, 0x461b, 0x667c, 0xc968, 0x1, 0x1);
        gbc.writeMem(0xac07, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac07));
        EXPECT(0x67, gbc.readMem(0xac08));
        // CB 67 02C6
        gbc.setState(0xb375, 0xc84d, 0xc970, 0xebc1, 0x1d9d, 0xb502, 0x1, 0x1);
        gbc.writeMem(0xb375, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb375));
        EXPECT(0x67, gbc.readMem(0xb376));
        // CB 67 02C7
        gbc.setState(0xab00, 0x6fb2, 0x9430, 0x93e3, 0xf39c, 0x52d, 0x1, 0x1);
        gbc.writeMem(0xab00, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6fb2, gbc.sp());
        EXPECT(0xab02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab00));
        EXPECT(0x67, gbc.readMem(0xab01));
        // CB 67 02C9
        gbc.setState(0x22a5, 0x4a0b, 0x1680, 0x2883, 0xa5cc, 0xc10d, 0x0, 0x0);
        gbc.writeMem(0x22a5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4a0b, gbc.sp());
        EXPECT(0x22a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02CA
        gbc.setState(0x4772, 0x6c03, 0x98a0, 0x8bc4, 0x2d49, 0x888b, 0x0, 0x0);
        gbc.writeMem(0x4772, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6c03, gbc.sp());
        EXPECT(0x4774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02CC
        gbc.setState(0x2154, 0x353e, 0x7f00, 0xb45b, 0x2838, 0x1845, 0x0, 0x1);
        gbc.writeMem(0x2154, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x353e, gbc.sp());
        EXPECT(0x2156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02CD
        gbc.setState(0x5da7, 0x5553, 0xc530, 0x4f5e, 0x2a1a, 0x5c8e, 0x0, 0x0);
        gbc.writeMem(0x5da7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5553, gbc.sp());
        EXPECT(0x5da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02CE
        gbc.setState(0x2edf, 0xdc94, 0x2fa0, 0x9d27, 0x676c, 0x6ebd, 0x1, 0x0);
        gbc.writeMem(0x2edf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdc94, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02CF
        gbc.setState(0xb305, 0x748, 0xbc30, 0x1ddc, 0xe60f, 0xb171, 0x1, 0x1);
        gbc.writeMem(0xb305, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb305));
        EXPECT(0x67, gbc.readMem(0xb306));
        // CB 67 02D0
        gbc.setState(0x5c6, 0x82d, 0x33a0, 0x76c4, 0xbae7, 0x504c, 0x1, 0x0);
        gbc.writeMem(0x5c6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x82d, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02D1
        gbc.setState(0x801a, 0x79e5, 0xb600, 0xf0dc, 0xb79, 0x46dc, 0x1, 0x0);
        gbc.writeMem(0x801a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x79e5, gbc.sp());
        EXPECT(0x801c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801a));
        EXPECT(0x67, gbc.readMem(0x801b));
        // CB 67 02D2
        gbc.setState(0x6c5a, 0xb34d, 0xe110, 0x80b3, 0xef3f, 0xbb5f, 0x1, 0x0);
        gbc.writeMem(0x6c5a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb34d, gbc.sp());
        EXPECT(0x6c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02D3
        gbc.setState(0x53cf, 0xe9d8, 0x33e0, 0x6d7d, 0x7b5a, 0xd6cf, 0x1, 0x0);
        gbc.writeMem(0x53cf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0x53d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02D5
        gbc.setState(0xaeef, 0x3cd3, 0x1d60, 0x11de, 0x4eaf, 0xdfe4, 0x0, 0x1);
        gbc.writeMem(0xaeef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3cd3, gbc.sp());
        EXPECT(0xaef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeef));
        EXPECT(0x67, gbc.readMem(0xaef0));
        // CB 67 02D6
        gbc.setState(0x6367, 0xc746, 0x2340, 0xa99f, 0x3176, 0x915e, 0x0, 0x0);
        gbc.writeMem(0x6367, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc746, gbc.sp());
        EXPECT(0x6369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02D8
        gbc.setState(0x153e, 0x4ff3, 0xbda0, 0x5c1, 0xe4f1, 0x6b37, 0x0, 0x0);
        gbc.writeMem(0x153e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4ff3, gbc.sp());
        EXPECT(0x1540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02D9
        gbc.setState(0xdbc4, 0x8e66, 0x6a20, 0x92fc, 0x2587, 0xbc3c, 0x1, 0x0);
        gbc.writeMem(0xdbc4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8e66, gbc.sp());
        EXPECT(0xdbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc4));
        EXPECT(0x67, gbc.readMem(0xdbc5));
        // CB 67 02DA
        gbc.setState(0xbbc7, 0x6f98, 0xd60, 0xc3d, 0x2095, 0xf7d6, 0x1, 0x1);
        gbc.writeMem(0xbbc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6f98, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc7));
        EXPECT(0x67, gbc.readMem(0xbbc8));
        // CB 67 02DB
        gbc.setState(0xe958, 0x1c51, 0x9330, 0x2700, 0xa8d7, 0xcc8c, 0x1, 0x1);
        gbc.writeMem(0xe958, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1c51, gbc.sp());
        EXPECT(0xe95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe958));
        EXPECT(0x67, gbc.readMem(0xe959));
        // CB 67 02DD
        gbc.setState(0xda1d, 0xd883, 0x6250, 0x6da7, 0x4de7, 0x8830, 0x1, 0x0);
        gbc.writeMem(0xda1d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd883, gbc.sp());
        EXPECT(0xda1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1d));
        EXPECT(0x67, gbc.readMem(0xda1e));
        // CB 67 02DE
        gbc.setState(0x37d2, 0xcd6, 0xa510, 0xec81, 0xb73f, 0xa4dc, 0x0, 0x1);
        gbc.writeMem(0x37d2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcd6, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02DF
        gbc.setState(0x4db5, 0x71, 0x3d70, 0xd7f5, 0xc582, 0x3fcb, 0x1, 0x1);
        gbc.writeMem(0x4db5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x71, gbc.sp());
        EXPECT(0x4db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02E0
        gbc.setState(0x49bb, 0xa26d, 0xe6a0, 0x504d, 0x6f24, 0x90b9, 0x1, 0x0);
        gbc.writeMem(0x49bb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa26d, gbc.sp());
        EXPECT(0x49bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02E1
        gbc.setState(0x765b, 0xef80, 0xca20, 0xfc37, 0x8c48, 0x9fd4, 0x0, 0x0);
        gbc.writeMem(0x765b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xef80, gbc.sp());
        EXPECT(0x765d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02E2
        gbc.setState(0x5259, 0xf00a, 0x9b60, 0xf060, 0x43f9, 0x33b1, 0x1, 0x1);
        gbc.writeMem(0x5259, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf00a, gbc.sp());
        EXPECT(0x525b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02E3
        gbc.setState(0x1f99, 0xfcdc, 0x1b50, 0x1f60, 0xee70, 0x41cc, 0x0, 0x1);
        gbc.writeMem(0x1f99, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfcdc, gbc.sp());
        EXPECT(0x1f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02E4
        gbc.setState(0xd357, 0xc61e, 0xb1a0, 0x7db2, 0x1a23, 0x3816, 0x1, 0x1);
        gbc.writeMem(0xd357, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc61e, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd357));
        EXPECT(0x67, gbc.readMem(0xd358));
        // CB 67 02E5
        gbc.setState(0x6db, 0x8a21, 0x7670, 0xcace, 0xee57, 0xbbf3, 0x0, 0x0);
        gbc.writeMem(0x6db, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8a21, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02E6
        gbc.setState(0x7551, 0x293b, 0x6820, 0xebb8, 0x6bd9, 0x1c10, 0x1, 0x0);
        gbc.writeMem(0x7551, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x293b, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02E7
        gbc.setState(0x4e6c, 0xec43, 0xedf0, 0x694, 0xe780, 0x50f7, 0x1, 0x0);
        gbc.writeMem(0x4e6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xec43, gbc.sp());
        EXPECT(0x4e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02E8
        gbc.setState(0xb309, 0xc2ae, 0x76d0, 0x8449, 0x1735, 0x135d, 0x0, 0x0);
        gbc.writeMem(0xb309, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0xb30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb309));
        EXPECT(0x67, gbc.readMem(0xb30a));
        // CB 67 02E9
        gbc.setState(0x1b25, 0xc6b8, 0xba30, 0x7121, 0x779e, 0x8ee5, 0x0, 0x0);
        gbc.writeMem(0x1b25, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc6b8, gbc.sp());
        EXPECT(0x1b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02EA
        gbc.setState(0xc94a, 0xb408, 0x8fe0, 0x8058, 0xf7c7, 0xa007, 0x1, 0x1);
        gbc.writeMem(0xc94a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb408, gbc.sp());
        EXPECT(0xc94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94a));
        EXPECT(0x67, gbc.readMem(0xc94b));
        // CB 67 02EB
        gbc.setState(0x31d3, 0xb662, 0xcdc0, 0x202, 0xbddc, 0xb1d8, 0x0, 0x1);
        gbc.writeMem(0x31d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb662, gbc.sp());
        EXPECT(0x31d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02EC
        gbc.setState(0x4f7f, 0x7a00, 0x9d30, 0xeaa5, 0xc807, 0x787c, 0x0, 0x1);
        gbc.writeMem(0x4f7f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7a00, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02ED
        gbc.setState(0x7bfb, 0xacb3, 0x4730, 0x3681, 0x282, 0x1693, 0x0, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xacb3, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02EE
        gbc.setState(0xbd5f, 0xaaee, 0xad60, 0x52b3, 0x7909, 0x430a, 0x0, 0x0);
        gbc.writeMem(0xbd5f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaaee, gbc.sp());
        EXPECT(0xbd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5f));
        EXPECT(0x67, gbc.readMem(0xbd60));
        // CB 67 02EF
        gbc.setState(0x93af, 0xe0d9, 0x3840, 0x171e, 0x898a, 0xe3a, 0x0, 0x1);
        gbc.writeMem(0x93af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe0d9, gbc.sp());
        EXPECT(0x93b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93af));
        EXPECT(0x67, gbc.readMem(0x93b0));
        // CB 67 02F0
        gbc.setState(0x46d3, 0x1e32, 0x5ce0, 0xe862, 0x9ec5, 0x5e55, 0x0, 0x0);
        gbc.writeMem(0x46d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1e32, gbc.sp());
        EXPECT(0x46d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02F1
        gbc.setState(0x40de, 0x622b, 0xfcf0, 0xa1bf, 0xe642, 0x6e7, 0x0, 0x0);
        gbc.writeMem(0x40de, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x622b, gbc.sp());
        EXPECT(0x40e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02F2
        gbc.setState(0xac3e, 0xff49, 0x7c30, 0xc0a5, 0x90a6, 0xcf38, 0x1, 0x0);
        gbc.writeMem(0xac3e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xff49, gbc.sp());
        EXPECT(0xac40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3e));
        EXPECT(0x67, gbc.readMem(0xac3f));
        // CB 67 02F4
        gbc.setState(0x7f16, 0xecd5, 0xfe20, 0xd273, 0xdd0c, 0x964b, 0x1, 0x0);
        gbc.writeMem(0x7f16, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02F5
        gbc.setState(0x45cb, 0xabb4, 0xe530, 0x9486, 0xf5b8, 0x81c1, 0x0, 0x0);
        gbc.writeMem(0x45cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02F6
        gbc.setState(0x2156, 0x95c3, 0xe280, 0xcb51, 0x509d, 0xc37, 0x0, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x95c3, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02F7
        gbc.setState(0xbf39, 0xd0e5, 0x9610, 0xdaf6, 0xa410, 0xf397, 0x1, 0x0);
        gbc.writeMem(0xbf39, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd0e5, gbc.sp());
        EXPECT(0xbf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf39));
        EXPECT(0x67, gbc.readMem(0xbf3a));
        // CB 67 02F8
        gbc.setState(0x9dd7, 0xec26, 0xe730, 0xe9d0, 0x94fb, 0x7748, 0x1, 0x0);
        gbc.writeMem(0x9dd7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xec26, gbc.sp());
        EXPECT(0x9dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd7));
        EXPECT(0x67, gbc.readMem(0x9dd8));
        // CB 67 02FA
        gbc.setState(0x39f, 0xb8b2, 0xdd20, 0xc41c, 0x1df6, 0x18f4, 0x0, 0x0);
        gbc.writeMem(0x39f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02FB
        gbc.setState(0x67fe, 0xdb3, 0x44d0, 0x84f, 0xdf98, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0x67fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdb3, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02FC
        gbc.setState(0x319, 0xfef5, 0x3440, 0x73ba, 0x63d8, 0x6f74, 0x1, 0x1);
        gbc.writeMem(0x319, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfef5, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 02FD
        gbc.setState(0x18c6, 0xbbc7, 0x7f10, 0x5156, 0x975e, 0x5fbc, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbbc7, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02FE
        gbc.setState(0x5f07, 0xf214, 0x6fd0, 0x752f, 0xb791, 0x966c, 0x1, 0x0);
        gbc.writeMem(0x5f07, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf214, gbc.sp());
        EXPECT(0x5f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 02FF
        gbc.setState(0x9ed7, 0x33ff, 0xec00, 0xfd04, 0x184b, 0xd0d0, 0x1, 0x0);
        gbc.writeMem(0x9ed7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x33ff, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed7));
        EXPECT(0x67, gbc.readMem(0x9ed8));
        // CB 67 0300
        gbc.setState(0xdbe8, 0xa2b7, 0x92a0, 0xca25, 0x3ad2, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0xdbe8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0xdbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe8));
        EXPECT(0x67, gbc.readMem(0xdbe9));
        // CB 67 0301
        gbc.setState(0x6a91, 0x2b08, 0xfd20, 0x1f1d, 0xcbef, 0xd6de, 0x1, 0x0);
        gbc.writeMem(0x6a91, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2b08, gbc.sp());
        EXPECT(0x6a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0302
        gbc.setState(0x9e44, 0x9040, 0x7b50, 0x524f, 0xd151, 0x4343, 0x0, 0x0);
        gbc.writeMem(0x9e44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9040, gbc.sp());
        EXPECT(0x9e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e44));
        EXPECT(0x67, gbc.readMem(0x9e45));
        // CB 67 0303
        gbc.setState(0xbd3a, 0xc6a7, 0x9cf0, 0x58fe, 0x23ab, 0x5c2c, 0x1, 0x0);
        gbc.writeMem(0xbd3a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc6a7, gbc.sp());
        EXPECT(0xbd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd3a));
        EXPECT(0x67, gbc.readMem(0xbd3b));
        // CB 67 0304
        gbc.setState(0x1462, 0xc30, 0x9480, 0x2091, 0x7435, 0x33ad, 0x0, 0x0);
        gbc.writeMem(0x1462, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc30, gbc.sp());
        EXPECT(0x1464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0305
        gbc.setState(0xc069, 0xeb1a, 0xc1b0, 0xf6ac, 0x3df5, 0xd8e3, 0x1, 0x0);
        gbc.writeMem(0xc069, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xeb1a, gbc.sp());
        EXPECT(0xc06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc069));
        EXPECT(0x67, gbc.readMem(0xc06a));
        // CB 67 0306
        gbc.setState(0x7fc4, 0x9706, 0x8de0, 0xbb98, 0x35e6, 0x7ff6, 0x0, 0x0);
        gbc.writeMem(0x7fc4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0x7fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0307
        gbc.setState(0xcac7, 0xa44, 0xe880, 0x28d7, 0xa79b, 0x79d6, 0x0, 0x1);
        gbc.writeMem(0xcac7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa44, gbc.sp());
        EXPECT(0xcac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac7));
        EXPECT(0x67, gbc.readMem(0xcac8));
        // CB 67 0308
        gbc.setState(0x1ee4, 0xb762, 0x51e0, 0xafca, 0x8380, 0x97ec, 0x1, 0x1);
        gbc.writeMem(0x1ee4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb762, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0309
        gbc.setState(0xe7, 0x3d07, 0xfdc0, 0x3dfd, 0xc4b8, 0xd6ee, 0x1, 0x0);
        gbc.writeMem(0xe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3d07, gbc.sp());
        EXPECT(0xe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 030A
        gbc.setState(0xf04, 0xb0a9, 0xadd0, 0x26a8, 0xae98, 0xc8d9, 0x0, 0x0);
        gbc.writeMem(0xf04, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb0a9, gbc.sp());
        EXPECT(0xf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 030B
        gbc.setState(0x7bd8, 0x172, 0x7d40, 0x90e6, 0x256, 0xe9af, 0x0, 0x0);
        gbc.writeMem(0x7bd8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x172, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 030C
        gbc.setState(0x207a, 0x1ae0, 0xfd50, 0x7517, 0x4b78, 0x339a, 0x0, 0x1);
        gbc.writeMem(0x207a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1ae0, gbc.sp());
        EXPECT(0x207c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 030D
        gbc.setState(0x7f07, 0x86c8, 0x7a00, 0xe5b6, 0x74c7, 0x8764, 0x1, 0x1);
        gbc.writeMem(0x7f07, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x86c8, gbc.sp());
        EXPECT(0x7f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 030E
        gbc.setState(0x6c92, 0x1fb1, 0x5db0, 0x6e65, 0x13, 0x8ef2, 0x0, 0x1);
        gbc.writeMem(0x6c92, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1fb1, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 030F
        gbc.setState(0xeb0a, 0x525d, 0x5240, 0xe769, 0x7df6, 0x96f7, 0x1, 0x1);
        gbc.writeMem(0xeb0a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x525d, gbc.sp());
        EXPECT(0xeb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0a));
        EXPECT(0x67, gbc.readMem(0xeb0b));
        // CB 67 0310
        gbc.setState(0x58c0, 0x73e, 0x2a10, 0xabc4, 0xdb4e, 0xc40e, 0x0, 0x0);
        gbc.writeMem(0x58c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x73e, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0311
        gbc.setState(0xa47a, 0xb16, 0xb710, 0x57ea, 0xa75f, 0xf30, 0x1, 0x0);
        gbc.writeMem(0xa47a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb16, gbc.sp());
        EXPECT(0xa47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47a));
        EXPECT(0x67, gbc.readMem(0xa47b));
        // CB 67 0312
        gbc.setState(0xb547, 0x926e, 0x1070, 0x8db7, 0x5b6e, 0xaae5, 0x0, 0x1);
        gbc.writeMem(0xb547, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x926e, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb547));
        EXPECT(0x67, gbc.readMem(0xb548));
        // CB 67 0313
        gbc.setState(0xb6c, 0xeee4, 0xcd0, 0xb395, 0x90b5, 0xc734, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xeee4, gbc.sp());
        EXPECT(0xb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0314
        gbc.setState(0xaa9b, 0x2abd, 0x5630, 0x7507, 0xcd6b, 0xe91b, 0x0, 0x0);
        gbc.writeMem(0xaa9b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2abd, gbc.sp());
        EXPECT(0xaa9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9b));
        EXPECT(0x67, gbc.readMem(0xaa9c));
        // CB 67 0315
        gbc.setState(0x4ba7, 0x59f4, 0xe680, 0xac1c, 0x4ec9, 0x8d9b, 0x0, 0x0);
        gbc.writeMem(0x4ba7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0x4ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0316
        gbc.setState(0xb4ef, 0x1c90, 0x3f0, 0x94f2, 0xaca4, 0xd536, 0x0, 0x1);
        gbc.writeMem(0xb4ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1c90, gbc.sp());
        EXPECT(0xb4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ef));
        EXPECT(0x67, gbc.readMem(0xb4f0));
        // CB 67 0317
        gbc.setState(0x93bd, 0xfb62, 0xa270, 0x3aa0, 0x2aa5, 0x617d, 0x1, 0x0);
        gbc.writeMem(0x93bd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfb62, gbc.sp());
        EXPECT(0x93bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bd));
        EXPECT(0x67, gbc.readMem(0x93be));
        // CB 67 0318
        gbc.setState(0x6bf2, 0x1bf7, 0x3590, 0xdf3a, 0x7493, 0x6b86, 0x0, 0x0);
        gbc.writeMem(0x6bf2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1bf7, gbc.sp());
        EXPECT(0x6bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 031A
        gbc.setState(0xe0f3, 0x4fee, 0xfe20, 0xa3a4, 0x4faf, 0xfb8e, 0x0, 0x1);
        gbc.writeMem(0xe0f3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4fee, gbc.sp());
        EXPECT(0xe0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f3));
        EXPECT(0x67, gbc.readMem(0xe0f4));
        // CB 67 031B
        gbc.setState(0x3c80, 0xc403, 0x4490, 0xd482, 0x890b, 0x870c, 0x0, 0x0);
        gbc.writeMem(0x3c80, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc403, gbc.sp());
        EXPECT(0x3c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 031E
        gbc.setState(0xd981, 0x6a42, 0x8030, 0xa90f, 0x5a86, 0x1e8b, 0x0, 0x0);
        gbc.writeMem(0xd981, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6a42, gbc.sp());
        EXPECT(0xd983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd981));
        EXPECT(0x67, gbc.readMem(0xd982));
        // CB 67 031F
        gbc.setState(0xa100, 0x82b2, 0x1f90, 0x2641, 0xf09f, 0xddac, 0x0, 0x0);
        gbc.writeMem(0xa100, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x82b2, gbc.sp());
        EXPECT(0xa102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa100));
        EXPECT(0x67, gbc.readMem(0xa101));
        // CB 67 0321
        gbc.setState(0x61c8, 0x9330, 0x4360, 0xfc93, 0xed60, 0x2e5f, 0x0, 0x0);
        gbc.writeMem(0x61c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9330, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0322
        gbc.setState(0x3432, 0xc901, 0x4110, 0xb9dd, 0xd1c2, 0xa924, 0x0, 0x1);
        gbc.writeMem(0x3432, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0323
        gbc.setState(0x9a85, 0x9751, 0xb880, 0x8cb1, 0x382a, 0x2935, 0x1, 0x1);
        gbc.writeMem(0x9a85, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9751, gbc.sp());
        EXPECT(0x9a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a85));
        EXPECT(0x67, gbc.readMem(0x9a86));
        // CB 67 0324
        gbc.setState(0x2363, 0xd199, 0x5690, 0xa0e7, 0x5469, 0x96ea, 0x1, 0x1);
        gbc.writeMem(0x2363, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd199, gbc.sp());
        EXPECT(0x2365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0325
        gbc.setState(0x598c, 0x74ad, 0x20a0, 0x1b57, 0x5e7c, 0x9265, 0x0, 0x1);
        gbc.writeMem(0x598c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x74ad, gbc.sp());
        EXPECT(0x598e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0326
        gbc.setState(0x94e0, 0xcc86, 0x3fc0, 0xd652, 0x17a4, 0xe998, 0x1, 0x0);
        gbc.writeMem(0x94e0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcc86, gbc.sp());
        EXPECT(0x94e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e0));
        EXPECT(0x67, gbc.readMem(0x94e1));
        // CB 67 0327
        gbc.setState(0x2487, 0x55c6, 0xcdf0, 0x5b11, 0xc3f9, 0xc9f3, 0x0, 0x0);
        gbc.writeMem(0x2487, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x55c6, gbc.sp());
        EXPECT(0x2489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0328
        gbc.setState(0xaecc, 0xc4be, 0xcfc0, 0x8633, 0xda52, 0x3355, 0x0, 0x0);
        gbc.writeMem(0xaecc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0xaece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecc));
        EXPECT(0x67, gbc.readMem(0xaecd));
        // CB 67 0329
        gbc.setState(0xcc0d, 0x5bda, 0x44d0, 0xf97c, 0x1c1a, 0x5bb1, 0x0, 0x1);
        gbc.writeMem(0xcc0d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5bda, gbc.sp());
        EXPECT(0xcc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0d));
        EXPECT(0x67, gbc.readMem(0xcc0e));
        // CB 67 032A
        gbc.setState(0xbc76, 0x71aa, 0xd800, 0x2444, 0x2492, 0x3b02, 0x0, 0x0);
        gbc.writeMem(0xbc76, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x71aa, gbc.sp());
        EXPECT(0xbc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc76));
        EXPECT(0x67, gbc.readMem(0xbc77));
        // CB 67 032B
        gbc.setState(0x750a, 0xda1, 0x4c80, 0x4ce0, 0x8ff5, 0xd538, 0x0, 0x0);
        gbc.writeMem(0x750a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0x750c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 032C
        gbc.setState(0xcfcc, 0x563f, 0x9f80, 0x45fa, 0x5574, 0xdec8, 0x0, 0x1);
        gbc.writeMem(0xcfcc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x563f, gbc.sp());
        EXPECT(0xcfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfcc));
        EXPECT(0x67, gbc.readMem(0xcfcd));
        // CB 67 032D
        gbc.setState(0x4b83, 0xb03b, 0x57c0, 0xc732, 0x9508, 0x2b18, 0x1, 0x0);
        gbc.writeMem(0x4b83, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb03b, gbc.sp());
        EXPECT(0x4b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 032E
        gbc.setState(0xa3c0, 0xc391, 0xa4f0, 0x696, 0xe1ac, 0xcb06, 0x0, 0x0);
        gbc.writeMem(0xa3c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc391, gbc.sp());
        EXPECT(0xa3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c0));
        EXPECT(0x67, gbc.readMem(0xa3c1));
        // CB 67 032F
        gbc.setState(0x8290, 0x3613, 0xbb0, 0xde3e, 0xd7dd, 0x328f, 0x0, 0x0);
        gbc.writeMem(0x8290, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3613, gbc.sp());
        EXPECT(0x8292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8290));
        EXPECT(0x67, gbc.readMem(0x8291));
        // CB 67 0330
        gbc.setState(0xcbac, 0xf1b7, 0x1de0, 0x761c, 0x34fe, 0xc30a, 0x1, 0x1);
        gbc.writeMem(0xcbac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf1b7, gbc.sp());
        EXPECT(0xcbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbac));
        EXPECT(0x67, gbc.readMem(0xcbad));
        // CB 67 0331
        gbc.setState(0x4365, 0x45ed, 0x7140, 0xc429, 0xe746, 0x3f72, 0x0, 0x0);
        gbc.writeMem(0x4365, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x45ed, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0332
        gbc.setState(0x778, 0xefe, 0xdb0, 0x7f88, 0x6630, 0xf474, 0x1, 0x1);
        gbc.writeMem(0x778, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xefe, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0333
        gbc.setState(0x1ed7, 0x5fae, 0xca90, 0xa207, 0x207f, 0xc752, 0x0, 0x0);
        gbc.writeMem(0x1ed7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5fae, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0334
        gbc.setState(0xe45d, 0x7f5d, 0x49f0, 0x3b0e, 0xdde0, 0x57f6, 0x0, 0x0);
        gbc.writeMem(0xe45d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7f5d, gbc.sp());
        EXPECT(0xe45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45d));
        EXPECT(0x67, gbc.readMem(0xe45e));
        // CB 67 0335
        gbc.setState(0x4706, 0xebbf, 0xcb90, 0x8013, 0xd1dd, 0x515f, 0x0, 0x1);
        gbc.writeMem(0x4706, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0x4708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0336
        gbc.setState(0x690c, 0x3fb5, 0x590, 0x58e, 0xed96, 0xca58, 0x0, 0x1);
        gbc.writeMem(0x690c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3fb5, gbc.sp());
        EXPECT(0x690e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0337
        gbc.setState(0xbc09, 0xd4dd, 0x6500, 0x1339, 0x64e4, 0x2769, 0x1, 0x1);
        gbc.writeMem(0xbc09, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd4dd, gbc.sp());
        EXPECT(0xbc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc09));
        EXPECT(0x67, gbc.readMem(0xbc0a));
        // CB 67 0338
        gbc.setState(0xa4fe, 0xda49, 0x8510, 0xdab6, 0x2fec, 0x51dd, 0x1, 0x1);
        gbc.writeMem(0xa4fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xda49, gbc.sp());
        EXPECT(0xa500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fe));
        EXPECT(0x67, gbc.readMem(0xa4ff));
        // CB 67 0339
        gbc.setState(0x17a, 0xfc5c, 0x7a00, 0xe8e2, 0x94e0, 0xbb1f, 0x0, 0x0);
        gbc.writeMem(0x17a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 033A
        gbc.setState(0x197a, 0x152e, 0xb6b0, 0x1b4d, 0xe3f7, 0x658f, 0x0, 0x1);
        gbc.writeMem(0x197a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x152e, gbc.sp());
        EXPECT(0x197c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 033B
        gbc.setState(0x23a8, 0x4321, 0xb590, 0xdf51, 0x3a68, 0xc7b5, 0x1, 0x0);
        gbc.writeMem(0x23a8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4321, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 033C
        gbc.setState(0x9cd0, 0x3ff2, 0xf740, 0xb460, 0x88ba, 0x3ab1, 0x1, 0x0);
        gbc.writeMem(0x9cd0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3ff2, gbc.sp());
        EXPECT(0x9cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd0));
        EXPECT(0x67, gbc.readMem(0x9cd1));
        // CB 67 033D
        gbc.setState(0x146c, 0x3edc, 0xd3e0, 0xf804, 0x3e2f, 0x3aae, 0x0, 0x1);
        gbc.writeMem(0x146c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3edc, gbc.sp());
        EXPECT(0x146e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 033E
        gbc.setState(0xeea8, 0x337f, 0x3450, 0xe4fa, 0x7c35, 0x1960, 0x1, 0x0);
        gbc.writeMem(0xeea8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x337f, gbc.sp());
        EXPECT(0xeeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea8));
        EXPECT(0x67, gbc.readMem(0xeea9));
        // CB 67 033F
        gbc.setState(0xa8cc, 0x3558, 0xd550, 0xa3c4, 0x3e28, 0x7316, 0x1, 0x0);
        gbc.writeMem(0xa8cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3558, gbc.sp());
        EXPECT(0xa8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cc));
        EXPECT(0x67, gbc.readMem(0xa8cd));
        // CB 67 0340
        gbc.setState(0x1414, 0xd87f, 0xa2c0, 0xf077, 0x5676, 0x8237, 0x0, 0x1);
        gbc.writeMem(0x1414, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd87f, gbc.sp());
        EXPECT(0x1416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0341
        gbc.setState(0x7da7, 0x23fd, 0xe1f0, 0xe342, 0x596b, 0x58a1, 0x0, 0x0);
        gbc.writeMem(0x7da7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x23fd, gbc.sp());
        EXPECT(0x7da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0342
        gbc.setState(0xc823, 0x84c4, 0xab50, 0x24, 0x2da5, 0xbfea, 0x1, 0x1);
        gbc.writeMem(0xc823, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x84c4, gbc.sp());
        EXPECT(0xc825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc823));
        EXPECT(0x67, gbc.readMem(0xc824));
        // CB 67 0343
        gbc.setState(0xb8c7, 0xba27, 0x5590, 0xdfe0, 0xd13d, 0x352, 0x0, 0x0);
        gbc.writeMem(0xb8c7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xba27, gbc.sp());
        EXPECT(0xb8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c7));
        EXPECT(0x67, gbc.readMem(0xb8c8));
        // CB 67 0344
        gbc.setState(0x7ba5, 0xb81d, 0xaa60, 0x63f2, 0x8bde, 0x2285, 0x1, 0x0);
        gbc.writeMem(0x7ba5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0345
        gbc.setState(0xba76, 0x45e7, 0xa390, 0xbb8c, 0xee38, 0x665f, 0x0, 0x0);
        gbc.writeMem(0xba76, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0xba78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba76));
        EXPECT(0x67, gbc.readMem(0xba77));
        // CB 67 0346
        gbc.setState(0x4400, 0xc206, 0xe740, 0x3045, 0xcdaf, 0x1222, 0x1, 0x1);
        gbc.writeMem(0x4400, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc206, gbc.sp());
        EXPECT(0x4402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0347
        gbc.setState(0xb9b5, 0xa60c, 0xf730, 0x91be, 0x6f2b, 0xa22a, 0x0, 0x1);
        gbc.writeMem(0xb9b5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa60c, gbc.sp());
        EXPECT(0xb9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b5));
        EXPECT(0x67, gbc.readMem(0xb9b6));
        // CB 67 0348
        gbc.setState(0xa47d, 0x8aa1, 0xac30, 0xa502, 0x9c9, 0x15c2, 0x0, 0x0);
        gbc.writeMem(0xa47d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0xa47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47d));
        EXPECT(0x67, gbc.readMem(0xa47e));
        // CB 67 0349
        gbc.setState(0x7619, 0x2d9a, 0xb430, 0x7f09, 0xe275, 0xd6a2, 0x0, 0x1);
        gbc.writeMem(0x7619, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2d9a, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 034A
        gbc.setState(0xe1a2, 0x44cd, 0x7780, 0x511b, 0xbcc0, 0xa056, 0x1, 0x0);
        gbc.writeMem(0xe1a2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x44cd, gbc.sp());
        EXPECT(0xe1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a2));
        EXPECT(0x67, gbc.readMem(0xe1a3));
        // CB 67 034B
        gbc.setState(0x1903, 0xf4b6, 0xff20, 0xd7b3, 0x93db, 0xc5e5, 0x1, 0x0);
        gbc.writeMem(0x1903, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf4b6, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 034C
        gbc.setState(0x485f, 0xf7ad, 0x7120, 0x6bfe, 0xed89, 0x913b, 0x1, 0x1);
        gbc.writeMem(0x485f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 034D
        gbc.setState(0x5e04, 0xe40, 0x7930, 0xe3ab, 0xd985, 0xd7de, 0x1, 0x0);
        gbc.writeMem(0x5e04, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0x5e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 034E
        gbc.setState(0x6d, 0xb74f, 0xf700, 0xc9c0, 0xb2df, 0x31d2, 0x0, 0x1);
        gbc.writeMem(0x6d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb74f, gbc.sp());
        EXPECT(0x6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 034F
        gbc.setState(0x75cb, 0x4c34, 0xfa40, 0x758a, 0x2e7, 0xbac4, 0x0, 0x1);
        gbc.writeMem(0x75cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4c34, gbc.sp());
        EXPECT(0x75cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0350
        gbc.setState(0xeee9, 0x62d8, 0x2990, 0x66c7, 0x6788, 0xeaea, 0x1, 0x1);
        gbc.writeMem(0xeee9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0xeeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee9));
        EXPECT(0x67, gbc.readMem(0xeeea));
        // CB 67 0351
        gbc.setState(0x8e87, 0xd8c1, 0x46b0, 0x475e, 0x9afd, 0xc595, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd8c1, gbc.sp());
        EXPECT(0x8e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e87));
        EXPECT(0x67, gbc.readMem(0x8e88));
        // CB 67 0352
        gbc.setState(0x96bd, 0x615a, 0xdcf0, 0xf790, 0x5289, 0x6a37, 0x1, 0x0);
        gbc.writeMem(0x96bd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x615a, gbc.sp());
        EXPECT(0x96bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bd));
        EXPECT(0x67, gbc.readMem(0x96be));
        // CB 67 0353
        gbc.setState(0x8d2c, 0x5263, 0x150, 0xdb30, 0xd308, 0x72a3, 0x1, 0x1);
        gbc.writeMem(0x8d2c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0x8d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2c));
        EXPECT(0x67, gbc.readMem(0x8d2d));
        // CB 67 0354
        gbc.setState(0x4391, 0x2605, 0xeb30, 0x897a, 0x5242, 0x6e5, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2605, gbc.sp());
        EXPECT(0x4393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0355
        gbc.setState(0x1fde, 0x25de, 0x5da0, 0x6055, 0x5052, 0x192e, 0x1, 0x0);
        gbc.writeMem(0x1fde, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x25de, gbc.sp());
        EXPECT(0x1fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0356
        gbc.setState(0x633, 0x7334, 0xb2f0, 0x5112, 0x6119, 0xcfcf, 0x1, 0x0);
        gbc.writeMem(0x633, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7334, gbc.sp());
        EXPECT(0x635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0357
        gbc.setState(0x3c65, 0xd781, 0x6670, 0x35e5, 0x75ad, 0xcf6b, 0x0, 0x1);
        gbc.writeMem(0x3c65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0x3c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0358
        gbc.setState(0xaad1, 0x5538, 0xeda0, 0x7400, 0xead0, 0x68c2, 0x0, 0x1);
        gbc.writeMem(0xaad1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5538, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad1));
        EXPECT(0x67, gbc.readMem(0xaad2));
        // CB 67 0359
        gbc.setState(0x37cb, 0xa59, 0xfd70, 0x5251, 0x3941, 0xc839, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa59, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 035A
        gbc.setState(0x5f1d, 0x6dfa, 0xc3b0, 0x1c6a, 0xbe4, 0x970, 0x0, 0x1);
        gbc.writeMem(0x5f1d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6dfa, gbc.sp());
        EXPECT(0x5f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 035B
        gbc.setState(0x3e37, 0xb44a, 0x9ae0, 0xd33f, 0x2205, 0xa753, 0x1, 0x1);
        gbc.writeMem(0x3e37, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0x3e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 035C
        gbc.setState(0x897c, 0xe22e, 0xfaa0, 0x6f98, 0x85d1, 0xbc4c, 0x1, 0x1);
        gbc.writeMem(0x897c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe22e, gbc.sp());
        EXPECT(0x897e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897c));
        EXPECT(0x67, gbc.readMem(0x897d));
        // CB 67 035D
        gbc.setState(0x357d, 0x2dfc, 0x9320, 0xebe1, 0x398c, 0x37e6, 0x1, 0x1);
        gbc.writeMem(0x357d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2dfc, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 035E
        gbc.setState(0xccb, 0x8448, 0x7a90, 0x4847, 0x8a44, 0x256b, 0x1, 0x0);
        gbc.writeMem(0xccb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8448, gbc.sp());
        EXPECT(0xccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 035F
        gbc.setState(0x4185, 0xcf46, 0x990, 0xcd18, 0xbdd7, 0xd80, 0x0, 0x0);
        gbc.writeMem(0x4185, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcf46, gbc.sp());
        EXPECT(0x4187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0360
        gbc.setState(0x68bc, 0xae02, 0x87f0, 0xcbd7, 0x3139, 0x62a, 0x0, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0361
        gbc.setState(0x401e, 0x2515, 0x35f0, 0x3b13, 0x2939, 0x4c20, 0x1, 0x0);
        gbc.writeMem(0x401e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2515, gbc.sp());
        EXPECT(0x4020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0362
        gbc.setState(0xed7f, 0xcb54, 0xee90, 0x9d64, 0xe4e5, 0x5397, 0x0, 0x1);
        gbc.writeMem(0xed7f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcb54, gbc.sp());
        EXPECT(0xed81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7f));
        EXPECT(0x67, gbc.readMem(0xed80));
        // CB 67 0363
        gbc.setState(0x772d, 0xc7cc, 0x34a0, 0xf56, 0x359f, 0x2623, 0x0, 0x0);
        gbc.writeMem(0x772d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0364
        gbc.setState(0xe0e9, 0xfb93, 0x2980, 0xb279, 0x797, 0x61f3, 0x1, 0x1);
        gbc.writeMem(0xe0e9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfb93, gbc.sp());
        EXPECT(0xe0eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e9));
        EXPECT(0x67, gbc.readMem(0xe0ea));
        // CB 67 0365
        gbc.setState(0xd403, 0xf535, 0xd750, 0x2082, 0xfde5, 0x19fe, 0x0, 0x1);
        gbc.writeMem(0xd403, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf535, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd403));
        EXPECT(0x67, gbc.readMem(0xd404));
        // CB 67 0366
        gbc.setState(0xdde4, 0x196d, 0x15f0, 0x6c80, 0xc158, 0x3fde, 0x0, 0x0);
        gbc.writeMem(0xdde4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x196d, gbc.sp());
        EXPECT(0xdde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde4));
        EXPECT(0x67, gbc.readMem(0xdde5));
        // CB 67 0367
        gbc.setState(0xc15c, 0xfdfb, 0x3510, 0xe3b8, 0x7d3, 0x8504, 0x1, 0x0);
        gbc.writeMem(0xc15c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfdfb, gbc.sp());
        EXPECT(0xc15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15c));
        EXPECT(0x67, gbc.readMem(0xc15d));
        // CB 67 0368
        gbc.setState(0xd7dd, 0x668e, 0x4eb0, 0xfa0e, 0x1f74, 0x8880, 0x1, 0x1);
        gbc.writeMem(0xd7dd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x668e, gbc.sp());
        EXPECT(0xd7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7dd));
        EXPECT(0x67, gbc.readMem(0xd7de));
        // CB 67 0369
        gbc.setState(0xd9aa, 0x3d73, 0x63c0, 0x3647, 0x3d56, 0x934a, 0x1, 0x0);
        gbc.writeMem(0xd9aa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3d73, gbc.sp());
        EXPECT(0xd9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9aa));
        EXPECT(0x67, gbc.readMem(0xd9ab));
        // CB 67 036A
        gbc.setState(0x1de0, 0x71aa, 0x8690, 0x6212, 0x6372, 0x906, 0x1, 0x0);
        gbc.writeMem(0x1de0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x71aa, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 036B
        gbc.setState(0xaee3, 0x99d8, 0xb140, 0xe185, 0xcd42, 0x6a68, 0x0, 0x1);
        gbc.writeMem(0xaee3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x99d8, gbc.sp());
        EXPECT(0xaee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee3));
        EXPECT(0x67, gbc.readMem(0xaee4));
        // CB 67 036C
        gbc.setState(0xc173, 0x3f4, 0x4b0, 0xb2c, 0x6656, 0x4c60, 0x1, 0x1);
        gbc.writeMem(0xc173, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc173));
        EXPECT(0x67, gbc.readMem(0xc174));
        // CB 67 036E
        gbc.setState(0x1d98, 0xe94f, 0x78c0, 0x6071, 0xffbd, 0x32d1, 0x0, 0x0);
        gbc.writeMem(0x1d98, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe94f, gbc.sp());
        EXPECT(0x1d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 036F
        gbc.setState(0xccb7, 0xaa5e, 0x380, 0xd745, 0x28b3, 0x7eed, 0x1, 0x0);
        gbc.writeMem(0xccb7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaa5e, gbc.sp());
        EXPECT(0xccb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb7));
        EXPECT(0x67, gbc.readMem(0xccb8));
        // CB 67 0370
        gbc.setState(0xa929, 0x267f, 0x9820, 0x8dad, 0x1e4c, 0xb59, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x267f, gbc.sp());
        EXPECT(0xa92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa929));
        EXPECT(0x67, gbc.readMem(0xa92a));
        // CB 67 0371
        gbc.setState(0x8ee3, 0x81a7, 0xa260, 0xdb7d, 0xfdcc, 0x5e63, 0x1, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x81a7, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee3));
        EXPECT(0x67, gbc.readMem(0x8ee4));
        // CB 67 0372
        gbc.setState(0xc83f, 0x67f8, 0x3a60, 0x294b, 0x1931, 0xf99d, 0x0, 0x1);
        gbc.writeMem(0xc83f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x67f8, gbc.sp());
        EXPECT(0xc841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83f));
        EXPECT(0x67, gbc.readMem(0xc840));
        // CB 67 0373
        gbc.setState(0xde9e, 0xe034, 0x1b20, 0xb60, 0x5784, 0x2b24, 0x1, 0x0);
        gbc.writeMem(0xde9e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe034, gbc.sp());
        EXPECT(0xdea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9e));
        EXPECT(0x67, gbc.readMem(0xde9f));
        // CB 67 0374
        gbc.setState(0x7b3b, 0xfaa1, 0x3a40, 0xbc7a, 0xd7ef, 0x94b8, 0x1, 0x0);
        gbc.writeMem(0x7b3b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfaa1, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0375
        gbc.setState(0x70e8, 0x7d30, 0x11e0, 0x84cd, 0x7974, 0xc2af, 0x0, 0x1);
        gbc.writeMem(0x70e8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7d30, gbc.sp());
        EXPECT(0x70ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0376
        gbc.setState(0xa47d, 0xea3a, 0x9bf0, 0x4b9, 0xe606, 0x3b3d, 0x1, 0x0);
        gbc.writeMem(0xa47d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xea3a, gbc.sp());
        EXPECT(0xa47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47d));
        EXPECT(0x67, gbc.readMem(0xa47e));
        // CB 67 0377
        gbc.setState(0x76c3, 0x4293, 0xf6a0, 0x7184, 0xcbec, 0x2672, 0x1, 0x1);
        gbc.writeMem(0x76c3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4293, gbc.sp());
        EXPECT(0x76c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0378
        gbc.setState(0x90ad, 0x46c4, 0x2f80, 0xb48f, 0xd575, 0x700, 0x1, 0x0);
        gbc.writeMem(0x90ad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x46c4, gbc.sp());
        EXPECT(0x90af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ad));
        EXPECT(0x67, gbc.readMem(0x90ae));
        // CB 67 0379
        gbc.setState(0xb6e6, 0x9261, 0x7510, 0xfdc7, 0xab25, 0x3ba5, 0x1, 0x1);
        gbc.writeMem(0xb6e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9261, gbc.sp());
        EXPECT(0xb6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e6));
        EXPECT(0x67, gbc.readMem(0xb6e7));
        // CB 67 037A
        gbc.setState(0x33d6, 0xaec6, 0xcf60, 0x5a07, 0x346e, 0x8a70, 0x0, 0x0);
        gbc.writeMem(0x33d6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaec6, gbc.sp());
        EXPECT(0x33d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 037B
        gbc.setState(0x43c1, 0xbb8d, 0xbb80, 0x9c4, 0x37c, 0xef05, 0x0, 0x0);
        gbc.writeMem(0x43c1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbb8d, gbc.sp());
        EXPECT(0x43c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 037C
        gbc.setState(0x58a4, 0x9128, 0x6c80, 0x19b3, 0x4eba, 0x4c2c, 0x0, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 037D
        gbc.setState(0x6356, 0x7a2c, 0x4b40, 0x8d59, 0x3b8, 0x372f, 0x0, 0x1);
        gbc.writeMem(0x6356, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7a2c, gbc.sp());
        EXPECT(0x6358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 037E
        gbc.setState(0x7738, 0xaceb, 0x3f70, 0x1473, 0xa77d, 0x9beb, 0x0, 0x0);
        gbc.writeMem(0x7738, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xaceb, gbc.sp());
        EXPECT(0x773a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 037F
        gbc.setState(0x7f97, 0x27c9, 0x520, 0x6afd, 0x4288, 0xfa8a, 0x0, 0x1);
        gbc.writeMem(0x7f97, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x27c9, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0380
        gbc.setState(0xc0c2, 0xa710, 0x52f0, 0x191b, 0xa3ab, 0xb1d5, 0x1, 0x0);
        gbc.writeMem(0xc0c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa710, gbc.sp());
        EXPECT(0xc0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c2));
        EXPECT(0x67, gbc.readMem(0xc0c3));
        // CB 67 0381
        gbc.setState(0x889, 0xdd66, 0x32c0, 0x7ca5, 0x1aa3, 0x9ef4, 0x1, 0x0);
        gbc.writeMem(0x889, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdd66, gbc.sp());
        EXPECT(0x88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0382
        gbc.setState(0x7d5b, 0x6a5e, 0xcad0, 0x5a38, 0xc914, 0xc54c, 0x1, 0x0);
        gbc.writeMem(0x7d5b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6a5e, gbc.sp());
        EXPECT(0x7d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0383
        gbc.setState(0xc628, 0x18fe, 0xe820, 0x1d70, 0x21bc, 0x9f9e, 0x1, 0x1);
        gbc.writeMem(0xc628, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x18fe, gbc.sp());
        EXPECT(0xc62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc628));
        EXPECT(0x67, gbc.readMem(0xc629));
        // CB 67 0384
        gbc.setState(0xe34e, 0x484, 0xb220, 0x326, 0x39a, 0x659a, 0x0, 0x1);
        gbc.writeMem(0xe34e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x484, gbc.sp());
        EXPECT(0xe350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34e));
        EXPECT(0x67, gbc.readMem(0xe34f));
        // CB 67 0385
        gbc.setState(0x86f0, 0x15f0, 0x58e0, 0x17e3, 0x271d, 0x9bb6, 0x0, 0x0);
        gbc.writeMem(0x86f0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x15f0, gbc.sp());
        EXPECT(0x86f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f0));
        EXPECT(0x67, gbc.readMem(0x86f1));
        // CB 67 0386
        gbc.setState(0xd755, 0xe6bb, 0x3a20, 0x362a, 0x6eaf, 0x9060, 0x0, 0x0);
        gbc.writeMem(0xd755, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe6bb, gbc.sp());
        EXPECT(0xd757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd755));
        EXPECT(0x67, gbc.readMem(0xd756));
        // CB 67 0387
        gbc.setState(0xddfb, 0xf56f, 0x4340, 0x7d3e, 0xb0b1, 0x34c4, 0x0, 0x1);
        gbc.writeMem(0xddfb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf56f, gbc.sp());
        EXPECT(0xddfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfb));
        EXPECT(0x67, gbc.readMem(0xddfc));
        // CB 67 0388
        gbc.setState(0x88e8, 0x9bbb, 0x67d0, 0x77b6, 0x5082, 0xb348, 0x0, 0x0);
        gbc.writeMem(0x88e8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9bbb, gbc.sp());
        EXPECT(0x88ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e8));
        EXPECT(0x67, gbc.readMem(0x88e9));
        // CB 67 0389
        gbc.setState(0xc31d, 0x97c1, 0x5f90, 0x5406, 0x89ef, 0x6280, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x97c1, gbc.sp());
        EXPECT(0xc31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31d));
        EXPECT(0x67, gbc.readMem(0xc31e));
        // CB 67 038A
        gbc.setState(0xc2ba, 0x5821, 0x5890, 0x1ac9, 0x6e2f, 0xe3e1, 0x0, 0x1);
        gbc.writeMem(0xc2ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5821, gbc.sp());
        EXPECT(0xc2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ba));
        EXPECT(0x67, gbc.readMem(0xc2bb));
        // CB 67 038B
        gbc.setState(0xcbb1, 0xfcc7, 0x2340, 0xbdf8, 0x463e, 0x6128, 0x0, 0x1);
        gbc.writeMem(0xcbb1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfcc7, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb1));
        EXPECT(0x67, gbc.readMem(0xcbb2));
        // CB 67 038C
        gbc.setState(0x34a, 0xdf72, 0x92a0, 0x70a1, 0xcdc7, 0x7d5d, 0x1, 0x0);
        gbc.writeMem(0x34a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdf72, gbc.sp());
        EXPECT(0x34c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 038D
        gbc.setState(0x205f, 0x7598, 0x6f0, 0x133, 0x1f54, 0x84fb, 0x1, 0x1);
        gbc.writeMem(0x205f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7598, gbc.sp());
        EXPECT(0x2061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 038E
        gbc.setState(0x602a, 0x38dd, 0x3f70, 0x9863, 0xc5b9, 0x241e, 0x1, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x38dd, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 038F
        gbc.setState(0x9e34, 0x8d26, 0x4eb0, 0x6403, 0x2b26, 0x3088, 0x0, 0x1);
        gbc.writeMem(0x9e34, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8d26, gbc.sp());
        EXPECT(0x9e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e34));
        EXPECT(0x67, gbc.readMem(0x9e35));
        // CB 67 0390
        gbc.setState(0x45b1, 0xe200, 0xa5e0, 0xc71d, 0x76a3, 0xeead, 0x1, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe200, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 0391
        gbc.setState(0x6f50, 0x8007, 0x38d0, 0x8803, 0xeff8, 0x2e8f, 0x1, 0x0);
        gbc.writeMem(0x6f50, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0x6f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0392
        gbc.setState(0xd03c, 0x4950, 0xce40, 0xe68f, 0xeeb7, 0xad61, 0x0, 0x1);
        gbc.writeMem(0xd03c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4950, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03c));
        EXPECT(0x67, gbc.readMem(0xd03d));
        // CB 67 0393
        gbc.setState(0x35b4, 0xf8b1, 0x8e50, 0xa94e, 0x1d51, 0xcb0b, 0x1, 0x1);
        gbc.writeMem(0x35b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf8b1, gbc.sp());
        EXPECT(0x35b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0394
        gbc.setState(0x2ad3, 0x625f, 0x51b0, 0x8798, 0x87b5, 0x539, 0x0, 0x0);
        gbc.writeMem(0x2ad3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x625f, gbc.sp());
        EXPECT(0x2ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0395
        gbc.setState(0x17cb, 0x7a7c, 0x1950, 0x87f9, 0x4e08, 0x5fca, 0x0, 0x0);
        gbc.writeMem(0x17cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7a7c, gbc.sp());
        EXPECT(0x17cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 0396
        gbc.setState(0x9fc5, 0x7b5a, 0x3660, 0x9120, 0xcb18, 0x7500, 0x0, 0x1);
        gbc.writeMem(0x9fc5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7b5a, gbc.sp());
        EXPECT(0x9fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc5));
        EXPECT(0x67, gbc.readMem(0x9fc6));
        // CB 67 0397
        gbc.setState(0xe07a, 0xadb6, 0xd4d0, 0x9b5e, 0x8666, 0x2de5, 0x0, 0x0);
        gbc.writeMem(0xe07a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xadb6, gbc.sp());
        EXPECT(0xe07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07a));
        EXPECT(0x67, gbc.readMem(0xe07b));
        // CB 67 0398
        gbc.setState(0xda8d, 0xa35b, 0xf510, 0x6db6, 0xae56, 0x80f6, 0x1, 0x1);
        gbc.writeMem(0xda8d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa35b, gbc.sp());
        EXPECT(0xda8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8d));
        EXPECT(0x67, gbc.readMem(0xda8e));
        // CB 67 0399
        gbc.setState(0x5a0f, 0x4a7b, 0x1880, 0xc899, 0xf511, 0x5eb7, 0x0, 0x1);
        gbc.writeMem(0x5a0f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0x5a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 039A
        gbc.setState(0x6e73, 0x1926, 0x4550, 0x7e97, 0x2dda, 0x4b99, 0x0, 0x1);
        gbc.writeMem(0x6e73, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 039B
        gbc.setState(0x20e8, 0xcaa5, 0xd060, 0x1710, 0xae91, 0x8bd2, 0x0, 0x0);
        gbc.writeMem(0x20e8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0x20ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 039C
        gbc.setState(0x4d3a, 0xf41a, 0x1a30, 0x30b3, 0x8936, 0xdead, 0x0, 0x1);
        gbc.writeMem(0x4d3a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf41a, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 039D
        gbc.setState(0x86af, 0x409c, 0xe200, 0xf218, 0x444e, 0x7195, 0x1, 0x1);
        gbc.writeMem(0x86af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x409c, gbc.sp());
        EXPECT(0x86b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86af));
        EXPECT(0x67, gbc.readMem(0x86b0));
        // CB 67 039E
        gbc.setState(0xc732, 0x28e3, 0xdce0, 0x65fb, 0x7242, 0xf93d, 0x0, 0x1);
        gbc.writeMem(0xc732, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x28e3, gbc.sp());
        EXPECT(0xc734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc732));
        EXPECT(0x67, gbc.readMem(0xc733));
        // CB 67 039F
        gbc.setState(0xda2c, 0x5d38, 0x9a0, 0x94e7, 0x90b6, 0x949b, 0x0, 0x1);
        gbc.writeMem(0xda2c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5d38, gbc.sp());
        EXPECT(0xda2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2c));
        EXPECT(0x67, gbc.readMem(0xda2d));
        // CB 67 03A0
        gbc.setState(0xca04, 0x1663, 0xa380, 0xcaa, 0x46ff, 0x8910, 0x0, 0x1);
        gbc.writeMem(0xca04, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1663, gbc.sp());
        EXPECT(0xca06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca04));
        EXPECT(0x67, gbc.readMem(0xca05));
        // CB 67 03A1
        gbc.setState(0x300e, 0xcdec, 0x9ff0, 0x5779, 0x585d, 0x1102, 0x0, 0x1);
        gbc.writeMem(0x300e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcdec, gbc.sp());
        EXPECT(0x3010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03A3
        gbc.setState(0xac2d, 0xe110, 0x6280, 0x8d7b, 0x3be1, 0x1b5e, 0x1, 0x0);
        gbc.writeMem(0xac2d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe110, gbc.sp());
        EXPECT(0xac2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2d));
        EXPECT(0x67, gbc.readMem(0xac2e));
        // CB 67 03A4
        gbc.setState(0x90fe, 0x67d3, 0x80d0, 0x3fac, 0xae40, 0xbae9, 0x0, 0x0);
        gbc.writeMem(0x90fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x67d3, gbc.sp());
        EXPECT(0x9100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fe));
        EXPECT(0x67, gbc.readMem(0x90ff));
        // CB 67 03A5
        gbc.setState(0x1602, 0x8ccd, 0xc1b0, 0x4855, 0x3db4, 0xb5df, 0x0, 0x0);
        gbc.writeMem(0x1602, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8ccd, gbc.sp());
        EXPECT(0x1604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03A6
        gbc.setState(0xe9b8, 0xf052, 0x9b20, 0xb0ec, 0xc6a2, 0x3e3d, 0x0, 0x0);
        gbc.writeMem(0xe9b8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf052, gbc.sp());
        EXPECT(0xe9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b8));
        EXPECT(0x67, gbc.readMem(0xe9b9));
        // CB 67 03A7
        gbc.setState(0xe848, 0xec3f, 0x5a90, 0xe2a, 0xfb17, 0xbaf0, 0x1, 0x1);
        gbc.writeMem(0xe848, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xec3f, gbc.sp());
        EXPECT(0xe84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe848));
        EXPECT(0x67, gbc.readMem(0xe849));
        // CB 67 03A8
        gbc.setState(0x6ab2, 0x268e, 0x8b70, 0x6f13, 0x5014, 0x16bc, 0x0, 0x1);
        gbc.writeMem(0x6ab2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x268e, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03A9
        gbc.setState(0xd272, 0xca00, 0x1f80, 0x350f, 0xb2a5, 0xeb5e, 0x1, 0x0);
        gbc.writeMem(0xd272, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xca00, gbc.sp());
        EXPECT(0xd274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd272));
        EXPECT(0x67, gbc.readMem(0xd273));
        // CB 67 03AB
        gbc.setState(0x90f4, 0x3fe9, 0x6fd0, 0xb4e5, 0x913b, 0xeaac, 0x1, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3fe9, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0x67, gbc.readMem(0x90f5));
        // CB 67 03AC
        gbc.setState(0xdd9c, 0x3e46, 0xb030, 0xbb99, 0xc902, 0x4733, 0x1, 0x1);
        gbc.writeMem(0xdd9c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3e46, gbc.sp());
        EXPECT(0xdd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9c));
        EXPECT(0x67, gbc.readMem(0xdd9d));
        // CB 67 03AD
        gbc.setState(0xa1fc, 0x4042, 0x5350, 0xfec6, 0x7117, 0xe6dc, 0x0, 0x0);
        gbc.writeMem(0xa1fc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4042, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fc));
        EXPECT(0x67, gbc.readMem(0xa1fd));
        // CB 67 03AE
        gbc.setState(0xe9b0, 0xb6d8, 0x1bc0, 0x2303, 0x9b97, 0x2c2a, 0x1, 0x0);
        gbc.writeMem(0xe9b0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb6d8, gbc.sp());
        EXPECT(0xe9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b0));
        EXPECT(0x67, gbc.readMem(0xe9b1));
        // CB 67 03AF
        gbc.setState(0x1cbf, 0x264b, 0xa620, 0x4f1, 0xa0c, 0xe43a, 0x1, 0x0);
        gbc.writeMem(0x1cbf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x264b, gbc.sp());
        EXPECT(0x1cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03B1
        gbc.setState(0x86d2, 0x16da, 0x3660, 0xa0bf, 0xcce4, 0x5bad, 0x0, 0x0);
        gbc.writeMem(0x86d2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x16da, gbc.sp());
        EXPECT(0x86d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d2));
        EXPECT(0x67, gbc.readMem(0x86d3));
        // CB 67 03B2
        gbc.setState(0x81a4, 0xd7fe, 0x8440, 0x8956, 0x151f, 0x5dbd, 0x0, 0x0);
        gbc.writeMem(0x81a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd7fe, gbc.sp());
        EXPECT(0x81a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a4));
        EXPECT(0x67, gbc.readMem(0x81a5));
        // CB 67 03B4
        gbc.setState(0x1eb1, 0x35fa, 0x8050, 0x5600, 0xfe05, 0x5692, 0x1, 0x1);
        gbc.writeMem(0x1eb1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x35fa, gbc.sp());
        EXPECT(0x1eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03B5
        gbc.setState(0xdc66, 0xd2a1, 0xa520, 0xc6b4, 0x15c2, 0x79ea, 0x1, 0x1);
        gbc.writeMem(0xdc66, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd2a1, gbc.sp());
        EXPECT(0xdc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc66));
        EXPECT(0x67, gbc.readMem(0xdc67));
        // CB 67 03B6
        gbc.setState(0xebc, 0xb11a, 0x5d70, 0xdd26, 0x2eb, 0xb9db, 0x1, 0x0);
        gbc.writeMem(0xebc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb11a, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03B7
        gbc.setState(0x6b64, 0x27e3, 0x8a30, 0xfc5a, 0x8a91, 0x2e44, 0x0, 0x1);
        gbc.writeMem(0x6b64, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0x6b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03B8
        gbc.setState(0xea43, 0xf488, 0xa940, 0x442b, 0x16c6, 0xc81, 0x0, 0x1);
        gbc.writeMem(0xea43, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf488, gbc.sp());
        EXPECT(0xea45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea43));
        EXPECT(0x67, gbc.readMem(0xea44));
        // CB 67 03B9
        gbc.setState(0x9b9, 0xd404, 0x2f0, 0x8893, 0x74a0, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0x9b9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd404, gbc.sp());
        EXPECT(0x9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03BA
        gbc.setState(0x719b, 0x707f, 0x4170, 0x6e43, 0x5894, 0xf807, 0x0, 0x1);
        gbc.writeMem(0x719b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x707f, gbc.sp());
        EXPECT(0x719d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03BB
        gbc.setState(0x2726, 0x7c06, 0x5420, 0xfeec, 0x3e47, 0x40c4, 0x0, 0x1);
        gbc.writeMem(0x2726, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7c06, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03BC
        gbc.setState(0xca8a, 0x9f98, 0xc590, 0xb4b9, 0x6630, 0x28a7, 0x0, 0x0);
        gbc.writeMem(0xca8a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9f98, gbc.sp());
        EXPECT(0xca8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8a));
        EXPECT(0x67, gbc.readMem(0xca8b));
        // CB 67 03BD
        gbc.setState(0xbc30, 0xb386, 0x5e40, 0xd27e, 0x2d1b, 0x9b53, 0x0, 0x0);
        gbc.writeMem(0xbc30, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb386, gbc.sp());
        EXPECT(0xbc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc30));
        EXPECT(0x67, gbc.readMem(0xbc31));
        // CB 67 03BE
        gbc.setState(0xa96c, 0x470b, 0x21d0, 0xc05d, 0x420c, 0x21db, 0x0, 0x1);
        gbc.writeMem(0xa96c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x470b, gbc.sp());
        EXPECT(0xa96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96c));
        EXPECT(0x67, gbc.readMem(0xa96d));
        // CB 67 03BF
        gbc.setState(0xe7d3, 0x20c4, 0x6a0, 0x2fef, 0xb5bc, 0x9ca2, 0x1, 0x0);
        gbc.writeMem(0xe7d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0xe7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d3));
        EXPECT(0x67, gbc.readMem(0xe7d4));
        // CB 67 03C0
        gbc.setState(0x5877, 0x41d, 0xb1f0, 0xc375, 0x5cbf, 0x171, 0x1, 0x0);
        gbc.writeMem(0x5877, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x41d, gbc.sp());
        EXPECT(0x5879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03C2
        gbc.setState(0xb078, 0x268a, 0x6d40, 0x5b86, 0x3336, 0x3307, 0x1, 0x0);
        gbc.writeMem(0xb078, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x268a, gbc.sp());
        EXPECT(0xb07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb078));
        EXPECT(0x67, gbc.readMem(0xb079));
        // CB 67 03C3
        gbc.setState(0x4baf, 0x1197, 0x29c0, 0x67fe, 0x637f, 0x836e, 0x0, 0x0);
        gbc.writeMem(0x4baf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1197, gbc.sp());
        EXPECT(0x4bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03C4
        gbc.setState(0x8fad, 0xd967, 0xbd10, 0xab0a, 0x9f09, 0xd257, 0x1, 0x0);
        gbc.writeMem(0x8fad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd967, gbc.sp());
        EXPECT(0x8faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fad));
        EXPECT(0x67, gbc.readMem(0x8fae));
        // CB 67 03C5
        gbc.setState(0x40d, 0x7e43, 0x1a80, 0x362f, 0xc9dd, 0xddbb, 0x1, 0x1);
        gbc.writeMem(0x40d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7e43, gbc.sp());
        EXPECT(0x40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03C7
        gbc.setState(0x7bd7, 0x540c, 0x2b70, 0xb074, 0x1f07, 0x9d27, 0x1, 0x1);
        gbc.writeMem(0x7bd7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x540c, gbc.sp());
        EXPECT(0x7bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03C8
        gbc.setState(0xcd63, 0x4a86, 0x6310, 0x510e, 0xd517, 0x53ab, 0x1, 0x0);
        gbc.writeMem(0xcd63, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4a86, gbc.sp());
        EXPECT(0xcd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd63));
        EXPECT(0x67, gbc.readMem(0xcd64));
        // CB 67 03C9
        gbc.setState(0x4ca5, 0x1f1a, 0x9190, 0xd1d0, 0x9a44, 0x1b13, 0x1, 0x1);
        gbc.writeMem(0x4ca5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1f1a, gbc.sp());
        EXPECT(0x4ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03CA
        gbc.setState(0x5b94, 0x629e, 0x32a0, 0x62b6, 0x842, 0x6f1, 0x0, 0x0);
        gbc.writeMem(0x5b94, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x629e, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03CB
        gbc.setState(0x20f1, 0xf1f8, 0x3420, 0xb7b9, 0x77d6, 0x3054, 0x1, 0x1);
        gbc.writeMem(0x20f1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf1f8, gbc.sp());
        EXPECT(0x20f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03CC
        gbc.setState(0x3ddb, 0xcfe0, 0xf430, 0xe820, 0x8451, 0xfa07, 0x1, 0x1);
        gbc.writeMem(0x3ddb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcfe0, gbc.sp());
        EXPECT(0x3ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03CD
        gbc.setState(0x9a3c, 0xcbe8, 0xf5b0, 0x89df, 0x75b8, 0x2021, 0x1, 0x1);
        gbc.writeMem(0x9a3c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcbe8, gbc.sp());
        EXPECT(0x9a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3c));
        EXPECT(0x67, gbc.readMem(0x9a3d));
        // CB 67 03CE
        gbc.setState(0x3444, 0x61d7, 0xed40, 0x1540, 0xa22d, 0x8df9, 0x1, 0x0);
        gbc.writeMem(0x3444, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0x3446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03D0
        gbc.setState(0x286d, 0xa729, 0x11a0, 0xbee8, 0x1fe5, 0xc5e7, 0x0, 0x1);
        gbc.writeMem(0x286d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa729, gbc.sp());
        EXPECT(0x286f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03D1
        gbc.setState(0x91c0, 0xe6c7, 0x60d0, 0xb538, 0x74b3, 0xbda5, 0x1, 0x1);
        gbc.writeMem(0x91c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe6c7, gbc.sp());
        EXPECT(0x91c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c0));
        EXPECT(0x67, gbc.readMem(0x91c1));
        // CB 67 03D2
        gbc.setState(0xa23, 0x2c0, 0x2a40, 0xf77c, 0x124b, 0xa272, 0x1, 0x1);
        gbc.writeMem(0xa23, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2c0, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03D3
        gbc.setState(0x7788, 0x379f, 0xdd30, 0x90bc, 0xfca9, 0xa021, 0x0, 0x0);
        gbc.writeMem(0x7788, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x379f, gbc.sp());
        EXPECT(0x778a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03D4
        gbc.setState(0x5904, 0x6556, 0x7e0, 0x41e, 0xb951, 0x19ea, 0x1, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0x5906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03D5
        gbc.setState(0x6486, 0x547, 0xe4f0, 0xa63a, 0x80b8, 0x9538, 0x0, 0x0);
        gbc.writeMem(0x6486, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x547, gbc.sp());
        EXPECT(0x6488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03D6
        gbc.setState(0xbccb, 0x9059, 0x8890, 0x5888, 0xb63c, 0xa5c, 0x0, 0x0);
        gbc.writeMem(0xbccb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9059, gbc.sp());
        EXPECT(0xbccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbccb));
        EXPECT(0x67, gbc.readMem(0xbccc));
        // CB 67 03D7
        gbc.setState(0xad24, 0xee1f, 0xf1b0, 0x4bc8, 0x5b59, 0xf27, 0x0, 0x1);
        gbc.writeMem(0xad24, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xee1f, gbc.sp());
        EXPECT(0xad26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad24));
        EXPECT(0x67, gbc.readMem(0xad25));
        // CB 67 03D8
        gbc.setState(0xae91, 0x48ff, 0x1d50, 0xe733, 0xc414, 0x5cd9, 0x0, 0x0);
        gbc.writeMem(0xae91, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x48ff, gbc.sp());
        EXPECT(0xae93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae91));
        EXPECT(0x67, gbc.readMem(0xae92));
        // CB 67 03D9
        gbc.setState(0x387b, 0xf5b, 0x5ad0, 0x55c4, 0x2571, 0x44af, 0x1, 0x1);
        gbc.writeMem(0x387b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf5b, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03DA
        gbc.setState(0x6a1, 0xfa79, 0xc3d0, 0x76ba, 0x2c21, 0x8037, 0x0, 0x0);
        gbc.writeMem(0x6a1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfa79, gbc.sp());
        EXPECT(0x6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03DB
        gbc.setState(0x7eaa, 0x7fba, 0x370, 0xdede, 0xdad6, 0xca13, 0x0, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7fba, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 67 03DC
        gbc.setState(0x1e24, 0x5ea5, 0xc920, 0xc9a, 0xc289, 0x8e0f, 0x0, 0x0);
        gbc.writeMem(0x1e24, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5ea5, gbc.sp());
        EXPECT(0x1e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03DD
        gbc.setState(0x7278, 0x1dc4, 0x1140, 0x93a2, 0x9319, 0x696, 0x1, 0x0);
        gbc.writeMem(0x7278, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1dc4, gbc.sp());
        EXPECT(0x727a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03DE
        gbc.setState(0x8f26, 0xfb82, 0x3c50, 0x734f, 0xd87e, 0x768e, 0x1, 0x1);
        gbc.writeMem(0x8f26, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfb82, gbc.sp());
        EXPECT(0x8f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f26));
        EXPECT(0x67, gbc.readMem(0x8f27));
        // CB 67 03DF
        gbc.setState(0x8802, 0xd5f4, 0xe100, 0xccfc, 0x7aff, 0x28b8, 0x1, 0x1);
        gbc.writeMem(0x8802, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd5f4, gbc.sp());
        EXPECT(0x8804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8802));
        EXPECT(0x67, gbc.readMem(0x8803));
        // CB 67 03E0
        gbc.setState(0xc124, 0x902f, 0xf790, 0x9a7, 0xb1fb, 0x2892, 0x0, 0x1);
        gbc.writeMem(0xc124, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0xc126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc124));
        EXPECT(0x67, gbc.readMem(0xc125));
        // CB 67 03E2
        gbc.setState(0xabaf, 0xa4c1, 0x7490, 0xff99, 0xa643, 0x643f, 0x1, 0x0);
        gbc.writeMem(0xabaf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa4c1, gbc.sp());
        EXPECT(0xabb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabaf));
        EXPECT(0x67, gbc.readMem(0xabb0));
        // CB 67 03E3
        gbc.setState(0xbcf0, 0x3fd2, 0x8b40, 0x4f6b, 0xad21, 0x4a6b, 0x1, 0x0);
        gbc.writeMem(0xbcf0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3fd2, gbc.sp());
        EXPECT(0xbcf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf0));
        EXPECT(0x67, gbc.readMem(0xbcf1));
        // CB 67 03E4
        gbc.setState(0x897e, 0xeeff, 0xf450, 0x6658, 0x6b2f, 0x648a, 0x0, 0x1);
        gbc.writeMem(0x897e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeeff, gbc.sp());
        EXPECT(0x8980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897e));
        EXPECT(0x67, gbc.readMem(0x897f));
        // CB 67 03E5
        gbc.setState(0x2954, 0x9e1c, 0xbf40, 0xc6e4, 0xac8d, 0x672e, 0x1, 0x0);
        gbc.writeMem(0x2954, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9e1c, gbc.sp());
        EXPECT(0x2956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 67 03E6
        gbc.setState(0xa3c1, 0x6d8e, 0x9ae0, 0xa990, 0x3c1c, 0x6284, 0x1, 0x0);
        gbc.writeMem(0xa3c1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6d8e, gbc.sp());
        EXPECT(0xa3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c1));
        EXPECT(0x67, gbc.readMem(0xa3c2));
        // CB 67 03E7
        gbc.setState(0x659b, 0x5300, 0x7120, 0x775e, 0x73ce, 0xc19f, 0x1, 0x0);
        gbc.writeMem(0x659b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5300, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
