#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_e4)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_e4) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E4 0000
        gbc.setState(0x85aa, 0x7256, 0x6300, 0x17ab, 0x59b3, 0xdae8, 0x1, 0x0);
        gbc.writeMem(0x85aa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7256);
        EXPECT(gbc.pc(), 0x85ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85aa), 0xcb);
        EXPECT(gbc.readMem(0x85ab), 0xe4);
        // CB E4 0001
        gbc.setState(0xcdb5, 0xa83c, 0x95d0, 0xfc83, 0x9863, 0x2b50, 0x0, 0x0);
        gbc.writeMem(0xcdb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa83c);
        EXPECT(gbc.pc(), 0xcdb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb5), 0xcb);
        EXPECT(gbc.readMem(0xcdb6), 0xe4);
        // CB E4 0002
        gbc.setState(0x20e9, 0x49ab, 0x4470, 0x5dfc, 0x306e, 0x2e7c, 0x1, 0x1);
        gbc.writeMem(0x20e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x49ab);
        EXPECT(gbc.pc(), 0x20eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0003
        gbc.setState(0x86ef, 0x9b2c, 0xd380, 0xd8e1, 0xa15c, 0xa20e, 0x0, 0x1);
        gbc.writeMem(0x86ef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9b2c);
        EXPECT(gbc.pc(), 0x86f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ef), 0xcb);
        EXPECT(gbc.readMem(0x86f0), 0xe4);
        // CB E4 0004
        gbc.setState(0xd9e7, 0x2eef, 0x7980, 0x2e01, 0xdbe8, 0x15d4, 0x1, 0x1);
        gbc.writeMem(0xd9e7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2eef);
        EXPECT(gbc.pc(), 0xd9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e7), 0xcb);
        EXPECT(gbc.readMem(0xd9e8), 0xe4);
        // CB E4 0005
        gbc.setState(0x3e91, 0x37cd, 0x39f0, 0xe13a, 0x91af, 0xa6e0, 0x0, 0x1);
        gbc.writeMem(0x3e91, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x37cd);
        EXPECT(gbc.pc(), 0x3e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0006
        gbc.setState(0x77fb, 0x2b3e, 0xf380, 0x2ed0, 0x7354, 0xb6fd, 0x0, 0x0);
        gbc.writeMem(0x77fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2b3e);
        EXPECT(gbc.pc(), 0x77fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0007
        gbc.setState(0xdd39, 0x5065, 0x2a0, 0x74cc, 0x20aa, 0x11b5, 0x0, 0x0);
        gbc.writeMem(0xdd39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5065);
        EXPECT(gbc.pc(), 0xdd3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd39), 0xcb);
        EXPECT(gbc.readMem(0xdd3a), 0xe4);
        // CB E4 0008
        gbc.setState(0xdaff, 0x1ca7, 0xc7d0, 0x279a, 0x25ca, 0x8092, 0x0, 0x0);
        gbc.writeMem(0xdaff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1ca7);
        EXPECT(gbc.pc(), 0xdb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaff), 0xcb);
        EXPECT(gbc.readMem(0xdb00), 0xe4);
        // CB E4 0009
        gbc.setState(0xba9a, 0x1865, 0x20d0, 0xe630, 0x195, 0xd76a, 0x0, 0x0);
        gbc.writeMem(0xba9a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1865);
        EXPECT(gbc.pc(), 0xba9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9a), 0xcb);
        EXPECT(gbc.readMem(0xba9b), 0xe4);
        // CB E4 000A
        gbc.setState(0x4d21, 0x598e, 0xe820, 0xf01b, 0xb664, 0xcbef, 0x1, 0x0);
        gbc.writeMem(0x4d21, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x598e);
        EXPECT(gbc.pc(), 0x4d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 000B
        gbc.setState(0x36, 0xa624, 0x7d40, 0x6854, 0xa9bf, 0x6a07, 0x1, 0x1);
        gbc.writeMem(0x36, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa624);
        EXPECT(gbc.pc(), 0x38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 000C
        gbc.setState(0x88c1, 0xe645, 0xedb0, 0xe71b, 0x284c, 0xfea, 0x1, 0x0);
        gbc.writeMem(0x88c1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe645);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0xcb);
        EXPECT(gbc.readMem(0x88c2), 0xe4);
        // CB E4 000D
        gbc.setState(0x30ac, 0x55f6, 0x23f0, 0x34f7, 0x3c10, 0xc3d9, 0x0, 0x0);
        gbc.writeMem(0x30ac, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x55f6);
        EXPECT(gbc.pc(), 0x30ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 000E
        gbc.setState(0x5552, 0xb2af, 0x6830, 0xc88e, 0xe447, 0xb5fe, 0x0, 0x1);
        gbc.writeMem(0x5552, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb2af);
        EXPECT(gbc.pc(), 0x5554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 000F
        gbc.setState(0x194c, 0xcb35, 0x6560, 0xcb02, 0x4f87, 0xbabf, 0x1, 0x1);
        gbc.writeMem(0x194c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcb35);
        EXPECT(gbc.pc(), 0x194e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0010
        gbc.setState(0x68b9, 0x30f3, 0x7ba0, 0xe103, 0xc58, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x30f3);
        EXPECT(gbc.pc(), 0x68bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0011
        gbc.setState(0x9610, 0xdb56, 0x4a50, 0x67dd, 0xfb6, 0xb96e, 0x0, 0x0);
        gbc.writeMem(0x9610, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdb56);
        EXPECT(gbc.pc(), 0x9612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9610), 0xcb);
        EXPECT(gbc.readMem(0x9611), 0xe4);
        // CB E4 0012
        gbc.setState(0xbd6a, 0xb4df, 0x5140, 0x5b9a, 0xdc91, 0x1b1a, 0x0, 0x1);
        gbc.writeMem(0xbd6a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb4df);
        EXPECT(gbc.pc(), 0xbd6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6a), 0xcb);
        EXPECT(gbc.readMem(0xbd6b), 0xe4);
        // CB E4 0013
        gbc.setState(0xd908, 0x25fb, 0xf010, 0x4982, 0x7dc6, 0xa35a, 0x1, 0x0);
        gbc.writeMem(0xd908, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x25fb);
        EXPECT(gbc.pc(), 0xd90a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd908), 0xcb);
        EXPECT(gbc.readMem(0xd909), 0xe4);
        // CB E4 0014
        gbc.setState(0x22b4, 0xff96, 0x7c00, 0xbd7, 0xdcc9, 0xdc3e, 0x0, 0x0);
        gbc.writeMem(0x22b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xff96);
        EXPECT(gbc.pc(), 0x22b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0016
        gbc.setState(0xdb18, 0xab36, 0x1d50, 0x754e, 0x8b67, 0xd52, 0x1, 0x0);
        gbc.writeMem(0xdb18, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xab36);
        EXPECT(gbc.pc(), 0xdb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb18), 0xcb);
        EXPECT(gbc.readMem(0xdb19), 0xe4);
        // CB E4 0017
        gbc.setState(0x566f, 0x5da1, 0x7d20, 0x9010, 0xdfe3, 0x1847, 0x1, 0x1);
        gbc.writeMem(0x566f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5da1);
        EXPECT(gbc.pc(), 0x5671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0018
        gbc.setState(0x4280, 0x30c0, 0xad0, 0xc142, 0x44b9, 0xe787, 0x1, 0x0);
        gbc.writeMem(0x4280, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x30c0);
        EXPECT(gbc.pc(), 0x4282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0019
        gbc.setState(0x4f86, 0xca42, 0x50a0, 0x8071, 0xe65e, 0xbdbd, 0x1, 0x1);
        gbc.writeMem(0x4f86, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xca42);
        EXPECT(gbc.pc(), 0x4f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 001A
        gbc.setState(0x9e9c, 0xb113, 0x2cd0, 0x7658, 0xa2ea, 0x99dd, 0x1, 0x1);
        gbc.writeMem(0x9e9c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb113);
        EXPECT(gbc.pc(), 0x9e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9c), 0xcb);
        EXPECT(gbc.readMem(0x9e9d), 0xe4);
        // CB E4 001B
        gbc.setState(0x81c2, 0x2ce8, 0x5b90, 0x3e04, 0xaf9b, 0xa3b0, 0x1, 0x0);
        gbc.writeMem(0x81c2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2ce8);
        EXPECT(gbc.pc(), 0x81c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c2), 0xcb);
        EXPECT(gbc.readMem(0x81c3), 0xe4);
        // CB E4 001C
        gbc.setState(0x95df, 0x512b, 0xfce0, 0xcb1e, 0xb4c1, 0xdadd, 0x0, 0x1);
        gbc.writeMem(0x95df, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x512b);
        EXPECT(gbc.pc(), 0x95e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95df), 0xcb);
        EXPECT(gbc.readMem(0x95e0), 0xe4);
        // CB E4 001D
        gbc.setState(0x95a4, 0x1fc3, 0xbf20, 0xef4d, 0x69d6, 0xc70a, 0x1, 0x1);
        gbc.writeMem(0x95a4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1fc3);
        EXPECT(gbc.pc(), 0x95a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a4), 0xcb);
        EXPECT(gbc.readMem(0x95a5), 0xe4);
        // CB E4 001E
        gbc.setState(0x7315, 0xf7e2, 0x9ac0, 0x9dfb, 0x9491, 0xfe18, 0x1, 0x0);
        gbc.writeMem(0x7315, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf7e2);
        EXPECT(gbc.pc(), 0x7317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 001F
        gbc.setState(0x37e9, 0x639f, 0x5680, 0xf62, 0x6d7f, 0x9017, 0x1, 0x1);
        gbc.writeMem(0x37e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x639f);
        EXPECT(gbc.pc(), 0x37eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0020
        gbc.setState(0xa4c1, 0xfc6a, 0x6c90, 0x83ea, 0x6016, 0x4937, 0x1, 0x0);
        gbc.writeMem(0xa4c1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfc6a);
        EXPECT(gbc.pc(), 0xa4c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c1), 0xcb);
        EXPECT(gbc.readMem(0xa4c2), 0xe4);
        // CB E4 0021
        gbc.setState(0x68d0, 0x7d1b, 0x15c0, 0xf001, 0x4652, 0x5777, 0x0, 0x1);
        gbc.writeMem(0x68d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7d1b);
        EXPECT(gbc.pc(), 0x68d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0022
        gbc.setState(0x549b, 0xcf45, 0xc9d0, 0x758e, 0x10ba, 0x84a5, 0x1, 0x0);
        gbc.writeMem(0x549b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcf45);
        EXPECT(gbc.pc(), 0x549d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0023
        gbc.setState(0xc0e7, 0x79c1, 0xe0, 0x513d, 0xa148, 0xb878, 0x1, 0x0);
        gbc.writeMem(0xc0e7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x79c1);
        EXPECT(gbc.pc(), 0xc0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e7), 0xcb);
        EXPECT(gbc.readMem(0xc0e8), 0xe4);
        // CB E4 0024
        gbc.setState(0xce6e, 0x3f27, 0x5f80, 0xf1eb, 0xe2f, 0x7018, 0x0, 0x1);
        gbc.writeMem(0xce6e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3f27);
        EXPECT(gbc.pc(), 0xce70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6e), 0xcb);
        EXPECT(gbc.readMem(0xce6f), 0xe4);
        // CB E4 0025
        gbc.setState(0xeb54, 0x56f0, 0x2f90, 0xd35e, 0x1742, 0xa6e2, 0x0, 0x1);
        gbc.writeMem(0xeb54, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x56f0);
        EXPECT(gbc.pc(), 0xeb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb54), 0xcb);
        EXPECT(gbc.readMem(0xeb55), 0xe4);
        // CB E4 0026
        gbc.setState(0x7024, 0x4dee, 0x5060, 0xa276, 0x6e46, 0xdd57, 0x1, 0x0);
        gbc.writeMem(0x7024, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4dee);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0027
        gbc.setState(0x8feb, 0x877f, 0xa620, 0x66f0, 0x270f, 0x1360, 0x1, 0x1);
        gbc.writeMem(0x8feb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x877f);
        EXPECT(gbc.pc(), 0x8fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8feb), 0xcb);
        EXPECT(gbc.readMem(0x8fec), 0xe4);
        // CB E4 0028
        gbc.setState(0xcf73, 0x5587, 0xead0, 0x5c74, 0x2da5, 0x1caa, 0x0, 0x1);
        gbc.writeMem(0xcf73, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5587);
        EXPECT(gbc.pc(), 0xcf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf73), 0xcb);
        EXPECT(gbc.readMem(0xcf74), 0xe4);
        // CB E4 0029
        gbc.setState(0xb436, 0x2962, 0x5aa0, 0x998b, 0x14a3, 0x2040, 0x1, 0x0);
        gbc.writeMem(0xb436, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2962);
        EXPECT(gbc.pc(), 0xb438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb436), 0xcb);
        EXPECT(gbc.readMem(0xb437), 0xe4);
        // CB E4 002A
        gbc.setState(0x3a44, 0xc976, 0xf040, 0xdb26, 0x2a8e, 0xf158, 0x1, 0x1);
        gbc.writeMem(0x3a44, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc976);
        EXPECT(gbc.pc(), 0x3a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 002B
        gbc.setState(0xc838, 0xe404, 0x7ff0, 0xd94b, 0xf136, 0x260a, 0x0, 0x1);
        gbc.writeMem(0xc838, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe404);
        EXPECT(gbc.pc(), 0xc83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc838), 0xcb);
        EXPECT(gbc.readMem(0xc839), 0xe4);
        // CB E4 002C
        gbc.setState(0xb6a2, 0xfc17, 0x1660, 0x1c22, 0x1cae, 0x242a, 0x0, 0x0);
        gbc.writeMem(0xb6a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfc17);
        EXPECT(gbc.pc(), 0xb6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a2), 0xcb);
        EXPECT(gbc.readMem(0xb6a3), 0xe4);
        // CB E4 002D
        gbc.setState(0x31ff, 0xebda, 0xc1d0, 0xbeb8, 0x29f3, 0x8b8c, 0x1, 0x0);
        gbc.writeMem(0x31ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xebda);
        EXPECT(gbc.pc(), 0x3201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 002E
        gbc.setState(0x2119, 0x58bb, 0x4840, 0xae70, 0xb341, 0x5e36, 0x1, 0x0);
        gbc.writeMem(0x2119, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x58bb);
        EXPECT(gbc.pc(), 0x211b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 002F
        gbc.setState(0x4377, 0x146c, 0xfb10, 0x776a, 0x987f, 0x7722, 0x0, 0x1);
        gbc.writeMem(0x4377, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x146c);
        EXPECT(gbc.pc(), 0x4379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0030
        gbc.setState(0x9cec, 0x5e49, 0x2b20, 0x469d, 0x1db0, 0x1f61, 0x1, 0x1);
        gbc.writeMem(0x9cec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5e49);
        EXPECT(gbc.pc(), 0x9cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cec), 0xcb);
        EXPECT(gbc.readMem(0x9ced), 0xe4);
        // CB E4 0031
        gbc.setState(0x2ed4, 0xd33a, 0xec00, 0x745c, 0x4e1d, 0xb4da, 0x0, 0x0);
        gbc.writeMem(0x2ed4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd33a);
        EXPECT(gbc.pc(), 0x2ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0032
        gbc.setState(0x6778, 0x462, 0x6ee0, 0xb05b, 0x282d, 0x1a53, 0x1, 0x1);
        gbc.writeMem(0x6778, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x462);
        EXPECT(gbc.pc(), 0x677a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0033
        gbc.setState(0x3924, 0xba16, 0xc9f0, 0xe82a, 0x4408, 0x1342, 0x1, 0x0);
        gbc.writeMem(0x3924, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xba16);
        EXPECT(gbc.pc(), 0x3926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0034
        gbc.setState(0xd2ea, 0x5fbe, 0x55f0, 0x371, 0x59ef, 0xef06, 0x0, 0x0);
        gbc.writeMem(0xd2ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5fbe);
        EXPECT(gbc.pc(), 0xd2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ea), 0xcb);
        EXPECT(gbc.readMem(0xd2eb), 0xe4);
        // CB E4 0036
        gbc.setState(0xc9cc, 0x39a9, 0x1840, 0x4eb5, 0xda, 0xf3d8, 0x1, 0x0);
        gbc.writeMem(0xc9cc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x39a9);
        EXPECT(gbc.pc(), 0xc9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cc), 0xcb);
        EXPECT(gbc.readMem(0xc9cd), 0xe4);
        // CB E4 0037
        gbc.setState(0xbb10, 0x4f42, 0x27a0, 0x9e81, 0xa08d, 0xd2a9, 0x1, 0x1);
        gbc.writeMem(0xbb10, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4f42);
        EXPECT(gbc.pc(), 0xbb12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb10), 0xcb);
        EXPECT(gbc.readMem(0xbb11), 0xe4);
        // CB E4 0038
        gbc.setState(0xd217, 0xcaf9, 0xb7d0, 0xe72b, 0xb29e, 0x8646, 0x1, 0x0);
        gbc.writeMem(0xd217, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcaf9);
        EXPECT(gbc.pc(), 0xd219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd217), 0xcb);
        EXPECT(gbc.readMem(0xd218), 0xe4);
        // CB E4 0039
        gbc.setState(0x2b61, 0xabed, 0x9910, 0x8988, 0x67e7, 0x111f, 0x0, 0x0);
        gbc.writeMem(0x2b61, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xabed);
        EXPECT(gbc.pc(), 0x2b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 003A
        gbc.setState(0x2e6d, 0xe0c8, 0x5890, 0x3424, 0xa17e, 0xf695, 0x0, 0x1);
        gbc.writeMem(0x2e6d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe0c8);
        EXPECT(gbc.pc(), 0x2e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 003B
        gbc.setState(0x1efe, 0xb87a, 0xcd30, 0xe158, 0xc6ad, 0x3ea0, 0x1, 0x1);
        gbc.writeMem(0x1efe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb87a);
        EXPECT(gbc.pc(), 0x1f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 003C
        gbc.setState(0x1e2c, 0x2529, 0x8030, 0x5526, 0x3b2b, 0x6599, 0x1, 0x0);
        gbc.writeMem(0x1e2c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2529);
        EXPECT(gbc.pc(), 0x1e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 003D
        gbc.setState(0x7f39, 0x6959, 0xe870, 0x3dce, 0x28c3, 0xe9a9, 0x1, 0x0);
        gbc.writeMem(0x7f39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6959);
        EXPECT(gbc.pc(), 0x7f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 003E
        gbc.setState(0xb1ab, 0x833a, 0xf9f0, 0x6818, 0xa058, 0x9a32, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x833a);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ab), 0xcb);
        EXPECT(gbc.readMem(0xb1ac), 0xe4);
        // CB E4 003F
        gbc.setState(0x1c7f, 0xae79, 0x6870, 0x1d03, 0x7e10, 0xf359, 0x1, 0x0);
        gbc.writeMem(0x1c7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xae79);
        EXPECT(gbc.pc(), 0x1c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0040
        gbc.setState(0x547d, 0x474a, 0x83b0, 0x7639, 0x3a1d, 0x1071, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x474a);
        EXPECT(gbc.pc(), 0x547f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0041
        gbc.setState(0xb47f, 0x3cdf, 0x4d0, 0x8e6b, 0x7af5, 0x515d, 0x1, 0x0);
        gbc.writeMem(0xb47f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3cdf);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        EXPECT(gbc.readMem(0xb480), 0xe4);
        // CB E4 0042
        gbc.setState(0xd7a4, 0xa302, 0x39b0, 0xa3bf, 0x8f98, 0x9cf1, 0x1, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa302);
        EXPECT(gbc.pc(), 0xd7a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a4), 0xcb);
        EXPECT(gbc.readMem(0xd7a5), 0xe4);
        // CB E4 0043
        gbc.setState(0xadec, 0xa8b0, 0xd890, 0x8065, 0x8b51, 0x38fd, 0x0, 0x1);
        gbc.writeMem(0xadec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa8b0);
        EXPECT(gbc.pc(), 0xadee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadec), 0xcb);
        EXPECT(gbc.readMem(0xaded), 0xe4);
        // CB E4 0044
        gbc.setState(0x92b4, 0x20d5, 0xa450, 0x72c1, 0xde4c, 0x452d, 0x0, 0x0);
        gbc.writeMem(0x92b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x20d5);
        EXPECT(gbc.pc(), 0x92b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b4), 0xcb);
        EXPECT(gbc.readMem(0x92b5), 0xe4);
        // CB E4 0045
        gbc.setState(0x5fb, 0xf563, 0x22a0, 0xcb67, 0xa98d, 0xf1a7, 0x1, 0x0);
        gbc.writeMem(0x5fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf563);
        EXPECT(gbc.pc(), 0x5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0046
        gbc.setState(0x840b, 0x2a1, 0xa480, 0x3a70, 0x72d4, 0x1702, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2a1);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840b), 0xcb);
        EXPECT(gbc.readMem(0x840c), 0xe4);
        // CB E4 0047
        gbc.setState(0x92d5, 0xf086, 0x13c0, 0xabac, 0x56a5, 0x5495, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf086);
        EXPECT(gbc.pc(), 0x92d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d5), 0xcb);
        EXPECT(gbc.readMem(0x92d6), 0xe4);
        // CB E4 0048
        gbc.setState(0x79, 0x3fb6, 0x1a90, 0x8801, 0x3f5f, 0x1a45, 0x1, 0x0);
        gbc.writeMem(0x79, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3fb6);
        EXPECT(gbc.pc(), 0x7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0049
        gbc.setState(0x576a, 0xa7f3, 0xd250, 0xdaa9, 0x9fdc, 0xf222, 0x1, 0x0);
        gbc.writeMem(0x576a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa7f3);
        EXPECT(gbc.pc(), 0x576c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 004A
        gbc.setState(0x28d4, 0x5bf9, 0xc4d0, 0x4ba8, 0x71b2, 0x61f6, 0x0, 0x0);
        gbc.writeMem(0x28d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5bf9);
        EXPECT(gbc.pc(), 0x28d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 004B
        gbc.setState(0xa4d7, 0xdadf, 0xf480, 0xface, 0xb2f8, 0xef70, 0x0, 0x1);
        gbc.writeMem(0xa4d7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdadf);
        EXPECT(gbc.pc(), 0xa4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d7), 0xcb);
        EXPECT(gbc.readMem(0xa4d8), 0xe4);
        // CB E4 004D
        gbc.setState(0xe03b, 0xcfe7, 0x7ae0, 0xb66b, 0x2b9f, 0xf00c, 0x0, 0x0);
        gbc.writeMem(0xe03b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcfe7);
        EXPECT(gbc.pc(), 0xe03d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03b), 0xcb);
        EXPECT(gbc.readMem(0xe03c), 0xe4);
        // CB E4 004E
        gbc.setState(0x9d4f, 0xcab8, 0x9340, 0xf29c, 0xb071, 0x3e9b, 0x1, 0x1);
        gbc.writeMem(0x9d4f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcab8);
        EXPECT(gbc.pc(), 0x9d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4f), 0xcb);
        EXPECT(gbc.readMem(0x9d50), 0xe4);
        // CB E4 004F
        gbc.setState(0xe4fa, 0xc1b6, 0x99c0, 0x2066, 0x46a5, 0xadcb, 0x1, 0x1);
        gbc.writeMem(0xe4fa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc1b6);
        EXPECT(gbc.pc(), 0xe4fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4fa), 0xcb);
        EXPECT(gbc.readMem(0xe4fb), 0xe4);
        // CB E4 0050
        gbc.setState(0x473, 0xc876, 0x8540, 0xe638, 0x7d62, 0xa939, 0x0, 0x1);
        gbc.writeMem(0x473, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc876);
        EXPECT(gbc.pc(), 0x475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0051
        gbc.setState(0xaa81, 0x8d9, 0x4870, 0x54df, 0xe792, 0xdf7d, 0x1, 0x1);
        gbc.writeMem(0xaa81, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8d9);
        EXPECT(gbc.pc(), 0xaa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa81), 0xcb);
        EXPECT(gbc.readMem(0xaa82), 0xe4);
        // CB E4 0052
        gbc.setState(0x76ec, 0xdb69, 0xbb40, 0x2470, 0x8fec, 0xdc8f, 0x1, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdb69);
        EXPECT(gbc.pc(), 0x76ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0053
        gbc.setState(0xc2f9, 0x101b, 0x1040, 0x8edf, 0x43, 0xe5eb, 0x1, 0x1);
        gbc.writeMem(0xc2f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0xc2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f9), 0xcb);
        EXPECT(gbc.readMem(0xc2fa), 0xe4);
        // CB E4 0054
        gbc.setState(0xcb1d, 0x329e, 0x6aa0, 0x556b, 0x12ae, 0xdba2, 0x1, 0x0);
        gbc.writeMem(0xcb1d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x329e);
        EXPECT(gbc.pc(), 0xcb1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1d), 0xcb);
        EXPECT(gbc.readMem(0xcb1e), 0xe4);
        // CB E4 0056
        gbc.setState(0x9238, 0x54f4, 0xd600, 0x78aa, 0x9cfc, 0xbbc, 0x0, 0x1);
        gbc.writeMem(0x9238, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x54f4);
        EXPECT(gbc.pc(), 0x923a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9238), 0xcb);
        EXPECT(gbc.readMem(0x9239), 0xe4);
        // CB E4 0057
        gbc.setState(0x235d, 0x3358, 0x8270, 0xc2a8, 0x6989, 0x5fdd, 0x1, 0x1);
        gbc.writeMem(0x235d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3358);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0059
        gbc.setState(0x63bb, 0x7844, 0x64c0, 0xca96, 0xe5ba, 0x6374, 0x0, 0x1);
        gbc.writeMem(0x63bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7844);
        EXPECT(gbc.pc(), 0x63bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 005A
        gbc.setState(0x2b84, 0x3b5e, 0xdfe0, 0xcbfd, 0xe4b5, 0x7d06, 0x0, 0x0);
        gbc.writeMem(0x2b84, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3b5e);
        EXPECT(gbc.pc(), 0x2b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 005B
        gbc.setState(0x8edc, 0xb341, 0x990, 0x7cbe, 0xdfd4, 0x9e55, 0x1, 0x0);
        gbc.writeMem(0x8edc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb341);
        EXPECT(gbc.pc(), 0x8ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edc), 0xcb);
        EXPECT(gbc.readMem(0x8edd), 0xe4);
        // CB E4 005C
        gbc.setState(0x534, 0x3e55, 0x6ce0, 0x6e82, 0x4a44, 0x3c38, 0x0, 0x0);
        gbc.writeMem(0x534, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3e55);
        EXPECT(gbc.pc(), 0x536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 005D
        gbc.setState(0x53c9, 0x9d21, 0xefb0, 0xa4f, 0x8fa8, 0xd61b, 0x1, 0x0);
        gbc.writeMem(0x53c9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9d21);
        EXPECT(gbc.pc(), 0x53cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 005E
        gbc.setState(0x91d1, 0xad0d, 0x7f00, 0x6dde, 0x68d7, 0xf2e3, 0x0, 0x1);
        gbc.writeMem(0x91d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xad0d);
        EXPECT(gbc.pc(), 0x91d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d1), 0xcb);
        EXPECT(gbc.readMem(0x91d2), 0xe4);
        // CB E4 005F
        gbc.setState(0xc70, 0xf691, 0x2470, 0x54a7, 0x91cc, 0xb564, 0x1, 0x1);
        gbc.writeMem(0xc70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf691);
        EXPECT(gbc.pc(), 0xc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0060
        gbc.setState(0xb58a, 0xb64f, 0x560, 0x49e8, 0x43b1, 0x2435, 0x0, 0x0);
        gbc.writeMem(0xb58a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb64f);
        EXPECT(gbc.pc(), 0xb58c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58a), 0xcb);
        EXPECT(gbc.readMem(0xb58b), 0xe4);
        // CB E4 0061
        gbc.setState(0xd2a, 0x1ef8, 0x14e0, 0xa4cb, 0xc502, 0x8e7, 0x1, 0x0);
        gbc.writeMem(0xd2a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1ef8);
        EXPECT(gbc.pc(), 0xd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0062
        gbc.setState(0x56a5, 0x9fa8, 0x44b0, 0x87a8, 0xe639, 0xf905, 0x1, 0x0);
        gbc.writeMem(0x56a5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9fa8);
        EXPECT(gbc.pc(), 0x56a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0063
        gbc.setState(0xa85c, 0x60c4, 0xff0, 0xea40, 0x116a, 0xa818, 0x0, 0x0);
        gbc.writeMem(0xa85c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x60c4);
        EXPECT(gbc.pc(), 0xa85e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85c), 0xcb);
        EXPECT(gbc.readMem(0xa85d), 0xe4);
        // CB E4 0064
        gbc.setState(0x2423, 0x45e2, 0x5fc0, 0x3e7e, 0xca2a, 0x2169, 0x1, 0x0);
        gbc.writeMem(0x2423, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x45e2);
        EXPECT(gbc.pc(), 0x2425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0065
        gbc.setState(0x5ce6, 0x651b, 0x1340, 0xad17, 0x30b, 0x5, 0x0, 0x0);
        gbc.writeMem(0x5ce6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x651b);
        EXPECT(gbc.pc(), 0x5ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0066
        gbc.setState(0xc06c, 0x3495, 0xfa30, 0x7d1c, 0x951, 0x6b0d, 0x0, 0x1);
        gbc.writeMem(0xc06c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3495);
        EXPECT(gbc.pc(), 0xc06e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc06c), 0xcb);
        EXPECT(gbc.readMem(0xc06d), 0xe4);
        // CB E4 0067
        gbc.setState(0x555d, 0x2f5a, 0x3150, 0x41ce, 0x3ac, 0xaf57, 0x1, 0x1);
        gbc.writeMem(0x555d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f5a);
        EXPECT(gbc.pc(), 0x555f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0068
        gbc.setState(0x61c3, 0x8dab, 0xb590, 0x29f5, 0x200, 0xf8a1, 0x1, 0x0);
        gbc.writeMem(0x61c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8dab);
        EXPECT(gbc.pc(), 0x61c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0069
        gbc.setState(0xd3a8, 0x54a4, 0xbf50, 0x73aa, 0x8259, 0x642d, 0x1, 0x0);
        gbc.writeMem(0xd3a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x54a4);
        EXPECT(gbc.pc(), 0xd3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a8), 0xcb);
        EXPECT(gbc.readMem(0xd3a9), 0xe4);
        // CB E4 006A
        gbc.setState(0x756b, 0x7a15, 0xab90, 0xe7f, 0xa667, 0xb73d, 0x0, 0x1);
        gbc.writeMem(0x756b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7a15);
        EXPECT(gbc.pc(), 0x756d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 006B
        gbc.setState(0x3b97, 0x8c9e, 0xf140, 0xf64c, 0x516b, 0xe9b7, 0x0, 0x0);
        gbc.writeMem(0x3b97, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8c9e);
        EXPECT(gbc.pc(), 0x3b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 006C
        gbc.setState(0x408, 0xf729, 0x2320, 0x8d2a, 0x6dc0, 0x713a, 0x0, 0x0);
        gbc.writeMem(0x408, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf729);
        EXPECT(gbc.pc(), 0x40a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 006D
        gbc.setState(0x12ab, 0x148c, 0x1e00, 0xdaa7, 0x53bc, 0xab59, 0x1, 0x0);
        gbc.writeMem(0x12ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x148c);
        EXPECT(gbc.pc(), 0x12ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 006E
        gbc.setState(0xeff9, 0xbcff, 0xe3c0, 0x8e25, 0xeed7, 0xb3cf, 0x0, 0x0);
        gbc.writeMem(0xeff9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbcff);
        EXPECT(gbc.pc(), 0xeffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff9), 0xcb);
        EXPECT(gbc.readMem(0xeffa), 0xe4);
        // CB E4 0070
        gbc.setState(0xa4bf, 0x4e3a, 0xaed0, 0x2f34, 0x1f54, 0xa18d, 0x1, 0x0);
        gbc.writeMem(0xa4bf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4e3a);
        EXPECT(gbc.pc(), 0xa4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4bf), 0xcb);
        EXPECT(gbc.readMem(0xa4c0), 0xe4);
        // CB E4 0071
        gbc.setState(0xba0, 0x866, 0xd8b0, 0xb723, 0x24b0, 0xf68a, 0x1, 0x1);
        gbc.writeMem(0xba0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x866);
        EXPECT(gbc.pc(), 0xba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0072
        gbc.setState(0x2788, 0xb94e, 0xac40, 0xbeea, 0xa0c9, 0x5f44, 0x0, 0x1);
        gbc.writeMem(0x2788, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb94e);
        EXPECT(gbc.pc(), 0x278a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0073
        gbc.setState(0x1ae0, 0x9416, 0xfe90, 0xcd67, 0xb5ed, 0xa469, 0x0, 0x1);
        gbc.writeMem(0x1ae0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9416);
        EXPECT(gbc.pc(), 0x1ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0074
        gbc.setState(0x3e98, 0x5424, 0x2e10, 0x3ca3, 0xb48f, 0x11bc, 0x0, 0x0);
        gbc.writeMem(0x3e98, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5424);
        EXPECT(gbc.pc(), 0x3e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0075
        gbc.setState(0x564f, 0x7aa8, 0xda30, 0xd550, 0x7548, 0x34ae, 0x1, 0x0);
        gbc.writeMem(0x564f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7aa8);
        EXPECT(gbc.pc(), 0x5651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0076
        gbc.setState(0xc1d4, 0x52af, 0x8000, 0x84ef, 0xca18, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0xc1d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x52af);
        EXPECT(gbc.pc(), 0xc1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d4), 0xcb);
        EXPECT(gbc.readMem(0xc1d5), 0xe4);
        // CB E4 0077
        gbc.setState(0xc98, 0x6795, 0xa8d0, 0x54cf, 0x55fb, 0xb11d, 0x0, 0x0);
        gbc.writeMem(0xc98, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6795);
        EXPECT(gbc.pc(), 0xc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0078
        gbc.setState(0x5e61, 0x7a29, 0xbdd0, 0x7389, 0xcfbe, 0xbd4d, 0x1, 0x0);
        gbc.writeMem(0x5e61, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7a29);
        EXPECT(gbc.pc(), 0x5e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0079
        gbc.setState(0xa54c, 0x16df, 0xd1a0, 0x7bac, 0xe9b4, 0x80c3, 0x1, 0x0);
        gbc.writeMem(0xa54c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x16df);
        EXPECT(gbc.pc(), 0xa54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54c), 0xcb);
        EXPECT(gbc.readMem(0xa54d), 0xe4);
        // CB E4 007A
        gbc.setState(0x97fc, 0x205, 0x2900, 0xd24b, 0x912, 0xc534, 0x1, 0x1);
        gbc.writeMem(0x97fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x205);
        EXPECT(gbc.pc(), 0x97fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97fc), 0xcb);
        EXPECT(gbc.readMem(0x97fd), 0xe4);
        // CB E4 007B
        gbc.setState(0xa801, 0x3edc, 0x9410, 0x3d1e, 0x39a1, 0xbbbb, 0x1, 0x0);
        gbc.writeMem(0xa801, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3edc);
        EXPECT(gbc.pc(), 0xa803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa801), 0xcb);
        EXPECT(gbc.readMem(0xa802), 0xe4);
        // CB E4 007C
        gbc.setState(0xb6b9, 0x6e2e, 0xa8a0, 0x5fc5, 0xb135, 0xa810, 0x0, 0x1);
        gbc.writeMem(0xb6b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6e2e);
        EXPECT(gbc.pc(), 0xb6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b9), 0xcb);
        EXPECT(gbc.readMem(0xb6ba), 0xe4);
        // CB E4 007D
        gbc.setState(0x6299, 0xec96, 0x5410, 0xdb12, 0xcb98, 0xa9ee, 0x0, 0x0);
        gbc.writeMem(0x6299, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xec96);
        EXPECT(gbc.pc(), 0x629b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 007E
        gbc.setState(0x4fda, 0x3fbd, 0xb2f0, 0xcaa3, 0x61cb, 0x4a82, 0x0, 0x1);
        gbc.writeMem(0x4fda, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3fbd);
        EXPECT(gbc.pc(), 0x4fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 007F
        gbc.setState(0x3dfb, 0x3db, 0x1780, 0xb24c, 0x7325, 0x2306, 0x1, 0x1);
        gbc.writeMem(0x3dfb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3db);
        EXPECT(gbc.pc(), 0x3dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0080
        gbc.setState(0x6c5a, 0x9173, 0x7ae0, 0x9e, 0x9dbd, 0xc05e, 0x1, 0x0);
        gbc.writeMem(0x6c5a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9173);
        EXPECT(gbc.pc(), 0x6c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0081
        gbc.setState(0xb360, 0x24b3, 0x65f0, 0xbceb, 0x821e, 0xfba6, 0x1, 0x0);
        gbc.writeMem(0xb360, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x24b3);
        EXPECT(gbc.pc(), 0xb362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb360), 0xcb);
        EXPECT(gbc.readMem(0xb361), 0xe4);
        // CB E4 0082
        gbc.setState(0x648, 0xd062, 0xafb0, 0x1097, 0x6cb4, 0xc7f1, 0x1, 0x1);
        gbc.writeMem(0x648, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd062);
        EXPECT(gbc.pc(), 0x64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0083
        gbc.setState(0xc6f2, 0xb989, 0x7ff0, 0xf502, 0x2e54, 0x5f31, 0x1, 0x1);
        gbc.writeMem(0xc6f2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb989);
        EXPECT(gbc.pc(), 0xc6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f2), 0xcb);
        EXPECT(gbc.readMem(0xc6f3), 0xe4);
        // CB E4 0084
        gbc.setState(0x23b3, 0x64b9, 0x7790, 0x728c, 0x2cbc, 0x2b82, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x64b9);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0085
        gbc.setState(0x26c5, 0x46ad, 0xb280, 0xfb42, 0x6bd1, 0xa64a, 0x1, 0x1);
        gbc.writeMem(0x26c5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x46ad);
        EXPECT(gbc.pc(), 0x26c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0086
        gbc.setState(0x789e, 0xc565, 0x6e50, 0x6cad, 0xbc2d, 0xd2c7, 0x0, 0x1);
        gbc.writeMem(0x789e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc565);
        EXPECT(gbc.pc(), 0x78a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0087
        gbc.setState(0xd4ec, 0x4be2, 0x7d40, 0xb444, 0xcfa7, 0x6df5, 0x1, 0x1);
        gbc.writeMem(0xd4ec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4be2);
        EXPECT(gbc.pc(), 0xd4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ec), 0xcb);
        EXPECT(gbc.readMem(0xd4ed), 0xe4);
        // CB E4 0088
        gbc.setState(0x5860, 0x8af4, 0x25f0, 0xd1ac, 0xef5d, 0x58b, 0x0, 0x1);
        gbc.writeMem(0x5860, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8af4);
        EXPECT(gbc.pc(), 0x5862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0089
        gbc.setState(0x8754, 0xad0c, 0x31c0, 0x3223, 0x6c51, 0x703, 0x0, 0x1);
        gbc.writeMem(0x8754, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xad0c);
        EXPECT(gbc.pc(), 0x8756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8754), 0xcb);
        EXPECT(gbc.readMem(0x8755), 0xe4);
        // CB E4 008A
        gbc.setState(0x5b6b, 0x597d, 0xde20, 0xa697, 0x71fc, 0xa2c2, 0x0, 0x1);
        gbc.writeMem(0x5b6b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x597d);
        EXPECT(gbc.pc(), 0x5b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 008B
        gbc.setState(0x5b2b, 0x553e, 0xd3b0, 0x79f1, 0xc759, 0x8b3b, 0x0, 0x1);
        gbc.writeMem(0x5b2b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x553e);
        EXPECT(gbc.pc(), 0x5b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 008D
        gbc.setState(0xa714, 0x8b9f, 0x7040, 0xc54d, 0x39f7, 0x8110, 0x0, 0x1);
        gbc.writeMem(0xa714, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0xa716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa714), 0xcb);
        EXPECT(gbc.readMem(0xa715), 0xe4);
        // CB E4 008E
        gbc.setState(0x467c, 0x19d0, 0xc830, 0x5400, 0x9073, 0x4052, 0x0, 0x0);
        gbc.writeMem(0x467c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x19d0);
        EXPECT(gbc.pc(), 0x467e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 008F
        gbc.setState(0x4651, 0xff4c, 0x85f0, 0xec22, 0xb472, 0xb858, 0x1, 0x1);
        gbc.writeMem(0x4651, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xff4c);
        EXPECT(gbc.pc(), 0x4653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0090
        gbc.setState(0x9b0b, 0xd510, 0xd390, 0x299d, 0xeae, 0xa961, 0x1, 0x0);
        gbc.writeMem(0x9b0b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd510);
        EXPECT(gbc.pc(), 0x9b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0b), 0xcb);
        EXPECT(gbc.readMem(0x9b0c), 0xe4);
        // CB E4 0091
        gbc.setState(0x11f5, 0xffeb, 0x7600, 0x246e, 0x1e6d, 0x64cc, 0x0, 0x1);
        gbc.writeMem(0x11f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xffeb);
        EXPECT(gbc.pc(), 0x11f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0092
        gbc.setState(0x25b7, 0x82f0, 0x6d20, 0x5b10, 0x2b01, 0x31a5, 0x0, 0x1);
        gbc.writeMem(0x25b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x82f0);
        EXPECT(gbc.pc(), 0x25b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0093
        gbc.setState(0xbcb5, 0x370f, 0xc6d0, 0xe09d, 0x363b, 0x536f, 0x1, 0x0);
        gbc.writeMem(0xbcb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x370f);
        EXPECT(gbc.pc(), 0xbcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb5), 0xcb);
        EXPECT(gbc.readMem(0xbcb6), 0xe4);
        // CB E4 0094
        gbc.setState(0x65a, 0xdeeb, 0x7ba0, 0xb4ab, 0x83d4, 0xb51c, 0x0, 0x0);
        gbc.writeMem(0x65a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdeeb);
        EXPECT(gbc.pc(), 0x65c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0095
        gbc.setState(0x1e4a, 0xe5e4, 0x5880, 0xabe2, 0x97e6, 0x8551, 0x0, 0x1);
        gbc.writeMem(0x1e4a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe5e4);
        EXPECT(gbc.pc(), 0x1e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0096
        gbc.setState(0xa9ee, 0xa76, 0x6d90, 0x98c, 0x7717, 0x21f3, 0x0, 0x1);
        gbc.writeMem(0xa9ee, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa76);
        EXPECT(gbc.pc(), 0xa9f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ee), 0xcb);
        EXPECT(gbc.readMem(0xa9ef), 0xe4);
        // CB E4 0097
        gbc.setState(0x1a7a, 0x9961, 0x2550, 0xfa7b, 0x4f08, 0x8730, 0x0, 0x0);
        gbc.writeMem(0x1a7a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9961);
        EXPECT(gbc.pc(), 0x1a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0098
        gbc.setState(0x1373, 0xf86f, 0xdd80, 0x4d79, 0x7900, 0xcfc, 0x0, 0x1);
        gbc.writeMem(0x1373, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf86f);
        EXPECT(gbc.pc(), 0x1375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0099
        gbc.setState(0x7375, 0x96c9, 0x2650, 0x9982, 0x50d8, 0x72a9, 0x1, 0x1);
        gbc.writeMem(0x7375, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x96c9);
        EXPECT(gbc.pc(), 0x7377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 009A
        gbc.setState(0x8c2a, 0x78db, 0x4890, 0x3131, 0x49c7, 0xc561, 0x0, 0x1);
        gbc.writeMem(0x8c2a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x78db);
        EXPECT(gbc.pc(), 0x8c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2a), 0xcb);
        EXPECT(gbc.readMem(0x8c2b), 0xe4);
        // CB E4 009B
        gbc.setState(0x8457, 0xe4c0, 0x6180, 0x19c3, 0x3b8, 0xf097, 0x0, 0x1);
        gbc.writeMem(0x8457, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe4c0);
        EXPECT(gbc.pc(), 0x8459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8457), 0xcb);
        EXPECT(gbc.readMem(0x8458), 0xe4);
        // CB E4 009C
        gbc.setState(0xc8fc, 0xaa5d, 0x68c0, 0x293f, 0xd3cb, 0xfce7, 0x1, 0x0);
        gbc.writeMem(0xc8fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaa5d);
        EXPECT(gbc.pc(), 0xc8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8fc), 0xcb);
        EXPECT(gbc.readMem(0xc8fd), 0xe4);
        // CB E4 009D
        gbc.setState(0xd403, 0x98da, 0xa310, 0x5abd, 0x7a5, 0x9a0f, 0x0, 0x0);
        gbc.writeMem(0xd403, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x98da);
        EXPECT(gbc.pc(), 0xd405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd403), 0xcb);
        EXPECT(gbc.readMem(0xd404), 0xe4);
        // CB E4 009E
        gbc.setState(0xaf5d, 0xd983, 0xe0, 0xe588, 0xb6bd, 0x6ca0, 0x0, 0x1);
        gbc.writeMem(0xaf5d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd983);
        EXPECT(gbc.pc(), 0xaf5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf5d), 0xcb);
        EXPECT(gbc.readMem(0xaf5e), 0xe4);
        // CB E4 009F
        gbc.setState(0xef43, 0x4b46, 0x2880, 0x6e9a, 0x133c, 0xdeb8, 0x0, 0x1);
        gbc.writeMem(0xef43, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4b46);
        EXPECT(gbc.pc(), 0xef45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef43), 0xcb);
        EXPECT(gbc.readMem(0xef44), 0xe4);
        // CB E4 00A0
        gbc.setState(0x7e86, 0x5efd, 0xa140, 0xa889, 0xd5ac, 0xb9e4, 0x0, 0x0);
        gbc.writeMem(0x7e86, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5efd);
        EXPECT(gbc.pc(), 0x7e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00A1
        gbc.setState(0xcb70, 0x73fc, 0x33b0, 0xe0f5, 0x47ee, 0x19b8, 0x1, 0x0);
        gbc.writeMem(0xcb70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x73fc);
        EXPECT(gbc.pc(), 0xcb72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb70), 0xcb);
        EXPECT(gbc.readMem(0xcb71), 0xe4);
        // CB E4 00A2
        gbc.setState(0x731e, 0xb466, 0x2b0, 0x94e3, 0x2ced, 0x772d, 0x1, 0x0);
        gbc.writeMem(0x731e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb466);
        EXPECT(gbc.pc(), 0x7320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00A3
        gbc.setState(0x8f57, 0x27b5, 0x3810, 0x2f2a, 0xe1b, 0x6bd2, 0x1, 0x0);
        gbc.writeMem(0x8f57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x27b5);
        EXPECT(gbc.pc(), 0x8f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f57), 0xcb);
        EXPECT(gbc.readMem(0x8f58), 0xe4);
        // CB E4 00A4
        gbc.setState(0x2b72, 0x631b, 0x30f0, 0x2cc, 0xca49, 0x196, 0x1, 0x1);
        gbc.writeMem(0x2b72, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x631b);
        EXPECT(gbc.pc(), 0x2b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00A5
        gbc.setState(0xa0b4, 0xf08a, 0x4970, 0xdbbd, 0x2871, 0x2d96, 0x1, 0x1);
        gbc.writeMem(0xa0b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf08a);
        EXPECT(gbc.pc(), 0xa0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b4), 0xcb);
        EXPECT(gbc.readMem(0xa0b5), 0xe4);
        // CB E4 00A7
        gbc.setState(0xedd9, 0xac51, 0xf500, 0x340c, 0xf188, 0xfb5c, 0x0, 0x0);
        gbc.writeMem(0xedd9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xac51);
        EXPECT(gbc.pc(), 0xeddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd9), 0xcb);
        EXPECT(gbc.readMem(0xedda), 0xe4);
        // CB E4 00A8
        gbc.setState(0xadb, 0xb554, 0xf270, 0x65d, 0xabef, 0x79c8, 0x1, 0x1);
        gbc.writeMem(0xadb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb554);
        EXPECT(gbc.pc(), 0xadd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00A9
        gbc.setState(0xc76e, 0x3696, 0xd4d0, 0xc6f1, 0x9e3, 0x4df8, 0x0, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3696);
        EXPECT(gbc.pc(), 0xc770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76e), 0xcb);
        EXPECT(gbc.readMem(0xc76f), 0xe4);
        // CB E4 00AA
        gbc.setState(0x3f5c, 0x2860, 0xf3e0, 0xf255, 0xdb4f, 0x5316, 0x1, 0x0);
        gbc.writeMem(0x3f5c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2860);
        EXPECT(gbc.pc(), 0x3f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00AB
        gbc.setState(0xedcb, 0x69ce, 0x8a10, 0xaf14, 0xc257, 0x5135, 0x1, 0x0);
        gbc.writeMem(0xedcb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x69ce);
        EXPECT(gbc.pc(), 0xedcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedcb), 0xcb);
        EXPECT(gbc.readMem(0xedcc), 0xe4);
        // CB E4 00AC
        gbc.setState(0xdefe, 0xbe06, 0x7a0, 0xe26f, 0x10ab, 0xa86e, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbe06);
        EXPECT(gbc.pc(), 0xdf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdefe), 0xcb);
        EXPECT(gbc.readMem(0xdeff), 0xe4);
        // CB E4 00AD
        gbc.setState(0xadee, 0xecf0, 0x2170, 0xac6d, 0x53e1, 0xfd91, 0x0, 0x0);
        gbc.writeMem(0xadee, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xecf0);
        EXPECT(gbc.pc(), 0xadf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadee), 0xcb);
        EXPECT(gbc.readMem(0xadef), 0xe4);
        // CB E4 00AE
        gbc.setState(0x461b, 0x3cfb, 0xe9c0, 0xf43a, 0xe5f5, 0x141c, 0x0, 0x0);
        gbc.writeMem(0x461b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3cfb);
        EXPECT(gbc.pc(), 0x461d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00AF
        gbc.setState(0x15d1, 0x65c6, 0x7a0, 0xffa1, 0x5509, 0xbc4f, 0x0, 0x0);
        gbc.writeMem(0x15d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x65c6);
        EXPECT(gbc.pc(), 0x15d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00B0
        gbc.setState(0x9cef, 0x1833, 0x9e20, 0xe9f7, 0x29d2, 0xb094, 0x1, 0x1);
        gbc.writeMem(0x9cef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1833);
        EXPECT(gbc.pc(), 0x9cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cef), 0xcb);
        EXPECT(gbc.readMem(0x9cf0), 0xe4);
        // CB E4 00B1
        gbc.setState(0x2263, 0x38ba, 0x8f00, 0x4ba9, 0x22e8, 0x6cb6, 0x1, 0x0);
        gbc.writeMem(0x2263, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x38ba);
        EXPECT(gbc.pc(), 0x2265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00B3
        gbc.setState(0x6205, 0xcbf2, 0xb330, 0x8ff7, 0xe0df, 0xb337, 0x1, 0x1);
        gbc.writeMem(0x6205, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcbf2);
        EXPECT(gbc.pc(), 0x6207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00B4
        gbc.setState(0xe133, 0x40f8, 0xb980, 0xfad0, 0x3ffd, 0x29d8, 0x1, 0x0);
        gbc.writeMem(0xe133, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x40f8);
        EXPECT(gbc.pc(), 0xe135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe133), 0xcb);
        EXPECT(gbc.readMem(0xe134), 0xe4);
        // CB E4 00B5
        gbc.setState(0x44bb, 0x88ab, 0x9690, 0xb26f, 0x5783, 0x7856, 0x0, 0x0);
        gbc.writeMem(0x44bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x88ab);
        EXPECT(gbc.pc(), 0x44bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00B6
        gbc.setState(0x24c6, 0xd7bb, 0xd860, 0xeb82, 0x51ae, 0xe67e, 0x0, 0x1);
        gbc.writeMem(0x24c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd7bb);
        EXPECT(gbc.pc(), 0x24c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00B7
        gbc.setState(0x1ab0, 0x22ec, 0x5150, 0x4c26, 0x30b4, 0x2f84, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x22ec);
        EXPECT(gbc.pc(), 0x1ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00B8
        gbc.setState(0xec1c, 0xca94, 0xd100, 0x1d91, 0xcc95, 0xf8ce, 0x1, 0x1);
        gbc.writeMem(0xec1c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xca94);
        EXPECT(gbc.pc(), 0xec1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec1c), 0xcb);
        EXPECT(gbc.readMem(0xec1d), 0xe4);
        // CB E4 00B9
        gbc.setState(0xd226, 0xae84, 0x9b00, 0xef5e, 0x45c6, 0x2444, 0x1, 0x0);
        gbc.writeMem(0xd226, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xae84);
        EXPECT(gbc.pc(), 0xd228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd226), 0xcb);
        EXPECT(gbc.readMem(0xd227), 0xe4);
        // CB E4 00BA
        gbc.setState(0x32, 0x2f8d, 0xad80, 0xdc9d, 0x22f9, 0xfd5, 0x0, 0x1);
        gbc.writeMem(0x32, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2f8d);
        EXPECT(gbc.pc(), 0x34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00BB
        gbc.setState(0x7021, 0x9eba, 0x66b0, 0x8f4f, 0x1d62, 0x413a, 0x0, 0x0);
        gbc.writeMem(0x7021, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9eba);
        EXPECT(gbc.pc(), 0x7023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00BC
        gbc.setState(0xc7d1, 0x6411, 0x36b0, 0xd754, 0xc1cb, 0xd4d0, 0x1, 0x0);
        gbc.writeMem(0xc7d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6411);
        EXPECT(gbc.pc(), 0xc7d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d1), 0xcb);
        EXPECT(gbc.readMem(0xc7d2), 0xe4);
        // CB E4 00BD
        gbc.setState(0x398a, 0x1015, 0x3c20, 0x8d6f, 0x1a3, 0xa0c0, 0x0, 0x1);
        gbc.writeMem(0x398a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1015);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00BE
        gbc.setState(0xb8e0, 0x307e, 0xf710, 0xb56a, 0xa327, 0xc64, 0x0, 0x1);
        gbc.writeMem(0xb8e0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x307e);
        EXPECT(gbc.pc(), 0xb8e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e0), 0xcb);
        EXPECT(gbc.readMem(0xb8e1), 0xe4);
        // CB E4 00BF
        gbc.setState(0x98a2, 0x23d5, 0x63f0, 0x2330, 0x811a, 0xc8b5, 0x1, 0x0);
        gbc.writeMem(0x98a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x23d5);
        EXPECT(gbc.pc(), 0x98a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98a2), 0xcb);
        EXPECT(gbc.readMem(0x98a3), 0xe4);
        // CB E4 00C0
        gbc.setState(0x8f98, 0x8315, 0x9bc0, 0x5a08, 0x38ce, 0x14f9, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8315);
        EXPECT(gbc.pc(), 0x8f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f98), 0xcb);
        EXPECT(gbc.readMem(0x8f99), 0xe4);
        // CB E4 00C1
        gbc.setState(0xc0dd, 0x6834, 0xacc0, 0x5e63, 0x4434, 0xfb77, 0x1, 0x1);
        gbc.writeMem(0xc0dd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6834);
        EXPECT(gbc.pc(), 0xc0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0dd), 0xcb);
        EXPECT(gbc.readMem(0xc0de), 0xe4);
        // CB E4 00C2
        gbc.setState(0xdfb2, 0xa936, 0xf040, 0xe5d2, 0xe738, 0xe3ba, 0x1, 0x0);
        gbc.writeMem(0xdfb2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa936);
        EXPECT(gbc.pc(), 0xdfb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb2), 0xcb);
        EXPECT(gbc.readMem(0xdfb3), 0xe4);
        // CB E4 00C3
        gbc.setState(0x2910, 0xab05, 0x2a60, 0x7acd, 0x5866, 0xe055, 0x0, 0x0);
        gbc.writeMem(0x2910, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xab05);
        EXPECT(gbc.pc(), 0x2912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00C5
        gbc.setState(0x1f6f, 0xf832, 0x7830, 0xc405, 0xec27, 0x8d3b, 0x0, 0x0);
        gbc.writeMem(0x1f6f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf832);
        EXPECT(gbc.pc(), 0x1f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00C6
        gbc.setState(0x4a48, 0xf7d, 0x9ed0, 0x8f6c, 0xdd9a, 0x738, 0x1, 0x0);
        gbc.writeMem(0x4a48, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf7d);
        EXPECT(gbc.pc(), 0x4a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00C7
        gbc.setState(0xa184, 0xdae1, 0x6970, 0xd7a1, 0x8342, 0x6735, 0x1, 0x1);
        gbc.writeMem(0xa184, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdae1);
        EXPECT(gbc.pc(), 0xa186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa184), 0xcb);
        EXPECT(gbc.readMem(0xa185), 0xe4);
        // CB E4 00C8
        gbc.setState(0x9e7d, 0xa8e5, 0x8570, 0x366f, 0x4629, 0xa8c5, 0x0, 0x0);
        gbc.writeMem(0x9e7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa8e5);
        EXPECT(gbc.pc(), 0x9e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7d), 0xcb);
        EXPECT(gbc.readMem(0x9e7e), 0xe4);
        // CB E4 00C9
        gbc.setState(0x1183, 0x10fd, 0x9c50, 0xfe39, 0x9b4e, 0x114a, 0x0, 0x1);
        gbc.writeMem(0x1183, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x10fd);
        EXPECT(gbc.pc(), 0x1185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00CA
        gbc.setState(0xeb7d, 0x9760, 0x25d0, 0x43a7, 0x6897, 0x19ed, 0x1, 0x0);
        gbc.writeMem(0xeb7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9760);
        EXPECT(gbc.pc(), 0xeb7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7d), 0xcb);
        EXPECT(gbc.readMem(0xeb7e), 0xe4);
        // CB E4 00CB
        gbc.setState(0x4b05, 0xb4b7, 0x4ed0, 0xeb5d, 0x2967, 0xed87, 0x0, 0x1);
        gbc.writeMem(0x4b05, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb4b7);
        EXPECT(gbc.pc(), 0x4b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00CC
        gbc.setState(0x30e9, 0x4275, 0x1fb0, 0x1507, 0x33b5, 0x124f, 0x1, 0x1);
        gbc.writeMem(0x30e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4275);
        EXPECT(gbc.pc(), 0x30eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00CD
        gbc.setState(0x6105, 0x403f, 0x7b30, 0x5c21, 0x284c, 0x9700, 0x1, 0x0);
        gbc.writeMem(0x6105, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x403f);
        EXPECT(gbc.pc(), 0x6107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00CE
        gbc.setState(0xb483, 0xd91a, 0xf660, 0xd73c, 0x4043, 0xc8a9, 0x0, 0x0);
        gbc.writeMem(0xb483, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd91a);
        EXPECT(gbc.pc(), 0xb485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb483), 0xcb);
        EXPECT(gbc.readMem(0xb484), 0xe4);
        // CB E4 00CF
        gbc.setState(0xa81c, 0x381b, 0xa220, 0x8670, 0x4ff7, 0x7e44, 0x1, 0x1);
        gbc.writeMem(0xa81c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x381b);
        EXPECT(gbc.pc(), 0xa81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81c), 0xcb);
        EXPECT(gbc.readMem(0xa81d), 0xe4);
        // CB E4 00D0
        gbc.setState(0x2d97, 0x1d82, 0xdd40, 0x3914, 0x6d96, 0x825, 0x1, 0x0);
        gbc.writeMem(0x2d97, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1d82);
        EXPECT(gbc.pc(), 0x2d99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00D1
        gbc.setState(0x2b40, 0x4d42, 0x29e0, 0xbcd5, 0xe651, 0x27f2, 0x1, 0x1);
        gbc.writeMem(0x2b40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4d42);
        EXPECT(gbc.pc(), 0x2b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00D2
        gbc.setState(0x6f2f, 0x3925, 0xd1f0, 0xe994, 0xe8c6, 0x7342, 0x0, 0x0);
        gbc.writeMem(0x6f2f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3925);
        EXPECT(gbc.pc(), 0x6f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00D3
        gbc.setState(0x9eec, 0x8b9, 0x68f0, 0x8701, 0x6719, 0xb7b7, 0x0, 0x1);
        gbc.writeMem(0x9eec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8b9);
        EXPECT(gbc.pc(), 0x9eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eec), 0xcb);
        EXPECT(gbc.readMem(0x9eed), 0xe4);
        // CB E4 00D4
        gbc.setState(0x3368, 0x91e8, 0x1f90, 0x7d76, 0x1f91, 0xb0b8, 0x1, 0x1);
        gbc.writeMem(0x3368, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x91e8);
        EXPECT(gbc.pc(), 0x336a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00D5
        gbc.setState(0xe326, 0xcba1, 0xdaf0, 0x3cad, 0xfb95, 0xc4ef, 0x0, 0x0);
        gbc.writeMem(0xe326, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xcba1);
        EXPECT(gbc.pc(), 0xe328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe326), 0xcb);
        EXPECT(gbc.readMem(0xe327), 0xe4);
        // CB E4 00D7
        gbc.setState(0x3c42, 0x5a0e, 0xcf00, 0x4718, 0x7bfa, 0x72d9, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5a0e);
        EXPECT(gbc.pc(), 0x3c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00D8
        gbc.setState(0xb385, 0x156f, 0x5370, 0xabf, 0xdb48, 0x4955, 0x0, 0x0);
        gbc.writeMem(0xb385, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x156f);
        EXPECT(gbc.pc(), 0xb387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb385), 0xcb);
        EXPECT(gbc.readMem(0xb386), 0xe4);
        // CB E4 00D9
        gbc.setState(0xe443, 0xf50, 0x1220, 0xd444, 0xc276, 0x84d8, 0x0, 0x0);
        gbc.writeMem(0xe443, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf50);
        EXPECT(gbc.pc(), 0xe445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe443), 0xcb);
        EXPECT(gbc.readMem(0xe444), 0xe4);
        // CB E4 00DA
        gbc.setState(0x959a, 0x450a, 0xb450, 0x8fb9, 0xac9f, 0x4991, 0x0, 0x0);
        gbc.writeMem(0x959a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x450a);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959a), 0xcb);
        EXPECT(gbc.readMem(0x959b), 0xe4);
        // CB E4 00DB
        gbc.setState(0x54ea, 0x4601, 0xd7e0, 0xb2eb, 0x30a, 0x3d9a, 0x1, 0x0);
        gbc.writeMem(0x54ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4601);
        EXPECT(gbc.pc(), 0x54ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00DC
        gbc.setState(0x7707, 0xd14, 0x31a0, 0x4cff, 0xbf47, 0xdd97, 0x1, 0x0);
        gbc.writeMem(0x7707, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd14);
        EXPECT(gbc.pc(), 0x7709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00DD
        gbc.setState(0x1c0a, 0xb0dc, 0xe1b0, 0x6392, 0x4b7a, 0xc94, 0x0, 0x1);
        gbc.writeMem(0x1c0a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb0dc);
        EXPECT(gbc.pc(), 0x1c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00DE
        gbc.setState(0x3571, 0x5f8a, 0x1b90, 0x1719, 0xd558, 0x76ce, 0x0, 0x0);
        gbc.writeMem(0x3571, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5f8a);
        EXPECT(gbc.pc(), 0x3573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00DF
        gbc.setState(0xc58, 0xa8a8, 0x6c0, 0x3828, 0xcc96, 0xdb0d, 0x1, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa8a8);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00E0
        gbc.setState(0xe112, 0x268f, 0xf4d0, 0x81b0, 0xffe3, 0x7284, 0x1, 0x0);
        gbc.writeMem(0xe112, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x268f);
        EXPECT(gbc.pc(), 0xe114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe112), 0xcb);
        EXPECT(gbc.readMem(0xe113), 0xe4);
        // CB E4 00E1
        gbc.setState(0x7f26, 0x5704, 0x7640, 0xe039, 0xe8d8, 0x8d6b, 0x0, 0x1);
        gbc.writeMem(0x7f26, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5704);
        EXPECT(gbc.pc(), 0x7f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00E2
        gbc.setState(0x6c0f, 0xd663, 0xc500, 0x9d5e, 0x8065, 0xadc, 0x1, 0x0);
        gbc.writeMem(0x6c0f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd663);
        EXPECT(gbc.pc(), 0x6c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00E3
        gbc.setState(0xea8d, 0xe08c, 0x8510, 0x90c9, 0x8178, 0xe189, 0x0, 0x0);
        gbc.writeMem(0xea8d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe08c);
        EXPECT(gbc.pc(), 0xea8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8d), 0xcb);
        EXPECT(gbc.readMem(0xea8e), 0xe4);
        // CB E4 00E4
        gbc.setState(0xb047, 0x93f7, 0x360, 0xb089, 0x1685, 0xe2fd, 0x1, 0x0);
        gbc.writeMem(0xb047, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x93f7);
        EXPECT(gbc.pc(), 0xb049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb047), 0xcb);
        EXPECT(gbc.readMem(0xb048), 0xe4);
        // CB E4 00E5
        gbc.setState(0x42a8, 0x67cc, 0xaab0, 0x2889, 0xe5fd, 0x9ccc, 0x0, 0x1);
        gbc.writeMem(0x42a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x67cc);
        EXPECT(gbc.pc(), 0x42aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00E6
        gbc.setState(0x2b8f, 0x6bde, 0x6960, 0xd124, 0xd793, 0xaaff, 0x1, 0x1);
        gbc.writeMem(0x2b8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6bde);
        EXPECT(gbc.pc(), 0x2b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00E7
        gbc.setState(0x6a51, 0xf5e1, 0x3c90, 0xd951, 0x988c, 0x4170, 0x0, 0x0);
        gbc.writeMem(0x6a51, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf5e1);
        EXPECT(gbc.pc(), 0x6a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00E8
        gbc.setState(0xa4b6, 0xec7b, 0x8980, 0x72b4, 0x6d02, 0xcd0e, 0x0, 0x1);
        gbc.writeMem(0xa4b6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xec7b);
        EXPECT(gbc.pc(), 0xa4b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b6), 0xcb);
        EXPECT(gbc.readMem(0xa4b7), 0xe4);
        // CB E4 00E9
        gbc.setState(0x3de0, 0x49, 0x5350, 0xd29, 0x65f5, 0x5ef7, 0x1, 0x1);
        gbc.writeMem(0x3de0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x49);
        EXPECT(gbc.pc(), 0x3de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00EA
        gbc.setState(0x33b3, 0x1e8, 0x6cc0, 0x1a73, 0xc180, 0x9fe8, 0x1, 0x0);
        gbc.writeMem(0x33b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1e8);
        EXPECT(gbc.pc(), 0x33b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00EB
        gbc.setState(0x6a59, 0x406b, 0x9700, 0x69c6, 0x285a, 0x11db, 0x1, 0x0);
        gbc.writeMem(0x6a59, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x406b);
        EXPECT(gbc.pc(), 0x6a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00EC
        gbc.setState(0xa7cb, 0xacf5, 0xbc90, 0x35c4, 0xe70f, 0xb75b, 0x0, 0x1);
        gbc.writeMem(0xa7cb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xacf5);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cb), 0xcb);
        EXPECT(gbc.readMem(0xa7cc), 0xe4);
        // CB E4 00ED
        gbc.setState(0x5fa7, 0xfeef, 0x3a70, 0x3910, 0xb441, 0xb32f, 0x1, 0x1);
        gbc.writeMem(0x5fa7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfeef);
        EXPECT(gbc.pc(), 0x5fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00EE
        gbc.setState(0x5ec8, 0x9751, 0x1e40, 0xff2, 0x3a26, 0x4cd4, 0x0, 0x0);
        gbc.writeMem(0x5ec8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9751);
        EXPECT(gbc.pc(), 0x5eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00EF
        gbc.setState(0x68cd, 0x2b2a, 0x64f0, 0xb639, 0xbb16, 0xccc, 0x0, 0x1);
        gbc.writeMem(0x68cd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2b2a);
        EXPECT(gbc.pc(), 0x68cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 00F0
        gbc.setState(0xdf5a, 0xd0c4, 0xf260, 0xb4a1, 0x7121, 0x6a, 0x1, 0x0);
        gbc.writeMem(0xdf5a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd0c4);
        EXPECT(gbc.pc(), 0xdf5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf5a), 0xcb);
        EXPECT(gbc.readMem(0xdf5b), 0xe4);
        // CB E4 00F1
        gbc.setState(0x421e, 0xfa3a, 0x4500, 0xec12, 0xe50c, 0x594, 0x0, 0x1);
        gbc.writeMem(0x421e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfa3a);
        EXPECT(gbc.pc(), 0x4220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00F2
        gbc.setState(0x530b, 0x13ef, 0x4aa0, 0x86e6, 0x2afa, 0x4d9, 0x0, 0x0);
        gbc.writeMem(0x530b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x13ef);
        EXPECT(gbc.pc(), 0x530d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00F3
        gbc.setState(0x90f1, 0xe28f, 0x2700, 0x93bd, 0x1214, 0x75f3, 0x0, 0x0);
        gbc.writeMem(0x90f1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe28f);
        EXPECT(gbc.pc(), 0x90f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f1), 0xcb);
        EXPECT(gbc.readMem(0x90f2), 0xe4);
        // CB E4 00F5
        gbc.setState(0x9e4a, 0x7781, 0x34a0, 0x348e, 0x2c8, 0x7637, 0x0, 0x0);
        gbc.writeMem(0x9e4a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7781);
        EXPECT(gbc.pc(), 0x9e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4a), 0xcb);
        EXPECT(gbc.readMem(0x9e4b), 0xe4);
        // CB E4 00F6
        gbc.setState(0xd056, 0xfb5b, 0x26a0, 0xd515, 0x3c09, 0x6af2, 0x1, 0x0);
        gbc.writeMem(0xd056, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfb5b);
        EXPECT(gbc.pc(), 0xd058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd056), 0xcb);
        EXPECT(gbc.readMem(0xd057), 0xe4);
        // CB E4 00F7
        gbc.setState(0x4ec3, 0x6617, 0x9ea0, 0x5b03, 0xc1ff, 0x181, 0x1, 0x1);
        gbc.writeMem(0x4ec3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6617);
        EXPECT(gbc.pc(), 0x4ec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 00F8
        gbc.setState(0xb24a, 0xfdda, 0x86a0, 0x524, 0x74db, 0x66f2, 0x1, 0x1);
        gbc.writeMem(0xb24a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfdda);
        EXPECT(gbc.pc(), 0xb24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb24a), 0xcb);
        EXPECT(gbc.readMem(0xb24b), 0xe4);
        // CB E4 00F9
        gbc.setState(0xaefb, 0xc079, 0x48b0, 0xdec, 0xaf00, 0x9b1b, 0x0, 0x0);
        gbc.writeMem(0xaefb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc079);
        EXPECT(gbc.pc(), 0xaefd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaefb), 0xcb);
        EXPECT(gbc.readMem(0xaefc), 0xe4);
        // CB E4 00FB
        gbc.setState(0xbc18, 0x2bfa, 0xbc0, 0x34e6, 0x218a, 0x72a3, 0x0, 0x1);
        gbc.writeMem(0xbc18, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2bfa);
        EXPECT(gbc.pc(), 0xbc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc18), 0xcb);
        EXPECT(gbc.readMem(0xbc19), 0xe4);
        // CB E4 00FC
        gbc.setState(0xbc89, 0xbbcc, 0x3f00, 0x9e13, 0x88e2, 0xc619, 0x0, 0x0);
        gbc.writeMem(0xbc89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbbcc);
        EXPECT(gbc.pc(), 0xbc8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc89), 0xcb);
        EXPECT(gbc.readMem(0xbc8a), 0xe4);
        // CB E4 00FD
        gbc.setState(0xc9ca, 0x897b, 0xcac0, 0x1250, 0x30f6, 0x1760, 0x1, 0x0);
        gbc.writeMem(0xc9ca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x897b);
        EXPECT(gbc.pc(), 0xc9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ca), 0xcb);
        EXPECT(gbc.readMem(0xc9cb), 0xe4);
        // CB E4 00FE
        gbc.setState(0x87eb, 0xd71f, 0xd130, 0x1b3, 0xef06, 0x11c4, 0x1, 0x1);
        gbc.writeMem(0x87eb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd71f);
        EXPECT(gbc.pc(), 0x87ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87eb), 0xcb);
        EXPECT(gbc.readMem(0x87ec), 0xe4);
        // CB E4 00FF
        gbc.setState(0x4ae4, 0x1dbc, 0x4b60, 0x6435, 0xd31f, 0x963b, 0x0, 0x0);
        gbc.writeMem(0x4ae4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1dbc);
        EXPECT(gbc.pc(), 0x4ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0100
        gbc.setState(0xaf85, 0x46f, 0x46a0, 0xe67f, 0xad5a, 0xfdee, 0x1, 0x0);
        gbc.writeMem(0xaf85, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x46f);
        EXPECT(gbc.pc(), 0xaf87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf85), 0xcb);
        EXPECT(gbc.readMem(0xaf86), 0xe4);
        // CB E4 0101
        gbc.setState(0x21ed, 0x68db, 0x35c0, 0x8d68, 0x6bc6, 0x1d92, 0x1, 0x1);
        gbc.writeMem(0x21ed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x68db);
        EXPECT(gbc.pc(), 0x21ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0102
        gbc.setState(0x7c6f, 0x8dbb, 0xd440, 0x227d, 0xce94, 0xe54c, 0x1, 0x1);
        gbc.writeMem(0x7c6f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8dbb);
        EXPECT(gbc.pc(), 0x7c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0103
        gbc.setState(0x6c57, 0x1396, 0x4d20, 0x8420, 0x2617, 0xaede, 0x1, 0x1);
        gbc.writeMem(0x6c57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1396);
        EXPECT(gbc.pc(), 0x6c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0104
        gbc.setState(0x8130, 0x8c35, 0x1720, 0xea36, 0x1147, 0xd6d4, 0x0, 0x1);
        gbc.writeMem(0x8130, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8c35);
        EXPECT(gbc.pc(), 0x8132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8130), 0xcb);
        EXPECT(gbc.readMem(0x8131), 0xe4);
        // CB E4 0105
        gbc.setState(0xd4be, 0xb719, 0xaac0, 0x537b, 0x37d9, 0xc0bf, 0x0, 0x0);
        gbc.writeMem(0xd4be, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb719);
        EXPECT(gbc.pc(), 0xd4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4be), 0xcb);
        EXPECT(gbc.readMem(0xd4bf), 0xe4);
        // CB E4 0106
        gbc.setState(0x17d, 0x19ba, 0x1b40, 0x3ff6, 0xb2e7, 0xda91, 0x0, 0x1);
        gbc.writeMem(0x17d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x19ba);
        EXPECT(gbc.pc(), 0x17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0107
        gbc.setState(0x5011, 0x6afa, 0x9130, 0x632f, 0xcf75, 0x666c, 0x0, 0x0);
        gbc.writeMem(0x5011, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6afa);
        EXPECT(gbc.pc(), 0x5013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0108
        gbc.setState(0x837b, 0xb25e, 0xc710, 0x7545, 0x6254, 0x1de9, 0x1, 0x1);
        gbc.writeMem(0x837b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb25e);
        EXPECT(gbc.pc(), 0x837d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837b), 0xcb);
        EXPECT(gbc.readMem(0x837c), 0xe4);
        // CB E4 0109
        gbc.setState(0x85f7, 0xd203, 0xc330, 0x524, 0x68aa, 0x3e06, 0x0, 0x0);
        gbc.writeMem(0x85f7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd203);
        EXPECT(gbc.pc(), 0x85f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f7), 0xcb);
        EXPECT(gbc.readMem(0x85f8), 0xe4);
        // CB E4 010A
        gbc.setState(0x5beb, 0x8e3, 0xfcd0, 0x3f23, 0xb695, 0x88ff, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8e3);
        EXPECT(gbc.pc(), 0x5bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 010B
        gbc.setState(0x954e, 0x6ed, 0xf290, 0xcf41, 0xfbe6, 0x82a3, 0x1, 0x0);
        gbc.writeMem(0x954e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6ed);
        EXPECT(gbc.pc(), 0x9550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954e), 0xcb);
        EXPECT(gbc.readMem(0x954f), 0xe4);
        // CB E4 010C
        gbc.setState(0x20bd, 0x2230, 0xadf0, 0x8ed9, 0x8696, 0x968, 0x0, 0x1);
        gbc.writeMem(0x20bd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2230);
        EXPECT(gbc.pc(), 0x20bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 010D
        gbc.setState(0x68b9, 0x6708, 0xb9a0, 0xecb0, 0x23b7, 0x3766, 0x1, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6708);
        EXPECT(gbc.pc(), 0x68bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 010E
        gbc.setState(0x287c, 0x2fc7, 0xab50, 0xe48b, 0x5e41, 0x5d41, 0x1, 0x1);
        gbc.writeMem(0x287c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2fc7);
        EXPECT(gbc.pc(), 0x287e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 010F
        gbc.setState(0xa414, 0x6f4b, 0xc4b0, 0xf95c, 0x3709, 0x6036, 0x0, 0x0);
        gbc.writeMem(0xa414, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6f4b);
        EXPECT(gbc.pc(), 0xa416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa414), 0xcb);
        EXPECT(gbc.readMem(0xa415), 0xe4);
        // CB E4 0110
        gbc.setState(0xdc82, 0x77cb, 0x9430, 0x1d06, 0xde42, 0xed1, 0x0, 0x1);
        gbc.writeMem(0xdc82, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x77cb);
        EXPECT(gbc.pc(), 0xdc84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc82), 0xcb);
        EXPECT(gbc.readMem(0xdc83), 0xe4);
        // CB E4 0111
        gbc.setState(0x2fb5, 0x2ddc, 0xccf0, 0xe6ad, 0xb200, 0x8243, 0x0, 0x1);
        gbc.writeMem(0x2fb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2ddc);
        EXPECT(gbc.pc(), 0x2fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0112
        gbc.setState(0x830d, 0x7ff1, 0x5aa0, 0x56cf, 0x6688, 0xfbe, 0x0, 0x1);
        gbc.writeMem(0x830d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7ff1);
        EXPECT(gbc.pc(), 0x830f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830d), 0xcb);
        EXPECT(gbc.readMem(0x830e), 0xe4);
        // CB E4 0113
        gbc.setState(0x10da, 0x3ff1, 0xef80, 0x83d, 0xb2c6, 0xccb4, 0x0, 0x1);
        gbc.writeMem(0x10da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3ff1);
        EXPECT(gbc.pc(), 0x10dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0114
        gbc.setState(0xa392, 0x93b0, 0x850, 0xac86, 0x4240, 0xcdff, 0x1, 0x0);
        gbc.writeMem(0xa392, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x93b0);
        EXPECT(gbc.pc(), 0xa394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa392), 0xcb);
        EXPECT(gbc.readMem(0xa393), 0xe4);
        // CB E4 0115
        gbc.setState(0x8af2, 0xd1ef, 0xcf60, 0xa829, 0xee32, 0x207f, 0x1, 0x1);
        gbc.writeMem(0x8af2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd1ef);
        EXPECT(gbc.pc(), 0x8af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af2), 0xcb);
        EXPECT(gbc.readMem(0x8af3), 0xe4);
        // CB E4 0116
        gbc.setState(0xc41d, 0x86c9, 0x3530, 0x3b71, 0xb396, 0xcc52, 0x0, 0x0);
        gbc.writeMem(0xc41d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x86c9);
        EXPECT(gbc.pc(), 0xc41f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41d), 0xcb);
        EXPECT(gbc.readMem(0xc41e), 0xe4);
        // CB E4 0117
        gbc.setState(0x105f, 0x1bf6, 0xe0a0, 0xc053, 0x8470, 0xc68f, 0x0, 0x0);
        gbc.writeMem(0x105f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1bf6);
        EXPECT(gbc.pc(), 0x1061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0118
        gbc.setState(0x4617, 0xc227, 0x4940, 0xa5ae, 0x76cc, 0x1e98, 0x0, 0x0);
        gbc.writeMem(0x4617, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc227);
        EXPECT(gbc.pc(), 0x4619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0119
        gbc.setState(0x300, 0x3b07, 0x9d40, 0x5ad, 0x6efc, 0xe690, 0x0, 0x1);
        gbc.writeMem(0x300, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3b07);
        EXPECT(gbc.pc(), 0x302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 011A
        gbc.setState(0x91da, 0xc0b4, 0xd8e0, 0x3e89, 0xaf1e, 0x47e7, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc0b4);
        EXPECT(gbc.pc(), 0x91dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91da), 0xcb);
        EXPECT(gbc.readMem(0x91db), 0xe4);
        // CB E4 011B
        gbc.setState(0xabb7, 0x831a, 0x84c0, 0xbdf0, 0xef42, 0x4786, 0x0, 0x1);
        gbc.writeMem(0xabb7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x831a);
        EXPECT(gbc.pc(), 0xabb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb7), 0xcb);
        EXPECT(gbc.readMem(0xabb8), 0xe4);
        // CB E4 011C
        gbc.setState(0x3079, 0xacfd, 0x80e0, 0xf369, 0x648c, 0x25b4, 0x1, 0x0);
        gbc.writeMem(0x3079, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xacfd);
        EXPECT(gbc.pc(), 0x307b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 011E
        gbc.setState(0xeb0c, 0x3897, 0xb420, 0xa1f9, 0xcc83, 0xbe5f, 0x0, 0x1);
        gbc.writeMem(0xeb0c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3897);
        EXPECT(gbc.pc(), 0xeb0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0c), 0xcb);
        EXPECT(gbc.readMem(0xeb0d), 0xe4);
        // CB E4 011F
        gbc.setState(0xae5, 0xe192, 0xd7c0, 0x528f, 0x4792, 0x79ac, 0x0, 0x0);
        gbc.writeMem(0xae5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe192);
        EXPECT(gbc.pc(), 0xae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0120
        gbc.setState(0x1db1, 0x50c7, 0xc7e0, 0xd839, 0x2eb7, 0xcabc, 0x1, 0x1);
        gbc.writeMem(0x1db1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x50c7);
        EXPECT(gbc.pc(), 0x1db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0121
        gbc.setState(0x6f6a, 0x9f42, 0xf5c0, 0x8ecb, 0xd56d, 0xa0d0, 0x0, 0x0);
        gbc.writeMem(0x6f6a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9f42);
        EXPECT(gbc.pc(), 0x6f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0122
        gbc.setState(0x5e49, 0x855, 0x2e10, 0xad76, 0xc200, 0x9b9f, 0x0, 0x1);
        gbc.writeMem(0x5e49, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x855);
        EXPECT(gbc.pc(), 0x5e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0123
        gbc.setState(0x5373, 0x642a, 0xaf0, 0x9ede, 0x12ee, 0x70c0, 0x1, 0x0);
        gbc.writeMem(0x5373, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x642a);
        EXPECT(gbc.pc(), 0x5375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0124
        gbc.setState(0x6a45, 0xb86d, 0x19e0, 0x913e, 0x7eb7, 0xd362, 0x0, 0x1);
        gbc.writeMem(0x6a45, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb86d);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0125
        gbc.setState(0x1b6b, 0x8f1f, 0xc360, 0x3824, 0x8ace, 0x1c63, 0x0, 0x1);
        gbc.writeMem(0x1b6b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8f1f);
        EXPECT(gbc.pc(), 0x1b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0126
        gbc.setState(0x3806, 0x5668, 0x1110, 0x93a, 0xd14b, 0x1ad6, 0x0, 0x0);
        gbc.writeMem(0x3806, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5668);
        EXPECT(gbc.pc(), 0x3808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0127
        gbc.setState(0xc55d, 0x877b, 0x95a0, 0x4dc4, 0x91dc, 0x2dfa, 0x1, 0x1);
        gbc.writeMem(0xc55d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x877b);
        EXPECT(gbc.pc(), 0xc55f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55d), 0xcb);
        EXPECT(gbc.readMem(0xc55e), 0xe4);
        // CB E4 0128
        gbc.setState(0xecc7, 0x265a, 0x8c90, 0x2041, 0xe6dc, 0x9e09, 0x0, 0x0);
        gbc.writeMem(0xecc7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x265a);
        EXPECT(gbc.pc(), 0xecc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc7), 0xcb);
        EXPECT(gbc.readMem(0xecc8), 0xe4);
        // CB E4 0129
        gbc.setState(0x968c, 0x9cd2, 0xfa00, 0x6819, 0x43ea, 0xd6b3, 0x0, 0x0);
        gbc.writeMem(0x968c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9cd2);
        EXPECT(gbc.pc(), 0x968e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968c), 0xcb);
        EXPECT(gbc.readMem(0x968d), 0xe4);
        // CB E4 012A
        gbc.setState(0x18f8, 0x1586, 0x4310, 0xd3d9, 0x49c0, 0x9aa, 0x0, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1586);
        EXPECT(gbc.pc(), 0x18fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 012B
        gbc.setState(0x4811, 0xf312, 0x2450, 0xb09d, 0xa163, 0x9739, 0x0, 0x0);
        gbc.writeMem(0x4811, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf312);
        EXPECT(gbc.pc(), 0x4813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 012C
        gbc.setState(0x5191, 0x8216, 0x8120, 0x384a, 0x774d, 0x7216, 0x1, 0x0);
        gbc.writeMem(0x5191, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8216);
        EXPECT(gbc.pc(), 0x5193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 012D
        gbc.setState(0xe9d7, 0x9859, 0x7cd0, 0xcf46, 0x3c55, 0x7b6c, 0x1, 0x1);
        gbc.writeMem(0xe9d7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9859);
        EXPECT(gbc.pc(), 0xe9d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d7), 0xcb);
        EXPECT(gbc.readMem(0xe9d8), 0xe4);
        // CB E4 012E
        gbc.setState(0x3cc3, 0xde4a, 0xee60, 0x5e9e, 0x9668, 0xd24e, 0x0, 0x0);
        gbc.writeMem(0x3cc3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xde4a);
        EXPECT(gbc.pc(), 0x3cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 012F
        gbc.setState(0x5dca, 0x2e26, 0xc6f0, 0xde8b, 0xeefa, 0x2e73, 0x0, 0x1);
        gbc.writeMem(0x5dca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2e26);
        EXPECT(gbc.pc(), 0x5dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0130
        gbc.setState(0xeec3, 0x5de, 0x39c0, 0x393c, 0x4007, 0x6544, 0x1, 0x0);
        gbc.writeMem(0xeec3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5de);
        EXPECT(gbc.pc(), 0xeec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec3), 0xcb);
        EXPECT(gbc.readMem(0xeec4), 0xe4);
        // CB E4 0131
        gbc.setState(0x9692, 0x3c91, 0xe140, 0xd497, 0xed5, 0xabd0, 0x0, 0x1);
        gbc.writeMem(0x9692, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3c91);
        EXPECT(gbc.pc(), 0x9694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9692), 0xcb);
        EXPECT(gbc.readMem(0x9693), 0xe4);
        // CB E4 0132
        gbc.setState(0x79c8, 0x542d, 0x8f70, 0xf83c, 0xa3b5, 0x2998, 0x0, 0x1);
        gbc.writeMem(0x79c8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x542d);
        EXPECT(gbc.pc(), 0x79ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0133
        gbc.setState(0x619d, 0x2eba, 0xf20, 0x6d97, 0x896f, 0xfa31, 0x0, 0x0);
        gbc.writeMem(0x619d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2eba);
        EXPECT(gbc.pc(), 0x619f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0134
        gbc.setState(0x3942, 0xafd7, 0x28c0, 0xb529, 0x490a, 0x3de5, 0x1, 0x1);
        gbc.writeMem(0x3942, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xafd7);
        EXPECT(gbc.pc(), 0x3944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0135
        gbc.setState(0xae0, 0x14ce, 0x6c50, 0x4bd6, 0x4e21, 0x2d94, 0x1, 0x0);
        gbc.writeMem(0xae0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x14ce);
        EXPECT(gbc.pc(), 0xae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0136
        gbc.setState(0xcd5c, 0x54fd, 0x5b50, 0xd931, 0xa4e1, 0xc2f8, 0x0, 0x0);
        gbc.writeMem(0xcd5c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x54fd);
        EXPECT(gbc.pc(), 0xcd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5c), 0xcb);
        EXPECT(gbc.readMem(0xcd5d), 0xe4);
        // CB E4 0137
        gbc.setState(0xb719, 0x6e22, 0xf9e0, 0x8dc, 0x1278, 0x10a5, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6e22);
        EXPECT(gbc.pc(), 0xb71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb719), 0xcb);
        EXPECT(gbc.readMem(0xb71a), 0xe4);
        // CB E4 0139
        gbc.setState(0xdd35, 0x263c, 0xb100, 0xf02, 0x1107, 0x43f, 0x1, 0x1);
        gbc.writeMem(0xdd35, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x263c);
        EXPECT(gbc.pc(), 0xdd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd35), 0xcb);
        EXPECT(gbc.readMem(0xdd36), 0xe4);
        // CB E4 013A
        gbc.setState(0xbff9, 0x8606, 0x51a0, 0x2532, 0x638b, 0xc083, 0x1, 0x1);
        gbc.writeMem(0xbff9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8606);
        EXPECT(gbc.pc(), 0xbffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff9), 0xcb);
        EXPECT(gbc.readMem(0xbffa), 0xe4);
        // CB E4 013B
        gbc.setState(0x119a, 0x19ce, 0x6bd0, 0x9a50, 0x4b83, 0x3283, 0x0, 0x1);
        gbc.writeMem(0x119a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x19ce);
        EXPECT(gbc.pc(), 0x119c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 013C
        gbc.setState(0xea7d, 0xd160, 0x4fa0, 0x614e, 0xe26b, 0x7987, 0x0, 0x0);
        gbc.writeMem(0xea7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd160);
        EXPECT(gbc.pc(), 0xea7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea7d), 0xcb);
        EXPECT(gbc.readMem(0xea7e), 0xe4);
        // CB E4 013D
        gbc.setState(0x947a, 0xeeef, 0xe380, 0xd92d, 0x4dbd, 0x2bdf, 0x1, 0x1);
        gbc.writeMem(0x947a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xeeef);
        EXPECT(gbc.pc(), 0x947c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947a), 0xcb);
        EXPECT(gbc.readMem(0x947b), 0xe4);
        // CB E4 013E
        gbc.setState(0x23a1, 0xb4d1, 0xd950, 0x373e, 0x5287, 0x706f, 0x0, 0x0);
        gbc.writeMem(0x23a1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb4d1);
        EXPECT(gbc.pc(), 0x23a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 013F
        gbc.setState(0x1d07, 0x2cce, 0x830, 0x61d8, 0x1f2c, 0x2d33, 0x1, 0x0);
        gbc.writeMem(0x1d07, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2cce);
        EXPECT(gbc.pc(), 0x1d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0140
        gbc.setState(0x8042, 0xfac9, 0x3350, 0x7c23, 0x74c2, 0x5e15, 0x1, 0x0);
        gbc.writeMem(0x8042, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfac9);
        EXPECT(gbc.pc(), 0x8044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8042), 0xcb);
        EXPECT(gbc.readMem(0x8043), 0xe4);
        // CB E4 0141
        gbc.setState(0x30ff, 0x2097, 0xe920, 0xe7d5, 0x3889, 0x8876, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2097);
        EXPECT(gbc.pc(), 0x3101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0143
        gbc.setState(0xa416, 0x4a6c, 0x7490, 0xe7cb, 0x209b, 0x56b6, 0x0, 0x1);
        gbc.writeMem(0xa416, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4a6c);
        EXPECT(gbc.pc(), 0xa418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa416), 0xcb);
        EXPECT(gbc.readMem(0xa417), 0xe4);
        // CB E4 0144
        gbc.setState(0xa6a7, 0xf611, 0x2750, 0xc649, 0x6802, 0x561, 0x0, 0x0);
        gbc.writeMem(0xa6a7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf611);
        EXPECT(gbc.pc(), 0xa6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a7), 0xcb);
        EXPECT(gbc.readMem(0xa6a8), 0xe4);
        // CB E4 0145
        gbc.setState(0xe741, 0x390c, 0xf3f0, 0x8a40, 0x3e16, 0xfff0, 0x0, 0x1);
        gbc.writeMem(0xe741, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x390c);
        EXPECT(gbc.pc(), 0xe743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe741), 0xcb);
        EXPECT(gbc.readMem(0xe742), 0xe4);
        // CB E4 0146
        gbc.setState(0xd745, 0x86b2, 0xae80, 0x9800, 0x94bf, 0x5921, 0x1, 0x0);
        gbc.writeMem(0xd745, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x86b2);
        EXPECT(gbc.pc(), 0xd747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd745), 0xcb);
        EXPECT(gbc.readMem(0xd746), 0xe4);
        // CB E4 0147
        gbc.setState(0xb56a, 0x35e7, 0x78e0, 0xaaa, 0x6b2d, 0x809a, 0x0, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0xe4);
        // CB E4 0148
        gbc.setState(0xd17b, 0xe5ac, 0xf5a0, 0xe91b, 0xd58e, 0x7eca, 0x1, 0x0);
        gbc.writeMem(0xd17b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe5ac);
        EXPECT(gbc.pc(), 0xd17d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd17b), 0xcb);
        EXPECT(gbc.readMem(0xd17c), 0xe4);
        // CB E4 0149
        gbc.setState(0x720a, 0x5961, 0x5d40, 0xf195, 0x5003, 0xaa9a, 0x0, 0x1);
        gbc.writeMem(0x720a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5961);
        EXPECT(gbc.pc(), 0x720c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 014A
        gbc.setState(0x518a, 0x7e0b, 0x88d0, 0xa4e9, 0x55c7, 0xf755, 0x0, 0x0);
        gbc.writeMem(0x518a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7e0b);
        EXPECT(gbc.pc(), 0x518c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 014B
        gbc.setState(0x598e, 0xa6a2, 0x70f0, 0xebfd, 0x64ce, 0x33bc, 0x0, 0x1);
        gbc.writeMem(0x598e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa6a2);
        EXPECT(gbc.pc(), 0x5990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 014C
        gbc.setState(0xbba9, 0x953a, 0xffc0, 0x74e5, 0x4b9a, 0x5518, 0x1, 0x1);
        gbc.writeMem(0xbba9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x953a);
        EXPECT(gbc.pc(), 0xbbab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba9), 0xcb);
        EXPECT(gbc.readMem(0xbbaa), 0xe4);
        // CB E4 014E
        gbc.setState(0xba1e, 0x7f0c, 0xff90, 0xe41f, 0x21b9, 0x65aa, 0x0, 0x1);
        gbc.writeMem(0xba1e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7f0c);
        EXPECT(gbc.pc(), 0xba20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1e), 0xcb);
        EXPECT(gbc.readMem(0xba1f), 0xe4);
        // CB E4 014F
        gbc.setState(0xc324, 0x311c, 0xeb60, 0x8939, 0x2dc, 0x1fa3, 0x0, 0x0);
        gbc.writeMem(0xc324, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x311c);
        EXPECT(gbc.pc(), 0xc326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc324), 0xcb);
        EXPECT(gbc.readMem(0xc325), 0xe4);
        // CB E4 0150
        gbc.setState(0x4eb3, 0x1e34, 0x83b0, 0xe08, 0x463, 0xcd91, 0x0, 0x0);
        gbc.writeMem(0x4eb3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1e34);
        EXPECT(gbc.pc(), 0x4eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0151
        gbc.setState(0xd5a7, 0xc5ce, 0x7ff0, 0xae48, 0xded6, 0x68b3, 0x1, 0x1);
        gbc.writeMem(0xd5a7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc5ce);
        EXPECT(gbc.pc(), 0xd5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a7), 0xcb);
        EXPECT(gbc.readMem(0xd5a8), 0xe4);
        // CB E4 0152
        gbc.setState(0xd705, 0x5a99, 0x7aa0, 0xe31e, 0x5c07, 0x5dd7, 0x0, 0x1);
        gbc.writeMem(0xd705, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5a99);
        EXPECT(gbc.pc(), 0xd707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd705), 0xcb);
        EXPECT(gbc.readMem(0xd706), 0xe4);
        // CB E4 0153
        gbc.setState(0xac7f, 0x58a8, 0x3680, 0x937e, 0xc626, 0x4512, 0x0, 0x1);
        gbc.writeMem(0xac7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x58a8);
        EXPECT(gbc.pc(), 0xac81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7f), 0xcb);
        EXPECT(gbc.readMem(0xac80), 0xe4);
        // CB E4 0154
        gbc.setState(0x55d0, 0xa6b4, 0x5c50, 0xeb01, 0x5927, 0xf136, 0x0, 0x1);
        gbc.writeMem(0x55d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa6b4);
        EXPECT(gbc.pc(), 0x55d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0155
        gbc.setState(0x89e8, 0x6158, 0x4980, 0x33f0, 0xfd43, 0x97e0, 0x1, 0x0);
        gbc.writeMem(0x89e8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6158);
        EXPECT(gbc.pc(), 0x89ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e8), 0xcb);
        EXPECT(gbc.readMem(0x89e9), 0xe4);
        // CB E4 0156
        gbc.setState(0x555f, 0x10af, 0x5730, 0xde93, 0x823f, 0xe4ff, 0x0, 0x1);
        gbc.writeMem(0x555f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x10af);
        EXPECT(gbc.pc(), 0x5561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0157
        gbc.setState(0x476e, 0x7f70, 0x50, 0x9a67, 0x4f7d, 0xe061, 0x0, 0x0);
        gbc.writeMem(0x476e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7f70);
        EXPECT(gbc.pc(), 0x4770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0158
        gbc.setState(0x602f, 0x6233, 0x9b90, 0x1bb0, 0x1400, 0x969c, 0x1, 0x0);
        gbc.writeMem(0x602f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6233);
        EXPECT(gbc.pc(), 0x6031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0159
        gbc.setState(0x7828, 0x766c, 0xb470, 0xb6f0, 0xc840, 0x2f0f, 0x1, 0x1);
        gbc.writeMem(0x7828, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x766c);
        EXPECT(gbc.pc(), 0x782a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 015B
        gbc.setState(0x9dd6, 0xf09f, 0x99c0, 0x162b, 0x4f4f, 0x501a, 0x1, 0x0);
        gbc.writeMem(0x9dd6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf09f);
        EXPECT(gbc.pc(), 0x9dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd6), 0xcb);
        EXPECT(gbc.readMem(0x9dd7), 0xe4);
        // CB E4 015C
        gbc.setState(0x6d5d, 0xa723, 0x7e50, 0xe683, 0x5c0f, 0xf291, 0x0, 0x0);
        gbc.writeMem(0x6d5d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa723);
        EXPECT(gbc.pc(), 0x6d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 015D
        gbc.setState(0xd6df, 0x4988, 0x7770, 0x5381, 0x1e40, 0x5b51, 0x1, 0x0);
        gbc.writeMem(0xd6df, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4988);
        EXPECT(gbc.pc(), 0xd6e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6df), 0xcb);
        EXPECT(gbc.readMem(0xd6e0), 0xe4);
        // CB E4 015F
        gbc.setState(0xba7d, 0xc094, 0x26a0, 0x5ba7, 0x533f, 0xb935, 0x1, 0x1);
        gbc.writeMem(0xba7d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc094);
        EXPECT(gbc.pc(), 0xba7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7d), 0xcb);
        EXPECT(gbc.readMem(0xba7e), 0xe4);
        // CB E4 0160
        gbc.setState(0x42a9, 0x6d33, 0x96e0, 0x23aa, 0x10f9, 0x9e6c, 0x1, 0x0);
        gbc.writeMem(0x42a9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6d33);
        EXPECT(gbc.pc(), 0x42ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0162
        gbc.setState(0xe5f9, 0x4a41, 0x2b0, 0x184, 0x673c, 0xd2e8, 0x0, 0x0);
        gbc.writeMem(0xe5f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4a41);
        EXPECT(gbc.pc(), 0xe5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f9), 0xcb);
        EXPECT(gbc.readMem(0xe5fa), 0xe4);
        // CB E4 0163
        gbc.setState(0x9847, 0xe685, 0x1080, 0x629d, 0x85e8, 0x8811, 0x1, 0x0);
        gbc.writeMem(0x9847, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe685);
        EXPECT(gbc.pc(), 0x9849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9847), 0xcb);
        EXPECT(gbc.readMem(0x9848), 0xe4);
        // CB E4 0164
        gbc.setState(0xed67, 0xa3ba, 0x3d20, 0xe52e, 0xf3db, 0x76c5, 0x1, 0x1);
        gbc.writeMem(0xed67, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa3ba);
        EXPECT(gbc.pc(), 0xed69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed67), 0xcb);
        EXPECT(gbc.readMem(0xed68), 0xe4);
        // CB E4 0165
        gbc.setState(0xc41e, 0xc479, 0x64f0, 0x30ec, 0xbd22, 0x8a57, 0x1, 0x0);
        gbc.writeMem(0xc41e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc479);
        EXPECT(gbc.pc(), 0xc420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41e), 0xcb);
        EXPECT(gbc.readMem(0xc41f), 0xe4);
        // CB E4 0166
        gbc.setState(0xc516, 0x9bf3, 0x6f00, 0x56f4, 0xc2ea, 0xd188, 0x1, 0x0);
        gbc.writeMem(0xc516, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9bf3);
        EXPECT(gbc.pc(), 0xc518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc516), 0xcb);
        EXPECT(gbc.readMem(0xc517), 0xe4);
        // CB E4 0167
        gbc.setState(0x57cc, 0x4893, 0x6750, 0x88f9, 0xf8ed, 0x6929, 0x1, 0x0);
        gbc.writeMem(0x57cc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4893);
        EXPECT(gbc.pc(), 0x57ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0168
        gbc.setState(0x8dd2, 0xfb14, 0xb930, 0x8b8e, 0xaef1, 0x432b, 0x0, 0x1);
        gbc.writeMem(0x8dd2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfb14);
        EXPECT(gbc.pc(), 0x8dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd2), 0xcb);
        EXPECT(gbc.readMem(0x8dd3), 0xe4);
        // CB E4 0169
        gbc.setState(0x30a8, 0x2ee7, 0x2d80, 0xe96f, 0xe2ce, 0x3322, 0x1, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2ee7);
        EXPECT(gbc.pc(), 0x30aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 016A
        gbc.setState(0xcf57, 0x7729, 0x9480, 0xdbf7, 0x8262, 0x3d03, 0x0, 0x0);
        gbc.writeMem(0xcf57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7729);
        EXPECT(gbc.pc(), 0xcf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf57), 0xcb);
        EXPECT(gbc.readMem(0xcf58), 0xe4);
        // CB E4 016B
        gbc.setState(0xb859, 0xb52d, 0x4dc0, 0x3dd3, 0xa295, 0x23da, 0x0, 0x0);
        gbc.writeMem(0xb859, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb52d);
        EXPECT(gbc.pc(), 0xb85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb859), 0xcb);
        EXPECT(gbc.readMem(0xb85a), 0xe4);
        // CB E4 016D
        gbc.setState(0x76d6, 0xc97e, 0x3ca0, 0x687, 0xba05, 0x7128, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc97e);
        EXPECT(gbc.pc(), 0x76d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 016E
        gbc.setState(0x3bdf, 0x3e61, 0x20c0, 0xd9a2, 0xb7f5, 0xa8e0, 0x1, 0x1);
        gbc.writeMem(0x3bdf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3e61);
        EXPECT(gbc.pc(), 0x3be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 016F
        gbc.setState(0xd75f, 0x6b0b, 0xd810, 0xf066, 0xb820, 0xa5d, 0x1, 0x1);
        gbc.writeMem(0xd75f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6b0b);
        EXPECT(gbc.pc(), 0xd761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75f), 0xcb);
        EXPECT(gbc.readMem(0xd760), 0xe4);
        // CB E4 0170
        gbc.setState(0x8486, 0x9bb1, 0x8fb0, 0x1891, 0x7fd1, 0xbcf2, 0x0, 0x0);
        gbc.writeMem(0x8486, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9bb1);
        EXPECT(gbc.pc(), 0x8488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8486), 0xcb);
        EXPECT(gbc.readMem(0x8487), 0xe4);
        // CB E4 0171
        gbc.setState(0x39f3, 0xbba6, 0x87c0, 0xd9a0, 0x46fe, 0x4619, 0x0, 0x1);
        gbc.writeMem(0x39f3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbba6);
        EXPECT(gbc.pc(), 0x39f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0172
        gbc.setState(0x1e, 0x4d03, 0x2cc0, 0x883e, 0xd900, 0x811a, 0x1, 0x1);
        gbc.writeMem(0x1e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0x20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0173
        gbc.setState(0x7fb7, 0x10b1, 0xb5c0, 0xd346, 0x8363, 0x63b3, 0x0, 0x0);
        gbc.writeMem(0x7fb7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x10b1);
        EXPECT(gbc.pc(), 0x7fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0174
        gbc.setState(0xdb39, 0x46b2, 0xff70, 0x9b92, 0x90c7, 0x3683, 0x0, 0x0);
        gbc.writeMem(0xdb39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x46b2);
        EXPECT(gbc.pc(), 0xdb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb39), 0xcb);
        EXPECT(gbc.readMem(0xdb3a), 0xe4);
        // CB E4 0175
        gbc.setState(0x393e, 0x92e1, 0x5f40, 0xe9d4, 0x989e, 0x708a, 0x1, 0x1);
        gbc.writeMem(0x393e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x3940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0177
        gbc.setState(0x97c, 0x5c12, 0x8440, 0x6033, 0xd8e2, 0x73e8, 0x1, 0x0);
        gbc.writeMem(0x97c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5c12);
        EXPECT(gbc.pc(), 0x97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0178
        gbc.setState(0xc99c, 0xeee1, 0x3340, 0xc0cb, 0x8690, 0xb1ed, 0x1, 0x1);
        gbc.writeMem(0xc99c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xeee1);
        EXPECT(gbc.pc(), 0xc99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99c), 0xcb);
        EXPECT(gbc.readMem(0xc99d), 0xe4);
        // CB E4 0179
        gbc.setState(0x7afa, 0xdf8e, 0x70a0, 0xa4f4, 0x7141, 0xe4a2, 0x1, 0x0);
        gbc.writeMem(0x7afa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xdf8e);
        EXPECT(gbc.pc(), 0x7afc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 017A
        gbc.setState(0x8900, 0x1960, 0x8e50, 0x158f, 0x1ac8, 0x8d84, 0x1, 0x0);
        gbc.writeMem(0x8900, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1960);
        EXPECT(gbc.pc(), 0x8902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8900), 0xcb);
        EXPECT(gbc.readMem(0x8901), 0xe4);
        // CB E4 017B
        gbc.setState(0xdd70, 0x960c, 0x75f0, 0x561, 0xd689, 0xe91a, 0x0, 0x1);
        gbc.writeMem(0xdd70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x960c);
        EXPECT(gbc.pc(), 0xdd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd70), 0xcb);
        EXPECT(gbc.readMem(0xdd71), 0xe4);
        // CB E4 017C
        gbc.setState(0xe8ce, 0x336e, 0xfe0, 0x301d, 0xa03, 0xf6f4, 0x1, 0x0);
        gbc.writeMem(0xe8ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x336e);
        EXPECT(gbc.pc(), 0xe8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ce), 0xcb);
        EXPECT(gbc.readMem(0xe8cf), 0xe4);
        // CB E4 017D
        gbc.setState(0x2464, 0xc622, 0x1080, 0xde8b, 0x44af, 0xeb9, 0x0, 0x1);
        gbc.writeMem(0x2464, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc622);
        EXPECT(gbc.pc(), 0x2466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 017E
        gbc.setState(0x4445, 0xc134, 0x5b70, 0x2e17, 0x7816, 0xf90b, 0x1, 0x1);
        gbc.writeMem(0x4445, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc134);
        EXPECT(gbc.pc(), 0x4447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 017F
        gbc.setState(0x5805, 0x5b08, 0x8f90, 0xfaf8, 0xb3de, 0x6cc6, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5b08);
        EXPECT(gbc.pc(), 0x5807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0180
        gbc.setState(0x377c, 0xdb77, 0xada0, 0xd0cd, 0x596, 0x320, 0x1, 0x0);
        gbc.writeMem(0x377c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdb77);
        EXPECT(gbc.pc(), 0x377e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0182
        gbc.setState(0xec47, 0x49e4, 0x6390, 0xb700, 0x4bcb, 0xf89e, 0x1, 0x1);
        gbc.writeMem(0xec47, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x49e4);
        EXPECT(gbc.pc(), 0xec49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec47), 0xcb);
        EXPECT(gbc.readMem(0xec48), 0xe4);
        // CB E4 0183
        gbc.setState(0xef8f, 0x26fd, 0xc190, 0x6959, 0x9625, 0x7470, 0x0, 0x0);
        gbc.writeMem(0xef8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x26fd);
        EXPECT(gbc.pc(), 0xef91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8f), 0xcb);
        EXPECT(gbc.readMem(0xef90), 0xe4);
        // CB E4 0184
        gbc.setState(0xaeaa, 0x4c84, 0x68e0, 0x3085, 0xe72, 0x15a8, 0x0, 0x1);
        gbc.writeMem(0xaeaa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4c84);
        EXPECT(gbc.pc(), 0xaeac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeaa), 0xcb);
        EXPECT(gbc.readMem(0xaeab), 0xe4);
        // CB E4 0185
        gbc.setState(0x5754, 0x37b1, 0x7620, 0xcd79, 0xa6ac, 0x128, 0x0, 0x1);
        gbc.writeMem(0x5754, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x37b1);
        EXPECT(gbc.pc(), 0x5756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0186
        gbc.setState(0x28f8, 0x4c84, 0x7fc0, 0xea0f, 0x458b, 0x9499, 0x1, 0x0);
        gbc.writeMem(0x28f8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4c84);
        EXPECT(gbc.pc(), 0x28fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0187
        gbc.setState(0xa7af, 0xb1cf, 0xd970, 0xad29, 0xa595, 0xc204, 0x0, 0x1);
        gbc.writeMem(0xa7af, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb1cf);
        EXPECT(gbc.pc(), 0xa7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7af), 0xcb);
        EXPECT(gbc.readMem(0xa7b0), 0xe4);
        // CB E4 0188
        gbc.setState(0x76d0, 0x6dd6, 0x86d0, 0xa7ef, 0x614b, 0xe2d7, 0x0, 0x0);
        gbc.writeMem(0x76d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6dd6);
        EXPECT(gbc.pc(), 0x76d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0189
        gbc.setState(0x4ac7, 0xed4c, 0xbf60, 0xe212, 0x15ee, 0x8064, 0x0, 0x0);
        gbc.writeMem(0x4ac7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xed4c);
        EXPECT(gbc.pc(), 0x4ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 018A
        gbc.setState(0x769b, 0x1c22, 0x7240, 0x215d, 0x4a23, 0x73cf, 0x1, 0x0);
        gbc.writeMem(0x769b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1c22);
        EXPECT(gbc.pc(), 0x769d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 018B
        gbc.setState(0xe393, 0x1729, 0xb540, 0x5d1d, 0x8c83, 0x6f1a, 0x1, 0x1);
        gbc.writeMem(0xe393, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1729);
        EXPECT(gbc.pc(), 0xe395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe393), 0xcb);
        EXPECT(gbc.readMem(0xe394), 0xe4);
        // CB E4 018C
        gbc.setState(0x1aab, 0x190a, 0xad60, 0xc82e, 0xb975, 0x89cb, 0x0, 0x0);
        gbc.writeMem(0x1aab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x190a);
        EXPECT(gbc.pc(), 0x1aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 018D
        gbc.setState(0x83fb, 0xd9cc, 0x1fb0, 0x9e92, 0x296f, 0x6da5, 0x0, 0x1);
        gbc.writeMem(0x83fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd9cc);
        EXPECT(gbc.pc(), 0x83fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fb), 0xcb);
        EXPECT(gbc.readMem(0x83fc), 0xe4);
        // CB E4 018E
        gbc.setState(0x8404, 0x389a, 0x2350, 0x9f5b, 0xd615, 0x51, 0x0, 0x0);
        gbc.writeMem(0x8404, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x389a);
        EXPECT(gbc.pc(), 0x8406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8404), 0xcb);
        EXPECT(gbc.readMem(0x8405), 0xe4);
        // CB E4 018F
        gbc.setState(0x6458, 0x585a, 0xdd80, 0x5986, 0x7ea1, 0xe8b3, 0x1, 0x1);
        gbc.writeMem(0x6458, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x585a);
        EXPECT(gbc.pc(), 0x645a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0190
        gbc.setState(0x916a, 0x4e74, 0xad30, 0xce6f, 0x896, 0x454, 0x1, 0x1);
        gbc.writeMem(0x916a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4e74);
        EXPECT(gbc.pc(), 0x916c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916a), 0xcb);
        EXPECT(gbc.readMem(0x916b), 0xe4);
        // CB E4 0191
        gbc.setState(0x96d1, 0xabf7, 0xbbb0, 0xca8e, 0x1db4, 0x1676, 0x0, 0x1);
        gbc.writeMem(0x96d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xabf7);
        EXPECT(gbc.pc(), 0x96d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d1), 0xcb);
        EXPECT(gbc.readMem(0x96d2), 0xe4);
        // CB E4 0192
        gbc.setState(0xcb2b, 0x5143, 0x47a0, 0xa719, 0x4658, 0xb968, 0x1, 0x1);
        gbc.writeMem(0xcb2b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5143);
        EXPECT(gbc.pc(), 0xcb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb2b), 0xcb);
        EXPECT(gbc.readMem(0xcb2c), 0xe4);
        // CB E4 0193
        gbc.setState(0xab02, 0xbf8d, 0x3de0, 0x5405, 0x2d86, 0x1118, 0x1, 0x1);
        gbc.writeMem(0xab02, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbf8d);
        EXPECT(gbc.pc(), 0xab04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab02), 0xcb);
        EXPECT(gbc.readMem(0xab03), 0xe4);
        // CB E4 0194
        gbc.setState(0x9cca, 0xb341, 0xb7a0, 0x6c8d, 0x4e2e, 0x5cfe, 0x0, 0x0);
        gbc.writeMem(0x9cca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb341);
        EXPECT(gbc.pc(), 0x9ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cca), 0xcb);
        EXPECT(gbc.readMem(0x9ccb), 0xe4);
        // CB E4 0195
        gbc.setState(0x8199, 0x420b, 0x4800, 0x3617, 0x7c6e, 0xedac, 0x1, 0x1);
        gbc.writeMem(0x8199, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x420b);
        EXPECT(gbc.pc(), 0x819b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8199), 0xcb);
        EXPECT(gbc.readMem(0x819a), 0xe4);
        // CB E4 0196
        gbc.setState(0xea8f, 0x4406, 0xbc60, 0x844, 0x2f45, 0xcaa1, 0x0, 0x0);
        gbc.writeMem(0xea8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4406);
        EXPECT(gbc.pc(), 0xea91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8f), 0xcb);
        EXPECT(gbc.readMem(0xea90), 0xe4);
        // CB E4 0198
        gbc.setState(0x742a, 0x7ee1, 0x6bf0, 0x525c, 0x4d1e, 0x9158, 0x0, 0x1);
        gbc.writeMem(0x742a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7ee1);
        EXPECT(gbc.pc(), 0x742c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0199
        gbc.setState(0x92ff, 0x2334, 0x68f0, 0x7a97, 0x407, 0x50f5, 0x1, 0x1);
        gbc.writeMem(0x92ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2334);
        EXPECT(gbc.pc(), 0x9301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ff), 0xcb);
        EXPECT(gbc.readMem(0x9300), 0xe4);
        // CB E4 019A
        gbc.setState(0x412, 0xa447, 0x4fe0, 0x51f6, 0x8c93, 0xc3ce, 0x0, 0x0);
        gbc.writeMem(0x412, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa447);
        EXPECT(gbc.pc(), 0x414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 019B
        gbc.setState(0x81b7, 0x3710, 0xd2f0, 0x32d7, 0xc6c1, 0x303e, 0x1, 0x1);
        gbc.writeMem(0x81b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3710);
        EXPECT(gbc.pc(), 0x81b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b7), 0xcb);
        EXPECT(gbc.readMem(0x81b8), 0xe4);
        // CB E4 019C
        gbc.setState(0x380a, 0x5db, 0x5fa0, 0xb831, 0x525a, 0xe16, 0x0, 0x0);
        gbc.writeMem(0x380a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5db);
        EXPECT(gbc.pc(), 0x380c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 019D
        gbc.setState(0xd9c3, 0x9c4b, 0x1490, 0x44e, 0x746d, 0xe0ed, 0x1, 0x0);
        gbc.writeMem(0xd9c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9c4b);
        EXPECT(gbc.pc(), 0xd9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c3), 0xcb);
        EXPECT(gbc.readMem(0xd9c4), 0xe4);
        // CB E4 019E
        gbc.setState(0x19de, 0x4b0, 0x3e80, 0x462, 0x7339, 0xdb94, 0x1, 0x1);
        gbc.writeMem(0x19de, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4b0);
        EXPECT(gbc.pc(), 0x19e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 019F
        gbc.setState(0xc40, 0x8fec, 0x6780, 0xd02d, 0x5c0c, 0x29b5, 0x0, 0x1);
        gbc.writeMem(0xc40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8fec);
        EXPECT(gbc.pc(), 0xc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01A0
        gbc.setState(0xe1bb, 0x3c68, 0x4230, 0xe879, 0x55ea, 0xc75f, 0x0, 0x1);
        gbc.writeMem(0xe1bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3c68);
        EXPECT(gbc.pc(), 0xe1bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1bb), 0xcb);
        EXPECT(gbc.readMem(0xe1bc), 0xe4);
        // CB E4 01A1
        gbc.setState(0x68e0, 0x2e73, 0xb410, 0xe514, 0xbf24, 0x8152, 0x0, 0x0);
        gbc.writeMem(0x68e0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2e73);
        EXPECT(gbc.pc(), 0x68e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01A2
        gbc.setState(0x9924, 0xfaf7, 0x9080, 0x80b9, 0x1510, 0xc7f9, 0x0, 0x0);
        gbc.writeMem(0x9924, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfaf7);
        EXPECT(gbc.pc(), 0x9926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9924), 0xcb);
        EXPECT(gbc.readMem(0x9925), 0xe4);
        // CB E4 01A3
        gbc.setState(0xe263, 0x3bee, 0x3790, 0x2acf, 0x7d2b, 0x8879, 0x0, 0x0);
        gbc.writeMem(0xe263, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3bee);
        EXPECT(gbc.pc(), 0xe265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe263), 0xcb);
        EXPECT(gbc.readMem(0xe264), 0xe4);
        // CB E4 01A4
        gbc.setState(0xcc76, 0x4ace, 0xb440, 0x21df, 0xe6d4, 0xb40d, 0x0, 0x0);
        gbc.writeMem(0xcc76, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4ace);
        EXPECT(gbc.pc(), 0xcc78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc76), 0xcb);
        EXPECT(gbc.readMem(0xcc77), 0xe4);
        // CB E4 01A5
        gbc.setState(0xbcff, 0xbf6a, 0x2550, 0x3d21, 0x20af, 0x1df7, 0x1, 0x0);
        gbc.writeMem(0xbcff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbf6a);
        EXPECT(gbc.pc(), 0xbd01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcff), 0xcb);
        EXPECT(gbc.readMem(0xbd00), 0xe4);
        // CB E4 01A6
        gbc.setState(0x70ba, 0xc77a, 0xe320, 0xc484, 0xc26a, 0x69b2, 0x0, 0x0);
        gbc.writeMem(0x70ba, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc77a);
        EXPECT(gbc.pc(), 0x70bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01A7
        gbc.setState(0x3784, 0xf42d, 0x7720, 0x9364, 0x12bd, 0xb7ed, 0x0, 0x1);
        gbc.writeMem(0x3784, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf42d);
        EXPECT(gbc.pc(), 0x3786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01A8
        gbc.setState(0x8b94, 0xae5e, 0x6850, 0x83d5, 0x4a24, 0xb4f1, 0x1, 0x1);
        gbc.writeMem(0x8b94, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xae5e);
        EXPECT(gbc.pc(), 0x8b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b94), 0xcb);
        EXPECT(gbc.readMem(0x8b95), 0xe4);
        // CB E4 01A9
        gbc.setState(0x9b5f, 0x5bd5, 0x5780, 0x4c0, 0xa5aa, 0xf60b, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5bd5);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0xe4);
        // CB E4 01AA
        gbc.setState(0x491c, 0x605d, 0x1ba0, 0x830a, 0x3d03, 0x4047, 0x1, 0x0);
        gbc.writeMem(0x491c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x605d);
        EXPECT(gbc.pc(), 0x491e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01AB
        gbc.setState(0x567a, 0x66e5, 0xfd10, 0x3a9, 0x1a85, 0x253c, 0x1, 0x1);
        gbc.writeMem(0x567a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x66e5);
        EXPECT(gbc.pc(), 0x567c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01AC
        gbc.setState(0x659, 0x1059, 0xb7e0, 0x721f, 0x7a1b, 0x134e, 0x1, 0x1);
        gbc.writeMem(0x659, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1059);
        EXPECT(gbc.pc(), 0x65b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01AD
        gbc.setState(0x52cc, 0xbf88, 0x99d0, 0xbf7d, 0x11cb, 0xc0a3, 0x0, 0x1);
        gbc.writeMem(0x52cc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbf88);
        EXPECT(gbc.pc(), 0x52ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01AE
        gbc.setState(0x442, 0xb3e6, 0xb6b0, 0xe269, 0x16e4, 0x94b0, 0x0, 0x1);
        gbc.writeMem(0x442, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb3e6);
        EXPECT(gbc.pc(), 0x444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01AF
        gbc.setState(0x4f35, 0x867c, 0xf160, 0xf91, 0x2a9f, 0x63dc, 0x1, 0x1);
        gbc.writeMem(0x4f35, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x867c);
        EXPECT(gbc.pc(), 0x4f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01B0
        gbc.setState(0x5f60, 0x14d6, 0xfe40, 0x9138, 0xe42e, 0xa95d, 0x1, 0x1);
        gbc.writeMem(0x5f60, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x14d6);
        EXPECT(gbc.pc(), 0x5f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01B1
        gbc.setState(0xef39, 0xc448, 0xb940, 0x44a4, 0x9fcc, 0x339d, 0x0, 0x1);
        gbc.writeMem(0xef39, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc448);
        EXPECT(gbc.pc(), 0xef3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef39), 0xcb);
        EXPECT(gbc.readMem(0xef3a), 0xe4);
        // CB E4 01B3
        gbc.setState(0x2416, 0x43f5, 0x51a0, 0xfddc, 0x8f55, 0x8542, 0x0, 0x1);
        gbc.writeMem(0x2416, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x43f5);
        EXPECT(gbc.pc(), 0x2418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01B4
        gbc.setState(0xa10, 0xda33, 0x650, 0x5ffc, 0x28c7, 0x4010, 0x0, 0x0);
        gbc.writeMem(0xa10, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xda33);
        EXPECT(gbc.pc(), 0xa12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01B5
        gbc.setState(0xcfe7, 0x1407, 0x9650, 0xa2a4, 0x3a56, 0xc81a, 0x0, 0x0);
        gbc.writeMem(0xcfe7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1407);
        EXPECT(gbc.pc(), 0xcfe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe7), 0xcb);
        EXPECT(gbc.readMem(0xcfe8), 0xe4);
        // CB E4 01B6
        gbc.setState(0xcae1, 0xca4c, 0xe860, 0x6248, 0xac51, 0xb666, 0x1, 0x0);
        gbc.writeMem(0xcae1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xca4c);
        EXPECT(gbc.pc(), 0xcae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae1), 0xcb);
        EXPECT(gbc.readMem(0xcae2), 0xe4);
        // CB E4 01B7
        gbc.setState(0x9192, 0xadb4, 0x1050, 0xe31, 0x3132, 0xf0a8, 0x0, 0x1);
        gbc.writeMem(0x9192, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xadb4);
        EXPECT(gbc.pc(), 0x9194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9192), 0xcb);
        EXPECT(gbc.readMem(0x9193), 0xe4);
        // CB E4 01B8
        gbc.setState(0x8cda, 0x7701, 0x4cb0, 0x3640, 0x78fe, 0x379f, 0x1, 0x0);
        gbc.writeMem(0x8cda, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7701);
        EXPECT(gbc.pc(), 0x8cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cda), 0xcb);
        EXPECT(gbc.readMem(0x8cdb), 0xe4);
        // CB E4 01B9
        gbc.setState(0xc371, 0xd169, 0x61f0, 0x96ac, 0x6e54, 0xac0a, 0x1, 0x0);
        gbc.writeMem(0xc371, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd169);
        EXPECT(gbc.pc(), 0xc373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc371), 0xcb);
        EXPECT(gbc.readMem(0xc372), 0xe4);
        // CB E4 01BA
        gbc.setState(0x173d, 0xf0d6, 0x5060, 0xd8c3, 0x74fa, 0xa338, 0x1, 0x0);
        gbc.writeMem(0x173d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf0d6);
        EXPECT(gbc.pc(), 0x173f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01BB
        gbc.setState(0x8fe1, 0x4eb1, 0xaa40, 0x7a77, 0xef8e, 0xaf6d, 0x1, 0x0);
        gbc.writeMem(0x8fe1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4eb1);
        EXPECT(gbc.pc(), 0x8fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe1), 0xcb);
        EXPECT(gbc.readMem(0x8fe2), 0xe4);
        // CB E4 01BC
        gbc.setState(0xce66, 0x779f, 0x8d40, 0xe78d, 0xa196, 0x44af, 0x1, 0x1);
        gbc.writeMem(0xce66, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x779f);
        EXPECT(gbc.pc(), 0xce68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce66), 0xcb);
        EXPECT(gbc.readMem(0xce67), 0xe4);
        // CB E4 01BD
        gbc.setState(0x3113, 0xa689, 0xc40, 0x5d0, 0xb58d, 0x1692, 0x1, 0x0);
        gbc.writeMem(0x3113, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa689);
        EXPECT(gbc.pc(), 0x3115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01BE
        gbc.setState(0x5d67, 0xb92d, 0xd370, 0xdc36, 0xcdab, 0x5a7c, 0x0, 0x1);
        gbc.writeMem(0x5d67, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb92d);
        EXPECT(gbc.pc(), 0x5d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01BF
        gbc.setState(0x22bf, 0x72ca, 0xbe70, 0x77c4, 0xeb08, 0x3ffe, 0x0, 0x0);
        gbc.writeMem(0x22bf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x72ca);
        EXPECT(gbc.pc(), 0x22c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01C0
        gbc.setState(0xaf3f, 0xbffd, 0x4070, 0x6e8c, 0x2f4, 0x7792, 0x0, 0x0);
        gbc.writeMem(0xaf3f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbffd);
        EXPECT(gbc.pc(), 0xaf41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3f), 0xcb);
        EXPECT(gbc.readMem(0xaf40), 0xe4);
        // CB E4 01C1
        gbc.setState(0xad05, 0x1020, 0xa0, 0x5315, 0xfac2, 0x3aa, 0x0, 0x1);
        gbc.writeMem(0xad05, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1020);
        EXPECT(gbc.pc(), 0xad07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad05), 0xcb);
        EXPECT(gbc.readMem(0xad06), 0xe4);
        // CB E4 01C2
        gbc.setState(0x88fc, 0xeab6, 0xed30, 0xca6f, 0xd0fc, 0xdbb9, 0x1, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xeab6);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88fc), 0xcb);
        EXPECT(gbc.readMem(0x88fd), 0xe4);
        // CB E4 01C3
        gbc.setState(0x7af7, 0xa035, 0xd4f0, 0xde7a, 0x4d14, 0x4a2, 0x1, 0x0);
        gbc.writeMem(0x7af7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa035);
        EXPECT(gbc.pc(), 0x7af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01C4
        gbc.setState(0xaa5f, 0x99cd, 0x3d80, 0xe5e6, 0x2060, 0xd7b0, 0x0, 0x1);
        gbc.writeMem(0xaa5f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x99cd);
        EXPECT(gbc.pc(), 0xaa61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5f), 0xcb);
        EXPECT(gbc.readMem(0xaa60), 0xe4);
        // CB E4 01C5
        gbc.setState(0x8714, 0x4062, 0x9060, 0x392, 0xe391, 0xc49d, 0x1, 0x0);
        gbc.writeMem(0x8714, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4062);
        EXPECT(gbc.pc(), 0x8716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8714), 0xcb);
        EXPECT(gbc.readMem(0x8715), 0xe4);
        // CB E4 01C6
        gbc.setState(0xaea6, 0x51e2, 0x2d30, 0x11c, 0x7ee, 0xf9d7, 0x0, 0x1);
        gbc.writeMem(0xaea6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x51e2);
        EXPECT(gbc.pc(), 0xaea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaea6), 0xcb);
        EXPECT(gbc.readMem(0xaea7), 0xe4);
        // CB E4 01C7
        gbc.setState(0xac41, 0xea31, 0xca10, 0x796f, 0x4deb, 0x8e2d, 0x0, 0x0);
        gbc.writeMem(0xac41, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xea31);
        EXPECT(gbc.pc(), 0xac43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac41), 0xcb);
        EXPECT(gbc.readMem(0xac42), 0xe4);
        // CB E4 01C8
        gbc.setState(0x45b1, 0x27a8, 0xba80, 0x93ea, 0x400f, 0xaa79, 0x0, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x27a8);
        EXPECT(gbc.pc(), 0x45b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01C9
        gbc.setState(0x3817, 0x1f7f, 0x25d0, 0xe7e1, 0x9e8, 0xca75, 0x0, 0x1);
        gbc.writeMem(0x3817, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1f7f);
        EXPECT(gbc.pc(), 0x3819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01CA
        gbc.setState(0xa10c, 0x2e2d, 0x18d0, 0x9b01, 0xeaae, 0xb1fb, 0x0, 0x1);
        gbc.writeMem(0xa10c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2e2d);
        EXPECT(gbc.pc(), 0xa10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10c), 0xcb);
        EXPECT(gbc.readMem(0xa10d), 0xe4);
        // CB E4 01CB
        gbc.setState(0x6493, 0xb51a, 0xdf50, 0x9038, 0xaad, 0xcdd7, 0x1, 0x1);
        gbc.writeMem(0x6493, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb51a);
        EXPECT(gbc.pc(), 0x6495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01CC
        gbc.setState(0x6e2d, 0x43a7, 0x7db0, 0xee5e, 0xdf17, 0xc1f8, 0x0, 0x1);
        gbc.writeMem(0x6e2d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x43a7);
        EXPECT(gbc.pc(), 0x6e2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01CD
        gbc.setState(0xa182, 0x751a, 0xf420, 0x91a8, 0x3000, 0xc233, 0x1, 0x0);
        gbc.writeMem(0xa182, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x751a);
        EXPECT(gbc.pc(), 0xa184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa182), 0xcb);
        EXPECT(gbc.readMem(0xa183), 0xe4);
        // CB E4 01CE
        gbc.setState(0x8f70, 0x7613, 0xe9f0, 0x1a2, 0x73b3, 0x8b4b, 0x1, 0x0);
        gbc.writeMem(0x8f70, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7613);
        EXPECT(gbc.pc(), 0x8f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f70), 0xcb);
        EXPECT(gbc.readMem(0x8f71), 0xe4);
        // CB E4 01CF
        gbc.setState(0xdfc5, 0x61fe, 0x7770, 0x6bfe, 0x47c4, 0x6295, 0x0, 0x1);
        gbc.writeMem(0xdfc5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x61fe);
        EXPECT(gbc.pc(), 0xdfc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc5), 0xcb);
        EXPECT(gbc.readMem(0xdfc6), 0xe4);
        // CB E4 01D1
        gbc.setState(0x590, 0xe871, 0xbf50, 0x3d36, 0x82ad, 0x3f32, 0x1, 0x0);
        gbc.writeMem(0x590, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe871);
        EXPECT(gbc.pc(), 0x592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01D2
        gbc.setState(0x734d, 0xbd2a, 0x23d0, 0xbab3, 0x48ab, 0xf01, 0x1, 0x0);
        gbc.writeMem(0x734d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbd2a);
        EXPECT(gbc.pc(), 0x734f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01D3
        gbc.setState(0xdf87, 0x9bff, 0xef70, 0x2125, 0x346d, 0x473e, 0x1, 0x1);
        gbc.writeMem(0xdf87, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9bff);
        EXPECT(gbc.pc(), 0xdf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf87), 0xcb);
        EXPECT(gbc.readMem(0xdf88), 0xe4);
        // CB E4 01D4
        gbc.setState(0xc448, 0x897d, 0xa8c0, 0x8aa8, 0xdec4, 0xe470, 0x1, 0x0);
        gbc.writeMem(0xc448, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x897d);
        EXPECT(gbc.pc(), 0xc44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc448), 0xcb);
        EXPECT(gbc.readMem(0xc449), 0xe4);
        // CB E4 01D5
        gbc.setState(0xdad2, 0x3cc9, 0x7f20, 0x962c, 0x9744, 0xfc66, 0x1, 0x1);
        gbc.writeMem(0xdad2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3cc9);
        EXPECT(gbc.pc(), 0xdad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad2), 0xcb);
        EXPECT(gbc.readMem(0xdad3), 0xe4);
        // CB E4 01D6
        gbc.setState(0xda19, 0xdb68, 0x6a50, 0x74f3, 0x2e3f, 0x9c0f, 0x0, 0x0);
        gbc.writeMem(0xda19, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdb68);
        EXPECT(gbc.pc(), 0xda1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda19), 0xcb);
        EXPECT(gbc.readMem(0xda1a), 0xe4);
        // CB E4 01D7
        gbc.setState(0x6a82, 0x1013, 0x4bc0, 0xab70, 0x8295, 0xdc06, 0x0, 0x0);
        gbc.writeMem(0x6a82, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1013);
        EXPECT(gbc.pc(), 0x6a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01D8
        gbc.setState(0xbf89, 0x6769, 0x7880, 0xac0c, 0x5801, 0x18f9, 0x1, 0x1);
        gbc.writeMem(0xbf89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6769);
        EXPECT(gbc.pc(), 0xbf8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf89), 0xcb);
        EXPECT(gbc.readMem(0xbf8a), 0xe4);
        // CB E4 01D9
        gbc.setState(0x2a5d, 0xa539, 0x3720, 0x2592, 0x3126, 0xdab9, 0x0, 0x1);
        gbc.writeMem(0x2a5d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa539);
        EXPECT(gbc.pc(), 0x2a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01DA
        gbc.setState(0x74ab, 0x9613, 0xa010, 0x1321, 0x1806, 0x4dad, 0x0, 0x1);
        gbc.writeMem(0x74ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9613);
        EXPECT(gbc.pc(), 0x74ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01DB
        gbc.setState(0xa83d, 0x372f, 0x640, 0x4b3e, 0x415a, 0xca07, 0x1, 0x0);
        gbc.writeMem(0xa83d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x372f);
        EXPECT(gbc.pc(), 0xa83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa83d), 0xcb);
        EXPECT(gbc.readMem(0xa83e), 0xe4);
        // CB E4 01DC
        gbc.setState(0xc0ab, 0x8c1b, 0x4560, 0x6f42, 0x549b, 0xf140, 0x0, 0x0);
        gbc.writeMem(0xc0ab, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8c1b);
        EXPECT(gbc.pc(), 0xc0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ab), 0xcb);
        EXPECT(gbc.readMem(0xc0ac), 0xe4);
        // CB E4 01DE
        gbc.setState(0xab3a, 0x71be, 0x5df0, 0x54a0, 0x7d39, 0xb3ab, 0x0, 0x0);
        gbc.writeMem(0xab3a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x71be);
        EXPECT(gbc.pc(), 0xab3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3a), 0xcb);
        EXPECT(gbc.readMem(0xab3b), 0xe4);
        // CB E4 01DF
        gbc.setState(0x3f67, 0xd368, 0x4e80, 0xbf3a, 0xe401, 0xccec, 0x0, 0x1);
        gbc.writeMem(0x3f67, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd368);
        EXPECT(gbc.pc(), 0x3f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01E0
        gbc.setState(0x8181, 0xa1f3, 0x5f90, 0xaf52, 0x7a91, 0x10a7, 0x0, 0x0);
        gbc.writeMem(0x8181, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa1f3);
        EXPECT(gbc.pc(), 0x8183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8181), 0xcb);
        EXPECT(gbc.readMem(0x8182), 0xe4);
        // CB E4 01E1
        gbc.setState(0x8723, 0xf90b, 0x3260, 0x5998, 0xaa67, 0x4fb6, 0x0, 0x1);
        gbc.writeMem(0x8723, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf90b);
        EXPECT(gbc.pc(), 0x8725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8723), 0xcb);
        EXPECT(gbc.readMem(0x8724), 0xe4);
        // CB E4 01E2
        gbc.setState(0xb7b2, 0x2597, 0x5be0, 0x35a7, 0xed01, 0xd462, 0x0, 0x1);
        gbc.writeMem(0xb7b2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2597);
        EXPECT(gbc.pc(), 0xb7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b2), 0xcb);
        EXPECT(gbc.readMem(0xb7b3), 0xe4);
        // CB E4 01E3
        gbc.setState(0x34d0, 0x6994, 0xe1a0, 0xcfca, 0xed19, 0x5fac, 0x1, 0x0);
        gbc.writeMem(0x34d0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6994);
        EXPECT(gbc.pc(), 0x34d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01E4
        gbc.setState(0x8ac4, 0x5703, 0xa480, 0x3133, 0xf44f, 0x557f, 0x1, 0x0);
        gbc.writeMem(0x8ac4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5703);
        EXPECT(gbc.pc(), 0x8ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac4), 0xcb);
        EXPECT(gbc.readMem(0x8ac5), 0xe4);
        // CB E4 01E6
        gbc.setState(0xe75b, 0x5f6f, 0x83f0, 0x5c47, 0xb80d, 0xc4ce, 0x1, 0x1);
        gbc.writeMem(0xe75b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5f6f);
        EXPECT(gbc.pc(), 0xe75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75b), 0xcb);
        EXPECT(gbc.readMem(0xe75c), 0xe4);
        // CB E4 01E7
        gbc.setState(0xc309, 0xd13c, 0x8d80, 0x9736, 0xe788, 0x7170, 0x1, 0x0);
        gbc.writeMem(0xc309, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd13c);
        EXPECT(gbc.pc(), 0xc30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc309), 0xcb);
        EXPECT(gbc.readMem(0xc30a), 0xe4);
        // CB E4 01E8
        gbc.setState(0x5f9, 0x6f57, 0xb690, 0x1ab, 0x670e, 0x6ffa, 0x0, 0x1);
        gbc.writeMem(0x5f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6f57);
        EXPECT(gbc.pc(), 0x5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01E9
        gbc.setState(0xb14e, 0x2cf4, 0xc9b0, 0xafb0, 0xb422, 0x7752, 0x0, 0x1);
        gbc.writeMem(0xb14e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2cf4);
        EXPECT(gbc.pc(), 0xb150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14e), 0xcb);
        EXPECT(gbc.readMem(0xb14f), 0xe4);
        // CB E4 01EB
        gbc.setState(0x3765, 0xee93, 0xccb0, 0xda90, 0xed9b, 0x5248, 0x1, 0x0);
        gbc.writeMem(0x3765, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xee93);
        EXPECT(gbc.pc(), 0x3767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01EC
        gbc.setState(0x3a2e, 0xfa2a, 0x7550, 0xcd73, 0xc28a, 0x5f48, 0x0, 0x0);
        gbc.writeMem(0x3a2e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfa2a);
        EXPECT(gbc.pc(), 0x3a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01ED
        gbc.setState(0x15bc, 0xa3fc, 0x2190, 0x6dd5, 0xa4ff, 0x647c, 0x1, 0x1);
        gbc.writeMem(0x15bc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa3fc);
        EXPECT(gbc.pc(), 0x15be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01EE
        gbc.setState(0x1ac2, 0x8299, 0xb710, 0xed82, 0xbad7, 0xd923, 0x1, 0x1);
        gbc.writeMem(0x1ac2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0x1ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01EF
        gbc.setState(0x7c91, 0x6a9e, 0x45b0, 0x27a2, 0x7ebd, 0xfe6a, 0x0, 0x1);
        gbc.writeMem(0x7c91, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6a9e);
        EXPECT(gbc.pc(), 0x7c93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01F0
        gbc.setState(0xe8c4, 0x8c8e, 0x4b60, 0x9c20, 0x77b, 0xde80, 0x1, 0x1);
        gbc.writeMem(0xe8c4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8c8e);
        EXPECT(gbc.pc(), 0xe8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c4), 0xcb);
        EXPECT(gbc.readMem(0xe8c5), 0xe4);
        // CB E4 01F2
        gbc.setState(0xd554, 0xe1f, 0x5f90, 0x5076, 0xee36, 0x9108, 0x1, 0x1);
        gbc.writeMem(0xd554, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe1f);
        EXPECT(gbc.pc(), 0xd556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd554), 0xcb);
        EXPECT(gbc.readMem(0xd555), 0xe4);
        // CB E4 01F3
        gbc.setState(0xced, 0xaaf4, 0xbf00, 0x36d1, 0xf82f, 0xe8ab, 0x0, 0x1);
        gbc.writeMem(0xced, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xaaf4);
        EXPECT(gbc.pc(), 0xcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01F4
        gbc.setState(0x8bd6, 0x25b3, 0xf5a0, 0x1e17, 0xa67f, 0x9463, 0x1, 0x0);
        gbc.writeMem(0x8bd6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x25b3);
        EXPECT(gbc.pc(), 0x8bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd6), 0xcb);
        EXPECT(gbc.readMem(0x8bd7), 0xe4);
        // CB E4 01F5
        gbc.setState(0xe1ca, 0x9ec4, 0xda30, 0x655, 0xc143, 0xf4f7, 0x1, 0x1);
        gbc.writeMem(0xe1ca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9ec4);
        EXPECT(gbc.pc(), 0xe1cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ca), 0xcb);
        EXPECT(gbc.readMem(0xe1cb), 0xe4);
        // CB E4 01F6
        gbc.setState(0x678e, 0x53cd, 0x2360, 0x1e1, 0x7e55, 0xc6b, 0x1, 0x0);
        gbc.writeMem(0x678e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x53cd);
        EXPECT(gbc.pc(), 0x6790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01F7
        gbc.setState(0x26e2, 0xca5a, 0x3b00, 0x7079, 0x5a35, 0x729d, 0x0, 0x1);
        gbc.writeMem(0x26e2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xca5a);
        EXPECT(gbc.pc(), 0x26e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01F8
        gbc.setState(0x8447, 0x80eb, 0xca20, 0x1dac, 0x40ba, 0xc01, 0x1, 0x1);
        gbc.writeMem(0x8447, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x80eb);
        EXPECT(gbc.pc(), 0x8449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8447), 0xcb);
        EXPECT(gbc.readMem(0x8448), 0xe4);
        // CB E4 01F9
        gbc.setState(0x322, 0x94be, 0x4cd0, 0x262d, 0x156a, 0x9dc2, 0x1, 0x0);
        gbc.writeMem(0x322, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x94be);
        EXPECT(gbc.pc(), 0x324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 01FA
        gbc.setState(0x5969, 0xd532, 0xbaa0, 0x1429, 0xb24a, 0x616e, 0x0, 0x1);
        gbc.writeMem(0x5969, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd532);
        EXPECT(gbc.pc(), 0x596b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01FB
        gbc.setState(0x328b, 0xa76d, 0xc920, 0xeb08, 0x9213, 0xbbc1, 0x0, 0x1);
        gbc.writeMem(0x328b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa76d);
        EXPECT(gbc.pc(), 0x328d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01FC
        gbc.setState(0xa784, 0xd6e0, 0x7c60, 0x5d86, 0x8042, 0xf50, 0x1, 0x1);
        gbc.writeMem(0xa784, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd6e0);
        EXPECT(gbc.pc(), 0xa786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa784), 0xcb);
        EXPECT(gbc.readMem(0xa785), 0xe4);
        // CB E4 01FD
        gbc.setState(0x4e43, 0x177a, 0xe3c0, 0x4799, 0x835a, 0x624f, 0x0, 0x0);
        gbc.writeMem(0x4e43, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x177a);
        EXPECT(gbc.pc(), 0x4e45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 01FE
        gbc.setState(0xec86, 0xcaea, 0x56c0, 0xe39f, 0x2c25, 0x9ee7, 0x1, 0x1);
        gbc.writeMem(0xec86, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcaea);
        EXPECT(gbc.pc(), 0xec88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec86), 0xcb);
        EXPECT(gbc.readMem(0xec87), 0xe4);
        // CB E4 01FF
        gbc.setState(0xef80, 0xe5b, 0x880, 0xd5a6, 0xfdda, 0x63a0, 0x1, 0x0);
        gbc.writeMem(0xef80, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe5b);
        EXPECT(gbc.pc(), 0xef82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef80), 0xcb);
        EXPECT(gbc.readMem(0xef81), 0xe4);
        // CB E4 0200
        gbc.setState(0xcb8c, 0x4f9, 0xc0d0, 0xde41, 0xb45f, 0xe5aa, 0x1, 0x1);
        gbc.writeMem(0xcb8c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4f9);
        EXPECT(gbc.pc(), 0xcb8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8c), 0xcb);
        EXPECT(gbc.readMem(0xcb8d), 0xe4);
        // CB E4 0201
        gbc.setState(0x83c6, 0x9a60, 0x2b10, 0x5e67, 0xa71, 0x9708, 0x1, 0x0);
        gbc.writeMem(0x83c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9a60);
        EXPECT(gbc.pc(), 0x83c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c6), 0xcb);
        EXPECT(gbc.readMem(0x83c7), 0xe4);
        // CB E4 0202
        gbc.setState(0x18be, 0xb4ee, 0x4f80, 0xc27e, 0x58c4, 0x6216, 0x1, 0x0);
        gbc.writeMem(0x18be, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb4ee);
        EXPECT(gbc.pc(), 0x18c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0203
        gbc.setState(0xbeb6, 0x967c, 0x9890, 0x6fd1, 0x88ef, 0x83d1, 0x0, 0x0);
        gbc.writeMem(0xbeb6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x967c);
        EXPECT(gbc.pc(), 0xbeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb6), 0xcb);
        EXPECT(gbc.readMem(0xbeb7), 0xe4);
        // CB E4 0204
        gbc.setState(0xc8e3, 0x1136, 0xf580, 0x65fc, 0xc503, 0xc115, 0x0, 0x1);
        gbc.writeMem(0xc8e3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1136);
        EXPECT(gbc.pc(), 0xc8e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e3), 0xcb);
        EXPECT(gbc.readMem(0xc8e4), 0xe4);
        // CB E4 0205
        gbc.setState(0x5a24, 0xda43, 0xd650, 0x1bc3, 0x2373, 0xabbf, 0x0, 0x0);
        gbc.writeMem(0x5a24, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xda43);
        EXPECT(gbc.pc(), 0x5a26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0206
        gbc.setState(0xaf4d, 0xc6ec, 0xdb90, 0x9159, 0x5d56, 0x9081, 0x0, 0x1);
        gbc.writeMem(0xaf4d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc6ec);
        EXPECT(gbc.pc(), 0xaf4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf4d), 0xcb);
        EXPECT(gbc.readMem(0xaf4e), 0xe4);
        // CB E4 0207
        gbc.setState(0x8cb1, 0x300, 0xe080, 0x1bb0, 0x95cd, 0x974e, 0x0, 0x0);
        gbc.writeMem(0x8cb1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x300);
        EXPECT(gbc.pc(), 0x8cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb1), 0xcb);
        EXPECT(gbc.readMem(0x8cb2), 0xe4);
        // CB E4 0208
        gbc.setState(0xcbd0, 0x5bd, 0x7240, 0xc7c, 0xb13e, 0x1858, 0x0, 0x1);
        gbc.writeMem(0xcbd0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5bd);
        EXPECT(gbc.pc(), 0xcbd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd0), 0xcb);
        EXPECT(gbc.readMem(0xcbd1), 0xe4);
        // CB E4 0209
        gbc.setState(0x96e8, 0x6bdb, 0x3200, 0x4afc, 0xaff3, 0xce8e, 0x0, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6bdb);
        EXPECT(gbc.pc(), 0x96ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e8), 0xcb);
        EXPECT(gbc.readMem(0x96e9), 0xe4);
        // CB E4 020A
        gbc.setState(0xc021, 0xe673, 0x2800, 0x974c, 0xb07f, 0xb34a, 0x1, 0x0);
        gbc.writeMem(0xc021, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe673);
        EXPECT(gbc.pc(), 0xc023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc021), 0xcb);
        EXPECT(gbc.readMem(0xc022), 0xe4);
        // CB E4 020B
        gbc.setState(0x9d71, 0x2d6b, 0x8d0, 0x4cdf, 0x9267, 0x24df, 0x0, 0x1);
        gbc.writeMem(0x9d71, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2d6b);
        EXPECT(gbc.pc(), 0x9d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d71), 0xcb);
        EXPECT(gbc.readMem(0x9d72), 0xe4);
        // CB E4 020C
        gbc.setState(0x942c, 0xb9b1, 0x6330, 0x11d, 0x2803, 0xde4c, 0x1, 0x1);
        gbc.writeMem(0x942c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb9b1);
        EXPECT(gbc.pc(), 0x942e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942c), 0xcb);
        EXPECT(gbc.readMem(0x942d), 0xe4);
        // CB E4 020D
        gbc.setState(0x2c56, 0x121, 0x3fe0, 0x5429, 0xdfc4, 0xb2f9, 0x0, 0x0);
        gbc.writeMem(0x2c56, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x121);
        EXPECT(gbc.pc(), 0x2c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 020E
        gbc.setState(0x8f87, 0x7da1, 0x1700, 0x2e6a, 0xf1fa, 0x6dff, 0x0, 0x0);
        gbc.writeMem(0x8f87, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7da1);
        EXPECT(gbc.pc(), 0x8f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f87), 0xcb);
        EXPECT(gbc.readMem(0x8f88), 0xe4);
        // CB E4 020F
        gbc.setState(0xce1b, 0x7116, 0xd5f0, 0x55dc, 0xb114, 0xd883, 0x1, 0x0);
        gbc.writeMem(0xce1b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7116);
        EXPECT(gbc.pc(), 0xce1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1b), 0xcb);
        EXPECT(gbc.readMem(0xce1c), 0xe4);
        // CB E4 0210
        gbc.setState(0xd90a, 0xb661, 0x7170, 0xbf3b, 0x5143, 0x6836, 0x0, 0x1);
        gbc.writeMem(0xd90a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb661);
        EXPECT(gbc.pc(), 0xd90c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90a), 0xcb);
        EXPECT(gbc.readMem(0xd90b), 0xe4);
        // CB E4 0211
        gbc.setState(0x7bbf, 0x203f, 0xda20, 0x1db0, 0x8a0e, 0x447, 0x0, 0x1);
        gbc.writeMem(0x7bbf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x203f);
        EXPECT(gbc.pc(), 0x7bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0212
        gbc.setState(0x59e0, 0xc0de, 0xbe40, 0xcc20, 0xf337, 0xfed4, 0x1, 0x1);
        gbc.writeMem(0x59e0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc0de);
        EXPECT(gbc.pc(), 0x59e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0213
        gbc.setState(0xebd, 0xc909, 0x4bb0, 0x7f6c, 0x1376, 0x9b49, 0x1, 0x1);
        gbc.writeMem(0xebd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc909);
        EXPECT(gbc.pc(), 0xebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0214
        gbc.setState(0x4f40, 0xe3b4, 0xa900, 0xc28f, 0xfd93, 0x6249, 0x1, 0x0);
        gbc.writeMem(0x4f40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe3b4);
        EXPECT(gbc.pc(), 0x4f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0215
        gbc.setState(0xf9d, 0x64cd, 0x91f0, 0x34fb, 0xd284, 0xaced, 0x1, 0x0);
        gbc.writeMem(0xf9d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x64cd);
        EXPECT(gbc.pc(), 0xf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0216
        gbc.setState(0x432c, 0x82a1, 0x4ec0, 0x90c1, 0xc230, 0xc803, 0x1, 0x0);
        gbc.writeMem(0x432c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x82a1);
        EXPECT(gbc.pc(), 0x432e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0217
        gbc.setState(0x2fd8, 0x224d, 0x2b40, 0x6a20, 0x842, 0x2935, 0x1, 0x0);
        gbc.writeMem(0x2fd8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x224d);
        EXPECT(gbc.pc(), 0x2fda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0218
        gbc.setState(0x254, 0x7a81, 0xb140, 0x2235, 0x8533, 0x65c8, 0x1, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7a81);
        EXPECT(gbc.pc(), 0x256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0219
        gbc.setState(0x4f96, 0x5d97, 0xb980, 0x76d4, 0x4f64, 0x6eb8, 0x0, 0x0);
        gbc.writeMem(0x4f96, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5d97);
        EXPECT(gbc.pc(), 0x4f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 021A
        gbc.setState(0x68ed, 0xc460, 0x9d00, 0x1a5d, 0x2d99, 0x75ef, 0x1, 0x1);
        gbc.writeMem(0x68ed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc460);
        EXPECT(gbc.pc(), 0x68ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 021B
        gbc.setState(0x3f3e, 0x1db3, 0xb540, 0x9fb1, 0xeff9, 0xbee6, 0x1, 0x0);
        gbc.writeMem(0x3f3e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1db3);
        EXPECT(gbc.pc(), 0x3f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 021C
        gbc.setState(0x99ea, 0xb11f, 0x6e30, 0x38fb, 0xe8ba, 0x3842, 0x1, 0x0);
        gbc.writeMem(0x99ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb11f);
        EXPECT(gbc.pc(), 0x99ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ea), 0xcb);
        EXPECT(gbc.readMem(0x99eb), 0xe4);
        // CB E4 021D
        gbc.setState(0xefe8, 0xff7, 0xcd60, 0xf7a0, 0x24b, 0x9d8b, 0x0, 0x1);
        gbc.writeMem(0xefe8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xff7);
        EXPECT(gbc.pc(), 0xefea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe8), 0xcb);
        EXPECT(gbc.readMem(0xefe9), 0xe4);
        // CB E4 021E
        gbc.setState(0x8b68, 0x5fa, 0x9ee0, 0xf819, 0x76f, 0x7728, 0x1, 0x1);
        gbc.writeMem(0x8b68, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5fa);
        EXPECT(gbc.pc(), 0x8b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b68), 0xcb);
        EXPECT(gbc.readMem(0x8b69), 0xe4);
        // CB E4 021F
        gbc.setState(0x15a8, 0x7b8e, 0x2640, 0x194a, 0x80ec, 0xe835, 0x1, 0x0);
        gbc.writeMem(0x15a8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7b8e);
        EXPECT(gbc.pc(), 0x15aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0222
        gbc.setState(0xea4f, 0x154f, 0x67e0, 0x815, 0x620e, 0x8fc8, 0x0, 0x0);
        gbc.writeMem(0xea4f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x154f);
        EXPECT(gbc.pc(), 0xea51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4f), 0xcb);
        EXPECT(gbc.readMem(0xea50), 0xe4);
        // CB E4 0223
        gbc.setState(0xdda, 0x897, 0x9530, 0xcb21, 0x3084, 0x9df2, 0x0, 0x1);
        gbc.writeMem(0xdda, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x897);
        EXPECT(gbc.pc(), 0xddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0225
        gbc.setState(0x5411, 0xb667, 0x4b30, 0x18f2, 0xe525, 0x868e, 0x1, 0x1);
        gbc.writeMem(0x5411, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb667);
        EXPECT(gbc.pc(), 0x5413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0226
        gbc.setState(0xa907, 0x1744, 0xca0, 0xe233, 0xd1f3, 0x9c56, 0x1, 0x1);
        gbc.writeMem(0xa907, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1744);
        EXPECT(gbc.pc(), 0xa909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa907), 0xcb);
        EXPECT(gbc.readMem(0xa908), 0xe4);
        // CB E4 0227
        gbc.setState(0x9365, 0xc483, 0x4c80, 0xc15e, 0x46b0, 0x1fc2, 0x1, 0x1);
        gbc.writeMem(0x9365, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc483);
        EXPECT(gbc.pc(), 0x9367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9365), 0xcb);
        EXPECT(gbc.readMem(0x9366), 0xe4);
        // CB E4 0228
        gbc.setState(0xf8e, 0x9728, 0x7a50, 0x83c9, 0xf0e6, 0x46bf, 0x1, 0x0);
        gbc.writeMem(0xf8e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9728);
        EXPECT(gbc.pc(), 0xf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0229
        gbc.setState(0x3b57, 0x5a5d, 0xd100, 0xa545, 0x2905, 0x91e0, 0x0, 0x0);
        gbc.writeMem(0x3b57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5a5d);
        EXPECT(gbc.pc(), 0x3b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 022A
        gbc.setState(0x3986, 0x28ea, 0x45f0, 0x4911, 0xc3fe, 0x5065, 0x1, 0x1);
        gbc.writeMem(0x3986, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x28ea);
        EXPECT(gbc.pc(), 0x3988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 022B
        gbc.setState(0xde07, 0x53d5, 0xe640, 0xb19e, 0xb4af, 0x54e7, 0x0, 0x1);
        gbc.writeMem(0xde07, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x53d5);
        EXPECT(gbc.pc(), 0xde09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde07), 0xcb);
        EXPECT(gbc.readMem(0xde08), 0xe4);
        // CB E4 022C
        gbc.setState(0xe4c2, 0xf174, 0x9fc0, 0x6454, 0x6e50, 0x5259, 0x1, 0x1);
        gbc.writeMem(0xe4c2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf174);
        EXPECT(gbc.pc(), 0xe4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c2), 0xcb);
        EXPECT(gbc.readMem(0xe4c3), 0xe4);
        // CB E4 022D
        gbc.setState(0x2bd2, 0xfcf7, 0xba0, 0x2dc7, 0x1869, 0x53ba, 0x1, 0x1);
        gbc.writeMem(0x2bd2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfcf7);
        EXPECT(gbc.pc(), 0x2bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 022E
        gbc.setState(0x9f7b, 0xeb0f, 0x7ad0, 0x9aa9, 0x6bcb, 0x5554, 0x0, 0x0);
        gbc.writeMem(0x9f7b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xeb0f);
        EXPECT(gbc.pc(), 0x9f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        EXPECT(gbc.readMem(0x9f7c), 0xe4);
        // CB E4 022F
        gbc.setState(0x62b7, 0x2c0f, 0xfb20, 0x61bd, 0x6899, 0xf9fb, 0x0, 0x0);
        gbc.writeMem(0x62b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2c0f);
        EXPECT(gbc.pc(), 0x62b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0230
        gbc.setState(0x9ee2, 0xe3cb, 0x5140, 0x531e, 0x3b5d, 0x8e37, 0x1, 0x0);
        gbc.writeMem(0x9ee2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe3cb);
        EXPECT(gbc.pc(), 0x9ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee2), 0xcb);
        EXPECT(gbc.readMem(0x9ee3), 0xe4);
        // CB E4 0231
        gbc.setState(0x8c2c, 0x60ff, 0x1a60, 0xac9a, 0xe408, 0xd2a2, 0x1, 0x1);
        gbc.writeMem(0x8c2c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x60ff);
        EXPECT(gbc.pc(), 0x8c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2c), 0xcb);
        EXPECT(gbc.readMem(0x8c2d), 0xe4);
        // CB E4 0233
        gbc.setState(0x8320, 0x1358, 0x1d40, 0xdc3b, 0xe946, 0xcdd5, 0x1, 0x0);
        gbc.writeMem(0x8320, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1358);
        EXPECT(gbc.pc(), 0x8322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8320), 0xcb);
        EXPECT(gbc.readMem(0x8321), 0xe4);
        // CB E4 0234
        gbc.setState(0x4615, 0xb153, 0x8980, 0xe5ff, 0x12fd, 0x1feb, 0x1, 0x0);
        gbc.writeMem(0x4615, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb153);
        EXPECT(gbc.pc(), 0x4617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0235
        gbc.setState(0x759, 0xb142, 0xa1d0, 0x127, 0x3cb7, 0xf637, 0x0, 0x0);
        gbc.writeMem(0x759, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0x75b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0237
        gbc.setState(0x53d4, 0x507f, 0x8780, 0x2412, 0x33a, 0x8db1, 0x0, 0x0);
        gbc.writeMem(0x53d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x507f);
        EXPECT(gbc.pc(), 0x53d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0238
        gbc.setState(0xb90d, 0x444b, 0x9d80, 0x3f9f, 0xfe5d, 0xb596, 0x1, 0x1);
        gbc.writeMem(0xb90d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x444b);
        EXPECT(gbc.pc(), 0xb90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90d), 0xcb);
        EXPECT(gbc.readMem(0xb90e), 0xe4);
        // CB E4 0239
        gbc.setState(0xccd2, 0xa34d, 0x41e0, 0x822d, 0x64cf, 0xef82, 0x0, 0x0);
        gbc.writeMem(0xccd2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0xccd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd2), 0xcb);
        EXPECT(gbc.readMem(0xccd3), 0xe4);
        // CB E4 023A
        gbc.setState(0x3abd, 0xbe6, 0x89a0, 0x92ec, 0x360a, 0xe0d3, 0x1, 0x0);
        gbc.writeMem(0x3abd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbe6);
        EXPECT(gbc.pc(), 0x3abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 023B
        gbc.setState(0xb977, 0xb915, 0x7f30, 0x65ae, 0xc5c9, 0xcabe, 0x0, 0x0);
        gbc.writeMem(0xb977, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb915);
        EXPECT(gbc.pc(), 0xb979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb977), 0xcb);
        EXPECT(gbc.readMem(0xb978), 0xe4);
        // CB E4 023C
        gbc.setState(0x89fd, 0xb0dc, 0xf410, 0xdb41, 0x949d, 0x66dd, 0x1, 0x1);
        gbc.writeMem(0x89fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb0dc);
        EXPECT(gbc.pc(), 0x89ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89fd), 0xcb);
        EXPECT(gbc.readMem(0x89fe), 0xe4);
        // CB E4 023D
        gbc.setState(0xb068, 0xda74, 0x5060, 0xcf58, 0x3263, 0x296c, 0x0, 0x0);
        gbc.writeMem(0xb068, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xda74);
        EXPECT(gbc.pc(), 0xb06a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb068), 0xcb);
        EXPECT(gbc.readMem(0xb069), 0xe4);
        // CB E4 023E
        gbc.setState(0x8c47, 0x1db3, 0x4150, 0xbc45, 0xf7ce, 0x9599, 0x1, 0x1);
        gbc.writeMem(0x8c47, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1db3);
        EXPECT(gbc.pc(), 0x8c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c47), 0xcb);
        EXPECT(gbc.readMem(0x8c48), 0xe4);
        // CB E4 023F
        gbc.setState(0xc467, 0x84ed, 0x61d0, 0x7bf, 0xd0b1, 0x683d, 0x0, 0x0);
        gbc.writeMem(0xc467, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x84ed);
        EXPECT(gbc.pc(), 0xc469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc467), 0xcb);
        EXPECT(gbc.readMem(0xc468), 0xe4);
        // CB E4 0240
        gbc.setState(0x134c, 0xfc65, 0x3de0, 0xb5dc, 0x2acf, 0xfea, 0x0, 0x1);
        gbc.writeMem(0x134c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfc65);
        EXPECT(gbc.pc(), 0x134e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0241
        gbc.setState(0x345a, 0x243b, 0x9bb0, 0xb9d5, 0x18f1, 0xbea9, 0x0, 0x1);
        gbc.writeMem(0x345a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x243b);
        EXPECT(gbc.pc(), 0x345c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0242
        gbc.setState(0xe6a7, 0xae56, 0xfeb0, 0x3374, 0x7c40, 0x4dff, 0x0, 0x0);
        gbc.writeMem(0xe6a7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xae56);
        EXPECT(gbc.pc(), 0xe6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a7), 0xcb);
        EXPECT(gbc.readMem(0xe6a8), 0xe4);
        // CB E4 0243
        gbc.setState(0xec32, 0x110c, 0xe4f0, 0xcc, 0xb1bd, 0x3c33, 0x0, 0x0);
        gbc.writeMem(0xec32, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x110c);
        EXPECT(gbc.pc(), 0xec34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec32), 0xcb);
        EXPECT(gbc.readMem(0xec33), 0xe4);
        // CB E4 0244
        gbc.setState(0xc976, 0xb099, 0xa610, 0x2181, 0x52ab, 0xe651, 0x1, 0x0);
        gbc.writeMem(0xc976, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb099);
        EXPECT(gbc.pc(), 0xc978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc976), 0xcb);
        EXPECT(gbc.readMem(0xc977), 0xe4);
        // CB E4 0245
        gbc.setState(0x969a, 0x22e, 0x8e00, 0xe697, 0x4aa, 0xeb99, 0x1, 0x1);
        gbc.writeMem(0x969a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x22e);
        EXPECT(gbc.pc(), 0x969c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x969a), 0xcb);
        EXPECT(gbc.readMem(0x969b), 0xe4);
        // CB E4 0246
        gbc.setState(0x73b9, 0x3914, 0x24f0, 0x328b, 0x47cd, 0x5a50, 0x1, 0x1);
        gbc.writeMem(0x73b9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3914);
        EXPECT(gbc.pc(), 0x73bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0247
        gbc.setState(0x3c07, 0x5c4f, 0xed80, 0x6773, 0x3915, 0xc43e, 0x1, 0x1);
        gbc.writeMem(0x3c07, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5c4f);
        EXPECT(gbc.pc(), 0x3c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0248
        gbc.setState(0xdab4, 0x6c23, 0x75d0, 0x1e83, 0x77c4, 0xf212, 0x0, 0x1);
        gbc.writeMem(0xdab4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6c23);
        EXPECT(gbc.pc(), 0xdab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab4), 0xcb);
        EXPECT(gbc.readMem(0xdab5), 0xe4);
        // CB E4 0249
        gbc.setState(0x50d5, 0xcf55, 0x3a70, 0xeaf5, 0x8274, 0x899, 0x1, 0x0);
        gbc.writeMem(0x50d5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcf55);
        EXPECT(gbc.pc(), 0x50d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 024A
        gbc.setState(0xe86d, 0x3f36, 0x53c0, 0x36b2, 0xb535, 0x1ff3, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3f36);
        EXPECT(gbc.pc(), 0xe86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86d), 0xcb);
        EXPECT(gbc.readMem(0xe86e), 0xe4);
        // CB E4 024B
        gbc.setState(0xb08a, 0x1b7d, 0x6dd0, 0x9890, 0xf18f, 0xf175, 0x0, 0x0);
        gbc.writeMem(0xb08a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1b7d);
        EXPECT(gbc.pc(), 0xb08c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb08a), 0xcb);
        EXPECT(gbc.readMem(0xb08b), 0xe4);
        // CB E4 024C
        gbc.setState(0xd299, 0xb437, 0x4ff0, 0xae35, 0x4e61, 0xdea7, 0x1, 0x0);
        gbc.writeMem(0xd299, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb437);
        EXPECT(gbc.pc(), 0xd29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd299), 0xcb);
        EXPECT(gbc.readMem(0xd29a), 0xe4);
        // CB E4 024D
        gbc.setState(0xc5e6, 0xf96a, 0xb210, 0x6d75, 0xe683, 0x8328, 0x0, 0x1);
        gbc.writeMem(0xc5e6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf96a);
        EXPECT(gbc.pc(), 0xc5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e6), 0xcb);
        EXPECT(gbc.readMem(0xc5e7), 0xe4);
        // CB E4 024E
        gbc.setState(0x9011, 0x4aa9, 0xb00, 0x2bd5, 0x722c, 0x68e5, 0x0, 0x0);
        gbc.writeMem(0x9011, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4aa9);
        EXPECT(gbc.pc(), 0x9013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9011), 0xcb);
        EXPECT(gbc.readMem(0x9012), 0xe4);
        // CB E4 024F
        gbc.setState(0x798a, 0x2b19, 0x8050, 0x8d03, 0x78a5, 0xcf33, 0x0, 0x1);
        gbc.writeMem(0x798a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2b19);
        EXPECT(gbc.pc(), 0x798c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0251
        gbc.setState(0x57bc, 0x7921, 0x8e60, 0x5762, 0xaab9, 0x1ddc, 0x1, 0x1);
        gbc.writeMem(0x57bc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7921);
        EXPECT(gbc.pc(), 0x57be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0252
        gbc.setState(0xa9ec, 0x8ace, 0x1470, 0x8052, 0xc668, 0xa9f4, 0x1, 0x0);
        gbc.writeMem(0xa9ec, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8ace);
        EXPECT(gbc.pc(), 0xa9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ec), 0xcb);
        EXPECT(gbc.readMem(0xa9ed), 0xe4);
        // CB E4 0253
        gbc.setState(0xcb32, 0xbed8, 0xbe0, 0x22cf, 0x28e6, 0xbdab, 0x0, 0x1);
        gbc.writeMem(0xcb32, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbed8);
        EXPECT(gbc.pc(), 0xcb34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb32), 0xcb);
        EXPECT(gbc.readMem(0xcb33), 0xe4);
        // CB E4 0254
        gbc.setState(0x9680, 0x5e5, 0x2ef0, 0x3152, 0x51cb, 0x3cc3, 0x0, 0x1);
        gbc.writeMem(0x9680, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5e5);
        EXPECT(gbc.pc(), 0x9682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9680), 0xcb);
        EXPECT(gbc.readMem(0x9681), 0xe4);
        // CB E4 0255
        gbc.setState(0x178f, 0xe77a, 0xeda0, 0x5588, 0x3e7f, 0x19d, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe77a);
        EXPECT(gbc.pc(), 0x1791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0256
        gbc.setState(0xd8aa, 0xaebb, 0xeb0, 0xeb98, 0x2fc9, 0x3864, 0x1, 0x1);
        gbc.writeMem(0xd8aa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xaebb);
        EXPECT(gbc.pc(), 0xd8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8aa), 0xcb);
        EXPECT(gbc.readMem(0xd8ab), 0xe4);
        // CB E4 0257
        gbc.setState(0xc5f4, 0xfec6, 0xc1a0, 0x2b97, 0x127c, 0x289e, 0x1, 0x1);
        gbc.writeMem(0xc5f4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfec6);
        EXPECT(gbc.pc(), 0xc5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f4), 0xcb);
        EXPECT(gbc.readMem(0xc5f5), 0xe4);
        // CB E4 0258
        gbc.setState(0x33b, 0x89f1, 0x9570, 0xbae8, 0x1f8b, 0x6a1c, 0x1, 0x0);
        gbc.writeMem(0x33b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x89f1);
        EXPECT(gbc.pc(), 0x33d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0259
        gbc.setState(0xf90, 0xdd03, 0x2720, 0x64ec, 0xfeb7, 0x35e8, 0x1, 0x1);
        gbc.writeMem(0xf90, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdd03);
        EXPECT(gbc.pc(), 0xf92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 025A
        gbc.setState(0xaca1, 0x405, 0xfda0, 0x9a2c, 0x8ae0, 0x4a66, 0x0, 0x0);
        gbc.writeMem(0xaca1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x405);
        EXPECT(gbc.pc(), 0xaca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca1), 0xcb);
        EXPECT(gbc.readMem(0xaca2), 0xe4);
        // CB E4 025B
        gbc.setState(0x618, 0x65a4, 0xac70, 0x5fbc, 0x3244, 0x2ba2, 0x0, 0x0);
        gbc.writeMem(0x618, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x65a4);
        EXPECT(gbc.pc(), 0x61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 025C
        gbc.setState(0x693, 0xd2a5, 0x9ad0, 0xf4e9, 0xefd5, 0x3ab4, 0x1, 0x0);
        gbc.writeMem(0x693, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd2a5);
        EXPECT(gbc.pc(), 0x695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 025D
        gbc.setState(0xef31, 0x520c, 0xdc60, 0x940d, 0xf565, 0x1c74, 0x0, 0x0);
        gbc.writeMem(0xef31, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x520c);
        EXPECT(gbc.pc(), 0xef33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef31), 0xcb);
        EXPECT(gbc.readMem(0xef32), 0xe4);
        // CB E4 025E
        gbc.setState(0x8a2e, 0x94fb, 0x70e0, 0x6e65, 0xa815, 0xc12f, 0x1, 0x1);
        gbc.writeMem(0x8a2e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x94fb);
        EXPECT(gbc.pc(), 0x8a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2e), 0xcb);
        EXPECT(gbc.readMem(0x8a2f), 0xe4);
        // CB E4 025F
        gbc.setState(0x590b, 0x4c3c, 0xc060, 0x1c8a, 0x8c50, 0x77ad, 0x0, 0x1);
        gbc.writeMem(0x590b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4c3c);
        EXPECT(gbc.pc(), 0x590d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0260
        gbc.setState(0x5b8f, 0xb300, 0xbdc0, 0x3730, 0x42f, 0x3a2b, 0x0, 0x0);
        gbc.writeMem(0x5b8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb300);
        EXPECT(gbc.pc(), 0x5b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0261
        gbc.setState(0x8404, 0x97e2, 0x7530, 0xb847, 0x5005, 0x4f58, 0x1, 0x0);
        gbc.writeMem(0x8404, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x97e2);
        EXPECT(gbc.pc(), 0x8406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8404), 0xcb);
        EXPECT(gbc.readMem(0x8405), 0xe4);
        // CB E4 0262
        gbc.setState(0x827d, 0xbbba, 0xeee0, 0xca39, 0x8aa8, 0x9a28, 0x0, 0x0);
        gbc.writeMem(0x827d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbbba);
        EXPECT(gbc.pc(), 0x827f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827d), 0xcb);
        EXPECT(gbc.readMem(0x827e), 0xe4);
        // CB E4 0263
        gbc.setState(0x8503, 0xc925, 0xbcd0, 0x77ae, 0xde25, 0xcd53, 0x0, 0x1);
        gbc.writeMem(0x8503, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc925);
        EXPECT(gbc.pc(), 0x8505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8503), 0xcb);
        EXPECT(gbc.readMem(0x8504), 0xe4);
        // CB E4 0264
        gbc.setState(0x9638, 0xe948, 0x52e0, 0xe73, 0xb686, 0x83c4, 0x1, 0x1);
        gbc.writeMem(0x9638, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe948);
        EXPECT(gbc.pc(), 0x963a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9638), 0xcb);
        EXPECT(gbc.readMem(0x9639), 0xe4);
        // CB E4 0265
        gbc.setState(0x70b7, 0x999c, 0xd1a0, 0xbb61, 0xc432, 0x80b0, 0x1, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x999c);
        EXPECT(gbc.pc(), 0x70b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0266
        gbc.setState(0x91d1, 0x5710, 0x6750, 0x53b0, 0xe0f3, 0x2262, 0x0, 0x1);
        gbc.writeMem(0x91d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5710);
        EXPECT(gbc.pc(), 0x91d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d1), 0xcb);
        EXPECT(gbc.readMem(0x91d2), 0xe4);
        // CB E4 0267
        gbc.setState(0x3bb2, 0x373a, 0x2110, 0x7774, 0x27a9, 0x6a9b, 0x1, 0x1);
        gbc.writeMem(0x3bb2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x373a);
        EXPECT(gbc.pc(), 0x3bb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0268
        gbc.setState(0xe443, 0xf320, 0xf900, 0xaf8b, 0xf773, 0x6065, 0x0, 0x1);
        gbc.writeMem(0xe443, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf320);
        EXPECT(gbc.pc(), 0xe445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe443), 0xcb);
        EXPECT(gbc.readMem(0xe444), 0xe4);
        // CB E4 0269
        gbc.setState(0xd336, 0x9a77, 0xb5f0, 0xf43, 0x985f, 0x2065, 0x0, 0x0);
        gbc.writeMem(0xd336, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9a77);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd336), 0xcb);
        EXPECT(gbc.readMem(0xd337), 0xe4);
        // CB E4 026A
        gbc.setState(0x10c6, 0x90f6, 0xd660, 0xb28a, 0x34ad, 0x91c7, 0x1, 0x0);
        gbc.writeMem(0x10c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x90f6);
        EXPECT(gbc.pc(), 0x10c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 026C
        gbc.setState(0x1f85, 0x3cb, 0x83d0, 0x6416, 0x78fc, 0x26c3, 0x0, 0x1);
        gbc.writeMem(0x1f85, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3cb);
        EXPECT(gbc.pc(), 0x1f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 026D
        gbc.setState(0x795c, 0xe8f9, 0xd80, 0xfcc0, 0xcfb9, 0x9656, 0x1, 0x0);
        gbc.writeMem(0x795c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe8f9);
        EXPECT(gbc.pc(), 0x795e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 026E
        gbc.setState(0x7821, 0x5106, 0x5390, 0x52cc, 0x1ab, 0x99f8, 0x1, 0x1);
        gbc.writeMem(0x7821, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5106);
        EXPECT(gbc.pc(), 0x7823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0270
        gbc.setState(0x3009, 0xd13, 0x9ff0, 0x2b74, 0x358b, 0x2dd, 0x1, 0x0);
        gbc.writeMem(0x3009, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd13);
        EXPECT(gbc.pc(), 0x300b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0271
        gbc.setState(0x9328, 0xcdc, 0x7300, 0x365f, 0xb526, 0x1469, 0x0, 0x0);
        gbc.writeMem(0x9328, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcdc);
        EXPECT(gbc.pc(), 0x932a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9328), 0xcb);
        EXPECT(gbc.readMem(0x9329), 0xe4);
        // CB E4 0272
        gbc.setState(0xced1, 0x31b2, 0xd400, 0xeef4, 0x1a75, 0x6d6, 0x1, 0x1);
        gbc.writeMem(0xced1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x31b2);
        EXPECT(gbc.pc(), 0xced3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced1), 0xcb);
        EXPECT(gbc.readMem(0xced2), 0xe4);
        // CB E4 0274
        gbc.setState(0x9a88, 0xa7a1, 0x1650, 0xb87a, 0x6a9d, 0x49af, 0x1, 0x1);
        gbc.writeMem(0x9a88, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa7a1);
        EXPECT(gbc.pc(), 0x9a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a88), 0xcb);
        EXPECT(gbc.readMem(0x9a89), 0xe4);
        // CB E4 0275
        gbc.setState(0x60be, 0x2ff, 0xd390, 0x8679, 0xbe03, 0x84ca, 0x1, 0x0);
        gbc.writeMem(0x60be, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2ff);
        EXPECT(gbc.pc(), 0x60c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0276
        gbc.setState(0x7551, 0xd25b, 0x7e50, 0xc95f, 0xe847, 0x3dde, 0x0, 0x0);
        gbc.writeMem(0x7551, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd25b);
        EXPECT(gbc.pc(), 0x7553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0277
        gbc.setState(0x929, 0x1880, 0xe190, 0x8729, 0xe8bc, 0xcb77, 0x1, 0x1);
        gbc.writeMem(0x929, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1880);
        EXPECT(gbc.pc(), 0x92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0278
        gbc.setState(0xbee5, 0xc58f, 0x8e10, 0x9174, 0x3e8, 0xdf8a, 0x1, 0x0);
        gbc.writeMem(0xbee5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc58f);
        EXPECT(gbc.pc(), 0xbee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee5), 0xcb);
        EXPECT(gbc.readMem(0xbee6), 0xe4);
        // CB E4 0279
        gbc.setState(0x7b0d, 0x8c62, 0x82b0, 0x7b84, 0x1752, 0x6369, 0x1, 0x0);
        gbc.writeMem(0x7b0d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8c62);
        EXPECT(gbc.pc(), 0x7b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 027A
        gbc.setState(0x149d, 0x737d, 0x8d90, 0xb99b, 0x6a13, 0x9b6a, 0x1, 0x1);
        gbc.writeMem(0x149d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x737d);
        EXPECT(gbc.pc(), 0x149f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 027B
        gbc.setState(0xe7fd, 0x516a, 0x3490, 0xf2ec, 0xbf79, 0xbb56, 0x1, 0x1);
        gbc.writeMem(0xe7fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x516a);
        EXPECT(gbc.pc(), 0xe7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fd), 0xcb);
        EXPECT(gbc.readMem(0xe7fe), 0xe4);
        // CB E4 027C
        gbc.setState(0xaa84, 0x7924, 0x480, 0xb4d4, 0x4c9d, 0x7918, 0x0, 0x0);
        gbc.writeMem(0xaa84, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7924);
        EXPECT(gbc.pc(), 0xaa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa84), 0xcb);
        EXPECT(gbc.readMem(0xaa85), 0xe4);
        // CB E4 027D
        gbc.setState(0x10f9, 0xa47e, 0x87c0, 0x3b2c, 0x882a, 0x1441, 0x0, 0x0);
        gbc.writeMem(0x10f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa47e);
        EXPECT(gbc.pc(), 0x10fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 027E
        gbc.setState(0x301a, 0xb91a, 0x5b50, 0xd370, 0xfba9, 0x5ec1, 0x1, 0x1);
        gbc.writeMem(0x301a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb91a);
        EXPECT(gbc.pc(), 0x301c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 027F
        gbc.setState(0x1058, 0x133d, 0xb570, 0xe489, 0x3ad9, 0x1acf, 0x0, 0x1);
        gbc.writeMem(0x1058, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x133d);
        EXPECT(gbc.pc(), 0x105a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0280
        gbc.setState(0xdfcb, 0xb979, 0x6ec0, 0x1cfd, 0x8f0b, 0xe1c5, 0x1, 0x0);
        gbc.writeMem(0xdfcb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb979);
        EXPECT(gbc.pc(), 0xdfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfcb), 0xcb);
        EXPECT(gbc.readMem(0xdfcc), 0xe4);
        // CB E4 0281
        gbc.setState(0xda42, 0x2f75, 0x4250, 0xcf39, 0x7ec9, 0x53dd, 0x0, 0x0);
        gbc.writeMem(0xda42, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2f75);
        EXPECT(gbc.pc(), 0xda44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda42), 0xcb);
        EXPECT(gbc.readMem(0xda43), 0xe4);
        // CB E4 0282
        gbc.setState(0x8d5c, 0xf2eb, 0x6430, 0xc04, 0x5768, 0x1455, 0x1, 0x0);
        gbc.writeMem(0x8d5c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf2eb);
        EXPECT(gbc.pc(), 0x8d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5c), 0xcb);
        EXPECT(gbc.readMem(0x8d5d), 0xe4);
        // CB E4 0283
        gbc.setState(0xe376, 0x9a89, 0xd610, 0xe00, 0x212f, 0x10b3, 0x1, 0x0);
        gbc.writeMem(0xe376, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9a89);
        EXPECT(gbc.pc(), 0xe378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe376), 0xcb);
        EXPECT(gbc.readMem(0xe377), 0xe4);
        // CB E4 0284
        gbc.setState(0x3fb4, 0x9732, 0xe040, 0xcb98, 0x346b, 0x2099, 0x0, 0x1);
        gbc.writeMem(0x3fb4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9732);
        EXPECT(gbc.pc(), 0x3fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0285
        gbc.setState(0xaaf7, 0x81bc, 0x3c00, 0xaa41, 0xe74c, 0x82f0, 0x0, 0x0);
        gbc.writeMem(0xaaf7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x81bc);
        EXPECT(gbc.pc(), 0xaaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf7), 0xcb);
        EXPECT(gbc.readMem(0xaaf8), 0xe4);
        // CB E4 0286
        gbc.setState(0x6cc9, 0xee85, 0x5420, 0x768a, 0x1089, 0xfd37, 0x0, 0x0);
        gbc.writeMem(0x6cc9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xee85);
        EXPECT(gbc.pc(), 0x6ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0287
        gbc.setState(0xbfbe, 0xc069, 0x98b0, 0xc40d, 0x2e2d, 0x1457, 0x1, 0x0);
        gbc.writeMem(0xbfbe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc069);
        EXPECT(gbc.pc(), 0xbfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbe), 0xcb);
        EXPECT(gbc.readMem(0xbfbf), 0xe4);
        // CB E4 0288
        gbc.setState(0xbd71, 0x7ebb, 0xd1a0, 0xc0c5, 0xdbd9, 0x671e, 0x1, 0x0);
        gbc.writeMem(0xbd71, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7ebb);
        EXPECT(gbc.pc(), 0xbd73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd71), 0xcb);
        EXPECT(gbc.readMem(0xbd72), 0xe4);
        // CB E4 0289
        gbc.setState(0x4f7f, 0x26ff, 0x7170, 0xf2a6, 0x5636, 0xbef0, 0x1, 0x1);
        gbc.writeMem(0x4f7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x26ff);
        EXPECT(gbc.pc(), 0x4f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 028B
        gbc.setState(0x80d2, 0xea87, 0xecc0, 0xfa92, 0x8ce5, 0xa5ae, 0x1, 0x1);
        gbc.writeMem(0x80d2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xea87);
        EXPECT(gbc.pc(), 0x80d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d2), 0xcb);
        EXPECT(gbc.readMem(0x80d3), 0xe4);
        // CB E4 028C
        gbc.setState(0x5a08, 0x7d88, 0x23a0, 0x318e, 0xa675, 0xa161, 0x0, 0x1);
        gbc.writeMem(0x5a08, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7d88);
        EXPECT(gbc.pc(), 0x5a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 028D
        gbc.setState(0x2e6f, 0x52aa, 0x6e10, 0x8d12, 0x7a34, 0xb52e, 0x0, 0x1);
        gbc.writeMem(0x2e6f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x52aa);
        EXPECT(gbc.pc(), 0x2e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 028E
        gbc.setState(0xa788, 0x55e2, 0xa0d0, 0xabf9, 0xe5ad, 0x10e7, 0x1, 0x0);
        gbc.writeMem(0xa788, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x55e2);
        EXPECT(gbc.pc(), 0xa78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa788), 0xcb);
        EXPECT(gbc.readMem(0xa789), 0xe4);
        // CB E4 028F
        gbc.setState(0x322c, 0x74bc, 0x6a0, 0x1334, 0xe9bd, 0x1530, 0x0, 0x1);
        gbc.writeMem(0x322c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x74bc);
        EXPECT(gbc.pc(), 0x322e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0290
        gbc.setState(0x6295, 0xb9e6, 0xe550, 0xbe1, 0x83c1, 0x4a80, 0x0, 0x0);
        gbc.writeMem(0x6295, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb9e6);
        EXPECT(gbc.pc(), 0x6297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0291
        gbc.setState(0xe0e9, 0x486f, 0xa6a0, 0xc9f4, 0x4039, 0x2619, 0x1, 0x1);
        gbc.writeMem(0xe0e9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x486f);
        EXPECT(gbc.pc(), 0xe0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e9), 0xcb);
        EXPECT(gbc.readMem(0xe0ea), 0xe4);
        // CB E4 0292
        gbc.setState(0xba1f, 0xf51b, 0x39d0, 0x73b0, 0x288e, 0x7a0f, 0x0, 0x0);
        gbc.writeMem(0xba1f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf51b);
        EXPECT(gbc.pc(), 0xba21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1f), 0xcb);
        EXPECT(gbc.readMem(0xba20), 0xe4);
        // CB E4 0293
        gbc.setState(0x34ed, 0xc008, 0x2fe0, 0x567f, 0xfc30, 0x3690, 0x0, 0x0);
        gbc.writeMem(0x34ed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc008);
        EXPECT(gbc.pc(), 0x34ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0294
        gbc.setState(0x2a41, 0xd62f, 0x6a60, 0xa97e, 0x4ea7, 0x9a24, 0x0, 0x0);
        gbc.writeMem(0x2a41, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd62f);
        EXPECT(gbc.pc(), 0x2a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0295
        gbc.setState(0x1408, 0x43b6, 0xed60, 0xd14f, 0xa15a, 0xb857, 0x1, 0x1);
        gbc.writeMem(0x1408, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x43b6);
        EXPECT(gbc.pc(), 0x140a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0296
        gbc.setState(0x4583, 0x2d27, 0x21a0, 0x34ad, 0x33e2, 0xf0da, 0x1, 0x1);
        gbc.writeMem(0x4583, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2d27);
        EXPECT(gbc.pc(), 0x4585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0297
        gbc.setState(0x23ce, 0xcc45, 0xbc90, 0xd3bf, 0x31bf, 0x774a, 0x1, 0x1);
        gbc.writeMem(0x23ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcc45);
        EXPECT(gbc.pc(), 0x23d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0298
        gbc.setState(0xd9a9, 0x85c5, 0x2190, 0x599c, 0x4178, 0xd286, 0x1, 0x1);
        gbc.writeMem(0xd9a9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x85c5);
        EXPECT(gbc.pc(), 0xd9ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a9), 0xcb);
        EXPECT(gbc.readMem(0xd9aa), 0xe4);
        // CB E4 0299
        gbc.setState(0x6624, 0xf09, 0xb800, 0x9dd8, 0x3fdd, 0x47a8, 0x1, 0x1);
        gbc.writeMem(0x6624, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf09);
        EXPECT(gbc.pc(), 0x6626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 029A
        gbc.setState(0x49c9, 0x184c, 0x9ed0, 0x8c13, 0x98f1, 0x528d, 0x0, 0x1);
        gbc.writeMem(0x49c9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x184c);
        EXPECT(gbc.pc(), 0x49cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 029B
        gbc.setState(0x487, 0xf309, 0x8600, 0x87e4, 0xd153, 0xe60b, 0x1, 0x1);
        gbc.writeMem(0x487, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf309);
        EXPECT(gbc.pc(), 0x489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 029C
        gbc.setState(0xd291, 0x7c8b, 0x3c10, 0x6f74, 0xa7a, 0xeb2, 0x1, 0x1);
        gbc.writeMem(0xd291, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7c8b);
        EXPECT(gbc.pc(), 0xd293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd291), 0xcb);
        EXPECT(gbc.readMem(0xd292), 0xe4);
        // CB E4 029D
        gbc.setState(0x3b7e, 0x2ac0, 0x30d0, 0xe356, 0x3b88, 0xc93b, 0x1, 0x1);
        gbc.writeMem(0x3b7e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2ac0);
        EXPECT(gbc.pc(), 0x3b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 029E
        gbc.setState(0x41b4, 0xbddb, 0xb660, 0xf1fc, 0xe2c4, 0xb822, 0x0, 0x0);
        gbc.writeMem(0x41b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbddb);
        EXPECT(gbc.pc(), 0x41b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 029F
        gbc.setState(0x1367, 0xd16f, 0xdb50, 0xb90, 0xcc88, 0xc822, 0x0, 0x0);
        gbc.writeMem(0x1367, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd16f);
        EXPECT(gbc.pc(), 0x1369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02A0
        gbc.setState(0xb295, 0x2d95, 0x6a40, 0x99da, 0xbea1, 0x17d6, 0x1, 0x0);
        gbc.writeMem(0xb295, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2d95);
        EXPECT(gbc.pc(), 0xb297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb295), 0xcb);
        EXPECT(gbc.readMem(0xb296), 0xe4);
        // CB E4 02A1
        gbc.setState(0xbc36, 0x3eac, 0xd2a0, 0xb6e, 0x47ea, 0x708d, 0x1, 0x1);
        gbc.writeMem(0xbc36, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3eac);
        EXPECT(gbc.pc(), 0xbc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc36), 0xcb);
        EXPECT(gbc.readMem(0xbc37), 0xe4);
        // CB E4 02A2
        gbc.setState(0x2465, 0x8512, 0x100, 0xf764, 0x5aa4, 0xf68, 0x0, 0x0);
        gbc.writeMem(0x2465, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8512);
        EXPECT(gbc.pc(), 0x2467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02A3
        gbc.setState(0x1ee4, 0x5ea, 0xca0, 0x9eb0, 0xe775, 0xbfd5, 0x1, 0x0);
        gbc.writeMem(0x1ee4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5ea);
        EXPECT(gbc.pc(), 0x1ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02A4
        gbc.setState(0xd7a2, 0x757c, 0x6290, 0x8852, 0x189a, 0xb55f, 0x1, 0x1);
        gbc.writeMem(0xd7a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x757c);
        EXPECT(gbc.pc(), 0xd7a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a2), 0xcb);
        EXPECT(gbc.readMem(0xd7a3), 0xe4);
        // CB E4 02A6
        gbc.setState(0xeb6c, 0x415d, 0x48f0, 0x11, 0xa038, 0x926d, 0x0, 0x1);
        gbc.writeMem(0xeb6c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x415d);
        EXPECT(gbc.pc(), 0xeb6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6c), 0xcb);
        EXPECT(gbc.readMem(0xeb6d), 0xe4);
        // CB E4 02A7
        gbc.setState(0x75eb, 0xad03, 0xf500, 0x511b, 0x20dc, 0x5316, 0x1, 0x1);
        gbc.writeMem(0x75eb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xad03);
        EXPECT(gbc.pc(), 0x75ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02A8
        gbc.setState(0x4ff8, 0x7685, 0x4bc0, 0x2050, 0xa899, 0xfb09, 0x0, 0x1);
        gbc.writeMem(0x4ff8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7685);
        EXPECT(gbc.pc(), 0x4ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02A9
        gbc.setState(0x49fb, 0xfb53, 0xbcc0, 0xc22f, 0x26fb, 0x9864, 0x0, 0x1);
        gbc.writeMem(0x49fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfb53);
        EXPECT(gbc.pc(), 0x49fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02AA
        gbc.setState(0x89, 0xb122, 0xa1a0, 0xa3b7, 0x9b10, 0xd9c3, 0x0, 0x0);
        gbc.writeMem(0x89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb122);
        EXPECT(gbc.pc(), 0x8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02AB
        gbc.setState(0x5a3b, 0x8b5, 0xbad0, 0xe6a2, 0x37b5, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0x5a3b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8b5);
        EXPECT(gbc.pc(), 0x5a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02AC
        gbc.setState(0xd6fb, 0xbbc2, 0x18a0, 0xe327, 0x5843, 0xd79e, 0x0, 0x1);
        gbc.writeMem(0xd6fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbbc2);
        EXPECT(gbc.pc(), 0xd6fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6fb), 0xcb);
        EXPECT(gbc.readMem(0xd6fc), 0xe4);
        // CB E4 02AD
        gbc.setState(0x2cef, 0x1855, 0x9ba0, 0xcc10, 0xa032, 0x53a3, 0x0, 0x0);
        gbc.writeMem(0x2cef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1855);
        EXPECT(gbc.pc(), 0x2cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02AE
        gbc.setState(0x8edf, 0xca1d, 0x8a20, 0x8d0b, 0xc9b1, 0xc074, 0x1, 0x0);
        gbc.writeMem(0x8edf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xca1d);
        EXPECT(gbc.pc(), 0x8ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8edf), 0xcb);
        EXPECT(gbc.readMem(0x8ee0), 0xe4);
        // CB E4 02AF
        gbc.setState(0xe9b7, 0x9e01, 0x6e40, 0x15aa, 0x3748, 0x6c5c, 0x1, 0x1);
        gbc.writeMem(0xe9b7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9e01);
        EXPECT(gbc.pc(), 0xe9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b7), 0xcb);
        EXPECT(gbc.readMem(0xe9b8), 0xe4);
        // CB E4 02B0
        gbc.setState(0x84fd, 0xb37e, 0x3670, 0xe0a1, 0xde4e, 0xfb7f, 0x1, 0x0);
        gbc.writeMem(0x84fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb37e);
        EXPECT(gbc.pc(), 0x84ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fd), 0xcb);
        EXPECT(gbc.readMem(0x84fe), 0xe4);
        // CB E4 02B1
        gbc.setState(0xa2cf, 0xa22b, 0xf2c0, 0x43e9, 0x3749, 0x3265, 0x1, 0x1);
        gbc.writeMem(0xa2cf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa22b);
        EXPECT(gbc.pc(), 0xa2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2cf), 0xcb);
        EXPECT(gbc.readMem(0xa2d0), 0xe4);
        // CB E4 02B2
        gbc.setState(0x8a5, 0x20dc, 0x9fe0, 0x8612, 0x2172, 0xdaf9, 0x1, 0x1);
        gbc.writeMem(0x8a5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x20dc);
        EXPECT(gbc.pc(), 0x8a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02B3
        gbc.setState(0x2e9a, 0x6adc, 0x5710, 0x806a, 0x5bd8, 0xd0ef, 0x0, 0x1);
        gbc.writeMem(0x2e9a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6adc);
        EXPECT(gbc.pc(), 0x2e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02B4
        gbc.setState(0x19bb, 0x19af, 0xcdf0, 0x9582, 0x62c2, 0x7546, 0x0, 0x1);
        gbc.writeMem(0x19bb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x19af);
        EXPECT(gbc.pc(), 0x19bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02B5
        gbc.setState(0x36d2, 0xcfb2, 0x31d0, 0x4f12, 0xa96a, 0x5adb, 0x0, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcfb2);
        EXPECT(gbc.pc(), 0x36d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02B6
        gbc.setState(0x5b3, 0x49d8, 0x7130, 0xedce, 0xe88e, 0xb03c, 0x1, 0x1);
        gbc.writeMem(0x5b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x49d8);
        EXPECT(gbc.pc(), 0x5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02B7
        gbc.setState(0x2a8f, 0x1757, 0xe8e0, 0xf9ad, 0xf0d0, 0x5766, 0x1, 0x0);
        gbc.writeMem(0x2a8f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1757);
        EXPECT(gbc.pc(), 0x2a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02B8
        gbc.setState(0x3ff1, 0x3c12, 0x18c0, 0xd448, 0xeebf, 0x2053, 0x0, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3c12);
        EXPECT(gbc.pc(), 0x3ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02B9
        gbc.setState(0xae06, 0xbb85, 0x3910, 0xfc14, 0x496c, 0x89ee, 0x0, 0x1);
        gbc.writeMem(0xae06, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbb85);
        EXPECT(gbc.pc(), 0xae08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae06), 0xcb);
        EXPECT(gbc.readMem(0xae07), 0xe4);
        // CB E4 02BA
        gbc.setState(0x1209, 0x6996, 0xafa0, 0x3245, 0x5045, 0x69d9, 0x0, 0x1);
        gbc.writeMem(0x1209, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6996);
        EXPECT(gbc.pc(), 0x120b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02BB
        gbc.setState(0x76fc, 0xae9f, 0x6df0, 0x2cb8, 0x8521, 0x518b, 0x0, 0x1);
        gbc.writeMem(0x76fc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xae9f);
        EXPECT(gbc.pc(), 0x76fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02BC
        gbc.setState(0xe24a, 0xd9e6, 0x7ae0, 0x71bf, 0x422d, 0xb805, 0x0, 0x1);
        gbc.writeMem(0xe24a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd9e6);
        EXPECT(gbc.pc(), 0xe24c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24a), 0xcb);
        EXPECT(gbc.readMem(0xe24b), 0xe4);
        // CB E4 02BD
        gbc.setState(0x308b, 0xa702, 0x36f0, 0xb3f6, 0x9717, 0xb30d, 0x1, 0x0);
        gbc.writeMem(0x308b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa702);
        EXPECT(gbc.pc(), 0x308d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02BE
        gbc.setState(0x76f8, 0x7c37, 0x5a60, 0x5f18, 0xd646, 0x85a9, 0x0, 0x1);
        gbc.writeMem(0x76f8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7c37);
        EXPECT(gbc.pc(), 0x76fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02BF
        gbc.setState(0xe0a, 0x1211, 0x4b70, 0xfc39, 0x4e94, 0x94a8, 0x1, 0x0);
        gbc.writeMem(0xe0a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1211);
        EXPECT(gbc.pc(), 0xe0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02C0
        gbc.setState(0x6307, 0xdfc2, 0x1260, 0x83, 0x1f53, 0x4c3d, 0x1, 0x0);
        gbc.writeMem(0x6307, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdfc2);
        EXPECT(gbc.pc(), 0x6309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02C1
        gbc.setState(0x75fa, 0x7dd8, 0xaf90, 0x4d4c, 0xcb27, 0xe813, 0x1, 0x0);
        gbc.writeMem(0x75fa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7dd8);
        EXPECT(gbc.pc(), 0x75fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02C2
        gbc.setState(0x8057, 0x3961, 0x1c20, 0x4d5e, 0x2515, 0xf2fe, 0x1, 0x0);
        gbc.writeMem(0x8057, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3961);
        EXPECT(gbc.pc(), 0x8059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8057), 0xcb);
        EXPECT(gbc.readMem(0x8058), 0xe4);
        // CB E4 02C3
        gbc.setState(0xdc37, 0xdd3b, 0xf020, 0xfa03, 0xcd91, 0xfc59, 0x0, 0x1);
        gbc.writeMem(0xdc37, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdd3b);
        EXPECT(gbc.pc(), 0xdc39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc37), 0xcb);
        EXPECT(gbc.readMem(0xdc38), 0xe4);
        // CB E4 02C4
        gbc.setState(0x2468, 0x3740, 0x5c70, 0x1e18, 0x672f, 0xa61e, 0x0, 0x0);
        gbc.writeMem(0x2468, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3740);
        EXPECT(gbc.pc(), 0x246a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02C5
        gbc.setState(0x5fad, 0x5fcc, 0x6a60, 0x3880, 0xf798, 0x79b4, 0x0, 0x0);
        gbc.writeMem(0x5fad, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5fcc);
        EXPECT(gbc.pc(), 0x5faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02C6
        gbc.setState(0xda90, 0x44ed, 0x9da0, 0x3ccd, 0x9968, 0x9812, 0x1, 0x1);
        gbc.writeMem(0xda90, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x44ed);
        EXPECT(gbc.pc(), 0xda92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda90), 0xcb);
        EXPECT(gbc.readMem(0xda91), 0xe4);
        // CB E4 02C8
        gbc.setState(0xb981, 0x2f42, 0x7340, 0xf3c5, 0x181b, 0x92ad, 0x1, 0x0);
        gbc.writeMem(0xb981, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2f42);
        EXPECT(gbc.pc(), 0xb983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb981), 0xcb);
        EXPECT(gbc.readMem(0xb982), 0xe4);
        // CB E4 02C9
        gbc.setState(0x814f, 0x9410, 0x9bb0, 0x83c9, 0xe544, 0x4e6f, 0x0, 0x1);
        gbc.writeMem(0x814f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9410);
        EXPECT(gbc.pc(), 0x8151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814f), 0xcb);
        EXPECT(gbc.readMem(0x8150), 0xe4);
        // CB E4 02CA
        gbc.setState(0x7c56, 0xe2af, 0x7cb0, 0x6e2c, 0x5040, 0x32b0, 0x0, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe2af);
        EXPECT(gbc.pc(), 0x7c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02CB
        gbc.setState(0x493b, 0x42a6, 0xd260, 0xeae4, 0xaf8b, 0x7fd6, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x42a6);
        EXPECT(gbc.pc(), 0x493d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02CC
        gbc.setState(0x5221, 0xd7c1, 0x1780, 0xcd0f, 0x13c6, 0xe814, 0x1, 0x1);
        gbc.writeMem(0x5221, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd7c1);
        EXPECT(gbc.pc(), 0x5223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02CD
        gbc.setState(0x1557, 0x9670, 0x71f0, 0xd457, 0x53db, 0xf87a, 0x0, 0x1);
        gbc.writeMem(0x1557, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9670);
        EXPECT(gbc.pc(), 0x1559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02CE
        gbc.setState(0x9eb1, 0x72a3, 0x26f0, 0xf0e2, 0x6b, 0x62d7, 0x1, 0x0);
        gbc.writeMem(0x9eb1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x72a3);
        EXPECT(gbc.pc(), 0x9eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb1), 0xcb);
        EXPECT(gbc.readMem(0x9eb2), 0xe4);
        // CB E4 02CF
        gbc.setState(0x7548, 0xc321, 0xd4c0, 0x54ec, 0xae92, 0x3ae4, 0x0, 0x0);
        gbc.writeMem(0x7548, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc321);
        EXPECT(gbc.pc(), 0x754a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02D0
        gbc.setState(0x6dc, 0xc54d, 0xaea0, 0x63c2, 0x8631, 0x8e3d, 0x1, 0x0);
        gbc.writeMem(0x6dc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc54d);
        EXPECT(gbc.pc(), 0x6de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02D1
        gbc.setState(0x34d1, 0x2450, 0x7f90, 0x7eae, 0x5e25, 0x204f, 0x0, 0x1);
        gbc.writeMem(0x34d1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2450);
        EXPECT(gbc.pc(), 0x34d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02D2
        gbc.setState(0xa421, 0xb0ff, 0xbc90, 0x9715, 0x57c2, 0x390f, 0x0, 0x1);
        gbc.writeMem(0xa421, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb0ff);
        EXPECT(gbc.pc(), 0xa423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa421), 0xcb);
        EXPECT(gbc.readMem(0xa422), 0xe4);
        // CB E4 02D3
        gbc.setState(0xb0a2, 0xd839, 0x2550, 0xaf03, 0x8595, 0x8aa5, 0x0, 0x0);
        gbc.writeMem(0xb0a2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd839);
        EXPECT(gbc.pc(), 0xb0a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a2), 0xcb);
        EXPECT(gbc.readMem(0xb0a3), 0xe4);
        // CB E4 02D4
        gbc.setState(0xd157, 0xc018, 0x44b0, 0x8ee8, 0xedf3, 0x23c2, 0x0, 0x0);
        gbc.writeMem(0xd157, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc018);
        EXPECT(gbc.pc(), 0xd159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd157), 0xcb);
        EXPECT(gbc.readMem(0xd158), 0xe4);
        // CB E4 02D5
        gbc.setState(0x3d60, 0x2eb8, 0xcba0, 0xecd7, 0x6b20, 0xa29c, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2eb8);
        EXPECT(gbc.pc(), 0x3d62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02D7
        gbc.setState(0x76e8, 0x343e, 0xddf0, 0xa568, 0x3dff, 0xc87a, 0x0, 0x0);
        gbc.writeMem(0x76e8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x343e);
        EXPECT(gbc.pc(), 0x76ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02D8
        gbc.setState(0x19a0, 0x1b14, 0x6750, 0x4ea0, 0xbd0e, 0x6f7c, 0x0, 0x0);
        gbc.writeMem(0x19a0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1b14);
        EXPECT(gbc.pc(), 0x19a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02D9
        gbc.setState(0x9289, 0x6023, 0xa530, 0xd286, 0x306, 0xbd70, 0x0, 0x1);
        gbc.writeMem(0x9289, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6023);
        EXPECT(gbc.pc(), 0x928b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9289), 0xcb);
        EXPECT(gbc.readMem(0x928a), 0xe4);
        // CB E4 02DA
        gbc.setState(0x2d0b, 0x77d3, 0x4240, 0x6e00, 0x3eca, 0x9ec3, 0x0, 0x0);
        gbc.writeMem(0x2d0b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x77d3);
        EXPECT(gbc.pc(), 0x2d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02DB
        gbc.setState(0x13f, 0xed80, 0xe230, 0xd761, 0x5ab2, 0x72b, 0x1, 0x0);
        gbc.writeMem(0x13f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xed80);
        EXPECT(gbc.pc(), 0x141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02DC
        gbc.setState(0x9f9, 0x5d35, 0x2f0, 0x6284, 0x9009, 0xc5e9, 0x1, 0x1);
        gbc.writeMem(0x9f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5d35);
        EXPECT(gbc.pc(), 0x9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02DD
        gbc.setState(0xd27, 0x3dce, 0xfbc0, 0x9daa, 0x1081, 0xb28c, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3dce);
        EXPECT(gbc.pc(), 0xd29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02DE
        gbc.setState(0x247b, 0xee70, 0x9ed0, 0xa208, 0x23d, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0x247b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xee70);
        EXPECT(gbc.pc(), 0x247d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02E0
        gbc.setState(0xa6f0, 0xbfc9, 0xb620, 0x8145, 0xe75, 0xed21, 0x1, 0x1);
        gbc.writeMem(0xa6f0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbfc9);
        EXPECT(gbc.pc(), 0xa6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f0), 0xcb);
        EXPECT(gbc.readMem(0xa6f1), 0xe4);
        // CB E4 02E1
        gbc.setState(0xa23b, 0xdf3b, 0xd470, 0x8586, 0x65d8, 0x30da, 0x1, 0x0);
        gbc.writeMem(0xa23b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdf3b);
        EXPECT(gbc.pc(), 0xa23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa23b), 0xcb);
        EXPECT(gbc.readMem(0xa23c), 0xe4);
        // CB E4 02E2
        gbc.setState(0x1fa4, 0x4032, 0x64e0, 0x6f01, 0x3a24, 0x5ab3, 0x1, 0x1);
        gbc.writeMem(0x1fa4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4032);
        EXPECT(gbc.pc(), 0x1fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02E3
        gbc.setState(0x4f1f, 0x6208, 0x28d0, 0x96a9, 0x4152, 0xd649, 0x0, 0x0);
        gbc.writeMem(0x4f1f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6208);
        EXPECT(gbc.pc(), 0x4f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02E4
        gbc.setState(0x22b, 0x45ea, 0x43b0, 0x369e, 0xc0ea, 0x8606, 0x1, 0x1);
        gbc.writeMem(0x22b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x45ea);
        EXPECT(gbc.pc(), 0x22d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02E5
        gbc.setState(0x927, 0x7c57, 0xe380, 0xc62e, 0x5e9, 0x7179, 0x0, 0x1);
        gbc.writeMem(0x927, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7c57);
        EXPECT(gbc.pc(), 0x929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02E6
        gbc.setState(0x12f5, 0x2ca7, 0xd030, 0x77e7, 0x70d8, 0x2ae5, 0x0, 0x0);
        gbc.writeMem(0x12f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2ca7);
        EXPECT(gbc.pc(), 0x12f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02E7
        gbc.setState(0xda30, 0x820d, 0x5140, 0x6cfd, 0x369a, 0xeb28, 0x0, 0x0);
        gbc.writeMem(0xda30, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x820d);
        EXPECT(gbc.pc(), 0xda32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda30), 0xcb);
        EXPECT(gbc.readMem(0xda31), 0xe4);
        // CB E4 02E8
        gbc.setState(0xe472, 0x7bb0, 0x53e0, 0xef03, 0x7dfe, 0xd7de, 0x1, 0x0);
        gbc.writeMem(0xe472, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7bb0);
        EXPECT(gbc.pc(), 0xe474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe472), 0xcb);
        EXPECT(gbc.readMem(0xe473), 0xe4);
        // CB E4 02E9
        gbc.setState(0x3178, 0x3112, 0x6330, 0x53c8, 0x2a13, 0xbc4c, 0x0, 0x1);
        gbc.writeMem(0x3178, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3112);
        EXPECT(gbc.pc(), 0x317a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02EA
        gbc.setState(0xc9ff, 0x9ddb, 0x1960, 0x31d0, 0x4a19, 0x3e64, 0x0, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9ddb);
        EXPECT(gbc.pc(), 0xca01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ff), 0xcb);
        EXPECT(gbc.readMem(0xca00), 0xe4);
        // CB E4 02EB
        gbc.setState(0xddb5, 0xa5cb, 0x5230, 0xc724, 0xcd29, 0x10fe, 0x1, 0x0);
        gbc.writeMem(0xddb5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa5cb);
        EXPECT(gbc.pc(), 0xddb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb5), 0xcb);
        EXPECT(gbc.readMem(0xddb6), 0xe4);
        // CB E4 02EC
        gbc.setState(0x7a40, 0xa779, 0xb4d0, 0x2eae, 0xe9d4, 0xfdb8, 0x1, 0x1);
        gbc.writeMem(0x7a40, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa779);
        EXPECT(gbc.pc(), 0x7a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02ED
        gbc.setState(0xca75, 0x95d6, 0x5b50, 0xb2a7, 0xe07d, 0xfdfe, 0x1, 0x1);
        gbc.writeMem(0xca75, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x95d6);
        EXPECT(gbc.pc(), 0xca77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca75), 0xcb);
        EXPECT(gbc.readMem(0xca76), 0xe4);
        // CB E4 02EE
        gbc.setState(0x192c, 0xa011, 0xa9d0, 0x3528, 0x1f2e, 0x8103, 0x0, 0x1);
        gbc.writeMem(0x192c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa011);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02EF
        gbc.setState(0xc1c8, 0xed8b, 0x14f0, 0x8983, 0x4090, 0x8c56, 0x0, 0x0);
        gbc.writeMem(0xc1c8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xed8b);
        EXPECT(gbc.pc(), 0xc1ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c8), 0xcb);
        EXPECT(gbc.readMem(0xc1c9), 0xe4);
        // CB E4 02F0
        gbc.setState(0x5cf8, 0x3f60, 0x5010, 0xa2a0, 0x678b, 0xbeda, 0x1, 0x1);
        gbc.writeMem(0x5cf8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3f60);
        EXPECT(gbc.pc(), 0x5cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02F1
        gbc.setState(0xc8e6, 0x9259, 0xe720, 0xf33a, 0x23ed, 0x847a, 0x0, 0x1);
        gbc.writeMem(0xc8e6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9259);
        EXPECT(gbc.pc(), 0xc8e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e6), 0xcb);
        EXPECT(gbc.readMem(0xc8e7), 0xe4);
        // CB E4 02F2
        gbc.setState(0xb2b2, 0xa351, 0x8700, 0x98a9, 0x9ab, 0x7dc6, 0x0, 0x0);
        gbc.writeMem(0xb2b2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa351);
        EXPECT(gbc.pc(), 0xb2b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b2), 0xcb);
        EXPECT(gbc.readMem(0xb2b3), 0xe4);
        // CB E4 02F3
        gbc.setState(0x21f5, 0x61ef, 0xfbf0, 0xd2e8, 0xcc88, 0xf8b9, 0x1, 0x0);
        gbc.writeMem(0x21f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x61ef);
        EXPECT(gbc.pc(), 0x21f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02F4
        gbc.setState(0xeac4, 0xa43d, 0xd4c0, 0x6f98, 0xd516, 0xd5da, 0x1, 0x1);
        gbc.writeMem(0xeac4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa43d);
        EXPECT(gbc.pc(), 0xeac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac4), 0xcb);
        EXPECT(gbc.readMem(0xeac5), 0xe4);
        // CB E4 02F5
        gbc.setState(0x88c8, 0xf7d, 0xd6c0, 0x91f1, 0xdb3b, 0x45c3, 0x0, 0x1);
        gbc.writeMem(0x88c8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf7d);
        EXPECT(gbc.pc(), 0x88ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c8), 0xcb);
        EXPECT(gbc.readMem(0x88c9), 0xe4);
        // CB E4 02F6
        gbc.setState(0x6fc9, 0x2303, 0x6810, 0xa5db, 0x278c, 0x630c, 0x0, 0x0);
        gbc.writeMem(0x6fc9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2303);
        EXPECT(gbc.pc(), 0x6fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02F7
        gbc.setState(0x57c6, 0x5004, 0xb830, 0xc571, 0xc99a, 0x826f, 0x1, 0x0);
        gbc.writeMem(0x57c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5004);
        EXPECT(gbc.pc(), 0x57c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02F8
        gbc.setState(0x9f63, 0xd6cc, 0x6a60, 0xf235, 0xad75, 0x3d44, 0x0, 0x0);
        gbc.writeMem(0x9f63, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd6cc);
        EXPECT(gbc.pc(), 0x9f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f63), 0xcb);
        EXPECT(gbc.readMem(0x9f64), 0xe4);
        // CB E4 02F9
        gbc.setState(0xa0fa, 0xe54c, 0xb2d0, 0x750d, 0x968f, 0xff01, 0x1, 0x1);
        gbc.writeMem(0xa0fa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe54c);
        EXPECT(gbc.pc(), 0xa0fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fa), 0xcb);
        EXPECT(gbc.readMem(0xa0fb), 0xe4);
        // CB E4 02FA
        gbc.setState(0x622, 0x25f2, 0xeab0, 0x77bb, 0xe465, 0x5c54, 0x0, 0x0);
        gbc.writeMem(0x622, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x25f2);
        EXPECT(gbc.pc(), 0x624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 02FB
        gbc.setState(0xa710, 0x9c2, 0xc4d0, 0x1f84, 0xfbd7, 0x51be, 0x1, 0x0);
        gbc.writeMem(0xa710, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9c2);
        EXPECT(gbc.pc(), 0xa712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa710), 0xcb);
        EXPECT(gbc.readMem(0xa711), 0xe4);
        // CB E4 02FC
        gbc.setState(0x99de, 0x7f8f, 0x6300, 0x3d40, 0x4a16, 0xdb8b, 0x1, 0x1);
        gbc.writeMem(0x99de, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7f8f);
        EXPECT(gbc.pc(), 0x99e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99de), 0xcb);
        EXPECT(gbc.readMem(0x99df), 0xe4);
        // CB E4 02FD
        gbc.setState(0xc8da, 0x8267, 0xaf50, 0x664, 0x664b, 0x881b, 0x1, 0x1);
        gbc.writeMem(0xc8da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8267);
        EXPECT(gbc.pc(), 0xc8dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8da), 0xcb);
        EXPECT(gbc.readMem(0xc8db), 0xe4);
        // CB E4 02FE
        gbc.setState(0x60b5, 0x837d, 0xf880, 0x772a, 0x2400, 0x3068, 0x1, 0x0);
        gbc.writeMem(0x60b5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x837d);
        EXPECT(gbc.pc(), 0x60b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 02FF
        gbc.setState(0x6bf9, 0xdef5, 0x5ec0, 0x9805, 0x5f61, 0x517f, 0x1, 0x1);
        gbc.writeMem(0x6bf9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdef5);
        EXPECT(gbc.pc(), 0x6bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0300
        gbc.setState(0xb514, 0x5348, 0xbdb0, 0xb8f0, 0x67b5, 0x5cd, 0x1, 0x1);
        gbc.writeMem(0xb514, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5348);
        EXPECT(gbc.pc(), 0xb516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb514), 0xcb);
        EXPECT(gbc.readMem(0xb515), 0xe4);
        // CB E4 0301
        gbc.setState(0x6e72, 0xe38b, 0xfc80, 0xdea4, 0x4e18, 0xfe1a, 0x0, 0x1);
        gbc.writeMem(0x6e72, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe38b);
        EXPECT(gbc.pc(), 0x6e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0302
        gbc.setState(0x1954, 0xfdb9, 0x4530, 0x9094, 0x7017, 0xd446, 0x0, 0x1);
        gbc.writeMem(0x1954, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfdb9);
        EXPECT(gbc.pc(), 0x1956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0303
        gbc.setState(0xc323, 0x5dbc, 0x32d0, 0xee4e, 0xc021, 0x9818, 0x0, 0x0);
        gbc.writeMem(0xc323, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5dbc);
        EXPECT(gbc.pc(), 0xc325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc323), 0xcb);
        EXPECT(gbc.readMem(0xc324), 0xe4);
        // CB E4 0304
        gbc.setState(0xa7f7, 0x5c39, 0xe90, 0xe70f, 0xfa14, 0x573d, 0x0, 0x0);
        gbc.writeMem(0xa7f7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5c39);
        EXPECT(gbc.pc(), 0xa7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f7), 0xcb);
        EXPECT(gbc.readMem(0xa7f8), 0xe4);
        // CB E4 0305
        gbc.setState(0xbebf, 0xfa5a, 0xf320, 0xef4a, 0xe622, 0xddd6, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfa5a);
        EXPECT(gbc.pc(), 0xbec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebf), 0xcb);
        EXPECT(gbc.readMem(0xbec0), 0xe4);
        // CB E4 0306
        gbc.setState(0x72fb, 0xd5cc, 0x6090, 0x3a65, 0xfd44, 0xf6d, 0x0, 0x0);
        gbc.writeMem(0x72fb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd5cc);
        EXPECT(gbc.pc(), 0x72fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0307
        gbc.setState(0xd993, 0xe7c5, 0x8830, 0x99f, 0x2bb7, 0x50ad, 0x1, 0x1);
        gbc.writeMem(0xd993, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe7c5);
        EXPECT(gbc.pc(), 0xd995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd993), 0xcb);
        EXPECT(gbc.readMem(0xd994), 0xe4);
        // CB E4 0308
        gbc.setState(0x1f37, 0x9513, 0xc730, 0x3f4, 0xd205, 0x17fd, 0x1, 0x0);
        gbc.writeMem(0x1f37, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9513);
        EXPECT(gbc.pc(), 0x1f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0309
        gbc.setState(0x326, 0x7d7d, 0x9f20, 0x8535, 0x1618, 0x3e22, 0x1, 0x0);
        gbc.writeMem(0x326, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7d7d);
        EXPECT(gbc.pc(), 0x328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 030A
        gbc.setState(0x9231, 0xd370, 0xac20, 0x49d, 0x4b8a, 0x13a7, 0x0, 0x0);
        gbc.writeMem(0x9231, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd370);
        EXPECT(gbc.pc(), 0x9233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9231), 0xcb);
        EXPECT(gbc.readMem(0x9232), 0xe4);
        // CB E4 030B
        gbc.setState(0x5651, 0x2bd1, 0x5630, 0x4e65, 0xdd03, 0x6f65, 0x0, 0x0);
        gbc.writeMem(0x5651, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2bd1);
        EXPECT(gbc.pc(), 0x5653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 030C
        gbc.setState(0x26a5, 0x1fef, 0xcf40, 0xc817, 0xf71, 0x5f5, 0x1, 0x0);
        gbc.writeMem(0x26a5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1fef);
        EXPECT(gbc.pc(), 0x26a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 030D
        gbc.setState(0xc2d6, 0x8cc0, 0x77f0, 0x5eaf, 0xe2d0, 0xbc3d, 0x0, 0x1);
        gbc.writeMem(0xc2d6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8cc0);
        EXPECT(gbc.pc(), 0xc2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d6), 0xcb);
        EXPECT(gbc.readMem(0xc2d7), 0xe4);
        // CB E4 030F
        gbc.setState(0xd528, 0xd142, 0x8c30, 0x8015, 0xec17, 0x83d1, 0x1, 0x0);
        gbc.writeMem(0xd528, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd142);
        EXPECT(gbc.pc(), 0xd52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd528), 0xcb);
        EXPECT(gbc.readMem(0xd529), 0xe4);
        // CB E4 0310
        gbc.setState(0x71f9, 0x1d34, 0x6ef0, 0x2494, 0x2370, 0x2a4f, 0x1, 0x0);
        gbc.writeMem(0x71f9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1d34);
        EXPECT(gbc.pc(), 0x71fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0311
        gbc.setState(0x3562, 0xabc1, 0x6fd0, 0xe6f7, 0x27b8, 0xb84b, 0x0, 0x1);
        gbc.writeMem(0x3562, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xabc1);
        EXPECT(gbc.pc(), 0x3564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0312
        gbc.setState(0x2344, 0x1e18, 0xafc0, 0xfc7f, 0xe248, 0x7eb1, 0x0, 0x1);
        gbc.writeMem(0x2344, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1e18);
        EXPECT(gbc.pc(), 0x2346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0313
        gbc.setState(0x288f, 0x1475, 0x8110, 0x766e, 0xe95b, 0xd802, 0x1, 0x0);
        gbc.writeMem(0x288f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1475);
        EXPECT(gbc.pc(), 0x2891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0314
        gbc.setState(0x1c5b, 0xeb0a, 0xb490, 0x82dd, 0x6d66, 0xf6d8, 0x1, 0x1);
        gbc.writeMem(0x1c5b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xeb0a);
        EXPECT(gbc.pc(), 0x1c5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0315
        gbc.setState(0x84b6, 0x7f10, 0x48a0, 0x635d, 0xff40, 0x7e4b, 0x1, 0x0);
        gbc.writeMem(0x84b6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7f10);
        EXPECT(gbc.pc(), 0x84b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b6), 0xcb);
        EXPECT(gbc.readMem(0x84b7), 0xe4);
        // CB E4 0316
        gbc.setState(0x11dc, 0x2a84, 0xecf0, 0x5866, 0xda59, 0xecf0, 0x1, 0x1);
        gbc.writeMem(0x11dc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2a84);
        EXPECT(gbc.pc(), 0x11de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0317
        gbc.setState(0x85a1, 0xf4de, 0x220, 0x2fde, 0xb3b3, 0x872f, 0x1, 0x0);
        gbc.writeMem(0x85a1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf4de);
        EXPECT(gbc.pc(), 0x85a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a1), 0xcb);
        EXPECT(gbc.readMem(0x85a2), 0xe4);
        // CB E4 0318
        gbc.setState(0x70e2, 0xf355, 0x38f0, 0xd02a, 0xe0ea, 0x7041, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf355);
        EXPECT(gbc.pc(), 0x70e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0319
        gbc.setState(0x5fc3, 0x86f7, 0x9e20, 0xaaad, 0x7fff, 0xda72, 0x1, 0x0);
        gbc.writeMem(0x5fc3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x86f7);
        EXPECT(gbc.pc(), 0x5fc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 031A
        gbc.setState(0x860d, 0x53c9, 0xf690, 0xfd82, 0x4062, 0x513c, 0x1, 0x1);
        gbc.writeMem(0x860d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x53c9);
        EXPECT(gbc.pc(), 0x860f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860d), 0xcb);
        EXPECT(gbc.readMem(0x860e), 0xe4);
        // CB E4 031B
        gbc.setState(0x93b4, 0x5f34, 0x8ba0, 0x405, 0x6a5b, 0xede, 0x0, 0x1);
        gbc.writeMem(0x93b4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5f34);
        EXPECT(gbc.pc(), 0x93b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b4), 0xcb);
        EXPECT(gbc.readMem(0x93b5), 0xe4);
        // CB E4 031C
        gbc.setState(0x2be0, 0x765a, 0xc860, 0x10c1, 0x8d91, 0xe489, 0x1, 0x0);
        gbc.writeMem(0x2be0, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x765a);
        EXPECT(gbc.pc(), 0x2be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 031D
        gbc.setState(0xe90, 0x1290, 0xec50, 0x5bee, 0x31b0, 0xa756, 0x1, 0x0);
        gbc.writeMem(0xe90, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1290);
        EXPECT(gbc.pc(), 0xe92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 031E
        gbc.setState(0xabb7, 0x81bf, 0xc0d0, 0x7978, 0x28a1, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xabb7, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x81bf);
        EXPECT(gbc.pc(), 0xabb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb7), 0xcb);
        EXPECT(gbc.readMem(0xabb8), 0xe4);
        // CB E4 031F
        gbc.setState(0x6c00, 0xf17, 0xac50, 0xc45c, 0x5528, 0xf075, 0x1, 0x1);
        gbc.writeMem(0x6c00, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf17);
        EXPECT(gbc.pc(), 0x6c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0320
        gbc.setState(0x3b02, 0x6efe, 0x5f50, 0x995a, 0x820f, 0xe480, 0x1, 0x1);
        gbc.writeMem(0x3b02, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6efe);
        EXPECT(gbc.pc(), 0x3b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0321
        gbc.setState(0xa7f5, 0x2dfd, 0x3a10, 0x906, 0x6742, 0xb1e3, 0x0, 0x1);
        gbc.writeMem(0xa7f5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2dfd);
        EXPECT(gbc.pc(), 0xa7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f5), 0xcb);
        EXPECT(gbc.readMem(0xa7f6), 0xe4);
        // CB E4 0322
        gbc.setState(0x4fcb, 0x71af, 0x7c30, 0x8723, 0xbe4f, 0x198f, 0x1, 0x1);
        gbc.writeMem(0x4fcb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x71af);
        EXPECT(gbc.pc(), 0x4fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0323
        gbc.setState(0xeb2b, 0x9810, 0x5020, 0xc0c4, 0xe76e, 0xf3b7, 0x0, 0x1);
        gbc.writeMem(0xeb2b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9810);
        EXPECT(gbc.pc(), 0xeb2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2b), 0xcb);
        EXPECT(gbc.readMem(0xeb2c), 0xe4);
        // CB E4 0324
        gbc.setState(0xc03d, 0x219f, 0xbaa0, 0x66e8, 0x834f, 0xbed5, 0x1, 0x1);
        gbc.writeMem(0xc03d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x219f);
        EXPECT(gbc.pc(), 0xc03f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03d), 0xcb);
        EXPECT(gbc.readMem(0xc03e), 0xe4);
        // CB E4 0325
        gbc.setState(0x2b54, 0xc1f6, 0x6a10, 0xea89, 0x1469, 0xe7ed, 0x1, 0x0);
        gbc.writeMem(0x2b54, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc1f6);
        EXPECT(gbc.pc(), 0x2b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0326
        gbc.setState(0xe4bc, 0x76fc, 0xde30, 0xc7c1, 0x1d42, 0xc1cf, 0x1, 0x1);
        gbc.writeMem(0xe4bc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x76fc);
        EXPECT(gbc.pc(), 0xe4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4bc), 0xcb);
        EXPECT(gbc.readMem(0xe4bd), 0xe4);
        // CB E4 0327
        gbc.setState(0x8783, 0x7c10, 0x8500, 0x9263, 0x2f1f, 0xb889, 0x0, 0x1);
        gbc.writeMem(0x8783, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7c10);
        EXPECT(gbc.pc(), 0x8785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8783), 0xcb);
        EXPECT(gbc.readMem(0x8784), 0xe4);
        // CB E4 0328
        gbc.setState(0x3ebe, 0x9f63, 0xad90, 0x72e0, 0x193e, 0x2ff4, 0x1, 0x1);
        gbc.writeMem(0x3ebe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9f63);
        EXPECT(gbc.pc(), 0x3ec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0329
        gbc.setState(0x11e4, 0x5c2e, 0x4eb0, 0x6d8b, 0x6b76, 0x511e, 0x0, 0x0);
        gbc.writeMem(0x11e4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5c2e);
        EXPECT(gbc.pc(), 0x11e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 032A
        gbc.setState(0x2534, 0x81cf, 0x350, 0x2555, 0x5ceb, 0xe5d7, 0x1, 0x0);
        gbc.writeMem(0x2534, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x81cf);
        EXPECT(gbc.pc(), 0x2536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 032B
        gbc.setState(0xab1b, 0x6eb9, 0x4030, 0xd1c4, 0x3919, 0x5ec3, 0x0, 0x1);
        gbc.writeMem(0xab1b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6eb9);
        EXPECT(gbc.pc(), 0xab1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1b), 0xcb);
        EXPECT(gbc.readMem(0xab1c), 0xe4);
        // CB E4 032C
        gbc.setState(0x4fcf, 0x8bf, 0x87e0, 0x6455, 0x8335, 0x7e6f, 0x0, 0x1);
        gbc.writeMem(0x4fcf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8bf);
        EXPECT(gbc.pc(), 0x4fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 032D
        gbc.setState(0x56, 0x15a7, 0xcc70, 0x74dc, 0xb468, 0x371d, 0x0, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x15a7);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 032F
        gbc.setState(0x7eff, 0x6a3a, 0x7b00, 0xc3b0, 0x9a84, 0x77bf, 0x0, 0x1);
        gbc.writeMem(0x7eff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6a3a);
        EXPECT(gbc.pc(), 0x7f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0330
        gbc.setState(0x2bee, 0x909a, 0xd6e0, 0x456, 0x6790, 0x4c11, 0x0, 0x0);
        gbc.writeMem(0x2bee, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x909a);
        EXPECT(gbc.pc(), 0x2bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0331
        gbc.setState(0x2afe, 0x551c, 0x55b0, 0x88e2, 0xc1d6, 0x728d, 0x1, 0x1);
        gbc.writeMem(0x2afe, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x551c);
        EXPECT(gbc.pc(), 0x2b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0332
        gbc.setState(0xc1, 0x87b8, 0x2700, 0x780a, 0xfac1, 0x290a, 0x1, 0x0);
        gbc.writeMem(0xc1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x87b8);
        EXPECT(gbc.pc(), 0xc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0333
        gbc.setState(0x6a89, 0xca1c, 0xfe90, 0x1fa5, 0xd4cf, 0x8d7b, 0x0, 0x0);
        gbc.writeMem(0x6a89, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xca1c);
        EXPECT(gbc.pc(), 0x6a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0334
        gbc.setState(0x84fd, 0x827e, 0xa690, 0xf947, 0x44a4, 0xe3f2, 0x0, 0x1);
        gbc.writeMem(0x84fd, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x827e);
        EXPECT(gbc.pc(), 0x84ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fd), 0xcb);
        EXPECT(gbc.readMem(0x84fe), 0xe4);
        // CB E4 0335
        gbc.setState(0x3c84, 0x74c6, 0xd620, 0x88c, 0x6a16, 0x2b3, 0x1, 0x0);
        gbc.writeMem(0x3c84, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x74c6);
        EXPECT(gbc.pc(), 0x3c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0336
        gbc.setState(0xd3b3, 0x1efa, 0x7800, 0x5ffd, 0xffcb, 0xeea3, 0x0, 0x0);
        gbc.writeMem(0xd3b3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1efa);
        EXPECT(gbc.pc(), 0xd3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b3), 0xcb);
        EXPECT(gbc.readMem(0xd3b4), 0xe4);
        // CB E4 0337
        gbc.setState(0xd32a, 0x57e4, 0x3480, 0xbf90, 0x50b5, 0x7d4c, 0x1, 0x1);
        gbc.writeMem(0xd32a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x57e4);
        EXPECT(gbc.pc(), 0xd32c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32a), 0xcb);
        EXPECT(gbc.readMem(0xd32b), 0xe4);
        // CB E4 0338
        gbc.setState(0xa694, 0xaab7, 0x1b10, 0x809a, 0x1820, 0xb76e, 0x1, 0x0);
        gbc.writeMem(0xa694, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xaab7);
        EXPECT(gbc.pc(), 0xa696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa694), 0xcb);
        EXPECT(gbc.readMem(0xa695), 0xe4);
        // CB E4 0339
        gbc.setState(0xa51a, 0x300b, 0x2f70, 0x3bf1, 0xa317, 0x99d7, 0x0, 0x0);
        gbc.writeMem(0xa51a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x300b);
        EXPECT(gbc.pc(), 0xa51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51a), 0xcb);
        EXPECT(gbc.readMem(0xa51b), 0xe4);
        // CB E4 033A
        gbc.setState(0xdd0f, 0x52a3, 0x9a60, 0xdb5, 0xe193, 0x6387, 0x1, 0x1);
        gbc.writeMem(0xdd0f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x52a3);
        EXPECT(gbc.pc(), 0xdd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd0f), 0xcb);
        EXPECT(gbc.readMem(0xdd10), 0xe4);
        // CB E4 033B
        gbc.setState(0xc34b, 0xf08a, 0x36b0, 0x400, 0x8c22, 0xae3a, 0x1, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf08a);
        EXPECT(gbc.pc(), 0xc34d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc34b), 0xcb);
        EXPECT(gbc.readMem(0xc34c), 0xe4);
        // CB E4 033C
        gbc.setState(0x2782, 0xcb29, 0x8770, 0x9e3a, 0x8afc, 0x9733, 0x1, 0x0);
        gbc.writeMem(0x2782, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcb29);
        EXPECT(gbc.pc(), 0x2784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 033D
        gbc.setState(0x2d57, 0xddb9, 0x6fe0, 0x210f, 0x970f, 0xf57e, 0x0, 0x1);
        gbc.writeMem(0x2d57, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xddb9);
        EXPECT(gbc.pc(), 0x2d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 033E
        gbc.setState(0x8076, 0x680c, 0xd130, 0x239c, 0x96dc, 0xe552, 0x0, 0x1);
        gbc.writeMem(0x8076, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x680c);
        EXPECT(gbc.pc(), 0x8078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8076), 0xcb);
        EXPECT(gbc.readMem(0x8077), 0xe4);
        // CB E4 033F
        gbc.setState(0xabd8, 0xaa6b, 0x3330, 0x8afe, 0x96cb, 0xa946, 0x0, 0x0);
        gbc.writeMem(0xabd8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xaa6b);
        EXPECT(gbc.pc(), 0xabda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd8), 0xcb);
        EXPECT(gbc.readMem(0xabd9), 0xe4);
        // CB E4 0340
        gbc.setState(0xaa09, 0xfa4c, 0xce60, 0xe181, 0x6a24, 0x2ba6, 0x0, 0x0);
        gbc.writeMem(0xaa09, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfa4c);
        EXPECT(gbc.pc(), 0xaa0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa09), 0xcb);
        EXPECT(gbc.readMem(0xaa0a), 0xe4);
        // CB E4 0341
        gbc.setState(0x9eba, 0x5bef, 0x5a0, 0xea19, 0xd6df, 0x3af0, 0x0, 0x1);
        gbc.writeMem(0x9eba, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5bef);
        EXPECT(gbc.pc(), 0x9ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eba), 0xcb);
        EXPECT(gbc.readMem(0x9ebb), 0xe4);
        // CB E4 0342
        gbc.setState(0x6571, 0x45fd, 0xa070, 0xa571, 0xcc0b, 0x9e2d, 0x0, 0x0);
        gbc.writeMem(0x6571, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x45fd);
        EXPECT(gbc.pc(), 0x6573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0343
        gbc.setState(0x1984, 0xc03f, 0xceb0, 0x56cf, 0x6fc3, 0x7464, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc03f);
        EXPECT(gbc.pc(), 0x1986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0344
        gbc.setState(0x310, 0x83a1, 0xcfd0, 0xc170, 0xa949, 0xce60, 0x0, 0x0);
        gbc.writeMem(0x310, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x83a1);
        EXPECT(gbc.pc(), 0x312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0345
        gbc.setState(0x9e03, 0x86db, 0x89f0, 0xcb60, 0x231d, 0xf948, 0x1, 0x1);
        gbc.writeMem(0x9e03, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x86db);
        EXPECT(gbc.pc(), 0x9e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e03), 0xcb);
        EXPECT(gbc.readMem(0x9e04), 0xe4);
        // CB E4 0347
        gbc.setState(0xd879, 0x3275, 0x61d0, 0xb27c, 0xc121, 0x5088, 0x0, 0x1);
        gbc.writeMem(0xd879, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3275);
        EXPECT(gbc.pc(), 0xd87b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd879), 0xcb);
        EXPECT(gbc.readMem(0xd87a), 0xe4);
        // CB E4 0348
        gbc.setState(0xd7a4, 0x4482, 0xd7a0, 0xfef5, 0x1db5, 0xbbb4, 0x1, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4482);
        EXPECT(gbc.pc(), 0xd7a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a4), 0xcb);
        EXPECT(gbc.readMem(0xd7a5), 0xe4);
        // CB E4 0349
        gbc.setState(0x35b, 0xe54f, 0xa490, 0xf1d0, 0x2039, 0xf5b4, 0x0, 0x0);
        gbc.writeMem(0x35b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe54f);
        EXPECT(gbc.pc(), 0x35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 034A
        gbc.setState(0x3f6e, 0xbc77, 0xa3a0, 0xd6d, 0x76e8, 0x6a14, 0x1, 0x0);
        gbc.writeMem(0x3f6e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbc77);
        EXPECT(gbc.pc(), 0x3f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 034B
        gbc.setState(0x6521, 0x4147, 0xc660, 0x4b85, 0xc2c0, 0xb58d, 0x1, 0x0);
        gbc.writeMem(0x6521, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4147);
        EXPECT(gbc.pc(), 0x6523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 034C
        gbc.setState(0xa962, 0x6f04, 0x8a20, 0x15b9, 0x912d, 0xfb81, 0x1, 0x0);
        gbc.writeMem(0xa962, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6f04);
        EXPECT(gbc.pc(), 0xa964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa962), 0xcb);
        EXPECT(gbc.readMem(0xa963), 0xe4);
        // CB E4 034D
        gbc.setState(0x9162, 0x346d, 0xbb60, 0x936f, 0xbeec, 0xd68, 0x0, 0x1);
        gbc.writeMem(0x9162, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x346d);
        EXPECT(gbc.pc(), 0x9164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9162), 0xcb);
        EXPECT(gbc.readMem(0x9163), 0xe4);
        // CB E4 034E
        gbc.setState(0x7da8, 0xf021, 0xdc60, 0xed20, 0xdec7, 0xc59e, 0x1, 0x0);
        gbc.writeMem(0x7da8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf021);
        EXPECT(gbc.pc(), 0x7daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 034F
        gbc.setState(0xdc26, 0x8483, 0xba00, 0x5460, 0x7c74, 0x3f63, 0x1, 0x0);
        gbc.writeMem(0xdc26, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8483);
        EXPECT(gbc.pc(), 0xdc28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc26), 0xcb);
        EXPECT(gbc.readMem(0xdc27), 0xe4);
        // CB E4 0350
        gbc.setState(0x5034, 0x82e, 0xc120, 0x5f80, 0x938e, 0x9809, 0x0, 0x1);
        gbc.writeMem(0x5034, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x82e);
        EXPECT(gbc.pc(), 0x5036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0351
        gbc.setState(0xd554, 0x5ce, 0xb980, 0xd991, 0x1c6a, 0x47b, 0x1, 0x0);
        gbc.writeMem(0xd554, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5ce);
        EXPECT(gbc.pc(), 0xd556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd554), 0xcb);
        EXPECT(gbc.readMem(0xd555), 0xe4);
        // CB E4 0352
        gbc.setState(0x3c03, 0xda7e, 0xc490, 0x9e46, 0xa4a1, 0x226f, 0x0, 0x0);
        gbc.writeMem(0x3c03, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xda7e);
        EXPECT(gbc.pc(), 0x3c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0353
        gbc.setState(0x1e88, 0x5dba, 0xd980, 0xce28, 0x7757, 0xa412, 0x1, 0x0);
        gbc.writeMem(0x1e88, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5dba);
        EXPECT(gbc.pc(), 0x1e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0355
        gbc.setState(0xa1a9, 0xca72, 0xa370, 0x794e, 0x20f2, 0xf15e, 0x0, 0x0);
        gbc.writeMem(0xa1a9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xca72);
        EXPECT(gbc.pc(), 0xa1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a9), 0xcb);
        EXPECT(gbc.readMem(0xa1aa), 0xe4);
        // CB E4 0356
        gbc.setState(0xd68a, 0x1f45, 0x97d0, 0x6d04, 0x3ea3, 0xfd14, 0x0, 0x0);
        gbc.writeMem(0xd68a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1f45);
        EXPECT(gbc.pc(), 0xd68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68a), 0xcb);
        EXPECT(gbc.readMem(0xd68b), 0xe4);
        // CB E4 0357
        gbc.setState(0x4900, 0x3d90, 0x5640, 0x2aba, 0x1ddc, 0x4eef, 0x1, 0x0);
        gbc.writeMem(0x4900, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3d90);
        EXPECT(gbc.pc(), 0x4902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0358
        gbc.setState(0x9330, 0xf831, 0x7d00, 0x2830, 0xaf43, 0xb145, 0x0, 0x0);
        gbc.writeMem(0x9330, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf831);
        EXPECT(gbc.pc(), 0x9332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9330), 0xcb);
        EXPECT(gbc.readMem(0x9331), 0xe4);
        // CB E4 0359
        gbc.setState(0xc3b5, 0xb3a3, 0x8f80, 0xfdde, 0xf61e, 0xfe7d, 0x0, 0x1);
        gbc.writeMem(0xc3b5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb3a3);
        EXPECT(gbc.pc(), 0xc3b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b5), 0xcb);
        EXPECT(gbc.readMem(0xc3b6), 0xe4);
        // CB E4 035A
        gbc.setState(0x5276, 0xacd6, 0x9ad0, 0xbd5b, 0x8f00, 0xbef6, 0x1, 0x0);
        gbc.writeMem(0x5276, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xacd6);
        EXPECT(gbc.pc(), 0x5278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 035B
        gbc.setState(0x72e1, 0xf80, 0x8720, 0xb706, 0x5503, 0x612e, 0x1, 0x0);
        gbc.writeMem(0x72e1, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf80);
        EXPECT(gbc.pc(), 0x72e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 035C
        gbc.setState(0x67d3, 0xd9ee, 0x510, 0xb929, 0x6f9, 0xf6a1, 0x0, 0x1);
        gbc.writeMem(0x67d3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd9ee);
        EXPECT(gbc.pc(), 0x67d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 035D
        gbc.setState(0x7fc2, 0xb712, 0x3a80, 0x3a5e, 0x6555, 0x7333, 0x1, 0x0);
        gbc.writeMem(0x7fc2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb712);
        EXPECT(gbc.pc(), 0x7fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 035E
        gbc.setState(0x4211, 0x99aa, 0xb7c0, 0x98c7, 0x1830, 0x8c1f, 0x0, 0x1);
        gbc.writeMem(0x4211, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x99aa);
        EXPECT(gbc.pc(), 0x4213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 035F
        gbc.setState(0x28cf, 0xde41, 0x6890, 0x4882, 0xe222, 0x2412, 0x1, 0x1);
        gbc.writeMem(0x28cf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xde41);
        EXPECT(gbc.pc(), 0x28d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0360
        gbc.setState(0x761e, 0x9756, 0x2920, 0xf2d7, 0xc903, 0x1060, 0x1, 0x0);
        gbc.writeMem(0x761e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9756);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0361
        gbc.setState(0x8ea3, 0x9e2b, 0x7c30, 0x10d8, 0xa7a6, 0x9d78, 0x1, 0x0);
        gbc.writeMem(0x8ea3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9e2b);
        EXPECT(gbc.pc(), 0x8ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea3), 0xcb);
        EXPECT(gbc.readMem(0x8ea4), 0xe4);
        // CB E4 0362
        gbc.setState(0x471c, 0x5595, 0xc410, 0xbdde, 0x2c73, 0x8752, 0x1, 0x1);
        gbc.writeMem(0x471c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5595);
        EXPECT(gbc.pc(), 0x471e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0363
        gbc.setState(0x37a, 0x9541, 0xf50, 0x3a5f, 0x15c6, 0xd35, 0x1, 0x1);
        gbc.writeMem(0x37a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9541);
        EXPECT(gbc.pc(), 0x37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0364
        gbc.setState(0x806f, 0x1d2c, 0x9430, 0xbf76, 0xbaef, 0xdf33, 0x0, 0x1);
        gbc.writeMem(0x806f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1d2c);
        EXPECT(gbc.pc(), 0x8071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806f), 0xcb);
        EXPECT(gbc.readMem(0x8070), 0xe4);
        // CB E4 0365
        gbc.setState(0x6d99, 0x86f7, 0x1710, 0x17f4, 0xc591, 0xa04b, 0x0, 0x0);
        gbc.writeMem(0x6d99, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x86f7);
        EXPECT(gbc.pc(), 0x6d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0366
        gbc.setState(0xb8f6, 0x6f88, 0x1fc0, 0xd7c7, 0x93d1, 0xeee, 0x0, 0x1);
        gbc.writeMem(0xb8f6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6f88);
        EXPECT(gbc.pc(), 0xb8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f6), 0xcb);
        EXPECT(gbc.readMem(0xb8f7), 0xe4);
        // CB E4 0367
        gbc.setState(0xc661, 0x5468, 0x64a0, 0x9831, 0x77e8, 0x4191, 0x0, 0x1);
        gbc.writeMem(0xc661, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5468);
        EXPECT(gbc.pc(), 0xc663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc661), 0xcb);
        EXPECT(gbc.readMem(0xc662), 0xe4);
        // CB E4 0368
        gbc.setState(0x8dbb, 0x847e, 0xdf40, 0x7513, 0x43ee, 0xfafb, 0x1, 0x1);
        gbc.writeMem(0x8dbb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x847e);
        EXPECT(gbc.pc(), 0x8dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbb), 0xcb);
        EXPECT(gbc.readMem(0x8dbc), 0xe4);
        // CB E4 0369
        gbc.setState(0x8f12, 0xc62c, 0x3000, 0x730f, 0x569e, 0x9826, 0x1, 0x0);
        gbc.writeMem(0x8f12, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc62c);
        EXPECT(gbc.pc(), 0x8f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f12), 0xcb);
        EXPECT(gbc.readMem(0x8f13), 0xe4);
        // CB E4 036A
        gbc.setState(0xec75, 0xaef9, 0x30c0, 0x6cd0, 0x315f, 0x73bc, 0x0, 0x1);
        gbc.writeMem(0xec75, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaef9);
        EXPECT(gbc.pc(), 0xec77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec75), 0xcb);
        EXPECT(gbc.readMem(0xec76), 0xe4);
        // CB E4 036B
        gbc.setState(0xdc26, 0x5aa0, 0x7e10, 0x45f0, 0xb083, 0xb653, 0x1, 0x0);
        gbc.writeMem(0xdc26, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5aa0);
        EXPECT(gbc.pc(), 0xdc28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc26), 0xcb);
        EXPECT(gbc.readMem(0xdc27), 0xe4);
        // CB E4 036C
        gbc.setState(0xdc7c, 0x1eac, 0x1d10, 0x982e, 0x3763, 0xbd5a, 0x0, 0x1);
        gbc.writeMem(0xdc7c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1eac);
        EXPECT(gbc.pc(), 0xdc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7c), 0xcb);
        EXPECT(gbc.readMem(0xdc7d), 0xe4);
        // CB E4 036D
        gbc.setState(0x7b5b, 0x3f57, 0xc0c0, 0x63cd, 0xe20, 0x39f7, 0x1, 0x1);
        gbc.writeMem(0x7b5b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3f57);
        EXPECT(gbc.pc(), 0x7b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 036E
        gbc.setState(0x79d8, 0xb15b, 0x1ec0, 0x4ead, 0x685a, 0x3d56, 0x1, 0x0);
        gbc.writeMem(0x79d8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb15b);
        EXPECT(gbc.pc(), 0x79da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 036F
        gbc.setState(0x5c3, 0x8f6e, 0xf40, 0x7377, 0x70d9, 0x434b, 0x0, 0x0);
        gbc.writeMem(0x5c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8f6e);
        EXPECT(gbc.pc(), 0x5c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0370
        gbc.setState(0xd898, 0x9d95, 0x5da0, 0x479e, 0xaf96, 0xbb67, 0x1, 0x1);
        gbc.writeMem(0xd898, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9d95);
        EXPECT(gbc.pc(), 0xd89a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd898), 0xcb);
        EXPECT(gbc.readMem(0xd899), 0xe4);
        // CB E4 0371
        gbc.setState(0x53cb, 0x7600, 0x4bc0, 0xc0f9, 0x72cf, 0x47a1, 0x1, 0x0);
        gbc.writeMem(0x53cb, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7600);
        EXPECT(gbc.pc(), 0x53cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0372
        gbc.setState(0x116e, 0x775a, 0x67c0, 0xed5, 0x9c5f, 0x121a, 0x0, 0x1);
        gbc.writeMem(0x116e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x775a);
        EXPECT(gbc.pc(), 0x1170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0373
        gbc.setState(0xa3f6, 0xb2dc, 0xf60, 0x9627, 0xa75d, 0x703e, 0x1, 0x0);
        gbc.writeMem(0xa3f6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb2dc);
        EXPECT(gbc.pc(), 0xa3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f6), 0xcb);
        EXPECT(gbc.readMem(0xa3f7), 0xe4);
        // CB E4 0374
        gbc.setState(0xcfb8, 0x16e7, 0xc730, 0x783e, 0x178f, 0x1818, 0x1, 0x0);
        gbc.writeMem(0xcfb8, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x16e7);
        EXPECT(gbc.pc(), 0xcfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb8), 0xcb);
        EXPECT(gbc.readMem(0xcfb9), 0xe4);
        // CB E4 0375
        gbc.setState(0xa470, 0xd7eb, 0x1990, 0xe9d4, 0x8aed, 0xc0cb, 0x1, 0x1);
        gbc.writeMem(0xa470, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd7eb);
        EXPECT(gbc.pc(), 0xa472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa470), 0xcb);
        EXPECT(gbc.readMem(0xa471), 0xe4);
        // CB E4 0376
        gbc.setState(0x1e4d, 0xaf0c, 0x8b80, 0x7b4a, 0x893c, 0x5c18, 0x0, 0x1);
        gbc.writeMem(0x1e4d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xaf0c);
        EXPECT(gbc.pc(), 0x1e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0377
        gbc.setState(0x5392, 0xef9e, 0xc8d0, 0x9874, 0x9246, 0x805d, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xef9e);
        EXPECT(gbc.pc(), 0x5394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0379
        gbc.setState(0x12ea, 0xfc69, 0xf590, 0x46ac, 0x3bae, 0xbf75, 0x0, 0x0);
        gbc.writeMem(0x12ea, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfc69);
        EXPECT(gbc.pc(), 0x12ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 037A
        gbc.setState(0x5935, 0x29f1, 0x6ce0, 0x5b1, 0xbd35, 0x76e3, 0x1, 0x1);
        gbc.writeMem(0x5935, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x29f1);
        EXPECT(gbc.pc(), 0x5937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 037B
        gbc.setState(0x8e54, 0x1612, 0xaed0, 0xaa42, 0x129f, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0x8e54, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1612);
        EXPECT(gbc.pc(), 0x8e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e54), 0xcb);
        EXPECT(gbc.readMem(0x8e55), 0xe4);
        // CB E4 037C
        gbc.setState(0xd713, 0xe82e, 0x3a0, 0x2e0e, 0x329f, 0xff42, 0x1, 0x1);
        gbc.writeMem(0xd713, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe82e);
        EXPECT(gbc.pc(), 0xd715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd713), 0xcb);
        EXPECT(gbc.readMem(0xd714), 0xe4);
        // CB E4 037E
        gbc.setState(0xcc3a, 0xaebd, 0x6a80, 0x4ba5, 0x9b25, 0x88d, 0x0, 0x0);
        gbc.writeMem(0xcc3a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaebd);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3a), 0xcb);
        EXPECT(gbc.readMem(0xcc3b), 0xe4);
        // CB E4 037F
        gbc.setState(0x9c61, 0x568f, 0xd1c0, 0x6f6c, 0x71f6, 0x7f78, 0x0, 0x1);
        gbc.writeMem(0x9c61, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x568f);
        EXPECT(gbc.pc(), 0x9c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c61), 0xcb);
        EXPECT(gbc.readMem(0x9c62), 0xe4);
        // CB E4 0380
        gbc.setState(0x2f8d, 0xe902, 0xa2d0, 0xf52a, 0x5964, 0xd5aa, 0x0, 0x0);
        gbc.writeMem(0x2f8d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe902);
        EXPECT(gbc.pc(), 0x2f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0381
        gbc.setState(0x66c6, 0x57ee, 0xd940, 0x24a2, 0x3536, 0x2155, 0x1, 0x1);
        gbc.writeMem(0x66c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x57ee);
        EXPECT(gbc.pc(), 0x66c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0382
        gbc.setState(0x484, 0xe866, 0x1290, 0xdcb0, 0x9167, 0xf091, 0x1, 0x0);
        gbc.writeMem(0x484, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe866);
        EXPECT(gbc.pc(), 0x486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0383
        gbc.setState(0xb904, 0xb1b3, 0xb410, 0x5286, 0xf810, 0xa784, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb1b3);
        EXPECT(gbc.pc(), 0xb906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb904), 0xcb);
        EXPECT(gbc.readMem(0xb905), 0xe4);
        // CB E4 0384
        gbc.setState(0x2462, 0x4e8a, 0xd620, 0x2620, 0x65ab, 0x95c2, 0x0, 0x1);
        gbc.writeMem(0x2462, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4e8a);
        EXPECT(gbc.pc(), 0x2464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0385
        gbc.setState(0xc48, 0xe28c, 0xce20, 0x7a63, 0x9747, 0xf50c, 0x1, 0x1);
        gbc.writeMem(0xc48, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe28c);
        EXPECT(gbc.pc(), 0xc4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0386
        gbc.setState(0x6d33, 0xc4dd, 0x2770, 0xf14c, 0xe8d2, 0x6d72, 0x0, 0x1);
        gbc.writeMem(0x6d33, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc4dd);
        EXPECT(gbc.pc(), 0x6d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0387
        gbc.setState(0xa2e5, 0xa8fc, 0x8480, 0xb5f8, 0xb03a, 0x742e, 0x0, 0x0);
        gbc.writeMem(0xa2e5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa8fc);
        EXPECT(gbc.pc(), 0xa2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e5), 0xcb);
        EXPECT(gbc.readMem(0xa2e6), 0xe4);
        // CB E4 0388
        gbc.setState(0x5a93, 0xe214, 0x8a20, 0x90a8, 0x8f00, 0x8fd7, 0x1, 0x0);
        gbc.writeMem(0x5a93, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe214);
        EXPECT(gbc.pc(), 0x5a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0389
        gbc.setState(0x8990, 0x30ba, 0x22f0, 0x55d4, 0xb1dc, 0xc6ae, 0x1, 0x0);
        gbc.writeMem(0x8990, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x30ba);
        EXPECT(gbc.pc(), 0x8992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8990), 0xcb);
        EXPECT(gbc.readMem(0x8991), 0xe4);
        // CB E4 038A
        gbc.setState(0xd014, 0x27fc, 0xd060, 0xc4ec, 0x31ab, 0x855c, 0x1, 0x1);
        gbc.writeMem(0xd014, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x27fc);
        EXPECT(gbc.pc(), 0xd016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd014), 0xcb);
        EXPECT(gbc.readMem(0xd015), 0xe4);
        // CB E4 038B
        gbc.setState(0xc975, 0xfed1, 0xb60, 0x1a8f, 0x4004, 0xc5c7, 0x0, 0x0);
        gbc.writeMem(0xc975, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfed1);
        EXPECT(gbc.pc(), 0xc977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc975), 0xcb);
        EXPECT(gbc.readMem(0xc976), 0xe4);
        // CB E4 038C
        gbc.setState(0xb1dc, 0x993d, 0x6630, 0x2d0e, 0xecc7, 0x2c85, 0x1, 0x0);
        gbc.writeMem(0xb1dc, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x993d);
        EXPECT(gbc.pc(), 0xb1de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1dc), 0xcb);
        EXPECT(gbc.readMem(0xb1dd), 0xe4);
        // CB E4 038D
        gbc.setState(0x7bed, 0xdde4, 0xbf60, 0x5ec8, 0xbf36, 0x111e, 0x0, 0x0);
        gbc.writeMem(0x7bed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdde4);
        EXPECT(gbc.pc(), 0x7bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 038E
        gbc.setState(0x34ce, 0x9c22, 0x15a0, 0x5a70, 0x9420, 0xc073, 0x0, 0x1);
        gbc.writeMem(0x34ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9c22);
        EXPECT(gbc.pc(), 0x34d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 038F
        gbc.setState(0x3ad4, 0x2067, 0x82b0, 0xd101, 0x5ec8, 0x1339, 0x1, 0x0);
        gbc.writeMem(0x3ad4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2067);
        EXPECT(gbc.pc(), 0x3ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0390
        gbc.setState(0xcfdf, 0x654, 0x1770, 0x8334, 0x8e03, 0xd082, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x654);
        EXPECT(gbc.pc(), 0xcfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfdf), 0xcb);
        EXPECT(gbc.readMem(0xcfe0), 0xe4);
        // CB E4 0391
        gbc.setState(0x4b05, 0x5fc0, 0xd00, 0xc039, 0xf927, 0x6a00, 0x0, 0x0);
        gbc.writeMem(0x4b05, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5fc0);
        EXPECT(gbc.pc(), 0x4b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0392
        gbc.setState(0x98ff, 0xaffa, 0xc850, 0x601d, 0x82d1, 0xa411, 0x0, 0x1);
        gbc.writeMem(0x98ff, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xaffa);
        EXPECT(gbc.pc(), 0x9901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ff), 0xcb);
        EXPECT(gbc.readMem(0x9900), 0xe4);
        // CB E4 0393
        gbc.setState(0xb5da, 0x4782, 0xb8a0, 0xde73, 0x7dd3, 0x8c84, 0x0, 0x1);
        gbc.writeMem(0xb5da, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4782);
        EXPECT(gbc.pc(), 0xb5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5da), 0xcb);
        EXPECT(gbc.readMem(0xb5db), 0xe4);
        // CB E4 0394
        gbc.setState(0xc936, 0x3696, 0x6090, 0xf68a, 0xd8b6, 0x76f5, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3696);
        EXPECT(gbc.pc(), 0xc938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc936), 0xcb);
        EXPECT(gbc.readMem(0xc937), 0xe4);
        // CB E4 0395
        gbc.setState(0x2b72, 0x45d9, 0xebe0, 0x4e2, 0xd3ec, 0xd4ed, 0x0, 0x0);
        gbc.writeMem(0x2b72, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x45d9);
        EXPECT(gbc.pc(), 0x2b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 0396
        gbc.setState(0xdcf4, 0x18df, 0x9bb0, 0xf7e3, 0x61a, 0xb819, 0x0, 0x0);
        gbc.writeMem(0xdcf4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x18df);
        EXPECT(gbc.pc(), 0xdcf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf4), 0xcb);
        EXPECT(gbc.readMem(0xdcf5), 0xe4);
        // CB E4 0397
        gbc.setState(0x2ad5, 0x29c7, 0x6f0, 0x108f, 0x98d9, 0x6fe6, 0x1, 0x0);
        gbc.writeMem(0x2ad5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x29c7);
        EXPECT(gbc.pc(), 0x2ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 0398
        gbc.setState(0x8871, 0x4e9e, 0x2080, 0x7341, 0xfd3f, 0x93f1, 0x1, 0x1);
        gbc.writeMem(0x8871, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4e9e);
        EXPECT(gbc.pc(), 0x8873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8871), 0xcb);
        EXPECT(gbc.readMem(0x8872), 0xe4);
        // CB E4 0399
        gbc.setState(0x8bc6, 0xbeb7, 0xb410, 0xe9bd, 0x5a1, 0x741f, 0x1, 0x1);
        gbc.writeMem(0x8bc6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbeb7);
        EXPECT(gbc.pc(), 0x8bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc6), 0xcb);
        EXPECT(gbc.readMem(0x8bc7), 0xe4);
        // CB E4 039A
        gbc.setState(0x9b4a, 0x31e, 0x2460, 0xfdc, 0xe4d6, 0xb307, 0x1, 0x0);
        gbc.writeMem(0x9b4a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x31e);
        EXPECT(gbc.pc(), 0x9b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4a), 0xcb);
        EXPECT(gbc.readMem(0x9b4b), 0xe4);
        // CB E4 039B
        gbc.setState(0x95e2, 0xc366, 0x37e0, 0x4535, 0x2223, 0xdba0, 0x1, 0x1);
        gbc.writeMem(0x95e2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc366);
        EXPECT(gbc.pc(), 0x95e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e2), 0xcb);
        EXPECT(gbc.readMem(0x95e3), 0xe4);
        // CB E4 039C
        gbc.setState(0x8d0a, 0x7a4c, 0xf7f0, 0xa1a2, 0xe14b, 0xa5a, 0x0, 0x1);
        gbc.writeMem(0x8d0a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7a4c);
        EXPECT(gbc.pc(), 0x8d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d0a), 0xcb);
        EXPECT(gbc.readMem(0x8d0b), 0xe4);
        // CB E4 039D
        gbc.setState(0xc371, 0xae71, 0x57e0, 0x9773, 0x8548, 0x8706, 0x1, 0x0);
        gbc.writeMem(0xc371, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xae71);
        EXPECT(gbc.pc(), 0xc373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc371), 0xcb);
        EXPECT(gbc.readMem(0xc372), 0xe4);
        // CB E4 039F
        gbc.setState(0x8725, 0x585e, 0xd3b0, 0xeb70, 0xe59a, 0xe4e4, 0x1, 0x0);
        gbc.writeMem(0x8725, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x585e);
        EXPECT(gbc.pc(), 0x8727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8725), 0xcb);
        EXPECT(gbc.readMem(0x8726), 0xe4);
        // CB E4 03A0
        gbc.setState(0x4003, 0xb778, 0x63f0, 0xd10e, 0x806f, 0x8de5, 0x1, 0x1);
        gbc.writeMem(0x4003, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb778);
        EXPECT(gbc.pc(), 0x4005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03A1
        gbc.setState(0x9b4f, 0x113c, 0xcc10, 0x69a0, 0x404c, 0xfdd3, 0x0, 0x0);
        gbc.writeMem(0x9b4f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x113c);
        EXPECT(gbc.pc(), 0x9b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4f), 0xcb);
        EXPECT(gbc.readMem(0x9b50), 0xe4);
        // CB E4 03A2
        gbc.setState(0x265a, 0x8efa, 0x8fa0, 0xf864, 0xc9ff, 0xb43e, 0x0, 0x0);
        gbc.writeMem(0x265a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8efa);
        EXPECT(gbc.pc(), 0x265c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03A3
        gbc.setState(0x26aa, 0x98a1, 0xe8a0, 0x6ebe, 0x155e, 0x40f0, 0x0, 0x0);
        gbc.writeMem(0x26aa, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x98a1);
        EXPECT(gbc.pc(), 0x26ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03A4
        gbc.setState(0x4f09, 0xc822, 0x7850, 0x21cc, 0xda8c, 0xbaac, 0x0, 0x1);
        gbc.writeMem(0x4f09, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc822);
        EXPECT(gbc.pc(), 0x4f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03A5
        gbc.setState(0xc759, 0xd3a5, 0x6360, 0x21a, 0xc841, 0xd815, 0x0, 0x0);
        gbc.writeMem(0xc759, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd3a5);
        EXPECT(gbc.pc(), 0xc75b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc759), 0xcb);
        EXPECT(gbc.readMem(0xc75a), 0xe4);
        // CB E4 03A6
        gbc.setState(0xd60a, 0x903, 0x71e0, 0x9d69, 0xd4e0, 0x384c, 0x1, 0x1);
        gbc.writeMem(0xd60a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x903);
        EXPECT(gbc.pc(), 0xd60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd60a), 0xcb);
        EXPECT(gbc.readMem(0xd60b), 0xe4);
        // CB E4 03A7
        gbc.setState(0x1146, 0x11d9, 0xada0, 0x9516, 0x42c7, 0xe0cc, 0x1, 0x1);
        gbc.writeMem(0x1146, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x11d9);
        EXPECT(gbc.pc(), 0x1148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03A8
        gbc.setState(0x9a20, 0xa0a4, 0xc0a0, 0x583b, 0x1fb1, 0x9ce4, 0x0, 0x1);
        gbc.writeMem(0x9a20, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa0a4);
        EXPECT(gbc.pc(), 0x9a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a20), 0xcb);
        EXPECT(gbc.readMem(0x9a21), 0xe4);
        // CB E4 03A9
        gbc.setState(0x6072, 0xe70d, 0xf790, 0x395a, 0x10d5, 0x9c1a, 0x0, 0x1);
        gbc.writeMem(0x6072, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe70d);
        EXPECT(gbc.pc(), 0x6074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03AA
        gbc.setState(0x7940, 0xc2b3, 0xe460, 0x311e, 0xef76, 0x2bc3, 0x1, 0x0);
        gbc.writeMem(0x7940, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc2b3);
        EXPECT(gbc.pc(), 0x7942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03AB
        gbc.setState(0x21af, 0xd5ba, 0x3810, 0xfc4c, 0xde0, 0xe208, 0x0, 0x0);
        gbc.writeMem(0x21af, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd5ba);
        EXPECT(gbc.pc(), 0x21b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03AC
        gbc.setState(0x7787, 0xb534, 0x140, 0xdf3e, 0xf863, 0x336f, 0x1, 0x0);
        gbc.writeMem(0x7787, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb534);
        EXPECT(gbc.pc(), 0x7789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03AE
        gbc.setState(0x553f, 0xacba, 0x6100, 0x4812, 0x4cbf, 0xc73a, 0x1, 0x1);
        gbc.writeMem(0x553f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xacba);
        EXPECT(gbc.pc(), 0x5541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03AF
        gbc.setState(0xebb3, 0xf63e, 0xfb70, 0xcecc, 0x1843, 0xb187, 0x1, 0x0);
        gbc.writeMem(0xebb3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf63e);
        EXPECT(gbc.pc(), 0xebb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb3), 0xcb);
        EXPECT(gbc.readMem(0xebb4), 0xe4);
        // CB E4 03B0
        gbc.setState(0x2d3e, 0x86ab, 0xc9c0, 0x45a9, 0x51fa, 0x1053, 0x0, 0x1);
        gbc.writeMem(0x2d3e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x86ab);
        EXPECT(gbc.pc(), 0x2d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03B1
        gbc.setState(0x649, 0xbbbe, 0x9ba0, 0x20d5, 0x9b7f, 0xc76f, 0x1, 0x0);
        gbc.writeMem(0x649, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbbbe);
        EXPECT(gbc.pc(), 0x64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03B2
        gbc.setState(0x585a, 0x73bb, 0x1000, 0x99c7, 0x759e, 0xa049, 0x0, 0x1);
        gbc.writeMem(0x585a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x73bb);
        EXPECT(gbc.pc(), 0x585c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03B3
        gbc.setState(0x1bb9, 0x397d, 0x4a60, 0x1921, 0x9f5b, 0x845a, 0x1, 0x1);
        gbc.writeMem(0x1bb9, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x397d);
        EXPECT(gbc.pc(), 0x1bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03B4
        gbc.setState(0xd0ef, 0x874c, 0xcde0, 0xfb1c, 0x6f89, 0x20b, 0x1, 0x0);
        gbc.writeMem(0xd0ef, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x874c);
        EXPECT(gbc.pc(), 0xd0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ef), 0xcb);
        EXPECT(gbc.readMem(0xd0f0), 0xe4);
        // CB E4 03B5
        gbc.setState(0xbc3, 0xb00e, 0xbdb0, 0x6567, 0xdcd, 0x477a, 0x0, 0x1);
        gbc.writeMem(0xbc3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb00e);
        EXPECT(gbc.pc(), 0xbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03B6
        gbc.setState(0xca1c, 0x1c1c, 0x5b00, 0x9c92, 0x9479, 0x959f, 0x0, 0x0);
        gbc.writeMem(0xca1c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1c1c);
        EXPECT(gbc.pc(), 0xca1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1c), 0xcb);
        EXPECT(gbc.readMem(0xca1d), 0xe4);
        // CB E4 03B7
        gbc.setState(0x3c97, 0xec16, 0x85c0, 0xb94c, 0x10ef, 0x673d, 0x0, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0x3c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03B8
        gbc.setState(0x89af, 0xba94, 0x18e0, 0xc2c2, 0xed7b, 0xa512, 0x1, 0x0);
        gbc.writeMem(0x89af, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xba94);
        EXPECT(gbc.pc(), 0x89b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89af), 0xcb);
        EXPECT(gbc.readMem(0x89b0), 0xe4);
        // CB E4 03BA
        gbc.setState(0xa42e, 0xca18, 0x3f70, 0x1f35, 0x83d, 0x8227, 0x1, 0x1);
        gbc.writeMem(0xa42e, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xca18);
        EXPECT(gbc.pc(), 0xa430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa42e), 0xcb);
        EXPECT(gbc.readMem(0xa42f), 0xe4);
        // CB E4 03BB
        gbc.setState(0xde2, 0x1beb, 0x80c0, 0xbc30, 0x883c, 0x6bf6, 0x1, 0x1);
        gbc.writeMem(0xde2, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1beb);
        EXPECT(gbc.pc(), 0xde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03BC
        gbc.setState(0xbdca, 0x63d2, 0xf610, 0xd56a, 0x348b, 0x12d7, 0x1, 0x0);
        gbc.writeMem(0xbdca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x63d2);
        EXPECT(gbc.pc(), 0xbdcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdca), 0xcb);
        EXPECT(gbc.readMem(0xbdcb), 0xe4);
        // CB E4 03BD
        gbc.setState(0xad80, 0x694f, 0x5370, 0xf95d, 0x6f24, 0xe84a, 0x0, 0x1);
        gbc.writeMem(0xad80, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x694f);
        EXPECT(gbc.pc(), 0xad82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad80), 0xcb);
        EXPECT(gbc.readMem(0xad81), 0xe4);
        // CB E4 03BE
        gbc.setState(0x6b55, 0xb1b1, 0xc80, 0xcbba, 0x594c, 0xf0, 0x1, 0x1);
        gbc.writeMem(0x6b55, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb1b1);
        EXPECT(gbc.pc(), 0x6b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03BF
        gbc.setState(0x6a62, 0xca1c, 0xd570, 0x3b74, 0x8ae4, 0xb785, 0x0, 0x0);
        gbc.writeMem(0x6a62, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xca1c);
        EXPECT(gbc.pc(), 0x6a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03C0
        gbc.setState(0xdb7f, 0xad22, 0xac0, 0x495b, 0xcf6d, 0x7545, 0x1, 0x1);
        gbc.writeMem(0xdb7f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xad22);
        EXPECT(gbc.pc(), 0xdb81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7f), 0xcb);
        EXPECT(gbc.readMem(0xdb80), 0xe4);
        // CB E4 03C1
        gbc.setState(0x55d4, 0xf484, 0xccd0, 0x519d, 0x7963, 0x4e36, 0x0, 0x0);
        gbc.writeMem(0x55d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf484);
        EXPECT(gbc.pc(), 0x55d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03C2
        gbc.setState(0xad93, 0x73ca, 0x5aa0, 0xfe97, 0x8787, 0xfe9d, 0x1, 0x1);
        gbc.writeMem(0xad93, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x73ca);
        EXPECT(gbc.pc(), 0xad95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad93), 0xcb);
        EXPECT(gbc.readMem(0xad94), 0xe4);
        // CB E4 03C3
        gbc.setState(0x21f4, 0xfdc2, 0x4fb0, 0xa78d, 0x2935, 0xb033, 0x1, 0x1);
        gbc.writeMem(0x21f4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfdc2);
        EXPECT(gbc.pc(), 0x21f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03C4
        gbc.setState(0x66c3, 0x31e6, 0x4180, 0xc682, 0x64e7, 0x2a56, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x31e6);
        EXPECT(gbc.pc(), 0x66c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03C5
        gbc.setState(0x9372, 0x1e25, 0x3c90, 0xc7bd, 0xa6c8, 0xa1f2, 0x1, 0x1);
        gbc.writeMem(0x9372, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1e25);
        EXPECT(gbc.pc(), 0x9374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9372), 0xcb);
        EXPECT(gbc.readMem(0x9373), 0xe4);
        // CB E4 03C6
        gbc.setState(0x7764, 0xe658, 0xea50, 0x2e9f, 0x39e1, 0xfd3b, 0x0, 0x0);
        gbc.writeMem(0x7764, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe658);
        EXPECT(gbc.pc(), 0x7766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03C7
        gbc.setState(0x12d4, 0xfc7a, 0xb90, 0xed47, 0xf909, 0x1799, 0x1, 0x1);
        gbc.writeMem(0x12d4, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfc7a);
        EXPECT(gbc.pc(), 0x12d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03C8
        gbc.setState(0x18ce, 0x91c6, 0xe670, 0x5378, 0x45e6, 0x900a, 0x0, 0x0);
        gbc.writeMem(0x18ce, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x91c6);
        EXPECT(gbc.pc(), 0x18d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03C9
        gbc.setState(0xc03c, 0x86bf, 0xff80, 0xaef9, 0x83c0, 0x993a, 0x0, 0x1);
        gbc.writeMem(0xc03c, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x86bf);
        EXPECT(gbc.pc(), 0xc03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03c), 0xcb);
        EXPECT(gbc.readMem(0xc03d), 0xe4);
        // CB E4 03CA
        gbc.setState(0x4845, 0xb543, 0xaac0, 0x6795, 0xf382, 0x8a64, 0x0, 0x1);
        gbc.writeMem(0x4845, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb543);
        EXPECT(gbc.pc(), 0x4847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03CB
        gbc.setState(0xc182, 0xaa2c, 0x8da0, 0xdfe, 0xb57e, 0xdaf2, 0x1, 0x0);
        gbc.writeMem(0xc182, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xaa2c);
        EXPECT(gbc.pc(), 0xc184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc182), 0xcb);
        EXPECT(gbc.readMem(0xc183), 0xe4);
        // CB E4 03CC
        gbc.setState(0x4def, 0xdcde, 0xda80, 0x944b, 0x2bc0, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x4def, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdcde);
        EXPECT(gbc.pc(), 0x4df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03CE
        gbc.setState(0x5b47, 0x9b1b, 0xded0, 0x5cba, 0xece, 0x805f, 0x0, 0x0);
        gbc.writeMem(0x5b47, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9b1b);
        EXPECT(gbc.pc(), 0x5b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03CF
        gbc.setState(0x10c6, 0x6180, 0x6390, 0xb7f6, 0xb9ea, 0x9237, 0x0, 0x1);
        gbc.writeMem(0x10c6, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6180);
        EXPECT(gbc.pc(), 0x10c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03D0
        gbc.setState(0xbc85, 0x6d16, 0xe200, 0x36dd, 0x3d4f, 0x1a39, 0x1, 0x0);
        gbc.writeMem(0xbc85, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6d16);
        EXPECT(gbc.pc(), 0xbc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc85), 0xcb);
        EXPECT(gbc.readMem(0xbc86), 0xe4);
        // CB E4 03D1
        gbc.setState(0x6076, 0xebf1, 0x8250, 0xaaea, 0xacd8, 0x22f9, 0x1, 0x1);
        gbc.writeMem(0x6076, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xebf1);
        EXPECT(gbc.pc(), 0x6078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03D2
        gbc.setState(0x919a, 0xfed9, 0xb70, 0x39b3, 0xeb67, 0xf9c8, 0x0, 0x1);
        gbc.writeMem(0x919a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfed9);
        EXPECT(gbc.pc(), 0x919c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x919a), 0xcb);
        EXPECT(gbc.readMem(0x919b), 0xe4);
        // CB E4 03D3
        gbc.setState(0x2c9a, 0x8746, 0xbe0, 0x3a54, 0x353a, 0x1bfe, 0x1, 0x0);
        gbc.writeMem(0x2c9a, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8746);
        EXPECT(gbc.pc(), 0x2c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03D4
        gbc.setState(0x3eba, 0xf09e, 0xb670, 0x8054, 0x5bd9, 0x27bc, 0x1, 0x0);
        gbc.writeMem(0x3eba, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf09e);
        EXPECT(gbc.pc(), 0x3ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03D5
        gbc.setState(0x621d, 0xbafb, 0xaa60, 0xccf6, 0x64ac, 0xbe6d, 0x0, 0x1);
        gbc.writeMem(0x621d, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbafb);
        EXPECT(gbc.pc(), 0x621f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03D6
        gbc.setState(0x12df, 0xaa6, 0xa190, 0x3686, 0x5eba, 0x25ea, 0x0, 0x1);
        gbc.writeMem(0x12df, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xaa6);
        EXPECT(gbc.pc(), 0x12e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03D7
        gbc.setState(0xd255, 0x8764, 0x2870, 0xdb40, 0x5b88, 0x2c14, 0x1, 0x1);
        gbc.writeMem(0xd255, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8764);
        EXPECT(gbc.pc(), 0xd257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd255), 0xcb);
        EXPECT(gbc.readMem(0xd256), 0xe4);
        // CB E4 03D8
        gbc.setState(0x2923, 0x6968, 0x3710, 0xf6ef, 0xdd87, 0xef69, 0x0, 0x0);
        gbc.writeMem(0x2923, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6968);
        EXPECT(gbc.pc(), 0x2925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03D9
        gbc.setState(0x685b, 0x1c63, 0x3c10, 0x5ec1, 0xcbaa, 0xa9a1, 0x1, 0x0);
        gbc.writeMem(0x685b, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1c63);
        EXPECT(gbc.pc(), 0x685d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03DA
        gbc.setState(0xa785, 0x86c, 0x6e90, 0x5d6d, 0x2ffd, 0x3e7d, 0x1, 0x0);
        gbc.writeMem(0xa785, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x86c);
        EXPECT(gbc.pc(), 0xa787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa785), 0xcb);
        EXPECT(gbc.readMem(0xa786), 0xe4);
        // CB E4 03DB
        gbc.setState(0xd712, 0x6b19, 0x4880, 0x8b28, 0x3b21, 0xf9f7, 0x0, 0x0);
        gbc.writeMem(0xd712, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6b19);
        EXPECT(gbc.pc(), 0xd714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd712), 0xcb);
        EXPECT(gbc.readMem(0xd713), 0xe4);
        // CB E4 03DC
        gbc.setState(0xeed, 0xa798, 0xc160, 0x8ce3, 0xf38e, 0x85f3, 0x0, 0x0);
        gbc.writeMem(0xeed, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa798);
        EXPECT(gbc.pc(), 0xeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03DD
        gbc.setState(0xe2ae, 0xf398, 0x8110, 0x5855, 0xfc2d, 0x3055, 0x1, 0x0);
        gbc.writeMem(0xe2ae, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf398);
        EXPECT(gbc.pc(), 0xe2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ae), 0xcb);
        EXPECT(gbc.readMem(0xe2af), 0xe4);
        // CB E4 03DE
        gbc.setState(0x352, 0xebe2, 0x1bf0, 0x9388, 0x4f8c, 0xbfca, 0x1, 0x1);
        gbc.writeMem(0x352, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xebe2);
        EXPECT(gbc.pc(), 0x354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03DF
        gbc.setState(0xc643, 0xa273, 0x1870, 0x7731, 0x6cc0, 0x586c, 0x1, 0x0);
        gbc.writeMem(0xc643, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa273);
        EXPECT(gbc.pc(), 0xc645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc643), 0xcb);
        EXPECT(gbc.readMem(0xc644), 0xe4);
        // CB E4 03E0
        gbc.setState(0xa01f, 0x686c, 0x4a60, 0x4a3e, 0x688b, 0xafff, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x686c);
        EXPECT(gbc.pc(), 0xa021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01f), 0xcb);
        EXPECT(gbc.readMem(0xa020), 0xe4);
        // CB E4 03E1
        gbc.setState(0xeca5, 0xa45a, 0xdbc0, 0x71e7, 0xcb5c, 0xee09, 0x0, 0x0);
        gbc.writeMem(0xeca5, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa45a);
        EXPECT(gbc.pc(), 0xeca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca5), 0xcb);
        EXPECT(gbc.readMem(0xeca6), 0xe4);
        // CB E4 03E2
        gbc.setState(0x3d35, 0xb8ad, 0x2950, 0x48ab, 0x1889, 0x9bdd, 0x1, 0x1);
        gbc.writeMem(0x3d35, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb8ad);
        EXPECT(gbc.pc(), 0x3d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E4 03E3
        gbc.setState(0x9de, 0xad09, 0x4f40, 0x202, 0x34ba, 0xd687, 0x1, 0x0);
        gbc.writeMem(0x9de, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xad09);
        EXPECT(gbc.pc(), 0x9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03E4
        gbc.setState(0x8244, 0xf227, 0xc9f0, 0x822a, 0xadce, 0xc843, 0x0, 0x0);
        gbc.writeMem(0x8244, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf227);
        EXPECT(gbc.pc(), 0x8246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8244), 0xcb);
        EXPECT(gbc.readMem(0x8245), 0xe4);
        // CB E4 03E5
        gbc.setState(0x4328, 0xf030, 0x20e0, 0x66d8, 0xc3a7, 0xa2c9, 0x1, 0x0);
        gbc.writeMem(0x4328, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf030);
        EXPECT(gbc.pc(), 0x432a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03E6
        gbc.setState(0x287, 0xf51c, 0xfce0, 0x5629, 0x87db, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0x287, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf51c);
        EXPECT(gbc.pc(), 0x289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E4 03E7
        gbc.setState(0xceca, 0xb0, 0x88e0, 0x5e09, 0x3555, 0xd757, 0x0, 0x1);
        gbc.writeMem(0xceca, { 0xcb, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb0);
        EXPECT(gbc.pc(), 0xcecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceca), 0xcb);
        EXPECT(gbc.readMem(0xcecb), 0xe4);
    }
}
#endif
