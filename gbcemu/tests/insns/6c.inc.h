    TEST(gbcemu, opcode_6c) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 6C 0000
        gbc.setState(0x33cc, 0x79a7, 0x51a0, 0x9f80, 0xf064, 0xbc9e, 0x0, 0x0);
        gbc.writeMem(0x33cc, { 0x6c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x79a7, gbc.sp());
        EXPECT(0x33cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0001
        gbc.setState(0x7046, 0xff33, 0x80f0, 0x6b5b, 0xc448, 0x9b3a, 0x1, 0x0);
        gbc.writeMem(0x7046, { 0x6c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xff33, gbc.sp());
        EXPECT(0x7047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0002
        gbc.setState(0x55fc, 0xd6c1, 0xcb10, 0xc985, 0xf96c, 0x2b45, 0x1, 0x0);
        gbc.writeMem(0x55fc, { 0x6c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd6c1, gbc.sp());
        EXPECT(0x55fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0003
        gbc.setState(0x9dfd, 0xec9a, 0x5970, 0xf921, 0xb3c2, 0x27, 0x1, 0x0);
        gbc.writeMem(0x9dfd, { 0x6c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xec9a, gbc.sp());
        EXPECT(0x9dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9dfd));
        // 6C 0004
        gbc.setState(0x1d9a, 0x5cc2, 0xa940, 0xf9d1, 0x9c36, 0xd100, 0x0, 0x1);
        gbc.writeMem(0x1d9a, { 0x6c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5cc2, gbc.sp());
        EXPECT(0x1d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0005
        gbc.setState(0xe153, 0x8fe0, 0x28d0, 0xa435, 0x3674, 0x3cc9, 0x1, 0x1);
        gbc.writeMem(0xe153, { 0x6c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0xe154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe153));
        // 6C 0006
        gbc.setState(0x4ff5, 0x7ab2, 0x5f60, 0x41ab, 0x9d67, 0x29b3, 0x1, 0x1);
        gbc.writeMem(0x4ff5, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7ab2, gbc.sp());
        EXPECT(0x4ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0007
        gbc.setState(0x13b4, 0xee39, 0x9540, 0x640b, 0x1e53, 0x7beb, 0x0, 0x0);
        gbc.writeMem(0x13b4, { 0x6c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xee39, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0008
        gbc.setState(0xdfc4, 0xfc21, 0x2210, 0x1800, 0xed97, 0xc3a6, 0x0, 0x1);
        gbc.writeMem(0xdfc4, { 0x6c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfc21, gbc.sp());
        EXPECT(0xdfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdfc4));
        // 6C 0009
        gbc.setState(0x2dba, 0x1b29, 0x9f10, 0xdb60, 0x7316, 0xef7d, 0x1, 0x0);
        gbc.writeMem(0x2dba, { 0x6c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1b29, gbc.sp());
        EXPECT(0x2dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 000A
        gbc.setState(0x5eb2, 0x4787, 0xe920, 0x9e7, 0x2640, 0x9bde, 0x1, 0x0);
        gbc.writeMem(0x5eb2, { 0x6c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4787, gbc.sp());
        EXPECT(0x5eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 000B
        gbc.setState(0x9831, 0xa999, 0x4bf0, 0x9488, 0x9696, 0x8c45, 0x1, 0x0);
        gbc.writeMem(0x9831, { 0x6c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0x9832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9831));
        // 6C 000C
        gbc.setState(0xbd8f, 0x9b3d, 0xd960, 0x156e, 0xe58c, 0x8b48, 0x0, 0x1);
        gbc.writeMem(0xbd8f, { 0x6c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9b3d, gbc.sp());
        EXPECT(0xbd90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbd8f));
        // 6C 000D
        gbc.setState(0x9377, 0xede3, 0x74e0, 0xaf12, 0x91a1, 0x9d9f, 0x1, 0x0);
        gbc.writeMem(0x9377, { 0x6c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xede3, gbc.sp());
        EXPECT(0x9378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9377));
        // 6C 000E
        gbc.setState(0x56ea, 0xcbbc, 0x3050, 0x1864, 0x4c08, 0xb232, 0x1, 0x0);
        gbc.writeMem(0x56ea, { 0x6c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcbbc, gbc.sp());
        EXPECT(0x56eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 000F
        gbc.setState(0xbb32, 0x7b7e, 0xb0a0, 0x76a6, 0x4527, 0x7d7a, 0x0, 0x0);
        gbc.writeMem(0xbb32, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7b7e, gbc.sp());
        EXPECT(0xbb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbb32));
        // 6C 0010
        gbc.setState(0x5b48, 0x8f03, 0x380, 0x8be3, 0xb09a, 0x912b, 0x0, 0x1);
        gbc.writeMem(0x5b48, { 0x6c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8f03, gbc.sp());
        EXPECT(0x5b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0011
        gbc.setState(0xc946, 0x34a4, 0xd0b0, 0xcb48, 0x2f6d, 0x9caf, 0x1, 0x0);
        gbc.writeMem(0xc946, { 0x6c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x34a4, gbc.sp());
        EXPECT(0xc947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc946));
        // 6C 0012
        gbc.setState(0x24a1, 0xe573, 0x5a60, 0x7e16, 0x7711, 0x6b82, 0x0, 0x1);
        gbc.writeMem(0x24a1, { 0x6c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe573, gbc.sp());
        EXPECT(0x24a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0013
        gbc.setState(0xc555, 0x4b53, 0x6e10, 0x65a1, 0xdd20, 0xf9a6, 0x1, 0x0);
        gbc.writeMem(0xc555, { 0x6c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4b53, gbc.sp());
        EXPECT(0xc556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc555));
        // 6C 0014
        gbc.setState(0x1008, 0x1568, 0xf320, 0x51b4, 0xefa6, 0xed44, 0x1, 0x1);
        gbc.writeMem(0x1008, { 0x6c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1568, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0015
        gbc.setState(0x6bbf, 0x1b61, 0xffc0, 0x3740, 0xdc9a, 0x5d29, 0x0, 0x1);
        gbc.writeMem(0x6bbf, { 0x6c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1b61, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0016
        gbc.setState(0x7016, 0x3c5f, 0x9b0, 0x8d84, 0x41f3, 0xe8b0, 0x0, 0x0);
        gbc.writeMem(0x7016, { 0x6c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3c5f, gbc.sp());
        EXPECT(0x7017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0017
        gbc.setState(0xdf44, 0x64ef, 0xed40, 0x9ed1, 0xfd3e, 0xa02a, 0x0, 0x1);
        gbc.writeMem(0xdf44, { 0x6c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x64ef, gbc.sp());
        EXPECT(0xdf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdf44));
        // 6C 0018
        gbc.setState(0xaee, 0x9b0a, 0x1fc0, 0x7e51, 0x8117, 0x6b2, 0x0, 0x0);
        gbc.writeMem(0xaee, { 0x6c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9b0a, gbc.sp());
        EXPECT(0xaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0019
        gbc.setState(0xe3db, 0x77e, 0xf260, 0x6cd, 0x91bc, 0xadb4, 0x1, 0x0);
        gbc.writeMem(0xe3db, { 0x6c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x77e, gbc.sp());
        EXPECT(0xe3dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe3db));
        // 6C 001A
        gbc.setState(0x1cd3, 0xe01, 0xab80, 0xd20f, 0xbc5, 0x1e84, 0x1, 0x1);
        gbc.writeMem(0x1cd3, { 0x6c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe01, gbc.sp());
        EXPECT(0x1cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 001B
        gbc.setState(0xdab8, 0x7482, 0xa140, 0x1b39, 0xe7a1, 0xd9d1, 0x1, 0x0);
        gbc.writeMem(0xdab8, { 0x6c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0xdab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdab8));
        // 6C 001C
        gbc.setState(0x9941, 0x3daf, 0x6170, 0x81a, 0xfd7f, 0xb182, 0x0, 0x1);
        gbc.writeMem(0x9941, { 0x6c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3daf, gbc.sp());
        EXPECT(0x9942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9941));
        // 6C 001D
        gbc.setState(0x17e, 0x9f2c, 0xc7f0, 0xf921, 0x5a17, 0x9790, 0x1, 0x0);
        gbc.writeMem(0x17e, { 0x6c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 001E
        gbc.setState(0x1d12, 0x2de, 0x3630, 0x409, 0xa7e2, 0x9c69, 0x1, 0x0);
        gbc.writeMem(0x1d12, { 0x6c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2de, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0020
        gbc.setState(0x3e90, 0x60c7, 0x6a30, 0xd625, 0x97a, 0x3361, 0x0, 0x1);
        gbc.writeMem(0x3e90, { 0x6c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x60c7, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0021
        gbc.setState(0x61f2, 0xd55d, 0xc950, 0x7012, 0x261f, 0xc581, 0x1, 0x0);
        gbc.writeMem(0x61f2, { 0x6c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0x61f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0022
        gbc.setState(0x358c, 0x4ed8, 0xe890, 0xdf90, 0xd946, 0xed80, 0x1, 0x0);
        gbc.writeMem(0x358c, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4ed8, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0023
        gbc.setState(0x4e17, 0x7a69, 0x4ba0, 0x6a0, 0xe340, 0xa4c5, 0x0, 0x0);
        gbc.writeMem(0x4e17, { 0x6c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7a69, gbc.sp());
        EXPECT(0x4e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0024
        gbc.setState(0xbecc, 0xca83, 0x8160, 0x2c9d, 0x3f67, 0x9b50, 0x1, 0x0);
        gbc.writeMem(0xbecc, { 0x6c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xca83, gbc.sp());
        EXPECT(0xbecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbecc));
        // 6C 0025
        gbc.setState(0x68be, 0x378e, 0x730, 0xeb37, 0x1024, 0x4e63, 0x1, 0x0);
        gbc.writeMem(0x68be, { 0x6c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x378e, gbc.sp());
        EXPECT(0x68bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0026
        gbc.setState(0xc426, 0xa0c5, 0x5620, 0xb5aa, 0x16e6, 0xeaed, 0x1, 0x0);
        gbc.writeMem(0xc426, { 0x6c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa0c5, gbc.sp());
        EXPECT(0xc427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc426));
        // 6C 0028
        gbc.setState(0xd6c3, 0xf83d, 0xbe80, 0xd575, 0x7779, 0xfd05, 0x0, 0x0);
        gbc.writeMem(0xd6c3, { 0x6c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf83d, gbc.sp());
        EXPECT(0xd6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd6c3));
        // 6C 0029
        gbc.setState(0xaf7a, 0x7ed2, 0x950, 0x557e, 0xf70b, 0x6b98, 0x1, 0x1);
        gbc.writeMem(0xaf7a, { 0x6c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7ed2, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaf7a));
        // 6C 002A
        gbc.setState(0x98e4, 0x8044, 0xdae0, 0x1aa3, 0x4d78, 0xa7a, 0x1, 0x0);
        gbc.writeMem(0x98e4, { 0x6c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8044, gbc.sp());
        EXPECT(0x98e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x98e4));
        // 6C 002B
        gbc.setState(0xc134, 0xc425, 0xe20, 0x165c, 0x20b3, 0x385a, 0x1, 0x0);
        gbc.writeMem(0xc134, { 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0xc135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc134));
        // 6C 002C
        gbc.setState(0xd84e, 0x3c08, 0x6b10, 0xe4a9, 0xa33e, 0x2501, 0x1, 0x1);
        gbc.writeMem(0xd84e, { 0x6c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c08, gbc.sp());
        EXPECT(0xd84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd84e));
        // 6C 002D
        gbc.setState(0x6981, 0xaf64, 0x5bd0, 0x7b5d, 0x114b, 0x8c21, 0x0, 0x0);
        gbc.writeMem(0x6981, { 0x6c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaf64, gbc.sp());
        EXPECT(0x6982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 002E
        gbc.setState(0xd3a6, 0xb5d0, 0x5aa0, 0xd47f, 0xfb40, 0xe1c, 0x1, 0x0);
        gbc.writeMem(0xd3a6, { 0x6c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb5d0, gbc.sp());
        EXPECT(0xd3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd3a6));
        // 6C 002F
        gbc.setState(0x8bbd, 0xc288, 0xdea0, 0x77a6, 0xd708, 0xe9c4, 0x1, 0x0);
        gbc.writeMem(0x8bbd, { 0x6c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0x8bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8bbd));
        // 6C 0030
        gbc.setState(0x5cc3, 0x2a1c, 0xe360, 0x7c9a, 0xd69c, 0x7375, 0x0, 0x0);
        gbc.writeMem(0x5cc3, { 0x6c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0x5cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0031
        gbc.setState(0x9b2a, 0xf6c3, 0xd600, 0xf4aa, 0x611, 0xbfbc, 0x1, 0x0);
        gbc.writeMem(0x9b2a, { 0x6c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf6c3, gbc.sp());
        EXPECT(0x9b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9b2a));
        // 6C 0032
        gbc.setState(0x2065, 0xabe7, 0x43d0, 0xb972, 0x5466, 0xfc50, 0x0, 0x0);
        gbc.writeMem(0x2065, { 0x6c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xabe7, gbc.sp());
        EXPECT(0x2066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0033
        gbc.setState(0xaf22, 0x8a7b, 0x6e30, 0xed1, 0x3b86, 0x41f3, 0x0, 0x0);
        gbc.writeMem(0xaf22, { 0x6c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8a7b, gbc.sp());
        EXPECT(0xaf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaf22));
        // 6C 0034
        gbc.setState(0x6ada, 0x4d57, 0x5400, 0x3cc2, 0xf8d, 0x213b, 0x0, 0x1);
        gbc.writeMem(0x6ada, { 0x6c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4d57, gbc.sp());
        EXPECT(0x6adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0035
        gbc.setState(0x47f0, 0xf1bf, 0xf9c0, 0x567d, 0x7ec3, 0x2b61, 0x0, 0x0);
        gbc.writeMem(0x47f0, { 0x6c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf1bf, gbc.sp());
        EXPECT(0x47f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0036
        gbc.setState(0xdcf8, 0xd8af, 0xe50, 0xe68, 0x270e, 0xd299, 0x0, 0x0);
        gbc.writeMem(0xdcf8, { 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd8af, gbc.sp());
        EXPECT(0xdcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdcf8));
        // 6C 0037
        gbc.setState(0xd74c, 0x4ee5, 0x8100, 0xbccd, 0x5994, 0xa1d3, 0x0, 0x0);
        gbc.writeMem(0xd74c, { 0x6c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4ee5, gbc.sp());
        EXPECT(0xd74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd74c));
        // 6C 0038
        gbc.setState(0xe33f, 0xea07, 0x1680, 0x3c31, 0x5fa7, 0x9a36, 0x1, 0x0);
        gbc.writeMem(0xe33f, { 0x6c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xea07, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe33f));
        // 6C 0039
        gbc.setState(0xc35b, 0xdec1, 0x77e0, 0x77cb, 0x7d70, 0x5227, 0x1, 0x0);
        gbc.writeMem(0xc35b, { 0x6c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdec1, gbc.sp());
        EXPECT(0xc35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc35b));
        // 6C 003A
        gbc.setState(0xe003, 0x9aa3, 0xca40, 0xef81, 0x2a97, 0xdbe2, 0x0, 0x0);
        gbc.writeMem(0xe003, { 0x6c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9aa3, gbc.sp());
        EXPECT(0xe004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe003));
        // 6C 003B
        gbc.setState(0x90a8, 0x205f, 0xebe0, 0xb180, 0xc8d6, 0xe9b0, 0x1, 0x1);
        gbc.writeMem(0x90a8, { 0x6c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x205f, gbc.sp());
        EXPECT(0x90a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x90a8));
        // 6C 003C
        gbc.setState(0xd1ab, 0x119e, 0xd440, 0x541, 0xc0b2, 0xd80e, 0x1, 0x0);
        gbc.writeMem(0xd1ab, { 0x6c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd1ab));
        // 6C 003D
        gbc.setState(0x90f8, 0x888c, 0x2980, 0xd80, 0xc861, 0xdf8e, 0x1, 0x0);
        gbc.writeMem(0x90f8, { 0x6c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x888c, gbc.sp());
        EXPECT(0x90f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x90f8));
        // 6C 003E
        gbc.setState(0x45a2, 0xc6a5, 0x75d0, 0x88e0, 0x6a2a, 0xaaf2, 0x1, 0x0);
        gbc.writeMem(0x45a2, { 0x6c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc6a5, gbc.sp());
        EXPECT(0x45a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 003F
        gbc.setState(0xa616, 0x5751, 0x6170, 0x3c96, 0x4c7a, 0xccc3, 0x0, 0x0);
        gbc.writeMem(0xa616, { 0x6c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0xa617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa616));
        // 6C 0040
        gbc.setState(0xa532, 0xb93c, 0x4510, 0x6f75, 0xa592, 0x395f, 0x1, 0x1);
        gbc.writeMem(0xa532, { 0x6c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb93c, gbc.sp());
        EXPECT(0xa533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa532));
        // 6C 0041
        gbc.setState(0xaa79, 0xf75c, 0xce00, 0xdfea, 0xb559, 0x61ef, 0x0, 0x0);
        gbc.writeMem(0xaa79, { 0x6c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf75c, gbc.sp());
        EXPECT(0xaa7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaa79));
        // 6C 0042
        gbc.setState(0xa8f8, 0x7eb3, 0x21d0, 0x9da7, 0xff7a, 0x44ad, 0x0, 0x1);
        gbc.writeMem(0xa8f8, { 0x6c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7eb3, gbc.sp());
        EXPECT(0xa8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa8f8));
        // 6C 0043
        gbc.setState(0x3914, 0x6779, 0xf840, 0x7649, 0xbdd1, 0x6206, 0x0, 0x1);
        gbc.writeMem(0x3914, { 0x6c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6779, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0045
        gbc.setState(0x4f0c, 0x6317, 0x8880, 0x77f, 0xa00f, 0x960d, 0x1, 0x1);
        gbc.writeMem(0x4f0c, { 0x6c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6317, gbc.sp());
        EXPECT(0x4f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0046
        gbc.setState(0x8040, 0x90b0, 0xead0, 0xc312, 0xa274, 0x41cf, 0x0, 0x1);
        gbc.writeMem(0x8040, { 0x6c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x90b0, gbc.sp());
        EXPECT(0x8041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8040));
        // 6C 0047
        gbc.setState(0x6a4b, 0xf3, 0x8d10, 0x8177, 0x2387, 0x5636, 0x1, 0x1);
        gbc.writeMem(0x6a4b, { 0x6c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0048
        gbc.setState(0xbe2b, 0xa119, 0xbc0, 0x18a, 0xe850, 0xa944, 0x1, 0x1);
        gbc.writeMem(0xbe2b, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa119, gbc.sp());
        EXPECT(0xbe2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbe2b));
        // 6C 0049
        gbc.setState(0xb4ec, 0x8395, 0xac60, 0xbbf0, 0x3a89, 0xa208, 0x1, 0x0);
        gbc.writeMem(0xb4ec, { 0x6c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0xb4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb4ec));
        // 6C 004A
        gbc.setState(0xc8cf, 0xd092, 0x9330, 0x3842, 0xc322, 0xfce3, 0x0, 0x1);
        gbc.writeMem(0xc8cf, { 0x6c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd092, gbc.sp());
        EXPECT(0xc8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc8cf));
        // 6C 004B
        gbc.setState(0xf0d, 0x83ca, 0xa4a0, 0x9915, 0xae0d, 0x7b01, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0x6c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x83ca, gbc.sp());
        EXPECT(0xf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 004C
        gbc.setState(0x1b44, 0xb6bc, 0x99e0, 0xaefc, 0x92a, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x1b44, { 0x6c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb6bc, gbc.sp());
        EXPECT(0x1b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 004D
        gbc.setState(0xddbe, 0x9750, 0xde0, 0xfbc0, 0xe73f, 0xa9c8, 0x1, 0x0);
        gbc.writeMem(0xddbe, { 0x6c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9750, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xddbe));
        // 6C 004E
        gbc.setState(0xbfd1, 0x2631, 0x5db0, 0xafb7, 0xa764, 0xaefc, 0x1, 0x1);
        gbc.writeMem(0xbfd1, { 0x6c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2631, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbfd1));
        // 6C 004F
        gbc.setState(0x789, 0xce80, 0x2590, 0xe344, 0xc52d, 0x489e, 0x1, 0x0);
        gbc.writeMem(0x789, { 0x6c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xce80, gbc.sp());
        EXPECT(0x78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0050
        gbc.setState(0x1dac, 0x23b8, 0x94e0, 0x228b, 0x58a7, 0xd42a, 0x1, 0x0);
        gbc.writeMem(0x1dac, { 0x6c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x23b8, gbc.sp());
        EXPECT(0x1dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0051
        gbc.setState(0xd2c9, 0xa9f5, 0xce00, 0xb13, 0x2447, 0x66b3, 0x1, 0x1);
        gbc.writeMem(0xd2c9, { 0x6c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa9f5, gbc.sp());
        EXPECT(0xd2ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd2c9));
        // 6C 0052
        gbc.setState(0x8ca5, 0x8262, 0x56e0, 0x109, 0xc12d, 0x75af, 0x0, 0x1);
        gbc.writeMem(0x8ca5, { 0x6c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8262, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8ca5));
        // 6C 0053
        gbc.setState(0x1c7, 0x34af, 0xccb0, 0xa206, 0x4e1b, 0xb81, 0x1, 0x1);
        gbc.writeMem(0x1c7, { 0x6c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x34af, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0054
        gbc.setState(0x135d, 0xf082, 0xa10, 0x30b0, 0xd275, 0x2685, 0x1, 0x1);
        gbc.writeMem(0x135d, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf082, gbc.sp());
        EXPECT(0x135e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0055
        gbc.setState(0x3f2a, 0xb723, 0x73a0, 0x40a2, 0x26a7, 0x25d1, 0x1, 0x0);
        gbc.writeMem(0x3f2a, { 0x6c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb723, gbc.sp());
        EXPECT(0x3f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0056
        gbc.setState(0xcca4, 0xe05b, 0x37c0, 0xa60a, 0xc82c, 0x7c26, 0x0, 0x1);
        gbc.writeMem(0xcca4, { 0x6c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe05b, gbc.sp());
        EXPECT(0xcca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcca4));
        // 6C 0057
        gbc.setState(0x5016, 0x7b29, 0x5240, 0x8903, 0xe91d, 0x25c6, 0x0, 0x0);
        gbc.writeMem(0x5016, { 0x6c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7b29, gbc.sp());
        EXPECT(0x5017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0058
        gbc.setState(0x452c, 0xaca1, 0xae80, 0x22ed, 0x9c97, 0x9e70, 0x1, 0x0);
        gbc.writeMem(0x452c, { 0x6c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaca1, gbc.sp());
        EXPECT(0x452d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0059
        gbc.setState(0xc33b, 0xbc7c, 0x8c30, 0x3922, 0x4d3c, 0xd98f, 0x0, 0x1);
        gbc.writeMem(0xc33b, { 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbc7c, gbc.sp());
        EXPECT(0xc33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc33b));
        // 6C 005A
        gbc.setState(0xc9c7, 0xceb0, 0x99c0, 0x41a4, 0x40a3, 0xc6bd, 0x1, 0x1);
        gbc.writeMem(0xc9c7, { 0x6c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xceb0, gbc.sp());
        EXPECT(0xc9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc9c7));
        // 6C 005B
        gbc.setState(0xa995, 0x337e, 0x6560, 0x6d4d, 0xf8dc, 0x3783, 0x0, 0x1);
        gbc.writeMem(0xa995, { 0x6c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x337e, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa995));
        // 6C 005C
        gbc.setState(0x7294, 0xe2f9, 0x7a40, 0xcd0f, 0x6a08, 0x2875, 0x0, 0x1);
        gbc.writeMem(0x7294, { 0x6c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe2f9, gbc.sp());
        EXPECT(0x7295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 005D
        gbc.setState(0x38e5, 0x73e7, 0x3590, 0x694, 0xb97, 0x2a61, 0x0, 0x1);
        gbc.writeMem(0x38e5, { 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x73e7, gbc.sp());
        EXPECT(0x38e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 005E
        gbc.setState(0xca20, 0xed07, 0x89a0, 0x710d, 0xb2bc, 0x4f52, 0x1, 0x0);
        gbc.writeMem(0xca20, { 0x6c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xed07, gbc.sp());
        EXPECT(0xca21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xca20));
        // 6C 005F
        gbc.setState(0x8c99, 0xdd9d, 0x2670, 0x8e53, 0xa921, 0x9080, 0x0, 0x0);
        gbc.writeMem(0x8c99, { 0x6c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdd9d, gbc.sp());
        EXPECT(0x8c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8c99));
        // 6C 0060
        gbc.setState(0xd71b, 0xf1aa, 0x3b00, 0xd3d9, 0xe610, 0xa250, 0x0, 0x0);
        gbc.writeMem(0xd71b, { 0x6c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf1aa, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd71b));
        // 6C 0061
        gbc.setState(0x2b97, 0x36f2, 0x8ba0, 0xc471, 0x7388, 0x1aba, 0x1, 0x1);
        gbc.writeMem(0x2b97, { 0x6c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x2b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0062
        gbc.setState(0x848f, 0x2546, 0x5240, 0x331c, 0x2c07, 0x96c, 0x1, 0x0);
        gbc.writeMem(0x848f, { 0x6c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2546, gbc.sp());
        EXPECT(0x8490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x848f));
        // 6C 0063
        gbc.setState(0xd249, 0xb74, 0x9890, 0x11f1, 0x82da, 0x7540, 0x1, 0x0);
        gbc.writeMem(0xd249, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb74, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd249));
        // 6C 0064
        gbc.setState(0x9f7f, 0x7d14, 0x7e60, 0x8d64, 0x188f, 0x6b90, 0x1, 0x1);
        gbc.writeMem(0x9f7f, { 0x6c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d14, gbc.sp());
        EXPECT(0x9f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9f7f));
        // 6C 0065
        gbc.setState(0x7ca5, 0x989f, 0x9e70, 0x3c42, 0x2345, 0x9bd1, 0x0, 0x0);
        gbc.writeMem(0x7ca5, { 0x6c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x989f, gbc.sp());
        EXPECT(0x7ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0066
        gbc.setState(0x2d04, 0x843e, 0x9210, 0x61ec, 0x4551, 0x8fb9, 0x0, 0x1);
        gbc.writeMem(0x2d04, { 0x6c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x843e, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0067
        gbc.setState(0x3c2a, 0x6f3c, 0xdf0, 0xf952, 0x6a, 0xeadc, 0x1, 0x0);
        gbc.writeMem(0x3c2a, { 0x6c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6f3c, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0068
        gbc.setState(0x71a6, 0x5182, 0x870, 0xfb61, 0xc1e2, 0x4667, 0x1, 0x0);
        gbc.writeMem(0x71a6, { 0x6c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5182, gbc.sp());
        EXPECT(0x71a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0069
        gbc.setState(0xcf9f, 0xebc5, 0xe8c0, 0x4872, 0xce3f, 0xd70b, 0x0, 0x0);
        gbc.writeMem(0xcf9f, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xebc5, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcf9f));
        // 6C 006A
        gbc.setState(0x215d, 0x2c00, 0xe090, 0x9ba4, 0x41f0, 0x9c44, 0x0, 0x1);
        gbc.writeMem(0x215d, { 0x6c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2c00, gbc.sp());
        EXPECT(0x215e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 006B
        gbc.setState(0x7424, 0xf1d6, 0xf700, 0x986b, 0xca6a, 0x8843, 0x1, 0x1);
        gbc.writeMem(0x7424, { 0x6c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf1d6, gbc.sp());
        EXPECT(0x7425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 006C
        gbc.setState(0x597c, 0x7a82, 0xa90, 0xdb69, 0x7f46, 0x62e3, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7a82, gbc.sp());
        EXPECT(0x597d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 006D
        gbc.setState(0xb416, 0x1bf8, 0xddb0, 0xb9d, 0xbd4a, 0x96de, 0x1, 0x0);
        gbc.writeMem(0xb416, { 0x6c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1bf8, gbc.sp());
        EXPECT(0xb417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb416));
        // 6C 006E
        gbc.setState(0x85de, 0xe7bf, 0x94f0, 0x32d, 0xbf9c, 0xbc20, 0x0, 0x0);
        gbc.writeMem(0x85de, { 0x6c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0x85df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x85de));
        // 6C 006F
        gbc.setState(0x293f, 0x9bc, 0x1b40, 0x6720, 0xbc40, 0x73b, 0x0, 0x1);
        gbc.writeMem(0x293f, { 0x6c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9bc, gbc.sp());
        EXPECT(0x2940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0070
        gbc.setState(0x3c2a, 0xbaeb, 0xa820, 0xa31e, 0x5d05, 0x9e92, 0x0, 0x1);
        gbc.writeMem(0x3c2a, { 0x6c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbaeb, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0071
        gbc.setState(0x9bee, 0x5413, 0xb740, 0x9494, 0xdf1d, 0xaa71, 0x0, 0x1);
        gbc.writeMem(0x9bee, { 0x6c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5413, gbc.sp());
        EXPECT(0x9bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9bee));
        // 6C 0072
        gbc.setState(0x1203, 0xb721, 0x6c10, 0xc13d, 0x5b9c, 0xef8e, 0x1, 0x0);
        gbc.writeMem(0x1203, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0x1204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0073
        gbc.setState(0x4c0b, 0xac77, 0x3a80, 0x5cb, 0xa40f, 0xfce9, 0x1, 0x0);
        gbc.writeMem(0x4c0b, { 0x6c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac77, gbc.sp());
        EXPECT(0x4c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0074
        gbc.setState(0x3ef4, 0xbace, 0xadd0, 0x44c9, 0x43f8, 0x5d94, 0x1, 0x1);
        gbc.writeMem(0x3ef4, { 0x6c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbace, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0075
        gbc.setState(0x67d9, 0x8c58, 0xb520, 0xa550, 0x7b65, 0xaf9a, 0x0, 0x0);
        gbc.writeMem(0x67d9, { 0x6c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8c58, gbc.sp());
        EXPECT(0x67da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0076
        gbc.setState(0x1f0d, 0x27b, 0x66f0, 0x169e, 0x82d7, 0x1783, 0x1, 0x1);
        gbc.writeMem(0x1f0d, { 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x27b, gbc.sp());
        EXPECT(0x1f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0077
        gbc.setState(0xc53e, 0xdbdf, 0x6b60, 0x85e3, 0x6bd4, 0x3c2c, 0x1, 0x1);
        gbc.writeMem(0xc53e, { 0x6c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdbdf, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc53e));
        // 6C 0078
        gbc.setState(0x6da7, 0x4b01, 0xb960, 0xa290, 0x9105, 0x4fc5, 0x0, 0x1);
        gbc.writeMem(0x6da7, { 0x6c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4b01, gbc.sp());
        EXPECT(0x6da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 007A
        gbc.setState(0xebda, 0x4224, 0x890, 0x2239, 0x762c, 0xc612, 0x0, 0x0);
        gbc.writeMem(0xebda, { 0x6c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4224, gbc.sp());
        EXPECT(0xebdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xebda));
        // 6C 007B
        gbc.setState(0x41c0, 0x1eb9, 0x4190, 0x169a, 0x7416, 0x8615, 0x1, 0x1);
        gbc.writeMem(0x41c0, { 0x6c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1eb9, gbc.sp());
        EXPECT(0x41c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 007C
        gbc.setState(0x4409, 0xb3ac, 0x8420, 0xfc9a, 0x65b6, 0x8099, 0x0, 0x1);
        gbc.writeMem(0x4409, { 0x6c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb3ac, gbc.sp());
        EXPECT(0x440a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 007D
        gbc.setState(0x9ab6, 0x5c05, 0x2a00, 0x2c37, 0x4651, 0xc118, 0x1, 0x0);
        gbc.writeMem(0x9ab6, { 0x6c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5c05, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9ab6));
        // 6C 007E
        gbc.setState(0x4d8b, 0x7a8e, 0x5970, 0x6ad3, 0xa231, 0xbbd4, 0x1, 0x0);
        gbc.writeMem(0x4d8b, { 0x6c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7a8e, gbc.sp());
        EXPECT(0x4d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 007F
        gbc.setState(0x2cfa, 0xb9db, 0xec60, 0xe306, 0x154b, 0x51f3, 0x0, 0x1);
        gbc.writeMem(0x2cfa, { 0x6c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb9db, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0080
        gbc.setState(0xc3a5, 0xe899, 0xd3c0, 0x13a1, 0x7d78, 0xd764, 0x1, 0x1);
        gbc.writeMem(0xc3a5, { 0x6c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe899, gbc.sp());
        EXPECT(0xc3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc3a5));
        // 6C 0081
        gbc.setState(0xb9d, 0xc78a, 0x4400, 0x34d9, 0x47b, 0x64c2, 0x1, 0x0);
        gbc.writeMem(0xb9d, { 0x6c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc78a, gbc.sp());
        EXPECT(0xb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0082
        gbc.setState(0xbbaa, 0xf5c3, 0x59f0, 0x2214, 0x3cf1, 0xff24, 0x0, 0x1);
        gbc.writeMem(0xbbaa, { 0x6c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf5c3, gbc.sp());
        EXPECT(0xbbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbbaa));
        // 6C 0083
        gbc.setState(0x1363, 0x920, 0xb490, 0x5786, 0x773b, 0x879f, 0x1, 0x0);
        gbc.writeMem(0x1363, { 0x6c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x920, gbc.sp());
        EXPECT(0x1364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0084
        gbc.setState(0x1641, 0x9406, 0x15a0, 0x2885, 0x252f, 0x44f7, 0x1, 0x0);
        gbc.writeMem(0x1641, { 0x6c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9406, gbc.sp());
        EXPECT(0x1642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0085
        gbc.setState(0x8aba, 0x3be9, 0x5fd0, 0x52ca, 0xdd19, 0x423f, 0x0, 0x1);
        gbc.writeMem(0x8aba, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3be9, gbc.sp());
        EXPECT(0x8abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8aba));
        // 6C 0086
        gbc.setState(0x5a83, 0xfe8c, 0x8990, 0xbaa8, 0x528d, 0xadf3, 0x1, 0x0);
        gbc.writeMem(0x5a83, { 0x6c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfe8c, gbc.sp());
        EXPECT(0x5a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0087
        gbc.setState(0x6518, 0x37b4, 0x2860, 0xd3b2, 0x7a93, 0xfa6e, 0x0, 0x0);
        gbc.writeMem(0x6518, { 0x6c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x37b4, gbc.sp());
        EXPECT(0x6519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0088
        gbc.setState(0x438b, 0x6456, 0x2130, 0xe64, 0x3e12, 0xd129, 0x1, 0x1);
        gbc.writeMem(0x438b, { 0x6c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6456, gbc.sp());
        EXPECT(0x438c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0089
        gbc.setState(0xdd75, 0xc95e, 0x6120, 0x8164, 0xed8a, 0x90c4, 0x0, 0x0);
        gbc.writeMem(0xdd75, { 0x6c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc95e, gbc.sp());
        EXPECT(0xdd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdd75));
        // 6C 008A
        gbc.setState(0x6d56, 0xdb67, 0x2d50, 0xcb0a, 0x5d92, 0xf8b1, 0x1, 0x0);
        gbc.writeMem(0x6d56, { 0x6c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdb67, gbc.sp());
        EXPECT(0x6d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 008B
        gbc.setState(0xd058, 0xf3a0, 0x8820, 0x6a34, 0x9d25, 0xb29b, 0x1, 0x0);
        gbc.writeMem(0xd058, { 0x6c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf3a0, gbc.sp());
        EXPECT(0xd059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd058));
        // 6C 008C
        gbc.setState(0xb416, 0x682c, 0x24a0, 0xa9b2, 0x7150, 0xa7b0, 0x1, 0x1);
        gbc.writeMem(0xb416, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0xb417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb416));
        // 6C 008D
        gbc.setState(0x6627, 0xd487, 0x5f90, 0xd71c, 0x3556, 0xe851, 0x1, 0x0);
        gbc.writeMem(0x6627, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd487, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 008E
        gbc.setState(0x6ad1, 0xd6a7, 0xe800, 0x391e, 0x49d9, 0x1d8e, 0x0, 0x0);
        gbc.writeMem(0x6ad1, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd6a7, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 008F
        gbc.setState(0x16ad, 0x52d1, 0xbd70, 0x3759, 0x97c1, 0x160b, 0x0, 0x0);
        gbc.writeMem(0x16ad, { 0x6c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x52d1, gbc.sp());
        EXPECT(0x16ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0090
        gbc.setState(0xab1b, 0x9207, 0x9a0, 0xe68b, 0x8c2c, 0x17f1, 0x0, 0x0);
        gbc.writeMem(0xab1b, { 0x6c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9207, gbc.sp());
        EXPECT(0xab1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xab1b));
        // 6C 0091
        gbc.setState(0x9041, 0x1235, 0xe2f0, 0x6a22, 0xb0b5, 0xf4c9, 0x1, 0x1);
        gbc.writeMem(0x9041, { 0x6c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1235, gbc.sp());
        EXPECT(0x9042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9041));
        // 6C 0092
        gbc.setState(0x4f11, 0xf489, 0x640, 0x1f66, 0x62c5, 0x809e, 0x0, 0x0);
        gbc.writeMem(0x4f11, { 0x6c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf489, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0093
        gbc.setState(0xe639, 0xb3d7, 0x92f0, 0xe4eb, 0x6eda, 0x352b, 0x0, 0x0);
        gbc.writeMem(0xe639, { 0x6c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb3d7, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe639));
        // 6C 0094
        gbc.setState(0x8ba7, 0x615d, 0x8bd0, 0xc0f3, 0xdc8a, 0xe20c, 0x1, 0x0);
        gbc.writeMem(0x8ba7, { 0x6c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x615d, gbc.sp());
        EXPECT(0x8ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8ba7));
        // 6C 0095
        gbc.setState(0xc762, 0x389d, 0x5f50, 0x660, 0x75af, 0xa7ab, 0x0, 0x0);
        gbc.writeMem(0xc762, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x389d, gbc.sp());
        EXPECT(0xc763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc762));
        // 6C 0096
        gbc.setState(0xdf6f, 0xec11, 0xe4b0, 0x9e7c, 0xc7f9, 0xa561, 0x1, 0x0);
        gbc.writeMem(0xdf6f, { 0x6c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xec11, gbc.sp());
        EXPECT(0xdf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdf6f));
        // 6C 0097
        gbc.setState(0xc256, 0xbafb, 0xc370, 0x9e4a, 0xba5b, 0x53e3, 0x0, 0x1);
        gbc.writeMem(0xc256, { 0x6c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbafb, gbc.sp());
        EXPECT(0xc257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc256));
        // 6C 0098
        gbc.setState(0x59f7, 0xfd4e, 0xa0a0, 0xc022, 0xa848, 0x1232, 0x0, 0x1);
        gbc.writeMem(0x59f7, { 0x6c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfd4e, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0099
        gbc.setState(0x7df0, 0xa6b7, 0x1c40, 0x2ffd, 0x5715, 0x4709, 0x1, 0x0);
        gbc.writeMem(0x7df0, { 0x6c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa6b7, gbc.sp());
        EXPECT(0x7df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 009A
        gbc.setState(0xb646, 0x19ee, 0x7f40, 0x5d5c, 0xa35e, 0x85b1, 0x1, 0x1);
        gbc.writeMem(0xb646, { 0x6c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x19ee, gbc.sp());
        EXPECT(0xb647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb646));
        // 6C 009B
        gbc.setState(0x6525, 0x3aab, 0xcd20, 0xff89, 0x378a, 0x2813, 0x1, 0x1);
        gbc.writeMem(0x6525, { 0x6c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3aab, gbc.sp());
        EXPECT(0x6526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 009C
        gbc.setState(0x72e6, 0x9448, 0x4c60, 0x1ca2, 0x43ae, 0x6c6d, 0x0, 0x1);
        gbc.writeMem(0x72e6, { 0x6c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9448, gbc.sp());
        EXPECT(0x72e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 009D
        gbc.setState(0x9b68, 0xcfbb, 0xa0a0, 0x2dd5, 0x8eb9, 0x5637, 0x1, 0x1);
        gbc.writeMem(0x9b68, { 0x6c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0x9b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9b68));
        // 6C 009E
        gbc.setState(0x6e9e, 0x8215, 0x3420, 0xfde3, 0xef4, 0xda6b, 0x1, 0x0);
        gbc.writeMem(0x6e9e, { 0x6c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8215, gbc.sp());
        EXPECT(0x6e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 009F
        gbc.setState(0x806f, 0xf307, 0xe5d0, 0x2655, 0x2a63, 0x7be2, 0x0, 0x1);
        gbc.writeMem(0x806f, { 0x6c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf307, gbc.sp());
        EXPECT(0x8070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x806f));
        // 6C 00A1
        gbc.setState(0x5e3e, 0xb917, 0x2f20, 0x42e, 0xfd2d, 0x113f, 0x0, 0x0);
        gbc.writeMem(0x5e3e, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00A2
        gbc.setState(0x9bf5, 0xabc1, 0xbe0, 0x94f2, 0x93c1, 0xa1a0, 0x1, 0x0);
        gbc.writeMem(0x9bf5, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9bf5));
        // 6C 00A4
        gbc.setState(0xc750, 0xfa8f, 0x6e50, 0xd175, 0x46b1, 0xc9aa, 0x0, 0x1);
        gbc.writeMem(0xc750, { 0x6c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfa8f, gbc.sp());
        EXPECT(0xc751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc750));
        // 6C 00A5
        gbc.setState(0x53fa, 0x5d99, 0xb550, 0x2b5b, 0xcbc5, 0xb87f, 0x1, 0x1);
        gbc.writeMem(0x53fa, { 0x6c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5d99, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00A6
        gbc.setState(0x5fa7, 0xdd35, 0xfb40, 0xe41, 0x77fc, 0x9145, 0x1, 0x1);
        gbc.writeMem(0x5fa7, { 0x6c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0x5fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00A7
        gbc.setState(0x3e32, 0xcf04, 0x4080, 0x186a, 0x7464, 0xbf40, 0x1, 0x1);
        gbc.writeMem(0x3e32, { 0x6c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcf04, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00A8
        gbc.setState(0x814b, 0x4a04, 0x4e90, 0x727d, 0x4b00, 0x3491, 0x0, 0x0);
        gbc.writeMem(0x814b, { 0x6c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4a04, gbc.sp());
        EXPECT(0x814c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x814b));
        // 6C 00A9
        gbc.setState(0x3d00, 0xfe87, 0xc990, 0xd43a, 0xf0d7, 0xcb71, 0x1, 0x0);
        gbc.writeMem(0x3d00, { 0x6c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfe87, gbc.sp());
        EXPECT(0x3d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00AA
        gbc.setState(0xe8d1, 0xb0e0, 0xa8e0, 0x6611, 0xae8c, 0x7383, 0x1, 0x1);
        gbc.writeMem(0xe8d1, { 0x6c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb0e0, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe8d1));
        // 6C 00AB
        gbc.setState(0x5b8, 0xe512, 0xec80, 0x3451, 0xbc5e, 0xdbd2, 0x1, 0x1);
        gbc.writeMem(0x5b8, { 0x6c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe512, gbc.sp());
        EXPECT(0x5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00AC
        gbc.setState(0xe700, 0x4a9b, 0x5910, 0x76d5, 0x7bd0, 0x20e3, 0x1, 0x1);
        gbc.writeMem(0xe700, { 0x6c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a9b, gbc.sp());
        EXPECT(0xe701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe700));
        // 6C 00AD
        gbc.setState(0xb28f, 0x15e, 0xc220, 0x5628, 0x2bf4, 0x9c08, 0x1, 0x0);
        gbc.writeMem(0xb28f, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x15e, gbc.sp());
        EXPECT(0xb290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb28f));
        // 6C 00AE
        gbc.setState(0x52a6, 0x3c86, 0xf710, 0xb341, 0xe7e4, 0x4d8a, 0x1, 0x1);
        gbc.writeMem(0x52a6, { 0x6c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3c86, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00AF
        gbc.setState(0xa1b8, 0x58bd, 0x6320, 0x78e8, 0x506d, 0x32aa, 0x0, 0x0);
        gbc.writeMem(0xa1b8, { 0x6c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x58bd, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa1b8));
        // 6C 00B0
        gbc.setState(0xc009, 0xd81c, 0x6000, 0xc4a4, 0x1945, 0x7d4a, 0x1, 0x0);
        gbc.writeMem(0xc009, { 0x6c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd81c, gbc.sp());
        EXPECT(0xc00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc009));
        // 6C 00B1
        gbc.setState(0x1f8b, 0x9d74, 0x9ac0, 0xa173, 0x1ff4, 0x17b, 0x1, 0x1);
        gbc.writeMem(0x1f8b, { 0x6c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00B2
        gbc.setState(0x8c85, 0x7910, 0x4a30, 0x7243, 0xfeb1, 0x328d, 0x1, 0x0);
        gbc.writeMem(0x8c85, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7910, gbc.sp());
        EXPECT(0x8c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8c85));
        // 6C 00B3
        gbc.setState(0x9369, 0xd7f, 0x5980, 0x8614, 0x589e, 0x3298, 0x0, 0x1);
        gbc.writeMem(0x9369, { 0x6c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd7f, gbc.sp());
        EXPECT(0x936a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9369));
        // 6C 00B4
        gbc.setState(0x8e41, 0xb27a, 0xaee0, 0xb7cc, 0x8b1e, 0x3811, 0x1, 0x0);
        gbc.writeMem(0x8e41, { 0x6c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb27a, gbc.sp());
        EXPECT(0x8e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8e41));
        // 6C 00B5
        gbc.setState(0x5462, 0xfeb7, 0x4a10, 0x6102, 0x1d7f, 0x6de2, 0x0, 0x0);
        gbc.writeMem(0x5462, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfeb7, gbc.sp());
        EXPECT(0x5463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00B6
        gbc.setState(0xb3a0, 0x1db4, 0x7180, 0x103e, 0xbc72, 0x50d7, 0x1, 0x0);
        gbc.writeMem(0xb3a0, { 0x6c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1db4, gbc.sp());
        EXPECT(0xb3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb3a0));
        // 6C 00B8
        gbc.setState(0x258b, 0xc112, 0xcca0, 0xe692, 0xe80, 0xd88a, 0x1, 0x1);
        gbc.writeMem(0x258b, { 0x6c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc112, gbc.sp());
        EXPECT(0x258c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00B9
        gbc.setState(0xe1f4, 0xccc4, 0xad80, 0x8d47, 0x86, 0x1bae, 0x0, 0x1);
        gbc.writeMem(0xe1f4, { 0x6c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xccc4, gbc.sp());
        EXPECT(0xe1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe1f4));
        // 6C 00BA
        gbc.setState(0x7086, 0x805a, 0x3020, 0x2a89, 0xb91e, 0xc24a, 0x0, 0x0);
        gbc.writeMem(0x7086, { 0x6c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x7087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00BB
        gbc.setState(0xc681, 0xe15d, 0xe3c0, 0xba39, 0x422a, 0x9134, 0x1, 0x1);
        gbc.writeMem(0xc681, { 0x6c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe15d, gbc.sp());
        EXPECT(0xc682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc681));
        // 6C 00BC
        gbc.setState(0x14ac, 0xf18e, 0x7f10, 0x2917, 0xb611, 0xda1d, 0x1, 0x1);
        gbc.writeMem(0x14ac, { 0x6c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf18e, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00BD
        gbc.setState(0xaaf7, 0x963c, 0x4f70, 0xd68, 0xf974, 0xd0b2, 0x0, 0x1);
        gbc.writeMem(0xaaf7, { 0x6c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x963c, gbc.sp());
        EXPECT(0xaaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaaf7));
        // 6C 00BE
        gbc.setState(0x9908, 0x2129, 0xab80, 0x51f6, 0xa3b4, 0xb342, 0x0, 0x0);
        gbc.writeMem(0x9908, { 0x6c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0x9909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9908));
        // 6C 00BF
        gbc.setState(0x94a9, 0x301a, 0x5570, 0xc20e, 0x25fd, 0x7ce1, 0x0, 0x0);
        gbc.writeMem(0x94a9, { 0x6c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0x94aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x94a9));
        // 6C 00C0
        gbc.setState(0xa645, 0x7784, 0x1790, 0xe888, 0x3adb, 0x70c2, 0x1, 0x0);
        gbc.writeMem(0xa645, { 0x6c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7784, gbc.sp());
        EXPECT(0xa646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa645));
        // 6C 00C1
        gbc.setState(0x5234, 0x5b16, 0xae60, 0xd02b, 0x8d67, 0xd490, 0x1, 0x1);
        gbc.writeMem(0x5234, { 0x6c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0x5235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00C2
        gbc.setState(0x8737, 0xf50d, 0x9680, 0x99b9, 0xc95c, 0x623f, 0x0, 0x1);
        gbc.writeMem(0x8737, { 0x6c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf50d, gbc.sp());
        EXPECT(0x8738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8737));
        // 6C 00C3
        gbc.setState(0xa4f4, 0x9306, 0xaa50, 0xbe19, 0xf325, 0x286c, 0x1, 0x1);
        gbc.writeMem(0xa4f4, { 0x6c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa4f4));
        // 6C 00C4
        gbc.setState(0x2313, 0x2bc1, 0x1520, 0x3ace, 0x8e07, 0xc509, 0x1, 0x0);
        gbc.writeMem(0x2313, { 0x6c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2bc1, gbc.sp());
        EXPECT(0x2314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00C5
        gbc.setState(0x692a, 0x19be, 0x1560, 0x2a26, 0x2cf3, 0x7402, 0x1, 0x1);
        gbc.writeMem(0x692a, { 0x6c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x19be, gbc.sp());
        EXPECT(0x692b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00C6
        gbc.setState(0xc206, 0x84f8, 0xf650, 0x40e9, 0x8fda, 0xba02, 0x1, 0x1);
        gbc.writeMem(0xc206, { 0x6c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x84f8, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc206));
        // 6C 00C7
        gbc.setState(0x27e3, 0x4d4c, 0xb9d0, 0xa21f, 0x2268, 0x5b21, 0x0, 0x1);
        gbc.writeMem(0x27e3, { 0x6c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4d4c, gbc.sp());
        EXPECT(0x27e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00C8
        gbc.setState(0xb96f, 0xb211, 0x75a0, 0x7186, 0x7804, 0xce9e, 0x1, 0x0);
        gbc.writeMem(0xb96f, { 0x6c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb211, gbc.sp());
        EXPECT(0xb970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb96f));
        // 6C 00C9
        gbc.setState(0xdbb9, 0xe620, 0x6cc0, 0x5cd8, 0xf8cc, 0xa7, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe620, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdbb9));
        // 6C 00CA
        gbc.setState(0x2bca, 0x79e5, 0x6ce0, 0x3f95, 0x5068, 0x1e87, 0x0, 0x0);
        gbc.writeMem(0x2bca, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x79e5, gbc.sp());
        EXPECT(0x2bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00CB
        gbc.setState(0x7f89, 0x24f2, 0x3510, 0x1731, 0x3ab3, 0x5044, 0x1, 0x0);
        gbc.writeMem(0x7f89, { 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0x7f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00CC
        gbc.setState(0xd3b1, 0x8994, 0x1860, 0xbc13, 0xdcd8, 0x4d74, 0x1, 0x1);
        gbc.writeMem(0xd3b1, { 0x6c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8994, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd3b1));
        // 6C 00CD
        gbc.setState(0xa60a, 0x626f, 0x5f30, 0x877c, 0xbe48, 0x589e, 0x0, 0x1);
        gbc.writeMem(0xa60a, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x626f, gbc.sp());
        EXPECT(0xa60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa60a));
        // 6C 00CE
        gbc.setState(0xc18d, 0x3856, 0xb120, 0x214e, 0x744b, 0x8d09, 0x0, 0x0);
        gbc.writeMem(0xc18d, { 0x6c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3856, gbc.sp());
        EXPECT(0xc18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc18d));
        // 6C 00CF
        gbc.setState(0x8199, 0xc3f0, 0x29f0, 0x940d, 0x3215, 0x3f02, 0x0, 0x1);
        gbc.writeMem(0x8199, { 0x6c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc3f0, gbc.sp());
        EXPECT(0x819a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8199));
        // 6C 00D0
        gbc.setState(0x6e13, 0xb084, 0xe90, 0x87bb, 0x25d, 0xc753, 0x0, 0x0);
        gbc.writeMem(0x6e13, { 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb084, gbc.sp());
        EXPECT(0x6e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00D1
        gbc.setState(0x5dfa, 0xc70b, 0x8ba0, 0x7555, 0x29ea, 0x9984, 0x1, 0x1);
        gbc.writeMem(0x5dfa, { 0x6c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc70b, gbc.sp());
        EXPECT(0x5dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00D3
        gbc.setState(0x185e, 0x7434, 0x5c40, 0xcc88, 0x2bcb, 0xc8af, 0x1, 0x1);
        gbc.writeMem(0x185e, { 0x6c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7434, gbc.sp());
        EXPECT(0x185f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00D4
        gbc.setState(0x4997, 0xba17, 0xb7e0, 0x6483, 0x6ad9, 0x50f5, 0x0, 0x0);
        gbc.writeMem(0x4997, { 0x6c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00D5
        gbc.setState(0x7818, 0xc4b2, 0x9a50, 0x3fd, 0xf72, 0x7ba2, 0x1, 0x1);
        gbc.writeMem(0x7818, { 0x6c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0x7819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00D6
        gbc.setState(0xd92, 0x1297, 0xd880, 0xfb8c, 0x27c4, 0x172f, 0x0, 0x0);
        gbc.writeMem(0xd92, { 0x6c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1297, gbc.sp());
        EXPECT(0xd93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00D7
        gbc.setState(0x9a3, 0xb73d, 0x4030, 0xb8e6, 0xbf84, 0xdc92, 0x1, 0x0);
        gbc.writeMem(0x9a3, { 0x6c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0x9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00D8
        gbc.setState(0x9b61, 0x21ba, 0x9880, 0x97c0, 0x9147, 0xa0fd, 0x0, 0x1);
        gbc.writeMem(0x9b61, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x21ba, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9b61));
        // 6C 00D9
        gbc.setState(0xd009, 0x25f0, 0xe480, 0x483e, 0xdaa6, 0x5ba4, 0x1, 0x0);
        gbc.writeMem(0xd009, { 0x6c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x25f0, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd009));
        // 6C 00DA
        gbc.setState(0xad54, 0xb21c, 0x4e40, 0xedbe, 0x7e68, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0xad54, { 0x6c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb21c, gbc.sp());
        EXPECT(0xad55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xad54));
        // 6C 00DB
        gbc.setState(0x865e, 0xc70b, 0x68e0, 0xf04a, 0x9ca8, 0xd0e0, 0x0, 0x1);
        gbc.writeMem(0x865e, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc70b, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x865e));
        // 6C 00DC
        gbc.setState(0x1844, 0xfd79, 0x8300, 0x69be, 0xca26, 0xd773, 0x0, 0x1);
        gbc.writeMem(0x1844, { 0x6c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfd79, gbc.sp());
        EXPECT(0x1845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00DD
        gbc.setState(0x58b3, 0x4b18, 0x8de0, 0xe38a, 0xc86, 0x5f51, 0x0, 0x1);
        gbc.writeMem(0x58b3, { 0x6c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4b18, gbc.sp());
        EXPECT(0x58b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00DE
        gbc.setState(0x5ebf, 0x9f3c, 0xd800, 0xdd0d, 0x348c, 0x5345, 0x1, 0x1);
        gbc.writeMem(0x5ebf, { 0x6c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9f3c, gbc.sp());
        EXPECT(0x5ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00DF
        gbc.setState(0x7780, 0xe4a4, 0x180, 0xdaec, 0x6eaf, 0x42de, 0x0, 0x0);
        gbc.writeMem(0x7780, { 0x6c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe4a4, gbc.sp());
        EXPECT(0x7781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00E0
        gbc.setState(0x74e7, 0x5f9, 0x9db0, 0x20b0, 0x75cf, 0xc56f, 0x0, 0x0);
        gbc.writeMem(0x74e7, { 0x6c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5f9, gbc.sp());
        EXPECT(0x74e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00E1
        gbc.setState(0x2028, 0xcf6f, 0x4b70, 0x835d, 0xb62b, 0xe492, 0x1, 0x0);
        gbc.writeMem(0x2028, { 0x6c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcf6f, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00E2
        gbc.setState(0x6574, 0x5c17, 0x6330, 0x23e5, 0x6f69, 0x2c19, 0x0, 0x0);
        gbc.writeMem(0x6574, { 0x6c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0x6575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00E4
        gbc.setState(0xad6d, 0x9579, 0xfc40, 0x21d9, 0xc04c, 0x2c35, 0x1, 0x0);
        gbc.writeMem(0xad6d, { 0x6c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9579, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xad6d));
        // 6C 00E5
        gbc.setState(0x9c56, 0xa9a4, 0x2ff0, 0x8fe1, 0x1d66, 0x8783, 0x1, 0x1);
        gbc.writeMem(0x9c56, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa9a4, gbc.sp());
        EXPECT(0x9c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9c56));
        // 6C 00E6
        gbc.setState(0x7da4, 0x8eeb, 0x1c90, 0xaafc, 0x1416, 0xfb67, 0x0, 0x0);
        gbc.writeMem(0x7da4, { 0x6c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8eeb, gbc.sp());
        EXPECT(0x7da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00E8
        gbc.setState(0x5b02, 0x7206, 0x6080, 0x1336, 0x7957, 0x30d4, 0x0, 0x1);
        gbc.writeMem(0x5b02, { 0x6c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7206, gbc.sp());
        EXPECT(0x5b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00E9
        gbc.setState(0x87d4, 0x9f12, 0xf850, 0x5ce5, 0x7748, 0xcbf8, 0x0, 0x1);
        gbc.writeMem(0x87d4, { 0x6c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9f12, gbc.sp());
        EXPECT(0x87d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x87d4));
        // 6C 00EA
        gbc.setState(0xc9bf, 0xdee8, 0xb3c0, 0x4768, 0x8109, 0xe01f, 0x0, 0x0);
        gbc.writeMem(0xc9bf, { 0x6c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0xc9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc9bf));
        // 6C 00EC
        gbc.setState(0xdd47, 0xa204, 0xdcc0, 0x2995, 0xd1d2, 0x5e5e, 0x1, 0x1);
        gbc.writeMem(0xdd47, { 0x6c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa204, gbc.sp());
        EXPECT(0xdd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdd47));
        // 6C 00ED
        gbc.setState(0xae75, 0x3a81, 0x6440, 0x94bc, 0xd5c2, 0x362e, 0x1, 0x1);
        gbc.writeMem(0xae75, { 0x6c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3a81, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xae75));
        // 6C 00EE
        gbc.setState(0x90eb, 0x9321, 0x10c0, 0x963e, 0x47d, 0x9bdf, 0x1, 0x0);
        gbc.writeMem(0x90eb, { 0x6c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x90ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x90eb));
        // 6C 00EF
        gbc.setState(0x7287, 0x21e1, 0x6940, 0xe6d1, 0xa7cb, 0x82b7, 0x0, 0x0);
        gbc.writeMem(0x7287, { 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x21e1, gbc.sp());
        EXPECT(0x7288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00F0
        gbc.setState(0xa69d, 0x407f, 0xef60, 0x6c9b, 0xe7e8, 0x1722, 0x1, 0x1);
        gbc.writeMem(0xa69d, { 0x6c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0xa69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa69d));
        // 6C 00F1
        gbc.setState(0xc7b0, 0xb3d8, 0x1230, 0x5a00, 0x64a9, 0x519c, 0x0, 0x1);
        gbc.writeMem(0xc7b0, { 0x6c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb3d8, gbc.sp());
        EXPECT(0xc7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc7b0));
        // 6C 00F2
        gbc.setState(0x4ad4, 0x5bb5, 0xe0b0, 0x116b, 0x1cad, 0x6eff, 0x0, 0x1);
        gbc.writeMem(0x4ad4, { 0x6c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5bb5, gbc.sp());
        EXPECT(0x4ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00F3
        gbc.setState(0xb586, 0xdfa2, 0x5570, 0x170a, 0xfcf0, 0x24e8, 0x1, 0x0);
        gbc.writeMem(0xb586, { 0x6c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdfa2, gbc.sp());
        EXPECT(0xb587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb586));
        // 6C 00F4
        gbc.setState(0x283a, 0x83a5, 0xeb50, 0x5b7b, 0x40da, 0x7c17, 0x0, 0x0);
        gbc.writeMem(0x283a, { 0x6c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x83a5, gbc.sp());
        EXPECT(0x283b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00F5
        gbc.setState(0xab24, 0xc7a0, 0x4be0, 0x936d, 0x2aa4, 0x9c14, 0x0, 0x0);
        gbc.writeMem(0xab24, { 0x6c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc7a0, gbc.sp());
        EXPECT(0xab25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xab24));
        // 6C 00F6
        gbc.setState(0xa53b, 0xa59b, 0xc4e0, 0x9105, 0x41a4, 0x2e75, 0x0, 0x1);
        gbc.writeMem(0xa53b, { 0x6c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa59b, gbc.sp());
        EXPECT(0xa53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa53b));
        // 6C 00F7
        gbc.setState(0x917e, 0x6e3d, 0x6840, 0x3566, 0xbf24, 0x1bd6, 0x0, 0x1);
        gbc.writeMem(0x917e, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0x917f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x917e));
        // 6C 00F8
        gbc.setState(0xe0b9, 0xdc72, 0x2190, 0xaa26, 0x3231, 0x3d99, 0x0, 0x0);
        gbc.writeMem(0xe0b9, { 0x6c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdc72, gbc.sp());
        EXPECT(0xe0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe0b9));
        // 6C 00F9
        gbc.setState(0x8f34, 0x374f, 0x1830, 0xc1db, 0xf251, 0x904f, 0x0, 0x1);
        gbc.writeMem(0x8f34, { 0x6c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x374f, gbc.sp());
        EXPECT(0x8f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8f34));
        // 6C 00FA
        gbc.setState(0x4d40, 0x723a, 0x6610, 0x8b1a, 0x97bf, 0x4837, 0x1, 0x0);
        gbc.writeMem(0x4d40, { 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x723a, gbc.sp());
        EXPECT(0x4d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00FB
        gbc.setState(0xfbc, 0x1087, 0x1d60, 0xf8f4, 0x820b, 0xfab5, 0x1, 0x0);
        gbc.writeMem(0xfbc, { 0x6c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1087, gbc.sp());
        EXPECT(0xfbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 00FC
        gbc.setState(0x25c6, 0x83c0, 0x4730, 0xc38f, 0xf549, 0xf1be, 0x1, 0x0);
        gbc.writeMem(0x25c6, { 0x6c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x83c0, gbc.sp());
        EXPECT(0x25c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00FD
        gbc.setState(0xed8c, 0x557f, 0x7500, 0x7c79, 0xaa21, 0x3585, 0x1, 0x1);
        gbc.writeMem(0xed8c, { 0x6c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0xed8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xed8c));
        // 6C 00FE
        gbc.setState(0x5e24, 0x7dc4, 0x3f50, 0xddc8, 0x2e41, 0x38f5, 0x0, 0x0);
        gbc.writeMem(0x5e24, { 0x6c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7dc4, gbc.sp());
        EXPECT(0x5e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 00FF
        gbc.setState(0xbc54, 0x9929, 0x7760, 0xc597, 0x44ca, 0xc8a8, 0x0, 0x1);
        gbc.writeMem(0xbc54, { 0x6c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbc54));
        // 6C 0100
        gbc.setState(0x4edf, 0x6bbf, 0x6890, 0x117e, 0x4fd0, 0x86e6, 0x1, 0x1);
        gbc.writeMem(0x4edf, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6bbf, gbc.sp());
        EXPECT(0x4ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0101
        gbc.setState(0x106f, 0x1a7b, 0x11f0, 0x6dc4, 0xa6ba, 0xc904, 0x1, 0x0);
        gbc.writeMem(0x106f, { 0x6c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1a7b, gbc.sp());
        EXPECT(0x1070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0102
        gbc.setState(0xd59b, 0x8b4a, 0x96e0, 0xbc15, 0x3940, 0x2e9e, 0x0, 0x1);
        gbc.writeMem(0xd59b, { 0x6c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8b4a, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd59b));
        // 6C 0103
        gbc.setState(0x8628, 0x725f, 0xbfd0, 0xf183, 0x6c9c, 0xfb2d, 0x1, 0x0);
        gbc.writeMem(0x8628, { 0x6c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x725f, gbc.sp());
        EXPECT(0x8629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8628));
        // 6C 0104
        gbc.setState(0x1bee, 0x5515, 0xab70, 0x5a66, 0x5127, 0xe372, 0x0, 0x1);
        gbc.writeMem(0x1bee, { 0x6c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5515, gbc.sp());
        EXPECT(0x1bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0105
        gbc.setState(0x3518, 0x2ff1, 0xd400, 0x61ea, 0x1fad, 0xa45, 0x1, 0x0);
        gbc.writeMem(0x3518, { 0x6c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2ff1, gbc.sp());
        EXPECT(0x3519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0106
        gbc.setState(0x6163, 0xa66, 0x73c0, 0x52ea, 0x7b79, 0x9650, 0x0, 0x1);
        gbc.writeMem(0x6163, { 0x6c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0x6164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0107
        gbc.setState(0xc41e, 0x5f3a, 0xb110, 0x1422, 0xee30, 0x5d93, 0x0, 0x0);
        gbc.writeMem(0xc41e, { 0x6c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5f3a, gbc.sp());
        EXPECT(0xc41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc41e));
        // 6C 0108
        gbc.setState(0xc5fc, 0x7b9d, 0xea10, 0x523f, 0x7f8a, 0x7b47, 0x1, 0x1);
        gbc.writeMem(0xc5fc, { 0x6c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0xc5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc5fc));
        // 6C 0109
        gbc.setState(0x3b86, 0xe478, 0x55d0, 0xa924, 0xa184, 0x519e, 0x0, 0x1);
        gbc.writeMem(0x3b86, { 0x6c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe478, gbc.sp());
        EXPECT(0x3b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 010A
        gbc.setState(0xeb71, 0x1d48, 0x6060, 0x9917, 0xd08b, 0x7f72, 0x0, 0x1);
        gbc.writeMem(0xeb71, { 0x6c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1d48, gbc.sp());
        EXPECT(0xeb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xeb71));
        // 6C 010C
        gbc.setState(0xdf86, 0x3e9e, 0x6340, 0x34ef, 0x929, 0xea26, 0x0, 0x0);
        gbc.writeMem(0xdf86, { 0x6c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3e9e, gbc.sp());
        EXPECT(0xdf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdf86));
        // 6C 010D
        gbc.setState(0xaeb8, 0x29e6, 0xd470, 0x2ac, 0xa39c, 0xed6e, 0x1, 0x1);
        gbc.writeMem(0xaeb8, { 0x6c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x29e6, gbc.sp());
        EXPECT(0xaeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaeb8));
        // 6C 010E
        gbc.setState(0x1b88, 0x62fb, 0x57b0, 0x7a51, 0x329, 0xa048, 0x1, 0x1);
        gbc.writeMem(0x1b88, { 0x6c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x62fb, gbc.sp());
        EXPECT(0x1b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 010F
        gbc.setState(0x5373, 0x735c, 0xec10, 0xc61a, 0x7c6e, 0x990d, 0x1, 0x1);
        gbc.writeMem(0x5373, { 0x6c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x735c, gbc.sp());
        EXPECT(0x5374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0110
        gbc.setState(0x19b5, 0x2498, 0x8ff0, 0xadd0, 0x6ac3, 0x4d35, 0x1, 0x0);
        gbc.writeMem(0x19b5, { 0x6c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2498, gbc.sp());
        EXPECT(0x19b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0111
        gbc.setState(0x4ab2, 0x6927, 0x19b0, 0x73e, 0x87c7, 0x23ad, 0x0, 0x1);
        gbc.writeMem(0x4ab2, { 0x6c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6927, gbc.sp());
        EXPECT(0x4ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0112
        gbc.setState(0x5c6a, 0x913f, 0x1e20, 0xe3da, 0xaa4, 0xe8dd, 0x1, 0x1);
        gbc.writeMem(0x5c6a, { 0x6c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x913f, gbc.sp());
        EXPECT(0x5c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0113
        gbc.setState(0xdf51, 0xca8f, 0xc470, 0x4386, 0xb840, 0xea2f, 0x0, 0x0);
        gbc.writeMem(0xdf51, { 0x6c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xca8f, gbc.sp());
        EXPECT(0xdf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdf51));
        // 6C 0114
        gbc.setState(0x11a0, 0x9d6f, 0x69c0, 0x6ccb, 0x2dc5, 0xcd94, 0x0, 0x0);
        gbc.writeMem(0x11a0, { 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0x11a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0115
        gbc.setState(0xee15, 0x77ac, 0x4530, 0xba13, 0x356c, 0x6443, 0x1, 0x0);
        gbc.writeMem(0xee15, { 0x6c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x77ac, gbc.sp());
        EXPECT(0xee16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xee15));
        // 6C 0116
        gbc.setState(0x53c, 0x922f, 0x4070, 0x9f52, 0x951e, 0xe2d1, 0x1, 0x1);
        gbc.writeMem(0x53c, { 0x6c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x922f, gbc.sp());
        EXPECT(0x53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0117
        gbc.setState(0x8d01, 0xa3f3, 0x2f50, 0xa988, 0x4d67, 0xe27c, 0x0, 0x1);
        gbc.writeMem(0x8d01, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa3f3, gbc.sp());
        EXPECT(0x8d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8d01));
        // 6C 0118
        gbc.setState(0xb1cd, 0xad7f, 0x3900, 0x9e07, 0x4d96, 0x1e16, 0x0, 0x1);
        gbc.writeMem(0xb1cd, { 0x6c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xad7f, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb1cd));
        // 6C 0119
        gbc.setState(0xb42c, 0x51df, 0x1d30, 0x2afc, 0x1149, 0x5e38, 0x1, 0x0);
        gbc.writeMem(0xb42c, { 0x6c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x51df, gbc.sp());
        EXPECT(0xb42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb42c));
        // 6C 011A
        gbc.setState(0x66c0, 0x6770, 0x53e0, 0x2148, 0x1134, 0x8804, 0x1, 0x0);
        gbc.writeMem(0x66c0, { 0x6c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6770, gbc.sp());
        EXPECT(0x66c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 011B
        gbc.setState(0xa11e, 0x74b8, 0xb0e0, 0x8ea2, 0x864f, 0x31ab, 0x1, 0x0);
        gbc.writeMem(0xa11e, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x74b8, gbc.sp());
        EXPECT(0xa11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa11e));
        // 6C 011C
        gbc.setState(0x75d8, 0x8f4, 0x74e0, 0x32e7, 0x49d5, 0x46a6, 0x1, 0x1);
        gbc.writeMem(0x75d8, { 0x6c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8f4, gbc.sp());
        EXPECT(0x75d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 011D
        gbc.setState(0xd620, 0x44bc, 0x21e0, 0x82f, 0xc707, 0x115, 0x0, 0x0);
        gbc.writeMem(0xd620, { 0x6c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x44bc, gbc.sp());
        EXPECT(0xd621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd620));
        // 6C 011E
        gbc.setState(0x6403, 0x27d8, 0xc570, 0x81c5, 0xedde, 0x6ae, 0x0, 0x0);
        gbc.writeMem(0x6403, { 0x6c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x27d8, gbc.sp());
        EXPECT(0x6404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 011F
        gbc.setState(0x1930, 0x9f67, 0xf900, 0xa5c8, 0x63dd, 0xdf10, 0x0, 0x0);
        gbc.writeMem(0x1930, { 0x6c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0x1931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0120
        gbc.setState(0x1de9, 0x360a, 0x7760, 0xf5ae, 0x58f9, 0x606, 0x1, 0x0);
        gbc.writeMem(0x1de9, { 0x6c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x360a, gbc.sp());
        EXPECT(0x1dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0121
        gbc.setState(0xaa6d, 0x2dae, 0xcf20, 0x836e, 0xcee9, 0xf70e, 0x1, 0x1);
        gbc.writeMem(0xaa6d, { 0x6c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2dae, gbc.sp());
        EXPECT(0xaa6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaa6d));
        // 6C 0122
        gbc.setState(0xb3b5, 0x7742, 0xa230, 0xde29, 0xde2c, 0xe07b, 0x0, 0x1);
        gbc.writeMem(0xb3b5, { 0x6c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7742, gbc.sp());
        EXPECT(0xb3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb3b5));
        // 6C 0123
        gbc.setState(0xc266, 0xedd0, 0x9f10, 0x685b, 0xc403, 0x30da, 0x1, 0x1);
        gbc.writeMem(0xc266, { 0x6c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xedd0, gbc.sp());
        EXPECT(0xc267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc266));
        // 6C 0124
        gbc.setState(0x1442, 0xf20f, 0x6fa0, 0xa060, 0x6f99, 0x849d, 0x0, 0x1);
        gbc.writeMem(0x1442, { 0x6c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf20f, gbc.sp());
        EXPECT(0x1443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0125
        gbc.setState(0xc1bc, 0x7db, 0x4670, 0x162f, 0xbc94, 0xd959, 0x1, 0x0);
        gbc.writeMem(0xc1bc, { 0x6c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7db, gbc.sp());
        EXPECT(0xc1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc1bc));
        // 6C 0126
        gbc.setState(0x6ed4, 0x5f41, 0xa690, 0x63f8, 0x7f4b, 0x89d0, 0x1, 0x0);
        gbc.writeMem(0x6ed4, { 0x6c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5f41, gbc.sp());
        EXPECT(0x6ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0127
        gbc.setState(0x8f44, 0x1149, 0x24e0, 0x35aa, 0x779b, 0x4508, 0x1, 0x1);
        gbc.writeMem(0x8f44, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0x8f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8f44));
        // 6C 0128
        gbc.setState(0xc154, 0xe8f0, 0xda30, 0xa883, 0x554f, 0x7ff2, 0x0, 0x1);
        gbc.writeMem(0xc154, { 0x6c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe8f0, gbc.sp());
        EXPECT(0xc155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc154));
        // 6C 0129
        gbc.setState(0xe5d5, 0x1555, 0xa990, 0x1cd4, 0xd304, 0x1aac, 0x0, 0x0);
        gbc.writeMem(0xe5d5, { 0x6c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1555, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe5d5));
        // 6C 012A
        gbc.setState(0x2b70, 0xd377, 0xfbe0, 0xe5f6, 0xe9f7, 0x76eb, 0x1, 0x0);
        gbc.writeMem(0x2b70, { 0x6c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd377, gbc.sp());
        EXPECT(0x2b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 012B
        gbc.setState(0x8861, 0xcdd4, 0xfc80, 0x7e1a, 0x8d7, 0x163c, 0x1, 0x1);
        gbc.writeMem(0x8861, { 0x6c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcdd4, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8861));
        // 6C 012C
        gbc.setState(0x1953, 0x2de3, 0x8f0, 0xd1b2, 0xe3eb, 0x2e95, 0x1, 0x1);
        gbc.writeMem(0x1953, { 0x6c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2de3, gbc.sp());
        EXPECT(0x1954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 012D
        gbc.setState(0x4c13, 0xda80, 0x4a90, 0x22d, 0x6974, 0x5cda, 0x0, 0x1);
        gbc.writeMem(0x4c13, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0x4c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 012E
        gbc.setState(0xc776, 0xbf07, 0xb4d0, 0x64d, 0xe320, 0x3f1c, 0x0, 0x0);
        gbc.writeMem(0xc776, { 0x6c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbf07, gbc.sp());
        EXPECT(0xc777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc776));
        // 6C 012F
        gbc.setState(0xeac2, 0xede1, 0x3680, 0xf394, 0x960, 0x7c21, 0x0, 0x0);
        gbc.writeMem(0xeac2, { 0x6c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xede1, gbc.sp());
        EXPECT(0xeac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xeac2));
        // 6C 0130
        gbc.setState(0xdb73, 0x6e30, 0xdf80, 0x8075, 0x31ad, 0x272f, 0x0, 0x1);
        gbc.writeMem(0xdb73, { 0x6c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6e30, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdb73));
        // 6C 0131
        gbc.setState(0xa4ff, 0x3c5c, 0xc430, 0xcc89, 0xbd4f, 0x246e, 0x1, 0x0);
        gbc.writeMem(0xa4ff, { 0x6c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3c5c, gbc.sp());
        EXPECT(0xa500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa4ff));
        // 6C 0132
        gbc.setState(0x4266, 0x67f, 0x7eb0, 0xed1c, 0xf1c2, 0xc6e5, 0x1, 0x0);
        gbc.writeMem(0x4266, { 0x6c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x67f, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0133
        gbc.setState(0xd49, 0x1c35, 0xb30, 0x71ef, 0x6db7, 0x5110, 0x1, 0x0);
        gbc.writeMem(0xd49, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1c35, gbc.sp());
        EXPECT(0xd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0134
        gbc.setState(0xa229, 0x37bd, 0xfac0, 0x7934, 0x6269, 0xcdad, 0x1, 0x0);
        gbc.writeMem(0xa229, { 0x6c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x37bd, gbc.sp());
        EXPECT(0xa22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa229));
        // 6C 0135
        gbc.setState(0xd954, 0x1c59, 0xa340, 0xac29, 0x59e3, 0xe09f, 0x1, 0x1);
        gbc.writeMem(0xd954, { 0x6c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1c59, gbc.sp());
        EXPECT(0xd955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd954));
        // 6C 0137
        gbc.setState(0x50d, 0x649f, 0x20, 0xd07d, 0x99cc, 0xa72d, 0x0, 0x1);
        gbc.writeMem(0x50d, { 0x6c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x649f, gbc.sp());
        EXPECT(0x50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0139
        gbc.setState(0xbdbf, 0x8b90, 0x9670, 0xfcb3, 0xaae, 0xb66a, 0x0, 0x0);
        gbc.writeMem(0xbdbf, { 0x6c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8b90, gbc.sp());
        EXPECT(0xbdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbdbf));
        // 6C 013A
        gbc.setState(0x8a59, 0x1b6d, 0x4080, 0xdd1a, 0x9034, 0x3f6, 0x0, 0x0);
        gbc.writeMem(0x8a59, { 0x6c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1b6d, gbc.sp());
        EXPECT(0x8a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8a59));
        // 6C 013B
        gbc.setState(0xcdd9, 0x745e, 0xb60, 0x3468, 0x67f4, 0xbc6c, 0x0, 0x0);
        gbc.writeMem(0xcdd9, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x745e, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcdd9));
        // 6C 013C
        gbc.setState(0x85be, 0xd702, 0xe300, 0x5385, 0x3b8f, 0x5749, 0x1, 0x1);
        gbc.writeMem(0x85be, { 0x6c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd702, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x85be));
        // 6C 013D
        gbc.setState(0x1485, 0x5830, 0x32e0, 0xa0a5, 0x24d6, 0xd541, 0x0, 0x1);
        gbc.writeMem(0x1485, { 0x6c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0x1486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 013E
        gbc.setState(0xec9c, 0x2474, 0xd060, 0x4fd, 0xac93, 0x4624, 0x1, 0x0);
        gbc.writeMem(0xec9c, { 0x6c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2474, gbc.sp());
        EXPECT(0xec9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xec9c));
        // 6C 013F
        gbc.setState(0x57fa, 0xfe23, 0xf0c0, 0x4e7f, 0x2701, 0xbed0, 0x1, 0x1);
        gbc.writeMem(0x57fa, { 0x6c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfe23, gbc.sp());
        EXPECT(0x57fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0140
        gbc.setState(0xde4, 0xabf0, 0xba60, 0xea39, 0xff2d, 0x8a3d, 0x1, 0x0);
        gbc.writeMem(0xde4, { 0x6c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xabf0, gbc.sp());
        EXPECT(0xde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0141
        gbc.setState(0xa081, 0x8154, 0x1f0, 0x8383, 0xd312, 0xccff, 0x0, 0x0);
        gbc.writeMem(0xa081, { 0x6c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8154, gbc.sp());
        EXPECT(0xa082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa081));
        // 6C 0142
        gbc.setState(0xdd47, 0xe6c2, 0x8a80, 0x70e6, 0x5d89, 0xfd4e, 0x0, 0x1);
        gbc.writeMem(0xdd47, { 0x6c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0xdd48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdd47));
        // 6C 0143
        gbc.setState(0x7b76, 0x24b, 0x8da0, 0xe963, 0x20c7, 0xd372, 0x0, 0x1);
        gbc.writeMem(0x7b76, { 0x6c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x24b, gbc.sp());
        EXPECT(0x7b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0144
        gbc.setState(0x5079, 0x2634, 0x8470, 0xc3c1, 0x59ee, 0xe5ae, 0x1, 0x0);
        gbc.writeMem(0x5079, { 0x6c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2634, gbc.sp());
        EXPECT(0x507a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0145
        gbc.setState(0xc073, 0x68ca, 0x65c0, 0x7dac, 0xfe98, 0xd940, 0x1, 0x0);
        gbc.writeMem(0xc073, { 0x6c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0xc074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc073));
        // 6C 0146
        gbc.setState(0x913a, 0xcfb0, 0x9f70, 0xa4d5, 0xf6b9, 0x8c06, 0x0, 0x1);
        gbc.writeMem(0x913a, { 0x6c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcfb0, gbc.sp());
        EXPECT(0x913b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x913a));
        // 6C 0147
        gbc.setState(0x2909, 0xa67a, 0x6c60, 0x6f5, 0x4694, 0xf586, 0x0, 0x1);
        gbc.writeMem(0x2909, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa67a, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0148
        gbc.setState(0x4791, 0x9a06, 0x4270, 0xf7af, 0x5356, 0x7cce, 0x0, 0x1);
        gbc.writeMem(0x4791, { 0x6c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9a06, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0149
        gbc.setState(0xa149, 0x9f20, 0xcb50, 0x2869, 0xbb21, 0x5c3, 0x0, 0x1);
        gbc.writeMem(0xa149, { 0x6c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9f20, gbc.sp());
        EXPECT(0xa14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa149));
        // 6C 014A
        gbc.setState(0x1c7b, 0xd985, 0xf020, 0xf4a8, 0xd39f, 0x385, 0x1, 0x1);
        gbc.writeMem(0x1c7b, { 0x6c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0x1c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 014B
        gbc.setState(0x8d3d, 0x3676, 0xf950, 0xcd2d, 0xb5d2, 0xb127, 0x0, 0x0);
        gbc.writeMem(0x8d3d, { 0x6c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8d3d));
        // 6C 014C
        gbc.setState(0x8f42, 0x2b55, 0x6610, 0xb1bf, 0x4022, 0x2fe7, 0x1, 0x1);
        gbc.writeMem(0x8f42, { 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2b55, gbc.sp());
        EXPECT(0x8f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8f42));
        // 6C 014D
        gbc.setState(0x3f90, 0xd215, 0x9d70, 0x43d2, 0x9b5c, 0x6480, 0x0, 0x0);
        gbc.writeMem(0x3f90, { 0x6c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd215, gbc.sp());
        EXPECT(0x3f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 014E
        gbc.setState(0x51e5, 0x69bc, 0x8740, 0xd9c7, 0xbd8a, 0xd1e5, 0x0, 0x1);
        gbc.writeMem(0x51e5, { 0x6c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x69bc, gbc.sp());
        EXPECT(0x51e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 014F
        gbc.setState(0xb279, 0xe91d, 0xdf10, 0x17d7, 0xeccb, 0x80f3, 0x0, 0x1);
        gbc.writeMem(0xb279, { 0x6c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe91d, gbc.sp());
        EXPECT(0xb27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb279));
        // 6C 0150
        gbc.setState(0x481c, 0xfaa4, 0xbea0, 0x1b28, 0x5118, 0xe274, 0x1, 0x1);
        gbc.writeMem(0x481c, { 0x6c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfaa4, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0151
        gbc.setState(0xddb5, 0x9fd8, 0xfc50, 0x3892, 0xf6f7, 0x11c6, 0x1, 0x0);
        gbc.writeMem(0xddb5, { 0x6c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xddb5));
        // 6C 0152
        gbc.setState(0xa83c, 0xfc49, 0xee10, 0x7bf5, 0xdc86, 0x26d3, 0x0, 0x1);
        gbc.writeMem(0xa83c, { 0x6c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0xa83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa83c));
        // 6C 0153
        gbc.setState(0xd72c, 0x8b85, 0x4050, 0xfbd7, 0xe44f, 0x335f, 0x1, 0x0);
        gbc.writeMem(0xd72c, { 0x6c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0xd72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd72c));
        // 6C 0154
        gbc.setState(0x568e, 0x6077, 0x8e90, 0x19c3, 0x136d, 0x965f, 0x1, 0x0);
        gbc.writeMem(0x568e, { 0x6c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x568f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0155
        gbc.setState(0x52c6, 0xb1ba, 0x3b00, 0x8bad, 0xdeb, 0xbefd, 0x0, 0x1);
        gbc.writeMem(0x52c6, { 0x6c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb1ba, gbc.sp());
        EXPECT(0x52c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0156
        gbc.setState(0xebfa, 0x31c, 0xfd90, 0x7413, 0xf8f5, 0xa609, 0x0, 0x1);
        gbc.writeMem(0xebfa, { 0x6c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x31c, gbc.sp());
        EXPECT(0xebfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xebfa));
        // 6C 0157
        gbc.setState(0xe3a3, 0xee92, 0xf690, 0x74e6, 0xc391, 0xd1c4, 0x0, 0x1);
        gbc.writeMem(0xe3a3, { 0x6c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0xe3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe3a3));
        // 6C 0158
        gbc.setState(0x317c, 0x9f79, 0x4c70, 0xbcb1, 0xe055, 0x3e95, 0x0, 0x1);
        gbc.writeMem(0x317c, { 0x6c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0x317d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0159
        gbc.setState(0x487b, 0x9d3f, 0x6e20, 0x7c61, 0xd689, 0x690d, 0x1, 0x1);
        gbc.writeMem(0x487b, { 0x6c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9d3f, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 015A
        gbc.setState(0xd489, 0x800b, 0xc9c0, 0x11fc, 0xe2a0, 0x480e, 0x1, 0x0);
        gbc.writeMem(0xd489, { 0x6c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0xd48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd489));
        // 6C 015B
        gbc.setState(0xc954, 0x45a6, 0x6f10, 0xfa94, 0x847e, 0xfb71, 0x0, 0x0);
        gbc.writeMem(0xc954, { 0x6c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x45a6, gbc.sp());
        EXPECT(0xc955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc954));
        // 6C 015C
        gbc.setState(0x941c, 0xe14b, 0xe50, 0x87b5, 0xe474, 0x4ef6, 0x1, 0x0);
        gbc.writeMem(0x941c, { 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe14b, gbc.sp());
        EXPECT(0x941d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x941c));
        // 6C 015D
        gbc.setState(0x9861, 0xd4f0, 0xcba0, 0xc19a, 0xb121, 0x33e4, 0x1, 0x0);
        gbc.writeMem(0x9861, { 0x6c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd4f0, gbc.sp());
        EXPECT(0x9862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9861));
        // 6C 015F
        gbc.setState(0x5846, 0xd9, 0x54e0, 0x4142, 0xabba, 0x2365, 0x0, 0x1);
        gbc.writeMem(0x5846, { 0x6c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd9, gbc.sp());
        EXPECT(0x5847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0160
        gbc.setState(0x7743, 0x2003, 0x6760, 0x389d, 0xdc57, 0x51a3, 0x1, 0x0);
        gbc.writeMem(0x7743, { 0x6c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2003, gbc.sp());
        EXPECT(0x7744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0161
        gbc.setState(0x565c, 0x82c3, 0x7c50, 0xe68, 0x790b, 0x24a4, 0x1, 0x0);
        gbc.writeMem(0x565c, { 0x6c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x82c3, gbc.sp());
        EXPECT(0x565d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0162
        gbc.setState(0x3598, 0x4315, 0x4130, 0x286d, 0x1ce8, 0x7950, 0x0, 0x1);
        gbc.writeMem(0x3598, { 0x6c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4315, gbc.sp());
        EXPECT(0x3599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0163
        gbc.setState(0x19f3, 0xd3c9, 0x3860, 0xb6f5, 0xc8f5, 0xe9aa, 0x0, 0x1);
        gbc.writeMem(0x19f3, { 0x6c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd3c9, gbc.sp());
        EXPECT(0x19f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0164
        gbc.setState(0xc228, 0xcc92, 0xe870, 0xe36b, 0xee81, 0x3e0b, 0x0, 0x0);
        gbc.writeMem(0xc228, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0xc229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc228));
        // 6C 0165
        gbc.setState(0x52b4, 0xac85, 0xe160, 0x720d, 0xfd16, 0x4ab2, 0x0, 0x1);
        gbc.writeMem(0x52b4, { 0x6c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0x52b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0166
        gbc.setState(0x9128, 0x9815, 0x9210, 0x7116, 0x4bc5, 0xa746, 0x1, 0x1);
        gbc.writeMem(0x9128, { 0x6c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0x9129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9128));
        // 6C 0167
        gbc.setState(0x206, 0x742, 0xbea0, 0xa23d, 0x9f30, 0x5e53, 0x1, 0x1);
        gbc.writeMem(0x206, { 0x6c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x742, gbc.sp());
        EXPECT(0x207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0168
        gbc.setState(0x743e, 0x7ee, 0xbea0, 0x5f3f, 0xdae4, 0x655e, 0x1, 0x0);
        gbc.writeMem(0x743e, { 0x6c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7ee, gbc.sp());
        EXPECT(0x743f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0169
        gbc.setState(0x8fdf, 0x5b3b, 0xcf20, 0x25d, 0x4dde, 0x9ce2, 0x1, 0x1);
        gbc.writeMem(0x8fdf, { 0x6c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5b3b, gbc.sp());
        EXPECT(0x8fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8fdf));
        // 6C 016A
        gbc.setState(0x801d, 0x3a38, 0xff10, 0x11f, 0x88ce, 0x3705, 0x0, 0x0);
        gbc.writeMem(0x801d, { 0x6c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3a38, gbc.sp());
        EXPECT(0x801e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x801d));
        // 6C 016B
        gbc.setState(0x7fc9, 0x927a, 0xb3f0, 0x286b, 0x1dc3, 0x2477, 0x0, 0x1);
        gbc.writeMem(0x7fc9, { 0x6c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x927a, gbc.sp());
        EXPECT(0x7fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 016C
        gbc.setState(0x205f, 0xdf99, 0xa010, 0xcea6, 0x1210, 0x1164, 0x0, 0x0);
        gbc.writeMem(0x205f, { 0x6c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdf99, gbc.sp());
        EXPECT(0x2060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 016D
        gbc.setState(0x316f, 0x7f9e, 0xd290, 0xb4c5, 0x2d3b, 0x4b4e, 0x1, 0x0);
        gbc.writeMem(0x316f, { 0x6c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7f9e, gbc.sp());
        EXPECT(0x3170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 016E
        gbc.setState(0x2bf4, 0xfe3a, 0xc000, 0xa02b, 0x9298, 0x85f, 0x1, 0x0);
        gbc.writeMem(0x2bf4, { 0x6c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfe3a, gbc.sp());
        EXPECT(0x2bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 016F
        gbc.setState(0x4bb1, 0x1d18, 0xad0, 0x1b10, 0x2ba1, 0xfc98, 0x1, 0x0);
        gbc.writeMem(0x4bb1, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1d18, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0170
        gbc.setState(0xec21, 0x7e00, 0xbf10, 0x9692, 0x12e, 0xe4e1, 0x1, 0x0);
        gbc.writeMem(0xec21, { 0x6c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7e00, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xec21));
        // 6C 0171
        gbc.setState(0x3ec3, 0xf1e3, 0xa020, 0x33fd, 0xfe6a, 0x60b6, 0x1, 0x1);
        gbc.writeMem(0x3ec3, { 0x6c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf1e3, gbc.sp());
        EXPECT(0x3ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0172
        gbc.setState(0x7b90, 0x8698, 0xb120, 0x7fb7, 0xed46, 0x7264, 0x1, 0x1);
        gbc.writeMem(0x7b90, { 0x6c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8698, gbc.sp());
        EXPECT(0x7b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0173
        gbc.setState(0xcdcb, 0xf071, 0x9d70, 0x7207, 0x9bf7, 0x9c2a, 0x0, 0x0);
        gbc.writeMem(0xcdcb, { 0x6c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf071, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcdcb));
        // 6C 0174
        gbc.setState(0x33cb, 0x3855, 0xa010, 0x38ea, 0x9141, 0x3e82, 0x1, 0x1);
        gbc.writeMem(0x33cb, { 0x6c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0175
        gbc.setState(0x9e9c, 0xe10a, 0x14f0, 0xc592, 0xf03d, 0x432, 0x0, 0x0);
        gbc.writeMem(0x9e9c, { 0x6c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0x9e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9e9c));
        // 6C 0176
        gbc.setState(0xdfbe, 0xa7fe, 0x5400, 0xe3d9, 0x73e, 0xcd0a, 0x1, 0x1);
        gbc.writeMem(0xdfbe, { 0x6c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa7fe, gbc.sp());
        EXPECT(0xdfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdfbe));
        // 6C 0178
        gbc.setState(0xc70, 0xcd15, 0x24b0, 0xf1ab, 0x91bd, 0x49db, 0x1, 0x0);
        gbc.writeMem(0xc70, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcd15, gbc.sp());
        EXPECT(0xc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0179
        gbc.setState(0xa51f, 0x9415, 0x6c60, 0xd0e6, 0x42a4, 0xdb6d, 0x0, 0x1);
        gbc.writeMem(0xa51f, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9415, gbc.sp());
        EXPECT(0xa520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa51f));
        // 6C 017A
        gbc.setState(0x8637, 0x5651, 0x22f0, 0xdb40, 0xc210, 0xcd66, 0x0, 0x1);
        gbc.writeMem(0x8637, { 0x6c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0x8638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8637));
        // 6C 017B
        gbc.setState(0xa3b6, 0xed69, 0x1200, 0x6823, 0x8e00, 0x7eb9, 0x1, 0x0);
        gbc.writeMem(0xa3b6, { 0x6c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xed69, gbc.sp());
        EXPECT(0xa3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa3b6));
        // 6C 017C
        gbc.setState(0x8fd8, 0xfc2a, 0x2b70, 0xbe99, 0x339d, 0x1c65, 0x1, 0x1);
        gbc.writeMem(0x8fd8, { 0x6c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfc2a, gbc.sp());
        EXPECT(0x8fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8fd8));
        // 6C 017D
        gbc.setState(0xbbf8, 0x7e1, 0xa400, 0x579c, 0xb43b, 0xba7, 0x1, 0x0);
        gbc.writeMem(0xbbf8, { 0x6c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7e1, gbc.sp());
        EXPECT(0xbbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbbf8));
        // 6C 017E
        gbc.setState(0x2b3, 0xd993, 0xb5f0, 0x4158, 0x6fe2, 0xae13, 0x1, 0x0);
        gbc.writeMem(0x2b3, { 0x6c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd993, gbc.sp());
        EXPECT(0x2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0180
        gbc.setState(0x8af8, 0x5bef, 0x7680, 0xdcf2, 0x4a35, 0x3e44, 0x0, 0x0);
        gbc.writeMem(0x8af8, { 0x6c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5bef, gbc.sp());
        EXPECT(0x8af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8af8));
        // 6C 0181
        gbc.setState(0x662a, 0x885b, 0xcf60, 0x6eae, 0x3e57, 0xb56f, 0x1, 0x1);
        gbc.writeMem(0x662a, { 0x6c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x885b, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0182
        gbc.setState(0x79e, 0xf2e7, 0xe890, 0x3156, 0x4f3e, 0xac24, 0x1, 0x1);
        gbc.writeMem(0x79e, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0x79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0183
        gbc.setState(0xe4aa, 0x6d9e, 0xc260, 0xa1ce, 0xec84, 0x9b68, 0x1, 0x0);
        gbc.writeMem(0xe4aa, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6d9e, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe4aa));
        // 6C 0184
        gbc.setState(0xed11, 0x4243, 0xc300, 0x8dca, 0x49f7, 0xe9d8, 0x0, 0x1);
        gbc.writeMem(0xed11, { 0x6c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4243, gbc.sp());
        EXPECT(0xed12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xed11));
        // 6C 0185
        gbc.setState(0x5998, 0xceb0, 0x31b0, 0xfee7, 0x4c6d, 0x58b5, 0x1, 0x1);
        gbc.writeMem(0x5998, { 0x6c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xceb0, gbc.sp());
        EXPECT(0x5999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0186
        gbc.setState(0x9c4f, 0x136b, 0x4a40, 0x1328, 0x5402, 0x86aa, 0x1, 0x1);
        gbc.writeMem(0x9c4f, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0x9c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9c4f));
        // 6C 0187
        gbc.setState(0x5b14, 0xc7e8, 0xbf0, 0xe5d4, 0xd880, 0xb072, 0x1, 0x1);
        gbc.writeMem(0x5b14, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x5b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0188
        gbc.setState(0x6b77, 0xa5e2, 0x8ff0, 0xf7f8, 0xd3df, 0xaa5c, 0x0, 0x0);
        gbc.writeMem(0x6b77, { 0x6c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa5e2, gbc.sp());
        EXPECT(0x6b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0189
        gbc.setState(0x1c81, 0xe451, 0xabd0, 0x5223, 0xc93a, 0xe3bf, 0x1, 0x0);
        gbc.writeMem(0x1c81, { 0x6c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe451, gbc.sp());
        EXPECT(0x1c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 018A
        gbc.setState(0xeb74, 0xebeb, 0x2b80, 0xbb41, 0x170b, 0x303b, 0x0, 0x0);
        gbc.writeMem(0xeb74, { 0x6c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xebeb, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xeb74));
        // 6C 018B
        gbc.setState(0xe5e2, 0x67a2, 0xf9a0, 0xd7e1, 0x9bd4, 0x24b1, 0x1, 0x1);
        gbc.writeMem(0xe5e2, { 0x6c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x67a2, gbc.sp());
        EXPECT(0xe5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe5e2));
        // 6C 018D
        gbc.setState(0xa388, 0xf4f0, 0xbb30, 0x9e9f, 0x1274, 0xa037, 0x0, 0x1);
        gbc.writeMem(0xa388, { 0x6c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf4f0, gbc.sp());
        EXPECT(0xa389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa388));
        // 6C 018E
        gbc.setState(0x1831, 0x907d, 0xca60, 0x6c28, 0x571, 0xcfa5, 0x0, 0x1);
        gbc.writeMem(0x1831, { 0x6c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x907d, gbc.sp());
        EXPECT(0x1832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 018F
        gbc.setState(0x2477, 0x4a2c, 0x2320, 0xf1a4, 0x9e1e, 0xaa5c, 0x1, 0x1);
        gbc.writeMem(0x2477, { 0x6c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4a2c, gbc.sp());
        EXPECT(0x2478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0190
        gbc.setState(0xe290, 0x25a6, 0xc680, 0x49b9, 0x3137, 0x1ec1, 0x0, 0x1);
        gbc.writeMem(0xe290, { 0x6c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x25a6, gbc.sp());
        EXPECT(0xe291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe290));
        // 6C 0191
        gbc.setState(0x1359, 0x3777, 0x20, 0x8d8, 0x8947, 0x4f48, 0x0, 0x0);
        gbc.writeMem(0x1359, { 0x6c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3777, gbc.sp());
        EXPECT(0x135a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0193
        gbc.setState(0x7b5f, 0xde1, 0x2440, 0x560d, 0x2e3d, 0xd899, 0x0, 0x0);
        gbc.writeMem(0x7b5f, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xde1, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0195
        gbc.setState(0x3552, 0xf20e, 0xe340, 0xf921, 0x10de, 0xf12a, 0x0, 0x0);
        gbc.writeMem(0x3552, { 0x6c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf20e, gbc.sp());
        EXPECT(0x3553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0196
        gbc.setState(0xdf8, 0x5fb2, 0x5730, 0x52e9, 0x519f, 0xa595, 0x0, 0x0);
        gbc.writeMem(0xdf8, { 0x6c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5fb2, gbc.sp());
        EXPECT(0xdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0197
        gbc.setState(0x22cc, 0xdbeb, 0x17a0, 0x42e1, 0x4879, 0x35b3, 0x0, 0x0);
        gbc.writeMem(0x22cc, { 0x6c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdbeb, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0198
        gbc.setState(0xc5fe, 0xe036, 0x130, 0xc62e, 0x4360, 0x91b4, 0x0, 0x1);
        gbc.writeMem(0xc5fe, { 0x6c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe036, gbc.sp());
        EXPECT(0xc5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc5fe));
        // 6C 019A
        gbc.setState(0x629b, 0xcdee, 0x6a70, 0xf22e, 0x63a2, 0x294d, 0x1, 0x0);
        gbc.writeMem(0x629b, { 0x6c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcdee, gbc.sp());
        EXPECT(0x629c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 019B
        gbc.setState(0x100, 0xa2b9, 0xb2b0, 0xb78e, 0xb2e4, 0x579c, 0x0, 0x0);
        gbc.writeMem(0x100, { 0x6c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa2b9, gbc.sp());
        EXPECT(0x101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 019C
        gbc.setState(0xe52f, 0xab58, 0x3bd0, 0x2841, 0x6566, 0x7000, 0x0, 0x1);
        gbc.writeMem(0xe52f, { 0x6c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xab58, gbc.sp());
        EXPECT(0xe530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe52f));
        // 6C 019D
        gbc.setState(0xbd4, 0xbb6f, 0xc2d0, 0xeb30, 0x6a5e, 0x50ac, 0x0, 0x1);
        gbc.writeMem(0xbd4, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbb6f, gbc.sp());
        EXPECT(0xbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 019E
        gbc.setState(0x5d68, 0x8b78, 0x2e60, 0xa10d, 0xb150, 0xeacb, 0x0, 0x1);
        gbc.writeMem(0x5d68, { 0x6c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8b78, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 019F
        gbc.setState(0x411, 0xdba7, 0x68d0, 0xf6fd, 0x17b3, 0xd23a, 0x1, 0x0);
        gbc.writeMem(0x411, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdba7, gbc.sp());
        EXPECT(0x412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01A0
        gbc.setState(0x926c, 0xeee0, 0x8c90, 0x1cef, 0x7cfa, 0x9ba4, 0x0, 0x1);
        gbc.writeMem(0x926c, { 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeee0, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x926c));
        // 6C 01A1
        gbc.setState(0xae60, 0x8b0, 0x9660, 0xe4b7, 0x33aa, 0xbb13, 0x1, 0x1);
        gbc.writeMem(0xae60, { 0x6c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0xae61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xae60));
        // 6C 01A2
        gbc.setState(0x8d69, 0xdf5f, 0xa6a0, 0x2618, 0x3f1c, 0x3c6c, 0x1, 0x0);
        gbc.writeMem(0x8d69, { 0x6c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdf5f, gbc.sp());
        EXPECT(0x8d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8d69));
        // 6C 01A3
        gbc.setState(0x1b5f, 0x98b7, 0xfd90, 0xc30f, 0xd9c6, 0x36d6, 0x0, 0x1);
        gbc.writeMem(0x1b5f, { 0x6c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x98b7, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01A4
        gbc.setState(0x3c3d, 0xbad9, 0x6f70, 0x57fa, 0x7f56, 0xc3e3, 0x0, 0x0);
        gbc.writeMem(0x3c3d, { 0x6c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbad9, gbc.sp());
        EXPECT(0x3c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01A5
        gbc.setState(0x9734, 0x71a, 0x2f10, 0x5fa7, 0xe94a, 0x78d7, 0x0, 0x0);
        gbc.writeMem(0x9734, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9734));
        // 6C 01A6
        gbc.setState(0x2a6b, 0x6042, 0x2470, 0x8f9, 0xab39, 0x196f, 0x1, 0x0);
        gbc.writeMem(0x2a6b, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6042, gbc.sp());
        EXPECT(0x2a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01A7
        gbc.setState(0xec24, 0xe6f2, 0xe6f0, 0x8b54, 0xbabf, 0x1fa9, 0x1, 0x1);
        gbc.writeMem(0xec24, { 0x6c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe6f2, gbc.sp());
        EXPECT(0xec25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xec24));
        // 6C 01A8
        gbc.setState(0xefc7, 0xd155, 0x82c0, 0x4aae, 0x4bc0, 0x345f, 0x1, 0x0);
        gbc.writeMem(0xefc7, { 0x6c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd155, gbc.sp());
        EXPECT(0xefc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xefc7));
        // 6C 01A9
        gbc.setState(0x5369, 0x9f0a, 0x3740, 0x43a2, 0xc752, 0x570a, 0x0, 0x0);
        gbc.writeMem(0x5369, { 0x6c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9f0a, gbc.sp());
        EXPECT(0x536a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01AA
        gbc.setState(0x1c53, 0x188c, 0x17b0, 0x9681, 0x9e29, 0x9aa0, 0x0, 0x1);
        gbc.writeMem(0x1c53, { 0x6c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x188c, gbc.sp());
        EXPECT(0x1c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01AB
        gbc.setState(0x2c7b, 0xdea7, 0x4fa0, 0xec17, 0xd64b, 0x7aab, 0x1, 0x0);
        gbc.writeMem(0x2c7b, { 0x6c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdea7, gbc.sp());
        EXPECT(0x2c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01AC
        gbc.setState(0x8b22, 0xe5a3, 0x2740, 0xabfc, 0x4261, 0xc42b, 0x1, 0x1);
        gbc.writeMem(0x8b22, { 0x6c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe5a3, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8b22));
        // 6C 01AD
        gbc.setState(0x8189, 0x7855, 0x98e0, 0xaf54, 0x103c, 0x6e96, 0x1, 0x1);
        gbc.writeMem(0x8189, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7855, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8189));
        // 6C 01AE
        gbc.setState(0xe3b3, 0x2e25, 0x81c0, 0xeced, 0x4d1c, 0x9ba8, 0x1, 0x0);
        gbc.writeMem(0xe3b3, { 0x6c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2e25, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe3b3));
        // 6C 01AF
        gbc.setState(0x9fb7, 0x166d, 0x5f50, 0x330a, 0xbc03, 0xe18a, 0x0, 0x1);
        gbc.writeMem(0x9fb7, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x166d, gbc.sp());
        EXPECT(0x9fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9fb7));
        // 6C 01B0
        gbc.setState(0xbd8a, 0xbb6b, 0xa400, 0x4aab, 0x9df6, 0x4caa, 0x1, 0x1);
        gbc.writeMem(0xbd8a, { 0x6c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbb6b, gbc.sp());
        EXPECT(0xbd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbd8a));
        // 6C 01B1
        gbc.setState(0x37b7, 0xd467, 0xd560, 0x6a9e, 0xe6ed, 0xeedf, 0x0, 0x1);
        gbc.writeMem(0x37b7, { 0x6c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd467, gbc.sp());
        EXPECT(0x37b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01B2
        gbc.setState(0xc858, 0xc69b, 0xe130, 0x200c, 0xd491, 0xa39f, 0x1, 0x0);
        gbc.writeMem(0xc858, { 0x6c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc69b, gbc.sp());
        EXPECT(0xc859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc858));
        // 6C 01B3
        gbc.setState(0x5064, 0x8dd3, 0x86f0, 0x36b5, 0x4b08, 0x7c41, 0x1, 0x1);
        gbc.writeMem(0x5064, { 0x6c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8dd3, gbc.sp());
        EXPECT(0x5065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01B4
        gbc.setState(0xb35f, 0x2ed7, 0x8cb0, 0x528d, 0x2680, 0xbbb1, 0x1, 0x1);
        gbc.writeMem(0xb35f, { 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ed7, gbc.sp());
        EXPECT(0xb360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb35f));
        // 6C 01B6
        gbc.setState(0x4917, 0xa615, 0x8480, 0x1e6a, 0x61c5, 0x6169, 0x1, 0x1);
        gbc.writeMem(0x4917, { 0x6c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa615, gbc.sp());
        EXPECT(0x4918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01B7
        gbc.setState(0x8941, 0x98c3, 0xaa50, 0x1ace, 0xf2c4, 0xfe11, 0x0, 0x0);
        gbc.writeMem(0x8941, { 0x6c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x98c3, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8941));
        // 6C 01B8
        gbc.setState(0x3089, 0xe1b6, 0x1ca0, 0x1fd5, 0xed83, 0x7c23, 0x1, 0x1);
        gbc.writeMem(0x3089, { 0x6c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe1b6, gbc.sp());
        EXPECT(0x308a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01B9
        gbc.setState(0x7ef5, 0xee44, 0x6930, 0xf497, 0xd8d7, 0x3854, 0x1, 0x1);
        gbc.writeMem(0x7ef5, { 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xee44, gbc.sp());
        EXPECT(0x7ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01BA
        gbc.setState(0xa248, 0x5c5b, 0xfc20, 0x5715, 0xbfab, 0x54c2, 0x1, 0x1);
        gbc.writeMem(0xa248, { 0x6c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5c5b, gbc.sp());
        EXPECT(0xa249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa248));
        // 6C 01BC
        gbc.setState(0x79ac, 0xbc67, 0xc630, 0x1e14, 0xc5f9, 0x2dfd, 0x1, 0x0);
        gbc.writeMem(0x79ac, { 0x6c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbc67, gbc.sp());
        EXPECT(0x79ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01BE
        gbc.setState(0x116c, 0x173b, 0x7f20, 0x50b2, 0xb949, 0x69eb, 0x1, 0x1);
        gbc.writeMem(0x116c, { 0x6c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x173b, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01BF
        gbc.setState(0x6c4e, 0x42f6, 0x1400, 0x7a64, 0xcc8, 0x3909, 0x1, 0x0);
        gbc.writeMem(0x6c4e, { 0x6c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x42f6, gbc.sp());
        EXPECT(0x6c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01C0
        gbc.setState(0xdf55, 0x25f3, 0xf450, 0xcf3c, 0x6763, 0x3a3b, 0x1, 0x0);
        gbc.writeMem(0xdf55, { 0x6c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x25f3, gbc.sp());
        EXPECT(0xdf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdf55));
        // 6C 01C1
        gbc.setState(0x41a, 0xa9d2, 0x6260, 0xf7cd, 0xb7aa, 0x94cc, 0x0, 0x0);
        gbc.writeMem(0x41a, { 0x6c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0x41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01C2
        gbc.setState(0x3d4a, 0x654e, 0xf070, 0xd175, 0xe832, 0xa21b, 0x1, 0x0);
        gbc.writeMem(0x3d4a, { 0x6c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x3d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01C3
        gbc.setState(0x2026, 0x8953, 0x75e0, 0x2ddf, 0x469a, 0x3c32, 0x0, 0x1);
        gbc.writeMem(0x2026, { 0x6c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0x2027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01C4
        gbc.setState(0xa88c, 0xf732, 0xa80, 0x9ec0, 0x29fb, 0xd214, 0x1, 0x0);
        gbc.writeMem(0xa88c, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0xa88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa88c));
        // 6C 01C5
        gbc.setState(0x2fbc, 0xa905, 0x6a60, 0x37af, 0x90dd, 0xf043, 0x1, 0x1);
        gbc.writeMem(0x2fbc, { 0x6c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa905, gbc.sp());
        EXPECT(0x2fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01C6
        gbc.setState(0x562a, 0x1f69, 0xf880, 0xd569, 0x1ce1, 0x2014, 0x1, 0x0);
        gbc.writeMem(0x562a, { 0x6c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1f69, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01C7
        gbc.setState(0xd299, 0x83d3, 0xba10, 0x13e, 0xa103, 0xd355, 0x0, 0x0);
        gbc.writeMem(0xd299, { 0x6c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd299));
        // 6C 01C9
        gbc.setState(0x58bb, 0xe528, 0x1500, 0x30e8, 0x29cd, 0x2110, 0x1, 0x1);
        gbc.writeMem(0x58bb, { 0x6c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe528, gbc.sp());
        EXPECT(0x58bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01CA
        gbc.setState(0xc27, 0xad4f, 0xbf90, 0xf090, 0x3b10, 0xff50, 0x0, 0x0);
        gbc.writeMem(0xc27, { 0x6c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xad4f, gbc.sp());
        EXPECT(0xc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01CB
        gbc.setState(0xe164, 0x9cd, 0xe850, 0x55d5, 0x436a, 0x3c70, 0x0, 0x1);
        gbc.writeMem(0xe164, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9cd, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe164));
        // 6C 01CC
        gbc.setState(0xb845, 0xde7f, 0xfa80, 0xf53e, 0xa992, 0x65d8, 0x0, 0x1);
        gbc.writeMem(0xb845, { 0x6c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xde7f, gbc.sp());
        EXPECT(0xb846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb845));
        // 6C 01CD
        gbc.setState(0x67, 0xaa93, 0xce0, 0xfc69, 0x33ed, 0x48c8, 0x0, 0x0);
        gbc.writeMem(0x67, { 0x6c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaa93, gbc.sp());
        EXPECT(0x68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01CF
        gbc.setState(0x619e, 0xa2ce, 0x71b0, 0xfb1, 0x11d9, 0xd982, 0x0, 0x1);
        gbc.writeMem(0x619e, { 0x6c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa2ce, gbc.sp());
        EXPECT(0x619f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01D0
        gbc.setState(0x6f0, 0xa143, 0x770, 0x1cfe, 0x2f2c, 0x6070, 0x0, 0x1);
        gbc.writeMem(0x6f0, { 0x6c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa143, gbc.sp());
        EXPECT(0x6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01D1
        gbc.setState(0x7756, 0x733a, 0xabd0, 0x1b27, 0xa3d5, 0xd001, 0x1, 0x0);
        gbc.writeMem(0x7756, { 0x6c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x733a, gbc.sp());
        EXPECT(0x7757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01D2
        gbc.setState(0x7eea, 0x6bd9, 0xe720, 0xe231, 0xcbef, 0xfa97, 0x0, 0x0);
        gbc.writeMem(0x7eea, { 0x6c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6bd9, gbc.sp());
        EXPECT(0x7eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01D3
        gbc.setState(0x69fd, 0x3592, 0xc100, 0x8eef, 0x3f40, 0x88b1, 0x0, 0x1);
        gbc.writeMem(0x69fd, { 0x6c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3592, gbc.sp());
        EXPECT(0x69fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01D4
        gbc.setState(0x22e7, 0xd7c5, 0x460, 0x568e, 0xee16, 0x62de, 0x1, 0x0);
        gbc.writeMem(0x22e7, { 0x6c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01D5
        gbc.setState(0xced3, 0xa3c2, 0x70c0, 0xd201, 0xab56, 0x1538, 0x0, 0x1);
        gbc.writeMem(0xced3, { 0x6c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0xced4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xced3));
        // 6C 01D6
        gbc.setState(0x458b, 0xd2ba, 0x4de0, 0xede0, 0xa84f, 0xd1fd, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0x6c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0x458c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01D7
        gbc.setState(0x3992, 0xb2a9, 0xff40, 0xd99a, 0x75ab, 0x7524, 0x0, 0x0);
        gbc.writeMem(0x3992, { 0x6c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb2a9, gbc.sp());
        EXPECT(0x3993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01D8
        gbc.setState(0x468b, 0x95d0, 0x85c0, 0x7dc9, 0x6c42, 0x7e0, 0x1, 0x0);
        gbc.writeMem(0x468b, { 0x6c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x95d0, gbc.sp());
        EXPECT(0x468c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01DA
        gbc.setState(0x5cd4, 0x399, 0x20a0, 0xb4cc, 0x6544, 0x9f70, 0x0, 0x1);
        gbc.writeMem(0x5cd4, { 0x6c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0x5cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01DB
        gbc.setState(0x145f, 0x2393, 0x3c20, 0x56d5, 0xf58f, 0xee5b, 0x0, 0x0);
        gbc.writeMem(0x145f, { 0x6c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2393, gbc.sp());
        EXPECT(0x1460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01DC
        gbc.setState(0x616e, 0x3cd0, 0x6240, 0x3622, 0x64fd, 0x8ff6, 0x1, 0x0);
        gbc.writeMem(0x616e, { 0x6c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3cd0, gbc.sp());
        EXPECT(0x616f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01DE
        gbc.setState(0x1003, 0x33f0, 0xa7f0, 0x7052, 0x2438, 0x9bd5, 0x0, 0x0);
        gbc.writeMem(0x1003, { 0x6c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0x1004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01DF
        gbc.setState(0x9ab7, 0x6e25, 0x7db0, 0xd98e, 0xa9e6, 0x9bd5, 0x0, 0x1);
        gbc.writeMem(0x9ab7, { 0x6c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6e25, gbc.sp());
        EXPECT(0x9ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9ab7));
        // 6C 01E1
        gbc.setState(0xd22f, 0xc3a5, 0xf340, 0xbf36, 0xc213, 0xfe36, 0x1, 0x0);
        gbc.writeMem(0xd22f, { 0x6c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc3a5, gbc.sp());
        EXPECT(0xd230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd22f));
        // 6C 01E2
        gbc.setState(0x7d5c, 0xf99d, 0xa610, 0x1a0b, 0xe237, 0x89fa, 0x1, 0x1);
        gbc.writeMem(0x7d5c, { 0x6c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf99d, gbc.sp());
        EXPECT(0x7d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01E3
        gbc.setState(0x1e5e, 0xce11, 0xbad0, 0x435a, 0x411a, 0xcca2, 0x0, 0x1);
        gbc.writeMem(0x1e5e, { 0x6c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xce11, gbc.sp());
        EXPECT(0x1e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01E4
        gbc.setState(0xcebb, 0xc21d, 0xbc30, 0xdf65, 0x810f, 0xcc02, 0x0, 0x0);
        gbc.writeMem(0xcebb, { 0x6c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0xcebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcebb));
        // 6C 01E6
        gbc.setState(0x26cd, 0xcbd9, 0xbe50, 0xba07, 0x8a51, 0x8735, 0x0, 0x0);
        gbc.writeMem(0x26cd, { 0x6c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcbd9, gbc.sp());
        EXPECT(0x26ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01E7
        gbc.setState(0xd287, 0xda74, 0x3260, 0x7e99, 0x6b89, 0x62a, 0x0, 0x0);
        gbc.writeMem(0xd287, { 0x6c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda74, gbc.sp());
        EXPECT(0xd288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd287));
        // 6C 01E8
        gbc.setState(0x5f92, 0xbc32, 0xf9a0, 0x7e6b, 0x919e, 0x6b57, 0x0, 0x0);
        gbc.writeMem(0x5f92, { 0x6c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbc32, gbc.sp());
        EXPECT(0x5f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01E9
        gbc.setState(0xc48e, 0x4e6d, 0x1010, 0xd19d, 0x58e2, 0xe4e1, 0x1, 0x0);
        gbc.writeMem(0xc48e, { 0x6c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4e6d, gbc.sp());
        EXPECT(0xc48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc48e));
        // 6C 01EA
        gbc.setState(0xb388, 0xedb7, 0x20a0, 0xdfc3, 0x34fa, 0x8d03, 0x1, 0x1);
        gbc.writeMem(0xb388, { 0x6c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xedb7, gbc.sp());
        EXPECT(0xb389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb388));
        // 6C 01EB
        gbc.setState(0x9e41, 0xb174, 0x2f00, 0xa48d, 0xe82e, 0x866, 0x1, 0x0);
        gbc.writeMem(0x9e41, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb174, gbc.sp());
        EXPECT(0x9e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9e41));
        // 6C 01EC
        gbc.setState(0xd06a, 0x9b80, 0x1410, 0x5ec3, 0xfc45, 0xadc1, 0x1, 0x0);
        gbc.writeMem(0xd06a, { 0x6c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0xd06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd06a));
        // 6C 01ED
        gbc.setState(0x34e7, 0x4050, 0x8900, 0x32b2, 0x7442, 0x6deb, 0x0, 0x0);
        gbc.writeMem(0x34e7, { 0x6c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4050, gbc.sp());
        EXPECT(0x34e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01EE
        gbc.setState(0x463d, 0x1d84, 0x6770, 0xde67, 0xbe4f, 0x7cf3, 0x1, 0x1);
        gbc.writeMem(0x463d, { 0x6c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1d84, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01F0
        gbc.setState(0x992b, 0x876b, 0x2a10, 0x2809, 0xca3e, 0xe296, 0x0, 0x0);
        gbc.writeMem(0x992b, { 0x6c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x876b, gbc.sp());
        EXPECT(0x992c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x992b));
        // 6C 01F1
        gbc.setState(0x4431, 0x1d44, 0x2200, 0x640a, 0x5efa, 0x66e8, 0x1, 0x0);
        gbc.writeMem(0x4431, { 0x6c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1d44, gbc.sp());
        EXPECT(0x4432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01F2
        gbc.setState(0x4771, 0xe57d, 0xcab0, 0xec3d, 0x90ba, 0x2a29, 0x0, 0x0);
        gbc.writeMem(0x4771, { 0x6c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0x4772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01F4
        gbc.setState(0x172f, 0x3431, 0xb690, 0xfa0c, 0x13d4, 0x35a, 0x0, 0x0);
        gbc.writeMem(0x172f, { 0x6c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3431, gbc.sp());
        EXPECT(0x1730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 01F5
        gbc.setState(0xdf22, 0x2f42, 0xe0b0, 0xa095, 0xa792, 0xcb4c, 0x1, 0x1);
        gbc.writeMem(0xdf22, { 0x6c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2f42, gbc.sp());
        EXPECT(0xdf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdf22));
        // 6C 01F6
        gbc.setState(0xca70, 0xddd6, 0x9b40, 0x3a5d, 0xd0ab, 0xc2ff, 0x0, 0x1);
        gbc.writeMem(0xca70, { 0x6c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xddd6, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xca70));
        // 6C 01F7
        gbc.setState(0x725c, 0xa6db, 0x68a0, 0x8422, 0xb05e, 0x9ba9, 0x0, 0x1);
        gbc.writeMem(0x725c, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa6db, gbc.sp());
        EXPECT(0x725d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01F8
        gbc.setState(0x2525, 0x5f6c, 0x8ca0, 0xb37e, 0x8d5e, 0x86f4, 0x0, 0x0);
        gbc.writeMem(0x2525, { 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5f6c, gbc.sp());
        EXPECT(0x2526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01F9
        gbc.setState(0x199d, 0xf464, 0x2a40, 0xe5c6, 0x6d02, 0xa952, 0x0, 0x0);
        gbc.writeMem(0x199d, { 0x6c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf464, gbc.sp());
        EXPECT(0x199e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01FA
        gbc.setState(0x8bab, 0x64e0, 0x6ce0, 0x5c64, 0x3577, 0xfee4, 0x1, 0x0);
        gbc.writeMem(0x8bab, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x64e0, gbc.sp());
        EXPECT(0x8bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8bab));
        // 6C 01FB
        gbc.setState(0x9654, 0x3d40, 0xf8f0, 0xb5f4, 0x7073, 0xaadc, 0x0, 0x1);
        gbc.writeMem(0x9654, { 0x6c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3d40, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9654));
        // 6C 01FC
        gbc.setState(0x25d4, 0x2828, 0x12c0, 0x3f66, 0x2ccf, 0xc837, 0x1, 0x1);
        gbc.writeMem(0x25d4, { 0x6c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2828, gbc.sp());
        EXPECT(0x25d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01FD
        gbc.setState(0x566a, 0x5a0b, 0x8cc0, 0xe80e, 0x3b30, 0x1202, 0x0, 0x0);
        gbc.writeMem(0x566a, { 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5a0b, gbc.sp());
        EXPECT(0x566b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 01FE
        gbc.setState(0xa1b7, 0xc071, 0xac40, 0x527, 0xe126, 0x3b9a, 0x1, 0x0);
        gbc.writeMem(0xa1b7, { 0x6c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc071, gbc.sp());
        EXPECT(0xa1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa1b7));
        // 6C 01FF
        gbc.setState(0x2694, 0x2672, 0x5780, 0x105, 0xe75a, 0xe873, 0x1, 0x1);
        gbc.writeMem(0x2694, { 0x6c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2672, gbc.sp());
        EXPECT(0x2695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0200
        gbc.setState(0x4c8b, 0x5dc3, 0x7870, 0xee9c, 0xe0ce, 0x337, 0x1, 0x0);
        gbc.writeMem(0x4c8b, { 0x6c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5dc3, gbc.sp());
        EXPECT(0x4c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0201
        gbc.setState(0x69f8, 0x6038, 0x9f40, 0x9174, 0x605a, 0x9cb8, 0x0, 0x1);
        gbc.writeMem(0x69f8, { 0x6c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6038, gbc.sp());
        EXPECT(0x69f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0202
        gbc.setState(0x7780, 0x37ad, 0xbe30, 0x2742, 0xf106, 0xfa3d, 0x0, 0x1);
        gbc.writeMem(0x7780, { 0x6c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x37ad, gbc.sp());
        EXPECT(0x7781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0203
        gbc.setState(0x9a9f, 0x4300, 0x480, 0x9749, 0x36d4, 0x34fe, 0x0, 0x0);
        gbc.writeMem(0x9a9f, { 0x6c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4300, gbc.sp());
        EXPECT(0x9aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9a9f));
        // 6C 0204
        gbc.setState(0x4504, 0xcf4e, 0xd370, 0x4554, 0x6ff, 0x33e5, 0x0, 0x1);
        gbc.writeMem(0x4504, { 0x6c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcf4e, gbc.sp());
        EXPECT(0x4505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0205
        gbc.setState(0x723f, 0x96f4, 0x3ac0, 0x7396, 0x92c8, 0xec4b, 0x1, 0x1);
        gbc.writeMem(0x723f, { 0x6c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x96f4, gbc.sp());
        EXPECT(0x7240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0206
        gbc.setState(0x9c32, 0x5810, 0xc950, 0xa60d, 0xef6b, 0x1b8c, 0x0, 0x1);
        gbc.writeMem(0x9c32, { 0x6c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5810, gbc.sp());
        EXPECT(0x9c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9c32));
        // 6C 0207
        gbc.setState(0xd247, 0x2b0d, 0x33a0, 0xa9e5, 0x90df, 0x8d97, 0x0, 0x1);
        gbc.writeMem(0xd247, { 0x6c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2b0d, gbc.sp());
        EXPECT(0xd248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd247));
        // 6C 0208
        gbc.setState(0xb780, 0x7df4, 0xaee0, 0xdc, 0x364a, 0x3025, 0x1, 0x1);
        gbc.writeMem(0xb780, { 0x6c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7df4, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb780));
        // 6C 0209
        gbc.setState(0x11de, 0x1d7e, 0x1080, 0x966d, 0xfacf, 0x80d3, 0x1, 0x0);
        gbc.writeMem(0x11de, { 0x6c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1d7e, gbc.sp());
        EXPECT(0x11df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 020A
        gbc.setState(0x8e5b, 0xb6f3, 0x6340, 0xbf7e, 0x4c73, 0x4ad, 0x0, 0x1);
        gbc.writeMem(0x8e5b, { 0x6c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb6f3, gbc.sp());
        EXPECT(0x8e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8e5b));
        // 6C 020B
        gbc.setState(0x258b, 0xded, 0xc20, 0xd7cd, 0x2f2c, 0x536a, 0x1, 0x1);
        gbc.writeMem(0x258b, { 0x6c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xded, gbc.sp());
        EXPECT(0x258c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 020C
        gbc.setState(0xc0a4, 0x372f, 0xe3d0, 0x926c, 0x5fb8, 0xc776, 0x1, 0x0);
        gbc.writeMem(0xc0a4, { 0x6c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0xc0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc0a4));
        // 6C 020D
        gbc.setState(0xe22, 0x52c9, 0x1670, 0xe9de, 0xa186, 0x1ad6, 0x1, 0x1);
        gbc.writeMem(0xe22, { 0x6c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 020E
        gbc.setState(0x9b71, 0xb35b, 0x3060, 0x2c07, 0x931a, 0x712, 0x1, 0x0);
        gbc.writeMem(0x9b71, { 0x6c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb35b, gbc.sp());
        EXPECT(0x9b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9b71));
        // 6C 020F
        gbc.setState(0xb926, 0x1a51, 0x5f50, 0xaaac, 0x60, 0x1852, 0x0, 0x0);
        gbc.writeMem(0xb926, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1a51, gbc.sp());
        EXPECT(0xb927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb926));
        // 6C 0210
        gbc.setState(0xaf47, 0x7c0d, 0x7880, 0x4f30, 0x8836, 0xb3e3, 0x1, 0x0);
        gbc.writeMem(0xaf47, { 0x6c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7c0d, gbc.sp());
        EXPECT(0xaf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaf47));
        // 6C 0211
        gbc.setState(0xd0ad, 0xa4ae, 0xb8d0, 0xab78, 0x3d61, 0xad00, 0x1, 0x1);
        gbc.writeMem(0xd0ad, { 0x6c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa4ae, gbc.sp());
        EXPECT(0xd0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd0ad));
        // 6C 0212
        gbc.setState(0x352d, 0x4f16, 0x61d0, 0xfeb5, 0x58a8, 0x650f, 0x1, 0x0);
        gbc.writeMem(0x352d, { 0x6c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4f16, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0213
        gbc.setState(0x2617, 0x6b21, 0xcbf0, 0xe13d, 0xa8cd, 0x6560, 0x0, 0x1);
        gbc.writeMem(0x2617, { 0x6c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6b21, gbc.sp());
        EXPECT(0x2618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0214
        gbc.setState(0xc32b, 0x5005, 0x75b0, 0xd57b, 0x3916, 0xfb34, 0x1, 0x1);
        gbc.writeMem(0xc32b, { 0x6c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5005, gbc.sp());
        EXPECT(0xc32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc32b));
        // 6C 0215
        gbc.setState(0x520, 0x496, 0x72d0, 0x6feb, 0x7a1e, 0x9491, 0x1, 0x0);
        gbc.writeMem(0x520, { 0x6c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x496, gbc.sp());
        EXPECT(0x521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0216
        gbc.setState(0xcdfe, 0x211d, 0x9030, 0x4918, 0x706b, 0x850d, 0x1, 0x1);
        gbc.writeMem(0xcdfe, { 0x6c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x211d, gbc.sp());
        EXPECT(0xcdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcdfe));
        // 6C 0217
        gbc.setState(0x268b, 0x37eb, 0xd410, 0xef30, 0xd1bb, 0x9e61, 0x0, 0x1);
        gbc.writeMem(0x268b, { 0x6c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x37eb, gbc.sp());
        EXPECT(0x268c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0218
        gbc.setState(0xc589, 0x75ed, 0xf860, 0xb780, 0x4156, 0x45a6, 0x0, 0x1);
        gbc.writeMem(0xc589, { 0x6c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x75ed, gbc.sp());
        EXPECT(0xc58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc589));
        // 6C 0219
        gbc.setState(0xc7b2, 0x9033, 0x4120, 0xd1a, 0xfd1c, 0xf9f1, 0x0, 0x1);
        gbc.writeMem(0xc7b2, { 0x6c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9033, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc7b2));
        // 6C 021A
        gbc.setState(0x630, 0xcb32, 0xb9f0, 0x192c, 0xb9cd, 0x2c9a, 0x0, 0x0);
        gbc.writeMem(0x630, { 0x6c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcb32, gbc.sp());
        EXPECT(0x631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 021B
        gbc.setState(0xee06, 0x2d62, 0xcc80, 0x348b, 0xa962, 0x6fd4, 0x1, 0x1);
        gbc.writeMem(0xee06, { 0x6c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2d62, gbc.sp());
        EXPECT(0xee07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xee06));
        // 6C 021C
        gbc.setState(0xba59, 0x91fa, 0x4a50, 0x6dc4, 0xefe6, 0xb02f, 0x1, 0x0);
        gbc.writeMem(0xba59, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x91fa, gbc.sp());
        EXPECT(0xba5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xba59));
        // 6C 021D
        gbc.setState(0x8cf2, 0x9e9b, 0x350, 0xae15, 0xcc03, 0xdfa8, 0x0, 0x1);
        gbc.writeMem(0x8cf2, { 0x6c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0x8cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8cf2));
        // 6C 021E
        gbc.setState(0x1966, 0xdd6c, 0xb4d0, 0x8829, 0xff19, 0xd9a6, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0x6c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdd6c, gbc.sp());
        EXPECT(0x1967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 021F
        gbc.setState(0xa02b, 0x8590, 0xbcd0, 0x1551, 0x1d27, 0x6a05, 0x1, 0x0);
        gbc.writeMem(0xa02b, { 0x6c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8590, gbc.sp());
        EXPECT(0xa02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa02b));
        // 6C 0220
        gbc.setState(0x8b5f, 0xce89, 0x6480, 0x90dc, 0x1a86, 0xaacc, 0x0, 0x1);
        gbc.writeMem(0x8b5f, { 0x6c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xce89, gbc.sp());
        EXPECT(0x8b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8b5f));
        // 6C 0221
        gbc.setState(0x6366, 0x8011, 0xdb40, 0xdd0c, 0xc28e, 0xc4af, 0x0, 0x1);
        gbc.writeMem(0x6366, { 0x6c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0224
        gbc.setState(0xb00b, 0x8ab2, 0x72d0, 0x3756, 0xe65, 0xdcdf, 0x0, 0x0);
        gbc.writeMem(0xb00b, { 0x6c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8ab2, gbc.sp());
        EXPECT(0xb00c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb00b));
        // 6C 0225
        gbc.setState(0x1f3d, 0x3d07, 0x6b30, 0xa35, 0x64f, 0xcfb0, 0x1, 0x0);
        gbc.writeMem(0x1f3d, { 0x6c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3d07, gbc.sp());
        EXPECT(0x1f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0226
        gbc.setState(0xb25c, 0xa779, 0xba90, 0x20b5, 0x1317, 0x85e, 0x1, 0x0);
        gbc.writeMem(0xb25c, { 0x6c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa779, gbc.sp());
        EXPECT(0xb25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb25c));
        // 6C 0227
        gbc.setState(0xbf46, 0xe73, 0xe5f0, 0x4fa1, 0xd35, 0x4, 0x0, 0x0);
        gbc.writeMem(0xbf46, { 0x6c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe73, gbc.sp());
        EXPECT(0xbf47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbf46));
        // 6C 0228
        gbc.setState(0x83c0, 0xbca7, 0x98b0, 0x5cd6, 0xadca, 0xab1e, 0x1, 0x0);
        gbc.writeMem(0x83c0, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbca7, gbc.sp());
        EXPECT(0x83c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x83c0));
        // 6C 0229
        gbc.setState(0x83fe, 0x9dcd, 0xcb30, 0xcd10, 0xd0bd, 0xa17a, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0x6c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x83fe));
        // 6C 022A
        gbc.setState(0xb9aa, 0x5474, 0xf190, 0x722f, 0xff8, 0x4a0d, 0x1, 0x1);
        gbc.writeMem(0xb9aa, { 0x6c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5474, gbc.sp());
        EXPECT(0xb9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb9aa));
        // 6C 022B
        gbc.setState(0x587c, 0x8deb, 0xb0, 0x8302, 0x2673, 0x5a4b, 0x0, 0x1);
        gbc.writeMem(0x587c, { 0x6c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8deb, gbc.sp());
        EXPECT(0x587d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 022C
        gbc.setState(0x7fbc, 0xd27, 0x69c0, 0xc165, 0xb6ad, 0xc291, 0x0, 0x1);
        gbc.writeMem(0x7fbc, { 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0x7fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 022D
        gbc.setState(0x4216, 0xcf7a, 0xee00, 0x41eb, 0xea38, 0x8fef, 0x1, 0x1);
        gbc.writeMem(0x4216, { 0x6c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcf7a, gbc.sp());
        EXPECT(0x4217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 022E
        gbc.setState(0xc7a6, 0x7d2e, 0xb010, 0x2f5, 0xcc78, 0x783c, 0x1, 0x1);
        gbc.writeMem(0xc7a6, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7d2e, gbc.sp());
        EXPECT(0xc7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc7a6));
        // 6C 022F
        gbc.setState(0xb6d3, 0xacc, 0xb8e0, 0x160b, 0x857b, 0xf574, 0x1, 0x0);
        gbc.writeMem(0xb6d3, { 0x6c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xacc, gbc.sp());
        EXPECT(0xb6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb6d3));
        // 6C 0230
        gbc.setState(0xee2b, 0xbe97, 0xb1b0, 0x39e5, 0x5859, 0x496c, 0x0, 0x1);
        gbc.writeMem(0xee2b, { 0x6c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbe97, gbc.sp());
        EXPECT(0xee2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xee2b));
        // 6C 0231
        gbc.setState(0xc189, 0xbb98, 0x86e0, 0x8411, 0x16c8, 0xec84, 0x0, 0x0);
        gbc.writeMem(0xc189, { 0x6c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbb98, gbc.sp());
        EXPECT(0xc18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc189));
        // 6C 0232
        gbc.setState(0x8d1b, 0x20a5, 0xac80, 0xc898, 0xa440, 0x9299, 0x1, 0x0);
        gbc.writeMem(0x8d1b, { 0x6c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x20a5, gbc.sp());
        EXPECT(0x8d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8d1b));
        // 6C 0233
        gbc.setState(0x2bc2, 0x929d, 0x2120, 0x4b1b, 0xe414, 0xd5ac, 0x1, 0x1);
        gbc.writeMem(0x2bc2, { 0x6c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x929d, gbc.sp());
        EXPECT(0x2bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0234
        gbc.setState(0x1e61, 0x336, 0xf8d0, 0x4e79, 0x30db, 0xdc52, 0x1, 0x1);
        gbc.writeMem(0x1e61, { 0x6c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x336, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0235
        gbc.setState(0x260d, 0x121c, 0xaa70, 0xbbc0, 0x8544, 0xd989, 0x0, 0x0);
        gbc.writeMem(0x260d, { 0x6c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0x260e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0236
        gbc.setState(0x79ed, 0x404d, 0x68f0, 0xa9d1, 0xeb4e, 0x2ef2, 0x0, 0x1);
        gbc.writeMem(0x79ed, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x404d, gbc.sp());
        EXPECT(0x79ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0237
        gbc.setState(0xe980, 0x3697, 0xbd60, 0xbc87, 0x2515, 0xf839, 0x1, 0x1);
        gbc.writeMem(0xe980, { 0x6c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3697, gbc.sp());
        EXPECT(0xe981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe980));
        // 6C 0238
        gbc.setState(0x8e5e, 0xbef7, 0x25f0, 0x56b7, 0x7368, 0xfa0a, 0x1, 0x0);
        gbc.writeMem(0x8e5e, { 0x6c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbef7, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8e5e));
        // 6C 0239
        gbc.setState(0xb706, 0x5d8d, 0xb050, 0x4b99, 0xe0e4, 0x1c97, 0x0, 0x0);
        gbc.writeMem(0xb706, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5d8d, gbc.sp());
        EXPECT(0xb707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb706));
        // 6C 023A
        gbc.setState(0x4d56, 0xb447, 0x22d0, 0x39d0, 0x93fa, 0x694, 0x1, 0x1);
        gbc.writeMem(0x4d56, { 0x6c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb447, gbc.sp());
        EXPECT(0x4d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 023B
        gbc.setState(0x38fa, 0xb02e, 0x37a0, 0x15e2, 0xfe1b, 0x3f2, 0x1, 0x0);
        gbc.writeMem(0x38fa, { 0x6c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb02e, gbc.sp());
        EXPECT(0x38fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 023D
        gbc.setState(0x2a78, 0x7c4f, 0xd080, 0x396a, 0x3b35, 0x1ee6, 0x1, 0x0);
        gbc.writeMem(0x2a78, { 0x6c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7c4f, gbc.sp());
        EXPECT(0x2a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 023E
        gbc.setState(0x2fa3, 0x195b, 0xd910, 0x656a, 0xe918, 0x36ab, 0x0, 0x1);
        gbc.writeMem(0x2fa3, { 0x6c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x195b, gbc.sp());
        EXPECT(0x2fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 023F
        gbc.setState(0xc079, 0x956a, 0x9e10, 0x60ba, 0x87a9, 0x7654, 0x0, 0x0);
        gbc.writeMem(0xc079, { 0x6c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x956a, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc079));
        // 6C 0240
        gbc.setState(0x8f0c, 0x463e, 0xc080, 0x1890, 0xb306, 0xdf0f, 0x0, 0x1);
        gbc.writeMem(0x8f0c, { 0x6c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0x8f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8f0c));
        // 6C 0241
        gbc.setState(0x336, 0xecd2, 0x9c70, 0xf4a5, 0x466e, 0xec4, 0x0, 0x0);
        gbc.writeMem(0x336, { 0x6c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xecd2, gbc.sp());
        EXPECT(0x337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0242
        gbc.setState(0x7eb6, 0x9206, 0x2d30, 0xe35d, 0x4339, 0x1f06, 0x1, 0x1);
        gbc.writeMem(0x7eb6, { 0x6c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9206, gbc.sp());
        EXPECT(0x7eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0243
        gbc.setState(0xcaf7, 0xcd51, 0x1770, 0xe9d, 0x3fb6, 0xf520, 0x0, 0x1);
        gbc.writeMem(0xcaf7, { 0x6c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcd51, gbc.sp());
        EXPECT(0xcaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcaf7));
        // 6C 0244
        gbc.setState(0x544f, 0x1108, 0xfb60, 0x65bb, 0x7f70, 0x72d9, 0x0, 0x1);
        gbc.writeMem(0x544f, { 0x6c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1108, gbc.sp());
        EXPECT(0x5450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0245
        gbc.setState(0xc36f, 0xa748, 0xf9f0, 0x4e38, 0x5d90, 0xa81b, 0x0, 0x0);
        gbc.writeMem(0xc36f, { 0x6c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa748, gbc.sp());
        EXPECT(0xc370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc36f));
        // 6C 0246
        gbc.setState(0x39be, 0xf5a0, 0x7140, 0x3885, 0xec66, 0xa6ff, 0x1, 0x1);
        gbc.writeMem(0x39be, { 0x6c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x39bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0247
        gbc.setState(0xa4bd, 0xc6d8, 0x3570, 0xf0cb, 0xc407, 0x58cf, 0x1, 0x1);
        gbc.writeMem(0xa4bd, { 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc6d8, gbc.sp());
        EXPECT(0xa4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa4bd));
        // 6C 0248
        gbc.setState(0x7b59, 0xd480, 0xb60, 0xb5f7, 0xd766, 0xe55a, 0x1, 0x1);
        gbc.writeMem(0x7b59, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd480, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 024A
        gbc.setState(0x37bf, 0x737b, 0x9f20, 0x8a1a, 0xfcf2, 0xc926, 0x0, 0x1);
        gbc.writeMem(0x37bf, { 0x6c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x737b, gbc.sp());
        EXPECT(0x37c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 024B
        gbc.setState(0x8f4e, 0xd6d6, 0x7660, 0x5bbd, 0x7f26, 0xd604, 0x0, 0x1);
        gbc.writeMem(0x8f4e, { 0x6c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd6d6, gbc.sp());
        EXPECT(0x8f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8f4e));
        // 6C 024D
        gbc.setState(0x697f, 0x71ed, 0x73f0, 0x3922, 0xc324, 0xae3, 0x0, 0x0);
        gbc.writeMem(0x697f, { 0x6c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x71ed, gbc.sp());
        EXPECT(0x6980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 024E
        gbc.setState(0x113c, 0x6870, 0x9c50, 0xb922, 0x78b1, 0x8b5f, 0x1, 0x0);
        gbc.writeMem(0x113c, { 0x6c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6870, gbc.sp());
        EXPECT(0x113d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 024F
        gbc.setState(0x9e14, 0x69b2, 0x9f30, 0x768, 0xcaef, 0xfa2b, 0x0, 0x0);
        gbc.writeMem(0x9e14, { 0x6c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x69b2, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9e14));
        // 6C 0250
        gbc.setState(0x8bb5, 0x88a2, 0x1cb0, 0x26a5, 0x179e, 0xd7d5, 0x1, 0x0);
        gbc.writeMem(0x8bb5, { 0x6c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x88a2, gbc.sp());
        EXPECT(0x8bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8bb5));
        // 6C 0251
        gbc.setState(0xd3ca, 0x7b74, 0x8c70, 0xbb76, 0x15f3, 0x6b95, 0x1, 0x0);
        gbc.writeMem(0xd3ca, { 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7b74, gbc.sp());
        EXPECT(0xd3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd3ca));
        // 6C 0252
        gbc.setState(0xd803, 0x6b5f, 0xde60, 0xea0e, 0x343b, 0xf28f, 0x0, 0x0);
        gbc.writeMem(0xd803, { 0x6c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6b5f, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd803));
        // 6C 0253
        gbc.setState(0xb78e, 0x30eb, 0xda00, 0x18b6, 0xec61, 0x414e, 0x1, 0x1);
        gbc.writeMem(0xb78e, { 0x6c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x30eb, gbc.sp());
        EXPECT(0xb78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb78e));
        // 6C 0254
        gbc.setState(0x8458, 0xa7cf, 0x5ae0, 0xb5d8, 0x26be, 0x9d3f, 0x1, 0x0);
        gbc.writeMem(0x8458, { 0x6c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa7cf, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8458));
        // 6C 0255
        gbc.setState(0x9bde, 0x76be, 0xf580, 0x781b, 0x6f8d, 0xfd5, 0x0, 0x1);
        gbc.writeMem(0x9bde, { 0x6c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x76be, gbc.sp());
        EXPECT(0x9bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9bde));
        // 6C 0256
        gbc.setState(0x8376, 0xf191, 0xdbd0, 0x6423, 0xb03c, 0xe5df, 0x0, 0x1);
        gbc.writeMem(0x8376, { 0x6c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf191, gbc.sp());
        EXPECT(0x8377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8376));
        // 6C 0257
        gbc.setState(0xefb7, 0x99a6, 0x5480, 0xd321, 0x7ac6, 0xf209, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0x6c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x99a6, gbc.sp());
        EXPECT(0xefb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xefb7));
        // 6C 0258
        gbc.setState(0xa684, 0xde49, 0xf450, 0x1433, 0xe0a6, 0x5b0d, 0x0, 0x1);
        gbc.writeMem(0xa684, { 0x6c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xde49, gbc.sp());
        EXPECT(0xa685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa684));
        // 6C 0259
        gbc.setState(0x71d1, 0x4b73, 0x5210, 0x1cea, 0xf630, 0x80e, 0x0, 0x0);
        gbc.writeMem(0x71d1, { 0x6c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4b73, gbc.sp());
        EXPECT(0x71d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 025A
        gbc.setState(0x6ab, 0xa1c6, 0xfa00, 0x8f22, 0x6628, 0xcca6, 0x0, 0x0);
        gbc.writeMem(0x6ab, { 0x6c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa1c6, gbc.sp());
        EXPECT(0x6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 025B
        gbc.setState(0x547f, 0xdb81, 0x6ea0, 0x6b11, 0xa54e, 0x3e54, 0x0, 0x1);
        gbc.writeMem(0x547f, { 0x6c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdb81, gbc.sp());
        EXPECT(0x5480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 025C
        gbc.setState(0x4c2b, 0x3af9, 0x85f0, 0xd86c, 0x85fa, 0x406b, 0x1, 0x0);
        gbc.writeMem(0x4c2b, { 0x6c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x4c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0260
        gbc.setState(0x31cc, 0x6270, 0x9c60, 0xf1b7, 0xddfc, 0x488a, 0x1, 0x0);
        gbc.writeMem(0x31cc, { 0x6c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6270, gbc.sp());
        EXPECT(0x31cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0261
        gbc.setState(0xe454, 0x2b62, 0x5730, 0x8ee1, 0x9ba6, 0x83e8, 0x0, 0x1);
        gbc.writeMem(0xe454, { 0x6c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2b62, gbc.sp());
        EXPECT(0xe455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe454));
        // 6C 0262
        gbc.setState(0x3fe9, 0xf675, 0xc10, 0xc468, 0x9e2, 0x150, 0x1, 0x0);
        gbc.writeMem(0x3fe9, { 0x6c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf675, gbc.sp());
        EXPECT(0x3fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0263
        gbc.setState(0xb321, 0x4d08, 0xb3f0, 0xb8e6, 0xb79f, 0xda00, 0x0, 0x0);
        gbc.writeMem(0xb321, { 0x6c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4d08, gbc.sp());
        EXPECT(0xb322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb321));
        // 6C 0264
        gbc.setState(0x25d8, 0x6c0a, 0x96b0, 0x8861, 0x8583, 0xa3f0, 0x0, 0x1);
        gbc.writeMem(0x25d8, { 0x6c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6c0a, gbc.sp());
        EXPECT(0x25d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0265
        gbc.setState(0x802, 0xc7ea, 0x19e0, 0xc13e, 0x641c, 0x76aa, 0x0, 0x1);
        gbc.writeMem(0x802, { 0x6c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc7ea, gbc.sp());
        EXPECT(0x803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0266
        gbc.setState(0x3ffe, 0x7b86, 0x6c80, 0xb768, 0xff0c, 0x5a1b, 0x1, 0x0);
        gbc.writeMem(0x3ffe, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7b86, gbc.sp());
        EXPECT(0x3fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0267
        gbc.setState(0x9fe, 0xb491, 0xef70, 0xbe7e, 0x42cc, 0x9fa0, 0x1, 0x0);
        gbc.writeMem(0x9fe, { 0x6c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb491, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0268
        gbc.setState(0x71fd, 0xcd51, 0xe470, 0xe723, 0x39eb, 0x170f, 0x0, 0x0);
        gbc.writeMem(0x71fd, { 0x6c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcd51, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0269
        gbc.setState(0x5784, 0x509, 0x3640, 0x8b91, 0x58b7, 0x326a, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0x6c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x509, gbc.sp());
        EXPECT(0x5785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 026A
        gbc.setState(0x5d8, 0x1d4d, 0x5110, 0x2622, 0xece8, 0xa4e5, 0x1, 0x1);
        gbc.writeMem(0x5d8, { 0x6c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0x5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 026B
        gbc.setState(0x1e8, 0x84e5, 0xf60, 0x2e95, 0x4c23, 0x6719, 0x1, 0x1);
        gbc.writeMem(0x1e8, { 0x6c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x84e5, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 026C
        gbc.setState(0x5c35, 0x44b3, 0x1130, 0x6794, 0xdd85, 0x4365, 0x1, 0x1);
        gbc.writeMem(0x5c35, { 0x6c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x44b3, gbc.sp());
        EXPECT(0x5c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 026D
        gbc.setState(0xdbc4, 0xfbae, 0xa940, 0x88d3, 0x4819, 0x4981, 0x1, 0x1);
        gbc.writeMem(0xdbc4, { 0x6c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfbae, gbc.sp());
        EXPECT(0xdbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdbc4));
        // 6C 026E
        gbc.setState(0x385c, 0x8063, 0x9480, 0xa833, 0x2a00, 0xceb0, 0x1, 0x0);
        gbc.writeMem(0x385c, { 0x6c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8063, gbc.sp());
        EXPECT(0x385d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 026F
        gbc.setState(0xbd9a, 0xf298, 0x5e60, 0x707, 0x9f2a, 0x3448, 0x0, 0x0);
        gbc.writeMem(0xbd9a, { 0x6c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf298, gbc.sp());
        EXPECT(0xbd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbd9a));
        // 6C 0270
        gbc.setState(0xe931, 0xc512, 0xb130, 0xe085, 0xb6eb, 0xdc2e, 0x0, 0x1);
        gbc.writeMem(0xe931, { 0x6c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc512, gbc.sp());
        EXPECT(0xe932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe931));
        // 6C 0271
        gbc.setState(0x1f6a, 0x33f, 0x6d70, 0x7f97, 0x55e4, 0x1e29, 0x0, 0x0);
        gbc.writeMem(0x1f6a, { 0x6c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x33f, gbc.sp());
        EXPECT(0x1f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0272
        gbc.setState(0x618d, 0xe46f, 0x25c0, 0x4909, 0x968, 0x62cb, 0x0, 0x1);
        gbc.writeMem(0x618d, { 0x6c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe46f, gbc.sp());
        EXPECT(0x618e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0273
        gbc.setState(0x5a3d, 0xf2c, 0xa9b0, 0x1ce3, 0x5019, 0x4be3, 0x0, 0x0);
        gbc.writeMem(0x5a3d, { 0x6c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf2c, gbc.sp());
        EXPECT(0x5a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0274
        gbc.setState(0x4857, 0xb46c, 0x1da0, 0x1b25, 0xdcb3, 0x22d2, 0x0, 0x0);
        gbc.writeMem(0x4857, { 0x6c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb46c, gbc.sp());
        EXPECT(0x4858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0275
        gbc.setState(0x6b2f, 0xe666, 0x4d70, 0x5f74, 0xf0cc, 0xa4ba, 0x1, 0x0);
        gbc.writeMem(0x6b2f, { 0x6c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe666, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0276
        gbc.setState(0x1b62, 0x847f, 0x1c20, 0xb54a, 0x719e, 0x3280, 0x1, 0x0);
        gbc.writeMem(0x1b62, { 0x6c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x847f, gbc.sp());
        EXPECT(0x1b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0277
        gbc.setState(0xc5a0, 0x73aa, 0x1af0, 0x51d3, 0xaac1, 0x87b2, 0x1, 0x0);
        gbc.writeMem(0xc5a0, { 0x6c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x73aa, gbc.sp());
        EXPECT(0xc5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc5a0));
        // 6C 0278
        gbc.setState(0x747d, 0xeb1b, 0x27a0, 0x9540, 0xc1b8, 0x46a, 0x1, 0x0);
        gbc.writeMem(0x747d, { 0x6c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0x747e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0279
        gbc.setState(0x18c7, 0x7c84, 0xaa40, 0x829c, 0x4e0f, 0xd82d, 0x1, 0x0);
        gbc.writeMem(0x18c7, { 0x6c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7c84, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 027A
        gbc.setState(0x8061, 0x9606, 0x5cb0, 0x59ef, 0x8428, 0x679e, 0x0, 0x1);
        gbc.writeMem(0x8061, { 0x6c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9606, gbc.sp());
        EXPECT(0x8062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8061));
        // 6C 027B
        gbc.setState(0x928e, 0xf128, 0x7b80, 0x1ad0, 0x7007, 0x9621, 0x0, 0x1);
        gbc.writeMem(0x928e, { 0x6c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf128, gbc.sp());
        EXPECT(0x928f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x928e));
        // 6C 027C
        gbc.setState(0x107f, 0xe12b, 0x5a20, 0xcd91, 0x20a5, 0xe31c, 0x0, 0x1);
        gbc.writeMem(0x107f, { 0x6c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0x1080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 027D
        gbc.setState(0xa499, 0xe66, 0x70, 0x5900, 0x92b2, 0xe52b, 0x1, 0x0);
        gbc.writeMem(0xa499, { 0x6c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe66, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa499));
        // 6C 027E
        gbc.setState(0xa223, 0x116b, 0xd430, 0x85eb, 0x4244, 0x8667, 0x1, 0x1);
        gbc.writeMem(0xa223, { 0x6c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x116b, gbc.sp());
        EXPECT(0xa224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa223));
        // 6C 027F
        gbc.setState(0x6573, 0x77c8, 0x1010, 0xf177, 0xdf64, 0xbcf6, 0x0, 0x1);
        gbc.writeMem(0x6573, { 0x6c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x77c8, gbc.sp());
        EXPECT(0x6574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0280
        gbc.setState(0x8754, 0x58b6, 0x3980, 0xa017, 0x15a2, 0x95d7, 0x1, 0x0);
        gbc.writeMem(0x8754, { 0x6c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x58b6, gbc.sp());
        EXPECT(0x8755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8754));
        // 6C 0281
        gbc.setState(0x42bc, 0x8ff0, 0x9510, 0xe0b9, 0x3e40, 0x9e3d, 0x1, 0x0);
        gbc.writeMem(0x42bc, { 0x6c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8ff0, gbc.sp());
        EXPECT(0x42bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0282
        gbc.setState(0x62ca, 0x41d5, 0x78c0, 0xd7e3, 0x2d57, 0x3bf0, 0x1, 0x0);
        gbc.writeMem(0x62ca, { 0x6c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x41d5, gbc.sp());
        EXPECT(0x62cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0283
        gbc.setState(0x5165, 0x51bd, 0xba0, 0xa5ca, 0xa9e8, 0x7a72, 0x0, 0x1);
        gbc.writeMem(0x5165, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x51bd, gbc.sp());
        EXPECT(0x5166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0284
        gbc.setState(0x3383, 0xb9a8, 0x9600, 0xd23e, 0x7653, 0xf847, 0x0, 0x0);
        gbc.writeMem(0x3383, { 0x6c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb9a8, gbc.sp());
        EXPECT(0x3384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0285
        gbc.setState(0xadcc, 0x30c, 0x7380, 0x5290, 0x5d4f, 0xeec2, 0x0, 0x0);
        gbc.writeMem(0xadcc, { 0x6c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0xadcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xadcc));
        // 6C 0286
        gbc.setState(0xbe1c, 0xc73f, 0x73a0, 0x92f0, 0x81bf, 0xe345, 0x0, 0x0);
        gbc.writeMem(0xbe1c, { 0x6c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc73f, gbc.sp());
        EXPECT(0xbe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbe1c));
        // 6C 0287
        gbc.setState(0x5250, 0x6f53, 0xb5e0, 0xcdd1, 0x5a00, 0x8ca4, 0x1, 0x1);
        gbc.writeMem(0x5250, { 0x6c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6f53, gbc.sp());
        EXPECT(0x5251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0288
        gbc.setState(0x44f5, 0x9b69, 0xe990, 0xb900, 0x8866, 0xef1f, 0x0, 0x1);
        gbc.writeMem(0x44f5, { 0x6c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9b69, gbc.sp());
        EXPECT(0x44f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0289
        gbc.setState(0xd98d, 0xd47c, 0xa110, 0xe339, 0xee01, 0xd888, 0x0, 0x1);
        gbc.writeMem(0xd98d, { 0x6c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd47c, gbc.sp());
        EXPECT(0xd98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd98d));
        // 6C 028A
        gbc.setState(0x2385, 0x3c1c, 0x7110, 0xd1b6, 0xe5ad, 0xfbe4, 0x1, 0x1);
        gbc.writeMem(0x2385, { 0x6c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3c1c, gbc.sp());
        EXPECT(0x2386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 028B
        gbc.setState(0xd404, 0x52f8, 0xf0, 0xef78, 0x4c9e, 0xf792, 0x1, 0x0);
        gbc.writeMem(0xd404, { 0x6c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x52f8, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd404));
        // 6C 028C
        gbc.setState(0x253f, 0xe173, 0x2eb0, 0x8196, 0x3c3d, 0x224f, 0x1, 0x0);
        gbc.writeMem(0x253f, { 0x6c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe173, gbc.sp());
        EXPECT(0x2540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 028D
        gbc.setState(0x261c, 0x39c3, 0xd6d0, 0xf0c9, 0xac01, 0x6f2f, 0x1, 0x0);
        gbc.writeMem(0x261c, { 0x6c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x39c3, gbc.sp());
        EXPECT(0x261d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 028E
        gbc.setState(0x6e14, 0x2434, 0x1150, 0xd5f8, 0xfbe0, 0x1f2d, 0x1, 0x1);
        gbc.writeMem(0x6e14, { 0x6c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2434, gbc.sp());
        EXPECT(0x6e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 028F
        gbc.setState(0x286c, 0x293e, 0x66e0, 0x7d7c, 0x6dbf, 0xc44f, 0x0, 0x1);
        gbc.writeMem(0x286c, { 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x293e, gbc.sp());
        EXPECT(0x286d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0290
        gbc.setState(0x5930, 0xe3d, 0xa100, 0x8b50, 0xb83e, 0x3ca7, 0x0, 0x1);
        gbc.writeMem(0x5930, { 0x6c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe3d, gbc.sp());
        EXPECT(0x5931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0291
        gbc.setState(0x5e49, 0xb5aa, 0xbad0, 0x64ef, 0x3813, 0xc989, 0x0, 0x0);
        gbc.writeMem(0x5e49, { 0x6c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb5aa, gbc.sp());
        EXPECT(0x5e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0292
        gbc.setState(0xc1dd, 0xc740, 0xe050, 0xcc20, 0x673b, 0xea61, 0x1, 0x1);
        gbc.writeMem(0xc1dd, { 0x6c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc740, gbc.sp());
        EXPECT(0xc1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc1dd));
        // 6C 0293
        gbc.setState(0x308e, 0x4219, 0x3cf0, 0x702e, 0x1341, 0x1f52, 0x1, 0x0);
        gbc.writeMem(0x308e, { 0x6c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4219, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0294
        gbc.setState(0x2dfc, 0x582e, 0x4e70, 0xd222, 0xb618, 0x5862, 0x0, 0x0);
        gbc.writeMem(0x2dfc, { 0x6c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x582e, gbc.sp());
        EXPECT(0x2dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0295
        gbc.setState(0x1ac, 0xc6c8, 0x2570, 0xc300, 0xdebf, 0x8726, 0x1, 0x1);
        gbc.writeMem(0x1ac, { 0x6c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc6c8, gbc.sp());
        EXPECT(0x1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0296
        gbc.setState(0x5750, 0xb253, 0x2cd0, 0xe5f2, 0x6d20, 0x4927, 0x0, 0x1);
        gbc.writeMem(0x5750, { 0x6c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb253, gbc.sp());
        EXPECT(0x5751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0297
        gbc.setState(0x5bb8, 0xb0af, 0x8560, 0x3140, 0x96bf, 0xaed2, 0x1, 0x1);
        gbc.writeMem(0x5bb8, { 0x6c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb0af, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0298
        gbc.setState(0x5e30, 0x29a4, 0xd6e0, 0xebc2, 0x8a35, 0x1f83, 0x0, 0x1);
        gbc.writeMem(0x5e30, { 0x6c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x29a4, gbc.sp());
        EXPECT(0x5e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0299
        gbc.setState(0x91ba, 0x7899, 0xd150, 0xf807, 0x8a4b, 0xaa8d, 0x1, 0x1);
        gbc.writeMem(0x91ba, { 0x6c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7899, gbc.sp());
        EXPECT(0x91bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x91ba));
        // 6C 029A
        gbc.setState(0x70ec, 0x1d25, 0xa1d0, 0x94ce, 0xa451, 0xfe4d, 0x1, 0x1);
        gbc.writeMem(0x70ec, { 0x6c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1d25, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 029C
        gbc.setState(0x542a, 0xe17e, 0x5890, 0x9af9, 0xfcc7, 0x1751, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0x6c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe17e, gbc.sp());
        EXPECT(0x542b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 029D
        gbc.setState(0xc2fc, 0xc749, 0xe550, 0xe5c1, 0x6de4, 0xab11, 0x0, 0x1);
        gbc.writeMem(0xc2fc, { 0x6c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc749, gbc.sp());
        EXPECT(0xc2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc2fc));
        // 6C 029E
        gbc.setState(0x17d6, 0x40b2, 0x7100, 0xb738, 0x9b00, 0xc7c8, 0x0, 0x0);
        gbc.writeMem(0x17d6, { 0x6c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x40b2, gbc.sp());
        EXPECT(0x17d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 029F
        gbc.setState(0x6c60, 0xc2cc, 0xe0a0, 0xb44a, 0x7bd0, 0x47b6, 0x1, 0x1);
        gbc.writeMem(0x6c60, { 0x6c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02A0
        gbc.setState(0x49f5, 0xe9fb, 0x4610, 0x550a, 0xd2e, 0xc6a5, 0x0, 0x1);
        gbc.writeMem(0x49f5, { 0x6c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe9fb, gbc.sp());
        EXPECT(0x49f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02A1
        gbc.setState(0x290d, 0xa87d, 0x7920, 0x290d, 0xc339, 0xb652, 0x1, 0x1);
        gbc.writeMem(0x290d, { 0x6c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x290e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02A2
        gbc.setState(0x8a81, 0xd06e, 0x9db0, 0xd084, 0xc708, 0x79a0, 0x0, 0x1);
        gbc.writeMem(0x8a81, { 0x6c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0x8a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8a81));
        // 6C 02A3
        gbc.setState(0x6321, 0x5ee4, 0x21c0, 0x3f5a, 0x7bf4, 0x25b6, 0x0, 0x1);
        gbc.writeMem(0x6321, { 0x6c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5ee4, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02A4
        gbc.setState(0xc1dd, 0x5665, 0x4540, 0x31c2, 0x61aa, 0xd063, 0x1, 0x0);
        gbc.writeMem(0xc1dd, { 0x6c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5665, gbc.sp());
        EXPECT(0xc1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc1dd));
        // 6C 02A5
        gbc.setState(0x9787, 0x947c, 0x42c0, 0x6804, 0x397a, 0xa669, 0x1, 0x1);
        gbc.writeMem(0x9787, { 0x6c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x947c, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9787));
        // 6C 02A6
        gbc.setState(0xc9e5, 0x7118, 0xb050, 0x67c8, 0x2247, 0x108c, 0x1, 0x1);
        gbc.writeMem(0xc9e5, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7118, gbc.sp());
        EXPECT(0xc9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc9e5));
        // 6C 02A7
        gbc.setState(0xc97b, 0xbebc, 0xc6b0, 0xd634, 0xb9b8, 0x9e85, 0x0, 0x0);
        gbc.writeMem(0xc97b, { 0x6c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbebc, gbc.sp());
        EXPECT(0xc97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc97b));
        // 6C 02A8
        gbc.setState(0x57b9, 0x8cf2, 0xf280, 0xcf06, 0xcdbd, 0x5d3f, 0x0, 0x1);
        gbc.writeMem(0x57b9, { 0x6c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8cf2, gbc.sp());
        EXPECT(0x57ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02A9
        gbc.setState(0x1a01, 0x4ad9, 0x5540, 0xcf7f, 0x92c0, 0xea1d, 0x0, 0x1);
        gbc.writeMem(0x1a01, { 0x6c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4ad9, gbc.sp());
        EXPECT(0x1a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02AA
        gbc.setState(0x931a, 0x9bdc, 0x8c00, 0x7d5, 0x9044, 0x124d, 0x1, 0x1);
        gbc.writeMem(0x931a, { 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9bdc, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x931a));
        // 6C 02AB
        gbc.setState(0x7de1, 0x23e3, 0xc810, 0xbe48, 0xeccd, 0x346a, 0x1, 0x0);
        gbc.writeMem(0x7de1, { 0x6c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0x7de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02AC
        gbc.setState(0xdf72, 0x4a07, 0xfcc0, 0xac93, 0x8ef6, 0x63a9, 0x1, 0x1);
        gbc.writeMem(0xdf72, { 0x6c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4a07, gbc.sp());
        EXPECT(0xdf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdf72));
        // 6C 02AD
        gbc.setState(0x468, 0xb2ed, 0xd530, 0xbd4e, 0x6c36, 0x88b, 0x0, 0x1);
        gbc.writeMem(0x468, { 0x6c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb2ed, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02AE
        gbc.setState(0x2188, 0xf656, 0x2fa0, 0xa649, 0xe82d, 0x70d2, 0x1, 0x1);
        gbc.writeMem(0x2188, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf656, gbc.sp());
        EXPECT(0x2189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02AF
        gbc.setState(0x7980, 0xff69, 0x8010, 0x6bd4, 0xcf32, 0x2bd2, 0x1, 0x0);
        gbc.writeMem(0x7980, { 0x6c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xff69, gbc.sp());
        EXPECT(0x7981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02B0
        gbc.setState(0xb2, 0x9d1e, 0x8640, 0xbff8, 0x2bf4, 0xf1c2, 0x0, 0x1);
        gbc.writeMem(0xb2, { 0x6c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9d1e, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02B1
        gbc.setState(0x20f, 0x277e, 0x5b70, 0x6650, 0x4293, 0x575c, 0x0, 0x1);
        gbc.writeMem(0x20f, { 0x6c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x277e, gbc.sp());
        EXPECT(0x210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02B2
        gbc.setState(0x3337, 0x16a9, 0xe200, 0x8eda, 0x39c9, 0xacfb, 0x1, 0x0);
        gbc.writeMem(0x3337, { 0x6c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x16a9, gbc.sp());
        EXPECT(0x3338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02B3
        gbc.setState(0xb8ce, 0xc857, 0x6170, 0x74a8, 0x1003, 0xcd99, 0x0, 0x0);
        gbc.writeMem(0xb8ce, { 0x6c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc857, gbc.sp());
        EXPECT(0xb8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb8ce));
        // 6C 02B4
        gbc.setState(0xa7fb, 0x77b9, 0xb240, 0x98f3, 0x3cc5, 0x9748, 0x0, 0x0);
        gbc.writeMem(0xa7fb, { 0x6c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x77b9, gbc.sp());
        EXPECT(0xa7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa7fb));
        // 6C 02B5
        gbc.setState(0x5932, 0x2989, 0xead0, 0x3c46, 0xe19a, 0xaa16, 0x0, 0x0);
        gbc.writeMem(0x5932, { 0x6c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2989, gbc.sp());
        EXPECT(0x5933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02B6
        gbc.setState(0xe247, 0x6dfc, 0x78f0, 0x5d00, 0xaa4b, 0x10b2, 0x1, 0x0);
        gbc.writeMem(0xe247, { 0x6c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6dfc, gbc.sp());
        EXPECT(0xe248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe247));
        // 6C 02B7
        gbc.setState(0x5d86, 0x8c4d, 0x7eb0, 0xad7d, 0xff4f, 0x8aea, 0x0, 0x1);
        gbc.writeMem(0x5d86, { 0x6c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x5d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02B8
        gbc.setState(0xb8a3, 0x9dd, 0x9830, 0xc369, 0xe956, 0x81e4, 0x0, 0x0);
        gbc.writeMem(0xb8a3, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9dd, gbc.sp());
        EXPECT(0xb8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb8a3));
        // 6C 02B9
        gbc.setState(0x699c, 0xeaa3, 0x2cd0, 0x2d56, 0xa704, 0x7fde, 0x1, 0x0);
        gbc.writeMem(0x699c, { 0x6c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xeaa3, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02BA
        gbc.setState(0x2f42, 0x94a2, 0x69c0, 0xee47, 0xb1e3, 0xe04e, 0x0, 0x1);
        gbc.writeMem(0x2f42, { 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x94a2, gbc.sp());
        EXPECT(0x2f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02BB
        gbc.setState(0x2e92, 0x6307, 0xc2b0, 0xb99, 0xd42c, 0x9e14, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0x2e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02BC
        gbc.setState(0x419a, 0xd7f7, 0xd540, 0xfe7c, 0xfb19, 0xd113, 0x1, 0x1);
        gbc.writeMem(0x419a, { 0x6c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd7f7, gbc.sp());
        EXPECT(0x419b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02BD
        gbc.setState(0x6d71, 0xa22c, 0x1a30, 0xfc07, 0x82ce, 0xcd3b, 0x1, 0x1);
        gbc.writeMem(0x6d71, { 0x6c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa22c, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02BE
        gbc.setState(0xe5ae, 0x671e, 0x6dc0, 0xb7ee, 0xf3ee, 0x6aa, 0x1, 0x1);
        gbc.writeMem(0xe5ae, { 0x6c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x671e, gbc.sp());
        EXPECT(0xe5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe5ae));
        // 6C 02BF
        gbc.setState(0xd69c, 0x768b, 0x8090, 0x9a69, 0xd51a, 0x57b8, 0x1, 0x0);
        gbc.writeMem(0xd69c, { 0x6c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x768b, gbc.sp());
        EXPECT(0xd69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd69c));
        // 6C 02C0
        gbc.setState(0xc085, 0x74d4, 0x6c20, 0x4eae, 0x5eeb, 0x818a, 0x0, 0x0);
        gbc.writeMem(0xc085, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x74d4, gbc.sp());
        EXPECT(0xc086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc085));
        // 6C 02C1
        gbc.setState(0xa655, 0xd757, 0xf7f0, 0x76f9, 0xaa64, 0x7688, 0x1, 0x1);
        gbc.writeMem(0xa655, { 0x6c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd757, gbc.sp());
        EXPECT(0xa656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa655));
        // 6C 02C2
        gbc.setState(0xe3d9, 0x1096, 0xc560, 0x72a5, 0x8135, 0x6bfa, 0x1, 0x1);
        gbc.writeMem(0xe3d9, { 0x6c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1096, gbc.sp());
        EXPECT(0xe3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe3d9));
        // 6C 02C3
        gbc.setState(0x54cc, 0x2e5e, 0xc610, 0xf181, 0xe3ea, 0x6277, 0x0, 0x1);
        gbc.writeMem(0x54cc, { 0x6c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2e5e, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02C4
        gbc.setState(0x9211, 0x6dac, 0x1620, 0xac8e, 0x9bd3, 0xda13, 0x0, 0x1);
        gbc.writeMem(0x9211, { 0x6c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6dac, gbc.sp());
        EXPECT(0x9212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9211));
        // 6C 02C5
        gbc.setState(0xcfb4, 0x749f, 0xbce0, 0xeb9f, 0xa76b, 0xeaf6, 0x0, 0x1);
        gbc.writeMem(0xcfb4, { 0x6c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x749f, gbc.sp());
        EXPECT(0xcfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcfb4));
        // 6C 02C6
        gbc.setState(0xa966, 0x7e63, 0x3090, 0x6662, 0xa934, 0x163c, 0x0, 0x1);
        gbc.writeMem(0xa966, { 0x6c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7e63, gbc.sp());
        EXPECT(0xa967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa966));
        // 6C 02C7
        gbc.setState(0x168f, 0xee3e, 0x39e0, 0xcab5, 0x8433, 0xd7ff, 0x1, 0x0);
        gbc.writeMem(0x168f, { 0x6c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xee3e, gbc.sp());
        EXPECT(0x1690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02C8
        gbc.setState(0xd272, 0x43d8, 0x760, 0xa9cc, 0xde67, 0xa93f, 0x1, 0x0);
        gbc.writeMem(0xd272, { 0x6c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x43d8, gbc.sp());
        EXPECT(0xd273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd272));
        // 6C 02C9
        gbc.setState(0x3092, 0xb451, 0xe1f0, 0xe261, 0x5364, 0xde6d, 0x1, 0x1);
        gbc.writeMem(0x3092, { 0x6c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb451, gbc.sp());
        EXPECT(0x3093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02CA
        gbc.setState(0x240a, 0x48c0, 0x80d0, 0xe8f5, 0x9623, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0x240a, { 0x6c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x48c0, gbc.sp());
        EXPECT(0x240b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02CB
        gbc.setState(0x7659, 0xd1c5, 0xdf40, 0x2ce4, 0x75b7, 0x3a6f, 0x1, 0x0);
        gbc.writeMem(0x7659, { 0x6c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd1c5, gbc.sp());
        EXPECT(0x765a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02CC
        gbc.setState(0x9bc0, 0x3ec8, 0x2e50, 0xf9aa, 0xa327, 0x8cf7, 0x0, 0x1);
        gbc.writeMem(0x9bc0, { 0x6c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3ec8, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9bc0));
        // 6C 02CD
        gbc.setState(0x5641, 0xc98d, 0xc5b0, 0xab6d, 0x380e, 0xab9c, 0x1, 0x0);
        gbc.writeMem(0x5641, { 0x6c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc98d, gbc.sp());
        EXPECT(0x5642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02CE
        gbc.setState(0x4d9e, 0x3312, 0x4520, 0xbefc, 0x51ac, 0xf6af, 0x1, 0x0);
        gbc.writeMem(0x4d9e, { 0x6c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3312, gbc.sp());
        EXPECT(0x4d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02CF
        gbc.setState(0x40ab, 0x7997, 0xa70, 0xaaaf, 0x2ff7, 0xa6aa, 0x1, 0x0);
        gbc.writeMem(0x40ab, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7997, gbc.sp());
        EXPECT(0x40ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02D0
        gbc.setState(0xdb36, 0xced0, 0x4630, 0xd73f, 0x7a6d, 0xfe5e, 0x1, 0x1);
        gbc.writeMem(0xdb36, { 0x6c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0xdb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdb36));
        // 6C 02D1
        gbc.setState(0x7fd9, 0x52a4, 0x5fb0, 0x76a7, 0xe163, 0x53ee, 0x0, 0x1);
        gbc.writeMem(0x7fd9, { 0x6c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x52a4, gbc.sp());
        EXPECT(0x7fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02D2
        gbc.setState(0xa8ff, 0x65fc, 0xce50, 0xb0e0, 0x39d1, 0x623e, 0x0, 0x0);
        gbc.writeMem(0xa8ff, { 0x6c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x65fc, gbc.sp());
        EXPECT(0xa900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa8ff));
        // 6C 02D3
        gbc.setState(0xad88, 0xb89e, 0xb030, 0x5433, 0xe779, 0x13e8, 0x0, 0x1);
        gbc.writeMem(0xad88, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb89e, gbc.sp());
        EXPECT(0xad89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xad88));
        // 6C 02D4
        gbc.setState(0x2ac1, 0xd390, 0x6b90, 0x99b5, 0x4a8e, 0x957, 0x1, 0x1);
        gbc.writeMem(0x2ac1, { 0x6c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd390, gbc.sp());
        EXPECT(0x2ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02D5
        gbc.setState(0x3767, 0xd57f, 0x2ac0, 0x496a, 0x5e3f, 0x47d2, 0x1, 0x1);
        gbc.writeMem(0x3767, { 0x6c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd57f, gbc.sp());
        EXPECT(0x3768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02D6
        gbc.setState(0x524b, 0x42a0, 0xb8e0, 0x7b9b, 0x608c, 0xa85, 0x0, 0x0);
        gbc.writeMem(0x524b, { 0x6c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x42a0, gbc.sp());
        EXPECT(0x524c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02D7
        gbc.setState(0x9706, 0x366a, 0xcb40, 0x2cc2, 0x409d, 0x5307, 0x1, 0x0);
        gbc.writeMem(0x9706, { 0x6c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x366a, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9706));
        // 6C 02D9
        gbc.setState(0xe8a4, 0x75d5, 0x3c00, 0x89b8, 0x9199, 0xcfe3, 0x0, 0x1);
        gbc.writeMem(0xe8a4, { 0x6c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x75d5, gbc.sp());
        EXPECT(0xe8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe8a4));
        // 6C 02DA
        gbc.setState(0x8b3f, 0x71de, 0x92d0, 0xf4af, 0x83dc, 0xc00c, 0x1, 0x0);
        gbc.writeMem(0x8b3f, { 0x6c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0x8b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8b3f));
        // 6C 02DB
        gbc.setState(0xaec9, 0x8018, 0xdcf0, 0x2015, 0x70b9, 0xe215, 0x0, 0x1);
        gbc.writeMem(0xaec9, { 0x6c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8018, gbc.sp());
        EXPECT(0xaeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaec9));
        // 6C 02DC
        gbc.setState(0x6ea4, 0x8018, 0x56e0, 0xafa7, 0xe405, 0x956b, 0x0, 0x1);
        gbc.writeMem(0x6ea4, { 0x6c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8018, gbc.sp());
        EXPECT(0x6ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02DD
        gbc.setState(0xa6eb, 0x75f4, 0x9880, 0xe21b, 0x68cb, 0x6ff9, 0x0, 0x1);
        gbc.writeMem(0xa6eb, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x75f4, gbc.sp());
        EXPECT(0xa6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa6eb));
        // 6C 02DE
        gbc.setState(0x6484, 0x3f55, 0x8590, 0xf27a, 0xe939, 0xc3f1, 0x1, 0x1);
        gbc.writeMem(0x6484, { 0x6c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3f55, gbc.sp());
        EXPECT(0x6485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02DF
        gbc.setState(0x5d8a, 0x1d42, 0x1cf0, 0x1516, 0xe3cd, 0x786e, 0x1, 0x0);
        gbc.writeMem(0x5d8a, { 0x6c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1d42, gbc.sp());
        EXPECT(0x5d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02E0
        gbc.setState(0xec85, 0xcd3a, 0x2b90, 0xfd96, 0x658d, 0xdba, 0x0, 0x1);
        gbc.writeMem(0xec85, { 0x6c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcd3a, gbc.sp());
        EXPECT(0xec86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xec85));
        // 6C 02E1
        gbc.setState(0xd29, 0x6fba, 0x3520, 0x3e97, 0x2afa, 0xe35b, 0x1, 0x0);
        gbc.writeMem(0xd29, { 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6fba, gbc.sp());
        EXPECT(0xd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02E3
        gbc.setState(0x66c9, 0xa41c, 0xbcb0, 0x278, 0xe5f0, 0xddf3, 0x0, 0x0);
        gbc.writeMem(0x66c9, { 0x6c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0x66ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02E4
        gbc.setState(0xda5a, 0xba1a, 0xd7b0, 0x9c56, 0xe6e4, 0xa27d, 0x1, 0x0);
        gbc.writeMem(0xda5a, { 0x6c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xba1a, gbc.sp());
        EXPECT(0xda5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xda5a));
        // 6C 02E5
        gbc.setState(0xca08, 0x7b48, 0xe170, 0xf7dd, 0xae22, 0x5103, 0x1, 0x1);
        gbc.writeMem(0xca08, { 0x6c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7b48, gbc.sp());
        EXPECT(0xca09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xca08));
        // 6C 02E6
        gbc.setState(0xe25f, 0xf87e, 0xe130, 0x4cd6, 0xe437, 0xc054, 0x0, 0x1);
        gbc.writeMem(0xe25f, { 0x6c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0xe260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe25f));
        // 6C 02E7
        gbc.setState(0x2f03, 0x2210, 0x5450, 0x5471, 0x3f9e, 0x5bf2, 0x1, 0x0);
        gbc.writeMem(0x2f03, { 0x6c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0x2f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02E8
        gbc.setState(0x1e0c, 0x2154, 0xfe40, 0x1c7a, 0x23ea, 0x3d2a, 0x0, 0x1);
        gbc.writeMem(0x1e0c, { 0x6c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2154, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02E9
        gbc.setState(0xe147, 0x15ea, 0x6510, 0x3872, 0x4336, 0xe8ae, 0x0, 0x0);
        gbc.writeMem(0xe147, { 0x6c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x15ea, gbc.sp());
        EXPECT(0xe148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe147));
        // 6C 02EA
        gbc.setState(0x8d45, 0x8bde, 0x6700, 0x5ccb, 0xc07c, 0xdcb9, 0x1, 0x1);
        gbc.writeMem(0x8d45, { 0x6c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8bde, gbc.sp());
        EXPECT(0x8d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8d45));
        // 6C 02EB
        gbc.setState(0xd295, 0x3104, 0x4b60, 0x318f, 0x8d0c, 0xf3f9, 0x1, 0x1);
        gbc.writeMem(0xd295, { 0x6c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3104, gbc.sp());
        EXPECT(0xd296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd295));
        // 6C 02EC
        gbc.setState(0xbb2d, 0x257c, 0xc150, 0x60bc, 0xbc83, 0xabf6, 0x0, 0x1);
        gbc.writeMem(0xbb2d, { 0x6c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x257c, gbc.sp());
        EXPECT(0xbb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbb2d));
        // 6C 02ED
        gbc.setState(0x5eb8, 0xe9f2, 0xda80, 0xe5cf, 0x473e, 0xa9c5, 0x0, 0x1);
        gbc.writeMem(0x5eb8, { 0x6c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe9f2, gbc.sp());
        EXPECT(0x5eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02EE
        gbc.setState(0x8275, 0xdb4a, 0x7cc0, 0xa575, 0x77bb, 0x2e4f, 0x1, 0x1);
        gbc.writeMem(0x8275, { 0x6c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0x8276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8275));
        // 6C 02EF
        gbc.setState(0x4185, 0xd99e, 0xe750, 0x51b, 0x46e6, 0x28d7, 0x1, 0x0);
        gbc.writeMem(0x4185, { 0x6c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd99e, gbc.sp());
        EXPECT(0x4186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02F0
        gbc.setState(0xa07d, 0x61f1, 0xf450, 0x7318, 0xcfc8, 0x40ad, 0x0, 0x1);
        gbc.writeMem(0xa07d, { 0x6c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x61f1, gbc.sp());
        EXPECT(0xa07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa07d));
        // 6C 02F1
        gbc.setState(0x2d8d, 0xd62, 0x6a20, 0x21fa, 0x20cf, 0x3339, 0x0, 0x1);
        gbc.writeMem(0x2d8d, { 0x6c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd62, gbc.sp());
        EXPECT(0x2d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 02F2
        gbc.setState(0xa0e6, 0xbeb1, 0xb2a0, 0x5b92, 0xb09b, 0xd4d7, 0x1, 0x0);
        gbc.writeMem(0xa0e6, { 0x6c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbeb1, gbc.sp());
        EXPECT(0xa0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa0e6));
        // 6C 02F3
        gbc.setState(0x784e, 0x9c35, 0x2070, 0xc9e9, 0x7630, 0xf3ae, 0x1, 0x1);
        gbc.writeMem(0x784e, { 0x6c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9c35, gbc.sp());
        EXPECT(0x784f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02F4
        gbc.setState(0x5f69, 0x8d50, 0xec30, 0x6b9d, 0x2bc7, 0x1b67, 0x0, 0x1);
        gbc.writeMem(0x5f69, { 0x6c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8d50, gbc.sp());
        EXPECT(0x5f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02F5
        gbc.setState(0x3b69, 0x5d4e, 0x19d0, 0xed5a, 0xec35, 0x861b, 0x0, 0x1);
        gbc.writeMem(0x3b69, { 0x6c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5d4e, gbc.sp());
        EXPECT(0x3b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02F6
        gbc.setState(0x9f54, 0x1795, 0xac20, 0x94c7, 0x38b, 0xbdfe, 0x1, 0x1);
        gbc.writeMem(0x9f54, { 0x6c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1795, gbc.sp());
        EXPECT(0x9f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9f54));
        // 6C 02F7
        gbc.setState(0xe612, 0xbdb3, 0x1920, 0xb9a, 0xde89, 0xfce2, 0x0, 0x0);
        gbc.writeMem(0xe612, { 0x6c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbdb3, gbc.sp());
        EXPECT(0xe613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe612));
        // 6C 02F9
        gbc.setState(0xb937, 0xe024, 0x6e50, 0xb811, 0xfb3d, 0x4c03, 0x1, 0x1);
        gbc.writeMem(0xb937, { 0x6c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb937));
        // 6C 02FA
        gbc.setState(0xa23b, 0x7d72, 0x4340, 0x4fe7, 0x5df2, 0x9e2d, 0x0, 0x1);
        gbc.writeMem(0xa23b, { 0x6c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7d72, gbc.sp());
        EXPECT(0xa23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa23b));
        // 6C 02FB
        gbc.setState(0x439a, 0x78cc, 0xcab0, 0x7fff, 0x7af2, 0x9c55, 0x1, 0x0);
        gbc.writeMem(0x439a, { 0x6c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x78cc, gbc.sp());
        EXPECT(0x439b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02FC
        gbc.setState(0xc56f, 0xb6ce, 0xb380, 0xd399, 0xa320, 0x1288, 0x0, 0x1);
        gbc.writeMem(0xc56f, { 0x6c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb6ce, gbc.sp());
        EXPECT(0xc570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc56f));
        // 6C 02FD
        gbc.setState(0x6471, 0x2542, 0xbc50, 0x3102, 0xafcb, 0x2269, 0x0, 0x1);
        gbc.writeMem(0x6471, { 0x6c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2542, gbc.sp());
        EXPECT(0x6472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02FE
        gbc.setState(0x64ef, 0xc6b2, 0x6670, 0x1a36, 0x470f, 0x924d, 0x1, 0x1);
        gbc.writeMem(0x64ef, { 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc6b2, gbc.sp());
        EXPECT(0x64f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 02FF
        gbc.setState(0x9cde, 0x5b9b, 0xefa0, 0x5447, 0xbae0, 0x6810, 0x0, 0x1);
        gbc.writeMem(0x9cde, { 0x6c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5b9b, gbc.sp());
        EXPECT(0x9cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9cde));
        // 6C 0300
        gbc.setState(0x3514, 0xa358, 0xc230, 0x16bd, 0x3c06, 0xbcd2, 0x0, 0x1);
        gbc.writeMem(0x3514, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa358, gbc.sp());
        EXPECT(0x3515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0301
        gbc.setState(0xb1da, 0xfa4c, 0xabe0, 0x8d83, 0x2965, 0x620e, 0x1, 0x1);
        gbc.writeMem(0xb1da, { 0x6c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfa4c, gbc.sp());
        EXPECT(0xb1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb1da));
        // 6C 0302
        gbc.setState(0x6183, 0xe4fc, 0x72a0, 0xcf75, 0x54ad, 0x5edb, 0x0, 0x1);
        gbc.writeMem(0x6183, { 0x6c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe4fc, gbc.sp());
        EXPECT(0x6184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0303
        gbc.setState(0x7676, 0xb7d1, 0x6fa0, 0xf0a0, 0x2e2d, 0x965, 0x0, 0x1);
        gbc.writeMem(0x7676, { 0x6c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb7d1, gbc.sp());
        EXPECT(0x7677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0304
        gbc.setState(0x8a6c, 0x7fba, 0x8850, 0xb405, 0xb3a5, 0x441b, 0x0, 0x0);
        gbc.writeMem(0x8a6c, { 0x6c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7fba, gbc.sp());
        EXPECT(0x8a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8a6c));
        // 6C 0305
        gbc.setState(0xea40, 0x1308, 0xff70, 0x4a5d, 0x2f1d, 0x41c2, 0x1, 0x0);
        gbc.writeMem(0xea40, { 0x6c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1308, gbc.sp());
        EXPECT(0xea41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xea40));
        // 6C 0306
        gbc.setState(0x9bce, 0x789e, 0x950, 0xd8c, 0x4f06, 0x4087, 0x0, 0x1);
        gbc.writeMem(0x9bce, { 0x6c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x789e, gbc.sp());
        EXPECT(0x9bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9bce));
        // 6C 0307
        gbc.setState(0x6f60, 0xb06, 0xe5b0, 0x4c56, 0xdd98, 0x82bd, 0x0, 0x0);
        gbc.writeMem(0x6f60, { 0x6c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb06, gbc.sp());
        EXPECT(0x6f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0308
        gbc.setState(0xda3a, 0x5627, 0x68c0, 0x3def, 0xb77b, 0x170e, 0x1, 0x1);
        gbc.writeMem(0xda3a, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xda3a));
        // 6C 030A
        gbc.setState(0x44d8, 0xbf97, 0xef0, 0x2d25, 0xcf74, 0xe574, 0x0, 0x0);
        gbc.writeMem(0x44d8, { 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbf97, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 030B
        gbc.setState(0xc23e, 0xfa0e, 0x6c10, 0xfc7c, 0xf605, 0x7488, 0x1, 0x0);
        gbc.writeMem(0xc23e, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfa0e, gbc.sp());
        EXPECT(0xc23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc23e));
        // 6C 030C
        gbc.setState(0x587f, 0xcdd0, 0xdab0, 0xd011, 0x131f, 0x8550, 0x1, 0x1);
        gbc.writeMem(0x587f, { 0x6c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0x5880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 030D
        gbc.setState(0x3c2f, 0xabd9, 0xac40, 0x10e7, 0x1d9e, 0xccae, 0x1, 0x1);
        gbc.writeMem(0x3c2f, { 0x6c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xabd9, gbc.sp());
        EXPECT(0x3c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 030E
        gbc.setState(0x95c0, 0xbcaa, 0x6870, 0x2c5a, 0xdf88, 0x67f6, 0x1, 0x1);
        gbc.writeMem(0x95c0, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbcaa, gbc.sp());
        EXPECT(0x95c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x95c0));
        // 6C 030F
        gbc.setState(0x33c0, 0xbfb2, 0x9270, 0x4eea, 0x6587, 0x1572, 0x1, 0x0);
        gbc.writeMem(0x33c0, { 0x6c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbfb2, gbc.sp());
        EXPECT(0x33c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0311
        gbc.setState(0xd4ad, 0x6ee0, 0x8f00, 0x5727, 0x9d22, 0x13cc, 0x1, 0x0);
        gbc.writeMem(0xd4ad, { 0x6c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6ee0, gbc.sp());
        EXPECT(0xd4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd4ad));
        // 6C 0312
        gbc.setState(0x326f, 0x58fb, 0x90, 0xbe7b, 0xd540, 0x8f4b, 0x0, 0x1);
        gbc.writeMem(0x326f, { 0x6c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x3270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0313
        gbc.setState(0x6c35, 0xecac, 0x46b0, 0x36b1, 0xf55c, 0xb39, 0x0, 0x0);
        gbc.writeMem(0x6c35, { 0x6c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xecac, gbc.sp());
        EXPECT(0x6c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0315
        gbc.setState(0x9796, 0x6885, 0x3c10, 0x5080, 0x993f, 0x53c6, 0x0, 0x1);
        gbc.writeMem(0x9796, { 0x6c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0x9797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9796));
        // 6C 0316
        gbc.setState(0x55de, 0xb0da, 0x9de0, 0x735d, 0xc997, 0xd209, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0x6c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb0da, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0317
        gbc.setState(0x3ab7, 0x1aab, 0x8210, 0xa146, 0xeb2c, 0x1351, 0x1, 0x0);
        gbc.writeMem(0x3ab7, { 0x6c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1aab, gbc.sp());
        EXPECT(0x3ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0318
        gbc.setState(0xc5cb, 0xe002, 0xac20, 0xe0b, 0xb7da, 0x2dee, 0x1, 0x1);
        gbc.writeMem(0xc5cb, { 0x6c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe002, gbc.sp());
        EXPECT(0xc5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc5cb));
        // 6C 0319
        gbc.setState(0xc889, 0xbea7, 0x82a0, 0xf317, 0x846f, 0xaa24, 0x1, 0x0);
        gbc.writeMem(0xc889, { 0x6c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbea7, gbc.sp());
        EXPECT(0xc88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc889));
        // 6C 031A
        gbc.setState(0x2499, 0x9522, 0xd540, 0x3162, 0x6d6c, 0xcce7, 0x0, 0x1);
        gbc.writeMem(0x2499, { 0x6c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9522, gbc.sp());
        EXPECT(0x249a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 031B
        gbc.setState(0x8246, 0xda8b, 0x6910, 0x5d38, 0x33ba, 0x633f, 0x0, 0x1);
        gbc.writeMem(0x8246, { 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xda8b, gbc.sp());
        EXPECT(0x8247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8246));
        // 6C 031C
        gbc.setState(0x3b49, 0x568d, 0xaf60, 0x496a, 0xb514, 0x73c, 0x0, 0x0);
        gbc.writeMem(0x3b49, { 0x6c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x568d, gbc.sp());
        EXPECT(0x3b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 031D
        gbc.setState(0xc888, 0x8a86, 0xdcd0, 0xd725, 0xdb08, 0x553a, 0x0, 0x0);
        gbc.writeMem(0xc888, { 0x6c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8a86, gbc.sp());
        EXPECT(0xc889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc888));
        // 6C 031E
        gbc.setState(0x38a0, 0xaf6f, 0x3410, 0x22e6, 0x7a26, 0x36d2, 0x0, 0x0);
        gbc.writeMem(0x38a0, { 0x6c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0x38a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 031F
        gbc.setState(0x9dff, 0xef42, 0xa290, 0x41cf, 0xa554, 0x6d1b, 0x1, 0x1);
        gbc.writeMem(0x9dff, { 0x6c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xef42, gbc.sp());
        EXPECT(0x9e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9dff));
        // 6C 0320
        gbc.setState(0xc7b0, 0x33ca, 0x9c10, 0xc52c, 0x84fe, 0xef9e, 0x0, 0x0);
        gbc.writeMem(0xc7b0, { 0x6c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x33ca, gbc.sp());
        EXPECT(0xc7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc7b0));
        // 6C 0321
        gbc.setState(0xd305, 0x85c0, 0xb0, 0x387d, 0x3fdc, 0xcfbf, 0x0, 0x0);
        gbc.writeMem(0xd305, { 0x6c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd305));
        // 6C 0322
        gbc.setState(0xcca7, 0x4898, 0xc280, 0x31fb, 0xaea1, 0xd29d, 0x1, 0x0);
        gbc.writeMem(0xcca7, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4898, gbc.sp());
        EXPECT(0xcca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcca7));
        // 6C 0323
        gbc.setState(0x9707, 0xcb24, 0xdca0, 0xc4f0, 0xe5ec, 0x45f1, 0x0, 0x0);
        gbc.writeMem(0x9707, { 0x6c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0x9708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9707));
        // 6C 0324
        gbc.setState(0xe352, 0x2ad, 0x56e0, 0xada, 0x9d2b, 0x1b3c, 0x0, 0x0);
        gbc.writeMem(0xe352, { 0x6c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2ad, gbc.sp());
        EXPECT(0xe353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe352));
        // 6C 0325
        gbc.setState(0x2a8e, 0xad50, 0xb010, 0x4b65, 0xfba4, 0xcffa, 0x1, 0x0);
        gbc.writeMem(0x2a8e, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0x2a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0326
        gbc.setState(0x6080, 0x7abc, 0x2ed0, 0x1ccd, 0x9574, 0x7b89, 0x1, 0x0);
        gbc.writeMem(0x6080, { 0x6c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7abc, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0327
        gbc.setState(0x8574, 0x1795, 0xe080, 0xa934, 0x95ff, 0x92e0, 0x0, 0x1);
        gbc.writeMem(0x8574, { 0x6c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1795, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8574));
        // 6C 0328
        gbc.setState(0x81e8, 0xc808, 0x1b80, 0xba6a, 0xc69b, 0x759d, 0x0, 0x0);
        gbc.writeMem(0x81e8, { 0x6c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc808, gbc.sp());
        EXPECT(0x81e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x81e8));
        // 6C 0329
        gbc.setState(0x47c, 0x44a, 0x1d0, 0x9b16, 0x9edd, 0x4193, 0x1, 0x1);
        gbc.writeMem(0x47c, { 0x6c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x44a, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 032A
        gbc.setState(0xd203, 0xaf93, 0x4400, 0x8078, 0x6212, 0x2da8, 0x0, 0x1);
        gbc.writeMem(0xd203, { 0x6c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaf93, gbc.sp());
        EXPECT(0xd204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd203));
        // 6C 032B
        gbc.setState(0xdd99, 0x3964, 0x34c0, 0x4b8c, 0x7361, 0x79c1, 0x1, 0x1);
        gbc.writeMem(0xdd99, { 0x6c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3964, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdd99));
        // 6C 032C
        gbc.setState(0x9a20, 0x5f5e, 0x1420, 0xed07, 0xdc99, 0xbda7, 0x1, 0x0);
        gbc.writeMem(0x9a20, { 0x6c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5f5e, gbc.sp());
        EXPECT(0x9a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9a20));
        // 6C 032D
        gbc.setState(0xd0ab, 0x3d42, 0xd600, 0x67fd, 0xd9b0, 0x9055, 0x1, 0x1);
        gbc.writeMem(0xd0ab, { 0x6c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3d42, gbc.sp());
        EXPECT(0xd0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd0ab));
        // 6C 032E
        gbc.setState(0x5cb, 0xdc6c, 0x54c0, 0x70ca, 0x7f0a, 0x7c02, 0x0, 0x0);
        gbc.writeMem(0x5cb, { 0x6c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdc6c, gbc.sp());
        EXPECT(0x5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 032F
        gbc.setState(0x2cea, 0x5002, 0x7170, 0x6059, 0x76a9, 0xdeab, 0x0, 0x0);
        gbc.writeMem(0x2cea, { 0x6c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5002, gbc.sp());
        EXPECT(0x2ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0330
        gbc.setState(0xe324, 0x40ff, 0xaec0, 0xdb12, 0x5c9, 0x29d1, 0x1, 0x0);
        gbc.writeMem(0xe324, { 0x6c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x40ff, gbc.sp());
        EXPECT(0xe325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe324));
        // 6C 0331
        gbc.setState(0x6f1d, 0x8405, 0x24a0, 0x9d17, 0x228a, 0x6d3d, 0x1, 0x0);
        gbc.writeMem(0x6f1d, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8405, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0332
        gbc.setState(0xc8c5, 0x6ab2, 0xab0, 0x48c7, 0x77cf, 0xa2ec, 0x0, 0x1);
        gbc.writeMem(0xc8c5, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6ab2, gbc.sp());
        EXPECT(0xc8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc8c5));
        // 6C 0333
        gbc.setState(0xb8bc, 0x9134, 0x55b0, 0xb8fd, 0x283d, 0x994b, 0x0, 0x0);
        gbc.writeMem(0xb8bc, { 0x6c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9134, gbc.sp());
        EXPECT(0xb8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb8bc));
        // 6C 0334
        gbc.setState(0x9cb, 0xc170, 0xda10, 0xdd6e, 0x820e, 0xb7fa, 0x1, 0x1);
        gbc.writeMem(0x9cb, { 0x6c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc170, gbc.sp());
        EXPECT(0x9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0335
        gbc.setState(0xb93, 0xf7a, 0x4aa0, 0x9ea3, 0xfa11, 0xbd15, 0x1, 0x1);
        gbc.writeMem(0xb93, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf7a, gbc.sp());
        EXPECT(0xb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0336
        gbc.setState(0x7d01, 0xd061, 0xd2f0, 0x4713, 0x8fa1, 0xb352, 0x1, 0x1);
        gbc.writeMem(0x7d01, { 0x6c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd061, gbc.sp());
        EXPECT(0x7d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0337
        gbc.setState(0x1337, 0x40d3, 0xb350, 0xe637, 0x1231, 0xc0af, 0x1, 0x1);
        gbc.writeMem(0x1337, { 0x6c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x40d3, gbc.sp());
        EXPECT(0x1338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0338
        gbc.setState(0x6c9a, 0xd188, 0x1dc0, 0xc132, 0x4628, 0xa82d, 0x1, 0x0);
        gbc.writeMem(0x6c9a, { 0x6c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd188, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0339
        gbc.setState(0x57e8, 0x4d97, 0x2450, 0x1ab9, 0xc7df, 0x7973, 0x0, 0x0);
        gbc.writeMem(0x57e8, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4d97, gbc.sp());
        EXPECT(0x57e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 033A
        gbc.setState(0x6ade, 0xa8c4, 0x1370, 0x55df, 0x8d15, 0x7524, 0x1, 0x0);
        gbc.writeMem(0x6ade, { 0x6c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa8c4, gbc.sp());
        EXPECT(0x6adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 033B
        gbc.setState(0x6aa6, 0xedc, 0xf770, 0xfe8c, 0xde7, 0x6c19, 0x1, 0x0);
        gbc.writeMem(0x6aa6, { 0x6c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xedc, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 033C
        gbc.setState(0xbd3c, 0xbf01, 0x7430, 0xffcb, 0x899c, 0x54bc, 0x1, 0x1);
        gbc.writeMem(0xbd3c, { 0x6c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf01, gbc.sp());
        EXPECT(0xbd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbd3c));
        // 6C 033D
        gbc.setState(0x1593, 0x7efe, 0xd6b0, 0x7a19, 0xcc6, 0x4d42, 0x1, 0x0);
        gbc.writeMem(0x1593, { 0x6c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7efe, gbc.sp());
        EXPECT(0x1594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 033E
        gbc.setState(0x4c3f, 0x1a93, 0x47d0, 0x6776, 0x674d, 0x7e4c, 0x0, 0x1);
        gbc.writeMem(0x4c3f, { 0x6c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1a93, gbc.sp());
        EXPECT(0x4c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 033F
        gbc.setState(0x35aa, 0xef1f, 0xb060, 0x855a, 0xc3fb, 0x7e40, 0x0, 0x1);
        gbc.writeMem(0x35aa, { 0x6c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xef1f, gbc.sp());
        EXPECT(0x35ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0340
        gbc.setState(0x4551, 0x23ba, 0x2bd0, 0x2d6c, 0x8f87, 0x89ed, 0x1, 0x1);
        gbc.writeMem(0x4551, { 0x6c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x23ba, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0341
        gbc.setState(0xad4f, 0x246c, 0xeb80, 0x51ff, 0x9cb6, 0x55d5, 0x0, 0x0);
        gbc.writeMem(0xad4f, { 0x6c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x246c, gbc.sp());
        EXPECT(0xad50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xad4f));
        // 6C 0342
        gbc.setState(0x54f, 0x368f, 0xa880, 0x27d, 0x74bf, 0x299, 0x1, 0x0);
        gbc.writeMem(0x54f, { 0x6c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x368f, gbc.sp());
        EXPECT(0x550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0343
        gbc.setState(0xe012, 0xf10b, 0x1570, 0x54b4, 0xa8d6, 0x1e61, 0x0, 0x0);
        gbc.writeMem(0xe012, { 0x6c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf10b, gbc.sp());
        EXPECT(0xe013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe012));
        // 6C 0344
        gbc.setState(0xed54, 0x2edb, 0x8730, 0x6729, 0x710b, 0xdf9c, 0x1, 0x1);
        gbc.writeMem(0xed54, { 0x6c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2edb, gbc.sp());
        EXPECT(0xed55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xed54));
        // 6C 0345
        gbc.setState(0xeea1, 0xa296, 0xf340, 0xd2d8, 0x5d9c, 0xc6dc, 0x1, 0x1);
        gbc.writeMem(0xeea1, { 0x6c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa296, gbc.sp());
        EXPECT(0xeea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xeea1));
        // 6C 0346
        gbc.setState(0xd9c8, 0x9586, 0x4c00, 0x67c6, 0xe047, 0xdb6d, 0x0, 0x1);
        gbc.writeMem(0xd9c8, { 0x6c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd9c8));
        // 6C 0347
        gbc.setState(0x8aa6, 0x368a, 0x2580, 0x1984, 0x407b, 0xe77e, 0x0, 0x1);
        gbc.writeMem(0x8aa6, { 0x6c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x368a, gbc.sp());
        EXPECT(0x8aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8aa6));
        // 6C 0348
        gbc.setState(0x6ed, 0xccf7, 0x5490, 0xa7b5, 0x626e, 0xde12, 0x1, 0x1);
        gbc.writeMem(0x6ed, { 0x6c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xccf7, gbc.sp());
        EXPECT(0x6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0349
        gbc.setState(0xa87b, 0xe546, 0xc630, 0x69f6, 0xcfbd, 0x107b, 0x1, 0x0);
        gbc.writeMem(0xa87b, { 0x6c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0xa87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa87b));
        // 6C 034A
        gbc.setState(0xeecd, 0xc13c, 0x3340, 0x7601, 0x7470, 0xf3d3, 0x0, 0x0);
        gbc.writeMem(0xeecd, { 0x6c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc13c, gbc.sp());
        EXPECT(0xeece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xeecd));
        // 6C 034B
        gbc.setState(0xcd73, 0x4ce1, 0x64f0, 0x25b, 0x3182, 0xafe2, 0x0, 0x0);
        gbc.writeMem(0xcd73, { 0x6c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4ce1, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcd73));
        // 6C 034C
        gbc.setState(0x2a0e, 0x25f6, 0x9390, 0xc132, 0xd25b, 0x4073, 0x0, 0x1);
        gbc.writeMem(0x2a0e, { 0x6c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x25f6, gbc.sp());
        EXPECT(0x2a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 034D
        gbc.setState(0xbed6, 0x86f7, 0x8a50, 0xc2e3, 0xb40b, 0x4741, 0x1, 0x1);
        gbc.writeMem(0xbed6, { 0x6c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0xbed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbed6));
        // 6C 034E
        gbc.setState(0x2cc4, 0xab6e, 0x48a0, 0x3e6d, 0xe4af, 0x697e, 0x0, 0x1);
        gbc.writeMem(0x2cc4, { 0x6c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xab6e, gbc.sp());
        EXPECT(0x2cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0350
        gbc.setState(0xd59c, 0xbc3b, 0x2d30, 0x37ed, 0xfb4e, 0x8bc8, 0x1, 0x1);
        gbc.writeMem(0xd59c, { 0x6c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0xd59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd59c));
        // 6C 0351
        gbc.setState(0x6f82, 0xc639, 0x3b60, 0xc390, 0x1562, 0xaaeb, 0x1, 0x1);
        gbc.writeMem(0x6f82, { 0x6c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc639, gbc.sp());
        EXPECT(0x6f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0352
        gbc.setState(0x5b4c, 0x5f45, 0x3ac0, 0x883, 0x2b29, 0x4fe5, 0x0, 0x1);
        gbc.writeMem(0x5b4c, { 0x6c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5f45, gbc.sp());
        EXPECT(0x5b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0353
        gbc.setState(0x8ce7, 0xdf8c, 0xe820, 0xa21f, 0xd14, 0x3b83, 0x0, 0x1);
        gbc.writeMem(0x8ce7, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0x8ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8ce7));
        // 6C 0354
        gbc.setState(0xbfbf, 0x310c, 0x5120, 0x7e0, 0xcf72, 0xd69, 0x0, 0x0);
        gbc.writeMem(0xbfbf, { 0x6c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x310c, gbc.sp());
        EXPECT(0xbfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbfbf));
        // 6C 0355
        gbc.setState(0x5e30, 0x3c73, 0x7de0, 0x3ec7, 0x78f9, 0xce71, 0x1, 0x0);
        gbc.writeMem(0x5e30, { 0x6c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3c73, gbc.sp());
        EXPECT(0x5e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0356
        gbc.setState(0x8889, 0x6c2c, 0xef10, 0x5cfb, 0x420d, 0x4c77, 0x1, 0x1);
        gbc.writeMem(0x8889, { 0x6c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6c2c, gbc.sp());
        EXPECT(0x888a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8889));
        // 6C 0357
        gbc.setState(0xa234, 0x22c1, 0x7950, 0x9e7c, 0x551a, 0xf4f6, 0x1, 0x0);
        gbc.writeMem(0xa234, { 0x6c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x22c1, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa234));
        // 6C 0358
        gbc.setState(0x5d2a, 0xe5d1, 0x77b0, 0x5739, 0x9f80, 0x5bfd, 0x0, 0x1);
        gbc.writeMem(0x5d2a, { 0x6c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe5d1, gbc.sp());
        EXPECT(0x5d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0359
        gbc.setState(0x428a, 0xad8e, 0xb300, 0x67fe, 0xfd89, 0x7e60, 0x0, 0x0);
        gbc.writeMem(0x428a, { 0x6c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xad8e, gbc.sp());
        EXPECT(0x428b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 035A
        gbc.setState(0xe96, 0xd63c, 0xbcf0, 0x3ef1, 0x4506, 0xadc9, 0x0, 0x1);
        gbc.writeMem(0xe96, { 0x6c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd63c, gbc.sp());
        EXPECT(0xe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 035B
        gbc.setState(0x9324, 0x20e6, 0x92e0, 0x9e2b, 0xc55a, 0xa861, 0x0, 0x1);
        gbc.writeMem(0x9324, { 0x6c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x20e6, gbc.sp());
        EXPECT(0x9325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9324));
        // 6C 035C
        gbc.setState(0xd2f3, 0x514f, 0x4c40, 0x2411, 0xeeb2, 0xe5db, 0x1, 0x1);
        gbc.writeMem(0xd2f3, { 0x6c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x514f, gbc.sp());
        EXPECT(0xd2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd2f3));
        // 6C 035E
        gbc.setState(0x1ed2, 0xdfd, 0x92c0, 0x498a, 0x3470, 0xcdbe, 0x1, 0x1);
        gbc.writeMem(0x1ed2, { 0x6c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdfd, gbc.sp());
        EXPECT(0x1ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 035F
        gbc.setState(0xea1a, 0x9912, 0x98b0, 0x6e89, 0x3cfd, 0xae9a, 0x1, 0x0);
        gbc.writeMem(0xea1a, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9912, gbc.sp());
        EXPECT(0xea1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xea1a));
        // 6C 0360
        gbc.setState(0xe033, 0x69f, 0xbb90, 0x1a3a, 0xdc0c, 0x2c89, 0x1, 0x1);
        gbc.writeMem(0xe033, { 0x6c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0xe034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe033));
        // 6C 0361
        gbc.setState(0xe10d, 0x55eb, 0x6930, 0x3ae5, 0xef00, 0x5a0c, 0x0, 0x0);
        gbc.writeMem(0xe10d, { 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x55eb, gbc.sp());
        EXPECT(0xe10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe10d));
        // 6C 0362
        gbc.setState(0xde97, 0xa934, 0xee0, 0x27ee, 0x5b3f, 0xdfc3, 0x0, 0x0);
        gbc.writeMem(0xde97, { 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa934, gbc.sp());
        EXPECT(0xde98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xde97));
        // 6C 0363
        gbc.setState(0x4b41, 0x8870, 0x1b60, 0x66ca, 0x4d69, 0x9ed, 0x1, 0x1);
        gbc.writeMem(0x4b41, { 0x6c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8870, gbc.sp());
        EXPECT(0x4b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0364
        gbc.setState(0xdc3f, 0x9bae, 0x9c40, 0xe3eb, 0x4017, 0xae1d, 0x1, 0x1);
        gbc.writeMem(0xdc3f, { 0x6c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9bae, gbc.sp());
        EXPECT(0xdc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdc3f));
        // 6C 0365
        gbc.setState(0x85fd, 0x5648, 0x4060, 0x8144, 0xe1c9, 0xb0fe, 0x0, 0x0);
        gbc.writeMem(0x85fd, { 0x6c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5648, gbc.sp());
        EXPECT(0x85fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x85fd));
        // 6C 0366
        gbc.setState(0x8395, 0xfe2b, 0xe760, 0xf4dc, 0x261e, 0xe727, 0x1, 0x0);
        gbc.writeMem(0x8395, { 0x6c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfe2b, gbc.sp());
        EXPECT(0x8396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8395));
        // 6C 0367
        gbc.setState(0xc73c, 0xeada, 0x84d0, 0xc244, 0x1997, 0xc4b5, 0x0, 0x0);
        gbc.writeMem(0xc73c, { 0x6c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xeada, gbc.sp());
        EXPECT(0xc73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc73c));
        // 6C 0368
        gbc.setState(0x3161, 0xd6b2, 0xc120, 0x28d7, 0x7ed8, 0x2d02, 0x1, 0x1);
        gbc.writeMem(0x3161, { 0x6c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd6b2, gbc.sp());
        EXPECT(0x3162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0369
        gbc.setState(0x8353, 0xdeb4, 0x94d0, 0x7dd8, 0xdb9d, 0xd8fc, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0x6c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdeb4, gbc.sp());
        EXPECT(0x8354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8353));
        // 6C 036A
        gbc.setState(0xb333, 0xd438, 0xe890, 0x3cf4, 0x5d61, 0x9b02, 0x1, 0x0);
        gbc.writeMem(0xb333, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd438, gbc.sp());
        EXPECT(0xb334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb333));
        // 6C 036B
        gbc.setState(0x7baf, 0x4266, 0xf360, 0x4ee5, 0x1a0f, 0x391c, 0x0, 0x1);
        gbc.writeMem(0x7baf, { 0x6c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0x7bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 036C
        gbc.setState(0xa1c5, 0x5de9, 0x24d0, 0xab82, 0x92cb, 0x86f4, 0x0, 0x0);
        gbc.writeMem(0xa1c5, { 0x6c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5de9, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa1c5));
        // 6C 036D
        gbc.setState(0x6489, 0xe338, 0xb9c0, 0xc6fa, 0x8c52, 0x6b3d, 0x0, 0x1);
        gbc.writeMem(0x6489, { 0x6c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe338, gbc.sp());
        EXPECT(0x648a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 036E
        gbc.setState(0x97cf, 0x53db, 0xfbd0, 0xc9fe, 0x12a0, 0x6922, 0x0, 0x1);
        gbc.writeMem(0x97cf, { 0x6c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x53db, gbc.sp());
        EXPECT(0x97d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x97cf));
        // 6C 036F
        gbc.setState(0xb2d8, 0x7892, 0x3830, 0x708b, 0xd392, 0x1ec0, 0x0, 0x0);
        gbc.writeMem(0xb2d8, { 0x6c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7892, gbc.sp());
        EXPECT(0xb2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb2d8));
        // 6C 0370
        gbc.setState(0xe3c5, 0x5d14, 0x3780, 0xbada, 0xd805, 0xe78f, 0x0, 0x0);
        gbc.writeMem(0xe3c5, { 0x6c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5d14, gbc.sp());
        EXPECT(0xe3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe3c5));
        // 6C 0371
        gbc.setState(0x8c11, 0xa9b2, 0xaff0, 0x22a7, 0xf763, 0xb2aa, 0x1, 0x0);
        gbc.writeMem(0x8c11, { 0x6c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa9b2, gbc.sp());
        EXPECT(0x8c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8c11));
        // 6C 0372
        gbc.setState(0x62e7, 0xa4d5, 0xb2b0, 0xaa31, 0x5930, 0x9bf, 0x1, 0x0);
        gbc.writeMem(0x62e7, { 0x6c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa4d5, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0373
        gbc.setState(0x3b36, 0xa1eb, 0x810, 0x4ed1, 0x3056, 0xd6c8, 0x0, 0x0);
        gbc.writeMem(0x3b36, { 0x6c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa1eb, gbc.sp());
        EXPECT(0x3b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0374
        gbc.setState(0x5616, 0x6b5b, 0x66c0, 0xe38d, 0xc8dc, 0x7a9, 0x1, 0x1);
        gbc.writeMem(0x5616, { 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6b5b, gbc.sp());
        EXPECT(0x5617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0375
        gbc.setState(0x54bc, 0xd1bd, 0xf4e0, 0x749c, 0xe9c4, 0xaec4, 0x1, 0x1);
        gbc.writeMem(0x54bc, { 0x6c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd1bd, gbc.sp());
        EXPECT(0x54bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0376
        gbc.setState(0x81d2, 0x285, 0xc730, 0x484f, 0x6947, 0x10c7, 0x1, 0x0);
        gbc.writeMem(0x81d2, { 0x6c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0x81d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x81d2));
        // 6C 0377
        gbc.setState(0x10e, 0xb378, 0xf0b0, 0x40fc, 0xea5, 0x7a31, 0x0, 0x1);
        gbc.writeMem(0x10e, { 0x6c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb378, gbc.sp());
        EXPECT(0x10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0378
        gbc.setState(0x4d4e, 0x99aa, 0x7a10, 0xebb6, 0xf24e, 0x6d9d, 0x1, 0x1);
        gbc.writeMem(0x4d4e, { 0x6c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0379
        gbc.setState(0xfa3, 0xa9e4, 0x8a80, 0xfd40, 0xc26e, 0xe531, 0x1, 0x0);
        gbc.writeMem(0xfa3, { 0x6c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa9e4, gbc.sp());
        EXPECT(0xfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 037A
        gbc.setState(0x6a75, 0xfd92, 0xe250, 0xb479, 0x2e7f, 0x40bc, 0x0, 0x1);
        gbc.writeMem(0x6a75, { 0x6c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfd92, gbc.sp());
        EXPECT(0x6a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 037B
        gbc.setState(0x3161, 0xee16, 0xe020, 0x83d7, 0xed0c, 0x29c, 0x0, 0x1);
        gbc.writeMem(0x3161, { 0x6c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xee16, gbc.sp());
        EXPECT(0x3162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 037C
        gbc.setState(0x8ead, 0xab10, 0x9af0, 0xab42, 0x1d1a, 0x5b48, 0x0, 0x1);
        gbc.writeMem(0x8ead, { 0x6c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab10, gbc.sp());
        EXPECT(0x8eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8ead));
        // 6C 037E
        gbc.setState(0xcbee, 0x3346, 0x2930, 0xfc6a, 0x4ebb, 0xd7bb, 0x0, 0x1);
        gbc.writeMem(0xcbee, { 0x6c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3346, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcbee));
        // 6C 037F
        gbc.setState(0xb4e5, 0xf1bc, 0xe340, 0x16a, 0x72ce, 0xc29, 0x0, 0x0);
        gbc.writeMem(0xb4e5, { 0x6c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf1bc, gbc.sp());
        EXPECT(0xb4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb4e5));
        // 6C 0380
        gbc.setState(0x1ec8, 0xeeac, 0xe800, 0xcd7d, 0x8d6b, 0x46f6, 0x1, 0x0);
        gbc.writeMem(0x1ec8, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xeeac, gbc.sp());
        EXPECT(0x1ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0381
        gbc.setState(0x36e9, 0x7e8, 0x7900, 0xd9c9, 0x3f82, 0x78dc, 0x1, 0x0);
        gbc.writeMem(0x36e9, { 0x6c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0x36ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0382
        gbc.setState(0x2893, 0x401c, 0x3740, 0x96c0, 0xdcf6, 0x6db8, 0x0, 0x1);
        gbc.writeMem(0x2893, { 0x6c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x401c, gbc.sp());
        EXPECT(0x2894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0383
        gbc.setState(0x666e, 0x9313, 0x4640, 0x1d69, 0x65c5, 0x727b, 0x1, 0x0);
        gbc.writeMem(0x666e, { 0x6c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9313, gbc.sp());
        EXPECT(0x666f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0384
        gbc.setState(0x54a5, 0x37c7, 0xed30, 0xa936, 0xb902, 0xd07c, 0x0, 0x0);
        gbc.writeMem(0x54a5, { 0x6c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0x54a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0385
        gbc.setState(0x818b, 0x4e0a, 0xc420, 0x20c7, 0xb662, 0x3224, 0x1, 0x0);
        gbc.writeMem(0x818b, { 0x6c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4e0a, gbc.sp());
        EXPECT(0x818c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x818b));
        // 6C 0386
        gbc.setState(0xe84e, 0x82f2, 0x9750, 0x31a5, 0x80dc, 0xba6b, 0x1, 0x1);
        gbc.writeMem(0xe84e, { 0x6c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x82f2, gbc.sp());
        EXPECT(0xe84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe84e));
        // 6C 0387
        gbc.setState(0xe9, 0x1fb5, 0x7e40, 0xcd91, 0x11c1, 0x2370, 0x1, 0x1);
        gbc.writeMem(0xe9, { 0x6c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1fb5, gbc.sp());
        EXPECT(0xea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0388
        gbc.setState(0x382f, 0x310b, 0xe3b0, 0xb23d, 0xd631, 0x1e50, 0x1, 0x1);
        gbc.writeMem(0x382f, { 0x6c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0x3830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0389
        gbc.setState(0x7d54, 0xbee2, 0xe950, 0xb91f, 0xbcb7, 0x2da, 0x0, 0x1);
        gbc.writeMem(0x7d54, { 0x6c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbee2, gbc.sp());
        EXPECT(0x7d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 038A
        gbc.setState(0xe4de, 0x816, 0xf990, 0xe4ab, 0xc94c, 0x21c9, 0x0, 0x1);
        gbc.writeMem(0xe4de, { 0x6c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x816, gbc.sp());
        EXPECT(0xe4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe4de));
        // 6C 038B
        gbc.setState(0xca67, 0x7702, 0x68b0, 0xf3a9, 0xd4b1, 0xf149, 0x1, 0x0);
        gbc.writeMem(0xca67, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7702, gbc.sp());
        EXPECT(0xca68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xca67));
        // 6C 038C
        gbc.setState(0xac26, 0xf83, 0x8630, 0x798c, 0x80de, 0x6d3e, 0x1, 0x0);
        gbc.writeMem(0xac26, { 0x6c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf83, gbc.sp());
        EXPECT(0xac27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xac26));
        // 6C 038D
        gbc.setState(0x7056, 0xd690, 0xb400, 0x8bef, 0x3fa3, 0x4c9, 0x1, 0x0);
        gbc.writeMem(0x7056, { 0x6c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd690, gbc.sp());
        EXPECT(0x7057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 038E
        gbc.setState(0xc3df, 0x2f87, 0x7a40, 0xa988, 0xb125, 0x2a1e, 0x1, 0x1);
        gbc.writeMem(0xc3df, { 0x6c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2f87, gbc.sp());
        EXPECT(0xc3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc3df));
        // 6C 038F
        gbc.setState(0x2afe, 0xec53, 0xce00, 0xa116, 0xef9e, 0x9b54, 0x1, 0x0);
        gbc.writeMem(0x2afe, { 0x6c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xec53, gbc.sp());
        EXPECT(0x2aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0390
        gbc.setState(0xcedf, 0xe318, 0x5710, 0x6b18, 0x8b16, 0x47d0, 0x1, 0x1);
        gbc.writeMem(0xcedf, { 0x6c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe318, gbc.sp());
        EXPECT(0xcee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcedf));
        // 6C 0391
        gbc.setState(0x9f42, 0xdbc, 0x3480, 0x609a, 0xa66a, 0x475b, 0x1, 0x1);
        gbc.writeMem(0x9f42, { 0x6c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdbc, gbc.sp());
        EXPECT(0x9f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9f42));
        // 6C 0392
        gbc.setState(0x3f28, 0xf7a9, 0xdd80, 0x3982, 0xa7c7, 0x5fb2, 0x0, 0x1);
        gbc.writeMem(0x3f28, { 0x6c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf7a9, gbc.sp());
        EXPECT(0x3f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0393
        gbc.setState(0xb490, 0x2276, 0xde80, 0xee7f, 0x8b86, 0xc0a4, 0x0, 0x0);
        gbc.writeMem(0xb490, { 0x6c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2276, gbc.sp());
        EXPECT(0xb491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb490));
        // 6C 0394
        gbc.setState(0x6544, 0x49f3, 0x14c0, 0xd250, 0xf0b9, 0x5139, 0x0, 0x1);
        gbc.writeMem(0x6544, { 0x6c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x49f3, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0395
        gbc.setState(0xaccd, 0xdde1, 0x7a40, 0xee4e, 0xf223, 0x57a9, 0x1, 0x0);
        gbc.writeMem(0xaccd, { 0x6c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdde1, gbc.sp());
        EXPECT(0xacce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaccd));
        // 6C 0396
        gbc.setState(0x56da, 0xf93f, 0xd910, 0x147c, 0x4333, 0x328c, 0x1, 0x1);
        gbc.writeMem(0x56da, { 0x6c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf93f, gbc.sp());
        EXPECT(0x56db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 0397
        gbc.setState(0x9d7, 0x4d1a, 0xa60, 0xd108, 0x1baa, 0xe43e, 0x1, 0x0);
        gbc.writeMem(0x9d7, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4d1a, gbc.sp());
        EXPECT(0x9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 0398
        gbc.setState(0x851, 0x4132, 0xf230, 0xc72a, 0x7948, 0x6563, 0x1, 0x0);
        gbc.writeMem(0x851, { 0x6c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4132, gbc.sp());
        EXPECT(0x852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 039A
        gbc.setState(0x4571, 0x5f9b, 0xbfe0, 0x85ac, 0xd306, 0x3718, 0x1, 0x1);
        gbc.writeMem(0x4571, { 0x6c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5f9b, gbc.sp());
        EXPECT(0x4572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 039B
        gbc.setState(0x6279, 0x8692, 0xaa00, 0xfc8d, 0x440, 0xfc5b, 0x0, 0x0);
        gbc.writeMem(0x6279, { 0x6c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8692, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 039C
        gbc.setState(0x303f, 0x3a1c, 0x25b0, 0x467d, 0xd35a, 0xe1b5, 0x1, 0x0);
        gbc.writeMem(0x303f, { 0x6c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3a1c, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 039D
        gbc.setState(0x22eb, 0xeedd, 0x3170, 0xffcc, 0xf1bf, 0x81f9, 0x0, 0x1);
        gbc.writeMem(0x22eb, { 0x6c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeedd, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 039E
        gbc.setState(0x19d5, 0x3bbb, 0xdf60, 0x7c09, 0xb5a, 0x23f8, 0x1, 0x1);
        gbc.writeMem(0x19d5, { 0x6c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x19d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 039F
        gbc.setState(0x47d9, 0xeda3, 0x9430, 0xc5ac, 0x2ecd, 0x7888, 0x0, 0x0);
        gbc.writeMem(0x47d9, { 0x6c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0x47da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03A0
        gbc.setState(0x4b5a, 0x20ad, 0x9aa0, 0xe641, 0x3b76, 0xcd5, 0x1, 0x1);
        gbc.writeMem(0x4b5a, { 0x6c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x20ad, gbc.sp());
        EXPECT(0x4b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03A2
        gbc.setState(0xddaa, 0xc96a, 0xb20, 0xd5ad, 0xb206, 0xe541, 0x0, 0x0);
        gbc.writeMem(0xddaa, { 0x6c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc96a, gbc.sp());
        EXPECT(0xddab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xddaa));
        // 6C 03A4
        gbc.setState(0xb9dd, 0xbd31, 0x1060, 0xdcd8, 0xc096, 0xf927, 0x0, 0x1);
        gbc.writeMem(0xb9dd, { 0x6c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbd31, gbc.sp());
        EXPECT(0xb9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb9dd));
        // 6C 03A5
        gbc.setState(0x5841, 0x4d22, 0x8070, 0x3391, 0x966b, 0x8ca1, 0x0, 0x1);
        gbc.writeMem(0x5841, { 0x6c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4d22, gbc.sp());
        EXPECT(0x5842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03A6
        gbc.setState(0x5156, 0xf684, 0x350, 0xe541, 0x61bf, 0x455a, 0x1, 0x0);
        gbc.writeMem(0x5156, { 0x6c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03A7
        gbc.setState(0xd529, 0x283f, 0x5930, 0x6502, 0xffe7, 0x950e, 0x0, 0x1);
        gbc.writeMem(0xd529, { 0x6c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x283f, gbc.sp());
        EXPECT(0xd52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd529));
        // 6C 03A8
        gbc.setState(0x42a0, 0xfed4, 0x8e40, 0x11ca, 0x2fca, 0x8e10, 0x1, 0x0);
        gbc.writeMem(0x42a0, { 0x6c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfed4, gbc.sp());
        EXPECT(0x42a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03AA
        gbc.setState(0x1280, 0x309d, 0x7810, 0x7a8d, 0x3c66, 0x4019, 0x0, 0x0);
        gbc.writeMem(0x1280, { 0x6c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03AB
        gbc.setState(0xe0b6, 0x837f, 0x4a90, 0xd4b7, 0x3e6, 0x8ae1, 0x1, 0x0);
        gbc.writeMem(0xe0b6, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x837f, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe0b6));
        // 6C 03AC
        gbc.setState(0xa143, 0x6438, 0x16f0, 0x470e, 0x2eb0, 0xb33b, 0x1, 0x1);
        gbc.writeMem(0xa143, { 0x6c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6438, gbc.sp());
        EXPECT(0xa144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa143));
        // 6C 03AD
        gbc.setState(0x6348, 0xad1e, 0x80b0, 0x68fc, 0x8c2, 0xa597, 0x0, 0x0);
        gbc.writeMem(0x6348, { 0x6c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xad1e, gbc.sp());
        EXPECT(0x6349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03AE
        gbc.setState(0x2ef3, 0xfe2a, 0x4e60, 0x446e, 0x1a1f, 0x98c8, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0x6c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfe2a, gbc.sp());
        EXPECT(0x2ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03AF
        gbc.setState(0x8c1a, 0x5072, 0xb4f0, 0x67ac, 0x86f0, 0x8eb8, 0x1, 0x1);
        gbc.writeMem(0x8c1a, { 0x6c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5072, gbc.sp());
        EXPECT(0x8c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8c1a));
        // 6C 03B0
        gbc.setState(0xa883, 0xc1fd, 0x8280, 0x9bd8, 0x6569, 0x3f50, 0x1, 0x1);
        gbc.writeMem(0xa883, { 0x6c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc1fd, gbc.sp());
        EXPECT(0xa884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa883));
        // 6C 03B1
        gbc.setState(0x7bc0, 0xd70, 0x2ff0, 0x9be4, 0x7419, 0x8415, 0x1, 0x1);
        gbc.writeMem(0x7bc0, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd70, gbc.sp());
        EXPECT(0x7bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03B2
        gbc.setState(0x265d, 0xbf8a, 0xe8f0, 0x1154, 0x3b88, 0xb74, 0x1, 0x0);
        gbc.writeMem(0x265d, { 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x265e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03B3
        gbc.setState(0x7ee3, 0x8813, 0x3bc0, 0xe470, 0x49f1, 0x10eb, 0x1, 0x1);
        gbc.writeMem(0x7ee3, { 0x6c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8813, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03B4
        gbc.setState(0x1017, 0x344e, 0xa400, 0xf163, 0xdb7b, 0x78a, 0x1, 0x1);
        gbc.writeMem(0x1017, { 0x6c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x344e, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03B5
        gbc.setState(0x672a, 0x706f, 0x39b0, 0xd746, 0x4720, 0x6f8, 0x0, 0x0);
        gbc.writeMem(0x672a, { 0x6c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x706f, gbc.sp());
        EXPECT(0x672b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03B6
        gbc.setState(0x80b2, 0x15fb, 0x3e60, 0x3768, 0xce9, 0x21fb, 0x1, 0x0);
        gbc.writeMem(0x80b2, { 0x6c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x15fb, gbc.sp());
        EXPECT(0x80b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x80b2));
        // 6C 03B7
        gbc.setState(0xd2ec, 0x109f, 0x8ed0, 0xbc5, 0xcdb6, 0x12a2, 0x1, 0x0);
        gbc.writeMem(0xd2ec, { 0x6c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x109f, gbc.sp());
        EXPECT(0xd2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd2ec));
        // 6C 03B8
        gbc.setState(0xe1b9, 0x4687, 0xc390, 0x1277, 0xc10, 0xcb24, 0x0, 0x0);
        gbc.writeMem(0xe1b9, { 0x6c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4687, gbc.sp());
        EXPECT(0xe1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe1b9));
        // 6C 03B9
        gbc.setState(0x391a, 0x3d84, 0x100, 0xf290, 0x5053, 0x1dab, 0x0, 0x1);
        gbc.writeMem(0x391a, { 0x6c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3d84, gbc.sp());
        EXPECT(0x391b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03BA
        gbc.setState(0x8945, 0x1438, 0x77a0, 0x82d3, 0x3dd1, 0x5329, 0x1, 0x0);
        gbc.writeMem(0x8945, { 0x6c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8945));
        // 6C 03BB
        gbc.setState(0x41a1, 0x5f9f, 0xa390, 0x32ae, 0xe78f, 0xb8cb, 0x1, 0x1);
        gbc.writeMem(0x41a1, { 0x6c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5f9f, gbc.sp());
        EXPECT(0x41a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03BC
        gbc.setState(0x53b5, 0xf144, 0x3f40, 0x47aa, 0x701a, 0xe291, 0x1, 0x1);
        gbc.writeMem(0x53b5, { 0x6c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03BD
        gbc.setState(0xb119, 0x6a9f, 0x1120, 0xdc71, 0x8510, 0x1cd3, 0x1, 0x1);
        gbc.writeMem(0xb119, { 0x6c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6a9f, gbc.sp());
        EXPECT(0xb11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb119));
        // 6C 03BE
        gbc.setState(0xc443, 0xca30, 0x30b0, 0x9412, 0xbc19, 0xcdd2, 0x1, 0x1);
        gbc.writeMem(0xc443, { 0x6c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xca30, gbc.sp());
        EXPECT(0xc444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc443));
        // 6C 03BF
        gbc.setState(0xd6d5, 0x4372, 0x7b40, 0xf8c6, 0x2046, 0xb77d, 0x0, 0x0);
        gbc.writeMem(0xd6d5, { 0x6c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4372, gbc.sp());
        EXPECT(0xd6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd6d5));
        // 6C 03C0
        gbc.setState(0x8ed2, 0x9de3, 0x3530, 0xa52e, 0x31d2, 0xa21a, 0x0, 0x0);
        gbc.writeMem(0x8ed2, { 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9de3, gbc.sp());
        EXPECT(0x8ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8ed2));
        // 6C 03C1
        gbc.setState(0xed81, 0x5880, 0xb2f0, 0x9829, 0x9021, 0xdb5d, 0x1, 0x1);
        gbc.writeMem(0xed81, { 0x6c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5880, gbc.sp());
        EXPECT(0xed82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xed81));
        // 6C 03C2
        gbc.setState(0xde81, 0xb874, 0x9c30, 0x374a, 0x2db, 0x7c0, 0x1, 0x0);
        gbc.writeMem(0xde81, { 0x6c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb874, gbc.sp());
        EXPECT(0xde82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xde81));
        // 6C 03C3
        gbc.setState(0xe438, 0xfd8a, 0x30c0, 0x12c2, 0x1862, 0x5d77, 0x1, 0x0);
        gbc.writeMem(0xe438, { 0x6c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0xe439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe438));
        // 6C 03C4
        gbc.setState(0x9a04, 0x3e2b, 0x1800, 0xb709, 0x765, 0xaaeb, 0x0, 0x1);
        gbc.writeMem(0x9a04, { 0x6c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3e2b, gbc.sp());
        EXPECT(0x9a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9a04));
        // 6C 03C5
        gbc.setState(0xb79e, 0x599b, 0x7e50, 0x8ec6, 0x8c4, 0xf6b5, 0x1, 0x1);
        gbc.writeMem(0xb79e, { 0x6c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x599b, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb79e));
        // 6C 03C6
        gbc.setState(0x697f, 0x8d77, 0x8f50, 0x3ad1, 0x60c9, 0x26ea, 0x1, 0x1);
        gbc.writeMem(0x697f, { 0x6c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8d77, gbc.sp());
        EXPECT(0x6980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03C7
        gbc.setState(0x94c8, 0x7f9, 0x9830, 0xc474, 0x6367, 0xff84, 0x1, 0x0);
        gbc.writeMem(0x94c8, { 0x6c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7f9, gbc.sp());
        EXPECT(0x94c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x94c8));
        // 6C 03C8
        gbc.setState(0xbb7f, 0xc545, 0x3d60, 0x539b, 0xc8fa, 0x3577, 0x0, 0x1);
        gbc.writeMem(0xbb7f, { 0x6c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc545, gbc.sp());
        EXPECT(0xbb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbb7f));
        // 6C 03C9
        gbc.setState(0x70ec, 0xf55d, 0xc6b0, 0x75d4, 0x632b, 0xbdac, 0x0, 0x0);
        gbc.writeMem(0x70ec, { 0x6c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf55d, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03CA
        gbc.setState(0x4274, 0x182d, 0xc980, 0xde06, 0x8305, 0x855b, 0x0, 0x0);
        gbc.writeMem(0x4274, { 0x6c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x182d, gbc.sp());
        EXPECT(0x4275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03CB
        gbc.setState(0xd63d, 0xf966, 0x7440, 0xc5f2, 0x3638, 0xa8b6, 0x1, 0x0);
        gbc.writeMem(0xd63d, { 0x6c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0xd63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd63d));
        // 6C 03CC
        gbc.setState(0xb5b7, 0x1ecd, 0xba10, 0xc95b, 0xc6e1, 0x8c15, 0x1, 0x1);
        gbc.writeMem(0xb5b7, { 0x6c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1ecd, gbc.sp());
        EXPECT(0xb5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb5b7));
        // 6C 03CD
        gbc.setState(0xf18, 0x9338, 0xcaf0, 0xf174, 0x9701, 0xe6b0, 0x1, 0x1);
        gbc.writeMem(0xf18, { 0x6c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9338, gbc.sp());
        EXPECT(0xf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03CE
        gbc.setState(0x7374, 0x595c, 0xcd10, 0xf5d5, 0xf8a9, 0x4e68, 0x0, 0x1);
        gbc.writeMem(0x7374, { 0x6c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x595c, gbc.sp());
        EXPECT(0x7375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03CF
        gbc.setState(0x430d, 0xe40a, 0x57c0, 0x3d68, 0x66ec, 0xaa64, 0x1, 0x1);
        gbc.writeMem(0x430d, { 0x6c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe40a, gbc.sp());
        EXPECT(0x430e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03D0
        gbc.setState(0x3238, 0xe9ae, 0x31f0, 0xf329, 0x8619, 0xf76f, 0x0, 0x1);
        gbc.writeMem(0x3238, { 0x6c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe9ae, gbc.sp());
        EXPECT(0x3239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03D1
        gbc.setState(0x94a8, 0xa9ff, 0xf800, 0x546b, 0x5f1f, 0xd405, 0x0, 0x1);
        gbc.writeMem(0x94a8, { 0x6c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa9ff, gbc.sp());
        EXPECT(0x94a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x94a8));
        // 6C 03D2
        gbc.setState(0x3067, 0x7f09, 0xf6c0, 0x426d, 0x1bc4, 0x60f, 0x1, 0x0);
        gbc.writeMem(0x3067, { 0x6c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7f09, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03D3
        gbc.setState(0x2f1, 0x9d26, 0x7910, 0xb378, 0x2a7, 0x31b, 0x1, 0x1);
        gbc.writeMem(0x2f1, { 0x6c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9d26, gbc.sp());
        EXPECT(0x2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03D4
        gbc.setState(0x9181, 0xb1f8, 0x26c0, 0x5adf, 0x7bd1, 0xd9, 0x0, 0x0);
        gbc.writeMem(0x9181, { 0x6c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb1f8, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9181));
        // 6C 03D5
        gbc.setState(0xa91a, 0xc846, 0x30a0, 0x7cb0, 0x2bac, 0x160, 0x1, 0x1);
        gbc.writeMem(0xa91a, { 0x6c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc846, gbc.sp());
        EXPECT(0xa91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa91a));
        // 6C 03D6
        gbc.setState(0x68c5, 0xf290, 0xea70, 0x3c20, 0x47e4, 0xc388, 0x1, 0x0);
        gbc.writeMem(0x68c5, { 0x6c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf290, gbc.sp());
        EXPECT(0x68c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03D7
        gbc.setState(0x4019, 0x4ec9, 0x8040, 0x676b, 0x936a, 0x20c1, 0x0, 0x1);
        gbc.writeMem(0x4019, { 0x6c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4ec9, gbc.sp());
        EXPECT(0x401a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03D8
        gbc.setState(0x7a5e, 0x9b32, 0x5790, 0xeed3, 0xb57e, 0x5a29, 0x1, 0x0);
        gbc.writeMem(0x7a5e, { 0x6c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9b32, gbc.sp());
        EXPECT(0x7a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03D9
        gbc.setState(0xcb07, 0xed37, 0xf7f0, 0x6c53, 0xe0eb, 0xde8c, 0x0, 0x0);
        gbc.writeMem(0xcb07, { 0x6c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xed37, gbc.sp());
        EXPECT(0xcb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcb07));
        // 6C 03DA
        gbc.setState(0x6a29, 0xc158, 0xc180, 0x50f5, 0x6ce1, 0xc2f3, 0x0, 0x0);
        gbc.writeMem(0x6a29, { 0x6c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc158, gbc.sp());
        EXPECT(0x6a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03DB
        gbc.setState(0x945b, 0xbf02, 0x93f0, 0x78c9, 0xaa6d, 0xd517, 0x0, 0x1);
        gbc.writeMem(0x945b, { 0x6c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbf02, gbc.sp());
        EXPECT(0x945c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x945b));
        // 6C 03DC
        gbc.setState(0xc9bd, 0xef8, 0x3c10, 0x34b7, 0x9348, 0x3de5, 0x1, 0x1);
        gbc.writeMem(0xc9bd, { 0x6c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xef8, gbc.sp());
        EXPECT(0xc9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc9bd));
        // 6C 03DE
        gbc.setState(0xe52e, 0xef23, 0x2f70, 0x40f3, 0x30db, 0xed4f, 0x1, 0x0);
        gbc.writeMem(0xe52e, { 0x6c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0xe52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe52e));
        // 6C 03DF
        gbc.setState(0x8ae7, 0x197f, 0xa340, 0x10d1, 0x7c1c, 0xe34d, 0x1, 0x1);
        gbc.writeMem(0x8ae7, { 0x6c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x197f, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8ae7));
        // 6C 03E0
        gbc.setState(0x924b, 0x1ed0, 0x9f0, 0x2457, 0x40ad, 0x5231, 0x0, 0x0);
        gbc.writeMem(0x924b, { 0x6c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1ed0, gbc.sp());
        EXPECT(0x924c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x924b));
        // 6C 03E1
        gbc.setState(0xaade, 0x5e3e, 0x7780, 0x133f, 0x6a82, 0x2d3d, 0x0, 0x0);
        gbc.writeMem(0xaade, { 0x6c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5e3e, gbc.sp());
        EXPECT(0xaadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaade));
        // 6C 03E2
        gbc.setState(0xde88, 0xcdd0, 0x66a0, 0x6210, 0xfc60, 0x5a32, 0x1, 0x0);
        gbc.writeMem(0xde88, { 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0xde89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xde88));
        // 6C 03E3
        gbc.setState(0x61fa, 0x8652, 0xc280, 0xcd15, 0xcb22, 0x2e9b, 0x0, 0x0);
        gbc.writeMem(0x61fa, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8652, gbc.sp());
        EXPECT(0x61fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03E4
        gbc.setState(0x1bca, 0xd92, 0xf4b0, 0xb7fb, 0x611d, 0x824b, 0x0, 0x0);
        gbc.writeMem(0x1bca, { 0x6c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd92, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6C 03E5
        gbc.setState(0x45a9, 0x6879, 0x4520, 0x4893, 0x6b45, 0x4fb8, 0x1, 0x1);
        gbc.writeMem(0x45a9, { 0x6c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6879, gbc.sp());
        EXPECT(0x45aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03E6
        gbc.setState(0x191e, 0xb003, 0xdc20, 0xc370, 0xc040, 0xb94c, 0x0, 0x0);
        gbc.writeMem(0x191e, { 0x6c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb003, gbc.sp());
        EXPECT(0x191f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6C 03E7
        gbc.setState(0x8e57, 0xe2e8, 0xb400, 0x6ce0, 0xb815, 0x1ebf, 0x1, 0x1);
        gbc.writeMem(0x8e57, { 0x6c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe2e8, gbc.sp());
        EXPECT(0x8e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8e57));
    }
