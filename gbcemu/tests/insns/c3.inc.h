    TEST(gbcemu, opcode_c3) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C3 0000
        gbc.setState(0xb56, 0xa40a, 0xc1d0, 0xdf13, 0xe7f, 0xb13e, 0x1, 0x0);
        gbc.writeMem(0xb56, { 0xc3, 0xa5, 0xba });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa40a, gbc.sp());
        EXPECT(0xbaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0001
        gbc.setState(0xdf18, 0x155f, 0x78a0, 0x9ef7, 0xc20a, 0x6aa3, 0x0, 0x1);
        gbc.writeMem(0xdf18, { 0xc3, 0x11, 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x155f, gbc.sp());
        EXPECT(0xf511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdf18));
        EXPECT(0x11, gbc.readMem(0xdf19));
        EXPECT(0xf5, gbc.readMem(0xdf1a));
        // C3 0002
        gbc.setState(0x527f, 0x54, 0xc0e0, 0x241a, 0xa6e3, 0xfac4, 0x0, 0x1);
        gbc.writeMem(0x527f, { 0xc3, 0xac, 0xe5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x54, gbc.sp());
        EXPECT(0xe5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0003
        gbc.setState(0x724e, 0xc87b, 0xd330, 0xbbb0, 0x9e2e, 0x5b88, 0x1, 0x1);
        gbc.writeMem(0x724e, { 0xc3, 0x68, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0004
        gbc.setState(0x6db7, 0xa28e, 0x9790, 0x5dc6, 0xe658, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0x6db7, { 0xc3, 0x31, 0xa8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa28e, gbc.sp());
        EXPECT(0xa831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0005
        gbc.setState(0xdaaa, 0x9f28, 0xfaa0, 0x6b7c, 0x6ddb, 0xa79, 0x0, 0x0);
        gbc.writeMem(0xdaaa, { 0xc3, 0xc5, 0xc3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0xc3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdaaa));
        EXPECT(0xc5, gbc.readMem(0xdaab));
        EXPECT(0xc3, gbc.readMem(0xdaac));
        // C3 0006
        gbc.setState(0xa997, 0x7e8, 0x2de0, 0x7ce4, 0xfffe, 0x2ece, 0x1, 0x0);
        gbc.writeMem(0xa997, { 0xc3, 0x5e, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa997));
        EXPECT(0x5e, gbc.readMem(0xa998));
        EXPECT(0xb7, gbc.readMem(0xa999));
        // C3 0007
        gbc.setState(0x5ca7, 0x3c33, 0x2580, 0xee8d, 0x84a5, 0x83f5, 0x0, 0x0);
        gbc.writeMem(0x5ca7, { 0xc3, 0x3e, 0xee });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3c33, gbc.sp());
        EXPECT(0xee3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0008
        gbc.setState(0xbce8, 0x278, 0x2590, 0xc08c, 0x2c2c, 0x4f04, 0x1, 0x0);
        gbc.writeMem(0xbce8, { 0xc3, 0x2, 0xab });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x278, gbc.sp());
        EXPECT(0xab02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbce8));
        EXPECT(0x2, gbc.readMem(0xbce9));
        EXPECT(0xab, gbc.readMem(0xbcea));
        // C3 0009
        gbc.setState(0xe73d, 0x8901, 0x6460, 0x6b22, 0xb80f, 0x487a, 0x0, 0x0);
        gbc.writeMem(0xe73d, { 0xc3, 0x6e, 0x76 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8901, gbc.sp());
        EXPECT(0x766e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe73d));
        EXPECT(0x6e, gbc.readMem(0xe73e));
        EXPECT(0x76, gbc.readMem(0xe73f));
        // C3 000A
        gbc.setState(0x6139, 0xd2bd, 0x5d50, 0x8074, 0x104, 0x17d8, 0x0, 0x0);
        gbc.writeMem(0x6139, { 0xc3, 0xc4, 0x81 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd2bd, gbc.sp());
        EXPECT(0x81c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 000B
        gbc.setState(0xb3d4, 0xdf93, 0xb5f0, 0x91d8, 0x391, 0x8a69, 0x0, 0x0);
        gbc.writeMem(0xb3d4, { 0xc3, 0xe6, 0x30 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdf93, gbc.sp());
        EXPECT(0x30e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb3d4));
        EXPECT(0xe6, gbc.readMem(0xb3d5));
        EXPECT(0x30, gbc.readMem(0xb3d6));
        // C3 000D
        gbc.setState(0x8c8b, 0x9f87, 0x5b90, 0xdf27, 0x735b, 0x6384, 0x0, 0x1);
        gbc.writeMem(0x8c8b, { 0xc3, 0x96, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9f87, gbc.sp());
        EXPECT(0x9496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8c8b));
        EXPECT(0x96, gbc.readMem(0x8c8c));
        EXPECT(0x94, gbc.readMem(0x8c8d));
        // C3 000E
        gbc.setState(0xd0bf, 0xff47, 0x2680, 0x17ea, 0x5b6a, 0x89cb, 0x1, 0x1);
        gbc.writeMem(0xd0bf, { 0xc3, 0x24, 0x88 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xff47, gbc.sp());
        EXPECT(0x8824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd0bf));
        EXPECT(0x24, gbc.readMem(0xd0c0));
        EXPECT(0x88, gbc.readMem(0xd0c1));
        // C3 000F
        gbc.setState(0x1d2d, 0xfb3a, 0xaf90, 0x5745, 0x9717, 0xfffa, 0x0, 0x0);
        gbc.writeMem(0x1d2d, { 0xc3, 0x49, 0xce });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfb3a, gbc.sp());
        EXPECT(0xce49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0010
        gbc.setState(0x6338, 0x21c2, 0x90f0, 0x3f81, 0xe8db, 0xbd1c, 0x1, 0x0);
        gbc.writeMem(0x6338, { 0xc3, 0xb4, 0xb5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0xb5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0011
        gbc.setState(0xdbcd, 0x8284, 0xe600, 0x11a6, 0x19ee, 0xe044, 0x1, 0x1);
        gbc.writeMem(0xdbcd, { 0xc3, 0xe2, 0x8b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8284, gbc.sp());
        EXPECT(0x8be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdbcd));
        EXPECT(0xe2, gbc.readMem(0xdbce));
        EXPECT(0x8b, gbc.readMem(0xdbcf));
        // C3 0012
        gbc.setState(0xb1e4, 0x1ab2, 0xa800, 0xbe4f, 0x1932, 0x77d9, 0x1, 0x1);
        gbc.writeMem(0xb1e4, { 0xc3, 0x41, 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1ab2, gbc.sp());
        EXPECT(0x6a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb1e4));
        EXPECT(0x41, gbc.readMem(0xb1e5));
        EXPECT(0x6a, gbc.readMem(0xb1e6));
        // C3 0013
        gbc.setState(0xe5ca, 0xb66e, 0x73b0, 0xfc64, 0x1161, 0x6efa, 0x0, 0x0);
        gbc.writeMem(0xe5ca, { 0xc3, 0x9a, 0x4d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb66e, gbc.sp());
        EXPECT(0x4d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe5ca));
        EXPECT(0x9a, gbc.readMem(0xe5cb));
        EXPECT(0x4d, gbc.readMem(0xe5cc));
        // C3 0014
        gbc.setState(0x16f6, 0x84f9, 0x6b40, 0x63dd, 0xffd6, 0xea8f, 0x0, 0x0);
        gbc.writeMem(0x16f6, { 0xc3, 0x76, 0x79 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x84f9, gbc.sp());
        EXPECT(0x7976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0015
        gbc.setState(0x1e16, 0xfa, 0x6f0, 0xab63, 0x2712, 0x9795, 0x0, 0x0);
        gbc.writeMem(0x1e16, { 0xc3, 0xa6, 0x6e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0016
        gbc.setState(0x3352, 0x6e0d, 0x1c60, 0x2b72, 0xb544, 0xb3b7, 0x0, 0x1);
        gbc.writeMem(0x3352, { 0xc3, 0x36, 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0xbd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0017
        gbc.setState(0x8d12, 0xe9a3, 0x5b90, 0x83c9, 0x5bc6, 0xbbd2, 0x0, 0x0);
        gbc.writeMem(0x8d12, { 0xc3, 0xf7, 0x93 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe9a3, gbc.sp());
        EXPECT(0x93f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8d12));
        EXPECT(0xf7, gbc.readMem(0x8d13));
        EXPECT(0x93, gbc.readMem(0x8d14));
        // C3 0018
        gbc.setState(0x511e, 0x732a, 0xbc40, 0xa430, 0x6b5e, 0x8889, 0x1, 0x0);
        gbc.writeMem(0x511e, { 0xc3, 0xc5, 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0x57c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0019
        gbc.setState(0x55a1, 0x7d1a, 0xf510, 0x9088, 0x3877, 0x6d0, 0x0, 0x1);
        gbc.writeMem(0x55a1, { 0xc3, 0x27, 0xe1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0xe127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 001A
        gbc.setState(0xcdb5, 0x8d3e, 0x8d70, 0xe1ee, 0x9632, 0xddc9, 0x1, 0x1);
        gbc.writeMem(0xcdb5, { 0xc3, 0x2c, 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8d3e, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcdb5));
        EXPECT(0x2c, gbc.readMem(0xcdb6));
        EXPECT(0x92, gbc.readMem(0xcdb7));
        // C3 001B
        gbc.setState(0xac9d, 0x9929, 0xc640, 0xe8a0, 0x1f2d, 0xb866, 0x1, 0x1);
        gbc.writeMem(0xac9d, { 0xc3, 0xf4, 0xb5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0xb5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xac9d));
        EXPECT(0xf4, gbc.readMem(0xac9e));
        EXPECT(0xb5, gbc.readMem(0xac9f));
        // C3 001C
        gbc.setState(0x6f89, 0x4758, 0xc60, 0x38a5, 0xacc7, 0xc83b, 0x1, 0x1);
        gbc.writeMem(0x6f89, { 0xc3, 0x6a, 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4758, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 001D
        gbc.setState(0x52b, 0x6d2, 0xb230, 0x780c, 0x5956, 0xeeee, 0x1, 0x0);
        gbc.writeMem(0x52b, { 0xc3, 0xaa, 0xb8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6d2, gbc.sp());
        EXPECT(0xb8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 001F
        gbc.setState(0x54ab, 0x6f35, 0x3cb0, 0x4977, 0x14a9, 0x6d32, 0x1, 0x1);
        gbc.writeMem(0x54ab, { 0xc3, 0xbc, 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6f35, gbc.sp());
        EXPECT(0x79bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0020
        gbc.setState(0x5b17, 0x9736, 0x6e80, 0x5c11, 0x79bd, 0x96ec, 0x0, 0x1);
        gbc.writeMem(0x5b17, { 0xc3, 0xcb, 0x26 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0x26cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0021
        gbc.setState(0xe93b, 0x7d45, 0x4480, 0xdbf4, 0xb8d, 0x7655, 0x0, 0x1);
        gbc.writeMem(0xe93b, { 0xc3, 0x5b, 0xea });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7d45, gbc.sp());
        EXPECT(0xea5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe93b));
        EXPECT(0x5b, gbc.readMem(0xe93c));
        EXPECT(0xea, gbc.readMem(0xe93d));
        // C3 0022
        gbc.setState(0x12a5, 0xa791, 0x17e0, 0x130e, 0x4064, 0xa8d5, 0x0, 0x1);
        gbc.writeMem(0x12a5, { 0xc3, 0x88, 0x84 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa791, gbc.sp());
        EXPECT(0x8488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0023
        gbc.setState(0x3c2, 0x8588, 0x8b70, 0xb143, 0xc8ce, 0xc278, 0x1, 0x0);
        gbc.writeMem(0x3c2, { 0xc3, 0x2b, 0x4a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0x4a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0024
        gbc.setState(0x65dc, 0x9ee7, 0xa3d0, 0x46df, 0xfd2a, 0x7436, 0x0, 0x0);
        gbc.writeMem(0x65dc, { 0xc3, 0xaf, 0x4a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9ee7, gbc.sp());
        EXPECT(0x4aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0025
        gbc.setState(0xcc9e, 0x6a17, 0xe930, 0xa20c, 0x134f, 0x930a, 0x0, 0x0);
        gbc.writeMem(0xcc9e, { 0xc3, 0x16, 0x56 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6a17, gbc.sp());
        EXPECT(0x5616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcc9e));
        EXPECT(0x16, gbc.readMem(0xcc9f));
        EXPECT(0x56, gbc.readMem(0xcca0));
        // C3 0026
        gbc.setState(0xae65, 0x302e, 0x90f0, 0x782a, 0xdbc5, 0xfed0, 0x1, 0x1);
        gbc.writeMem(0xae65, { 0xc3, 0x73, 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x302e, gbc.sp());
        EXPECT(0x2f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xae65));
        EXPECT(0x73, gbc.readMem(0xae66));
        EXPECT(0x2f, gbc.readMem(0xae67));
        // C3 0027
        gbc.setState(0x6836, 0x78a1, 0x2860, 0x1e15, 0x67e6, 0x480f, 0x0, 0x1);
        gbc.writeMem(0x6836, { 0xc3, 0x8b, 0x3f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x78a1, gbc.sp());
        EXPECT(0x3f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0028
        gbc.setState(0x8b90, 0x2e7b, 0x2620, 0x6105, 0x71ae, 0xd724, 0x0, 0x0);
        gbc.writeMem(0x8b90, { 0xc3, 0x46, 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2e7b, gbc.sp());
        EXPECT(0x5746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8b90));
        EXPECT(0x46, gbc.readMem(0x8b91));
        EXPECT(0x57, gbc.readMem(0x8b92));
        // C3 0029
        gbc.setState(0x755c, 0x99c6, 0x9fe0, 0x29b1, 0x9984, 0x64ef, 0x0, 0x0);
        gbc.writeMem(0x755c, { 0xc3, 0x4c, 0x2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x99c6, gbc.sp());
        EXPECT(0x24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 002A
        gbc.setState(0xb1ed, 0xf29f, 0x5ad0, 0x855, 0xd4e8, 0x5f44, 0x1, 0x0);
        gbc.writeMem(0xb1ed, { 0xc3, 0x32, 0x6e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf29f, gbc.sp());
        EXPECT(0x6e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb1ed));
        EXPECT(0x32, gbc.readMem(0xb1ee));
        EXPECT(0x6e, gbc.readMem(0xb1ef));
        // C3 002C
        gbc.setState(0x2dd4, 0xf357, 0x43e0, 0x2f9, 0xa19, 0xb083, 0x0, 0x0);
        gbc.writeMem(0x2dd4, { 0xc3, 0x8f, 0xdb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf357, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 002D
        gbc.setState(0x5c85, 0x2e4e, 0xfc40, 0x81f1, 0x7a2c, 0x5c62, 0x0, 0x0);
        gbc.writeMem(0x5c85, { 0xc3, 0x81, 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2e4e, gbc.sp());
        EXPECT(0x5381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 002E
        gbc.setState(0xacb, 0xbe5a, 0xd8b0, 0x4683, 0x354b, 0x4dfb, 0x1, 0x0);
        gbc.writeMem(0xacb, { 0xc3, 0x5d, 0xba });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0xba5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 002F
        gbc.setState(0x4870, 0x9116, 0x8210, 0xae7f, 0x8331, 0x48ef, 0x1, 0x1);
        gbc.writeMem(0x4870, { 0xc3, 0xf0, 0xb0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9116, gbc.sp());
        EXPECT(0xb0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0030
        gbc.setState(0x6e2c, 0x7494, 0x8e20, 0xe2df, 0xd5cd, 0xa425, 0x0, 0x0);
        gbc.writeMem(0x6e2c, { 0xc3, 0x3a, 0xb2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7494, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0031
        gbc.setState(0x513, 0x93a8, 0x6390, 0xb32b, 0xb632, 0xdfc8, 0x0, 0x1);
        gbc.writeMem(0x513, { 0xc3, 0x94, 0xe2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x93a8, gbc.sp());
        EXPECT(0xe294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0032
        gbc.setState(0x740b, 0x96f2, 0xee0, 0xec9, 0xec3a, 0xf55, 0x0, 0x1);
        gbc.writeMem(0x740b, { 0xc3, 0xfd, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x38fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0033
        gbc.setState(0xa140, 0x54c1, 0xbb40, 0xe232, 0xac55, 0xb8f3, 0x1, 0x1);
        gbc.writeMem(0xa140, { 0xc3, 0x4e, 0x1c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x54c1, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa140));
        EXPECT(0x4e, gbc.readMem(0xa141));
        EXPECT(0x1c, gbc.readMem(0xa142));
        // C3 0034
        gbc.setState(0xdcc1, 0x5a70, 0x3400, 0xc5d0, 0x1212, 0xe07f, 0x1, 0x0);
        gbc.writeMem(0xdcc1, { 0xc3, 0x4d, 0xed });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5a70, gbc.sp());
        EXPECT(0xed4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdcc1));
        EXPECT(0x4d, gbc.readMem(0xdcc2));
        EXPECT(0xed, gbc.readMem(0xdcc3));
        // C3 0035
        gbc.setState(0x1d02, 0x50b7, 0xd8d0, 0x5029, 0xd8f, 0xf311, 0x0, 0x0);
        gbc.writeMem(0x1d02, { 0xc3, 0xb, 0xd2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x50b7, gbc.sp());
        EXPECT(0xd20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0036
        gbc.setState(0xee69, 0x1a5e, 0x3730, 0xfefa, 0xfaa2, 0xc1, 0x1, 0x1);
        gbc.writeMem(0xee69, { 0xc3, 0x39, 0xc0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0xc039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xee69));
        EXPECT(0x39, gbc.readMem(0xee6a));
        EXPECT(0xc0, gbc.readMem(0xee6b));
        // C3 0037
        gbc.setState(0xddf4, 0xac7c, 0xac20, 0x575f, 0xabaa, 0x29fc, 0x1, 0x1);
        gbc.writeMem(0xddf4, { 0xc3, 0x21, 0xe });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac7c, gbc.sp());
        EXPECT(0xe21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xddf4));
        EXPECT(0x21, gbc.readMem(0xddf5));
        EXPECT(0xe, gbc.readMem(0xddf6));
        // C3 0038
        gbc.setState(0xc799, 0xbce7, 0x8650, 0x76b7, 0xd68, 0x69e6, 0x1, 0x0);
        gbc.writeMem(0xc799, { 0xc3, 0xa, 0x8c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0x8c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc799));
        EXPECT(0xa, gbc.readMem(0xc79a));
        EXPECT(0x8c, gbc.readMem(0xc79b));
        // C3 0039
        gbc.setState(0x4024, 0x5ceb, 0x2d60, 0x8c86, 0x5214, 0x1ee2, 0x1, 0x1);
        gbc.writeMem(0x4024, { 0xc3, 0xc5, 0xfd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5ceb, gbc.sp());
        EXPECT(0xfdc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 003A
        gbc.setState(0x450f, 0x759a, 0xb7f0, 0xbf91, 0x61a3, 0xe4a4, 0x0, 0x1);
        gbc.writeMem(0x450f, { 0xc3, 0x80, 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x759a, gbc.sp());
        EXPECT(0x1080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 003C
        gbc.setState(0xed7d, 0xa72c, 0x6cc0, 0x75d, 0x1dd, 0xd855, 0x1, 0x1);
        gbc.writeMem(0xed7d, { 0xc3, 0xc6, 0x38 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa72c, gbc.sp());
        EXPECT(0x38c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xed7d));
        EXPECT(0xc6, gbc.readMem(0xed7e));
        EXPECT(0x38, gbc.readMem(0xed7f));
        // C3 003D
        gbc.setState(0xc5f4, 0x36ab, 0x9100, 0xd99e, 0xa740, 0x5c2e, 0x0, 0x0);
        gbc.writeMem(0xc5f4, { 0xc3, 0x4e, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x36ab, gbc.sp());
        EXPECT(0x914e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc5f4));
        EXPECT(0x4e, gbc.readMem(0xc5f5));
        EXPECT(0x91, gbc.readMem(0xc5f6));
        // C3 003F
        gbc.setState(0x9960, 0xd7a3, 0x21f0, 0xf82f, 0xfda2, 0x3f68, 0x1, 0x1);
        gbc.writeMem(0x9960, { 0xc3, 0x34, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd7a3, gbc.sp());
        EXPECT(0x9c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9960));
        EXPECT(0x34, gbc.readMem(0x9961));
        EXPECT(0x9c, gbc.readMem(0x9962));
        // C3 0040
        gbc.setState(0xe115, 0x747a, 0x7850, 0x46c3, 0xb478, 0x4aba, 0x0, 0x1);
        gbc.writeMem(0xe115, { 0xc3, 0x8e, 0x7f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x747a, gbc.sp());
        EXPECT(0x7f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe115));
        EXPECT(0x8e, gbc.readMem(0xe116));
        EXPECT(0x7f, gbc.readMem(0xe117));
        // C3 0041
        gbc.setState(0xa3bd, 0x808e, 0xa80, 0x4574, 0x394d, 0x4fe0, 0x0, 0x1);
        gbc.writeMem(0xa3bd, { 0xc3, 0xe9, 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x808e, gbc.sp());
        EXPECT(0x2ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa3bd));
        EXPECT(0xe9, gbc.readMem(0xa3be));
        EXPECT(0x2c, gbc.readMem(0xa3bf));
        // C3 0042
        gbc.setState(0x60fe, 0x1410, 0x86e0, 0xf671, 0xc7d8, 0xbf7b, 0x0, 0x0);
        gbc.writeMem(0x60fe, { 0xc3, 0xfc, 0x2a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1410, gbc.sp());
        EXPECT(0x2afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0044
        gbc.setState(0xe9ff, 0x8615, 0xd460, 0x77fe, 0xb0dd, 0xbfa7, 0x1, 0x1);
        gbc.writeMem(0xe9ff, { 0xc3, 0xed, 0x6c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8615, gbc.sp());
        EXPECT(0x6ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe9ff));
        EXPECT(0xed, gbc.readMem(0xea00));
        EXPECT(0x6c, gbc.readMem(0xea01));
        // C3 0045
        gbc.setState(0xe963, 0xf3f1, 0x33b0, 0xc2b, 0xa372, 0x1e5d, 0x1, 0x0);
        gbc.writeMem(0xe963, { 0xc3, 0x51, 0x30 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf3f1, gbc.sp());
        EXPECT(0x3051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe963));
        EXPECT(0x51, gbc.readMem(0xe964));
        EXPECT(0x30, gbc.readMem(0xe965));
        // C3 0046
        gbc.setState(0x955f, 0x4c1c, 0xcf90, 0x61d3, 0x60f6, 0x29e9, 0x0, 0x1);
        gbc.writeMem(0x955f, { 0xc3, 0xb1, 0x76 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4c1c, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x955f));
        EXPECT(0xb1, gbc.readMem(0x9560));
        EXPECT(0x76, gbc.readMem(0x9561));
        // C3 0047
        gbc.setState(0x8256, 0xffb9, 0x6060, 0x8dab, 0x6293, 0xfffb, 0x0, 0x0);
        gbc.writeMem(0x8256, { 0xc3, 0xda, 0x97 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xffb9, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8256));
        EXPECT(0xda, gbc.readMem(0x8257));
        EXPECT(0x97, gbc.readMem(0x8258));
        // C3 0048
        gbc.setState(0xa1a3, 0xb7c7, 0x5c60, 0x37d3, 0xf104, 0xa43c, 0x0, 0x1);
        gbc.writeMem(0xa1a3, { 0xc3, 0xfa, 0x3f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb7c7, gbc.sp());
        EXPECT(0x3ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa1a3));
        EXPECT(0xfa, gbc.readMem(0xa1a4));
        EXPECT(0x3f, gbc.readMem(0xa1a5));
        // C3 0049
        gbc.setState(0x8b29, 0x7295, 0x3e00, 0x6bed, 0xaefa, 0x252e, 0x0, 0x0);
        gbc.writeMem(0x8b29, { 0xc3, 0x4, 0xc0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8b29));
        EXPECT(0x4, gbc.readMem(0x8b2a));
        EXPECT(0xc0, gbc.readMem(0x8b2b));
        // C3 004A
        gbc.setState(0xaaca, 0xe1f3, 0xb6a0, 0x186e, 0xbc38, 0x646, 0x0, 0x1);
        gbc.writeMem(0xaaca, { 0xc3, 0xf3, 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe1f3, gbc.sp());
        EXPECT(0x41f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaaca));
        EXPECT(0xf3, gbc.readMem(0xaacb));
        EXPECT(0x41, gbc.readMem(0xaacc));
        // C3 004B
        gbc.setState(0x7596, 0x825d, 0x2120, 0xe2dd, 0xb4a, 0x8243, 0x0, 0x1);
        gbc.writeMem(0x7596, { 0xc3, 0xd1, 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x825d, gbc.sp());
        EXPECT(0x7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 004C
        gbc.setState(0x763e, 0x98f2, 0xa9c0, 0x2e98, 0x5b9f, 0x939f, 0x0, 0x0);
        gbc.writeMem(0x763e, { 0xc3, 0x3a, 0xb5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x98f2, gbc.sp());
        EXPECT(0xb53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 004D
        gbc.setState(0x231b, 0xceeb, 0x2a40, 0xa579, 0xa0fa, 0xbc44, 0x1, 0x0);
        gbc.writeMem(0x231b, { 0xc3, 0x61, 0x6c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xceeb, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 004E
        gbc.setState(0xb5aa, 0xe, 0x1a60, 0xe1ba, 0x47f4, 0x1b58, 0x0, 0x1);
        gbc.writeMem(0xb5aa, { 0xc3, 0x90, 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe, gbc.sp());
        EXPECT(0x8590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb5aa));
        EXPECT(0x90, gbc.readMem(0xb5ab));
        EXPECT(0x85, gbc.readMem(0xb5ac));
        // C3 004F
        gbc.setState(0x8a37, 0x48dd, 0xf4f0, 0xb2e2, 0x147a, 0xb244, 0x0, 0x0);
        gbc.writeMem(0x8a37, { 0xc3, 0x6e, 0xc8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x48dd, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8a37));
        EXPECT(0x6e, gbc.readMem(0x8a38));
        EXPECT(0xc8, gbc.readMem(0x8a39));
        // C3 0050
        gbc.setState(0x6788, 0x24f4, 0x72a0, 0xed10, 0xb2ed, 0x4441, 0x0, 0x0);
        gbc.writeMem(0x6788, { 0xc3, 0xab, 0x78 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x24f4, gbc.sp());
        EXPECT(0x78ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0051
        gbc.setState(0xc570, 0xda18, 0x6eb0, 0xe70c, 0xb0e2, 0xdf1, 0x1, 0x1);
        gbc.writeMem(0xc570, { 0xc3, 0xfd, 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0x2dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc570));
        EXPECT(0xfd, gbc.readMem(0xc571));
        EXPECT(0x2d, gbc.readMem(0xc572));
        // C3 0052
        gbc.setState(0xc0f6, 0xec00, 0x3e20, 0xbbdd, 0xb31c, 0x8597, 0x0, 0x0);
        gbc.writeMem(0xc0f6, { 0xc3, 0x1, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xec00, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc0f6));
        EXPECT(0x1, gbc.readMem(0xc0f7));
        EXPECT(0x1a, gbc.readMem(0xc0f8));
        // C3 0054
        gbc.setState(0xd402, 0x6c97, 0x1b0, 0x8dfe, 0x2f13, 0xfcdb, 0x1, 0x0);
        gbc.writeMem(0xd402, { 0xc3, 0x39, 0x8e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6c97, gbc.sp());
        EXPECT(0x8e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd402));
        EXPECT(0x39, gbc.readMem(0xd403));
        EXPECT(0x8e, gbc.readMem(0xd404));
        // C3 0055
        gbc.setState(0xa726, 0x9d09, 0xd980, 0x33eb, 0x9aa, 0xb51d, 0x0, 0x1);
        gbc.writeMem(0xa726, { 0xc3, 0xe9, 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9d09, gbc.sp());
        EXPECT(0x5de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa726));
        EXPECT(0xe9, gbc.readMem(0xa727));
        EXPECT(0x5d, gbc.readMem(0xa728));
        // C3 0056
        gbc.setState(0x450f, 0xc1bf, 0x2fe0, 0x6a4a, 0xba01, 0x7b04, 0x0, 0x0);
        gbc.writeMem(0x450f, { 0xc3, 0x80, 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc1bf, gbc.sp());
        EXPECT(0x1080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0057
        gbc.setState(0x8992, 0xab09, 0x2410, 0x2b5c, 0x2d90, 0xe5f1, 0x1, 0x0);
        gbc.writeMem(0x8992, { 0xc3, 0xb9, 0x3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xab09, gbc.sp());
        EXPECT(0x3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8992));
        EXPECT(0xb9, gbc.readMem(0x8993));
        EXPECT(0x3, gbc.readMem(0x8994));
        // C3 0058
        gbc.setState(0x8d5e, 0x7a39, 0xb740, 0x8d63, 0x176e, 0xd40f, 0x0, 0x1);
        gbc.writeMem(0x8d5e, { 0xc3, 0x61, 0x6e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0x6e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8d5e));
        EXPECT(0x61, gbc.readMem(0x8d5f));
        EXPECT(0x6e, gbc.readMem(0x8d60));
        // C3 0059
        gbc.setState(0x2019, 0x3060, 0xba70, 0xd693, 0xbcdc, 0x8ab6, 0x1, 0x0);
        gbc.writeMem(0x2019, { 0xc3, 0xcc, 0x25 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3060, gbc.sp());
        EXPECT(0x25cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 005A
        gbc.setState(0x47d9, 0x526, 0xec00, 0xbca7, 0xc025, 0xd3c0, 0x0, 0x1);
        gbc.writeMem(0x47d9, { 0xc3, 0x40, 0x5f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x526, gbc.sp());
        EXPECT(0x5f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 005B
        gbc.setState(0x19e8, 0x52f9, 0xd850, 0x2913, 0x80f4, 0xf3c0, 0x0, 0x0);
        gbc.writeMem(0x19e8, { 0xc3, 0x1a, 0x86 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x52f9, gbc.sp());
        EXPECT(0x861a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 005C
        gbc.setState(0x7390, 0x87a6, 0x2bf0, 0xa290, 0xe7eb, 0x13ef, 0x0, 0x0);
        gbc.writeMem(0x7390, { 0xc3, 0xc1, 0x10 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x87a6, gbc.sp());
        EXPECT(0x10c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 005D
        gbc.setState(0x8c39, 0xd25d, 0x22f0, 0x5fe4, 0xaec4, 0xdcc5, 0x0, 0x1);
        gbc.writeMem(0x8c39, { 0xc3, 0x10, 0x91 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd25d, gbc.sp());
        EXPECT(0x9110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8c39));
        EXPECT(0x10, gbc.readMem(0x8c3a));
        EXPECT(0x91, gbc.readMem(0x8c3b));
        // C3 005E
        gbc.setState(0xc5a4, 0xff7d, 0x7950, 0xaf95, 0x1a9, 0x1c4e, 0x1, 0x1);
        gbc.writeMem(0xc5a4, { 0xc3, 0x3f, 0xd4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xff7d, gbc.sp());
        EXPECT(0xd43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc5a4));
        EXPECT(0x3f, gbc.readMem(0xc5a5));
        EXPECT(0xd4, gbc.readMem(0xc5a6));
        // C3 005F
        gbc.setState(0x702, 0x82de, 0x7800, 0x3a30, 0x67ec, 0x7147, 0x1, 0x1);
        gbc.writeMem(0x702, { 0xc3, 0xfc, 0x6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x82de, gbc.sp());
        EXPECT(0x6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0060
        gbc.setState(0x2a49, 0x776e, 0x18c0, 0xf472, 0x7c15, 0x2270, 0x1, 0x1);
        gbc.writeMem(0x2a49, { 0xc3, 0xda, 0xca });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x776e, gbc.sp());
        EXPECT(0xcada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0061
        gbc.setState(0x79d2, 0x2a44, 0x4fd0, 0x7098, 0x63e7, 0x13a8, 0x1, 0x1);
        gbc.writeMem(0x79d2, { 0xc3, 0xbd, 0xeb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2a44, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0062
        gbc.setState(0xdd44, 0x87c0, 0x7350, 0x418d, 0xa4ac, 0xfda6, 0x1, 0x0);
        gbc.writeMem(0xdd44, { 0xc3, 0x6e, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x87c0, gbc.sp());
        EXPECT(0x736e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdd44));
        EXPECT(0x6e, gbc.readMem(0xdd45));
        EXPECT(0x73, gbc.readMem(0xdd46));
        // C3 0063
        gbc.setState(0x65ed, 0xcfe4, 0x5e70, 0xbae3, 0xfc62, 0x9a65, 0x0, 0x1);
        gbc.writeMem(0x65ed, { 0xc3, 0x6f, 0x60 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcfe4, gbc.sp());
        EXPECT(0x606f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0064
        gbc.setState(0x7d9a, 0x56a6, 0x3bc0, 0x3b4, 0xdb8, 0x52a6, 0x0, 0x0);
        gbc.writeMem(0x7d9a, { 0xc3, 0xb2, 0x71 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0x71b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0065
        gbc.setState(0x7d98, 0x4f93, 0x8880, 0x405e, 0x2ec9, 0xc6e3, 0x1, 0x1);
        gbc.writeMem(0x7d98, { 0xc3, 0xef, 0x1f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4f93, gbc.sp());
        EXPECT(0x1fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0066
        gbc.setState(0xc9ac, 0x8618, 0x93a0, 0xbdf1, 0x7554, 0xefc5, 0x1, 0x0);
        gbc.writeMem(0xc9ac, { 0xc3, 0x30, 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8618, gbc.sp());
        EXPECT(0x4b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc9ac));
        EXPECT(0x30, gbc.readMem(0xc9ad));
        EXPECT(0x4b, gbc.readMem(0xc9ae));
        // C3 0067
        gbc.setState(0x1b34, 0x150e, 0xb3a0, 0x4fc7, 0xca6a, 0x7750, 0x0, 0x0);
        gbc.writeMem(0x1b34, { 0xc3, 0xe7, 0x24 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x150e, gbc.sp());
        EXPECT(0x24e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0068
        gbc.setState(0x92ae, 0x98cb, 0xf380, 0x52ef, 0xba46, 0xa483, 0x0, 0x0);
        gbc.writeMem(0x92ae, { 0xc3, 0xc, 0x8b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x98cb, gbc.sp());
        EXPECT(0x8b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x92ae));
        EXPECT(0xc, gbc.readMem(0x92af));
        EXPECT(0x8b, gbc.readMem(0x92b0));
        // C3 0069
        gbc.setState(0x1083, 0x9ba6, 0xc270, 0xddf2, 0x253f, 0x1a20, 0x0, 0x0);
        gbc.writeMem(0x1083, { 0xc3, 0xaf, 0xed });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9ba6, gbc.sp());
        EXPECT(0xedaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 006A
        gbc.setState(0x86d9, 0x64e5, 0xa480, 0x7ce1, 0x87a1, 0x1196, 0x0, 0x1);
        gbc.writeMem(0x86d9, { 0xc3, 0x4d, 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x64e5, gbc.sp());
        EXPECT(0xf14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x86d9));
        EXPECT(0x4d, gbc.readMem(0x86da));
        EXPECT(0xf1, gbc.readMem(0x86db));
        // C3 006B
        gbc.setState(0x80e8, 0xdd34, 0x2490, 0xed34, 0x804c, 0xd8f6, 0x0, 0x1);
        gbc.writeMem(0x80e8, { 0xc3, 0x36, 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdd34, gbc.sp());
        EXPECT(0x3b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x80e8));
        EXPECT(0x36, gbc.readMem(0x80e9));
        EXPECT(0x3b, gbc.readMem(0x80ea));
        // C3 006C
        gbc.setState(0x553b, 0x6d2d, 0xc750, 0x7eb6, 0xaded, 0x1ef9, 0x1, 0x1);
        gbc.writeMem(0x553b, { 0xc3, 0x4a, 0x72 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6d2d, gbc.sp());
        EXPECT(0x724a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 006E
        gbc.setState(0x2697, 0x45c, 0x76b0, 0x4cfb, 0x57aa, 0xe537, 0x0, 0x0);
        gbc.writeMem(0x2697, { 0xc3, 0xc8, 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x45c, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 006F
        gbc.setState(0x14d3, 0xa1ab, 0x9050, 0x30b4, 0xfbfa, 0x65db, 0x0, 0x1);
        gbc.writeMem(0x14d3, { 0xc3, 0xc9, 0xe0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa1ab, gbc.sp());
        EXPECT(0xe0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0070
        gbc.setState(0xae5a, 0x14, 0xd590, 0xc6c, 0xffca, 0xc05c, 0x0, 0x0);
        gbc.writeMem(0xae5a, { 0xc3, 0x61, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x14, gbc.sp());
        EXPECT(0x5d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xae5a));
        EXPECT(0x61, gbc.readMem(0xae5b));
        EXPECT(0x5d, gbc.readMem(0xae5c));
        // C3 0071
        gbc.setState(0x1e68, 0xc866, 0x2050, 0x57f, 0x8deb, 0xf165, 0x1, 0x0);
        gbc.writeMem(0x1e68, { 0xc3, 0x24, 0xeb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc866, gbc.sp());
        EXPECT(0xeb24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0072
        gbc.setState(0xc5cd, 0x6db3, 0x25e0, 0xc54, 0xafc5, 0xd6a0, 0x0, 0x1);
        gbc.writeMem(0xc5cd, { 0xc3, 0x6c, 0x32 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6db3, gbc.sp());
        EXPECT(0x326c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc5cd));
        EXPECT(0x6c, gbc.readMem(0xc5ce));
        EXPECT(0x32, gbc.readMem(0xc5cf));
        // C3 0073
        gbc.setState(0xe16a, 0xfd70, 0xc6e0, 0x5a71, 0x73a3, 0xccf2, 0x0, 0x1);
        gbc.writeMem(0xe16a, { 0xc3, 0xfb, 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfd70, gbc.sp());
        EXPECT(0x85fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe16a));
        EXPECT(0xfb, gbc.readMem(0xe16b));
        EXPECT(0x85, gbc.readMem(0xe16c));
        // C3 0074
        gbc.setState(0x3d8c, 0xe64f, 0xe660, 0xfee7, 0x6364, 0xb4df, 0x0, 0x1);
        gbc.writeMem(0x3d8c, { 0xc3, 0xca, 0x98 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe64f, gbc.sp());
        EXPECT(0x98ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0075
        gbc.setState(0xacd2, 0x15af, 0x2f50, 0xb119, 0xa160, 0xf4c9, 0x0, 0x0);
        gbc.writeMem(0xacd2, { 0xc3, 0xee, 0xbb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x15af, gbc.sp());
        EXPECT(0xbbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xacd2));
        EXPECT(0xee, gbc.readMem(0xacd3));
        EXPECT(0xbb, gbc.readMem(0xacd4));
        // C3 0076
        gbc.setState(0x2b7c, 0xf88e, 0xbb20, 0x192d, 0x9505, 0x3b95, 0x0, 0x1);
        gbc.writeMem(0x2b7c, { 0xc3, 0xa5, 0x74 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf88e, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0077
        gbc.setState(0xc4c3, 0xc70f, 0x9120, 0xce2, 0x91f3, 0xea24, 0x0, 0x0);
        gbc.writeMem(0xc4c3, { 0xc3, 0x88, 0x1b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc70f, gbc.sp());
        EXPECT(0x1b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc4c3));
        EXPECT(0x88, gbc.readMem(0xc4c4));
        EXPECT(0x1b, gbc.readMem(0xc4c5));
        // C3 0078
        gbc.setState(0x80b, 0xb092, 0x3bb0, 0x3907, 0x50d0, 0xf5e8, 0x0, 0x0);
        gbc.writeMem(0x80b, { 0xc3, 0x55, 0xf6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb092, gbc.sp());
        EXPECT(0xf655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0079
        gbc.setState(0xa410, 0xdf3b, 0x21c0, 0x7225, 0x568c, 0x8b78, 0x1, 0x0);
        gbc.writeMem(0xa410, { 0xc3, 0x74, 0x2d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdf3b, gbc.sp());
        EXPECT(0x2d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa410));
        EXPECT(0x74, gbc.readMem(0xa411));
        EXPECT(0x2d, gbc.readMem(0xa412));
        // C3 007A
        gbc.setState(0x18ae, 0x7f51, 0x1460, 0x864d, 0xe305, 0xd6, 0x0, 0x1);
        gbc.writeMem(0x18ae, { 0xc3, 0x48, 0xce });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7f51, gbc.sp());
        EXPECT(0xce48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 007B
        gbc.setState(0xa043, 0xd54, 0xffc0, 0x7d70, 0xef12, 0xb965, 0x0, 0x1);
        gbc.writeMem(0xa043, { 0xc3, 0xbd, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd54, gbc.sp());
        EXPECT(0xe0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa043));
        EXPECT(0xbd, gbc.readMem(0xa044));
        EXPECT(0xe0, gbc.readMem(0xa045));
        // C3 007C
        gbc.setState(0xc058, 0xf036, 0xccd0, 0x3192, 0x8b9a, 0xf80f, 0x0, 0x0);
        gbc.writeMem(0xc058, { 0xc3, 0x68, 0x26 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf036, gbc.sp());
        EXPECT(0x2668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc058));
        EXPECT(0x68, gbc.readMem(0xc059));
        EXPECT(0x26, gbc.readMem(0xc05a));
        // C3 007E
        gbc.setState(0x2304, 0x8203, 0x15a0, 0x5445, 0x8fcb, 0xf3cf, 0x0, 0x1);
        gbc.writeMem(0x2304, { 0xc3, 0xbe, 0x62 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8203, gbc.sp());
        EXPECT(0x62be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 007F
        gbc.setState(0x435d, 0xb554, 0xad70, 0x6974, 0x54d1, 0x78b2, 0x1, 0x1);
        gbc.writeMem(0x435d, { 0xc3, 0x8e, 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb554, gbc.sp());
        EXPECT(0x698e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0080
        gbc.setState(0x7ee2, 0x5695, 0x5920, 0x7bf6, 0xa807, 0x228d, 0x1, 0x1);
        gbc.writeMem(0x7ee2, { 0xc3, 0x82, 0xf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5695, gbc.sp());
        EXPECT(0xf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0081
        gbc.setState(0xc824, 0x7862, 0xa7c0, 0x7dfa, 0xd4d0, 0xae2f, 0x1, 0x1);
        gbc.writeMem(0xc824, { 0xc3, 0x14, 0x7e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7862, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc824));
        EXPECT(0x14, gbc.readMem(0xc825));
        EXPECT(0x7e, gbc.readMem(0xc826));
        // C3 0082
        gbc.setState(0x7cde, 0xd01f, 0xe790, 0xed31, 0xc2e8, 0xe459, 0x1, 0x1);
        gbc.writeMem(0x7cde, { 0xc3, 0xbd, 0x1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd01f, gbc.sp());
        EXPECT(0x1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0083
        gbc.setState(0x1509, 0xfbb7, 0xccf0, 0x4661, 0x982, 0x9806, 0x0, 0x0);
        gbc.writeMem(0x1509, { 0xc3, 0x61, 0xc2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfbb7, gbc.sp());
        EXPECT(0xc261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0084
        gbc.setState(0x4807, 0x5490, 0xe9f0, 0x8ea2, 0x35b8, 0x54da, 0x1, 0x0);
        gbc.writeMem(0x4807, { 0xc3, 0x5b, 0x2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5490, gbc.sp());
        EXPECT(0x25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0085
        gbc.setState(0xacd4, 0x2469, 0xde00, 0x3937, 0x8d89, 0x54f3, 0x1, 0x0);
        gbc.writeMem(0xacd4, { 0xc3, 0x4, 0xf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2469, gbc.sp());
        EXPECT(0xf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xacd4));
        EXPECT(0x4, gbc.readMem(0xacd5));
        EXPECT(0xf, gbc.readMem(0xacd6));
        // C3 0086
        gbc.setState(0x5b12, 0x36e9, 0x9e10, 0xef42, 0x64af, 0xd5bd, 0x1, 0x1);
        gbc.writeMem(0x5b12, { 0xc3, 0xc7, 0x38 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x36e9, gbc.sp());
        EXPECT(0x38c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0087
        gbc.setState(0x272e, 0xd14b, 0xdbe0, 0x64e4, 0xea07, 0x1ab9, 0x0, 0x1);
        gbc.writeMem(0x272e, { 0xc3, 0x86, 0xfe });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd14b, gbc.sp());
        EXPECT(0xfe86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0088
        gbc.setState(0x8332, 0x9433, 0x60f0, 0x67bb, 0x60d, 0x65ec, 0x0, 0x1);
        gbc.writeMem(0x8332, { 0xc3, 0xde, 0xe3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9433, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8332));
        EXPECT(0xde, gbc.readMem(0x8333));
        EXPECT(0xe3, gbc.readMem(0x8334));
        // C3 0089
        gbc.setState(0x1a54, 0x180e, 0x6610, 0xb4df, 0x7212, 0x5592, 0x1, 0x0);
        gbc.writeMem(0x1a54, { 0xc3, 0x31, 0x3d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x180e, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 008A
        gbc.setState(0x6641, 0x6ac3, 0x8ed0, 0x5914, 0xe8fa, 0x87f1, 0x0, 0x0);
        gbc.writeMem(0x6641, { 0xc3, 0xe0, 0x4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0x4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 008B
        gbc.setState(0x489, 0xb5d, 0x2e10, 0x3034, 0xdfa0, 0x34df, 0x0, 0x0);
        gbc.writeMem(0x489, { 0xc3, 0x24, 0x5d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0x5d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 008C
        gbc.setState(0x3ddf, 0xc4a9, 0x2a40, 0xc382, 0x6ee9, 0x4fdc, 0x0, 0x0);
        gbc.writeMem(0x3ddf, { 0xc3, 0x34, 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0x5234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 008D
        gbc.setState(0xe8ca, 0xe9e7, 0x7350, 0xeeec, 0xe92c, 0x8104, 0x0, 0x0);
        gbc.writeMem(0xe8ca, { 0xc3, 0xad, 0x30 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe9e7, gbc.sp());
        EXPECT(0x30ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe8ca));
        EXPECT(0xad, gbc.readMem(0xe8cb));
        EXPECT(0x30, gbc.readMem(0xe8cc));
        // C3 008E
        gbc.setState(0x3143, 0xdf3f, 0xee0, 0x7b37, 0x7969, 0x19d2, 0x0, 0x1);
        gbc.writeMem(0x3143, { 0xc3, 0x32, 0x63 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x6332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0090
        gbc.setState(0x9fba, 0x135, 0xf290, 0xdad6, 0x8d99, 0xb3bd, 0x1, 0x0);
        gbc.writeMem(0x9fba, { 0xc3, 0x9c, 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0x8a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9fba));
        EXPECT(0x9c, gbc.readMem(0x9fbb));
        EXPECT(0x8a, gbc.readMem(0x9fbc));
        // C3 0091
        gbc.setState(0x5bb0, 0xd95f, 0x1400, 0x9cd8, 0x7f6a, 0xe091, 0x1, 0x0);
        gbc.writeMem(0x5bb0, { 0xc3, 0xbf, 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd95f, gbc.sp());
        EXPECT(0x69bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0092
        gbc.setState(0x3fbe, 0x4521, 0x2a80, 0xb2a5, 0x5cc8, 0xbc21, 0x0, 0x1);
        gbc.writeMem(0x3fbe, { 0xc3, 0x49, 0x4c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4521, gbc.sp());
        EXPECT(0x4c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0093
        gbc.setState(0xac91, 0xcf5d, 0xab50, 0x92ca, 0x9e7d, 0x5579, 0x1, 0x0);
        gbc.writeMem(0xac91, { 0xc3, 0x7d, 0x12 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcf5d, gbc.sp());
        EXPECT(0x127d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xac91));
        EXPECT(0x7d, gbc.readMem(0xac92));
        EXPECT(0x12, gbc.readMem(0xac93));
        // C3 0094
        gbc.setState(0xb2c1, 0x4fb0, 0xd640, 0x6b82, 0x8b23, 0xb3b4, 0x0, 0x1);
        gbc.writeMem(0xb2c1, { 0xc3, 0x32, 0x1a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4fb0, gbc.sp());
        EXPECT(0x1a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb2c1));
        EXPECT(0x32, gbc.readMem(0xb2c2));
        EXPECT(0x1a, gbc.readMem(0xb2c3));
        // C3 0095
        gbc.setState(0x95b0, 0x5f37, 0x1a60, 0xec6e, 0xd0d5, 0x3557, 0x1, 0x0);
        gbc.writeMem(0x95b0, { 0xc3, 0xed, 0x23 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5f37, gbc.sp());
        EXPECT(0x23ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x95b0));
        EXPECT(0xed, gbc.readMem(0x95b1));
        EXPECT(0x23, gbc.readMem(0x95b2));
        // C3 0096
        gbc.setState(0x1574, 0x9801, 0x8c80, 0x62a5, 0x437d, 0x3a97, 0x0, 0x1);
        gbc.writeMem(0x1574, { 0xc3, 0x40, 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9801, gbc.sp());
        EXPECT(0x740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0097
        gbc.setState(0x868a, 0xa9d2, 0x4d20, 0x229a, 0x29df, 0x4a79, 0x1, 0x0);
        gbc.writeMem(0x868a, { 0xc3, 0x3f, 0xde });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0xde3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x868a));
        EXPECT(0x3f, gbc.readMem(0x868b));
        EXPECT(0xde, gbc.readMem(0x868c));
        // C3 0098
        gbc.setState(0xd29d, 0x6ad1, 0xd050, 0xc6c2, 0x160, 0x5027, 0x0, 0x1);
        gbc.writeMem(0xd29d, { 0xc3, 0x7c, 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6ad1, gbc.sp());
        EXPECT(0xc57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd29d));
        EXPECT(0x7c, gbc.readMem(0xd29e));
        EXPECT(0xc5, gbc.readMem(0xd29f));
        // C3 0099
        gbc.setState(0xd342, 0x9d0c, 0x6bc0, 0x4203, 0x2074, 0xe0b5, 0x1, 0x0);
        gbc.writeMem(0xd342, { 0xc3, 0x5e, 0xb7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9d0c, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd342));
        EXPECT(0x5e, gbc.readMem(0xd343));
        EXPECT(0xb7, gbc.readMem(0xd344));
        // C3 009B
        gbc.setState(0xaed1, 0x55b5, 0x6d70, 0x7176, 0x9ac2, 0x6b78, 0x1, 0x0);
        gbc.writeMem(0xaed1, { 0xc3, 0x82, 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x55b5, gbc.sp());
        EXPECT(0x1382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaed1));
        EXPECT(0x82, gbc.readMem(0xaed2));
        EXPECT(0x13, gbc.readMem(0xaed3));
        // C3 009C
        gbc.setState(0x7a2a, 0x7320, 0x1fb0, 0x1f57, 0xb2d2, 0xa71a, 0x1, 0x0);
        gbc.writeMem(0x7a2a, { 0xc3, 0x59, 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7320, gbc.sp());
        EXPECT(0xf159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 009D
        gbc.setState(0xaad, 0xe615, 0xb230, 0x297d, 0xa1ca, 0x922e, 0x0, 0x0);
        gbc.writeMem(0xaad, { 0xc3, 0xc0, 0x12 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x12c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 009E
        gbc.setState(0x6d45, 0xfc5e, 0xa340, 0x1922, 0x18fb, 0xba0f, 0x1, 0x1);
        gbc.writeMem(0x6d45, { 0xc3, 0xe2, 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfc5e, gbc.sp());
        EXPECT(0x2de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 009F
        gbc.setState(0x1502, 0xae9f, 0xcc70, 0xbbe9, 0xa626, 0x73ca, 0x1, 0x0);
        gbc.writeMem(0x1502, { 0xc3, 0xe6, 0xb8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xae9f, gbc.sp());
        EXPECT(0xb8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00A0
        gbc.setState(0xcc42, 0xd281, 0xfa80, 0x7726, 0x9e69, 0xaf70, 0x1, 0x1);
        gbc.writeMem(0xcc42, { 0xc3, 0x7b, 0xe6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd281, gbc.sp());
        EXPECT(0xe67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcc42));
        EXPECT(0x7b, gbc.readMem(0xcc43));
        EXPECT(0xe6, gbc.readMem(0xcc44));
        // C3 00A1
        gbc.setState(0x6667, 0xa88, 0x3790, 0x6372, 0x7a23, 0x804c, 0x1, 0x1);
        gbc.writeMem(0x6667, { 0xc3, 0xf7, 0x38 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa88, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00A2
        gbc.setState(0x653e, 0x75c9, 0x1340, 0xea95, 0x55a3, 0xeecd, 0x1, 0x0);
        gbc.writeMem(0x653e, { 0xc3, 0x58, 0x64 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x75c9, gbc.sp());
        EXPECT(0x6458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00A3
        gbc.setState(0xdb5e, 0xfee2, 0xf020, 0x407, 0x5f94, 0x92d6, 0x0, 0x0);
        gbc.writeMem(0xdb5e, { 0xc3, 0xea, 0xde });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfee2, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdb5e));
        EXPECT(0xea, gbc.readMem(0xdb5f));
        EXPECT(0xde, gbc.readMem(0xdb60));
        // C3 00A5
        gbc.setState(0xbf54, 0x4955, 0xae60, 0x7709, 0xcd5d, 0xbd89, 0x1, 0x0);
        gbc.writeMem(0xbf54, { 0xc3, 0x51, 0xf8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4955, gbc.sp());
        EXPECT(0xf851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbf54));
        EXPECT(0x51, gbc.readMem(0xbf55));
        EXPECT(0xf8, gbc.readMem(0xbf56));
        // C3 00A6
        gbc.setState(0x80b2, 0xd95f, 0x1350, 0x6aec, 0xc02e, 0x3426, 0x0, 0x1);
        gbc.writeMem(0x80b2, { 0xc3, 0xf3, 0x2c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd95f, gbc.sp());
        EXPECT(0x2cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x80b2));
        EXPECT(0xf3, gbc.readMem(0x80b3));
        EXPECT(0x2c, gbc.readMem(0x80b4));
        // C3 00A7
        gbc.setState(0xd678, 0x398e, 0xd10, 0x70b8, 0xa55c, 0x69ec, 0x1, 0x0);
        gbc.writeMem(0xd678, { 0xc3, 0xfa, 0x64 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x398e, gbc.sp());
        EXPECT(0x64fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd678));
        EXPECT(0xfa, gbc.readMem(0xd679));
        EXPECT(0x64, gbc.readMem(0xd67a));
        // C3 00A8
        gbc.setState(0xa397, 0x3a5e, 0xdb80, 0x810b, 0x8913, 0xeca4, 0x0, 0x0);
        gbc.writeMem(0xa397, { 0xc3, 0x46, 0x90 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3a5e, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa397));
        EXPECT(0x46, gbc.readMem(0xa398));
        EXPECT(0x90, gbc.readMem(0xa399));
        // C3 00A9
        gbc.setState(0x3f88, 0xa125, 0x9a90, 0xaa30, 0xde8f, 0x95a, 0x1, 0x0);
        gbc.writeMem(0x3f88, { 0xc3, 0x31, 0x1c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa125, gbc.sp());
        EXPECT(0x1c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00AA
        gbc.setState(0x2bc7, 0xab72, 0xf9c0, 0x23c3, 0x6f4, 0xa2e, 0x1, 0x0);
        gbc.writeMem(0x2bc7, { 0xc3, 0xe2, 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xab72, gbc.sp());
        EXPECT(0x49e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00AB
        gbc.setState(0x4ed5, 0xfcdc, 0x10, 0x2d7a, 0x4a3f, 0xd907, 0x1, 0x0);
        gbc.writeMem(0x4ed5, { 0xc3, 0xdd, 0xc6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfcdc, gbc.sp());
        EXPECT(0xc6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00AC
        gbc.setState(0xa1d7, 0xde12, 0x1280, 0x2498, 0xa4b5, 0x6441, 0x1, 0x0);
        gbc.writeMem(0xa1d7, { 0xc3, 0x8c, 0xd1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xde12, gbc.sp());
        EXPECT(0xd18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa1d7));
        EXPECT(0x8c, gbc.readMem(0xa1d8));
        EXPECT(0xd1, gbc.readMem(0xa1d9));
        // C3 00AD
        gbc.setState(0x9d54, 0xf275, 0xeec0, 0xc553, 0xc213, 0x29b2, 0x0, 0x1);
        gbc.writeMem(0x9d54, { 0xc3, 0x1b, 0xc5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf275, gbc.sp());
        EXPECT(0xc51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9d54));
        EXPECT(0x1b, gbc.readMem(0x9d55));
        EXPECT(0xc5, gbc.readMem(0x9d56));
        // C3 00AE
        gbc.setState(0x8228, 0xa457, 0x36f0, 0x2ada, 0xf2f9, 0xf5e5, 0x0, 0x0);
        gbc.writeMem(0x8228, { 0xc3, 0x1, 0xc4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa457, gbc.sp());
        EXPECT(0xc401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8228));
        EXPECT(0x1, gbc.readMem(0x8229));
        EXPECT(0xc4, gbc.readMem(0x822a));
        // C3 00AF
        gbc.setState(0x6722, 0x7fc2, 0xafb0, 0x3b6f, 0x75e6, 0xc915, 0x1, 0x0);
        gbc.writeMem(0x6722, { 0xc3, 0xef, 0x76 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7fc2, gbc.sp());
        EXPECT(0x76ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00B0
        gbc.setState(0x3c42, 0x84b1, 0x54d0, 0x799a, 0xfa37, 0x9c2, 0x1, 0x0);
        gbc.writeMem(0x3c42, { 0xc3, 0x7d, 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x84b1, gbc.sp());
        EXPECT(0x577d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00B1
        gbc.setState(0xe745, 0x3f56, 0x8b00, 0x14ca, 0xaed5, 0x9f8e, 0x0, 0x0);
        gbc.writeMem(0xe745, { 0xc3, 0x5d, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3f56, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe745));
        EXPECT(0x5d, gbc.readMem(0xe746));
        EXPECT(0x8, gbc.readMem(0xe747));
        // C3 00B2
        gbc.setState(0xb303, 0xc203, 0x1450, 0xc702, 0x9cc5, 0xef15, 0x0, 0x0);
        gbc.writeMem(0xb303, { 0xc3, 0x89, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc203, gbc.sp());
        EXPECT(0x89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb303));
        EXPECT(0x89, gbc.readMem(0xb304));
        EXPECT(0x0, gbc.readMem(0xb305));
        // C3 00B3
        gbc.setState(0x7280, 0x6623, 0xbe90, 0x991a, 0x3bd0, 0x5c0c, 0x0, 0x0);
        gbc.writeMem(0x7280, { 0xc3, 0x54, 0x7c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6623, gbc.sp());
        EXPECT(0x7c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00B4
        gbc.setState(0xac83, 0x64a4, 0xcb90, 0xde55, 0xbd86, 0x9187, 0x0, 0x0);
        gbc.writeMem(0xac83, { 0xc3, 0x9, 0xe });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0xe09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xac83));
        EXPECT(0x9, gbc.readMem(0xac84));
        EXPECT(0xe, gbc.readMem(0xac85));
        // C3 00B5
        gbc.setState(0xae68, 0x584a, 0x58c0, 0x3192, 0xf81b, 0x1a4a, 0x0, 0x1);
        gbc.writeMem(0xae68, { 0xc3, 0xd8, 0xb4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x584a, gbc.sp());
        EXPECT(0xb4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xae68));
        EXPECT(0xd8, gbc.readMem(0xae69));
        EXPECT(0xb4, gbc.readMem(0xae6a));
        // C3 00B6
        gbc.setState(0x79f7, 0xe91b, 0x7aa0, 0x6ef6, 0xf82d, 0xecf7, 0x1, 0x0);
        gbc.writeMem(0x79f7, { 0xc3, 0x52, 0x1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe91b, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00B7
        gbc.setState(0x5efa, 0xf4d, 0x1d20, 0x56fa, 0xd97c, 0xdc20, 0x0, 0x1);
        gbc.writeMem(0x5efa, { 0xc3, 0xad, 0x81 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf4d, gbc.sp());
        EXPECT(0x81ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00B8
        gbc.setState(0xd964, 0x9f69, 0x29c0, 0xaee9, 0xc556, 0xddc5, 0x0, 0x0);
        gbc.writeMem(0xd964, { 0xc3, 0xc7, 0x33 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9f69, gbc.sp());
        EXPECT(0x33c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd964));
        EXPECT(0xc7, gbc.readMem(0xd965));
        EXPECT(0x33, gbc.readMem(0xd966));
        // C3 00B9
        gbc.setState(0x4d37, 0xf4, 0xe950, 0x4e61, 0x1de7, 0x6003, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0xc3, 0x6b, 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf4, gbc.sp());
        EXPECT(0x896b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00BA
        gbc.setState(0x6101, 0x57b8, 0x33d0, 0xcecb, 0xfd70, 0x3e78, 0x1, 0x1);
        gbc.writeMem(0x6101, { 0xc3, 0xc4, 0x22 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x57b8, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00BB
        gbc.setState(0xaf46, 0xb096, 0x1e90, 0x566, 0x7ef3, 0x271c, 0x1, 0x1);
        gbc.writeMem(0xaf46, { 0xc3, 0x23, 0xa9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb096, gbc.sp());
        EXPECT(0xa923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaf46));
        EXPECT(0x23, gbc.readMem(0xaf47));
        EXPECT(0xa9, gbc.readMem(0xaf48));
        // C3 00BC
        gbc.setState(0x7a56, 0x9249, 0xe170, 0x7395, 0xda84, 0x66fd, 0x0, 0x1);
        gbc.writeMem(0x7a56, { 0xc3, 0xb8, 0xa9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9249, gbc.sp());
        EXPECT(0xa9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00BD
        gbc.setState(0x7cb3, 0xd13a, 0x3550, 0x42b4, 0x7ec2, 0xe43e, 0x0, 0x0);
        gbc.writeMem(0x7cb3, { 0xc3, 0x0, 0x31 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd13a, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00BE
        gbc.setState(0x4eb9, 0xca5a, 0xa910, 0x3e5, 0x4ea0, 0x4f96, 0x0, 0x0);
        gbc.writeMem(0x4eb9, { 0xc3, 0x53, 0x3f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xca5a, gbc.sp());
        EXPECT(0x3f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00C0
        gbc.setState(0x8660, 0x42e3, 0xe4d0, 0xb882, 0x482d, 0x8764, 0x0, 0x1);
        gbc.writeMem(0x8660, { 0xc3, 0x7a, 0x3b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x42e3, gbc.sp());
        EXPECT(0x3b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8660));
        EXPECT(0x7a, gbc.readMem(0x8661));
        EXPECT(0x3b, gbc.readMem(0x8662));
        // C3 00C1
        gbc.setState(0x8eb9, 0x279b, 0x5600, 0x75f9, 0x4516, 0xe05b, 0x0, 0x0);
        gbc.writeMem(0x8eb9, { 0xc3, 0xba, 0x5b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x279b, gbc.sp());
        EXPECT(0x5bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8eb9));
        EXPECT(0xba, gbc.readMem(0x8eba));
        EXPECT(0x5b, gbc.readMem(0x8ebb));
        // C3 00C2
        gbc.setState(0x90aa, 0x8920, 0x3a10, 0x107b, 0x13ef, 0x1cf7, 0x1, 0x1);
        gbc.writeMem(0x90aa, { 0xc3, 0x59, 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8920, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x90aa));
        EXPECT(0x59, gbc.readMem(0x90ab));
        EXPECT(0x9c, gbc.readMem(0x90ac));
        // C3 00C3
        gbc.setState(0x35bc, 0xe36d, 0x7600, 0x62d0, 0x6ce3, 0xf3ff, 0x0, 0x0);
        gbc.writeMem(0x35bc, { 0xc3, 0x3e, 0xfc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe36d, gbc.sp());
        EXPECT(0xfc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00C4
        gbc.setState(0x4dbb, 0xdd41, 0xf460, 0x88f2, 0x764c, 0xe800, 0x0, 0x1);
        gbc.writeMem(0x4dbb, { 0xc3, 0xc8, 0x80 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdd41, gbc.sp());
        EXPECT(0x80c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00C5
        gbc.setState(0x141d, 0xfce0, 0xe200, 0xd12e, 0x5ecd, 0xf9d4, 0x1, 0x1);
        gbc.writeMem(0x141d, { 0xc3, 0x0, 0xd5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfce0, gbc.sp());
        EXPECT(0xd500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00C6
        gbc.setState(0x1a49, 0xe110, 0xa2e0, 0x4e94, 0xf51c, 0xfe94, 0x0, 0x0);
        gbc.writeMem(0x1a49, { 0xc3, 0x2f, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe110, gbc.sp());
        EXPECT(0xc92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00C7
        gbc.setState(0xdee1, 0x1dc, 0xccb0, 0x711a, 0x9079, 0x6ced, 0x0, 0x0);
        gbc.writeMem(0xdee1, { 0xc3, 0x52, 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1dc, gbc.sp());
        EXPECT(0x9852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdee1));
        EXPECT(0x52, gbc.readMem(0xdee2));
        EXPECT(0x98, gbc.readMem(0xdee3));
        // C3 00C8
        gbc.setState(0x2c9d, 0x6cfc, 0xe290, 0x42fa, 0x6087, 0x92e, 0x1, 0x1);
        gbc.writeMem(0x2c9d, { 0xc3, 0xea, 0xf2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0xf2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00C9
        gbc.setState(0x9a6d, 0x471d, 0x82f0, 0xcf9b, 0xc869, 0xa77a, 0x0, 0x1);
        gbc.writeMem(0x9a6d, { 0xc3, 0x13, 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x471d, gbc.sp());
        EXPECT(0x9b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9a6d));
        EXPECT(0x13, gbc.readMem(0x9a6e));
        EXPECT(0x9b, gbc.readMem(0x9a6f));
        // C3 00CA
        gbc.setState(0xa47d, 0x36d8, 0x8e50, 0xc764, 0x4c3d, 0xd7aa, 0x1, 0x1);
        gbc.writeMem(0xa47d, { 0xc3, 0x2d, 0x59 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x36d8, gbc.sp());
        EXPECT(0x592d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa47d));
        EXPECT(0x2d, gbc.readMem(0xa47e));
        EXPECT(0x59, gbc.readMem(0xa47f));
        // C3 00CB
        gbc.setState(0xb22c, 0x5f9a, 0x4bb0, 0x8d42, 0x66c4, 0x11bc, 0x0, 0x0);
        gbc.writeMem(0xb22c, { 0xc3, 0xb2, 0x27 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5f9a, gbc.sp());
        EXPECT(0x27b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb22c));
        EXPECT(0xb2, gbc.readMem(0xb22d));
        EXPECT(0x27, gbc.readMem(0xb22e));
        // C3 00CC
        gbc.setState(0x36a9, 0xd431, 0x1d00, 0x64e0, 0x1d07, 0x468f, 0x1, 0x0);
        gbc.writeMem(0x36a9, { 0xc3, 0x3a, 0x5c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd431, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00CD
        gbc.setState(0xad2c, 0xe035, 0xd860, 0x648c, 0x7e39, 0x8d5c, 0x0, 0x0);
        gbc.writeMem(0xad2c, { 0xc3, 0xf8, 0x3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xad2c));
        EXPECT(0xf8, gbc.readMem(0xad2d));
        EXPECT(0x3, gbc.readMem(0xad2e));
        // C3 00CE
        gbc.setState(0x7521, 0xb9ad, 0xf6b0, 0x309b, 0xf710, 0x5bbe, 0x0, 0x0);
        gbc.writeMem(0x7521, { 0xc3, 0x51, 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb9ad, gbc.sp());
        EXPECT(0x5751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00CF
        gbc.setState(0x97e8, 0x7ebb, 0x8bb0, 0xb28a, 0xe015, 0x91a9, 0x1, 0x0);
        gbc.writeMem(0x97e8, { 0xc3, 0xfd, 0xd4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7ebb, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x97e8));
        EXPECT(0xfd, gbc.readMem(0x97e9));
        EXPECT(0xd4, gbc.readMem(0x97ea));
        // C3 00D0
        gbc.setState(0xff9, 0xca83, 0xd780, 0x3db6, 0x7cd0, 0xe63e, 0x0, 0x1);
        gbc.writeMem(0xff9, { 0xc3, 0xd3, 0x26 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xca83, gbc.sp());
        EXPECT(0x26d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00D1
        gbc.setState(0x3bae, 0x525a, 0xbc40, 0xdd64, 0x5cd0, 0x5cc6, 0x0, 0x1);
        gbc.writeMem(0x3bae, { 0xc3, 0x6f, 0x6b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x525a, gbc.sp());
        EXPECT(0x6b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00D2
        gbc.setState(0x946a, 0x1742, 0xdaf0, 0xe2e1, 0xf2dc, 0x7a43, 0x0, 0x0);
        gbc.writeMem(0x946a, { 0xc3, 0x26, 0x8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1742, gbc.sp());
        EXPECT(0x826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x946a));
        EXPECT(0x26, gbc.readMem(0x946b));
        EXPECT(0x8, gbc.readMem(0x946c));
        // C3 00D3
        gbc.setState(0x34b1, 0xdfcc, 0xf6b0, 0xacd1, 0x56cf, 0x977b, 0x1, 0x1);
        gbc.writeMem(0x34b1, { 0xc3, 0xb3, 0xda });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0xdab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00D4
        gbc.setState(0x19e1, 0x3b56, 0xe1d0, 0x10a3, 0x27c2, 0x2b4, 0x1, 0x0);
        gbc.writeMem(0x19e1, { 0xc3, 0x98, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3b56, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00D6
        gbc.setState(0x3207, 0x8c8a, 0xd1e0, 0x2eee, 0x4879, 0x50d2, 0x0, 0x0);
        gbc.writeMem(0x3207, { 0xc3, 0x17, 0x9e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8c8a, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00D7
        gbc.setState(0x6676, 0xf03d, 0xbf60, 0x3c8c, 0xf6bf, 0xa016, 0x1, 0x1);
        gbc.writeMem(0x6676, { 0xc3, 0xc0, 0xb1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf03d, gbc.sp());
        EXPECT(0xb1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00D9
        gbc.setState(0xdb44, 0xd56e, 0x1840, 0x1b82, 0x8de6, 0xe4de, 0x1, 0x0);
        gbc.writeMem(0xdb44, { 0xc3, 0x50, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd56e, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdb44));
        EXPECT(0x50, gbc.readMem(0xdb45));
        EXPECT(0x89, gbc.readMem(0xdb46));
        // C3 00DA
        gbc.setState(0xa412, 0xb3e7, 0x5d90, 0xb236, 0xa65e, 0x22d0, 0x0, 0x1);
        gbc.writeMem(0xa412, { 0xc3, 0x82, 0x69 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb3e7, gbc.sp());
        EXPECT(0x6982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa412));
        EXPECT(0x82, gbc.readMem(0xa413));
        EXPECT(0x69, gbc.readMem(0xa414));
        // C3 00DC
        gbc.setState(0x7b2, 0x40c5, 0xf3c0, 0x5620, 0x2107, 0xd3dd, 0x1, 0x1);
        gbc.writeMem(0x7b2, { 0xc3, 0xab, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x40c5, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00DD
        gbc.setState(0x801, 0xed23, 0xfb0, 0x3fbb, 0xaa22, 0x55ea, 0x0, 0x1);
        gbc.writeMem(0x801, { 0xc3, 0x3c, 0x51 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xed23, gbc.sp());
        EXPECT(0x513c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00DE
        gbc.setState(0x2b8c, 0x2fdc, 0x2d0, 0xeac6, 0x6a83, 0x27b0, 0x0, 0x0);
        gbc.writeMem(0x2b8c, { 0xc3, 0x2f, 0x40 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0x402f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00DF
        gbc.setState(0xd3d0, 0xd993, 0x72b0, 0x1897, 0x98e4, 0xc677, 0x0, 0x1);
        gbc.writeMem(0xd3d0, { 0xc3, 0x3, 0x4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd993, gbc.sp());
        EXPECT(0x403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd3d0));
        EXPECT(0x3, gbc.readMem(0xd3d1));
        EXPECT(0x4, gbc.readMem(0xd3d2));
        // C3 00E0
        gbc.setState(0x9b72, 0x9a01, 0xdf50, 0x33cc, 0xaf36, 0xff97, 0x0, 0x0);
        gbc.writeMem(0x9b72, { 0xc3, 0x16, 0x77 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9a01, gbc.sp());
        EXPECT(0x7716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9b72));
        EXPECT(0x16, gbc.readMem(0x9b73));
        EXPECT(0x77, gbc.readMem(0x9b74));
        // C3 00E1
        gbc.setState(0xac27, 0xe309, 0xb950, 0xef74, 0x6a3f, 0xbd27, 0x1, 0x1);
        gbc.writeMem(0xac27, { 0xc3, 0x7c, 0x55 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe309, gbc.sp());
        EXPECT(0x557c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xac27));
        EXPECT(0x7c, gbc.readMem(0xac28));
        EXPECT(0x55, gbc.readMem(0xac29));
        // C3 00E2
        gbc.setState(0x1931, 0xb7a5, 0xf710, 0xf000, 0xd19b, 0x5326, 0x0, 0x0);
        gbc.writeMem(0x1931, { 0xc3, 0x38, 0xfa });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb7a5, gbc.sp());
        EXPECT(0xfa38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00E3
        gbc.setState(0x9963, 0xc8, 0x7810, 0xa722, 0x4331, 0xcfe4, 0x0, 0x1);
        gbc.writeMem(0x9963, { 0xc3, 0x57, 0x86 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0x8657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9963));
        EXPECT(0x57, gbc.readMem(0x9964));
        EXPECT(0x86, gbc.readMem(0x9965));
        // C3 00E4
        gbc.setState(0xb2d0, 0x81a4, 0x11e0, 0x86ad, 0xbffe, 0x888f, 0x1, 0x1);
        gbc.writeMem(0xb2d0, { 0xc3, 0x45, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0xe845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb2d0));
        EXPECT(0x45, gbc.readMem(0xb2d1));
        EXPECT(0xe8, gbc.readMem(0xb2d2));
        // C3 00E5
        gbc.setState(0x6f2f, 0x1801, 0x3500, 0xf38f, 0xa8f5, 0xf31f, 0x1, 0x0);
        gbc.writeMem(0x6f2f, { 0xc3, 0x8b, 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1801, gbc.sp());
        EXPECT(0x448b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00E6
        gbc.setState(0xe048, 0x2c45, 0xf6d0, 0x28ef, 0xb4fc, 0x4c87, 0x1, 0x0);
        gbc.writeMem(0xe048, { 0xc3, 0x78, 0x41 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2c45, gbc.sp());
        EXPECT(0x4178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe048));
        EXPECT(0x78, gbc.readMem(0xe049));
        EXPECT(0x41, gbc.readMem(0xe04a));
        // C3 00E7
        gbc.setState(0x8bcf, 0xf4ed, 0xe630, 0x60e8, 0xdfb3, 0xc4f, 0x0, 0x1);
        gbc.writeMem(0x8bcf, { 0xc3, 0xf9, 0xa0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf4ed, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8bcf));
        EXPECT(0xf9, gbc.readMem(0x8bd0));
        EXPECT(0xa0, gbc.readMem(0x8bd1));
        // C3 00E8
        gbc.setState(0x86dc, 0x6ac9, 0x3750, 0xbfae, 0xb2b9, 0x6096, 0x1, 0x1);
        gbc.writeMem(0x86dc, { 0xc3, 0x93, 0xee });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0xee93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x86dc));
        EXPECT(0x93, gbc.readMem(0x86dd));
        EXPECT(0xee, gbc.readMem(0x86de));
        // C3 00E9
        gbc.setState(0x7ffe, 0x1a1c, 0x7660, 0x473c, 0x329f, 0xae3e, 0x0, 0x1);
        gbc.writeMem(0x7ffe, { 0xc3, 0x26, 0x84 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1a1c, gbc.sp());
        EXPECT(0x8426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8000));
        // C3 00EA
        gbc.setState(0xb4eb, 0x2b2f, 0x5880, 0xc582, 0x94c5, 0xb416, 0x1, 0x1);
        gbc.writeMem(0xb4eb, { 0xc3, 0xd6, 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2b2f, gbc.sp());
        EXPECT(0x10d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb4eb));
        EXPECT(0xd6, gbc.readMem(0xb4ec));
        EXPECT(0x10, gbc.readMem(0xb4ed));
        // C3 00EB
        gbc.setState(0xbf03, 0x9e6c, 0xd040, 0x7daf, 0x7d99, 0x7c65, 0x0, 0x1);
        gbc.writeMem(0xbf03, { 0xc3, 0x82, 0x16 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9e6c, gbc.sp());
        EXPECT(0x1682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbf03));
        EXPECT(0x82, gbc.readMem(0xbf04));
        EXPECT(0x16, gbc.readMem(0xbf05));
        // C3 00EC
        gbc.setState(0x3e61, 0xae79, 0x2380, 0x6a27, 0x21b6, 0xf2cb, 0x1, 0x0);
        gbc.writeMem(0x3e61, { 0xc3, 0x10, 0x8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xae79, gbc.sp());
        EXPECT(0x810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00ED
        gbc.setState(0x2a7b, 0xe180, 0xc70, 0xfe44, 0x915, 0xde47, 0x1, 0x0);
        gbc.writeMem(0x2a7b, { 0xc3, 0x5d, 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe180, gbc.sp());
        EXPECT(0x2d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00EE
        gbc.setState(0x4b72, 0xd80e, 0x8a70, 0x2cbc, 0x4e04, 0xc05f, 0x1, 0x1);
        gbc.writeMem(0x4b72, { 0xc3, 0x21, 0x3e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd80e, gbc.sp());
        EXPECT(0x3e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00EF
        gbc.setState(0xa71f, 0x6525, 0x52d0, 0x5365, 0x1cbb, 0x930c, 0x1, 0x1);
        gbc.writeMem(0xa71f, { 0xc3, 0x8c, 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6525, gbc.sp());
        EXPECT(0x338c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa71f));
        EXPECT(0x8c, gbc.readMem(0xa720));
        EXPECT(0x33, gbc.readMem(0xa721));
        // C3 00F0
        gbc.setState(0xc010, 0x378a, 0x65a0, 0x796a, 0xf1a6, 0x1934, 0x1, 0x0);
        gbc.writeMem(0xc010, { 0xc3, 0xd2, 0xe5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x378a, gbc.sp());
        EXPECT(0xe5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc010));
        EXPECT(0xd2, gbc.readMem(0xc011));
        EXPECT(0xe5, gbc.readMem(0xc012));
        // C3 00F1
        gbc.setState(0x4cfa, 0x6b99, 0x3fe0, 0x6a23, 0x1abb, 0xa2a4, 0x0, 0x1);
        gbc.writeMem(0x4cfa, { 0xc3, 0xa4, 0x35 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6b99, gbc.sp());
        EXPECT(0x35a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00F2
        gbc.setState(0x5f87, 0xe215, 0x300, 0xf0ab, 0x8f49, 0x178d, 0x1, 0x1);
        gbc.writeMem(0x5f87, { 0xc3, 0x45, 0xe });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe215, gbc.sp());
        EXPECT(0xe45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00F3
        gbc.setState(0xbbaf, 0x8cb, 0x6f0, 0x4c78, 0xf90b, 0xfca4, 0x1, 0x0);
        gbc.writeMem(0xbbaf, { 0xc3, 0xc9, 0xb2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0xb2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbbaf));
        EXPECT(0xc9, gbc.readMem(0xbbb0));
        EXPECT(0xb2, gbc.readMem(0xbbb1));
        // C3 00F4
        gbc.setState(0x98c3, 0xf549, 0x5e10, 0xf69b, 0x7232, 0xcc50, 0x0, 0x0);
        gbc.writeMem(0x98c3, { 0xc3, 0x8e, 0x4b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf549, gbc.sp());
        EXPECT(0x4b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x98c3));
        EXPECT(0x8e, gbc.readMem(0x98c4));
        EXPECT(0x4b, gbc.readMem(0x98c5));
        // C3 00F5
        gbc.setState(0x8844, 0xf1c4, 0xb4c0, 0xd570, 0x1e19, 0x72a4, 0x0, 0x0);
        gbc.writeMem(0x8844, { 0xc3, 0x10, 0x18 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf1c4, gbc.sp());
        EXPECT(0x1810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8844));
        EXPECT(0x10, gbc.readMem(0x8845));
        EXPECT(0x18, gbc.readMem(0x8846));
        // C3 00F7
        gbc.setState(0xc59f, 0x10a0, 0xf850, 0xb020, 0x96fb, 0x534a, 0x1, 0x0);
        gbc.writeMem(0xc59f, { 0xc3, 0x42, 0x30 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x10a0, gbc.sp());
        EXPECT(0x3042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc59f));
        EXPECT(0x42, gbc.readMem(0xc5a0));
        EXPECT(0x30, gbc.readMem(0xc5a1));
        // C3 00F9
        gbc.setState(0x2511, 0x4e1, 0x2970, 0xf2de, 0xbfb3, 0xcb06, 0x1, 0x0);
        gbc.writeMem(0x2511, { 0xc3, 0x29, 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4e1, gbc.sp());
        EXPECT(0x7d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00FA
        gbc.setState(0x8814, 0x9b09, 0xa870, 0x257c, 0xc10c, 0x5248, 0x0, 0x0);
        gbc.writeMem(0x8814, { 0xc3, 0xfc, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9b09, gbc.sp());
        EXPECT(0x4afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8814));
        EXPECT(0xfc, gbc.readMem(0x8815));
        EXPECT(0x4a, gbc.readMem(0x8816));
        // C3 00FB
        gbc.setState(0x7303, 0xcbf1, 0xb980, 0x22b7, 0x1ed, 0xaf9a, 0x1, 0x0);
        gbc.writeMem(0x7303, { 0xc3, 0x1c, 0xed });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0xed1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00FC
        gbc.setState(0x507e, 0x8732, 0x1110, 0x71fe, 0x22c, 0xfa06, 0x1, 0x1);
        gbc.writeMem(0x507e, { 0xc3, 0x20, 0xfa });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0xfa20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 00FD
        gbc.setState(0x13eb, 0x2574, 0x7340, 0x6446, 0xc37f, 0x22e1, 0x0, 0x0);
        gbc.writeMem(0x13eb, { 0xc3, 0x74, 0xfb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2574, gbc.sp());
        EXPECT(0xfb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 00FE
        gbc.setState(0xd91c, 0x8625, 0xa790, 0x9c6, 0xf9b4, 0xb0b1, 0x1, 0x1);
        gbc.writeMem(0xd91c, { 0xc3, 0xe4, 0x9d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8625, gbc.sp());
        EXPECT(0x9de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd91c));
        EXPECT(0xe4, gbc.readMem(0xd91d));
        EXPECT(0x9d, gbc.readMem(0xd91e));
        // C3 00FF
        gbc.setState(0x9c2b, 0x4965, 0xfe80, 0xe745, 0x9b41, 0x848e, 0x0, 0x0);
        gbc.writeMem(0x9c2b, { 0xc3, 0x88, 0x86 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4965, gbc.sp());
        EXPECT(0x8688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9c2b));
        EXPECT(0x88, gbc.readMem(0x9c2c));
        EXPECT(0x86, gbc.readMem(0x9c2d));
        // C3 0100
        gbc.setState(0x597e, 0x9fcf, 0x9710, 0x363e, 0x6b72, 0x2cd2, 0x1, 0x0);
        gbc.writeMem(0x597e, { 0xc3, 0x98, 0x9e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9fcf, gbc.sp());
        EXPECT(0x9e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0101
        gbc.setState(0xddf, 0xb91b, 0x1300, 0x8e4e, 0x30e6, 0xdf88, 0x1, 0x0);
        gbc.writeMem(0xddf, { 0xc3, 0x68, 0x2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb91b, gbc.sp());
        EXPECT(0x268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0102
        gbc.setState(0x553f, 0x4edb, 0x4580, 0x9962, 0xaa23, 0x6cb2, 0x0, 0x0);
        gbc.writeMem(0x553f, { 0xc3, 0x35, 0xba });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4edb, gbc.sp());
        EXPECT(0xba35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0103
        gbc.setState(0xe070, 0x27d7, 0xb070, 0xc54b, 0xa75b, 0xabf3, 0x0, 0x1);
        gbc.writeMem(0xe070, { 0xc3, 0xcd, 0x99 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x27d7, gbc.sp());
        EXPECT(0x99cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe070));
        EXPECT(0xcd, gbc.readMem(0xe071));
        EXPECT(0x99, gbc.readMem(0xe072));
        // C3 0104
        gbc.setState(0x23b6, 0x6b58, 0xce80, 0x76bb, 0xaf7, 0x1c89, 0x1, 0x0);
        gbc.writeMem(0x23b6, { 0xc3, 0x4b, 0x50 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6b58, gbc.sp());
        EXPECT(0x504b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0105
        gbc.setState(0x59ba, 0xf461, 0x2e70, 0x1d5, 0x486a, 0x4d3d, 0x1, 0x0);
        gbc.writeMem(0x59ba, { 0xc3, 0xa1, 0xc2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf461, gbc.sp());
        EXPECT(0xc2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0106
        gbc.setState(0x551c, 0xb078, 0xac10, 0xaeca, 0x37fd, 0xd4a3, 0x0, 0x1);
        gbc.writeMem(0x551c, { 0xc3, 0xbf, 0x15 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb078, gbc.sp());
        EXPECT(0x15bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0107
        gbc.setState(0x2c14, 0xbf9f, 0xa8b0, 0x4542, 0x6056, 0xff69, 0x0, 0x1);
        gbc.writeMem(0x2c14, { 0xc3, 0x40, 0xce });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0xce40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0108
        gbc.setState(0x55ac, 0xae6e, 0xd660, 0xc1f7, 0x68be, 0x330e, 0x0, 0x0);
        gbc.writeMem(0x55ac, { 0xc3, 0x49, 0xc5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xae6e, gbc.sp());
        EXPECT(0xc549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0109
        gbc.setState(0x474e, 0x10f1, 0x9cb0, 0x8419, 0x4428, 0x73a0, 0x1, 0x1);
        gbc.writeMem(0x474e, { 0xc3, 0x92, 0x3f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x10f1, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 010A
        gbc.setState(0x2a2a, 0x523, 0xacb0, 0x2edf, 0xe3dd, 0x51d6, 0x0, 0x0);
        gbc.writeMem(0x2a2a, { 0xc3, 0x86, 0x31 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x523, gbc.sp());
        EXPECT(0x3186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 010B
        gbc.setState(0xaca3, 0xb278, 0xabd0, 0x9450, 0x5753, 0x4f1, 0x0, 0x1);
        gbc.writeMem(0xaca3, { 0xc3, 0x70, 0x19 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb278, gbc.sp());
        EXPECT(0x1970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaca3));
        EXPECT(0x70, gbc.readMem(0xaca4));
        EXPECT(0x19, gbc.readMem(0xaca5));
        // C3 010C
        gbc.setState(0x2e4d, 0xcbb1, 0xf9a0, 0xb2dd, 0xed49, 0x7d04, 0x1, 0x1);
        gbc.writeMem(0x2e4d, { 0xc3, 0xbe, 0x9c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcbb1, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 010D
        gbc.setState(0x27e7, 0xce35, 0x15d0, 0xb78b, 0x9fd4, 0xca0c, 0x1, 0x1);
        gbc.writeMem(0x27e7, { 0xc3, 0x34, 0xd6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xce35, gbc.sp());
        EXPECT(0xd634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 010E
        gbc.setState(0x2124, 0xe367, 0x6fc0, 0x3de7, 0xd0bf, 0xf7e, 0x1, 0x0);
        gbc.writeMem(0x2124, { 0xc3, 0x19, 0x52 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe367, gbc.sp());
        EXPECT(0x5219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 010F
        gbc.setState(0x7216, 0x361b, 0xd910, 0x8a, 0x468, 0x6307, 0x1, 0x1);
        gbc.writeMem(0x7216, { 0xc3, 0xd, 0xa7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x361b, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0110
        gbc.setState(0x48eb, 0x938a, 0xe660, 0xedf9, 0x43e6, 0xd582, 0x1, 0x1);
        gbc.writeMem(0x48eb, { 0xc3, 0x8c, 0x28 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x938a, gbc.sp());
        EXPECT(0x288c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0111
        gbc.setState(0x1e2, 0x7b67, 0xd700, 0xeb93, 0x1f07, 0x5ffd, 0x0, 0x1);
        gbc.writeMem(0x1e2, { 0xc3, 0x53, 0xd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7b67, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0112
        gbc.setState(0x59ac, 0x5856, 0xb140, 0xa09c, 0xaebc, 0x601d, 0x0, 0x0);
        gbc.writeMem(0x59ac, { 0xc3, 0xee, 0x21 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5856, gbc.sp());
        EXPECT(0x21ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0113
        gbc.setState(0x81bd, 0x7023, 0x3d90, 0x19cd, 0x7106, 0xf501, 0x1, 0x1);
        gbc.writeMem(0x81bd, { 0xc3, 0x4d, 0xac });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7023, gbc.sp());
        EXPECT(0xac4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x81bd));
        EXPECT(0x4d, gbc.readMem(0x81be));
        EXPECT(0xac, gbc.readMem(0x81bf));
        // C3 0114
        gbc.setState(0x24ce, 0xea62, 0xa9b0, 0x13cd, 0xd205, 0x18b6, 0x1, 0x0);
        gbc.writeMem(0x24ce, { 0xc3, 0xc4, 0xee });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xea62, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0115
        gbc.setState(0x5cbd, 0x4e43, 0xb950, 0xe51c, 0xc1f7, 0xff5d, 0x1, 0x0);
        gbc.writeMem(0x5cbd, { 0xc3, 0x90, 0xf8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4e43, gbc.sp());
        EXPECT(0xf890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0116
        gbc.setState(0x3913, 0x1fba, 0xdd30, 0x2bc8, 0xc60e, 0x46e5, 0x1, 0x1);
        gbc.writeMem(0x3913, { 0xc3, 0x76, 0xf0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1fba, gbc.sp());
        EXPECT(0xf076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0117
        gbc.setState(0xd4d0, 0x2ec5, 0x7650, 0x79e6, 0x3b77, 0x1890, 0x0, 0x1);
        gbc.writeMem(0xd4d0, { 0xc3, 0x3f, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2ec5, gbc.sp());
        EXPECT(0xc13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd4d0));
        EXPECT(0x3f, gbc.readMem(0xd4d1));
        EXPECT(0xc1, gbc.readMem(0xd4d2));
        // C3 0118
        gbc.setState(0xe456, 0xc0d7, 0x7db0, 0x6699, 0x637f, 0x2f4d, 0x1, 0x1);
        gbc.writeMem(0xe456, { 0xc3, 0x39, 0x67 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc0d7, gbc.sp());
        EXPECT(0x6739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe456));
        EXPECT(0x39, gbc.readMem(0xe457));
        EXPECT(0x67, gbc.readMem(0xe458));
        // C3 0119
        gbc.setState(0x74fd, 0x3339, 0x62c0, 0x78ef, 0x3262, 0x22dd, 0x1, 0x1);
        gbc.writeMem(0x74fd, { 0xc3, 0xd7, 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0x7ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 011C
        gbc.setState(0x6a9a, 0x7553, 0x9510, 0x1477, 0xf271, 0x701a, 0x0, 0x0);
        gbc.writeMem(0x6a9a, { 0xc3, 0x92, 0x5f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 011D
        gbc.setState(0x836e, 0xf2ae, 0x4400, 0x13d1, 0xfd5, 0x4e56, 0x0, 0x0);
        gbc.writeMem(0x836e, { 0xc3, 0xd9, 0x5a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf2ae, gbc.sp());
        EXPECT(0x5ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x836e));
        EXPECT(0xd9, gbc.readMem(0x836f));
        EXPECT(0x5a, gbc.readMem(0x8370));
        // C3 011E
        gbc.setState(0x363, 0x670f, 0xe9e0, 0xc310, 0xe80f, 0x28d9, 0x1, 0x0);
        gbc.writeMem(0x363, { 0xc3, 0x44, 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x670f, gbc.sp());
        EXPECT(0xc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 011F
        gbc.setState(0xd8a1, 0xb4b5, 0xb140, 0x4a16, 0xa4a, 0xe7b0, 0x1, 0x1);
        gbc.writeMem(0xd8a1, { 0xc3, 0x96, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb4b5, gbc.sp());
        EXPECT(0xc796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd8a1));
        EXPECT(0x96, gbc.readMem(0xd8a2));
        EXPECT(0xc7, gbc.readMem(0xd8a3));
        // C3 0120
        gbc.setState(0x9d04, 0xebcb, 0x6a0, 0x9c26, 0x61b0, 0x512d, 0x1, 0x1);
        gbc.writeMem(0x9d04, { 0xc3, 0xf8, 0x42 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0x42f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9d04));
        EXPECT(0xf8, gbc.readMem(0x9d05));
        EXPECT(0x42, gbc.readMem(0x9d06));
        // C3 0121
        gbc.setState(0x1b06, 0x4534, 0x9bf0, 0x483a, 0x59d6, 0xeb1f, 0x0, 0x0);
        gbc.writeMem(0x1b06, { 0xc3, 0xa, 0x22 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4534, gbc.sp());
        EXPECT(0x220a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0122
        gbc.setState(0x81ba, 0x4a0, 0xbe40, 0xa824, 0xf9f1, 0xd2dc, 0x0, 0x1);
        gbc.writeMem(0x81ba, { 0xc3, 0x2b, 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4a0, gbc.sp());
        EXPECT(0x912b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x81ba));
        EXPECT(0x2b, gbc.readMem(0x81bb));
        EXPECT(0x91, gbc.readMem(0x81bc));
        // C3 0123
        gbc.setState(0x768c, 0x10df, 0xc440, 0xc2eb, 0x4d03, 0x75e5, 0x0, 0x1);
        gbc.writeMem(0x768c, { 0xc3, 0xff, 0x81 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x10df, gbc.sp());
        EXPECT(0x81ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0124
        gbc.setState(0xdd31, 0x566f, 0x9120, 0x6117, 0x4ee1, 0xf26, 0x0, 0x1);
        gbc.writeMem(0xdd31, { 0xc3, 0x80, 0x33 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x566f, gbc.sp());
        EXPECT(0x3380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdd31));
        EXPECT(0x80, gbc.readMem(0xdd32));
        EXPECT(0x33, gbc.readMem(0xdd33));
        // C3 0125
        gbc.setState(0xd0d0, 0x203f, 0x7ad0, 0x1ded, 0x4e3, 0x5fac, 0x1, 0x0);
        gbc.writeMem(0xd0d0, { 0xc3, 0x46, 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x2b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd0d0));
        EXPECT(0x46, gbc.readMem(0xd0d1));
        EXPECT(0x2b, gbc.readMem(0xd0d2));
        // C3 0126
        gbc.setState(0x6311, 0x23d3, 0x3120, 0xa833, 0xaecc, 0x6653, 0x1, 0x1);
        gbc.writeMem(0x6311, { 0xc3, 0x36, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x23d3, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0127
        gbc.setState(0xd729, 0xaadf, 0xfb00, 0x9f6, 0x4e5a, 0x2bec, 0x0, 0x0);
        gbc.writeMem(0xd729, { 0xc3, 0xcf, 0x2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaadf, gbc.sp());
        EXPECT(0x2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd729));
        EXPECT(0xcf, gbc.readMem(0xd72a));
        EXPECT(0x2, gbc.readMem(0xd72b));
        // C3 0128
        gbc.setState(0x4ec1, 0xa40a, 0x4fe0, 0xda90, 0x71ed, 0x6f55, 0x1, 0x0);
        gbc.writeMem(0x4ec1, { 0xc3, 0x90, 0xb4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa40a, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0129
        gbc.setState(0xea83, 0xa421, 0xfdb0, 0x6fea, 0xe60e, 0xcbe, 0x1, 0x0);
        gbc.writeMem(0xea83, { 0xc3, 0xb2, 0xde });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa421, gbc.sp());
        EXPECT(0xdeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xea83));
        EXPECT(0xb2, gbc.readMem(0xea84));
        EXPECT(0xde, gbc.readMem(0xea85));
        // C3 012A
        gbc.setState(0x51f, 0xfa44, 0x91c0, 0x4d71, 0x64e3, 0xa325, 0x1, 0x1);
        gbc.writeMem(0x51f, { 0xc3, 0xf1, 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfa44, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 012C
        gbc.setState(0xb283, 0xc9d, 0x7610, 0xfadc, 0x3c94, 0xd57d, 0x1, 0x1);
        gbc.writeMem(0xb283, { 0xc3, 0xdf, 0xcf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc9d, gbc.sp());
        EXPECT(0xcfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb283));
        EXPECT(0xdf, gbc.readMem(0xb284));
        EXPECT(0xcf, gbc.readMem(0xb285));
        // C3 012D
        gbc.setState(0xadfc, 0x2dde, 0x6b90, 0x21bc, 0x570, 0x455f, 0x1, 0x1);
        gbc.writeMem(0xadfc, { 0xc3, 0xb9, 0xd1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2dde, gbc.sp());
        EXPECT(0xd1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xadfc));
        EXPECT(0xb9, gbc.readMem(0xadfd));
        EXPECT(0xd1, gbc.readMem(0xadfe));
        // C3 012E
        gbc.setState(0x1836, 0xcb53, 0xc190, 0x613f, 0x13dd, 0xf2, 0x0, 0x1);
        gbc.writeMem(0x1836, { 0xc3, 0x9e, 0xf6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcb53, gbc.sp());
        EXPECT(0xf69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 012F
        gbc.setState(0x8611, 0x2a61, 0x2890, 0x2ca8, 0x4bb1, 0xd75b, 0x1, 0x1);
        gbc.writeMem(0x8611, { 0xc3, 0xca, 0xd1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2a61, gbc.sp());
        EXPECT(0xd1ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8611));
        EXPECT(0xca, gbc.readMem(0x8612));
        EXPECT(0xd1, gbc.readMem(0x8613));
        // C3 0130
        gbc.setState(0xc191, 0x539c, 0x8cb0, 0x44a9, 0xd870, 0xba55, 0x1, 0x1);
        gbc.writeMem(0xc191, { 0xc3, 0xa9, 0xc0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x539c, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc191));
        EXPECT(0xa9, gbc.readMem(0xc192));
        EXPECT(0xc0, gbc.readMem(0xc193));
        // C3 0131
        gbc.setState(0x8822, 0x4576, 0xe610, 0x407c, 0x6d87, 0x2ed, 0x1, 0x1);
        gbc.writeMem(0x8822, { 0xc3, 0x16, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4576, gbc.sp());
        EXPECT(0xb916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8822));
        EXPECT(0x16, gbc.readMem(0x8823));
        EXPECT(0xb9, gbc.readMem(0x8824));
        // C3 0132
        gbc.setState(0xf22, 0x7f22, 0xb940, 0xcf8b, 0x3e90, 0x98ba, 0x0, 0x1);
        gbc.writeMem(0xf22, { 0xc3, 0xab, 0x4d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7f22, gbc.sp());
        EXPECT(0x4dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0133
        gbc.setState(0x83d9, 0xc6cb, 0x47a0, 0xea8c, 0x4c31, 0x1c5, 0x1, 0x0);
        gbc.writeMem(0x83d9, { 0xc3, 0x20, 0x3c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc6cb, gbc.sp());
        EXPECT(0x3c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x83d9));
        EXPECT(0x20, gbc.readMem(0x83da));
        EXPECT(0x3c, gbc.readMem(0x83db));
        // C3 0134
        gbc.setState(0x3b66, 0x7d38, 0x70b0, 0x606e, 0x5789, 0x6da7, 0x0, 0x0);
        gbc.writeMem(0x3b66, { 0xc3, 0x5b, 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0x915b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0135
        gbc.setState(0x21a1, 0xeb34, 0x2ac0, 0x4d80, 0x76eb, 0xa996, 0x0, 0x1);
        gbc.writeMem(0x21a1, { 0xc3, 0xcf, 0xcb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeb34, gbc.sp());
        EXPECT(0xcbcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0136
        gbc.setState(0x99c7, 0xead3, 0xdd40, 0x68eb, 0x275, 0x10ec, 0x1, 0x1);
        gbc.writeMem(0x99c7, { 0xc3, 0x33, 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xead3, gbc.sp());
        EXPECT(0x1033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x99c7));
        EXPECT(0x33, gbc.readMem(0x99c8));
        EXPECT(0x10, gbc.readMem(0x99c9));
        // C3 0137
        gbc.setState(0x8346, 0xa452, 0x9f10, 0x7750, 0x547b, 0x6495, 0x1, 0x0);
        gbc.writeMem(0x8346, { 0xc3, 0x8, 0x50 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa452, gbc.sp());
        EXPECT(0x5008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8346));
        EXPECT(0x8, gbc.readMem(0x8347));
        EXPECT(0x50, gbc.readMem(0x8348));
        // C3 0138
        gbc.setState(0x80c8, 0xb38, 0x7810, 0x4106, 0x145d, 0xaa2a, 0x0, 0x0);
        gbc.writeMem(0x80c8, { 0xc3, 0xe2, 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x80c8));
        EXPECT(0xe2, gbc.readMem(0x80c9));
        EXPECT(0xd9, gbc.readMem(0x80ca));
        // C3 0139
        gbc.setState(0x45e3, 0xd65c, 0xce20, 0x80f7, 0x2c32, 0x1d76, 0x1, 0x0);
        gbc.writeMem(0x45e3, { 0xc3, 0x76, 0xba });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd65c, gbc.sp());
        EXPECT(0xba76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 013A
        gbc.setState(0x4ad3, 0x7655, 0x1b30, 0x49e0, 0x4359, 0x9178, 0x0, 0x1);
        gbc.writeMem(0x4ad3, { 0xc3, 0xb8, 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7655, gbc.sp());
        EXPECT(0x2db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 013B
        gbc.setState(0xd7c, 0xfc24, 0xf320, 0x7388, 0xe0aa, 0x8f88, 0x0, 0x1);
        gbc.writeMem(0xd7c, { 0xc3, 0x9c, 0xf0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfc24, gbc.sp());
        EXPECT(0xf09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 013C
        gbc.setState(0x1055, 0x9827, 0x9890, 0x7e48, 0x28f1, 0x7904, 0x1, 0x0);
        gbc.writeMem(0x1055, { 0xc3, 0xa, 0xee });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0xee0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 013D
        gbc.setState(0x49ad, 0xfb9a, 0xc840, 0xab56, 0xb3b0, 0xb6a4, 0x0, 0x1);
        gbc.writeMem(0x49ad, { 0xc3, 0x41, 0xa6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0xa641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 013E
        gbc.setState(0x66b3, 0x63e, 0xb60, 0xddef, 0x3ed7, 0x7652, 0x1, 0x0);
        gbc.writeMem(0x66b3, { 0xc3, 0x90, 0xc0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x63e, gbc.sp());
        EXPECT(0xc090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 013F
        gbc.setState(0xabf8, 0xb59a, 0x58e0, 0x5295, 0xe94d, 0xac4e, 0x0, 0x1);
        gbc.writeMem(0xabf8, { 0xc3, 0xaf, 0x82 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0x82af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xabf8));
        EXPECT(0xaf, gbc.readMem(0xabf9));
        EXPECT(0x82, gbc.readMem(0xabfa));
        // C3 0140
        gbc.setState(0xf6d, 0x892d, 0xa8e0, 0x5af0, 0x654c, 0x31f3, 0x0, 0x0);
        gbc.writeMem(0xf6d, { 0xc3, 0xa9, 0x36 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x892d, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0141
        gbc.setState(0x380a, 0x7fd7, 0x2840, 0x261e, 0xd477, 0x9bc7, 0x1, 0x0);
        gbc.writeMem(0x380a, { 0xc3, 0xe1, 0x1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7fd7, gbc.sp());
        EXPECT(0x1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0142
        gbc.setState(0x6a83, 0xb3b2, 0x9b50, 0xbd9, 0xe3a1, 0xf03f, 0x0, 0x1);
        gbc.writeMem(0x6a83, { 0xc3, 0x17, 0xca });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb3b2, gbc.sp());
        EXPECT(0xca17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0143
        gbc.setState(0x5c2a, 0x24b0, 0x12e0, 0xaf8, 0xe677, 0xd860, 0x0, 0x1);
        gbc.writeMem(0x5c2a, { 0xc3, 0x6, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x24b0, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0144
        gbc.setState(0xcad4, 0xb64d, 0x2ef0, 0xb6b5, 0x9de6, 0x8d55, 0x0, 0x1);
        gbc.writeMem(0xcad4, { 0xc3, 0x30, 0x72 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb64d, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcad4));
        EXPECT(0x30, gbc.readMem(0xcad5));
        EXPECT(0x72, gbc.readMem(0xcad6));
        // C3 0145
        gbc.setState(0xa2ed, 0xd46b, 0xa950, 0xd1fe, 0xce31, 0xe8ee, 0x0, 0x1);
        gbc.writeMem(0xa2ed, { 0xc3, 0x8a, 0xe });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd46b, gbc.sp());
        EXPECT(0xe8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa2ed));
        EXPECT(0x8a, gbc.readMem(0xa2ee));
        EXPECT(0xe, gbc.readMem(0xa2ef));
        // C3 0146
        gbc.setState(0x38b4, 0x695c, 0xa3c0, 0x6cc7, 0x762e, 0x27ac, 0x1, 0x0);
        gbc.writeMem(0x38b4, { 0xc3, 0xb3, 0x3e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x695c, gbc.sp());
        EXPECT(0x3eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0147
        gbc.setState(0x7f7c, 0x955e, 0xc410, 0x3785, 0x46d0, 0xb49e, 0x0, 0x1);
        gbc.writeMem(0x7f7c, { 0xc3, 0xd2, 0xc2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x955e, gbc.sp());
        EXPECT(0xc2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0148
        gbc.setState(0xb044, 0xd4e2, 0xcd70, 0x19fe, 0xfe96, 0x2d55, 0x0, 0x1);
        gbc.writeMem(0xb044, { 0xc3, 0x5f, 0x2a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd4e2, gbc.sp());
        EXPECT(0x2a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb044));
        EXPECT(0x5f, gbc.readMem(0xb045));
        EXPECT(0x2a, gbc.readMem(0xb046));
        // C3 0149
        gbc.setState(0xb150, 0x238, 0x5680, 0x33cf, 0x5969, 0x73ad, 0x0, 0x1);
        gbc.writeMem(0xb150, { 0xc3, 0x34, 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x238, gbc.sp());
        EXPECT(0xc934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb150));
        EXPECT(0x34, gbc.readMem(0xb151));
        EXPECT(0xc9, gbc.readMem(0xb152));
        // C3 014A
        gbc.setState(0x8b26, 0xd65c, 0x1b00, 0xa48e, 0x8ccf, 0x5fa7, 0x0, 0x0);
        gbc.writeMem(0x8b26, { 0xc3, 0xef, 0xd7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd65c, gbc.sp());
        EXPECT(0xd7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8b26));
        EXPECT(0xef, gbc.readMem(0x8b27));
        EXPECT(0xd7, gbc.readMem(0x8b28));
        // C3 014B
        gbc.setState(0x6c28, 0xf5e0, 0xf7a0, 0xf340, 0xdbf5, 0xb59a, 0x1, 0x0);
        gbc.writeMem(0x6c28, { 0xc3, 0xb2, 0x8b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf5e0, gbc.sp());
        EXPECT(0x8bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 014D
        gbc.setState(0x687a, 0x57c4, 0x81b0, 0xd5fc, 0x51bd, 0x521, 0x0, 0x1);
        gbc.writeMem(0x687a, { 0xc3, 0x2f, 0x84 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0x842f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 014F
        gbc.setState(0x2b14, 0x7edd, 0x85c0, 0x3a22, 0x2c00, 0x17d5, 0x1, 0x0);
        gbc.writeMem(0x2b14, { 0xc3, 0xf3, 0x6b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7edd, gbc.sp());
        EXPECT(0x6bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0150
        gbc.setState(0xe55b, 0x87e5, 0x3f80, 0xfc44, 0x2a55, 0x47fa, 0x0, 0x0);
        gbc.writeMem(0xe55b, { 0xc3, 0x8d, 0x84 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0x848d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe55b));
        EXPECT(0x8d, gbc.readMem(0xe55c));
        EXPECT(0x84, gbc.readMem(0xe55d));
        // C3 0151
        gbc.setState(0xb349, 0xb1f1, 0x9020, 0x5944, 0xeda5, 0xba18, 0x1, 0x0);
        gbc.writeMem(0xb349, { 0xc3, 0xcc, 0xfe });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0xfecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb349));
        EXPECT(0xcc, gbc.readMem(0xb34a));
        EXPECT(0xfe, gbc.readMem(0xb34b));
        // C3 0152
        gbc.setState(0xc87f, 0x241c, 0x25e0, 0xf87a, 0x4ba3, 0xaf95, 0x1, 0x1);
        gbc.writeMem(0xc87f, { 0xc3, 0xae, 0x1f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x241c, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc87f));
        EXPECT(0xae, gbc.readMem(0xc880));
        EXPECT(0x1f, gbc.readMem(0xc881));
        // C3 0153
        gbc.setState(0x8143, 0x4c6a, 0x6b00, 0x23ca, 0xe17f, 0x7e13, 0x1, 0x0);
        gbc.writeMem(0x8143, { 0xc3, 0xbd, 0x7f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4c6a, gbc.sp());
        EXPECT(0x7fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8143));
        EXPECT(0xbd, gbc.readMem(0x8144));
        EXPECT(0x7f, gbc.readMem(0x8145));
        // C3 0154
        gbc.setState(0x5155, 0x1a27, 0x90f0, 0xf6a2, 0x9cad, 0xc97c, 0x1, 0x1);
        gbc.writeMem(0x5155, { 0xc3, 0x8b, 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0x928b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0155
        gbc.setState(0x441b, 0x3575, 0x7b40, 0xc94c, 0xc0fb, 0xe6bf, 0x1, 0x1);
        gbc.writeMem(0x441b, { 0xc3, 0xe5, 0xf3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0xf3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0156
        gbc.setState(0xaf70, 0xa41f, 0x9b50, 0xc313, 0x86b2, 0x2030, 0x0, 0x0);
        gbc.writeMem(0xaf70, { 0xc3, 0x4e, 0x73 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa41f, gbc.sp());
        EXPECT(0x734e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaf70));
        EXPECT(0x4e, gbc.readMem(0xaf71));
        EXPECT(0x73, gbc.readMem(0xaf72));
        // C3 0157
        gbc.setState(0xc446, 0x56b7, 0x88b0, 0xc895, 0xe4b6, 0x6587, 0x1, 0x0);
        gbc.writeMem(0xc446, { 0xc3, 0x26, 0x99 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x56b7, gbc.sp());
        EXPECT(0x9926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc446));
        EXPECT(0x26, gbc.readMem(0xc447));
        EXPECT(0x99, gbc.readMem(0xc448));
        // C3 0158
        gbc.setState(0xb71e, 0xef3d, 0xafa0, 0x7e04, 0x72fc, 0xe40b, 0x1, 0x0);
        gbc.writeMem(0xb71e, { 0xc3, 0xaf, 0xd4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xef3d, gbc.sp());
        EXPECT(0xd4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb71e));
        EXPECT(0xaf, gbc.readMem(0xb71f));
        EXPECT(0xd4, gbc.readMem(0xb720));
        // C3 015A
        gbc.setState(0x1398, 0x3426, 0xd9a0, 0xe4a, 0x6003, 0xd107, 0x0, 0x0);
        gbc.writeMem(0x1398, { 0xc3, 0xf4, 0x68 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0x68f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 015B
        gbc.setState(0xe554, 0xadd3, 0x26c0, 0x876d, 0xde5a, 0x135, 0x0, 0x0);
        gbc.writeMem(0xe554, { 0xc3, 0x43, 0xc4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xadd3, gbc.sp());
        EXPECT(0xc443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe554));
        EXPECT(0x43, gbc.readMem(0xe555));
        EXPECT(0xc4, gbc.readMem(0xe556));
        // C3 015C
        gbc.setState(0x1c73, 0x7e4a, 0x44c0, 0xb4d7, 0x3719, 0x7077, 0x1, 0x1);
        gbc.writeMem(0x1c73, { 0xc3, 0xd1, 0xe0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7e4a, gbc.sp());
        EXPECT(0xe0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 015D
        gbc.setState(0x4211, 0xbab5, 0xa8c0, 0x3103, 0x234, 0x9aac, 0x1, 0x0);
        gbc.writeMem(0x4211, { 0xc3, 0x10, 0x8d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbab5, gbc.sp());
        EXPECT(0x8d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 015E
        gbc.setState(0x98b0, 0x2386, 0x3f90, 0x1e8e, 0x32b8, 0x343c, 0x0, 0x0);
        gbc.writeMem(0x98b0, { 0xc3, 0x83, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2386, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x98b0));
        EXPECT(0x83, gbc.readMem(0x98b1));
        EXPECT(0x1f, gbc.readMem(0x98b2));
        // C3 015F
        gbc.setState(0xbc45, 0x7fa3, 0xe0b0, 0x2d49, 0xdc02, 0x5f0e, 0x0, 0x1);
        gbc.writeMem(0xbc45, { 0xc3, 0xd5, 0xe2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7fa3, gbc.sp());
        EXPECT(0xe2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbc45));
        EXPECT(0xd5, gbc.readMem(0xbc46));
        EXPECT(0xe2, gbc.readMem(0xbc47));
        // C3 0160
        gbc.setState(0xa4a3, 0x849d, 0xe230, 0x99a8, 0xa995, 0xc554, 0x0, 0x1);
        gbc.writeMem(0xa4a3, { 0xc3, 0x86, 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x849d, gbc.sp());
        EXPECT(0x7686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa4a3));
        EXPECT(0x86, gbc.readMem(0xa4a4));
        EXPECT(0x76, gbc.readMem(0xa4a5));
        // C3 0161
        gbc.setState(0x3d56, 0x656f, 0xbe40, 0x182e, 0xce2d, 0x5413, 0x0, 0x0);
        gbc.writeMem(0x3d56, { 0xc3, 0xef, 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x656f, gbc.sp());
        EXPECT(0xb2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0162
        gbc.setState(0x6692, 0x18c7, 0x5a70, 0xef08, 0x65c8, 0x4920, 0x0, 0x0);
        gbc.writeMem(0x6692, { 0xc3, 0xee, 0x67 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x18c7, gbc.sp());
        EXPECT(0x67ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0163
        gbc.setState(0xef44, 0x95fc, 0xb3f0, 0xceaf, 0xdb88, 0x3738, 0x1, 0x1);
        gbc.writeMem(0xef44, { 0xc3, 0xa2, 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x95fc, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xef44));
        EXPECT(0xa2, gbc.readMem(0xef45));
        EXPECT(0xe9, gbc.readMem(0xef46));
        // C3 0164
        gbc.setState(0xe61f, 0x1101, 0xde70, 0xf027, 0x7fa4, 0xef25, 0x1, 0x0);
        gbc.writeMem(0xe61f, { 0xc3, 0x6b, 0x3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1101, gbc.sp());
        EXPECT(0x36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe61f));
        EXPECT(0x6b, gbc.readMem(0xe620));
        EXPECT(0x3, gbc.readMem(0xe621));
        // C3 0165
        gbc.setState(0xacff, 0x5143, 0x7e00, 0xab6b, 0xdb45, 0x22d5, 0x1, 0x1);
        gbc.writeMem(0xacff, { 0xc3, 0xba, 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5143, gbc.sp());
        EXPECT(0x94ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xacff));
        EXPECT(0xba, gbc.readMem(0xad00));
        EXPECT(0x94, gbc.readMem(0xad01));
        // C3 0166
        gbc.setState(0x32fb, 0x46ba, 0xb650, 0x42d6, 0xc261, 0x1b80, 0x0, 0x0);
        gbc.writeMem(0x32fb, { 0xc3, 0x3a, 0x67 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x46ba, gbc.sp());
        EXPECT(0x673a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0167
        gbc.setState(0xa868, 0x9842, 0xa50, 0xf13b, 0x8879, 0xde4a, 0x0, 0x0);
        gbc.writeMem(0xa868, { 0xc3, 0x78, 0xfc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9842, gbc.sp());
        EXPECT(0xfc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa868));
        EXPECT(0x78, gbc.readMem(0xa869));
        EXPECT(0xfc, gbc.readMem(0xa86a));
        // C3 0168
        gbc.setState(0xcbee, 0x2965, 0x72b0, 0xcc70, 0x7be1, 0xf919, 0x0, 0x0);
        gbc.writeMem(0xcbee, { 0xc3, 0x5a, 0x32 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2965, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcbee));
        EXPECT(0x5a, gbc.readMem(0xcbef));
        EXPECT(0x32, gbc.readMem(0xcbf0));
        // C3 0169
        gbc.setState(0x7dd8, 0x614, 0xb260, 0x2760, 0x5f58, 0xfc6d, 0x1, 0x1);
        gbc.writeMem(0x7dd8, { 0xc3, 0xb, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0x130b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 016A
        gbc.setState(0xa333, 0xc7f9, 0x24b0, 0x7c3e, 0x4e2f, 0x3383, 0x0, 0x1);
        gbc.writeMem(0xa333, { 0xc3, 0x90, 0xe });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0xe90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa333));
        EXPECT(0x90, gbc.readMem(0xa334));
        EXPECT(0xe, gbc.readMem(0xa335));
        // C3 016C
        gbc.setState(0x9d6b, 0xb056, 0x6c30, 0x7e05, 0xd0d2, 0x687b, 0x0, 0x1);
        gbc.writeMem(0x9d6b, { 0xc3, 0x8b, 0xad });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb056, gbc.sp());
        EXPECT(0xad8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9d6b));
        EXPECT(0x8b, gbc.readMem(0x9d6c));
        EXPECT(0xad, gbc.readMem(0x9d6d));
        // C3 016D
        gbc.setState(0xc3b4, 0x165b, 0xfc00, 0x1106, 0xcb36, 0xfe6d, 0x1, 0x0);
        gbc.writeMem(0xc3b4, { 0xc3, 0xe0, 0x1d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x165b, gbc.sp());
        EXPECT(0x1de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc3b4));
        EXPECT(0xe0, gbc.readMem(0xc3b5));
        EXPECT(0x1d, gbc.readMem(0xc3b6));
        // C3 016E
        gbc.setState(0x7704, 0x2c52, 0x3a70, 0x8fda, 0xcbf1, 0xd2f4, 0x1, 0x1);
        gbc.writeMem(0x7704, { 0xc3, 0xbd, 0xcc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2c52, gbc.sp());
        EXPECT(0xccbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 016F
        gbc.setState(0xe736, 0x608f, 0x6d10, 0x7416, 0xa90c, 0xf176, 0x1, 0x1);
        gbc.writeMem(0xe736, { 0xc3, 0x44, 0x79 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x608f, gbc.sp());
        EXPECT(0x7944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe736));
        EXPECT(0x44, gbc.readMem(0xe737));
        EXPECT(0x79, gbc.readMem(0xe738));
        // C3 0170
        gbc.setState(0x674f, 0x1007, 0xff70, 0x5841, 0xd03b, 0x2f5f, 0x0, 0x1);
        gbc.writeMem(0x674f, { 0xc3, 0x1f, 0xd2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0xd21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0171
        gbc.setState(0xd538, 0xf566, 0x8710, 0x5796, 0x2cad, 0xda42, 0x0, 0x1);
        gbc.writeMem(0xd538, { 0xc3, 0x65, 0xc0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf566, gbc.sp());
        EXPECT(0xc065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd538));
        EXPECT(0x65, gbc.readMem(0xd539));
        EXPECT(0xc0, gbc.readMem(0xd53a));
        // C3 0172
        gbc.setState(0x1eea, 0x7484, 0xd940, 0x725c, 0xc014, 0x4164, 0x0, 0x1);
        gbc.writeMem(0x1eea, { 0xc3, 0xb7, 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0x3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0173
        gbc.setState(0x7c5c, 0x60b7, 0xb4c0, 0x7818, 0x8116, 0xb8a9, 0x0, 0x0);
        gbc.writeMem(0x7c5c, { 0xc3, 0x6d, 0x97 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x60b7, gbc.sp());
        EXPECT(0x976d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0174
        gbc.setState(0x48eb, 0x2283, 0x8620, 0x23cf, 0xf0ef, 0x6594, 0x0, 0x0);
        gbc.writeMem(0x48eb, { 0xc3, 0x8c, 0x28 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2283, gbc.sp());
        EXPECT(0x288c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0175
        gbc.setState(0x2bf8, 0x63c6, 0x74a0, 0x7e5e, 0x5bf3, 0xbfb0, 0x1, 0x0);
        gbc.writeMem(0x2bf8, { 0xc3, 0xa, 0x25 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x63c6, gbc.sp());
        EXPECT(0x250a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0176
        gbc.setState(0x24a2, 0x4390, 0x5ee0, 0x16ed, 0x3b01, 0xf251, 0x1, 0x1);
        gbc.writeMem(0x24a2, { 0xc3, 0xaa, 0xda });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4390, gbc.sp());
        EXPECT(0xdaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0177
        gbc.setState(0x5d2d, 0x8fb4, 0xa690, 0xf34a, 0xc9c8, 0xb195, 0x0, 0x0);
        gbc.writeMem(0x5d2d, { 0xc3, 0xb6, 0xc7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8fb4, gbc.sp());
        EXPECT(0xc7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0178
        gbc.setState(0x11b9, 0x31ae, 0x2860, 0x4084, 0xe0bf, 0x1cf4, 0x0, 0x0);
        gbc.writeMem(0x11b9, { 0xc3, 0xd3, 0x75 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x31ae, gbc.sp());
        EXPECT(0x75d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0179
        gbc.setState(0x7219, 0x3bbb, 0x960, 0xaea4, 0xff36, 0x39b, 0x0, 0x1);
        gbc.writeMem(0x7219, { 0xc3, 0x9f, 0x90 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x909f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 017A
        gbc.setState(0xbd1e, 0x7731, 0x93b0, 0x8dfa, 0xfb9e, 0x5b77, 0x1, 0x1);
        gbc.writeMem(0xbd1e, { 0xc3, 0x9c, 0xd1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7731, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbd1e));
        EXPECT(0x9c, gbc.readMem(0xbd1f));
        EXPECT(0xd1, gbc.readMem(0xbd20));
        // C3 017B
        gbc.setState(0x913e, 0x1403, 0xf900, 0x607f, 0xde01, 0x2826, 0x0, 0x1);
        gbc.writeMem(0x913e, { 0xc3, 0xa8, 0x16 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1403, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x913e));
        EXPECT(0xa8, gbc.readMem(0x913f));
        EXPECT(0x16, gbc.readMem(0x9140));
        // C3 017C
        gbc.setState(0x1b23, 0xdcbe, 0xd940, 0x9680, 0x199c, 0x4427, 0x0, 0x1);
        gbc.writeMem(0x1b23, { 0xc3, 0x66, 0x87 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdcbe, gbc.sp());
        EXPECT(0x8766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 017D
        gbc.setState(0xb541, 0x3882, 0x1d0, 0x1b8c, 0xf05c, 0xd740, 0x1, 0x1);
        gbc.writeMem(0xb541, { 0xc3, 0xc2, 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3882, gbc.sp());
        EXPECT(0x9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb541));
        EXPECT(0xc2, gbc.readMem(0xb542));
        EXPECT(0x9, gbc.readMem(0xb543));
        // C3 017E
        gbc.setState(0x8fc9, 0xc739, 0x4c80, 0xe984, 0x45e, 0xb2b7, 0x1, 0x0);
        gbc.writeMem(0x8fc9, { 0xc3, 0x9a, 0xd2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc739, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8fc9));
        EXPECT(0x9a, gbc.readMem(0x8fca));
        EXPECT(0xd2, gbc.readMem(0x8fcb));
        // C3 017F
        gbc.setState(0x69b3, 0x1d5a, 0x8850, 0x4295, 0xa47c, 0x4f33, 0x0, 0x1);
        gbc.writeMem(0x69b3, { 0xc3, 0x5c, 0x9d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d5a, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0180
        gbc.setState(0x9f57, 0x461e, 0xe9f0, 0x8caf, 0xf15c, 0x3e29, 0x1, 0x1);
        gbc.writeMem(0x9f57, { 0xc3, 0x97, 0x60 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x461e, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9f57));
        EXPECT(0x97, gbc.readMem(0x9f58));
        EXPECT(0x60, gbc.readMem(0x9f59));
        // C3 0181
        gbc.setState(0xb506, 0xfedb, 0x3040, 0x7e44, 0x616a, 0xecd, 0x0, 0x1);
        gbc.writeMem(0xb506, { 0xc3, 0x35, 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfedb, gbc.sp());
        EXPECT(0x7635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb506));
        EXPECT(0x35, gbc.readMem(0xb507));
        EXPECT(0x76, gbc.readMem(0xb508));
        // C3 0182
        gbc.setState(0x4ae7, 0x65d1, 0xc200, 0xa0b0, 0xa843, 0x352a, 0x1, 0x0);
        gbc.writeMem(0x4ae7, { 0xc3, 0xa0, 0x9a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x65d1, gbc.sp());
        EXPECT(0x9aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0183
        gbc.setState(0x5664, 0x2728, 0x52c0, 0x9aca, 0xeb98, 0x4d62, 0x1, 0x1);
        gbc.writeMem(0x5664, { 0xc3, 0x63, 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2728, gbc.sp());
        EXPECT(0x8a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0184
        gbc.setState(0x7df4, 0xdd38, 0xbcf0, 0xf6a4, 0x6297, 0xedef, 0x1, 0x1);
        gbc.writeMem(0x7df4, { 0xc3, 0x9, 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdd38, gbc.sp());
        EXPECT(0x4709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0186
        gbc.setState(0x6e73, 0x2f1, 0x8ef0, 0x956e, 0xa5ae, 0x571c, 0x0, 0x1);
        gbc.writeMem(0x6e73, { 0xc3, 0x37, 0xf5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2f1, gbc.sp());
        EXPECT(0xf537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0187
        gbc.setState(0xd41, 0x76e3, 0xc6a0, 0x5052, 0x90dd, 0x99c7, 0x0, 0x0);
        gbc.writeMem(0xd41, { 0xc3, 0x8f, 0x4f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x76e3, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0188
        gbc.setState(0xa50a, 0x6b43, 0xc7f0, 0x3df9, 0xc32e, 0xe325, 0x0, 0x1);
        gbc.writeMem(0xa50a, { 0xc3, 0x47, 0x8b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6b43, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa50a));
        EXPECT(0x47, gbc.readMem(0xa50b));
        EXPECT(0x8b, gbc.readMem(0xa50c));
        // C3 0189
        gbc.setState(0x9046, 0x27e1, 0x6d30, 0xf614, 0xe9c6, 0xbf7f, 0x0, 0x1);
        gbc.writeMem(0x9046, { 0xc3, 0x49, 0x97 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x27e1, gbc.sp());
        EXPECT(0x9749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9046));
        EXPECT(0x49, gbc.readMem(0x9047));
        EXPECT(0x97, gbc.readMem(0x9048));
        // C3 018A
        gbc.setState(0x3c71, 0x8e95, 0x1650, 0xe265, 0x93c7, 0x94b, 0x0, 0x1);
        gbc.writeMem(0x3c71, { 0xc3, 0x53, 0x4d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8e95, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 018B
        gbc.setState(0xbc87, 0xa795, 0x3020, 0x8ce, 0x71fb, 0x7b9e, 0x0, 0x0);
        gbc.writeMem(0xbc87, { 0xc3, 0x52, 0x60 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa795, gbc.sp());
        EXPECT(0x6052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbc87));
        EXPECT(0x52, gbc.readMem(0xbc88));
        EXPECT(0x60, gbc.readMem(0xbc89));
        // C3 018C
        gbc.setState(0x827f, 0x7da1, 0xa7f0, 0xacc8, 0x34ad, 0xfc81, 0x0, 0x1);
        gbc.writeMem(0x827f, { 0xc3, 0x13, 0xb8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7da1, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x827f));
        EXPECT(0x13, gbc.readMem(0x8280));
        EXPECT(0xb8, gbc.readMem(0x8281));
        // C3 018D
        gbc.setState(0xaced, 0x73f4, 0x1d40, 0xcc5e, 0xa10a, 0x34a9, 0x0, 0x1);
        gbc.writeMem(0xaced, { 0xc3, 0x60, 0x52 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x73f4, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaced));
        EXPECT(0x60, gbc.readMem(0xacee));
        EXPECT(0x52, gbc.readMem(0xacef));
        // C3 018E
        gbc.setState(0x184f, 0xdf6f, 0xd1c0, 0x66b0, 0x669f, 0x5070, 0x1, 0x0);
        gbc.writeMem(0x184f, { 0xc3, 0x79, 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x5779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 018F
        gbc.setState(0x3339, 0x621f, 0x8a80, 0x305f, 0xdb88, 0xea20, 0x1, 0x0);
        gbc.writeMem(0x3339, { 0xc3, 0x94, 0xac });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x621f, gbc.sp());
        EXPECT(0xac94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0190
        gbc.setState(0x1f23, 0x9b2f, 0x8820, 0x5717, 0x163f, 0x37f4, 0x0, 0x0);
        gbc.writeMem(0x1f23, { 0xc3, 0xf9, 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9b2f, gbc.sp());
        EXPECT(0x92f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0191
        gbc.setState(0xc9ec, 0x1b21, 0xa500, 0x2878, 0xa1a6, 0x7420, 0x0, 0x0);
        gbc.writeMem(0xc9ec, { 0xc3, 0x5d, 0x5b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1b21, gbc.sp());
        EXPECT(0x5b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc9ec));
        EXPECT(0x5d, gbc.readMem(0xc9ed));
        EXPECT(0x5b, gbc.readMem(0xc9ee));
        // C3 0192
        gbc.setState(0x5742, 0x6ca, 0x25f0, 0xc03, 0x2144, 0xfb3b, 0x1, 0x0);
        gbc.writeMem(0x5742, { 0xc3, 0xd7, 0x20 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6ca, gbc.sp());
        EXPECT(0x20d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0193
        gbc.setState(0xa740, 0x9d59, 0x26c0, 0x79a, 0x9f78, 0xfa99, 0x0, 0x0);
        gbc.writeMem(0xa740, { 0xc3, 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0xf7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa740));
        EXPECT(0xcb, gbc.readMem(0xa741));
        EXPECT(0xf7, gbc.readMem(0xa742));
        // C3 0194
        gbc.setState(0xc99e, 0x506a, 0x80, 0xcc94, 0x3b07, 0xc6f0, 0x1, 0x0);
        gbc.writeMem(0xc99e, { 0xc3, 0xd4, 0xdd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x506a, gbc.sp());
        EXPECT(0xddd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc99e));
        EXPECT(0xd4, gbc.readMem(0xc99f));
        EXPECT(0xdd, gbc.readMem(0xc9a0));
        // C3 0195
        gbc.setState(0x93ed, 0xeaf5, 0xab60, 0x952, 0x104, 0x749b, 0x1, 0x1);
        gbc.writeMem(0x93ed, { 0xc3, 0xde, 0x46 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeaf5, gbc.sp());
        EXPECT(0x46de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x93ed));
        EXPECT(0xde, gbc.readMem(0x93ee));
        EXPECT(0x46, gbc.readMem(0x93ef));
        // C3 0196
        gbc.setState(0x2a1b, 0x1fed, 0x1ad0, 0x502f, 0x9aff, 0x632, 0x0, 0x1);
        gbc.writeMem(0x2a1b, { 0xc3, 0x4e, 0x95 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1fed, gbc.sp());
        EXPECT(0x954e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0197
        gbc.setState(0xa745, 0x85ec, 0x4ec0, 0xaf08, 0xc28e, 0x6687, 0x0, 0x0);
        gbc.writeMem(0xa745, { 0xc3, 0x1, 0xe7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0xe701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa745));
        EXPECT(0x1, gbc.readMem(0xa746));
        EXPECT(0xe7, gbc.readMem(0xa747));
        // C3 0198
        gbc.setState(0xe61c, 0x2f90, 0x3e50, 0x33ac, 0x98b6, 0xc247, 0x1, 0x0);
        gbc.writeMem(0xe61c, { 0xc3, 0xe5, 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2f90, gbc.sp());
        EXPECT(0x76e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe61c));
        EXPECT(0xe5, gbc.readMem(0xe61d));
        EXPECT(0x76, gbc.readMem(0xe61e));
        // C3 0199
        gbc.setState(0xa030, 0x58c, 0x9330, 0x858b, 0x2dd6, 0xd70c, 0x1, 0x0);
        gbc.writeMem(0xa030, { 0xc3, 0xdb, 0x34 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x58c, gbc.sp());
        EXPECT(0x34db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa030));
        EXPECT(0xdb, gbc.readMem(0xa031));
        EXPECT(0x34, gbc.readMem(0xa032));
        // C3 019A
        gbc.setState(0x582, 0x9dff, 0xb910, 0x5e41, 0x7ed6, 0x5656, 0x0, 0x1);
        gbc.writeMem(0x582, { 0xc3, 0xd9, 0x50 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9dff, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 019B
        gbc.setState(0x7163, 0xbb28, 0x94b0, 0x76e5, 0xefd, 0x6a4, 0x1, 0x1);
        gbc.writeMem(0x7163, { 0xc3, 0x3d, 0x46 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x463d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 019C
        gbc.setState(0x18de, 0xafda, 0x3870, 0x2c0, 0x512, 0x3ef6, 0x0, 0x0);
        gbc.writeMem(0x18de, { 0xc3, 0x74, 0xab });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xafda, gbc.sp());
        EXPECT(0xab74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 019D
        gbc.setState(0x9efd, 0xdc26, 0x1f50, 0x526f, 0x8d73, 0xe928, 0x0, 0x0);
        gbc.writeMem(0x9efd, { 0xc3, 0x97, 0x4c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdc26, gbc.sp());
        EXPECT(0x4c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9efd));
        EXPECT(0x97, gbc.readMem(0x9efe));
        EXPECT(0x4c, gbc.readMem(0x9eff));
        // C3 019E
        gbc.setState(0xaaa1, 0xb6b0, 0xa7b0, 0xec22, 0x7160, 0x8197, 0x1, 0x0);
        gbc.writeMem(0xaaa1, { 0xc3, 0xee, 0x9d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb6b0, gbc.sp());
        EXPECT(0x9dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaaa1));
        EXPECT(0xee, gbc.readMem(0xaaa2));
        EXPECT(0x9d, gbc.readMem(0xaaa3));
        // C3 019F
        gbc.setState(0x3c44, 0xcd39, 0x1020, 0xc94f, 0x86a, 0x3334, 0x0, 0x1);
        gbc.writeMem(0x3c44, { 0xc3, 0xbc, 0xcc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcd39, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01A0
        gbc.setState(0xc843, 0x3623, 0x9960, 0x4267, 0x1155, 0x4d0, 0x1, 0x1);
        gbc.writeMem(0xc843, { 0xc3, 0x4e, 0x16 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3623, gbc.sp());
        EXPECT(0x164e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc843));
        EXPECT(0x4e, gbc.readMem(0xc844));
        EXPECT(0x16, gbc.readMem(0xc845));
        // C3 01A1
        gbc.setState(0xc60a, 0x7f29, 0x7d20, 0x78a9, 0x5e27, 0xb9e0, 0x0, 0x1);
        gbc.writeMem(0xc60a, { 0xc3, 0xe5, 0x24 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7f29, gbc.sp());
        EXPECT(0x24e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc60a));
        EXPECT(0xe5, gbc.readMem(0xc60b));
        EXPECT(0x24, gbc.readMem(0xc60c));
        // C3 01A2
        gbc.setState(0x9817, 0xf825, 0xeb30, 0xa2c6, 0xfefc, 0x7ac5, 0x0, 0x1);
        gbc.writeMem(0x9817, { 0xc3, 0xd3, 0x28 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf825, gbc.sp());
        EXPECT(0x28d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9817));
        EXPECT(0xd3, gbc.readMem(0x9818));
        EXPECT(0x28, gbc.readMem(0x9819));
        // C3 01A3
        gbc.setState(0xa91, 0x1f8f, 0x3ec0, 0x5e18, 0x9d6b, 0xc1f4, 0x1, 0x0);
        gbc.writeMem(0xa91, { 0xc3, 0xd7, 0xa4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1f8f, gbc.sp());
        EXPECT(0xa4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01A4
        gbc.setState(0x59ef, 0x11a2, 0x23f0, 0x7c6f, 0xb673, 0x9935, 0x0, 0x0);
        gbc.writeMem(0x59ef, { 0xc3, 0x7, 0x84 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0x8407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01A5
        gbc.setState(0x5132, 0x1e8f, 0x4d0, 0xea99, 0x227a, 0xbc4e, 0x0, 0x1);
        gbc.writeMem(0x5132, { 0xc3, 0x37, 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1e8f, gbc.sp());
        EXPECT(0x7237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01A6
        gbc.setState(0x60da, 0x9918, 0x8a90, 0x9911, 0x941e, 0x8a99, 0x0, 0x0);
        gbc.writeMem(0x60da, { 0xc3, 0x3, 0xb6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9918, gbc.sp());
        EXPECT(0xb603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01A7
        gbc.setState(0xe51b, 0xff9d, 0xf8a0, 0xb471, 0x638d, 0x9cb0, 0x1, 0x1);
        gbc.writeMem(0xe51b, { 0xc3, 0xe3, 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xff9d, gbc.sp());
        EXPECT(0xb3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe51b));
        EXPECT(0xe3, gbc.readMem(0xe51c));
        EXPECT(0xb3, gbc.readMem(0xe51d));
        // C3 01A8
        gbc.setState(0xbbb, 0x98f9, 0x9610, 0x8a86, 0x1586, 0x610, 0x1, 0x0);
        gbc.writeMem(0xbbb, { 0xc3, 0xfe, 0x95 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0x95fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01A9
        gbc.setState(0x6e91, 0xec8, 0x3d60, 0x5514, 0x446e, 0x8ae8, 0x1, 0x0);
        gbc.writeMem(0x6e91, { 0xc3, 0x52, 0xc2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xec8, gbc.sp());
        EXPECT(0xc252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01AB
        gbc.setState(0xb6bb, 0x4d8d, 0x3230, 0x595c, 0xb807, 0x1a9f, 0x0, 0x1);
        gbc.writeMem(0xb6bb, { 0xc3, 0x20, 0x8b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4d8d, gbc.sp());
        EXPECT(0x8b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb6bb));
        EXPECT(0x20, gbc.readMem(0xb6bc));
        EXPECT(0x8b, gbc.readMem(0xb6bd));
        // C3 01AE
        gbc.setState(0xda80, 0x4b16, 0x4d0, 0x90de, 0xcc5b, 0xa6fd, 0x1, 0x0);
        gbc.writeMem(0xda80, { 0xc3, 0x75, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4b16, gbc.sp());
        EXPECT(0xf875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xda80));
        EXPECT(0x75, gbc.readMem(0xda81));
        EXPECT(0xf8, gbc.readMem(0xda82));
        // C3 01AF
        gbc.setState(0xbd63, 0xcd03, 0xa970, 0x587e, 0x13af, 0x589, 0x1, 0x0);
        gbc.writeMem(0xbd63, { 0xc3, 0x58, 0xfc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcd03, gbc.sp());
        EXPECT(0xfc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbd63));
        EXPECT(0x58, gbc.readMem(0xbd64));
        EXPECT(0xfc, gbc.readMem(0xbd65));
        // C3 01B1
        gbc.setState(0x3778, 0x7b66, 0xf230, 0x183b, 0xe628, 0xbc02, 0x1, 0x0);
        gbc.writeMem(0x3778, { 0xc3, 0xec, 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b66, gbc.sp());
        EXPECT(0x8aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01B2
        gbc.setState(0x16c9, 0x72c2, 0x19e0, 0x1257, 0x126, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x16c9, { 0xc3, 0x2c, 0x34 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x72c2, gbc.sp());
        EXPECT(0x342c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01B3
        gbc.setState(0xd97f, 0x2106, 0xfb40, 0x657b, 0x15c2, 0x579, 0x0, 0x0);
        gbc.writeMem(0xd97f, { 0xc3, 0xe2, 0xe });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0xee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd97f));
        EXPECT(0xe2, gbc.readMem(0xd980));
        EXPECT(0xe, gbc.readMem(0xd981));
        // C3 01B4
        gbc.setState(0xc4fe, 0x8f11, 0x3ab0, 0xe77a, 0x6446, 0x5205, 0x1, 0x0);
        gbc.writeMem(0xc4fe, { 0xc3, 0x39, 0xcb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8f11, gbc.sp());
        EXPECT(0xcb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc4fe));
        EXPECT(0x39, gbc.readMem(0xc4ff));
        EXPECT(0xcb, gbc.readMem(0xc500));
        // C3 01B5
        gbc.setState(0x849e, 0x5103, 0xcff0, 0x4101, 0xd93c, 0x5572, 0x0, 0x0);
        gbc.writeMem(0x849e, { 0xc3, 0x11, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5103, gbc.sp());
        EXPECT(0x4311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x849e));
        EXPECT(0x11, gbc.readMem(0x849f));
        EXPECT(0x43, gbc.readMem(0x84a0));
        // C3 01B6
        gbc.setState(0x1ba2, 0x7a54, 0x71d0, 0x5555, 0x239a, 0x3d49, 0x0, 0x1);
        gbc.writeMem(0x1ba2, { 0xc3, 0xe6, 0x75 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7a54, gbc.sp());
        EXPECT(0x75e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01B7
        gbc.setState(0xe60a, 0xfc9a, 0xdc00, 0x2fbf, 0x4f9e, 0x816d, 0x0, 0x0);
        gbc.writeMem(0xe60a, { 0xc3, 0x12, 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfc9a, gbc.sp());
        EXPECT(0x4812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe60a));
        EXPECT(0x12, gbc.readMem(0xe60b));
        EXPECT(0x48, gbc.readMem(0xe60c));
        // C3 01B9
        gbc.setState(0xaaf5, 0xf0db, 0x8ba0, 0xba34, 0xca5, 0x5c4b, 0x1, 0x0);
        gbc.writeMem(0xaaf5, { 0xc3, 0x4c, 0xb9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf0db, gbc.sp());
        EXPECT(0xb94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaaf5));
        EXPECT(0x4c, gbc.readMem(0xaaf6));
        EXPECT(0xb9, gbc.readMem(0xaaf7));
        // C3 01BA
        gbc.setState(0xc6a7, 0x1437, 0xfb80, 0x81ff, 0xb8ee, 0x8da0, 0x1, 0x0);
        gbc.writeMem(0xc6a7, { 0xc3, 0x70, 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1437, gbc.sp());
        EXPECT(0x9b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc6a7));
        EXPECT(0x70, gbc.readMem(0xc6a8));
        EXPECT(0x9b, gbc.readMem(0xc6a9));
        // C3 01BB
        gbc.setState(0x6002, 0xf6ba, 0x4c10, 0xd6da, 0x1576, 0x90e9, 0x0, 0x0);
        gbc.writeMem(0x6002, { 0xc3, 0x3f, 0x5f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf6ba, gbc.sp());
        EXPECT(0x5f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01BC
        gbc.setState(0x5af0, 0xaac8, 0x3960, 0xfecb, 0x9346, 0xe714, 0x0, 0x0);
        gbc.writeMem(0x5af0, { 0xc3, 0xe5, 0x7f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaac8, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01BD
        gbc.setState(0xd8a3, 0x4ba0, 0xfd0, 0x9bab, 0xb16, 0x8bd3, 0x1, 0x0);
        gbc.writeMem(0xd8a3, { 0xc3, 0x97, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4ba0, gbc.sp());
        EXPECT(0xd597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd8a3));
        EXPECT(0x97, gbc.readMem(0xd8a4));
        EXPECT(0xd5, gbc.readMem(0xd8a5));
        // C3 01BE
        gbc.setState(0x798, 0x1ad6, 0xd580, 0x93e8, 0x8fce, 0x8930, 0x1, 0x0);
        gbc.writeMem(0x798, { 0xc3, 0x8e, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1ad6, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01BF
        gbc.setState(0x704a, 0x1f3b, 0x34f0, 0x7cd9, 0x1883, 0x45bb, 0x0, 0x0);
        gbc.writeMem(0x704a, { 0xc3, 0x30, 0xdd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1f3b, gbc.sp());
        EXPECT(0xdd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01C0
        gbc.setState(0xdd88, 0x4e6b, 0x42e0, 0xd8c, 0x788f, 0x5bd0, 0x1, 0x1);
        gbc.writeMem(0xdd88, { 0xc3, 0x25, 0xb3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4e6b, gbc.sp());
        EXPECT(0xb325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdd88));
        EXPECT(0x25, gbc.readMem(0xdd89));
        EXPECT(0xb3, gbc.readMem(0xdd8a));
        // C3 01C1
        gbc.setState(0xed1e, 0xf36, 0x1c70, 0x10f5, 0xb3f6, 0xa07a, 0x1, 0x1);
        gbc.writeMem(0xed1e, { 0xc3, 0x5a, 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0xd05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xed1e));
        EXPECT(0x5a, gbc.readMem(0xed1f));
        EXPECT(0xd0, gbc.readMem(0xed20));
        // C3 01C2
        gbc.setState(0x3eb1, 0xa35a, 0x9790, 0x36ec, 0xe458, 0x1649, 0x0, 0x0);
        gbc.writeMem(0x3eb1, { 0xc3, 0xd8, 0x9e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa35a, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01C3
        gbc.setState(0x7a41, 0xe33f, 0x8020, 0x1cbf, 0xa8e4, 0x9dce, 0x1, 0x0);
        gbc.writeMem(0x7a41, { 0xc3, 0xa8, 0x76 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe33f, gbc.sp());
        EXPECT(0x76a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01C4
        gbc.setState(0x15fa, 0xde25, 0xd850, 0xfa37, 0x3cec, 0xc99, 0x0, 0x0);
        gbc.writeMem(0x15fa, { 0xc3, 0x7d, 0xc0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xde25, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01C5
        gbc.setState(0x766f, 0x94f1, 0x2360, 0xa5fa, 0x964d, 0xfe3f, 0x1, 0x1);
        gbc.writeMem(0x766f, { 0xc3, 0x6b, 0x4e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x94f1, gbc.sp());
        EXPECT(0x4e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01C6
        gbc.setState(0x657, 0xdde0, 0xf8a0, 0x65e9, 0xdf9d, 0xb06c, 0x0, 0x0);
        gbc.writeMem(0x657, { 0xc3, 0xc, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdde0, gbc.sp());
        EXPECT(0x180c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01C7
        gbc.setState(0x6a54, 0x1d7, 0x1cf0, 0x2b27, 0x34c6, 0xd83e, 0x0, 0x0);
        gbc.writeMem(0x6a54, { 0xc3, 0x11, 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1d7, gbc.sp());
        EXPECT(0x6611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01C8
        gbc.setState(0x82aa, 0x71c9, 0x5b50, 0xa613, 0xe4a5, 0xa029, 0x0, 0x1);
        gbc.writeMem(0x82aa, { 0xc3, 0xb4, 0xbe });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x71c9, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x82aa));
        EXPECT(0xb4, gbc.readMem(0x82ab));
        EXPECT(0xbe, gbc.readMem(0x82ac));
        // C3 01C9
        gbc.setState(0xc357, 0x4182, 0x44e0, 0xfe25, 0x260d, 0xbf0c, 0x1, 0x1);
        gbc.writeMem(0xc357, { 0xc3, 0xb0, 0xcd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4182, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc357));
        EXPECT(0xb0, gbc.readMem(0xc358));
        EXPECT(0xcd, gbc.readMem(0xc359));
        // C3 01CA
        gbc.setState(0x7f6, 0x6170, 0x7f90, 0xc4f4, 0xa27a, 0x8dc2, 0x1, 0x1);
        gbc.writeMem(0x7f6, { 0xc3, 0x99, 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6170, gbc.sp());
        EXPECT(0x3399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01CB
        gbc.setState(0x1178, 0x9a75, 0x56d0, 0x97d5, 0x167f, 0xd7fb, 0x0, 0x1);
        gbc.writeMem(0x1178, { 0xc3, 0x87, 0xfa });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0xfa87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01CC
        gbc.setState(0xab5c, 0xa8f, 0x4ab0, 0x848f, 0x48c8, 0xe1a0, 0x1, 0x0);
        gbc.writeMem(0xab5c, { 0xc3, 0x55, 0x4e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa8f, gbc.sp());
        EXPECT(0x4e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xab5c));
        EXPECT(0x55, gbc.readMem(0xab5d));
        EXPECT(0x4e, gbc.readMem(0xab5e));
        // C3 01CD
        gbc.setState(0x7ff6, 0x3cba, 0x6240, 0x79df, 0xb0bf, 0xfd05, 0x0, 0x0);
        gbc.writeMem(0x7ff6, { 0xc3, 0x38, 0xe5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3cba, gbc.sp());
        EXPECT(0xe538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01CE
        gbc.setState(0x92f6, 0xf109, 0x70d0, 0xfcc3, 0x1451, 0xf7b4, 0x1, 0x0);
        gbc.writeMem(0x92f6, { 0xc3, 0x19, 0x87 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf109, gbc.sp());
        EXPECT(0x8719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x92f6));
        EXPECT(0x19, gbc.readMem(0x92f7));
        EXPECT(0x87, gbc.readMem(0x92f8));
        // C3 01CF
        gbc.setState(0xb2a9, 0x4f44, 0xc920, 0xc9af, 0xc930, 0x353e, 0x1, 0x1);
        gbc.writeMem(0xb2a9, { 0xc3, 0x54, 0xe1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4f44, gbc.sp());
        EXPECT(0xe154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb2a9));
        EXPECT(0x54, gbc.readMem(0xb2aa));
        EXPECT(0xe1, gbc.readMem(0xb2ab));
        // C3 01D0
        gbc.setState(0x31ad, 0x3d0a, 0xfe00, 0x13c0, 0xce02, 0x56a9, 0x1, 0x1);
        gbc.writeMem(0x31ad, { 0xc3, 0xe, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3d0a, gbc.sp());
        EXPECT(0xec0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01D1
        gbc.setState(0x5afc, 0xdd25, 0x7400, 0x9e38, 0x8043, 0x48b9, 0x0, 0x0);
        gbc.writeMem(0x5afc, { 0xc3, 0xfe, 0x5e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdd25, gbc.sp());
        EXPECT(0x5efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01D2
        gbc.setState(0x28ea, 0xc620, 0x6a80, 0xeb, 0xeaa7, 0xb3da, 0x1, 0x1);
        gbc.writeMem(0x28ea, { 0xc3, 0x23, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc620, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01D3
        gbc.setState(0x9ff8, 0x9e20, 0xebf0, 0x533d, 0x11df, 0xcd31, 0x1, 0x0);
        gbc.writeMem(0x9ff8, { 0xc3, 0x2c, 0x70 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9e20, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9ff8));
        EXPECT(0x2c, gbc.readMem(0x9ff9));
        EXPECT(0x70, gbc.readMem(0x9ffa));
        // C3 01D4
        gbc.setState(0x16ee, 0x5fa4, 0x3ee0, 0x935f, 0xb589, 0x4e1, 0x1, 0x1);
        gbc.writeMem(0x16ee, { 0xc3, 0x4c, 0xae });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5fa4, gbc.sp());
        EXPECT(0xae4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01D5
        gbc.setState(0x86a9, 0x95e5, 0x6bc0, 0xd96a, 0x2ddb, 0x4d54, 0x1, 0x1);
        gbc.writeMem(0x86a9, { 0xc3, 0x91, 0x34 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x95e5, gbc.sp());
        EXPECT(0x3491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x86a9));
        EXPECT(0x91, gbc.readMem(0x86aa));
        EXPECT(0x34, gbc.readMem(0x86ab));
        // C3 01D6
        gbc.setState(0x1081, 0xb309, 0x90e0, 0xf50d, 0x3deb, 0x8d15, 0x0, 0x1);
        gbc.writeMem(0x1081, { 0xc3, 0x5f, 0xcf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb309, gbc.sp());
        EXPECT(0xcf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01D7
        gbc.setState(0x7cf9, 0xc134, 0xec30, 0x4f30, 0xc3da, 0x2628, 0x1, 0x1);
        gbc.writeMem(0x7cf9, { 0xc3, 0x4c, 0x7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc134, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01D8
        gbc.setState(0x4371, 0x25ab, 0x92a0, 0x474a, 0x636b, 0xe58d, 0x1, 0x1);
        gbc.writeMem(0x4371, { 0xc3, 0x3b, 0x15 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x25ab, gbc.sp());
        EXPECT(0x153b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01D9
        gbc.setState(0xd31c, 0x51ed, 0x9090, 0x94c6, 0xa3df, 0xd89f, 0x1, 0x1);
        gbc.writeMem(0xd31c, { 0xc3, 0x68, 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x51ed, gbc.sp());
        EXPECT(0xac68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd31c));
        EXPECT(0x68, gbc.readMem(0xd31d));
        EXPECT(0xac, gbc.readMem(0xd31e));
        // C3 01DA
        gbc.setState(0xaf98, 0xd1c4, 0xe900, 0xb8cf, 0x425d, 0x8788, 0x0, 0x0);
        gbc.writeMem(0xaf98, { 0xc3, 0x26, 0x12 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd1c4, gbc.sp());
        EXPECT(0x1226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaf98));
        EXPECT(0x26, gbc.readMem(0xaf99));
        EXPECT(0x12, gbc.readMem(0xaf9a));
        // C3 01DB
        gbc.setState(0x312c, 0x7479, 0xbf90, 0xd58c, 0xe4b2, 0x2e6e, 0x0, 0x1);
        gbc.writeMem(0x312c, { 0xc3, 0x87, 0xed });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7479, gbc.sp());
        EXPECT(0xed87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01DC
        gbc.setState(0x8d04, 0xb6c7, 0x6fc0, 0xcfc2, 0x6a19, 0xd126, 0x1, 0x1);
        gbc.writeMem(0x8d04, { 0xc3, 0xd3, 0x4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb6c7, gbc.sp());
        EXPECT(0x4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8d04));
        EXPECT(0xd3, gbc.readMem(0x8d05));
        EXPECT(0x4, gbc.readMem(0x8d06));
        // C3 01DD
        gbc.setState(0xbe1, 0xf02c, 0x6590, 0xbdfd, 0x45cb, 0x6610, 0x0, 0x0);
        gbc.writeMem(0xbe1, { 0xc3, 0x77, 0x20 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf02c, gbc.sp());
        EXPECT(0x2077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01DE
        gbc.setState(0x3a83, 0x4dec, 0x3c00, 0x5a66, 0xa0e8, 0xf28c, 0x1, 0x1);
        gbc.writeMem(0x3a83, { 0xc3, 0xe, 0x97 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4dec, gbc.sp());
        EXPECT(0x970e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01DF
        gbc.setState(0xa429, 0x310a, 0x23e0, 0x261a, 0x2fb0, 0xbda3, 0x0, 0x1);
        gbc.writeMem(0xa429, { 0xc3, 0x9f, 0x51 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x310a, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa429));
        EXPECT(0x9f, gbc.readMem(0xa42a));
        EXPECT(0x51, gbc.readMem(0xa42b));
        // C3 01E0
        gbc.setState(0xe45d, 0xd924, 0xc020, 0x7185, 0x18a3, 0x1c6c, 0x0, 0x1);
        gbc.writeMem(0xe45d, { 0xc3, 0xd, 0x42 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd924, gbc.sp());
        EXPECT(0x420d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe45d));
        EXPECT(0xd, gbc.readMem(0xe45e));
        EXPECT(0x42, gbc.readMem(0xe45f));
        // C3 01E1
        gbc.setState(0x332e, 0xab36, 0x6c60, 0xffae, 0x9193, 0xbbc7, 0x0, 0x1);
        gbc.writeMem(0x332e, { 0xc3, 0x86, 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xab36, gbc.sp());
        EXPECT(0x7b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01E3
        gbc.setState(0x63fa, 0x73ba, 0x5680, 0x5d1d, 0x380e, 0x95f2, 0x1, 0x1);
        gbc.writeMem(0x63fa, { 0xc3, 0xe1, 0x8c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x73ba, gbc.sp());
        EXPECT(0x8ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01E4
        gbc.setState(0x39ee, 0x52c3, 0x2040, 0x4382, 0x673a, 0x2d57, 0x1, 0x1);
        gbc.writeMem(0x39ee, { 0xc3, 0x83, 0xc7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x52c3, gbc.sp());
        EXPECT(0xc783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01E5
        gbc.setState(0xdeb9, 0x1d46, 0x51b0, 0x5216, 0xdb42, 0xbabc, 0x0, 0x1);
        gbc.writeMem(0xdeb9, { 0xc3, 0xb8, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1d46, gbc.sp());
        EXPECT(0xf5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdeb9));
        EXPECT(0xb8, gbc.readMem(0xdeba));
        EXPECT(0xf5, gbc.readMem(0xdebb));
        // C3 01E7
        gbc.setState(0x7276, 0x66d1, 0x53c0, 0xf7d4, 0xe3c6, 0x8ba6, 0x1, 0x0);
        gbc.writeMem(0x7276, { 0xc3, 0x37, 0x66 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x66d1, gbc.sp());
        EXPECT(0x6637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01E8
        gbc.setState(0x5dcf, 0x3006, 0x64c0, 0xbef6, 0xae7c, 0xf3e8, 0x1, 0x1);
        gbc.writeMem(0x5dcf, { 0xc3, 0x6b, 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3006, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01E9
        gbc.setState(0x377c, 0xb4d6, 0x9a10, 0xf5e, 0x8c65, 0xf26e, 0x0, 0x1);
        gbc.writeMem(0x377c, { 0xc3, 0x9, 0xcf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb4d6, gbc.sp());
        EXPECT(0xcf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01EA
        gbc.setState(0x5a8b, 0x4258, 0xe4d0, 0x9177, 0xac99, 0x6de6, 0x1, 0x1);
        gbc.writeMem(0x5a8b, { 0xc3, 0xae, 0x8d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4258, gbc.sp());
        EXPECT(0x8dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01EB
        gbc.setState(0x1c7b, 0x7a7a, 0x6dc0, 0x20e7, 0x5bcd, 0x1f13, 0x0, 0x1);
        gbc.writeMem(0x1c7b, { 0xc3, 0xdf, 0x22 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a7a, gbc.sp());
        EXPECT(0x22df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01EC
        gbc.setState(0xc288, 0xb8d3, 0xd470, 0x785e, 0xda20, 0x1d11, 0x1, 0x0);
        gbc.writeMem(0xc288, { 0xc3, 0xce, 0x86 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb8d3, gbc.sp());
        EXPECT(0x86ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc288));
        EXPECT(0xce, gbc.readMem(0xc289));
        EXPECT(0x86, gbc.readMem(0xc28a));
        // C3 01ED
        gbc.setState(0x3eaa, 0x49f8, 0x2590, 0xa026, 0xb0f, 0xfc8b, 0x1, 0x1);
        gbc.writeMem(0x3eaa, { 0xc3, 0x13, 0x96 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x49f8, gbc.sp());
        EXPECT(0x9613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01EE
        gbc.setState(0x391, 0x8376, 0x8e20, 0x3b09, 0xfcc5, 0xb980, 0x0, 0x1);
        gbc.writeMem(0x391, { 0xc3, 0x51, 0x5d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0x5d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01EF
        gbc.setState(0x378c, 0xebc6, 0x1e30, 0xf82a, 0x5487, 0x65c8, 0x1, 0x1);
        gbc.writeMem(0x378c, { 0xc3, 0x12, 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xebc6, gbc.sp());
        EXPECT(0x8712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01F0
        gbc.setState(0xd7c9, 0x757d, 0x54c0, 0x39bf, 0xf686, 0xafa4, 0x0, 0x1);
        gbc.writeMem(0xd7c9, { 0xc3, 0x84, 0xd5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0xd584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd7c9));
        EXPECT(0x84, gbc.readMem(0xd7ca));
        EXPECT(0xd5, gbc.readMem(0xd7cb));
        // C3 01F1
        gbc.setState(0x3780, 0x8c00, 0x7d70, 0xf1ee, 0x4d3f, 0xf33a, 0x1, 0x0);
        gbc.writeMem(0x3780, { 0xc3, 0x10, 0x88 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0x8810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01F2
        gbc.setState(0xefd9, 0xa1bc, 0x5750, 0x79fb, 0xacc6, 0xa44f, 0x0, 0x0);
        gbc.writeMem(0xefd9, { 0xc3, 0x31, 0xf2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa1bc, gbc.sp());
        EXPECT(0xf231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xefd9));
        EXPECT(0x31, gbc.readMem(0xefda));
        EXPECT(0xf2, gbc.readMem(0xefdb));
        // C3 01F3
        gbc.setState(0x6e02, 0x6923, 0xe810, 0x83d2, 0x70bd, 0xb891, 0x0, 0x1);
        gbc.writeMem(0x6e02, { 0xc3, 0xfc, 0xaf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6923, gbc.sp());
        EXPECT(0xaffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01F4
        gbc.setState(0xb795, 0x145c, 0x70c0, 0x4fc6, 0xbec, 0xf873, 0x0, 0x0);
        gbc.writeMem(0xb795, { 0xc3, 0x13, 0x1d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x145c, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb795));
        EXPECT(0x13, gbc.readMem(0xb796));
        EXPECT(0x1d, gbc.readMem(0xb797));
        // C3 01F5
        gbc.setState(0x2ec7, 0x1761, 0x41e0, 0x4537, 0x57e5, 0x2f2e, 0x1, 0x0);
        gbc.writeMem(0x2ec7, { 0xc3, 0xe8, 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1761, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01F6
        gbc.setState(0x9f03, 0x5d0a, 0x23c0, 0xcd92, 0x5a06, 0x2bff, 0x0, 0x0);
        gbc.writeMem(0x9f03, { 0xc3, 0x2b, 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5d0a, gbc.sp());
        EXPECT(0xbb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9f03));
        EXPECT(0x2b, gbc.readMem(0x9f04));
        EXPECT(0xbb, gbc.readMem(0x9f05));
        // C3 01F7
        gbc.setState(0x6b5d, 0xab6f, 0xce30, 0x6d5b, 0xe4b8, 0x8f6f, 0x0, 0x1);
        gbc.writeMem(0x6b5d, { 0xc3, 0xe3, 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xab6f, gbc.sp());
        EXPECT(0x2be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01F8
        gbc.setState(0x71bf, 0x1551, 0xaad0, 0x1d03, 0x13cc, 0x7df5, 0x0, 0x1);
        gbc.writeMem(0x71bf, { 0xc3, 0x14, 0xb1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1551, gbc.sp());
        EXPECT(0xb114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 01F9
        gbc.setState(0xe8c9, 0xf7f, 0x5900, 0x27e2, 0xdf68, 0x93b0, 0x1, 0x1);
        gbc.writeMem(0xe8c9, { 0xc3, 0xe9, 0xad });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf7f, gbc.sp());
        EXPECT(0xade9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe8c9));
        EXPECT(0xe9, gbc.readMem(0xe8ca));
        EXPECT(0xad, gbc.readMem(0xe8cb));
        // C3 01FA
        gbc.setState(0x8041, 0x80b0, 0x6c10, 0x968d, 0x550b, 0xfaaa, 0x0, 0x0);
        gbc.writeMem(0x8041, { 0xc3, 0x6b, 0xb8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x80b0, gbc.sp());
        EXPECT(0xb86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8041));
        EXPECT(0x6b, gbc.readMem(0x8042));
        EXPECT(0xb8, gbc.readMem(0x8043));
        // C3 01FB
        gbc.setState(0x40e4, 0xdacd, 0xfb60, 0x9cbe, 0xe1ce, 0x89bf, 0x1, 0x0);
        gbc.writeMem(0x40e4, { 0xc3, 0xa5, 0x80 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdacd, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01FC
        gbc.setState(0xefff, 0x8e6a, 0xe380, 0x9c52, 0x4f3f, 0x474a, 0x0, 0x0);
        gbc.writeMem(0xefff, { 0xc3, 0x27, 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8e6a, gbc.sp());
        EXPECT(0x427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xefff));
        EXPECT(0x27, gbc.readMem(0xf000));
        EXPECT(0x4, gbc.readMem(0xf001));
        // C3 01FD
        gbc.setState(0xa893, 0x3451, 0x4290, 0xaf5e, 0xbaa2, 0x4ca3, 0x1, 0x1);
        gbc.writeMem(0xa893, { 0xc3, 0xcd, 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3451, gbc.sp());
        EXPECT(0x52cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa893));
        EXPECT(0xcd, gbc.readMem(0xa894));
        EXPECT(0x52, gbc.readMem(0xa895));
        // C3 01FE
        gbc.setState(0x7e7c, 0x43aa, 0x9e60, 0x7e3, 0xc97e, 0x23a5, 0x0, 0x1);
        gbc.writeMem(0x7e7c, { 0xc3, 0x38, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x43aa, gbc.sp());
        EXPECT(0x7f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 01FF
        gbc.setState(0x792b, 0x648, 0xa7f0, 0x97f0, 0x688e, 0x60d5, 0x1, 0x1);
        gbc.writeMem(0x792b, { 0xc3, 0x36, 0xce });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x648, gbc.sp());
        EXPECT(0xce36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0200
        gbc.setState(0x704e, 0xa220, 0x83c0, 0x31ae, 0x19db, 0xeb3d, 0x1, 0x1);
        gbc.writeMem(0x704e, { 0xc3, 0xa3, 0x7e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa220, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0201
        gbc.setState(0xd432, 0xc064, 0x9ab0, 0xc165, 0x525b, 0xea74, 0x1, 0x1);
        gbc.writeMem(0xd432, { 0xc3, 0xc1, 0x4a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0x4ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd432));
        EXPECT(0xc1, gbc.readMem(0xd433));
        EXPECT(0x4a, gbc.readMem(0xd434));
        // C3 0202
        gbc.setState(0x53ac, 0x83be, 0xa0a0, 0x20e6, 0xb372, 0xc3a2, 0x0, 0x1);
        gbc.writeMem(0x53ac, { 0xc3, 0xa, 0x2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x83be, gbc.sp());
        EXPECT(0x20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0203
        gbc.setState(0xef1e, 0xe98b, 0xabc0, 0x903e, 0xac28, 0x18c5, 0x1, 0x0);
        gbc.writeMem(0xef1e, { 0xc3, 0x65, 0xdb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe98b, gbc.sp());
        EXPECT(0xdb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xef1e));
        EXPECT(0x65, gbc.readMem(0xef1f));
        EXPECT(0xdb, gbc.readMem(0xef20));
        // C3 0204
        gbc.setState(0x9d26, 0x1fb3, 0x9b30, 0x2dac, 0x8a00, 0xa7ef, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xc3, 0x72, 0x29 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1fb3, gbc.sp());
        EXPECT(0x2972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9d26));
        EXPECT(0x72, gbc.readMem(0x9d27));
        EXPECT(0x29, gbc.readMem(0x9d28));
        // C3 0205
        gbc.setState(0xcedb, 0x95, 0x38b0, 0xc02e, 0x74b0, 0x8f7d, 0x1, 0x0);
        gbc.writeMem(0xcedb, { 0xc3, 0xc2, 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x95, gbc.sp());
        EXPECT(0x15c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcedb));
        EXPECT(0xc2, gbc.readMem(0xcedc));
        EXPECT(0x15, gbc.readMem(0xcedd));
        // C3 0206
        gbc.setState(0x76d4, 0x806e, 0x3020, 0xa38f, 0x13f6, 0xbf9c, 0x1, 0x1);
        gbc.writeMem(0x76d4, { 0xc3, 0x8b, 0xb3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x806e, gbc.sp());
        EXPECT(0xb38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0207
        gbc.setState(0xafa3, 0xfb5d, 0x9560, 0xd777, 0x3095, 0x97b1, 0x0, 0x1);
        gbc.writeMem(0xafa3, { 0xc3, 0xba, 0xca });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0xcaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xafa3));
        EXPECT(0xba, gbc.readMem(0xafa4));
        EXPECT(0xca, gbc.readMem(0xafa5));
        // C3 0208
        gbc.setState(0x8c5d, 0x3cf0, 0x4cf0, 0x5510, 0xcb23, 0xade4, 0x1, 0x0);
        gbc.writeMem(0x8c5d, { 0xc3, 0x72, 0x8a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3cf0, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8c5d));
        EXPECT(0x72, gbc.readMem(0x8c5e));
        EXPECT(0x8a, gbc.readMem(0x8c5f));
        // C3 0209
        gbc.setState(0x34e1, 0x553b, 0xa0f0, 0x7aab, 0xd596, 0x8b82, 0x1, 0x1);
        gbc.writeMem(0x34e1, { 0xc3, 0x13, 0x1f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x553b, gbc.sp());
        EXPECT(0x1f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 020A
        gbc.setState(0x9238, 0x959b, 0x7680, 0x1219, 0xe5ea, 0x9c3, 0x0, 0x1);
        gbc.writeMem(0x9238, { 0xc3, 0x1f, 0x30 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0x301f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9238));
        EXPECT(0x1f, gbc.readMem(0x9239));
        EXPECT(0x30, gbc.readMem(0x923a));
        // C3 020B
        gbc.setState(0x32c3, 0xa659, 0xce60, 0x60d9, 0xd937, 0x145f, 0x0, 0x1);
        gbc.writeMem(0x32c3, { 0xc3, 0x58, 0x1b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0x1b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 020C
        gbc.setState(0x95a9, 0xa238, 0x8fa0, 0x174c, 0x6aab, 0x7737, 0x0, 0x1);
        gbc.writeMem(0x95a9, { 0xc3, 0x17, 0x28 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa238, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x95a9));
        EXPECT(0x17, gbc.readMem(0x95aa));
        EXPECT(0x28, gbc.readMem(0x95ab));
        // C3 020D
        gbc.setState(0x40ec, 0xf9ca, 0x1ce0, 0x44f6, 0xfba5, 0x5bc2, 0x0, 0x1);
        gbc.writeMem(0x40ec, { 0xc3, 0xba, 0x93 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf9ca, gbc.sp());
        EXPECT(0x93ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 020E
        gbc.setState(0x80b7, 0xc78e, 0x6190, 0xc9ae, 0x62d, 0xba5b, 0x1, 0x0);
        gbc.writeMem(0x80b7, { 0xc3, 0x17, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0xc217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x80b7));
        EXPECT(0x17, gbc.readMem(0x80b8));
        EXPECT(0xc2, gbc.readMem(0x80b9));
        // C3 020F
        gbc.setState(0x215e, 0x18dc, 0x6ca0, 0x4c20, 0x13f5, 0xec46, 0x1, 0x0);
        gbc.writeMem(0x215e, { 0xc3, 0xc2, 0x93 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x18dc, gbc.sp());
        EXPECT(0x93c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0210
        gbc.setState(0xede1, 0xae23, 0x69d0, 0xec87, 0x182e, 0x335a, 0x0, 0x0);
        gbc.writeMem(0xede1, { 0xc3, 0x33, 0x88 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xae23, gbc.sp());
        EXPECT(0x8833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xede1));
        EXPECT(0x33, gbc.readMem(0xede2));
        EXPECT(0x88, gbc.readMem(0xede3));
        // C3 0211
        gbc.setState(0xc5f8, 0x6e86, 0xfe80, 0x323e, 0x5e06, 0xf546, 0x0, 0x0);
        gbc.writeMem(0xc5f8, { 0xc3, 0x96, 0x12 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6e86, gbc.sp());
        EXPECT(0x1296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc5f8));
        EXPECT(0x96, gbc.readMem(0xc5f9));
        EXPECT(0x12, gbc.readMem(0xc5fa));
        // C3 0212
        gbc.setState(0x53d0, 0xb483, 0x2c30, 0x39fa, 0x16aa, 0x1bc4, 0x0, 0x1);
        gbc.writeMem(0x53d0, { 0xc3, 0x91, 0xac });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb483, gbc.sp());
        EXPECT(0xac91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0213
        gbc.setState(0xe4a0, 0x67de, 0x6770, 0xa70e, 0xf664, 0xe349, 0x0, 0x1);
        gbc.writeMem(0xe4a0, { 0xc3, 0xc9, 0x50 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x67de, gbc.sp());
        EXPECT(0x50c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe4a0));
        EXPECT(0xc9, gbc.readMem(0xe4a1));
        EXPECT(0x50, gbc.readMem(0xe4a2));
        // C3 0214
        gbc.setState(0xcd4e, 0x8e5a, 0x19a0, 0x4814, 0xd9f4, 0xdcdc, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xc3, 0xa9, 0xfa });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8e5a, gbc.sp());
        EXPECT(0xfaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcd4e));
        EXPECT(0xa9, gbc.readMem(0xcd4f));
        EXPECT(0xfa, gbc.readMem(0xcd50));
        // C3 0215
        gbc.setState(0xca63, 0xfdec, 0x6b90, 0x9541, 0xea5d, 0x5c24, 0x1, 0x0);
        gbc.writeMem(0xca63, { 0xc3, 0xd5, 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xca63));
        EXPECT(0xd5, gbc.readMem(0xca64));
        EXPECT(0xc, gbc.readMem(0xca65));
        // C3 0216
        gbc.setState(0x88f5, 0xfe38, 0x1050, 0x3f21, 0xa3a0, 0x3ca7, 0x1, 0x1);
        gbc.writeMem(0x88f5, { 0xc3, 0xeb, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfe38, gbc.sp());
        EXPECT(0xb1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x88f5));
        EXPECT(0xeb, gbc.readMem(0x88f6));
        EXPECT(0xb1, gbc.readMem(0x88f7));
        // C3 0217
        gbc.setState(0x7252, 0x1bbe, 0xedd0, 0x80b8, 0x3438, 0x1ac0, 0x1, 0x1);
        gbc.writeMem(0x7252, { 0xc3, 0x92, 0x58 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1bbe, gbc.sp());
        EXPECT(0x5892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0218
        gbc.setState(0xe960, 0x418, 0xb690, 0xec17, 0x99ee, 0xfdd6, 0x0, 0x0);
        gbc.writeMem(0xe960, { 0xc3, 0x9a, 0x52 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0x529a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe960));
        EXPECT(0x9a, gbc.readMem(0xe961));
        EXPECT(0x52, gbc.readMem(0xe962));
        // C3 0219
        gbc.setState(0x962a, 0xcfed, 0x770, 0xb06, 0x957d, 0x6f26, 0x1, 0x0);
        gbc.writeMem(0x962a, { 0xc3, 0xde, 0xdb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcfed, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x962a));
        EXPECT(0xde, gbc.readMem(0x962b));
        EXPECT(0xdb, gbc.readMem(0x962c));
        // C3 021A
        gbc.setState(0x3962, 0xc676, 0x8320, 0x2ed8, 0xce8e, 0xfa, 0x1, 0x0);
        gbc.writeMem(0x3962, { 0xc3, 0xd4, 0x54 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc676, gbc.sp());
        EXPECT(0x54d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 021B
        gbc.setState(0xdffe, 0xa4a1, 0x7bf0, 0x2e0, 0x4a3a, 0xde15, 0x0, 0x1);
        gbc.writeMem(0xdffe, { 0xc3, 0xe3, 0x17 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa4a1, gbc.sp());
        EXPECT(0x17e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdffe));
        EXPECT(0xe3, gbc.readMem(0xdfff));
        EXPECT(0x17, gbc.readMem(0xe000));
        // C3 021C
        gbc.setState(0x92dd, 0xe67a, 0xb400, 0x20e3, 0xeee3, 0xc9d4, 0x1, 0x1);
        gbc.writeMem(0x92dd, { 0xc3, 0xa4, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe67a, gbc.sp());
        EXPECT(0x48a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x92dd));
        EXPECT(0xa4, gbc.readMem(0x92de));
        EXPECT(0x48, gbc.readMem(0x92df));
        // C3 021D
        gbc.setState(0xe725, 0xe7e1, 0x7e30, 0xc2d8, 0x54f5, 0xd901, 0x0, 0x0);
        gbc.writeMem(0xe725, { 0xc3, 0x90, 0x82 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe7e1, gbc.sp());
        EXPECT(0x8290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe725));
        EXPECT(0x90, gbc.readMem(0xe726));
        EXPECT(0x82, gbc.readMem(0xe727));
        // C3 021E
        gbc.setState(0xc229, 0xe3, 0x12e0, 0x7f6d, 0xe9f, 0xc968, 0x0, 0x0);
        gbc.writeMem(0xc229, { 0xc3, 0xc5, 0xcb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe3, gbc.sp());
        EXPECT(0xcbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc229));
        EXPECT(0xc5, gbc.readMem(0xc22a));
        EXPECT(0xcb, gbc.readMem(0xc22b));
        // C3 021F
        gbc.setState(0xa363, 0x517c, 0xadb0, 0xe095, 0x9f16, 0xcabe, 0x0, 0x0);
        gbc.writeMem(0xa363, { 0xc3, 0x1c, 0x1f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x517c, gbc.sp());
        EXPECT(0x1f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa363));
        EXPECT(0x1c, gbc.readMem(0xa364));
        EXPECT(0x1f, gbc.readMem(0xa365));
        // C3 0220
        gbc.setState(0x1152, 0x4681, 0xb400, 0xac15, 0xe5f0, 0x85d2, 0x1, 0x0);
        gbc.writeMem(0x1152, { 0xc3, 0xaf, 0x28 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4681, gbc.sp());
        EXPECT(0x28af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0221
        gbc.setState(0x5540, 0xb87e, 0xf0f0, 0x7483, 0xb29f, 0xa590, 0x1, 0x0);
        gbc.writeMem(0x5540, { 0xc3, 0xba, 0xc0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb87e, gbc.sp());
        EXPECT(0xc0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0222
        gbc.setState(0x15f6, 0x990e, 0xbac0, 0x14b0, 0xa2, 0x1851, 0x0, 0x0);
        gbc.writeMem(0x15f6, { 0xc3, 0x3a, 0xf9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x990e, gbc.sp());
        EXPECT(0xf93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0223
        gbc.setState(0xe721, 0x28ce, 0x29f0, 0xd6b6, 0x1617, 0x1823, 0x1, 0x1);
        gbc.writeMem(0xe721, { 0xc3, 0x7, 0x6f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x28ce, gbc.sp());
        EXPECT(0x6f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe721));
        EXPECT(0x7, gbc.readMem(0xe722));
        EXPECT(0x6f, gbc.readMem(0xe723));
        // C3 0224
        gbc.setState(0x5e25, 0x67ba, 0x94a0, 0x2509, 0xb9f3, 0x425b, 0x1, 0x0);
        gbc.writeMem(0x5e25, { 0xc3, 0x63, 0xa3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x67ba, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0225
        gbc.setState(0x2276, 0x3e2a, 0x7b0, 0x8fb6, 0x5404, 0x5fdc, 0x0, 0x0);
        gbc.writeMem(0x2276, { 0xc3, 0x48, 0x31 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3e2a, gbc.sp());
        EXPECT(0x3148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0226
        gbc.setState(0xdd4f, 0xe40e, 0xaa00, 0x4b4d, 0x3e75, 0x5dc, 0x0, 0x0);
        gbc.writeMem(0xdd4f, { 0xc3, 0x3, 0xec });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe40e, gbc.sp());
        EXPECT(0xec03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdd4f));
        EXPECT(0x3, gbc.readMem(0xdd50));
        EXPECT(0xec, gbc.readMem(0xdd51));
        // C3 0227
        gbc.setState(0xe051, 0xeb53, 0xd400, 0x57ae, 0x1209, 0xac1e, 0x1, 0x0);
        gbc.writeMem(0xe051, { 0xc3, 0x37, 0x33 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xeb53, gbc.sp());
        EXPECT(0x3337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe051));
        EXPECT(0x37, gbc.readMem(0xe052));
        EXPECT(0x33, gbc.readMem(0xe053));
        // C3 0228
        gbc.setState(0x84b0, 0x6c4, 0x1af0, 0xa49c, 0xe983, 0x4fe9, 0x0, 0x0);
        gbc.writeMem(0x84b0, { 0xc3, 0x58, 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6c4, gbc.sp());
        EXPECT(0x558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x84b0));
        EXPECT(0x58, gbc.readMem(0x84b1));
        EXPECT(0x5, gbc.readMem(0x84b2));
        // C3 0229
        gbc.setState(0x9a8d, 0xfaea, 0xb8f0, 0x28c9, 0xaed0, 0xb550, 0x1, 0x1);
        gbc.writeMem(0x9a8d, { 0xc3, 0x89, 0xeb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfaea, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9a8d));
        EXPECT(0x89, gbc.readMem(0x9a8e));
        EXPECT(0xeb, gbc.readMem(0x9a8f));
        // C3 022A
        gbc.setState(0xa22, 0x4af7, 0x5670, 0xe5d2, 0x6856, 0x4662, 0x1, 0x0);
        gbc.writeMem(0xa22, { 0xc3, 0x4f, 0xae });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4af7, gbc.sp());
        EXPECT(0xae4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 022B
        gbc.setState(0xc0b8, 0x1e07, 0xa9c0, 0x4f9a, 0x4d5b, 0x4a31, 0x0, 0x0);
        gbc.writeMem(0xc0b8, { 0xc3, 0x8c, 0x65 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1e07, gbc.sp());
        EXPECT(0x658c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc0b8));
        EXPECT(0x8c, gbc.readMem(0xc0b9));
        EXPECT(0x65, gbc.readMem(0xc0ba));
        // C3 022C
        gbc.setState(0xaf5d, 0x9c6b, 0x8a0, 0x69e6, 0xb544, 0xc0a8, 0x1, 0x0);
        gbc.writeMem(0xaf5d, { 0xc3, 0xf6, 0xcc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9c6b, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaf5d));
        EXPECT(0xf6, gbc.readMem(0xaf5e));
        EXPECT(0xcc, gbc.readMem(0xaf5f));
        // C3 022D
        gbc.setState(0x190f, 0x26, 0x840, 0xb0c8, 0x6346, 0x7ead, 0x0, 0x1);
        gbc.writeMem(0x190f, { 0xc3, 0x61, 0xfd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x26, gbc.sp());
        EXPECT(0xfd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 022E
        gbc.setState(0x9c78, 0xe5c7, 0xc6e0, 0x19e7, 0x870b, 0x609c, 0x0, 0x0);
        gbc.writeMem(0x9c78, { 0xc3, 0xd3, 0xf5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe5c7, gbc.sp());
        EXPECT(0xf5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9c78));
        EXPECT(0xd3, gbc.readMem(0x9c79));
        EXPECT(0xf5, gbc.readMem(0x9c7a));
        // C3 022F
        gbc.setState(0xc050, 0x824d, 0xb870, 0x6526, 0x55f, 0x5870, 0x0, 0x1);
        gbc.writeMem(0xc050, { 0xc3, 0xb3, 0xb4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x824d, gbc.sp());
        EXPECT(0xb4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc050));
        EXPECT(0xb3, gbc.readMem(0xc051));
        EXPECT(0xb4, gbc.readMem(0xc052));
        // C3 0230
        gbc.setState(0xaa6e, 0x4895, 0xf030, 0x76cb, 0xae48, 0x50fd, 0x1, 0x0);
        gbc.writeMem(0xaa6e, { 0xc3, 0xfd, 0x4c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4895, gbc.sp());
        EXPECT(0x4cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaa6e));
        EXPECT(0xfd, gbc.readMem(0xaa6f));
        EXPECT(0x4c, gbc.readMem(0xaa70));
        // C3 0231
        gbc.setState(0x8a0c, 0xbe26, 0xa310, 0xff69, 0x39fb, 0x73e3, 0x0, 0x1);
        gbc.writeMem(0x8a0c, { 0xc3, 0xb1, 0x2a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbe26, gbc.sp());
        EXPECT(0x2ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8a0c));
        EXPECT(0xb1, gbc.readMem(0x8a0d));
        EXPECT(0x2a, gbc.readMem(0x8a0e));
        // C3 0232
        gbc.setState(0xce39, 0x7d27, 0x23a0, 0xbda3, 0x3ad4, 0xf124, 0x0, 0x1);
        gbc.writeMem(0xce39, { 0xc3, 0x99, 0xc5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7d27, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xce39));
        EXPECT(0x99, gbc.readMem(0xce3a));
        EXPECT(0xc5, gbc.readMem(0xce3b));
        // C3 0233
        gbc.setState(0x895, 0x4b99, 0x7020, 0xcd5d, 0xc21f, 0x93ed, 0x1, 0x0);
        gbc.writeMem(0x895, { 0xc3, 0xdb, 0x9e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4b99, gbc.sp());
        EXPECT(0x9edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0234
        gbc.setState(0x2d2, 0x7486, 0x3330, 0xabc4, 0x30c8, 0x987f, 0x1, 0x0);
        gbc.writeMem(0x2d2, { 0xc3, 0x27, 0xdf });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7486, gbc.sp());
        EXPECT(0xdf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0235
        gbc.setState(0xad46, 0x4a83, 0x2b10, 0xb12c, 0x1aec, 0x7129, 0x0, 0x1);
        gbc.writeMem(0xad46, { 0xc3, 0x2d, 0x16 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0x162d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xad46));
        EXPECT(0x2d, gbc.readMem(0xad47));
        EXPECT(0x16, gbc.readMem(0xad48));
        // C3 0236
        gbc.setState(0x4fc4, 0x751d, 0xc850, 0xe136, 0xd6a, 0x1208, 0x0, 0x0);
        gbc.writeMem(0x4fc4, { 0xc3, 0x54, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x751d, gbc.sp());
        EXPECT(0x2754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0237
        gbc.setState(0x60fa, 0xaad7, 0x1c20, 0x4b1e, 0x49b7, 0xe76f, 0x0, 0x0);
        gbc.writeMem(0x60fa, { 0xc3, 0x72, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaad7, gbc.sp());
        EXPECT(0xa072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0239
        gbc.setState(0x60c, 0x1a6c, 0x730, 0x5509, 0x5960, 0xa7dd, 0x1, 0x1);
        gbc.writeMem(0x60c, { 0xc3, 0x72, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1a6c, gbc.sp());
        EXPECT(0x2d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 023A
        gbc.setState(0x7cff, 0x9c85, 0x2c20, 0xe050, 0x2b45, 0xe9e7, 0x0, 0x1);
        gbc.writeMem(0x7cff, { 0xc3, 0xe9, 0x10 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9c85, gbc.sp());
        EXPECT(0x10e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 023B
        gbc.setState(0xd501, 0xf087, 0x1980, 0x6d95, 0x636f, 0x4414, 0x1, 0x0);
        gbc.writeMem(0xd501, { 0xc3, 0x19, 0xd6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf087, gbc.sp());
        EXPECT(0xd619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd501));
        EXPECT(0x19, gbc.readMem(0xd502));
        EXPECT(0xd6, gbc.readMem(0xd503));
        // C3 023C
        gbc.setState(0x9f3a, 0x7001, 0x2a40, 0x3e5a, 0x4c12, 0x2ccc, 0x1, 0x1);
        gbc.writeMem(0x9f3a, { 0xc3, 0xf8, 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7001, gbc.sp());
        EXPECT(0x2bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9f3a));
        EXPECT(0xf8, gbc.readMem(0x9f3b));
        EXPECT(0x2b, gbc.readMem(0x9f3c));
        // C3 023D
        gbc.setState(0xaa86, 0x2167, 0x6ff0, 0x4a82, 0x46f6, 0xfaeb, 0x0, 0x1);
        gbc.writeMem(0xaa86, { 0xc3, 0x6, 0xba });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2167, gbc.sp());
        EXPECT(0xba06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaa86));
        EXPECT(0x6, gbc.readMem(0xaa87));
        EXPECT(0xba, gbc.readMem(0xaa88));
        // C3 023E
        gbc.setState(0xe1ac, 0xfae8, 0x8ec0, 0x8077, 0xceab, 0x9457, 0x0, 0x1);
        gbc.writeMem(0xe1ac, { 0xc3, 0x6a, 0xa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfae8, gbc.sp());
        EXPECT(0xa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe1ac));
        EXPECT(0x6a, gbc.readMem(0xe1ad));
        EXPECT(0xa, gbc.readMem(0xe1ae));
        // C3 023F
        gbc.setState(0xc5, 0x292c, 0xfa20, 0xe35, 0xc79b, 0xf053, 0x1, 0x0);
        gbc.writeMem(0xc5, { 0xc3, 0xdc, 0x58 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x292c, gbc.sp());
        EXPECT(0x58dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0240
        gbc.setState(0x320f, 0xf032, 0x9160, 0xad02, 0xe5ca, 0x13f4, 0x0, 0x0);
        gbc.writeMem(0x320f, { 0xc3, 0xd3, 0xbb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf032, gbc.sp());
        EXPECT(0xbbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0241
        gbc.setState(0x7c7e, 0x5a3d, 0xc4e0, 0xa86f, 0x8a8d, 0x3733, 0x1, 0x1);
        gbc.writeMem(0x7c7e, { 0xc3, 0xb4, 0xbf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0xbfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0242
        gbc.setState(0x406d, 0xf20c, 0xf640, 0xe56f, 0x8af7, 0x5c4c, 0x1, 0x1);
        gbc.writeMem(0x406d, { 0xc3, 0xd4, 0x69 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf20c, gbc.sp());
        EXPECT(0x69d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0243
        gbc.setState(0x1a7b, 0xc71c, 0xaf80, 0x2408, 0x233c, 0x11cd, 0x1, 0x1);
        gbc.writeMem(0x1a7b, { 0xc3, 0xc2, 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc71c, gbc.sp());
        EXPECT(0x47c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0244
        gbc.setState(0xe569, 0x4f6c, 0x6aa0, 0x95fd, 0x390a, 0x2df9, 0x0, 0x1);
        gbc.writeMem(0xe569, { 0xc3, 0x72, 0xf5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4f6c, gbc.sp());
        EXPECT(0xf572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe569));
        EXPECT(0x72, gbc.readMem(0xe56a));
        EXPECT(0xf5, gbc.readMem(0xe56b));
        // C3 0245
        gbc.setState(0x9e76, 0xdb9a, 0x8760, 0xcc6e, 0x3a6b, 0x1ec, 0x1, 0x1);
        gbc.writeMem(0x9e76, { 0xc3, 0xe2, 0x84 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9e76));
        EXPECT(0xe2, gbc.readMem(0x9e77));
        EXPECT(0x84, gbc.readMem(0x9e78));
        // C3 0246
        gbc.setState(0x5e1e, 0x6d5e, 0x760, 0x675a, 0x8d7a, 0xcf9c, 0x1, 0x1);
        gbc.writeMem(0x5e1e, { 0xc3, 0xe9, 0x84 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0x84e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0247
        gbc.setState(0x9389, 0x7c40, 0x2f0, 0x886a, 0x7bc, 0x2e72, 0x0, 0x1);
        gbc.writeMem(0x9389, { 0xc3, 0xf7, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7c40, gbc.sp());
        EXPECT(0xe0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9389));
        EXPECT(0xf7, gbc.readMem(0x938a));
        EXPECT(0xe0, gbc.readMem(0x938b));
        // C3 0248
        gbc.setState(0x7459, 0x436d, 0xbe50, 0xa269, 0x9b44, 0x31fb, 0x1, 0x0);
        gbc.writeMem(0x7459, { 0xc3, 0x9f, 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x436d, gbc.sp());
        EXPECT(0x1a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0249
        gbc.setState(0x49f6, 0xe462, 0x53d0, 0xf760, 0x7791, 0x559, 0x1, 0x1);
        gbc.writeMem(0x49f6, { 0xc3, 0xc1, 0x5c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x5cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 024A
        gbc.setState(0x7463, 0x551e, 0x6620, 0x293d, 0x41e8, 0x12c4, 0x1, 0x1);
        gbc.writeMem(0x7463, { 0xc3, 0x1c, 0xc6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x551e, gbc.sp());
        EXPECT(0xc61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 024B
        gbc.setState(0xa115, 0xfdd2, 0x5cc0, 0x3465, 0x73ae, 0x5cd8, 0x1, 0x0);
        gbc.writeMem(0xa115, { 0xc3, 0xfd, 0xd5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfdd2, gbc.sp());
        EXPECT(0xd5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa115));
        EXPECT(0xfd, gbc.readMem(0xa116));
        EXPECT(0xd5, gbc.readMem(0xa117));
        // C3 024C
        gbc.setState(0x29a2, 0x57a3, 0xcb20, 0xcc51, 0xe9d0, 0x3575, 0x0, 0x0);
        gbc.writeMem(0x29a2, { 0xc3, 0x46, 0x53 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x57a3, gbc.sp());
        EXPECT(0x5346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 024D
        gbc.setState(0xe9bb, 0x4633, 0xa2e0, 0x1113, 0xbe42, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0xe9bb, { 0xc3, 0x9c, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe9bb));
        EXPECT(0x9c, gbc.readMem(0xe9bc));
        EXPECT(0x57, gbc.readMem(0xe9bd));
        // C3 024E
        gbc.setState(0xe226, 0x8413, 0x8ce0, 0x43aa, 0xca81, 0x7af9, 0x0, 0x1);
        gbc.writeMem(0xe226, { 0xc3, 0x8, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8413, gbc.sp());
        EXPECT(0xdf08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe226));
        EXPECT(0x8, gbc.readMem(0xe227));
        EXPECT(0xdf, gbc.readMem(0xe228));
        // C3 024F
        gbc.setState(0x1089, 0x7530, 0x11c0, 0x135e, 0xe782, 0x7316, 0x0, 0x0);
        gbc.writeMem(0x1089, { 0xc3, 0x82, 0x14 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x1482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0250
        gbc.setState(0x22c3, 0x14b4, 0x80d0, 0x32b3, 0x899d, 0x9b37, 0x0, 0x1);
        gbc.writeMem(0x22c3, { 0xc3, 0x76, 0xce });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x14b4, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0251
        gbc.setState(0x88a9, 0x5c8d, 0x9900, 0x2601, 0x93e1, 0xc97d, 0x0, 0x1);
        gbc.writeMem(0x88a9, { 0xc3, 0x9e, 0x5b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5c8d, gbc.sp());
        EXPECT(0x5b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x88a9));
        EXPECT(0x9e, gbc.readMem(0x88aa));
        EXPECT(0x5b, gbc.readMem(0x88ab));
        // C3 0253
        gbc.setState(0xebf4, 0x71b6, 0xfac0, 0x9e95, 0x141f, 0xe3d3, 0x0, 0x1);
        gbc.writeMem(0xebf4, { 0xc3, 0x80, 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x71b6, gbc.sp());
        EXPECT(0x1380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xebf4));
        EXPECT(0x80, gbc.readMem(0xebf5));
        EXPECT(0x13, gbc.readMem(0xebf6));
        // C3 0254
        gbc.setState(0x97e6, 0xea4c, 0x8230, 0x78b, 0x3c48, 0x3117, 0x0, 0x1);
        gbc.writeMem(0x97e6, { 0xc3, 0x68, 0x10 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0x1068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x97e6));
        EXPECT(0x68, gbc.readMem(0x97e7));
        EXPECT(0x10, gbc.readMem(0x97e8));
        // C3 0255
        gbc.setState(0xc16b, 0x5f1f, 0x9820, 0x4ef6, 0xf7ae, 0xfb14, 0x0, 0x0);
        gbc.writeMem(0xc16b, { 0xc3, 0xa7, 0x9f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5f1f, gbc.sp());
        EXPECT(0x9fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc16b));
        EXPECT(0xa7, gbc.readMem(0xc16c));
        EXPECT(0x9f, gbc.readMem(0xc16d));
        // C3 0256
        gbc.setState(0xd14a, 0x1fae, 0x49a0, 0x2b81, 0x71f3, 0x8e89, 0x0, 0x1);
        gbc.writeMem(0xd14a, { 0xc3, 0xdc, 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1fae, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd14a));
        EXPECT(0xdc, gbc.readMem(0xd14b));
        EXPECT(0x37, gbc.readMem(0xd14c));
        // C3 0257
        gbc.setState(0x8431, 0xa2bd, 0xbff0, 0x4fcf, 0xf325, 0x4ace, 0x0, 0x0);
        gbc.writeMem(0x8431, { 0xc3, 0x12, 0x5c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa2bd, gbc.sp());
        EXPECT(0x5c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8431));
        EXPECT(0x12, gbc.readMem(0x8432));
        EXPECT(0x5c, gbc.readMem(0x8433));
        // C3 0259
        gbc.setState(0x1531, 0x63d1, 0xaa30, 0x1cca, 0x8a78, 0x1ca6, 0x1, 0x0);
        gbc.writeMem(0x1531, { 0xc3, 0xba, 0xce });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0xceba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 025A
        gbc.setState(0x965e, 0x72b2, 0x4e30, 0x3768, 0xbedc, 0x7a70, 0x0, 0x1);
        gbc.writeMem(0x965e, { 0xc3, 0x2d, 0xda });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x72b2, gbc.sp());
        EXPECT(0xda2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x965e));
        EXPECT(0x2d, gbc.readMem(0x965f));
        EXPECT(0xda, gbc.readMem(0x9660));
        // C3 025B
        gbc.setState(0xb42f, 0x10c2, 0xa110, 0xce3b, 0x45da, 0xe8d4, 0x1, 0x1);
        gbc.writeMem(0xb42f, { 0xc3, 0x9, 0x34 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x10c2, gbc.sp());
        EXPECT(0x3409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb42f));
        EXPECT(0x9, gbc.readMem(0xb430));
        EXPECT(0x34, gbc.readMem(0xb431));
        // C3 025C
        gbc.setState(0x992e, 0x92ac, 0x33c0, 0xe8f6, 0x3923, 0xac7f, 0x0, 0x1);
        gbc.writeMem(0x992e, { 0xc3, 0x73, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x92ac, gbc.sp());
        EXPECT(0xba73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x992e));
        EXPECT(0x73, gbc.readMem(0x992f));
        EXPECT(0xba, gbc.readMem(0x9930));
        // C3 025D
        gbc.setState(0x34cb, 0xb228, 0x8830, 0xbeac, 0xb035, 0x638f, 0x0, 0x0);
        gbc.writeMem(0x34cb, { 0xc3, 0xbb, 0x65 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb228, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 025F
        gbc.setState(0xcda0, 0xd785, 0x2b0, 0xf9ce, 0xc5c6, 0x2349, 0x0, 0x1);
        gbc.writeMem(0xcda0, { 0xc3, 0xf6, 0xf0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd785, gbc.sp());
        EXPECT(0xf0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcda0));
        EXPECT(0xf6, gbc.readMem(0xcda1));
        EXPECT(0xf0, gbc.readMem(0xcda2));
        // C3 0260
        gbc.setState(0x8854, 0x32ae, 0xaf20, 0x74e, 0x7455, 0x87db, 0x1, 0x0);
        gbc.writeMem(0x8854, { 0xc3, 0xbe, 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x32ae, gbc.sp());
        EXPECT(0xc9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8854));
        EXPECT(0xbe, gbc.readMem(0x8855));
        EXPECT(0xc9, gbc.readMem(0x8856));
        // C3 0261
        gbc.setState(0x2728, 0x5ae, 0xca30, 0x237, 0xf9ec, 0x9990, 0x0, 0x1);
        gbc.writeMem(0x2728, { 0xc3, 0xc2, 0xed });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5ae, gbc.sp());
        EXPECT(0xedc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0262
        gbc.setState(0xb6b4, 0x6207, 0x3f00, 0xfedd, 0x8a2f, 0x6cc2, 0x0, 0x1);
        gbc.writeMem(0xb6b4, { 0xc3, 0xa3, 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6207, gbc.sp());
        EXPECT(0x82a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb6b4));
        EXPECT(0xa3, gbc.readMem(0xb6b5));
        EXPECT(0x82, gbc.readMem(0xb6b6));
        // C3 0263
        gbc.setState(0x12b8, 0x5655, 0x4000, 0x8759, 0xf801, 0x302d, 0x0, 0x1);
        gbc.writeMem(0x12b8, { 0xc3, 0x76, 0x65 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5655, gbc.sp());
        EXPECT(0x6576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0265
        gbc.setState(0xb2b, 0xa04c, 0x60, 0xb36d, 0xa7f7, 0x438d, 0x0, 0x1);
        gbc.writeMem(0xb2b, { 0xc3, 0xda, 0x5e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0266
        gbc.setState(0xab34, 0x7a23, 0x3aa0, 0xb432, 0x93bd, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0xab34, { 0xc3, 0x20, 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7a23, gbc.sp());
        EXPECT(0xa420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xab34));
        EXPECT(0x20, gbc.readMem(0xab35));
        EXPECT(0xa4, gbc.readMem(0xab36));
        // C3 0267
        gbc.setState(0xabd5, 0x43f1, 0xcbd0, 0xce31, 0xea7f, 0x857e, 0x0, 0x1);
        gbc.writeMem(0xabd5, { 0xc3, 0xf0, 0x98 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x43f1, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xabd5));
        EXPECT(0xf0, gbc.readMem(0xabd6));
        EXPECT(0x98, gbc.readMem(0xabd7));
        // C3 0269
        gbc.setState(0xa655, 0x6648, 0x42e0, 0xd0, 0x4a36, 0xe4a9, 0x1, 0x0);
        gbc.writeMem(0xa655, { 0xc3, 0xa, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6648, gbc.sp());
        EXPECT(0x170a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa655));
        EXPECT(0xa, gbc.readMem(0xa656));
        EXPECT(0x17, gbc.readMem(0xa657));
        // C3 026A
        gbc.setState(0xb10e, 0x79b, 0x69c0, 0x3e21, 0xf742, 0x850c, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0xc3, 0x4c, 0x8b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x79b, gbc.sp());
        EXPECT(0x8b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb10e));
        EXPECT(0x4c, gbc.readMem(0xb10f));
        EXPECT(0x8b, gbc.readMem(0xb110));
        // C3 026B
        gbc.setState(0xdd40, 0xc5b2, 0xa220, 0x14ce, 0xef71, 0x2daa, 0x0, 0x0);
        gbc.writeMem(0xdd40, { 0xc3, 0x2b, 0x1d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc5b2, gbc.sp());
        EXPECT(0x1d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdd40));
        EXPECT(0x2b, gbc.readMem(0xdd41));
        EXPECT(0x1d, gbc.readMem(0xdd42));
        // C3 026C
        gbc.setState(0x423b, 0xbd35, 0xf900, 0x66f0, 0xa9f1, 0x5e1b, 0x0, 0x1);
        gbc.writeMem(0x423b, { 0xc3, 0x21, 0x5b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 026D
        gbc.setState(0x461a, 0x6bbb, 0xf8a0, 0x96fa, 0x20f8, 0xe4e, 0x0, 0x1);
        gbc.writeMem(0x461a, { 0xc3, 0xbd, 0x1c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6bbb, gbc.sp());
        EXPECT(0x1cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 026E
        gbc.setState(0xdf00, 0xc378, 0x5ed0, 0x8eaf, 0x380c, 0x9a3e, 0x0, 0x1);
        gbc.writeMem(0xdf00, { 0xc3, 0xb0, 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc378, gbc.sp());
        EXPECT(0x48b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdf00));
        EXPECT(0xb0, gbc.readMem(0xdf01));
        EXPECT(0x48, gbc.readMem(0xdf02));
        // C3 026F
        gbc.setState(0x767, 0x23d2, 0xed10, 0x2968, 0x4453, 0x1283, 0x0, 0x0);
        gbc.writeMem(0x767, { 0xc3, 0x7b, 0x79 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0x797b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0270
        gbc.setState(0x68ce, 0xceff, 0x4cc0, 0xe5c9, 0xcf83, 0xf78a, 0x1, 0x1);
        gbc.writeMem(0x68ce, { 0xc3, 0x3c, 0x86 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xceff, gbc.sp());
        EXPECT(0x863c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0271
        gbc.setState(0x919d, 0x8c90, 0xc580, 0xfc18, 0x50bb, 0xd441, 0x1, 0x1);
        gbc.writeMem(0x919d, { 0xc3, 0x21, 0x48 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8c90, gbc.sp());
        EXPECT(0x4821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x919d));
        EXPECT(0x21, gbc.readMem(0x919e));
        EXPECT(0x48, gbc.readMem(0x919f));
        // C3 0272
        gbc.setState(0x1f37, 0xe307, 0x1480, 0x48d0, 0xe5cb, 0x1086, 0x1, 0x0);
        gbc.writeMem(0x1f37, { 0xc3, 0x1e, 0x96 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe307, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0273
        gbc.setState(0x8b65, 0x8bd, 0xc0, 0x8af8, 0x7a78, 0x1375, 0x0, 0x0);
        gbc.writeMem(0x8b65, { 0xc3, 0xdb, 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8bd, gbc.sp());
        EXPECT(0xbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8b65));
        EXPECT(0xdb, gbc.readMem(0x8b66));
        EXPECT(0xb, gbc.readMem(0x8b67));
        // C3 0274
        gbc.setState(0x2629, 0x8cc9, 0x9e00, 0x4328, 0xebf0, 0x8e9f, 0x0, 0x1);
        gbc.writeMem(0x2629, { 0xc3, 0x3c, 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8cc9, gbc.sp());
        EXPECT(0x6d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0275
        gbc.setState(0xd66e, 0x9237, 0xe200, 0x8bc, 0xd40e, 0x8907, 0x0, 0x0);
        gbc.writeMem(0xd66e, { 0xc3, 0x86, 0xa2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9237, gbc.sp());
        EXPECT(0xa286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd66e));
        EXPECT(0x86, gbc.readMem(0xd66f));
        EXPECT(0xa2, gbc.readMem(0xd670));
        // C3 0276
        gbc.setState(0x3b2b, 0x5be, 0x1af0, 0x9301, 0x200e, 0xb071, 0x1, 0x1);
        gbc.writeMem(0x3b2b, { 0xc3, 0x89, 0x45 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5be, gbc.sp());
        EXPECT(0x4589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0277
        gbc.setState(0xb6e5, 0xca4f, 0x5ff0, 0xc706, 0x75a0, 0x9e74, 0x1, 0x1);
        gbc.writeMem(0xb6e5, { 0xc3, 0xd3, 0x76 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xca4f, gbc.sp());
        EXPECT(0x76d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb6e5));
        EXPECT(0xd3, gbc.readMem(0xb6e6));
        EXPECT(0x76, gbc.readMem(0xb6e7));
        // C3 0278
        gbc.setState(0xee6c, 0x76b4, 0x8c80, 0x1410, 0xe94a, 0xb1a3, 0x0, 0x1);
        gbc.writeMem(0xee6c, { 0xc3, 0xe3, 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x76b4, gbc.sp());
        EXPECT(0x7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xee6c));
        EXPECT(0xe3, gbc.readMem(0xee6d));
        EXPECT(0x7, gbc.readMem(0xee6e));
        // C3 0279
        gbc.setState(0x5eb1, 0xe531, 0xefe0, 0x7b76, 0xc738, 0x78a, 0x1, 0x0);
        gbc.writeMem(0x5eb1, { 0xc3, 0x3c, 0x21 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe531, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 027A
        gbc.setState(0x7a3, 0xa5db, 0x4b30, 0x6d6f, 0x17c6, 0x6a38, 0x1, 0x0);
        gbc.writeMem(0x7a3, { 0xc3, 0xa3, 0x23 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa5db, gbc.sp());
        EXPECT(0x23a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 027B
        gbc.setState(0xb92f, 0xcd1a, 0x8e00, 0xcbb0, 0x304a, 0x2557, 0x1, 0x1);
        gbc.writeMem(0xb92f, { 0xc3, 0xcd, 0x9f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcd1a, gbc.sp());
        EXPECT(0x9fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb92f));
        EXPECT(0xcd, gbc.readMem(0xb930));
        EXPECT(0x9f, gbc.readMem(0xb931));
        // C3 027C
        gbc.setState(0xcc78, 0xfd54, 0x4de0, 0xc49d, 0x9c8f, 0x3e99, 0x0, 0x1);
        gbc.writeMem(0xcc78, { 0xc3, 0x30, 0xcc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfd54, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcc78));
        EXPECT(0x30, gbc.readMem(0xcc79));
        EXPECT(0xcc, gbc.readMem(0xcc7a));
        // C3 027D
        gbc.setState(0xc2e9, 0x572c, 0xedb0, 0xfcfb, 0xc0e4, 0x32ca, 0x0, 0x1);
        gbc.writeMem(0xc2e9, { 0xc3, 0x52, 0xe7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x572c, gbc.sp());
        EXPECT(0xe752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc2e9));
        EXPECT(0x52, gbc.readMem(0xc2ea));
        EXPECT(0xe7, gbc.readMem(0xc2eb));
        // C3 027E
        gbc.setState(0x717, 0x2585, 0x6050, 0x5da1, 0xdd47, 0xd2f0, 0x1, 0x1);
        gbc.writeMem(0x717, { 0xc3, 0x20, 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2585, gbc.sp());
        EXPECT(0x1320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 027F
        gbc.setState(0x9202, 0xb503, 0x8590, 0xe6d0, 0x5218, 0x5618, 0x0, 0x0);
        gbc.writeMem(0x9202, { 0xc3, 0x34, 0x14 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb503, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9202));
        EXPECT(0x34, gbc.readMem(0x9203));
        EXPECT(0x14, gbc.readMem(0x9204));
        // C3 0280
        gbc.setState(0x954d, 0x2dbc, 0x2630, 0x950, 0x1955, 0xfe11, 0x0, 0x1);
        gbc.writeMem(0x954d, { 0xc3, 0x4a, 0xee });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2dbc, gbc.sp());
        EXPECT(0xee4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x954d));
        EXPECT(0x4a, gbc.readMem(0x954e));
        EXPECT(0xee, gbc.readMem(0x954f));
        // C3 0281
        gbc.setState(0x711e, 0xa7e4, 0xfb0, 0x591f, 0x5b2a, 0xc40f, 0x1, 0x1);
        gbc.writeMem(0x711e, { 0xc3, 0xd2, 0xd2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa7e4, gbc.sp());
        EXPECT(0xd2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0282
        gbc.setState(0x7d66, 0x904b, 0x6390, 0xbc52, 0x884d, 0xdde, 0x1, 0x1);
        gbc.writeMem(0x7d66, { 0xc3, 0xa4, 0xb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x904b, gbc.sp());
        EXPECT(0xba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0283
        gbc.setState(0x8f78, 0xbf50, 0xc320, 0x2363, 0xa7b7, 0xce54, 0x0, 0x1);
        gbc.writeMem(0x8f78, { 0xc3, 0x25, 0xcc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xcc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8f78));
        EXPECT(0x25, gbc.readMem(0x8f79));
        EXPECT(0xcc, gbc.readMem(0x8f7a));
        // C3 0284
        gbc.setState(0x87d2, 0x231f, 0xbab0, 0x3df0, 0x462b, 0x614c, 0x1, 0x1);
        gbc.writeMem(0x87d2, { 0xc3, 0xd, 0x60 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x231f, gbc.sp());
        EXPECT(0x600d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x87d2));
        EXPECT(0xd, gbc.readMem(0x87d3));
        EXPECT(0x60, gbc.readMem(0x87d4));
        // C3 0285
        gbc.setState(0x21dd, 0x2394, 0xb740, 0x9090, 0xe01f, 0xdc57, 0x1, 0x0);
        gbc.writeMem(0x21dd, { 0xc3, 0xc7, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2394, gbc.sp());
        EXPECT(0xc1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0286
        gbc.setState(0xd9ac, 0xc269, 0x5150, 0x7396, 0x2442, 0xd3c3, 0x1, 0x0);
        gbc.writeMem(0xd9ac, { 0xc3, 0x8, 0xfd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc269, gbc.sp());
        EXPECT(0xfd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd9ac));
        EXPECT(0x8, gbc.readMem(0xd9ad));
        EXPECT(0xfd, gbc.readMem(0xd9ae));
        // C3 0287
        gbc.setState(0x77fe, 0xc804, 0xd50, 0xb768, 0x9dc3, 0x7802, 0x0, 0x0);
        gbc.writeMem(0x77fe, { 0xc3, 0x45, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0x5745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0288
        gbc.setState(0x22b0, 0xf637, 0x7e50, 0x8f3a, 0xb916, 0x2dd9, 0x0, 0x1);
        gbc.writeMem(0x22b0, { 0xc3, 0x75, 0x8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf637, gbc.sp());
        EXPECT(0x875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0289
        gbc.setState(0xe903, 0x7249, 0x2480, 0xc65f, 0xac37, 0x7ac, 0x1, 0x1);
        gbc.writeMem(0xe903, { 0xc3, 0x70, 0xad });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7249, gbc.sp());
        EXPECT(0xad70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe903));
        EXPECT(0x70, gbc.readMem(0xe904));
        EXPECT(0xad, gbc.readMem(0xe905));
        // C3 028A
        gbc.setState(0xba93, 0x2a2f, 0xc840, 0x2e5, 0xd7ac, 0x1554, 0x0, 0x1);
        gbc.writeMem(0xba93, { 0xc3, 0x3a, 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2a2f, gbc.sp());
        EXPECT(0xc3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xba93));
        EXPECT(0x3a, gbc.readMem(0xba94));
        EXPECT(0xc, gbc.readMem(0xba95));
        // C3 028B
        gbc.setState(0x13d6, 0xaabd, 0x1250, 0x4182, 0x821, 0x3024, 0x1, 0x0);
        gbc.writeMem(0x13d6, { 0xc3, 0xf1, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaabd, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 028C
        gbc.setState(0x16a4, 0xdd0, 0xbec0, 0x4683, 0x15f0, 0x9652, 0x1, 0x0);
        gbc.writeMem(0x16a4, { 0xc3, 0x7e, 0x69 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdd0, gbc.sp());
        EXPECT(0x697e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 028D
        gbc.setState(0xe4ba, 0x7a8a, 0xd10, 0xaa44, 0xe1bc, 0x465f, 0x0, 0x1);
        gbc.writeMem(0xe4ba, { 0xc3, 0x3b, 0x89 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7a8a, gbc.sp());
        EXPECT(0x893b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe4ba));
        EXPECT(0x3b, gbc.readMem(0xe4bb));
        EXPECT(0x89, gbc.readMem(0xe4bc));
        // C3 028E
        gbc.setState(0x45fe, 0xbb20, 0xcc30, 0x49d3, 0x27bb, 0xfb4f, 0x1, 0x1);
        gbc.writeMem(0x45fe, { 0xc3, 0x5b, 0xe4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbb20, gbc.sp());
        EXPECT(0xe45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 028F
        gbc.setState(0x7fae, 0x2ca, 0xe9c0, 0x694c, 0xe04c, 0xe7b0, 0x1, 0x1);
        gbc.writeMem(0x7fae, { 0xc3, 0x6f, 0x81 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2ca, gbc.sp());
        EXPECT(0x816f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0290
        gbc.setState(0xbca9, 0xce0e, 0xb180, 0xfc15, 0xa6b8, 0x4d11, 0x1, 0x0);
        gbc.writeMem(0xbca9, { 0xc3, 0xf, 0xa });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xce0e, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbca9));
        EXPECT(0xf, gbc.readMem(0xbcaa));
        EXPECT(0xa, gbc.readMem(0xbcab));
        // C3 0291
        gbc.setState(0x945a, 0x5c12, 0x8cd0, 0x3bbe, 0xc483, 0xbfc0, 0x1, 0x1);
        gbc.writeMem(0x945a, { 0xc3, 0xad, 0xfb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5c12, gbc.sp());
        EXPECT(0xfbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x945a));
        EXPECT(0xad, gbc.readMem(0x945b));
        EXPECT(0xfb, gbc.readMem(0x945c));
        // C3 0292
        gbc.setState(0x73ac, 0x6f1d, 0xdd80, 0x56cf, 0x5b9d, 0x6ba1, 0x0, 0x0);
        gbc.writeMem(0x73ac, { 0xc3, 0x7c, 0x42 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6f1d, gbc.sp());
        EXPECT(0x427c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0293
        gbc.setState(0xd661, 0x43fd, 0x4f80, 0xe3ae, 0xa322, 0xa0c1, 0x1, 0x0);
        gbc.writeMem(0xd661, { 0xc3, 0xe, 0xcf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x43fd, gbc.sp());
        EXPECT(0xcf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd661));
        EXPECT(0xe, gbc.readMem(0xd662));
        EXPECT(0xcf, gbc.readMem(0xd663));
        // C3 0294
        gbc.setState(0xcedf, 0x1c56, 0x5430, 0xc0b9, 0x869c, 0x1e02, 0x0, 0x0);
        gbc.writeMem(0xcedf, { 0xc3, 0xd1, 0xb0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1c56, gbc.sp());
        EXPECT(0xb0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcedf));
        EXPECT(0xd1, gbc.readMem(0xcee0));
        EXPECT(0xb0, gbc.readMem(0xcee1));
        // C3 0295
        gbc.setState(0x1280, 0x840a, 0x2020, 0x8b75, 0xd734, 0x2f8b, 0x0, 0x1);
        gbc.writeMem(0x1280, { 0xc3, 0xf3, 0xdb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x840a, gbc.sp());
        EXPECT(0xdbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0296
        gbc.setState(0xaf0e, 0xff81, 0xd70, 0xe662, 0xcd3b, 0x579a, 0x1, 0x1);
        gbc.writeMem(0xaf0e, { 0xc3, 0xc6, 0xdf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xff81, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaf0e));
        EXPECT(0xc6, gbc.readMem(0xaf0f));
        EXPECT(0xdf, gbc.readMem(0xaf10));
        // C3 0297
        gbc.setState(0xb8da, 0xee4a, 0xd120, 0x5d4a, 0x6ce3, 0x9654, 0x1, 0x1);
        gbc.writeMem(0xb8da, { 0xc3, 0xef, 0xec });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb8da));
        EXPECT(0xef, gbc.readMem(0xb8db));
        EXPECT(0xec, gbc.readMem(0xb8dc));
        // C3 0299
        gbc.setState(0x14a, 0x4859, 0x1100, 0xd6b3, 0xc95c, 0x1cec, 0x1, 0x0);
        gbc.writeMem(0x14a, { 0xc3, 0xc9, 0x3d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4859, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 029A
        gbc.setState(0xc7c3, 0xc67c, 0x2f60, 0xf5ef, 0xaa25, 0x18c6, 0x0, 0x0);
        gbc.writeMem(0xc7c3, { 0xc3, 0xe9, 0x5f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc67c, gbc.sp());
        EXPECT(0x5fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc7c3));
        EXPECT(0xe9, gbc.readMem(0xc7c4));
        EXPECT(0x5f, gbc.readMem(0xc7c5));
        // C3 029B
        gbc.setState(0xb68e, 0x9c38, 0x1830, 0x26ab, 0x94e1, 0x4eb5, 0x0, 0x0);
        gbc.writeMem(0xb68e, { 0xc3, 0x68, 0x66 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0x6668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb68e));
        EXPECT(0x68, gbc.readMem(0xb68f));
        EXPECT(0x66, gbc.readMem(0xb690));
        // C3 029C
        gbc.setState(0x2686, 0x4ba2, 0x65a0, 0x3952, 0x64b4, 0x7037, 0x0, 0x0);
        gbc.writeMem(0x2686, { 0xc3, 0x19, 0x41 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4ba2, gbc.sp());
        EXPECT(0x4119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 029D
        gbc.setState(0x6aa2, 0xe8f0, 0x6ce0, 0x3276, 0xb9b5, 0x5211, 0x1, 0x1);
        gbc.writeMem(0x6aa2, { 0xc3, 0x61, 0x7e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe8f0, gbc.sp());
        EXPECT(0x7e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 029E
        gbc.setState(0xce2c, 0x32a, 0x860, 0x39b3, 0x1395, 0x1414, 0x1, 0x0);
        gbc.writeMem(0xce2c, { 0xc3, 0x95, 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x32a, gbc.sp());
        EXPECT(0x2c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xce2c));
        EXPECT(0x95, gbc.readMem(0xce2d));
        EXPECT(0x2c, gbc.readMem(0xce2e));
        // C3 02A0
        gbc.setState(0x3fa9, 0xbed, 0x3cc0, 0xb51c, 0xd02e, 0xf0b9, 0x1, 0x0);
        gbc.writeMem(0x3fa9, { 0xc3, 0x6d, 0xfd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbed, gbc.sp());
        EXPECT(0xfd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02A1
        gbc.setState(0xea20, 0x4c55, 0xb90, 0x8951, 0x4ccd, 0xcf08, 0x1, 0x0);
        gbc.writeMem(0xea20, { 0xc3, 0x57, 0xb1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4c55, gbc.sp());
        EXPECT(0xb157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xea20));
        EXPECT(0x57, gbc.readMem(0xea21));
        EXPECT(0xb1, gbc.readMem(0xea22));
        // C3 02A2
        gbc.setState(0x3116, 0x4734, 0xb590, 0xc28e, 0x50aa, 0x59a0, 0x1, 0x1);
        gbc.writeMem(0x3116, { 0xc3, 0xe7, 0x98 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0x98e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02A3
        gbc.setState(0x1364, 0xc8c8, 0x3490, 0x92b2, 0xb633, 0xcda8, 0x1, 0x0);
        gbc.writeMem(0x1364, { 0xc3, 0x10, 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc8c8, gbc.sp());
        EXPECT(0x5310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02A4
        gbc.setState(0xa832, 0x86b3, 0x9120, 0x6634, 0xbb5f, 0x83fc, 0x0, 0x0);
        gbc.writeMem(0xa832, { 0xc3, 0x38, 0x88 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x86b3, gbc.sp());
        EXPECT(0x8838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa832));
        EXPECT(0x38, gbc.readMem(0xa833));
        EXPECT(0x88, gbc.readMem(0xa834));
        // C3 02A5
        gbc.setState(0xad70, 0x8b71, 0x9ba0, 0xeaca, 0xcf43, 0x50a8, 0x0, 0x1);
        gbc.writeMem(0xad70, { 0xc3, 0xda, 0x2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8b71, gbc.sp());
        EXPECT(0x2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xad70));
        EXPECT(0xda, gbc.readMem(0xad71));
        EXPECT(0x2, gbc.readMem(0xad72));
        // C3 02A6
        gbc.setState(0x8418, 0x4806, 0xd3a0, 0xfb4e, 0x932d, 0xf046, 0x1, 0x1);
        gbc.writeMem(0x8418, { 0xc3, 0xe2, 0xca });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4806, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8418));
        EXPECT(0xe2, gbc.readMem(0x8419));
        EXPECT(0xca, gbc.readMem(0x841a));
        // C3 02A7
        gbc.setState(0x882c, 0x88ae, 0xadf0, 0x794a, 0x419f, 0xc8ea, 0x0, 0x1);
        gbc.writeMem(0x882c, { 0xc3, 0x25, 0x41 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x88ae, gbc.sp());
        EXPECT(0x4125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x882c));
        EXPECT(0x25, gbc.readMem(0x882d));
        EXPECT(0x41, gbc.readMem(0x882e));
        // C3 02A8
        gbc.setState(0xc9d3, 0xc971, 0xdca0, 0x245b, 0xd3a3, 0x36c1, 0x1, 0x1);
        gbc.writeMem(0xc9d3, { 0xc3, 0xc4, 0x54 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc971, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc9d3));
        EXPECT(0xc4, gbc.readMem(0xc9d4));
        EXPECT(0x54, gbc.readMem(0xc9d5));
        // C3 02A9
        gbc.setState(0x85da, 0xb482, 0xea70, 0xc755, 0xb09f, 0xff71, 0x0, 0x1);
        gbc.writeMem(0x85da, { 0xc3, 0x26, 0x2a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0x2a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x85da));
        EXPECT(0x26, gbc.readMem(0x85db));
        EXPECT(0x2a, gbc.readMem(0x85dc));
        // C3 02AA
        gbc.setState(0x8624, 0x19d, 0x6110, 0xd2c1, 0x92b1, 0x6918, 0x1, 0x0);
        gbc.writeMem(0x8624, { 0xc3, 0xd, 0x69 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x19d, gbc.sp());
        EXPECT(0x690d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8624));
        EXPECT(0xd, gbc.readMem(0x8625));
        EXPECT(0x69, gbc.readMem(0x8626));
        // C3 02AB
        gbc.setState(0x1a0f, 0x555c, 0x4070, 0x5ea4, 0xbe7e, 0x6f0b, 0x0, 0x0);
        gbc.writeMem(0x1a0f, { 0xc3, 0x29, 0x93 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x555c, gbc.sp());
        EXPECT(0x9329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02AC
        gbc.setState(0x9fc1, 0xb857, 0x1180, 0xe35a, 0x96b7, 0xc517, 0x1, 0x0);
        gbc.writeMem(0x9fc1, { 0xc3, 0xb4, 0xa8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb857, gbc.sp());
        EXPECT(0xa8b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9fc1));
        EXPECT(0xb4, gbc.readMem(0x9fc2));
        EXPECT(0xa8, gbc.readMem(0x9fc3));
        // C3 02AD
        gbc.setState(0x1757, 0xdc53, 0xba20, 0x7563, 0x4042, 0x7e41, 0x1, 0x0);
        gbc.writeMem(0x1757, { 0xc3, 0x79, 0xd1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdc53, gbc.sp());
        EXPECT(0xd179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02AE
        gbc.setState(0x64c7, 0x3685, 0x1130, 0x864b, 0x3f, 0x5227, 0x0, 0x1);
        gbc.writeMem(0x64c7, { 0xc3, 0xac, 0xad });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3685, gbc.sp());
        EXPECT(0xadac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02AF
        gbc.setState(0x692a, 0xc572, 0x1a20, 0x1558, 0x670, 0xdae7, 0x0, 0x1);
        gbc.writeMem(0x692a, { 0xc3, 0xa3, 0xb1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc572, gbc.sp());
        EXPECT(0xb1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02B0
        gbc.setState(0x7a22, 0x49fb, 0xe310, 0xd12c, 0xc542, 0x3d2, 0x1, 0x1);
        gbc.writeMem(0x7a22, { 0xc3, 0xae, 0x8c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0x8cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02B1
        gbc.setState(0x8c8a, 0x477a, 0xd850, 0xd317, 0xd6b6, 0x4204, 0x0, 0x1);
        gbc.writeMem(0x8c8a, { 0xc3, 0x46, 0x96 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x477a, gbc.sp());
        EXPECT(0x9646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8c8a));
        EXPECT(0x46, gbc.readMem(0x8c8b));
        EXPECT(0x96, gbc.readMem(0x8c8c));
        // C3 02B2
        gbc.setState(0x330f, 0xe09a, 0xc6f0, 0x9173, 0xc6cc, 0xa629, 0x1, 0x0);
        gbc.writeMem(0x330f, { 0xc3, 0x41, 0x26 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe09a, gbc.sp());
        EXPECT(0x2641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02B3
        gbc.setState(0x7c55, 0x54b7, 0xc9a0, 0x5ec7, 0x9b05, 0x23b4, 0x1, 0x1);
        gbc.writeMem(0x7c55, { 0xc3, 0x70, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x54b7, gbc.sp());
        EXPECT(0xc970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02B4
        gbc.setState(0xd681, 0xfff8, 0x5150, 0x9359, 0x5766, 0x717b, 0x0, 0x1);
        gbc.writeMem(0xd681, { 0xc3, 0xc0, 0xea });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfff8, gbc.sp());
        EXPECT(0xeac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd681));
        EXPECT(0xc0, gbc.readMem(0xd682));
        EXPECT(0xea, gbc.readMem(0xd683));
        // C3 02B5
        gbc.setState(0xa983, 0x5b3e, 0xe730, 0x6b16, 0x4d7c, 0xb0c1, 0x0, 0x1);
        gbc.writeMem(0xa983, { 0xc3, 0xd8, 0x99 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5b3e, gbc.sp());
        EXPECT(0x99d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa983));
        EXPECT(0xd8, gbc.readMem(0xa984));
        EXPECT(0x99, gbc.readMem(0xa985));
        // C3 02B6
        gbc.setState(0xb500, 0xa8d8, 0x8530, 0x2ccd, 0x7fa5, 0xc64f, 0x0, 0x0);
        gbc.writeMem(0xb500, { 0xc3, 0x43, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa8d8, gbc.sp());
        EXPECT(0xc743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb500));
        EXPECT(0x43, gbc.readMem(0xb501));
        EXPECT(0xc7, gbc.readMem(0xb502));
        // C3 02B7
        gbc.setState(0xb633, 0x8084, 0x6960, 0xd3a4, 0x1cc6, 0x6bc, 0x0, 0x1);
        gbc.writeMem(0xb633, { 0xc3, 0x5d, 0x5b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8084, gbc.sp());
        EXPECT(0x5b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb633));
        EXPECT(0x5d, gbc.readMem(0xb634));
        EXPECT(0x5b, gbc.readMem(0xb635));
        // C3 02B8
        gbc.setState(0x629f, 0x15cf, 0xd580, 0xda84, 0x3723, 0xba17, 0x0, 0x1);
        gbc.writeMem(0x629f, { 0xc3, 0x4b, 0x23 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x15cf, gbc.sp());
        EXPECT(0x234b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02B9
        gbc.setState(0xa5c5, 0xc6cc, 0x7ca0, 0x2edc, 0xa661, 0x5b5e, 0x0, 0x0);
        gbc.writeMem(0xa5c5, { 0xc3, 0xd8, 0xda });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc6cc, gbc.sp());
        EXPECT(0xdad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa5c5));
        EXPECT(0xd8, gbc.readMem(0xa5c6));
        EXPECT(0xda, gbc.readMem(0xa5c7));
        // C3 02BA
        gbc.setState(0x6e13, 0xc2d8, 0x58c0, 0x1c29, 0x10d, 0xe4f5, 0x1, 0x1);
        gbc.writeMem(0x6e13, { 0xc3, 0xd6, 0xea });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc2d8, gbc.sp());
        EXPECT(0xead6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02BB
        gbc.setState(0x4608, 0x7dc3, 0xfa10, 0xbbb4, 0x9327, 0xa63, 0x1, 0x0);
        gbc.writeMem(0x4608, { 0xc3, 0x7d, 0x2e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7dc3, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02BC
        gbc.setState(0xe27, 0x35ca, 0xaab0, 0x38aa, 0xdf21, 0xa36e, 0x1, 0x1);
        gbc.writeMem(0xe27, { 0xc3, 0x40, 0xd7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x35ca, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02BD
        gbc.setState(0x2b31, 0x5059, 0xec0, 0xb740, 0x466e, 0x5b44, 0x1, 0x1);
        gbc.writeMem(0x2b31, { 0xc3, 0x97, 0xed });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5059, gbc.sp());
        EXPECT(0xed97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02BE
        gbc.setState(0x29ec, 0x8bd2, 0xc760, 0xcfc3, 0xfc52, 0x5f2, 0x0, 0x0);
        gbc.writeMem(0x29ec, { 0xc3, 0x90, 0xab });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8bd2, gbc.sp());
        EXPECT(0xab90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02BF
        gbc.setState(0x4682, 0x3f0d, 0x7120, 0xed06, 0xf412, 0x5ec6, 0x1, 0x0);
        gbc.writeMem(0x4682, { 0xc3, 0x2, 0xc0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3f0d, gbc.sp());
        EXPECT(0xc002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02C0
        gbc.setState(0x131b, 0x2bfd, 0xa200, 0x4def, 0x3661, 0xc40d, 0x0, 0x1);
        gbc.writeMem(0x131b, { 0xc3, 0x21, 0xab });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0xab21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02C1
        gbc.setState(0xd01d, 0xb299, 0xe60, 0xb9a, 0xb81e, 0x9155, 0x0, 0x1);
        gbc.writeMem(0xd01d, { 0xc3, 0x2d, 0xff });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb299, gbc.sp());
        EXPECT(0xff2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd01d));
        EXPECT(0x2d, gbc.readMem(0xd01e));
        EXPECT(0xff, gbc.readMem(0xd01f));
        // C3 02C2
        gbc.setState(0x4ae0, 0x2cb2, 0x43a0, 0x9032, 0x43c6, 0xca5d, 0x0, 0x1);
        gbc.writeMem(0x4ae0, { 0xc3, 0x6f, 0xfb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2cb2, gbc.sp());
        EXPECT(0xfb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02C3
        gbc.setState(0x1bc0, 0xd2bf, 0x1640, 0xf496, 0x3a8a, 0xc8a5, 0x1, 0x0);
        gbc.writeMem(0x1bc0, { 0xc3, 0x3d, 0xc4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd2bf, gbc.sp());
        EXPECT(0xc43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02C4
        gbc.setState(0x5e86, 0x6c15, 0x2210, 0xe72a, 0x99b1, 0x8508, 0x0, 0x1);
        gbc.writeMem(0x5e86, { 0xc3, 0x21, 0x71 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6c15, gbc.sp());
        EXPECT(0x7121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02C5
        gbc.setState(0x41ed, 0x3ab4, 0x3340, 0xd45e, 0xcc94, 0xebd4, 0x0, 0x1);
        gbc.writeMem(0x41ed, { 0xc3, 0xbf, 0x87 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3ab4, gbc.sp());
        EXPECT(0x87bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02C6
        gbc.setState(0xad15, 0x68f0, 0x2b10, 0x1ac4, 0x2b8c, 0x396a, 0x1, 0x1);
        gbc.writeMem(0xad15, { 0xc3, 0x3f, 0xb4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x68f0, gbc.sp());
        EXPECT(0xb43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xad15));
        EXPECT(0x3f, gbc.readMem(0xad16));
        EXPECT(0xb4, gbc.readMem(0xad17));
        // C3 02C7
        gbc.setState(0x46b3, 0x92ed, 0xa870, 0xac53, 0x79fb, 0x58fc, 0x0, 0x1);
        gbc.writeMem(0x46b3, { 0xc3, 0x8f, 0x65 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x92ed, gbc.sp());
        EXPECT(0x658f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02C8
        gbc.setState(0xc185, 0x99b6, 0xb060, 0x527e, 0xf2b7, 0xdc5f, 0x1, 0x1);
        gbc.writeMem(0xc185, { 0xc3, 0xaa, 0xda });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x99b6, gbc.sp());
        EXPECT(0xdaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc185));
        EXPECT(0xaa, gbc.readMem(0xc186));
        EXPECT(0xda, gbc.readMem(0xc187));
        // C3 02C9
        gbc.setState(0xd365, 0x72a5, 0x4500, 0x6cc4, 0x1746, 0x8831, 0x0, 0x0);
        gbc.writeMem(0xd365, { 0xc3, 0xa8, 0x6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x72a5, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd365));
        EXPECT(0xa8, gbc.readMem(0xd366));
        EXPECT(0x6, gbc.readMem(0xd367));
        // C3 02CA
        gbc.setState(0x3525, 0x8c26, 0x4140, 0x65bb, 0xca75, 0x3a1d, 0x0, 0x0);
        gbc.writeMem(0x3525, { 0xc3, 0x39, 0xce });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8c26, gbc.sp());
        EXPECT(0xce39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02CB
        gbc.setState(0x4ee0, 0xcac8, 0xb700, 0xdac0, 0xcbc6, 0xa2d7, 0x0, 0x0);
        gbc.writeMem(0x4ee0, { 0xc3, 0xbe, 0x2e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x2ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02CC
        gbc.setState(0x455b, 0x47db, 0x5cb0, 0x7306, 0x9603, 0xbf2, 0x0, 0x0);
        gbc.writeMem(0x455b, { 0xc3, 0xfc, 0x29 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x47db, gbc.sp());
        EXPECT(0x29fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02CD
        gbc.setState(0x2b92, 0x2618, 0x69b0, 0x2097, 0xe57, 0x5286, 0x1, 0x1);
        gbc.writeMem(0x2b92, { 0xc3, 0x0, 0x6e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2618, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02CF
        gbc.setState(0xbb6f, 0x639e, 0x6ac0, 0x4d5c, 0xe6f0, 0x9b1e, 0x0, 0x0);
        gbc.writeMem(0xbb6f, { 0xc3, 0x86, 0xeb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x639e, gbc.sp());
        EXPECT(0xeb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbb6f));
        EXPECT(0x86, gbc.readMem(0xbb70));
        EXPECT(0xeb, gbc.readMem(0xbb71));
        // C3 02D0
        gbc.setState(0xa679, 0xca4e, 0x9250, 0x5efb, 0x6502, 0x803f, 0x0, 0x0);
        gbc.writeMem(0xa679, { 0xc3, 0x68, 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xca4e, gbc.sp());
        EXPECT(0xd068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa679));
        EXPECT(0x68, gbc.readMem(0xa67a));
        EXPECT(0xd0, gbc.readMem(0xa67b));
        // C3 02D1
        gbc.setState(0xbba1, 0x2f16, 0x7890, 0x3e09, 0xca6c, 0x7d71, 0x1, 0x0);
        gbc.writeMem(0xbba1, { 0xc3, 0x47, 0xae });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0xae47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbba1));
        EXPECT(0x47, gbc.readMem(0xbba2));
        EXPECT(0xae, gbc.readMem(0xbba3));
        // C3 02D2
        gbc.setState(0x7829, 0x25a1, 0xd60, 0xa53f, 0xaa0d, 0x92a6, 0x1, 0x1);
        gbc.writeMem(0x7829, { 0xc3, 0xd8, 0x11 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x25a1, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02D3
        gbc.setState(0x2dd8, 0x31d1, 0x69c0, 0x40e4, 0xd580, 0x5c4e, 0x1, 0x1);
        gbc.writeMem(0x2dd8, { 0xc3, 0x21, 0xa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x31d1, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02D4
        gbc.setState(0xc6ea, 0x3516, 0x8380, 0xca88, 0x9bf3, 0x700a, 0x1, 0x1);
        gbc.writeMem(0xc6ea, { 0xc3, 0xd4, 0x69 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0x69d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc6ea));
        EXPECT(0xd4, gbc.readMem(0xc6eb));
        EXPECT(0x69, gbc.readMem(0xc6ec));
        // C3 02D5
        gbc.setState(0xc0c3, 0xa0f2, 0x2580, 0x41e0, 0xc1ed, 0xa7bb, 0x0, 0x0);
        gbc.writeMem(0xc0c3, { 0xc3, 0xdd, 0x12 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa0f2, gbc.sp());
        EXPECT(0x12dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc0c3));
        EXPECT(0xdd, gbc.readMem(0xc0c4));
        EXPECT(0x12, gbc.readMem(0xc0c5));
        // C3 02D6
        gbc.setState(0xe672, 0xec21, 0x28e0, 0x77d0, 0x86f7, 0xe99, 0x0, 0x1);
        gbc.writeMem(0xe672, { 0xc3, 0xf2, 0x19 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xec21, gbc.sp());
        EXPECT(0x19f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe672));
        EXPECT(0xf2, gbc.readMem(0xe673));
        EXPECT(0x19, gbc.readMem(0xe674));
        // C3 02D7
        gbc.setState(0x218f, 0xd74a, 0xc440, 0x1e66, 0x2fb, 0xd89f, 0x0, 0x0);
        gbc.writeMem(0x218f, { 0xc3, 0x32, 0x79 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd74a, gbc.sp());
        EXPECT(0x7932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02D8
        gbc.setState(0x3466, 0xec77, 0x1f80, 0xbde3, 0xcd91, 0x3d62, 0x1, 0x1);
        gbc.writeMem(0x3466, { 0xc3, 0x29, 0x5a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xec77, gbc.sp());
        EXPECT(0x5a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02D9
        gbc.setState(0x8b40, 0xd563, 0x7c60, 0xf4b7, 0xb70e, 0x7be8, 0x1, 0x0);
        gbc.writeMem(0x8b40, { 0xc3, 0x64, 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd563, gbc.sp());
        EXPECT(0xc864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8b40));
        EXPECT(0x64, gbc.readMem(0x8b41));
        EXPECT(0xc8, gbc.readMem(0x8b42));
        // C3 02DA
        gbc.setState(0xe468, 0x9287, 0xbd10, 0x5471, 0xbcf0, 0xe69, 0x1, 0x1);
        gbc.writeMem(0xe468, { 0xc3, 0x5f, 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9287, gbc.sp());
        EXPECT(0x2b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe468));
        EXPECT(0x5f, gbc.readMem(0xe469));
        EXPECT(0x2b, gbc.readMem(0xe46a));
        // C3 02DB
        gbc.setState(0xa301, 0x7d38, 0x1a70, 0xfb37, 0x2a27, 0xef56, 0x0, 0x0);
        gbc.writeMem(0xa301, { 0xc3, 0xf, 0x2b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa301));
        EXPECT(0xf, gbc.readMem(0xa302));
        EXPECT(0x2b, gbc.readMem(0xa303));
        // C3 02DC
        gbc.setState(0xd21e, 0xd38a, 0xaf80, 0x4ff9, 0x9ef9, 0x36d, 0x0, 0x0);
        gbc.writeMem(0xd21e, { 0xc3, 0xfe, 0xb8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd38a, gbc.sp());
        EXPECT(0xb8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd21e));
        EXPECT(0xfe, gbc.readMem(0xd21f));
        EXPECT(0xb8, gbc.readMem(0xd220));
        // C3 02DD
        gbc.setState(0xc216, 0x344c, 0xceb0, 0xe664, 0xcadd, 0xee85, 0x0, 0x1);
        gbc.writeMem(0xc216, { 0xc3, 0x8b, 0xc5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0xc58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc216));
        EXPECT(0x8b, gbc.readMem(0xc217));
        EXPECT(0xc5, gbc.readMem(0xc218));
        // C3 02DE
        gbc.setState(0x78b2, 0x7e08, 0x13f0, 0x96fb, 0xbc81, 0xd6a4, 0x0, 0x0);
        gbc.writeMem(0x78b2, { 0xc3, 0xda, 0xae });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7e08, gbc.sp());
        EXPECT(0xaeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02DF
        gbc.setState(0x4559, 0x62c2, 0xc200, 0x9fcf, 0xd19, 0xa87b, 0x1, 0x1);
        gbc.writeMem(0x4559, { 0xc3, 0x3a, 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x62c2, gbc.sp());
        EXPECT(0x53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02E0
        gbc.setState(0xae0d, 0x9b02, 0xfa0, 0x20e5, 0x9c9d, 0xac9e, 0x1, 0x0);
        gbc.writeMem(0xae0d, { 0xc3, 0xdc, 0x71 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9b02, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xae0d));
        EXPECT(0xdc, gbc.readMem(0xae0e));
        EXPECT(0x71, gbc.readMem(0xae0f));
        // C3 02E1
        gbc.setState(0x2ad4, 0x62c9, 0xe530, 0xc90c, 0x16c7, 0x7ba2, 0x0, 0x1);
        gbc.writeMem(0x2ad4, { 0xc3, 0x5e, 0xbd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x62c9, gbc.sp());
        EXPECT(0xbd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02E2
        gbc.setState(0x60ba, 0x9864, 0xe860, 0x7de, 0x47a3, 0x6742, 0x0, 0x0);
        gbc.writeMem(0x60ba, { 0xc3, 0xd3, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9864, gbc.sp());
        EXPECT(0x2fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02E3
        gbc.setState(0x1a, 0xb5bc, 0x35a0, 0x53b9, 0x563e, 0xd85, 0x0, 0x1);
        gbc.writeMem(0x1a, { 0xc3, 0x5c, 0xf7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0xf75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02E4
        gbc.setState(0x167f, 0x3f0e, 0xbec0, 0x7df1, 0xa0c1, 0xcfcd, 0x1, 0x0);
        gbc.writeMem(0x167f, { 0xc3, 0x93, 0x44 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3f0e, gbc.sp());
        EXPECT(0x4493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02E5
        gbc.setState(0x397e, 0xc833, 0xbb20, 0xe8ce, 0x7897, 0x8a60, 0x1, 0x0);
        gbc.writeMem(0x397e, { 0xc3, 0x90, 0xe6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc833, gbc.sp());
        EXPECT(0xe690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02E6
        gbc.setState(0x9750, 0x1938, 0x5700, 0x1919, 0x90ae, 0x6ada, 0x1, 0x1);
        gbc.writeMem(0x9750, { 0xc3, 0x7d, 0x86 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1938, gbc.sp());
        EXPECT(0x867d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9750));
        EXPECT(0x7d, gbc.readMem(0x9751));
        EXPECT(0x86, gbc.readMem(0x9752));
        // C3 02E7
        gbc.setState(0xc853, 0xf5d0, 0xaed0, 0x742d, 0xb77, 0x6446, 0x0, 0x1);
        gbc.writeMem(0xc853, { 0xc3, 0xad, 0xe2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf5d0, gbc.sp());
        EXPECT(0xe2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc853));
        EXPECT(0xad, gbc.readMem(0xc854));
        EXPECT(0xe2, gbc.readMem(0xc855));
        // C3 02E9
        gbc.setState(0xbdbc, 0xf390, 0x72c0, 0x9a81, 0x3d8e, 0xadf5, 0x0, 0x1);
        gbc.writeMem(0xbdbc, { 0xc3, 0x1c, 0x4a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf390, gbc.sp());
        EXPECT(0x4a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbdbc));
        EXPECT(0x1c, gbc.readMem(0xbdbd));
        EXPECT(0x4a, gbc.readMem(0xbdbe));
        // C3 02EA
        gbc.setState(0xe9c7, 0xbfa6, 0xf3b0, 0xc7fc, 0xea04, 0x8ff4, 0x1, 0x1);
        gbc.writeMem(0xe9c7, { 0xc3, 0xcf, 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbfa6, gbc.sp());
        EXPECT(0x37cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe9c7));
        EXPECT(0xcf, gbc.readMem(0xe9c8));
        EXPECT(0x37, gbc.readMem(0xe9c9));
        // C3 02EB
        gbc.setState(0xc192, 0xe279, 0xc6f0, 0x9049, 0xaa4d, 0x67a7, 0x0, 0x0);
        gbc.writeMem(0xc192, { 0xc3, 0xc0, 0x33 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe279, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc192));
        EXPECT(0xc0, gbc.readMem(0xc193));
        EXPECT(0x33, gbc.readMem(0xc194));
        // C3 02EC
        gbc.setState(0x9719, 0x17be, 0xc5e0, 0x3184, 0xbfe0, 0xddf2, 0x1, 0x1);
        gbc.writeMem(0x9719, { 0xc3, 0xe6, 0x1a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x17be, gbc.sp());
        EXPECT(0x1ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9719));
        EXPECT(0xe6, gbc.readMem(0x971a));
        EXPECT(0x1a, gbc.readMem(0x971b));
        // C3 02ED
        gbc.setState(0x989a, 0xebf4, 0xfaa0, 0xcf4b, 0xe885, 0xe676, 0x1, 0x1);
        gbc.writeMem(0x989a, { 0xc3, 0xdb, 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xebf4, gbc.sp());
        EXPECT(0x13db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x989a));
        EXPECT(0xdb, gbc.readMem(0x989b));
        EXPECT(0x13, gbc.readMem(0x989c));
        // C3 02EE
        gbc.setState(0x21c, 0x5cae, 0x7310, 0x8afb, 0xe4d7, 0x80ea, 0x0, 0x1);
        gbc.writeMem(0x21c, { 0xc3, 0xac, 0xef });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5cae, gbc.sp());
        EXPECT(0xefac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02EF
        gbc.setState(0x73ef, 0x8d57, 0x5210, 0x38f5, 0xa468, 0xa213, 0x0, 0x1);
        gbc.writeMem(0x73ef, { 0xc3, 0x85, 0xd5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8d57, gbc.sp());
        EXPECT(0xd585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02F1
        gbc.setState(0xcbe3, 0x8341, 0x4df0, 0xe08b, 0x537f, 0x6c3e, 0x1, 0x0);
        gbc.writeMem(0xcbe3, { 0xc3, 0x7a, 0xcd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8341, gbc.sp());
        EXPECT(0xcd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcbe3));
        EXPECT(0x7a, gbc.readMem(0xcbe4));
        EXPECT(0xcd, gbc.readMem(0xcbe5));
        // C3 02F2
        gbc.setState(0xab7a, 0x1bd9, 0xde20, 0x6853, 0x616c, 0x9748, 0x0, 0x1);
        gbc.writeMem(0xab7a, { 0xc3, 0xdd, 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1bd9, gbc.sp());
        EXPECT(0xdedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xab7a));
        EXPECT(0xdd, gbc.readMem(0xab7b));
        EXPECT(0xde, gbc.readMem(0xab7c));
        // C3 02F3
        gbc.setState(0xd5e1, 0x31a0, 0xbb30, 0xf099, 0x7cc9, 0x7782, 0x0, 0x0);
        gbc.writeMem(0xd5e1, { 0xc3, 0x96, 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x31a0, gbc.sp());
        EXPECT(0x5d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd5e1));
        EXPECT(0x96, gbc.readMem(0xd5e2));
        EXPECT(0x5d, gbc.readMem(0xd5e3));
        // C3 02F4
        gbc.setState(0xe7b4, 0xd241, 0x4c30, 0xd836, 0x84fd, 0xef9e, 0x1, 0x0);
        gbc.writeMem(0xe7b4, { 0xc3, 0x57, 0xec });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd241, gbc.sp());
        EXPECT(0xec57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe7b4));
        EXPECT(0x57, gbc.readMem(0xe7b5));
        EXPECT(0xec, gbc.readMem(0xe7b6));
        // C3 02F6
        gbc.setState(0xc5dc, 0x14a7, 0xb4b0, 0xac4f, 0x3f3e, 0x5ae4, 0x0, 0x0);
        gbc.writeMem(0xc5dc, { 0xc3, 0xb0, 0xf2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x14a7, gbc.sp());
        EXPECT(0xf2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc5dc));
        EXPECT(0xb0, gbc.readMem(0xc5dd));
        EXPECT(0xf2, gbc.readMem(0xc5de));
        // C3 02F7
        gbc.setState(0xcbc2, 0x762c, 0xe050, 0x2e9e, 0x3c21, 0xf4d6, 0x1, 0x0);
        gbc.writeMem(0xcbc2, { 0xc3, 0x6b, 0xd3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x762c, gbc.sp());
        EXPECT(0xd36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcbc2));
        EXPECT(0x6b, gbc.readMem(0xcbc3));
        EXPECT(0xd3, gbc.readMem(0xcbc4));
        // C3 02F8
        gbc.setState(0x7fed, 0x28c8, 0x2c60, 0xa92a, 0xb06, 0x2d0b, 0x1, 0x1);
        gbc.writeMem(0x7fed, { 0xc3, 0xb0, 0x58 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x28c8, gbc.sp());
        EXPECT(0x58b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02F9
        gbc.setState(0x776c, 0xb61d, 0x1320, 0xef1d, 0x7eaf, 0xde08, 0x1, 0x0);
        gbc.writeMem(0x776c, { 0xc3, 0xa1, 0x6c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 02FA
        gbc.setState(0x20dc, 0xf736, 0x89b0, 0x8ba8, 0x3883, 0x87f4, 0x0, 0x0);
        gbc.writeMem(0x20dc, { 0xc3, 0xb0, 0x34 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf736, gbc.sp());
        EXPECT(0x34b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02FB
        gbc.setState(0x3145, 0x3fd5, 0xd90, 0x5b14, 0x8ac2, 0x5b9, 0x0, 0x1);
        gbc.writeMem(0x3145, { 0xc3, 0xe0, 0x4c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02FC
        gbc.setState(0x7d2, 0xc46b, 0xf990, 0x5256, 0xe5a9, 0xfffe, 0x1, 0x0);
        gbc.writeMem(0x7d2, { 0xc3, 0x2f, 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc46b, gbc.sp());
        EXPECT(0x9e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02FD
        gbc.setState(0x2d4, 0x63b9, 0x70d0, 0xac1, 0x7dbb, 0xb21f, 0x1, 0x1);
        gbc.writeMem(0x2d4, { 0xc3, 0xa6, 0x1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x63b9, gbc.sp());
        EXPECT(0x1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 02FE
        gbc.setState(0xbb66, 0xc583, 0x4850, 0x52e4, 0x6d88, 0x3409, 0x0, 0x1);
        gbc.writeMem(0xbb66, { 0xc3, 0x80, 0xe1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0xe180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbb66));
        EXPECT(0x80, gbc.readMem(0xbb67));
        EXPECT(0xe1, gbc.readMem(0xbb68));
        // C3 0300
        gbc.setState(0xd638, 0x8f1b, 0xc0f0, 0x9020, 0xf304, 0x8cec, 0x0, 0x1);
        gbc.writeMem(0xd638, { 0xc3, 0x8c, 0xb6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8f1b, gbc.sp());
        EXPECT(0xb68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd638));
        EXPECT(0x8c, gbc.readMem(0xd639));
        EXPECT(0xb6, gbc.readMem(0xd63a));
        // C3 0301
        gbc.setState(0x4cf3, 0x6745, 0xa9c0, 0x29fa, 0x92fb, 0x241c, 0x0, 0x0);
        gbc.writeMem(0x4cf3, { 0xc3, 0xd9, 0xd4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6745, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0303
        gbc.setState(0x5e53, 0x118b, 0x63d0, 0x3b0b, 0x2194, 0x22a2, 0x1, 0x0);
        gbc.writeMem(0x5e53, { 0xc3, 0xe0, 0x8e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x118b, gbc.sp());
        EXPECT(0x8ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0304
        gbc.setState(0xcae2, 0xe1b8, 0xf280, 0x8fe7, 0xfc27, 0x1e81, 0x0, 0x0);
        gbc.writeMem(0xcae2, { 0xc3, 0x57, 0xc7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe1b8, gbc.sp());
        EXPECT(0xc757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcae2));
        EXPECT(0x57, gbc.readMem(0xcae3));
        EXPECT(0xc7, gbc.readMem(0xcae4));
        // C3 0305
        gbc.setState(0xe219, 0x5884, 0x23f0, 0x3486, 0x92ef, 0xe40, 0x0, 0x1);
        gbc.writeMem(0xe219, { 0xc3, 0x5, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0xa405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe219));
        EXPECT(0x5, gbc.readMem(0xe21a));
        EXPECT(0xa4, gbc.readMem(0xe21b));
        // C3 0306
        gbc.setState(0xc104, 0x47c2, 0xb950, 0x7017, 0x1e36, 0x5683, 0x0, 0x0);
        gbc.writeMem(0xc104, { 0xc3, 0xf0, 0xaa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x47c2, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc104));
        EXPECT(0xf0, gbc.readMem(0xc105));
        EXPECT(0xaa, gbc.readMem(0xc106));
        // C3 0307
        gbc.setState(0x1a08, 0xeaa5, 0xb020, 0x4fa, 0x492, 0x478f, 0x0, 0x1);
        gbc.writeMem(0x1a08, { 0xc3, 0x35, 0xa9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0xa935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0308
        gbc.setState(0x140c, 0x431a, 0x8220, 0x8d9e, 0x9287, 0x40ff, 0x1, 0x0);
        gbc.writeMem(0x140c, { 0xc3, 0x80, 0x46 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x431a, gbc.sp());
        EXPECT(0x4680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0309
        gbc.setState(0x3065, 0xc66a, 0x3360, 0xe5b3, 0xc28a, 0xf8d0, 0x0, 0x0);
        gbc.writeMem(0x3065, { 0xc3, 0x49, 0x93 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc66a, gbc.sp());
        EXPECT(0x9349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 030A
        gbc.setState(0x66c8, 0x1e29, 0xfc90, 0xb993, 0xae23, 0x113d, 0x1, 0x1);
        gbc.writeMem(0x66c8, { 0xc3, 0xb7, 0x16 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1e29, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 030B
        gbc.setState(0x74f7, 0x6960, 0x53d0, 0xa75d, 0x7019, 0xd6e2, 0x1, 0x0);
        gbc.writeMem(0x74f7, { 0xc3, 0xc8, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6960, gbc.sp());
        EXPECT(0x9fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 030C
        gbc.setState(0x6767, 0xbc1a, 0x3980, 0xe3b9, 0x40b7, 0x41da, 0x0, 0x1);
        gbc.writeMem(0x6767, { 0xc3, 0x59, 0x5b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbc1a, gbc.sp());
        EXPECT(0x5b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 030D
        gbc.setState(0x4134, 0x9430, 0xb5e0, 0x9b08, 0x91d2, 0xabfc, 0x0, 0x1);
        gbc.writeMem(0x4134, { 0xc3, 0xf0, 0xd6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0xd6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 030E
        gbc.setState(0x3638, 0x184e, 0x8da0, 0xd00a, 0xaa83, 0xc116, 0x0, 0x1);
        gbc.writeMem(0x3638, { 0xc3, 0x31, 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x184e, gbc.sp());
        EXPECT(0x4431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 030F
        gbc.setState(0xacd5, 0xfe55, 0xffa0, 0x24f9, 0x79a5, 0xb129, 0x0, 0x1);
        gbc.writeMem(0xacd5, { 0xc3, 0xf, 0x66 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfe55, gbc.sp());
        EXPECT(0x660f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xacd5));
        EXPECT(0xf, gbc.readMem(0xacd6));
        EXPECT(0x66, gbc.readMem(0xacd7));
        // C3 0310
        gbc.setState(0xb19, 0x8f60, 0x65b0, 0xb2ac, 0xd98d, 0xd29b, 0x1, 0x1);
        gbc.writeMem(0xb19, { 0xc3, 0x5a, 0x77 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8f60, gbc.sp());
        EXPECT(0x775a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0311
        gbc.setState(0x4388, 0x53f5, 0x6600, 0x8d58, 0x1a41, 0x7f2d, 0x1, 0x1);
        gbc.writeMem(0x4388, { 0xc3, 0x6e, 0x93 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x53f5, gbc.sp());
        EXPECT(0x936e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0312
        gbc.setState(0xeb, 0x5007, 0xa690, 0x623b, 0x48f7, 0x5d4b, 0x0, 0x0);
        gbc.writeMem(0xeb, { 0xc3, 0x97, 0x84 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5007, gbc.sp());
        EXPECT(0x8497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0313
        gbc.setState(0x3583, 0xadd5, 0xc710, 0xb241, 0x5423, 0x9925, 0x0, 0x1);
        gbc.writeMem(0x3583, { 0xc3, 0x15, 0xec });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xadd5, gbc.sp());
        EXPECT(0xec15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0314
        gbc.setState(0x5d76, 0x58f3, 0x2780, 0x4cf3, 0x680e, 0xe3b5, 0x0, 0x0);
        gbc.writeMem(0x5d76, { 0xc3, 0xba, 0xb2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x58f3, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0316
        gbc.setState(0xe0cd, 0xff7f, 0x53d0, 0xfc7e, 0xb2c0, 0x319d, 0x0, 0x1);
        gbc.writeMem(0xe0cd, { 0xc3, 0x7c, 0xdc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xff7f, gbc.sp());
        EXPECT(0xdc7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe0cd));
        EXPECT(0x7c, gbc.readMem(0xe0ce));
        EXPECT(0xdc, gbc.readMem(0xe0cf));
        // C3 0318
        gbc.setState(0x8c0b, 0x9812, 0x5cd0, 0xd115, 0xf02e, 0xa644, 0x0, 0x0);
        gbc.writeMem(0x8c0b, { 0xc3, 0x5, 0x5e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9812, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8c0b));
        EXPECT(0x5, gbc.readMem(0x8c0c));
        EXPECT(0x5e, gbc.readMem(0x8c0d));
        // C3 0319
        gbc.setState(0xd658, 0x2e99, 0x4f00, 0xc2d8, 0x2d6e, 0xd7f2, 0x0, 0x1);
        gbc.writeMem(0xd658, { 0xc3, 0x54, 0x31 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2e99, gbc.sp());
        EXPECT(0x3154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd658));
        EXPECT(0x54, gbc.readMem(0xd659));
        EXPECT(0x31, gbc.readMem(0xd65a));
        // C3 031A
        gbc.setState(0x4e32, 0x2c2b, 0x64f0, 0x5ee7, 0x606e, 0x653d, 0x0, 0x1);
        gbc.writeMem(0x4e32, { 0xc3, 0x9, 0xa4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2c2b, gbc.sp());
        EXPECT(0xa409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 031B
        gbc.setState(0x22b, 0x2f1e, 0xda50, 0xf0dd, 0xf4e5, 0xe047, 0x0, 0x1);
        gbc.writeMem(0x22b, { 0xc3, 0xf3, 0xa7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2f1e, gbc.sp());
        EXPECT(0xa7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 031C
        gbc.setState(0xc85d, 0xce24, 0x20e0, 0xd86a, 0x2491, 0x6501, 0x0, 0x1);
        gbc.writeMem(0xc85d, { 0xc3, 0xbb, 0x1a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xce24, gbc.sp());
        EXPECT(0x1abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc85d));
        EXPECT(0xbb, gbc.readMem(0xc85e));
        EXPECT(0x1a, gbc.readMem(0xc85f));
        // C3 031E
        gbc.setState(0xe694, 0x612c, 0xf500, 0x21dc, 0x6f4e, 0x9de9, 0x1, 0x1);
        gbc.writeMem(0xe694, { 0xc3, 0xb8, 0x76 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x612c, gbc.sp());
        EXPECT(0x76b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe694));
        EXPECT(0xb8, gbc.readMem(0xe695));
        EXPECT(0x76, gbc.readMem(0xe696));
        // C3 031F
        gbc.setState(0xa5d5, 0xa84b, 0xa2b0, 0x3d51, 0xac8f, 0xa5f7, 0x0, 0x0);
        gbc.writeMem(0xa5d5, { 0xc3, 0xbe, 0x9c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa84b, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa5d5));
        EXPECT(0xbe, gbc.readMem(0xa5d6));
        EXPECT(0x9c, gbc.readMem(0xa5d7));
        // C3 0320
        gbc.setState(0xc8b7, 0x139f, 0x76b0, 0x662e, 0x6f1d, 0xfc65, 0x1, 0x1);
        gbc.writeMem(0xc8b7, { 0xc3, 0x98, 0xd6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x139f, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc8b7));
        EXPECT(0x98, gbc.readMem(0xc8b8));
        EXPECT(0xd6, gbc.readMem(0xc8b9));
        // C3 0321
        gbc.setState(0xcf6b, 0xd6d0, 0xb880, 0x247, 0x42e9, 0x60cf, 0x1, 0x1);
        gbc.writeMem(0xcf6b, { 0xc3, 0x76, 0x41 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd6d0, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcf6b));
        EXPECT(0x76, gbc.readMem(0xcf6c));
        EXPECT(0x41, gbc.readMem(0xcf6d));
        // C3 0322
        gbc.setState(0xcbe5, 0x7d46, 0x4da0, 0xe1c3, 0x29a0, 0x76b1, 0x1, 0x1);
        gbc.writeMem(0xcbe5, { 0xc3, 0x60, 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7d46, gbc.sp());
        EXPECT(0x9b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcbe5));
        EXPECT(0x60, gbc.readMem(0xcbe6));
        EXPECT(0x9b, gbc.readMem(0xcbe7));
        // C3 0323
        gbc.setState(0x2c48, 0x5bfe, 0x1870, 0xf0cd, 0x99bf, 0x645, 0x1, 0x0);
        gbc.writeMem(0x2c48, { 0xc3, 0x2e, 0xa9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0xa92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0324
        gbc.setState(0x1fc2, 0xdb8a, 0x92e0, 0x8984, 0x8ced, 0x5372, 0x1, 0x0);
        gbc.writeMem(0x1fc2, { 0xc3, 0x8, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0x3508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0325
        gbc.setState(0xe96e, 0x10db, 0x8180, 0xa1f3, 0x48c6, 0xa7ed, 0x1, 0x0);
        gbc.writeMem(0xe96e, { 0xc3, 0x28, 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0x2d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe96e));
        EXPECT(0x28, gbc.readMem(0xe96f));
        EXPECT(0x2d, gbc.readMem(0xe970));
        // C3 0326
        gbc.setState(0xda4f, 0x613a, 0x1120, 0x14ee, 0x94d6, 0x3cb8, 0x0, 0x0);
        gbc.writeMem(0xda4f, { 0xc3, 0x92, 0xbf });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x613a, gbc.sp());
        EXPECT(0xbf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xda4f));
        EXPECT(0x92, gbc.readMem(0xda50));
        EXPECT(0xbf, gbc.readMem(0xda51));
        // C3 0327
        gbc.setState(0x87ff, 0x65bb, 0x5c20, 0xfd41, 0xdd79, 0xcd4f, 0x0, 0x1);
        gbc.writeMem(0x87ff, { 0xc3, 0xbf, 0xbe });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x65bb, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x87ff));
        EXPECT(0xbf, gbc.readMem(0x8800));
        EXPECT(0xbe, gbc.readMem(0x8801));
        // C3 0328
        gbc.setState(0xd9dc, 0x72d7, 0x6120, 0xf1f8, 0x5ecd, 0x1f59, 0x0, 0x1);
        gbc.writeMem(0xd9dc, { 0xc3, 0x3c, 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x72d7, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd9dc));
        EXPECT(0x3c, gbc.readMem(0xd9dd));
        EXPECT(0x9d, gbc.readMem(0xd9de));
        // C3 0329
        gbc.setState(0xc4f2, 0xf647, 0xc590, 0xe83d, 0x43e1, 0x935c, 0x1, 0x0);
        gbc.writeMem(0xc4f2, { 0xc3, 0x8f, 0x56 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf647, gbc.sp());
        EXPECT(0x568f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc4f2));
        EXPECT(0x8f, gbc.readMem(0xc4f3));
        EXPECT(0x56, gbc.readMem(0xc4f4));
        // C3 032A
        gbc.setState(0x6c83, 0x1b56, 0xfea0, 0x12cf, 0x7797, 0x7947, 0x1, 0x1);
        gbc.writeMem(0x6c83, { 0xc3, 0xe3, 0x4e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1b56, gbc.sp());
        EXPECT(0x4ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 032B
        gbc.setState(0xec0c, 0xbd88, 0x7460, 0x41f0, 0xfbe4, 0x89d9, 0x0, 0x1);
        gbc.writeMem(0xec0c, { 0xc3, 0xa4, 0x72 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbd88, gbc.sp());
        EXPECT(0x72a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xec0c));
        EXPECT(0xa4, gbc.readMem(0xec0d));
        EXPECT(0x72, gbc.readMem(0xec0e));
        // C3 032C
        gbc.setState(0xdde1, 0xad85, 0xcee0, 0xa191, 0x6aa5, 0x6252, 0x0, 0x0);
        gbc.writeMem(0xdde1, { 0xc3, 0x5c, 0xbb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xad85, gbc.sp());
        EXPECT(0xbb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdde1));
        EXPECT(0x5c, gbc.readMem(0xdde2));
        EXPECT(0xbb, gbc.readMem(0xdde3));
        // C3 032D
        gbc.setState(0x5e21, 0x3006, 0x7940, 0x6e9b, 0x8113, 0xe7bd, 0x0, 0x0);
        gbc.writeMem(0x5e21, { 0xc3, 0x97, 0x4f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3006, gbc.sp());
        EXPECT(0x4f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 032E
        gbc.setState(0xba8f, 0xd0e4, 0xbce0, 0xd0be, 0xc814, 0x79e5, 0x1, 0x0);
        gbc.writeMem(0xba8f, { 0xc3, 0xf0, 0x16 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd0e4, gbc.sp());
        EXPECT(0x16f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xba8f));
        EXPECT(0xf0, gbc.readMem(0xba90));
        EXPECT(0x16, gbc.readMem(0xba91));
        // C3 032F
        gbc.setState(0xf91, 0x58ff, 0xbd30, 0x5d3f, 0xf0fb, 0xef55, 0x0, 0x1);
        gbc.writeMem(0xf91, { 0xc3, 0xe8, 0x9f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x58ff, gbc.sp());
        EXPECT(0x9fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0330
        gbc.setState(0xc945, 0x6f28, 0xad30, 0x8b70, 0x1343, 0xb37e, 0x0, 0x0);
        gbc.writeMem(0xc945, { 0xc3, 0xa, 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6f28, gbc.sp());
        EXPECT(0x9d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc945));
        EXPECT(0xa, gbc.readMem(0xc946));
        EXPECT(0x9d, gbc.readMem(0xc947));
        // C3 0331
        gbc.setState(0x222b, 0x27b1, 0x3cb0, 0xe826, 0x3056, 0x916f, 0x0, 0x0);
        gbc.writeMem(0x222b, { 0xc3, 0x9f, 0x3f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x27b1, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0332
        gbc.setState(0x3f8, 0x7ec4, 0x4700, 0xc961, 0x1c18, 0x9031, 0x0, 0x1);
        gbc.writeMem(0x3f8, { 0xc3, 0x66, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7ec4, gbc.sp());
        EXPECT(0x4b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0333
        gbc.setState(0x6b27, 0xd4aa, 0x80e0, 0x9c71, 0x1a4c, 0x67b2, 0x1, 0x0);
        gbc.writeMem(0x6b27, { 0xc3, 0x7f, 0xbf });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd4aa, gbc.sp());
        EXPECT(0xbf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0334
        gbc.setState(0x2553, 0xfbea, 0xe020, 0x6c4b, 0x4e1b, 0x5cf0, 0x1, 0x0);
        gbc.writeMem(0x2553, { 0xc3, 0xf0, 0x45 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfbea, gbc.sp());
        EXPECT(0x45f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0335
        gbc.setState(0x8b79, 0x7096, 0x94d0, 0xed2b, 0x5ae, 0x2c57, 0x1, 0x0);
        gbc.writeMem(0x8b79, { 0xc3, 0x66, 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7096, gbc.sp());
        EXPECT(0x4866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8b79));
        EXPECT(0x66, gbc.readMem(0x8b7a));
        EXPECT(0x48, gbc.readMem(0x8b7b));
        // C3 0336
        gbc.setState(0xc3c7, 0x24f9, 0xfec0, 0xefe1, 0xbad2, 0x656b, 0x1, 0x0);
        gbc.writeMem(0xc3c7, { 0xc3, 0x88, 0xf8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x24f9, gbc.sp());
        EXPECT(0xf888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc3c7));
        EXPECT(0x88, gbc.readMem(0xc3c8));
        EXPECT(0xf8, gbc.readMem(0xc3c9));
        // C3 0337
        gbc.setState(0x4cbd, 0x22de, 0x37c0, 0x6160, 0xea28, 0xd3f0, 0x1, 0x1);
        gbc.writeMem(0x4cbd, { 0xc3, 0x3e, 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x22de, gbc.sp());
        EXPECT(0x1d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0338
        gbc.setState(0x6a12, 0x86c8, 0x49f0, 0x87d9, 0x22a1, 0x5027, 0x1, 0x1);
        gbc.writeMem(0x6a12, { 0xc3, 0x8d, 0x76 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x86c8, gbc.sp());
        EXPECT(0x768d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 033A
        gbc.setState(0xe825, 0xaef7, 0x2bc0, 0x8fbb, 0x720a, 0x7d5f, 0x1, 0x0);
        gbc.writeMem(0xe825, { 0xc3, 0xa2, 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaef7, gbc.sp());
        EXPECT(0x44a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe825));
        EXPECT(0xa2, gbc.readMem(0xe826));
        EXPECT(0x44, gbc.readMem(0xe827));
        // C3 033B
        gbc.setState(0x8019, 0x9f45, 0xe790, 0x83c6, 0x98e1, 0x7af6, 0x1, 0x1);
        gbc.writeMem(0x8019, { 0xc3, 0x7c, 0x5d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9f45, gbc.sp());
        EXPECT(0x5d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8019));
        EXPECT(0x7c, gbc.readMem(0x801a));
        EXPECT(0x5d, gbc.readMem(0x801b));
        // C3 033C
        gbc.setState(0xb1bd, 0xae60, 0xb860, 0x3d2a, 0xd31c, 0x451e, 0x0, 0x0);
        gbc.writeMem(0xb1bd, { 0xc3, 0xf3, 0x32 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xae60, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb1bd));
        EXPECT(0xf3, gbc.readMem(0xb1be));
        EXPECT(0x32, gbc.readMem(0xb1bf));
        // C3 033D
        gbc.setState(0xe583, 0x4515, 0x4c70, 0xb098, 0x4270, 0x3da, 0x0, 0x0);
        gbc.writeMem(0xe583, { 0xc3, 0x4f, 0x73 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4515, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe583));
        EXPECT(0x4f, gbc.readMem(0xe584));
        EXPECT(0x73, gbc.readMem(0xe585));
        // C3 033E
        gbc.setState(0x4162, 0xaa47, 0x1ce0, 0xa160, 0x3f24, 0xd3fa, 0x1, 0x1);
        gbc.writeMem(0x4162, { 0xc3, 0x14, 0xef });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaa47, gbc.sp());
        EXPECT(0xef14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 033F
        gbc.setState(0xc342, 0xec41, 0xab70, 0x81a0, 0x68ed, 0xd8e0, 0x1, 0x0);
        gbc.writeMem(0xc342, { 0xc3, 0x5f, 0xd5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xec41, gbc.sp());
        EXPECT(0xd55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc342));
        EXPECT(0x5f, gbc.readMem(0xc343));
        EXPECT(0xd5, gbc.readMem(0xc344));
        // C3 0340
        gbc.setState(0x83d2, 0x50ba, 0x84a0, 0xcfa8, 0xca61, 0xf907, 0x1, 0x0);
        gbc.writeMem(0x83d2, { 0xc3, 0xa2, 0xd8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x50ba, gbc.sp());
        EXPECT(0xd8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x83d2));
        EXPECT(0xa2, gbc.readMem(0x83d3));
        EXPECT(0xd8, gbc.readMem(0x83d4));
        // C3 0341
        gbc.setState(0xef06, 0x3365, 0xbcf0, 0x18f0, 0xe16c, 0x77e8, 0x1, 0x0);
        gbc.writeMem(0xef06, { 0xc3, 0xeb, 0x3f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3365, gbc.sp());
        EXPECT(0x3feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xef06));
        EXPECT(0xeb, gbc.readMem(0xef07));
        EXPECT(0x3f, gbc.readMem(0xef08));
        // C3 0342
        gbc.setState(0x4d3b, 0x8574, 0x6e00, 0xc372, 0x33c0, 0xaa2, 0x0, 0x1);
        gbc.writeMem(0x4d3b, { 0xc3, 0xdf, 0x3d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8574, gbc.sp());
        EXPECT(0x3ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0343
        gbc.setState(0x995c, 0x2fd0, 0xbae0, 0x9a6b, 0xe24c, 0xfb80, 0x1, 0x1);
        gbc.writeMem(0x995c, { 0xc3, 0xa1, 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2fd0, gbc.sp());
        EXPECT(0xd9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x995c));
        EXPECT(0xa1, gbc.readMem(0x995d));
        EXPECT(0xd9, gbc.readMem(0x995e));
        // C3 0344
        gbc.setState(0x585b, 0x243d, 0xf880, 0x2178, 0x77f3, 0xa159, 0x0, 0x1);
        gbc.writeMem(0x585b, { 0xc3, 0x3e, 0xbf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x243d, gbc.sp());
        EXPECT(0xbf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0345
        gbc.setState(0x9fd, 0x600a, 0x2270, 0xaa80, 0x6a9f, 0xa094, 0x0, 0x0);
        gbc.writeMem(0x9fd, { 0xc3, 0xb6, 0x3a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0x3ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0346
        gbc.setState(0x6e21, 0x5743, 0xbff0, 0xf769, 0xdc0, 0x2d92, 0x1, 0x1);
        gbc.writeMem(0x6e21, { 0xc3, 0x11, 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5743, gbc.sp());
        EXPECT(0x3c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0347
        gbc.setState(0xda8d, 0x4b93, 0x2730, 0x6cc0, 0x4b34, 0x93b1, 0x0, 0x0);
        gbc.writeMem(0xda8d, { 0xc3, 0xeb, 0x2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4b93, gbc.sp());
        EXPECT(0x2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xda8d));
        EXPECT(0xeb, gbc.readMem(0xda8e));
        EXPECT(0x2, gbc.readMem(0xda8f));
        // C3 0348
        gbc.setState(0x6c2a, 0x899c, 0x83f0, 0x4601, 0x9d2e, 0x8953, 0x0, 0x0);
        gbc.writeMem(0x6c2a, { 0xc3, 0x13, 0x50 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x899c, gbc.sp());
        EXPECT(0x5013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0349
        gbc.setState(0x813a, 0xe828, 0xbe20, 0xfbac, 0x44c0, 0x7ee7, 0x1, 0x1);
        gbc.writeMem(0x813a, { 0xc3, 0x3, 0xc4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe828, gbc.sp());
        EXPECT(0xc403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x813a));
        EXPECT(0x3, gbc.readMem(0x813b));
        EXPECT(0xc4, gbc.readMem(0x813c));
        // C3 034A
        gbc.setState(0xeeeb, 0x54f0, 0xd8d0, 0x4629, 0xa999, 0x7dbd, 0x0, 0x0);
        gbc.writeMem(0xeeeb, { 0xc3, 0xcf, 0x7f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x54f0, gbc.sp());
        EXPECT(0x7fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xeeeb));
        EXPECT(0xcf, gbc.readMem(0xeeec));
        EXPECT(0x7f, gbc.readMem(0xeeed));
        // C3 034B
        gbc.setState(0x90e6, 0xa4b9, 0x76a0, 0x8600, 0x9d09, 0xd2ac, 0x1, 0x0);
        gbc.writeMem(0x90e6, { 0xc3, 0xf0, 0x67 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa4b9, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x90e6));
        EXPECT(0xf0, gbc.readMem(0x90e7));
        EXPECT(0x67, gbc.readMem(0x90e8));
        // C3 034C
        gbc.setState(0xe11d, 0x4a78, 0x40a0, 0x709d, 0x3cb4, 0x50c0, 0x0, 0x0);
        gbc.writeMem(0xe11d, { 0xc3, 0x4b, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4a78, gbc.sp());
        EXPECT(0x3c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe11d));
        EXPECT(0x4b, gbc.readMem(0xe11e));
        EXPECT(0x3c, gbc.readMem(0xe11f));
        // C3 034D
        gbc.setState(0x721e, 0x38d3, 0xf970, 0x3c06, 0xeaab, 0x162f, 0x1, 0x1);
        gbc.writeMem(0x721e, { 0xc3, 0x4b, 0xbc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x38d3, gbc.sp());
        EXPECT(0xbc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 034E
        gbc.setState(0x8804, 0x58dd, 0xc420, 0x1cba, 0x6cae, 0x51b2, 0x0, 0x1);
        gbc.writeMem(0x8804, { 0xc3, 0x4e, 0x38 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x58dd, gbc.sp());
        EXPECT(0x384e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8804));
        EXPECT(0x4e, gbc.readMem(0x8805));
        EXPECT(0x38, gbc.readMem(0x8806));
        // C3 034F
        gbc.setState(0x622b, 0x6af4, 0xc480, 0x445b, 0x3928, 0x11c4, 0x0, 0x0);
        gbc.writeMem(0x622b, { 0xc3, 0xc4, 0x1c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6af4, gbc.sp());
        EXPECT(0x1cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0350
        gbc.setState(0x9f5d, 0x3cb, 0x8b40, 0x151e, 0x437f, 0x3c44, 0x1, 0x0);
        gbc.writeMem(0x9f5d, { 0xc3, 0x12, 0xe9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0xe912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9f5d));
        EXPECT(0x12, gbc.readMem(0x9f5e));
        EXPECT(0xe9, gbc.readMem(0x9f5f));
        // C3 0351
        gbc.setState(0xe672, 0xd464, 0x2b70, 0xc727, 0xb21e, 0x72bb, 0x0, 0x0);
        gbc.writeMem(0xe672, { 0xc3, 0xf2, 0x19 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd464, gbc.sp());
        EXPECT(0x19f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe672));
        EXPECT(0xf2, gbc.readMem(0xe673));
        EXPECT(0x19, gbc.readMem(0xe674));
        // C3 0352
        gbc.setState(0xd2ca, 0x6e5a, 0xf540, 0x9260, 0xdfea, 0xa429, 0x1, 0x1);
        gbc.writeMem(0xd2ca, { 0xc3, 0x3c, 0x97 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6e5a, gbc.sp());
        EXPECT(0x973c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd2ca));
        EXPECT(0x3c, gbc.readMem(0xd2cb));
        EXPECT(0x97, gbc.readMem(0xd2cc));
        // C3 0353
        gbc.setState(0x6b5e, 0xca3f, 0x69e0, 0x2ee3, 0x2435, 0xa85f, 0x0, 0x0);
        gbc.writeMem(0x6b5e, { 0xc3, 0x2b, 0x38 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xca3f, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0354
        gbc.setState(0xb433, 0xc387, 0x5e60, 0x5d00, 0x28b7, 0xfff0, 0x1, 0x1);
        gbc.writeMem(0xb433, { 0xc3, 0xe, 0xfb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc387, gbc.sp());
        EXPECT(0xfb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb433));
        EXPECT(0xe, gbc.readMem(0xb434));
        EXPECT(0xfb, gbc.readMem(0xb435));
        // C3 0355
        gbc.setState(0x9091, 0x228d, 0xaa40, 0x69ef, 0xd8dc, 0xc068, 0x0, 0x0);
        gbc.writeMem(0x9091, { 0xc3, 0xe3, 0x25 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0x25e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9091));
        EXPECT(0xe3, gbc.readMem(0x9092));
        EXPECT(0x25, gbc.readMem(0x9093));
        // C3 0356
        gbc.setState(0x5f05, 0x5023, 0x2ce0, 0x723, 0x3368, 0x5711, 0x0, 0x1);
        gbc.writeMem(0x5f05, { 0xc3, 0x4c, 0x1f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5023, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0357
        gbc.setState(0x90b8, 0x11ac, 0xb2e0, 0xe766, 0xa13d, 0x5cfd, 0x0, 0x1);
        gbc.writeMem(0x90b8, { 0xc3, 0x6d, 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x11ac, gbc.sp());
        EXPECT(0x796d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x90b8));
        EXPECT(0x6d, gbc.readMem(0x90b9));
        EXPECT(0x79, gbc.readMem(0x90ba));
        // C3 0358
        gbc.setState(0xcb1a, 0x73a5, 0xe2f0, 0x48d3, 0x9c08, 0x568f, 0x0, 0x0);
        gbc.writeMem(0xcb1a, { 0xc3, 0x1f, 0x71 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x73a5, gbc.sp());
        EXPECT(0x711f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcb1a));
        EXPECT(0x1f, gbc.readMem(0xcb1b));
        EXPECT(0x71, gbc.readMem(0xcb1c));
        // C3 0359
        gbc.setState(0x4636, 0xa5be, 0x6780, 0xf74f, 0xc7f, 0x95a3, 0x0, 0x1);
        gbc.writeMem(0x4636, { 0xc3, 0xba, 0xae });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa5be, gbc.sp());
        EXPECT(0xaeba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 035A
        gbc.setState(0x1b92, 0x6704, 0x77c0, 0x38af, 0x6949, 0x6c1b, 0x1, 0x0);
        gbc.writeMem(0x1b92, { 0xc3, 0x7a, 0x1e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6704, gbc.sp());
        EXPECT(0x1e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 035B
        gbc.setState(0x983d, 0x3cb3, 0x7920, 0x7cbc, 0x3cd4, 0x626f, 0x0, 0x1);
        gbc.writeMem(0x983d, { 0xc3, 0xd8, 0xbc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3cb3, gbc.sp());
        EXPECT(0xbcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x983d));
        EXPECT(0xd8, gbc.readMem(0x983e));
        EXPECT(0xbc, gbc.readMem(0x983f));
        // C3 035C
        gbc.setState(0x93da, 0x146f, 0x79b0, 0xb6fb, 0xd176, 0x3241, 0x0, 0x1);
        gbc.writeMem(0x93da, { 0xc3, 0xa7, 0xe3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x146f, gbc.sp());
        EXPECT(0xe3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x93da));
        EXPECT(0xa7, gbc.readMem(0x93db));
        EXPECT(0xe3, gbc.readMem(0x93dc));
        // C3 035D
        gbc.setState(0x2cb9, 0xc310, 0x1c80, 0xddfb, 0xfa57, 0x9138, 0x0, 0x1);
        gbc.writeMem(0x2cb9, { 0xc3, 0x1b, 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc310, gbc.sp());
        EXPECT(0xbc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 035E
        gbc.setState(0x86e7, 0xf691, 0xd440, 0x3f26, 0xf8f0, 0x70dd, 0x0, 0x0);
        gbc.writeMem(0x86e7, { 0xc3, 0xed, 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf691, gbc.sp());
        EXPECT(0xfbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x86e7));
        EXPECT(0xed, gbc.readMem(0x86e8));
        EXPECT(0xfb, gbc.readMem(0x86e9));
        // C3 035F
        gbc.setState(0xd8ae, 0xe62a, 0x6170, 0xa1e9, 0x3c61, 0x26a6, 0x0, 0x0);
        gbc.writeMem(0xd8ae, { 0xc3, 0x45, 0xaf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe62a, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd8ae));
        EXPECT(0x45, gbc.readMem(0xd8af));
        EXPECT(0xaf, gbc.readMem(0xd8b0));
        // C3 0360
        gbc.setState(0x3a42, 0x3911, 0x5280, 0xdd2a, 0x5d18, 0xa11b, 0x0, 0x1);
        gbc.writeMem(0x3a42, { 0xc3, 0xcd, 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3911, gbc.sp());
        EXPECT(0x18cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0361
        gbc.setState(0xd99d, 0xb086, 0x78f0, 0x82c5, 0xc1a7, 0x3ab8, 0x0, 0x1);
        gbc.writeMem(0xd99d, { 0xc3, 0xa6, 0xa2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb086, gbc.sp());
        EXPECT(0xa2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd99d));
        EXPECT(0xa6, gbc.readMem(0xd99e));
        EXPECT(0xa2, gbc.readMem(0xd99f));
        // C3 0362
        gbc.setState(0x89f2, 0xa1c9, 0x84c0, 0x4cd5, 0xf527, 0xccb6, 0x1, 0x1);
        gbc.writeMem(0x89f2, { 0xc3, 0x59, 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0xa759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x89f2));
        EXPECT(0x59, gbc.readMem(0x89f3));
        EXPECT(0xa7, gbc.readMem(0x89f4));
        // C3 0363
        gbc.setState(0x4345, 0xbba5, 0x6070, 0x7077, 0xfbb5, 0xfeb8, 0x0, 0x1);
        gbc.writeMem(0x4345, { 0xc3, 0x1d, 0xa6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbba5, gbc.sp());
        EXPECT(0xa61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0364
        gbc.setState(0x6b09, 0x7b20, 0x1b40, 0x8214, 0xbc9, 0x449e, 0x0, 0x1);
        gbc.writeMem(0x6b09, { 0xc3, 0x7, 0x3a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7b20, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0365
        gbc.setState(0xd5f5, 0x3d47, 0x1820, 0xc1c9, 0x19b1, 0xbca3, 0x0, 0x0);
        gbc.writeMem(0xd5f5, { 0xc3, 0x4f, 0x2e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d47, gbc.sp());
        EXPECT(0x2e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd5f5));
        EXPECT(0x4f, gbc.readMem(0xd5f6));
        EXPECT(0x2e, gbc.readMem(0xd5f7));
        // C3 0366
        gbc.setState(0x502b, 0xdf81, 0xd0b0, 0x5c1a, 0x548e, 0x8be8, 0x1, 0x0);
        gbc.writeMem(0x502b, { 0xc3, 0x5d, 0x46 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdf81, gbc.sp());
        EXPECT(0x465d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0367
        gbc.setState(0x7212, 0x78f1, 0x8620, 0x5f70, 0x4fe7, 0x5de3, 0x1, 0x1);
        gbc.writeMem(0x7212, { 0xc3, 0x9d, 0xa9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0368
        gbc.setState(0x5f22, 0x8d3b, 0xbad0, 0xaba1, 0xea63, 0xcb14, 0x0, 0x1);
        gbc.writeMem(0x5f22, { 0xc3, 0x58, 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8d3b, gbc.sp());
        EXPECT(0x1958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0369
        gbc.setState(0x7820, 0xfb04, 0x70d0, 0x6ce, 0xe8a1, 0x2982, 0x0, 0x0);
        gbc.writeMem(0x7820, { 0xc3, 0x31, 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfb04, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 036A
        gbc.setState(0x2f3d, 0x2610, 0xde60, 0x5914, 0x7a33, 0xbcd8, 0x1, 0x0);
        gbc.writeMem(0x2f3d, { 0xc3, 0x54, 0xd5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0xd554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 036B
        gbc.setState(0x5b11, 0x6e18, 0xa360, 0xb107, 0x3212, 0xd204, 0x0, 0x0);
        gbc.writeMem(0x5b11, { 0xc3, 0x8c, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 036C
        gbc.setState(0x564c, 0x2f9f, 0x2b0, 0x6c00, 0xb16c, 0x6090, 0x0, 0x1);
        gbc.writeMem(0x564c, { 0xc3, 0x9b, 0xb0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2f9f, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 036D
        gbc.setState(0xc354, 0x5077, 0x9d90, 0xbc6c, 0x6baa, 0x2bc6, 0x0, 0x1);
        gbc.writeMem(0xc354, { 0xc3, 0x6c, 0xa0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5077, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc354));
        EXPECT(0x6c, gbc.readMem(0xc355));
        EXPECT(0xa0, gbc.readMem(0xc356));
        // C3 036E
        gbc.setState(0x2222, 0xfabc, 0xf4c0, 0xc5ce, 0xb0, 0x8f2f, 0x1, 0x0);
        gbc.writeMem(0x2222, { 0xc3, 0xf0, 0x3e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfabc, gbc.sp());
        EXPECT(0x3ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 036F
        gbc.setState(0xbf22, 0x6987, 0x2150, 0x7df, 0x806a, 0xfc82, 0x0, 0x0);
        gbc.writeMem(0xbf22, { 0xc3, 0xf0, 0xbe });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6987, gbc.sp());
        EXPECT(0xbef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbf22));
        EXPECT(0xf0, gbc.readMem(0xbf23));
        EXPECT(0xbe, gbc.readMem(0xbf24));
        // C3 0370
        gbc.setState(0x7249, 0x33f0, 0x5f0, 0x4299, 0x2b1c, 0x585b, 0x1, 0x1);
        gbc.writeMem(0x7249, { 0xc3, 0xd4, 0x9a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0x9ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0371
        gbc.setState(0x15c4, 0x25e5, 0xc440, 0xede5, 0xfdb1, 0xaf0f, 0x1, 0x1);
        gbc.writeMem(0x15c4, { 0xc3, 0x27, 0x50 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x25e5, gbc.sp());
        EXPECT(0x5027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0372
        gbc.setState(0xbbf6, 0x19be, 0xfbb0, 0x74fe, 0x5e4e, 0x7026, 0x0, 0x1);
        gbc.writeMem(0xbbf6, { 0xc3, 0x1b, 0xb1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x19be, gbc.sp());
        EXPECT(0xb11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbbf6));
        EXPECT(0x1b, gbc.readMem(0xbbf7));
        EXPECT(0xb1, gbc.readMem(0xbbf8));
        // C3 0373
        gbc.setState(0x7a66, 0x58e5, 0xed0, 0x45b5, 0x1a24, 0xf85a, 0x0, 0x0);
        gbc.writeMem(0x7a66, { 0xc3, 0x41, 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x58e5, gbc.sp());
        EXPECT(0xa041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0374
        gbc.setState(0xa82d, 0xeefa, 0x5400, 0xa56, 0x6c7d, 0xec9d, 0x1, 0x0);
        gbc.writeMem(0xa82d, { 0xc3, 0x17, 0xe2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xeefa, gbc.sp());
        EXPECT(0xe217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa82d));
        EXPECT(0x17, gbc.readMem(0xa82e));
        EXPECT(0xe2, gbc.readMem(0xa82f));
        // C3 0375
        gbc.setState(0x4f8, 0xea16, 0xcbd0, 0x7591, 0x228, 0xe30c, 0x1, 0x1);
        gbc.writeMem(0x4f8, { 0xc3, 0x50, 0x2a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xea16, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0376
        gbc.setState(0x9e8f, 0xcc8, 0x1740, 0x552a, 0x802, 0x5298, 0x1, 0x0);
        gbc.writeMem(0x9e8f, { 0xc3, 0x56, 0x31 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcc8, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9e8f));
        EXPECT(0x56, gbc.readMem(0x9e90));
        EXPECT(0x31, gbc.readMem(0x9e91));
        // C3 0377
        gbc.setState(0x9cc5, 0x834c, 0xe900, 0x1e0a, 0xe5fc, 0xb304, 0x1, 0x0);
        gbc.writeMem(0x9cc5, { 0xc3, 0xe0, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x834c, gbc.sp());
        EXPECT(0xe0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9cc5));
        EXPECT(0xe0, gbc.readMem(0x9cc6));
        EXPECT(0xe0, gbc.readMem(0x9cc7));
        // C3 0378
        gbc.setState(0xe372, 0x3401, 0x44d0, 0x12b8, 0x17ec, 0xad6b, 0x0, 0x0);
        gbc.writeMem(0xe372, { 0xc3, 0x2, 0x2f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3401, gbc.sp());
        EXPECT(0x2f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe372));
        EXPECT(0x2, gbc.readMem(0xe373));
        EXPECT(0x2f, gbc.readMem(0xe374));
        // C3 0379
        gbc.setState(0x8b5b, 0x99b8, 0xc7a0, 0x4ca0, 0x23bc, 0x8d01, 0x0, 0x1);
        gbc.writeMem(0x8b5b, { 0xc3, 0xd, 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x99b8, gbc.sp());
        EXPECT(0x380d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8b5b));
        EXPECT(0xd, gbc.readMem(0x8b5c));
        EXPECT(0x38, gbc.readMem(0x8b5d));
        // C3 037A
        gbc.setState(0x9d45, 0x6306, 0x8ac0, 0xa8f6, 0x46de, 0x9f55, 0x0, 0x0);
        gbc.writeMem(0x9d45, { 0xc3, 0xbc, 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6306, gbc.sp());
        EXPECT(0x2dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9d45));
        EXPECT(0xbc, gbc.readMem(0x9d46));
        EXPECT(0x2d, gbc.readMem(0x9d47));
        // C3 037B
        gbc.setState(0xd29a, 0xd67b, 0x6b40, 0x6a08, 0x6fc3, 0x8a69, 0x1, 0x1);
        gbc.writeMem(0xd29a, { 0xc3, 0xaf, 0xd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd67b, gbc.sp());
        EXPECT(0xdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd29a));
        EXPECT(0xaf, gbc.readMem(0xd29b));
        EXPECT(0xd, gbc.readMem(0xd29c));
        // C3 037C
        gbc.setState(0x7147, 0x5435, 0x850, 0x734d, 0x6559, 0x24a6, 0x0, 0x1);
        gbc.writeMem(0x7147, { 0xc3, 0x37, 0x5c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5435, gbc.sp());
        EXPECT(0x5c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 037D
        gbc.setState(0xc39c, 0x3e61, 0x1d00, 0x3093, 0x5ebe, 0xe9f, 0x0, 0x0);
        gbc.writeMem(0xc39c, { 0xc3, 0xb2, 0x83 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3e61, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc39c));
        EXPECT(0xb2, gbc.readMem(0xc39d));
        EXPECT(0x83, gbc.readMem(0xc39e));
        // C3 037E
        gbc.setState(0x3fc6, 0x58fd, 0xb760, 0x1e32, 0x5449, 0xb1e2, 0x1, 0x1);
        gbc.writeMem(0x3fc6, { 0xc3, 0xb8, 0x33 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x58fd, gbc.sp());
        EXPECT(0x33b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0380
        gbc.setState(0x7bf6, 0x159, 0xcc90, 0x35c6, 0x946b, 0x4c66, 0x1, 0x1);
        gbc.writeMem(0x7bf6, { 0xc3, 0x5e, 0xac });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x159, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0381
        gbc.setState(0xdd30, 0xbbfd, 0xd5c0, 0xd92b, 0xaee9, 0xbfa7, 0x0, 0x1);
        gbc.writeMem(0xdd30, { 0xc3, 0xb8, 0x80 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbbfd, gbc.sp());
        EXPECT(0x80b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdd30));
        EXPECT(0xb8, gbc.readMem(0xdd31));
        EXPECT(0x80, gbc.readMem(0xdd32));
        // C3 0382
        gbc.setState(0x917f, 0xdf5d, 0xc0, 0x8d20, 0x82f2, 0x72ba, 0x0, 0x1);
        gbc.writeMem(0x917f, { 0xc3, 0x72, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdf5d, gbc.sp());
        EXPECT(0x8572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x917f));
        EXPECT(0x72, gbc.readMem(0x9180));
        EXPECT(0x85, gbc.readMem(0x9181));
        // C3 0383
        gbc.setState(0x3684, 0x9ebf, 0x1a00, 0xd635, 0x2c0f, 0xdbc4, 0x1, 0x1);
        gbc.writeMem(0x3684, { 0xc3, 0x87, 0x16 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9ebf, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0384
        gbc.setState(0x9366, 0xf7bd, 0xd6c0, 0xff72, 0xe111, 0x3e5c, 0x0, 0x0);
        gbc.writeMem(0x9366, { 0xc3, 0x33, 0x36 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf7bd, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9366));
        EXPECT(0x33, gbc.readMem(0x9367));
        EXPECT(0x36, gbc.readMem(0x9368));
        // C3 0385
        gbc.setState(0x143a, 0xe5ee, 0x5e80, 0x6b9f, 0x2e19, 0x3fe7, 0x0, 0x1);
        gbc.writeMem(0x143a, { 0xc3, 0x25, 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe5ee, gbc.sp());
        EXPECT(0x7a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0386
        gbc.setState(0x6528, 0x43b5, 0x39e0, 0xa2f4, 0xf993, 0x360e, 0x1, 0x0);
        gbc.writeMem(0x6528, { 0xc3, 0x31, 0x6c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x43b5, gbc.sp());
        EXPECT(0x6c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0387
        gbc.setState(0xe78d, 0x729e, 0x58a0, 0x8ab9, 0xace7, 0x46f3, 0x0, 0x1);
        gbc.writeMem(0xe78d, { 0xc3, 0x71, 0x8e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x729e, gbc.sp());
        EXPECT(0x8e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe78d));
        EXPECT(0x71, gbc.readMem(0xe78e));
        EXPECT(0x8e, gbc.readMem(0xe78f));
        // C3 0388
        gbc.setState(0x6dee, 0x17ec, 0x20e0, 0x3e10, 0x65e5, 0x501e, 0x0, 0x1);
        gbc.writeMem(0x6dee, { 0xc3, 0x79, 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x17ec, gbc.sp());
        EXPECT(0x5379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 038A
        gbc.setState(0xe40e, 0xf0a5, 0x6df0, 0xa26d, 0x149e, 0x6f9a, 0x0, 0x0);
        gbc.writeMem(0xe40e, { 0xc3, 0x61, 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf0a5, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe40e));
        EXPECT(0x61, gbc.readMem(0xe40f));
        EXPECT(0x55, gbc.readMem(0xe410));
        // C3 038D
        gbc.setState(0xc906, 0xbded, 0xd290, 0x4b38, 0x671d, 0xb049, 0x1, 0x1);
        gbc.writeMem(0xc906, { 0xc3, 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbded, gbc.sp());
        EXPECT(0x3bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc906));
        EXPECT(0xcb, gbc.readMem(0xc907));
        EXPECT(0x3b, gbc.readMem(0xc908));
        // C3 038E
        gbc.setState(0x1d3f, 0x7113, 0xe970, 0xdb2d, 0xbf8f, 0x946f, 0x1, 0x1);
        gbc.writeMem(0x1d3f, { 0xc3, 0x86, 0x84 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7113, gbc.sp());
        EXPECT(0x8486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 038F
        gbc.setState(0xbe4d, 0x971, 0x5100, 0xc899, 0x64de, 0xc196, 0x1, 0x0);
        gbc.writeMem(0xbe4d, { 0xc3, 0x58, 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x971, gbc.sp());
        EXPECT(0xc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbe4d));
        EXPECT(0x58, gbc.readMem(0xbe4e));
        EXPECT(0xc, gbc.readMem(0xbe4f));
        // C3 0390
        gbc.setState(0x75ff, 0xcfe4, 0xa7d0, 0x30b0, 0x7a5f, 0x2452, 0x0, 0x1);
        gbc.writeMem(0x75ff, { 0xc3, 0x5e, 0x38 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcfe4, gbc.sp());
        EXPECT(0x385e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 0392
        gbc.setState(0x87c6, 0xa90a, 0x8650, 0x59de, 0x6c24, 0xb240, 0x0, 0x1);
        gbc.writeMem(0x87c6, { 0xc3, 0x4, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa90a, gbc.sp());
        EXPECT(0xff04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x87c6));
        EXPECT(0x4, gbc.readMem(0x87c7));
        EXPECT(0xff, gbc.readMem(0x87c8));
        // C3 0393
        gbc.setState(0xd726, 0xc189, 0x53d0, 0x4ab6, 0x3d84, 0x34ee, 0x0, 0x1);
        gbc.writeMem(0xd726, { 0xc3, 0xca, 0xdf });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc189, gbc.sp());
        EXPECT(0xdfca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd726));
        EXPECT(0xca, gbc.readMem(0xd727));
        EXPECT(0xdf, gbc.readMem(0xd728));
        // C3 0394
        gbc.setState(0xee0c, 0xabdf, 0x7c90, 0xb71c, 0x666e, 0x9fa6, 0x1, 0x1);
        gbc.writeMem(0xee0c, { 0xc3, 0xb4, 0x2a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xabdf, gbc.sp());
        EXPECT(0x2ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xee0c));
        EXPECT(0xb4, gbc.readMem(0xee0d));
        EXPECT(0x2a, gbc.readMem(0xee0e));
        // C3 0395
        gbc.setState(0xd56d, 0x285a, 0x33d0, 0x77c, 0x1e3a, 0xc9b4, 0x0, 0x0);
        gbc.writeMem(0xd56d, { 0xc3, 0x5b, 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x285a, gbc.sp());
        EXPECT(0xe95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd56d));
        EXPECT(0x5b, gbc.readMem(0xd56e));
        EXPECT(0xe9, gbc.readMem(0xd56f));
        // C3 0396
        gbc.setState(0x998d, 0x15a1, 0x7210, 0x17f9, 0xf103, 0xf711, 0x1, 0x0);
        gbc.writeMem(0x998d, { 0xc3, 0x9e, 0x11 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x15a1, gbc.sp());
        EXPECT(0x119e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x998d));
        EXPECT(0x9e, gbc.readMem(0x998e));
        EXPECT(0x11, gbc.readMem(0x998f));
        // C3 0397
        gbc.setState(0x1f13, 0xac1c, 0x8300, 0x19ea, 0x73dc, 0xc873, 0x0, 0x1);
        gbc.writeMem(0x1f13, { 0xc3, 0xa5, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xac1c, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 0398
        gbc.setState(0xdbc3, 0x4e47, 0x1410, 0x8645, 0xab47, 0xf0ba, 0x1, 0x0);
        gbc.writeMem(0xdbc3, { 0xc3, 0xf5, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4e47, gbc.sp());
        EXPECT(0x2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdbc3));
        EXPECT(0xf5, gbc.readMem(0xdbc4));
        EXPECT(0x2, gbc.readMem(0xdbc5));
        // C3 0399
        gbc.setState(0x6429, 0xf6c7, 0x6990, 0xe54, 0xcb92, 0x2eac, 0x0, 0x0);
        gbc.writeMem(0x6429, { 0xc3, 0x40, 0xe });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf6c7, gbc.sp());
        EXPECT(0xe40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 039A
        gbc.setState(0xcd76, 0x3e29, 0x65e0, 0x4cc5, 0x5b34, 0x5a04, 0x1, 0x0);
        gbc.writeMem(0xcd76, { 0xc3, 0xf1, 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3e29, gbc.sp());
        EXPECT(0x6df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcd76));
        EXPECT(0xf1, gbc.readMem(0xcd77));
        EXPECT(0x6d, gbc.readMem(0xcd78));
        // C3 039B
        gbc.setState(0x4f67, 0x391c, 0x4a00, 0x6a43, 0xbd68, 0x864d, 0x0, 0x1);
        gbc.writeMem(0x4f67, { 0xc3, 0x41, 0x8f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x391c, gbc.sp());
        EXPECT(0x8f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 039C
        gbc.setState(0x30aa, 0xbb1b, 0xe740, 0xd144, 0x3c0f, 0x7fe2, 0x0, 0x1);
        gbc.writeMem(0x30aa, { 0xc3, 0x64, 0x8f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbb1b, gbc.sp());
        EXPECT(0x8f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 039D
        gbc.setState(0x18a0, 0x30c5, 0x3100, 0xc79e, 0x54cf, 0x4714, 0x0, 0x0);
        gbc.writeMem(0x18a0, { 0xc3, 0x59, 0xb4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x30c5, gbc.sp());
        EXPECT(0xb459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 039E
        gbc.setState(0x8a38, 0x87f3, 0x2680, 0x4164, 0x1e38, 0xbfda, 0x1, 0x0);
        gbc.writeMem(0x8a38, { 0xc3, 0xc8, 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x87f3, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8a38));
        EXPECT(0xc8, gbc.readMem(0x8a39));
        EXPECT(0x1d, gbc.readMem(0x8a3a));
        // C3 039F
        gbc.setState(0x5736, 0x7a39, 0x5460, 0x8b39, 0x7844, 0xcd47, 0x1, 0x0);
        gbc.writeMem(0x5736, { 0xc3, 0x42, 0xdc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03A0
        gbc.setState(0x1048, 0x945e, 0x78d0, 0x1f56, 0xa449, 0x8db5, 0x0, 0x1);
        gbc.writeMem(0x1048, { 0xc3, 0xa1, 0x5a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x945e, gbc.sp());
        EXPECT(0x5aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03A1
        gbc.setState(0xdaaf, 0xeaa3, 0xeb00, 0x8248, 0x6d7a, 0x3fab, 0x0, 0x0);
        gbc.writeMem(0xdaaf, { 0xc3, 0xf0, 0xa4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xeaa3, gbc.sp());
        EXPECT(0xa4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdaaf));
        EXPECT(0xf0, gbc.readMem(0xdab0));
        EXPECT(0xa4, gbc.readMem(0xdab1));
        // C3 03A2
        gbc.setState(0x26dd, 0xbd31, 0x8870, 0x1560, 0x9b07, 0x129b, 0x1, 0x1);
        gbc.writeMem(0x26dd, { 0xc3, 0x79, 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbd31, gbc.sp());
        EXPECT(0x4f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03A3
        gbc.setState(0x9171, 0x7faa, 0x3bd0, 0x4003, 0x2a54, 0x8dbf, 0x1, 0x1);
        gbc.writeMem(0x9171, { 0xc3, 0xd8, 0x32 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7faa, gbc.sp());
        EXPECT(0x32d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9171));
        EXPECT(0xd8, gbc.readMem(0x9172));
        EXPECT(0x32, gbc.readMem(0x9173));
        // C3 03A4
        gbc.setState(0xaa9, 0x6755, 0x7c30, 0x8c22, 0xb971, 0xfc5b, 0x1, 0x0);
        gbc.writeMem(0xaa9, { 0xc3, 0x84, 0xab });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6755, gbc.sp());
        EXPECT(0xab84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03A5
        gbc.setState(0x7434, 0x9384, 0x5740, 0xe61a, 0xe98d, 0x1293, 0x0, 0x0);
        gbc.writeMem(0x7434, { 0xc3, 0x0, 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9384, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03A7
        gbc.setState(0x8c38, 0x40f3, 0xa6b0, 0x28d5, 0x2a3d, 0x665d, 0x0, 0x1);
        gbc.writeMem(0x8c38, { 0xc3, 0x5b, 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x40f3, gbc.sp());
        EXPECT(0x105b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8c38));
        EXPECT(0x5b, gbc.readMem(0x8c39));
        EXPECT(0x10, gbc.readMem(0x8c3a));
        // C3 03A8
        gbc.setState(0xef3b, 0x5cde, 0x1330, 0x2cf5, 0xec1f, 0x148f, 0x0, 0x1);
        gbc.writeMem(0xef3b, { 0xc3, 0xee, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5cde, gbc.sp());
        EXPECT(0xa5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xef3b));
        EXPECT(0xee, gbc.readMem(0xef3c));
        EXPECT(0xa5, gbc.readMem(0xef3d));
        // C3 03A9
        gbc.setState(0x8d9b, 0xe73b, 0xa1a0, 0x6519, 0xe803, 0xf9a9, 0x0, 0x0);
        gbc.writeMem(0x8d9b, { 0xc3, 0xab, 0xa0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe73b, gbc.sp());
        EXPECT(0xa0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8d9b));
        EXPECT(0xab, gbc.readMem(0x8d9c));
        EXPECT(0xa0, gbc.readMem(0x8d9d));
        // C3 03AA
        gbc.setState(0x33b3, 0x7317, 0x3f00, 0xada7, 0x9832, 0x334, 0x0, 0x0);
        gbc.writeMem(0x33b3, { 0xc3, 0x8, 0xc2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7317, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03AB
        gbc.setState(0x35c5, 0x4b41, 0x4a00, 0x3860, 0x282e, 0x758, 0x0, 0x0);
        gbc.writeMem(0x35c5, { 0xc3, 0x1c, 0x6b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4b41, gbc.sp());
        EXPECT(0x6b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03AC
        gbc.setState(0x1efc, 0xb902, 0xf330, 0x8b4a, 0x1e24, 0x1340, 0x0, 0x1);
        gbc.writeMem(0x1efc, { 0xc3, 0x36, 0x84 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb902, gbc.sp());
        EXPECT(0x8436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03AD
        gbc.setState(0x55b4, 0xf4b0, 0xaa20, 0xbed6, 0xe0b0, 0x3e23, 0x1, 0x0);
        gbc.writeMem(0x55b4, { 0xc3, 0xe0, 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf4b0, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03AE
        gbc.setState(0x514c, 0x4125, 0x1e90, 0xb009, 0xd92a, 0x62b9, 0x1, 0x1);
        gbc.writeMem(0x514c, { 0xc3, 0x4c, 0xa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4125, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03AF
        gbc.setState(0x5a32, 0x6795, 0xe0f0, 0x1e11, 0xc546, 0xce5c, 0x0, 0x0);
        gbc.writeMem(0x5a32, { 0xc3, 0xce, 0x6e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6795, gbc.sp());
        EXPECT(0x6ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03B0
        gbc.setState(0x750e, 0x732b, 0x2d90, 0xc390, 0xa66b, 0xe76b, 0x0, 0x0);
        gbc.writeMem(0x750e, { 0xc3, 0xaf, 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x732b, gbc.sp());
        EXPECT(0x5baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03B1
        gbc.setState(0x6c36, 0x312d, 0xca30, 0x93ba, 0x7098, 0x8bc, 0x0, 0x0);
        gbc.writeMem(0x6c36, { 0xc3, 0xe2, 0x1a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x312d, gbc.sp());
        EXPECT(0x1ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03B2
        gbc.setState(0xe93d, 0x7e2f, 0x26d0, 0x24e, 0xca5e, 0x786d, 0x0, 0x1);
        gbc.writeMem(0xe93d, { 0xc3, 0x15, 0xec });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7e2f, gbc.sp());
        EXPECT(0xec15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe93d));
        EXPECT(0x15, gbc.readMem(0xe93e));
        EXPECT(0xec, gbc.readMem(0xe93f));
        // C3 03B3
        gbc.setState(0x4fae, 0x453b, 0x7e20, 0x742e, 0x475c, 0xc0c4, 0x0, 0x1);
        gbc.writeMem(0x4fae, { 0xc3, 0x23, 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x453b, gbc.sp());
        EXPECT(0x9123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03B4
        gbc.setState(0xe13d, 0xbe8c, 0xbbb0, 0xfed5, 0xb7e7, 0x517d, 0x1, 0x0);
        gbc.writeMem(0xe13d, { 0xc3, 0xd9, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0x61d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe13d));
        EXPECT(0xd9, gbc.readMem(0xe13e));
        EXPECT(0x61, gbc.readMem(0xe13f));
        // C3 03B5
        gbc.setState(0x1abd, 0xea8b, 0xdb50, 0xde11, 0x5342, 0xd748, 0x1, 0x1);
        gbc.writeMem(0x1abd, { 0xc3, 0x20, 0x26 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03B6
        gbc.setState(0x84f6, 0x9b52, 0x6050, 0x9b4e, 0x76b9, 0x35ad, 0x1, 0x0);
        gbc.writeMem(0x84f6, { 0xc3, 0xaa, 0x18 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9b52, gbc.sp());
        EXPECT(0x18aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x84f6));
        EXPECT(0xaa, gbc.readMem(0x84f7));
        EXPECT(0x18, gbc.readMem(0x84f8));
        // C3 03B7
        gbc.setState(0x5f6e, 0x29eb, 0x1140, 0xc1cf, 0xfab, 0x8892, 0x0, 0x1);
        gbc.writeMem(0x5f6e, { 0xc3, 0xb6, 0x27 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x29eb, gbc.sp());
        EXPECT(0x27b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03B8
        gbc.setState(0x76ff, 0x26c9, 0x2cd0, 0xbac7, 0xa16a, 0x231a, 0x0, 0x1);
        gbc.writeMem(0x76ff, { 0xc3, 0x44, 0xf9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x26c9, gbc.sp());
        EXPECT(0xf944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03B9
        gbc.setState(0x6361, 0x1938, 0xdb60, 0x3bb2, 0xb635, 0x6e8, 0x1, 0x1);
        gbc.writeMem(0x6361, { 0xc3, 0xcf, 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1938, gbc.sp());
        EXPECT(0xbcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03BA
        gbc.setState(0x5d21, 0xd27, 0xfd20, 0x15f, 0x4d58, 0x40b2, 0x1, 0x0);
        gbc.writeMem(0x5d21, { 0xc3, 0x11, 0x6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0x611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03BB
        gbc.setState(0x1f49, 0x3a60, 0xda80, 0x118d, 0x517d, 0x19ba, 0x1, 0x0);
        gbc.writeMem(0x1f49, { 0xc3, 0x9c, 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x879c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03BC
        gbc.setState(0x6ebc, 0x4319, 0xfee0, 0xae44, 0x90b1, 0x236b, 0x0, 0x1);
        gbc.writeMem(0x6ebc, { 0xc3, 0xed, 0xa5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4319, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03BD
        gbc.setState(0xaac3, 0x56ae, 0xef90, 0xea19, 0xc8e3, 0x9394, 0x1, 0x0);
        gbc.writeMem(0xaac3, { 0xc3, 0x26, 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x56ae, gbc.sp());
        EXPECT(0xb726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaac3));
        EXPECT(0x26, gbc.readMem(0xaac4));
        EXPECT(0xb7, gbc.readMem(0xaac5));
        // C3 03BE
        gbc.setState(0x839, 0x8d4a, 0x5b40, 0x6e93, 0x76d5, 0xdce9, 0x0, 0x0);
        gbc.writeMem(0x839, { 0xc3, 0x95, 0xd4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8d4a, gbc.sp());
        EXPECT(0xd495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03BF
        gbc.setState(0x91a5, 0x25fc, 0x4640, 0x6fe7, 0x46f5, 0x7389, 0x1, 0x1);
        gbc.writeMem(0x91a5, { 0xc3, 0x10, 0x34 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x25fc, gbc.sp());
        EXPECT(0x3410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x91a5));
        EXPECT(0x10, gbc.readMem(0x91a6));
        EXPECT(0x34, gbc.readMem(0x91a7));
        // C3 03C0
        gbc.setState(0x9ece, 0xcc07, 0x5900, 0xc3b7, 0x73d2, 0x6a84, 0x1, 0x1);
        gbc.writeMem(0x9ece, { 0xc3, 0xf3, 0x71 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcc07, gbc.sp());
        EXPECT(0x71f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9ece));
        EXPECT(0xf3, gbc.readMem(0x9ecf));
        EXPECT(0x71, gbc.readMem(0x9ed0));
        // C3 03C1
        gbc.setState(0x8829, 0x9f3, 0xf830, 0x5388, 0x5077, 0x1c69, 0x0, 0x0);
        gbc.writeMem(0x8829, { 0xc3, 0xdb, 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9f3, gbc.sp());
        EXPECT(0x27db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8829));
        EXPECT(0xdb, gbc.readMem(0x882a));
        EXPECT(0x27, gbc.readMem(0x882b));
        // C3 03C2
        gbc.setState(0x8f4b, 0x408c, 0x8a60, 0xb6b5, 0xf053, 0x7c, 0x1, 0x1);
        gbc.writeMem(0x8f4b, { 0xc3, 0xaf, 0xae });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x408c, gbc.sp());
        EXPECT(0xaeaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8f4b));
        EXPECT(0xaf, gbc.readMem(0x8f4c));
        EXPECT(0xae, gbc.readMem(0x8f4d));
        // C3 03C3
        gbc.setState(0x15c3, 0x782d, 0x4160, 0x606d, 0x2a63, 0x4cad, 0x1, 0x1);
        gbc.writeMem(0x15c3, { 0xc3, 0x90, 0x27 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x782d, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03C4
        gbc.setState(0xe2c8, 0x8efc, 0xbab0, 0x8e85, 0x68b1, 0x9e42, 0x1, 0x1);
        gbc.writeMem(0xe2c8, { 0xc3, 0x84, 0xc7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8efc, gbc.sp());
        EXPECT(0xc784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe2c8));
        EXPECT(0x84, gbc.readMem(0xe2c9));
        EXPECT(0xc7, gbc.readMem(0xe2ca));
        // C3 03C5
        gbc.setState(0x80ef, 0x887d, 0x8220, 0x17ba, 0x3bc9, 0x74c6, 0x0, 0x1);
        gbc.writeMem(0x80ef, { 0xc3, 0x40, 0xdb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x887d, gbc.sp());
        EXPECT(0xdb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x80ef));
        EXPECT(0x40, gbc.readMem(0x80f0));
        EXPECT(0xdb, gbc.readMem(0x80f1));
        // C3 03C7
        gbc.setState(0x3da8, 0xcc74, 0x3560, 0xbccd, 0x6858, 0xbfa8, 0x0, 0x1);
        gbc.writeMem(0x3da8, { 0xc3, 0xbe, 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcc74, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03C8
        gbc.setState(0xd2f4, 0x2376, 0x79d0, 0xd60d, 0xf5c5, 0x1a2b, 0x1, 0x0);
        gbc.writeMem(0xd2f4, { 0xc3, 0x2f, 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2376, gbc.sp());
        EXPECT(0x782f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd2f4));
        EXPECT(0x2f, gbc.readMem(0xd2f5));
        EXPECT(0x78, gbc.readMem(0xd2f6));
        // C3 03C9
        gbc.setState(0x3fc, 0x3a51, 0x3200, 0x8755, 0xdd91, 0xd71d, 0x1, 0x1);
        gbc.writeMem(0x3fc, { 0xc3, 0x6, 0x98 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3a51, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03CA
        gbc.setState(0x9e19, 0x8d96, 0x4a10, 0x247b, 0xfb, 0x86ec, 0x0, 0x0);
        gbc.writeMem(0x9e19, { 0xc3, 0xf7, 0xf6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8d96, gbc.sp());
        EXPECT(0xf6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9e19));
        EXPECT(0xf7, gbc.readMem(0x9e1a));
        EXPECT(0xf6, gbc.readMem(0x9e1b));
        // C3 03CB
        gbc.setState(0xcccd, 0xa8b2, 0xc510, 0xc93, 0xf9a6, 0x663, 0x0, 0x1);
        gbc.writeMem(0xcccd, { 0xc3, 0x24, 0x4e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa8b2, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcccd));
        EXPECT(0x24, gbc.readMem(0xccce));
        EXPECT(0x4e, gbc.readMem(0xcccf));
        // C3 03CC
        gbc.setState(0x3985, 0x9680, 0x2190, 0xc7ea, 0xe821, 0x9085, 0x1, 0x1);
        gbc.writeMem(0x3985, { 0xc3, 0x27, 0xf9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9680, gbc.sp());
        EXPECT(0xf927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03CD
        gbc.setState(0xbea4, 0x1bf3, 0x1c80, 0xe85f, 0xd79d, 0x9441, 0x1, 0x0);
        gbc.writeMem(0xbea4, { 0xc3, 0x86, 0x6b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1bf3, gbc.sp());
        EXPECT(0x6b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbea4));
        EXPECT(0x86, gbc.readMem(0xbea5));
        EXPECT(0x6b, gbc.readMem(0xbea6));
        // C3 03CE
        gbc.setState(0x3616, 0x8526, 0x89c0, 0x463f, 0x333b, 0x57ad, 0x1, 0x1);
        gbc.writeMem(0x3616, { 0xc3, 0x2f, 0xe1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8526, gbc.sp());
        EXPECT(0xe12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03CF
        gbc.setState(0x7133, 0xe8e2, 0xc30, 0xbb86, 0x768f, 0x2dcc, 0x1, 0x1);
        gbc.writeMem(0x7133, { 0xc3, 0x16, 0x45 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe8e2, gbc.sp());
        EXPECT(0x4516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03D0
        gbc.setState(0x37f8, 0x1e4, 0xdd90, 0x61a6, 0x54e7, 0xca64, 0x1, 0x1);
        gbc.writeMem(0x37f8, { 0xc3, 0x69, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1e4, gbc.sp());
        EXPECT(0xad69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03D1
        gbc.setState(0xb494, 0xce27, 0xeeb0, 0x9e42, 0xfbc0, 0xeb49, 0x0, 0x0);
        gbc.writeMem(0xb494, { 0xc3, 0x8d, 0xed });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xce27, gbc.sp());
        EXPECT(0xed8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb494));
        EXPECT(0x8d, gbc.readMem(0xb495));
        EXPECT(0xed, gbc.readMem(0xb496));
        // C3 03D2
        gbc.setState(0xba54, 0x9b84, 0x3060, 0x853d, 0x4555, 0xecd6, 0x0, 0x0);
        gbc.writeMem(0xba54, { 0xc3, 0x53, 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9b84, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xba54));
        EXPECT(0x53, gbc.readMem(0xba55));
        EXPECT(0xa3, gbc.readMem(0xba56));
        // C3 03D3
        gbc.setState(0x562c, 0x2117, 0xfe0, 0xbad5, 0x3831, 0xb7bb, 0x0, 0x1);
        gbc.writeMem(0x562c, { 0xc3, 0xb9, 0x5e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2117, gbc.sp());
        EXPECT(0x5eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03D4
        gbc.setState(0x6596, 0xda97, 0x1a20, 0xcf4f, 0xbb8c, 0xc668, 0x0, 0x1);
        gbc.writeMem(0x6596, { 0xc3, 0xd4, 0x66 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x66d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03D5
        gbc.setState(0x36c1, 0x4923, 0x8a20, 0x5c05, 0xc846, 0xcb9, 0x0, 0x0);
        gbc.writeMem(0x36c1, { 0xc3, 0xf4, 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4923, gbc.sp());
        EXPECT(0x92f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03D6
        gbc.setState(0x7c6b, 0xbfac, 0xcec0, 0xa95d, 0xefae, 0xee86, 0x1, 0x1);
        gbc.writeMem(0x7c6b, { 0xc3, 0x53, 0x67 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0x6753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03D7
        gbc.setState(0xabe7, 0x5de6, 0xdc00, 0x4e0b, 0x5c1, 0xcee0, 0x1, 0x1);
        gbc.writeMem(0xabe7, { 0xc3, 0xe4, 0xab });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5de6, gbc.sp());
        EXPECT(0xabe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xabe7));
        EXPECT(0xe4, gbc.readMem(0xabe8));
        EXPECT(0xab, gbc.readMem(0xabe9));
        // C3 03D8
        gbc.setState(0x6a2f, 0xbbe9, 0xfe60, 0x5e0b, 0x5669, 0x4f7c, 0x0, 0x0);
        gbc.writeMem(0x6a2f, { 0xc3, 0xc2, 0xf6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbbe9, gbc.sp());
        EXPECT(0xf6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03D9
        gbc.setState(0xcc13, 0xf8ff, 0x6a0, 0xcce1, 0x4e31, 0xb049, 0x1, 0x0);
        gbc.writeMem(0xcc13, { 0xc3, 0xc9, 0x67 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf8ff, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcc13));
        EXPECT(0xc9, gbc.readMem(0xcc14));
        EXPECT(0x67, gbc.readMem(0xcc15));
        // C3 03DB
        gbc.setState(0x8eaa, 0xc7a3, 0x2110, 0xaef2, 0x6f01, 0xa38a, 0x1, 0x1);
        gbc.writeMem(0x8eaa, { 0xc3, 0x3b, 0xcc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc7a3, gbc.sp());
        EXPECT(0xcc3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8eaa));
        EXPECT(0x3b, gbc.readMem(0x8eab));
        EXPECT(0xcc, gbc.readMem(0x8eac));
        // C3 03DC
        gbc.setState(0xbb9, 0x7904, 0xfb80, 0x8ad5, 0x393e, 0xdab3, 0x1, 0x1);
        gbc.writeMem(0xbb9, { 0xc3, 0xe5, 0xfa });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7904, gbc.sp());
        EXPECT(0xfae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03DD
        gbc.setState(0x38e2, 0xf87a, 0x28c0, 0xaf0f, 0x8d44, 0x20a6, 0x0, 0x1);
        gbc.writeMem(0x38e2, { 0xc3, 0x35, 0x1b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0x1b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03DE
        gbc.setState(0xb7b6, 0x5684, 0x2d00, 0x6d97, 0x3e67, 0x6303, 0x1, 0x1);
        gbc.writeMem(0xb7b6, { 0xc3, 0x76, 0xe8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5684, gbc.sp());
        EXPECT(0xe876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb7b6));
        EXPECT(0x76, gbc.readMem(0xb7b7));
        EXPECT(0xe8, gbc.readMem(0xb7b8));
        // C3 03DF
        gbc.setState(0x1367, 0xaee2, 0x1d70, 0xdd8d, 0xb2fb, 0xfd38, 0x1, 0x1);
        gbc.writeMem(0x1367, { 0xc3, 0xd8, 0x83 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaee2, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03E0
        gbc.setState(0x3a93, 0x1e4d, 0xf320, 0x82aa, 0xe5b3, 0xde03, 0x0, 0x0);
        gbc.writeMem(0x3a93, { 0xc3, 0xaf, 0xaf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1e4d, gbc.sp());
        EXPECT(0xafaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03E1
        gbc.setState(0x5b09, 0xf765, 0x4800, 0x3ebc, 0x20fe, 0x811e, 0x1, 0x0);
        gbc.writeMem(0x5b09, { 0xc3, 0xf2, 0x3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf765, gbc.sp());
        EXPECT(0x3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03E2
        gbc.setState(0x5407, 0x8c14, 0x6c60, 0x9d1d, 0x8e89, 0x6983, 0x1, 0x0);
        gbc.writeMem(0x5407, { 0xc3, 0xd, 0x27 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8c14, gbc.sp());
        EXPECT(0x270d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C3 03E4
        gbc.setState(0x7a50, 0x16b6, 0xabb0, 0xca9a, 0x2615, 0x9c7b, 0x0, 0x1);
        gbc.writeMem(0x7a50, { 0xc3, 0xd8, 0x7c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0x7cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C3 03E5
        gbc.setState(0xa325, 0xad50, 0xaaf0, 0xa6c1, 0x6601, 0xa747, 0x1, 0x1);
        gbc.writeMem(0xa325, { 0xc3, 0x4e, 0x6b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa325));
        EXPECT(0x4e, gbc.readMem(0xa326));
        EXPECT(0x6b, gbc.readMem(0xa327));
        // C3 03E6
        gbc.setState(0xcb94, 0x2e5f, 0xb4c0, 0x2329, 0x831f, 0x4156, 0x0, 0x0);
        gbc.writeMem(0xcb94, { 0xc3, 0x74, 0xc5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2e5f, gbc.sp());
        EXPECT(0xc574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcb94));
        EXPECT(0x74, gbc.readMem(0xcb95));
        EXPECT(0xc5, gbc.readMem(0xcb96));
        // C3 03E7
        gbc.setState(0x688f, 0x6524, 0xa920, 0xdd2f, 0xc1c4, 0xf141, 0x0, 0x1);
        gbc.writeMem(0x688f, { 0xc3, 0x38, 0x3b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6524, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
